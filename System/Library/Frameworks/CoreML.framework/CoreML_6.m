CoreML::Specification::GLMClassifier_DoubleArray *CoreML::Specification::GLMClassifier_DoubleArray::GLMClassifier_DoubleArray(CoreML::Specification::GLMClassifier_DoubleArray *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1EF0D6938;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  if (this != (CoreML::Specification::GLMClassifier_DoubleArray *)&CoreML::Specification::_GLMClassifier_DoubleArray_default_instance_) {
    CoreML::Specification::protobuf_GLMClassifier_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 9) = 0;
  return this;
}

void sub_19EB3C140(_Unwind_Exception *a1)
{
  v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::GLMClassifier_DoubleArray>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    v3 = result;
    result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::GLMClassifier_DoubleArray>;
    v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::GLMClassifier_DoubleArray>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

uint64_t CoreML::Specification::GLMClassifier::GetCachedSize(CoreML::Specification::GLMClassifier *this)
{
  return *((unsigned int *)this + 20);
}

uint64_t CoreML::Specification::GLMClassifier::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
      this = google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)1, *(void *)(*(void *)(v5 + 32) + 8 * i + 8), a2, a4);
  }
  if (*(int *)(v5 + 40) > 0)
  {
    if (*((int *)a2 + 4) < 5)
    {
      __src[0] = 18;
      google::protobuf::io::CodedOutputStream::WriteRaw(a2, __src, 1);
      int v8 = *((_DWORD *)a2 + 4);
    }
    else
    {
      *(unsigned char *)(*((void *)a2 + 1))++ = 18;
      int v8 = *((_DWORD *)a2 + 4) - 1;
      *((_DWORD *)a2 + 4) = v8;
    }
    unsigned int v9 = *(_DWORD *)(v5 + 56);
    if (v8 < 5)
    {
      google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v9);
    }
    else
    {
      uint64_t v10 = *((void *)a2 + 1);
      if (v9 < 0x80)
      {
        unsigned int v12 = *(_DWORD *)(v5 + 56);
        v11 = (unsigned char *)*((void *)a2 + 1);
      }
      else
      {
        v11 = (unsigned char *)*((void *)a2 + 1);
        do
        {
          *v11++ = v9 | 0x80;
          unsigned int v12 = v9 >> 7;
          unsigned int v13 = v9 >> 14;
          v9 >>= 7;
        }
        while (v13);
      }
      unsigned char *v11 = v12;
      int v14 = v11 - v10 + 1;
      *((void *)a2 + 1) += v14;
      *((_DWORD *)a2 + 4) -= v14;
    }
    uint64_t v15 = *(void *)(v5 + 48);
    if (v15) {
      v16 = (char *)(v15 + 8);
    }
    else {
      v16 = 0;
    }
    this = google::protobuf::io::CodedOutputStream::WriteRaw(a2, v16, 8 * *(_DWORD *)(v5 + 40));
  }
  signed int v17 = *(_DWORD *)(v5 + 60);
  if (v17) {
    this = google::protobuf::internal::WireFormatLite::WriteEnum(3, v17, a2, a4);
  }
  signed int v18 = *(_DWORD *)(v5 + 64);
  if (v18) {
    this = google::protobuf::internal::WireFormatLite::WriteEnum(4, v18, a2, a4);
  }
  int v19 = *(_DWORD *)(v5 + 84);
  if (v19 == 100)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)0x64, *(void *)(v5 + 72), a2, a4);
    int v19 = *(_DWORD *)(v5 + 84);
  }
  if (v19 == 101)
  {
    uint64_t v20 = *(void *)(v5 + 72);
    return google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)0x65, v20, a2, a4);
  }
  return this;
}

uint64_t CoreML::Specification::GLMClassifier::ByteSizeLong(CoreML::Specification::GLMClassifier *this)
{
  int v2 = *((_DWORD *)this + 6);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = *((void *)this + 4);
    uint64_t v5 = *((unsigned int *)this + 6);
    do
    {
      int v6 = *(unsigned int **)(v4 + 8 * v3 + 8);
      uint64_t v7 = v6[4];
      uint64_t v8 = 8 * v7;
      if (v7)
      {
        if ((v8 & 0x80000000) != 0) {
          uint64_t v9 = 11;
        }
        else {
          uint64_t v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
        }
      }
      else
      {
        uint64_t v9 = 0;
      }
      uint64_t v10 = v9 + v8;
      v6[8] = v8;
      v6[9] = v10;
      v5 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v5 = 0;
  }
  uint64_t v11 = *((unsigned int *)this + 10);
  uint64_t v12 = 8 * v11;
  if (v11)
  {
    if ((v12 & 0x80000000) != 0) {
      uint64_t v13 = 11;
    }
    else {
      uint64_t v13 = ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v5 += v13;
  }
  *((_DWORD *)this + 14) = v12;
  uint64_t v14 = v5 + v12;
  int v15 = *((_DWORD *)this + 15);
  if (v15)
  {
    if (v15 < 0) {
      uint64_t v16 = 11;
    }
    else {
      uint64_t v16 = ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v14 += v16;
  }
  int v17 = *((_DWORD *)this + 16);
  if (v17)
  {
    if (v17 < 0) {
      uint64_t v18 = 11;
    }
    else {
      uint64_t v18 = ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v14 += v18;
  }
  int v19 = *((_DWORD *)this + 21);
  if (v19 == 101)
  {
    uint64_t v20 = CoreML::Specification::Int64Vector::ByteSizeLong(*((CoreML::Specification::Int64Vector **)this + 9));
    goto LABEL_30;
  }
  if (v19 == 100)
  {
    uint64_t v20 = CoreML::Specification::StringVector::ByteSizeLong(*((CoreML::Specification::StringVector **)this + 9));
LABEL_30:
    v14 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
  *((_DWORD *)this + 20) = v14;
  return v14;
}

uint64_t CoreML::Specification::GLMClassifier::MergePartialFromCodedStream(CoreML::Specification::GLMClassifier *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 40);
  int v6 = (CoreML::Specification::GLMClassifier *)((char *)this + 16);
  while (1)
  {
LABEL_2:
    uint64_t v7 = *(unsigned __int8 **)a2;
    unint64_t v8 = *((void *)a2 + 1);
    if (*(void *)a2 >= v8)
    {
      LODWORD(v10) = 0;
      goto LABEL_107;
    }
    uint64_t v9 = v7 + 1;
    uint64_t v10 = *v7;
    if ((char)*v7 >= 1)
    {
      *(void *)a2 = v9;
      unint64_t v11 = v10 | 0x100000000;
      if ((v11 & 0x100000000) != 0) {
        goto LABEL_9;
      }
      goto LABEL_108;
    }
    if ((unint64_t)v9 < v8)
    {
      int v12 = *v9;
      if ((v10 & ~v12) >= 0x80) {
        break;
      }
    }
LABEL_107:
    unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v10);
    unint64_t v11 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
    if ((v11 & 0x100000000) != 0) {
      goto LABEL_9;
    }
LABEL_108:
    if (v11) {
      BOOL v67 = (v11 & 7) == 4;
    }
    else {
      BOOL v67 = 1;
    }
    if (v67) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v11, a3) & 1) == 0) {
      return 0;
    }
  }
  *(void *)a2 = v7 + 2;
  unint64_t v11 = (v10 + (v12 << 7) - 128) | 0x100000000;
LABEL_9:
  unsigned int v13 = v11 >> 3;
  switch(v11 >> 3)
  {
    case 1u:
      if (v11 != 10) {
        goto LABEL_108;
      }
      uint64_t v14 = (int *)*((void *)this + 4);
      if (!v14)
      {
        int v15 = *((_DWORD *)this + 6);
        int v16 = *((_DWORD *)this + 7);
LABEL_55:
        if (v15 <= v16)
        {
          google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(v6, v16 - v15 + 1);
          uint64_t v14 = (int *)*((void *)this + 4);
        }
        int v16 = *v14;
        goto LABEL_58;
      }
      int v15 = *((_DWORD *)this + 6);
      int v16 = *v14;
      if (v15 < *v14)
      {
        *((_DWORD *)this + 6) = v15 + 1;
        Aligned = *(google::protobuf::Arena ***)&v14[2 * v15 + 2];
        goto LABEL_63;
      }
      if (v16 == *((_DWORD *)this + 7)) {
        goto LABEL_55;
      }
LABEL_58:
      *uint64_t v14 = v16 + 1;
      v39 = *(google::protobuf::Arena **)v6;
      if (!*(void *)v6) {
        operator new();
      }
      CoreML::Specification::GLMClassifier_DoubleArray::GLMClassifier_DoubleArray((CoreML::Specification::GLMClassifier_DoubleArray *)Aligned);
      v40 = google::protobuf::Arena::AllocateAligned(v39, 0, 24);
      *v40 = (google::protobuf::Arena *)Aligned;
      v40[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::GLMClassifier_DoubleArray>;
      v41 = (unint64_t *)((char *)v39 + 32);
      do
        unint64_t v42 = __ldxr(v41);
      while (__stxr((unint64_t)v40, v41));
      v40[2] = (google::protobuf::Arena *)v42;
      uint64_t v43 = *((void *)this + 4);
      uint64_t v44 = *((int *)this + 6);
      *((_DWORD *)this + 6) = v44 + 1;
      *(void *)(v43 + 8 * v44 + 8) = Aligned;
LABEL_63:
      v45 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v45 < 0)
      {
        int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (VarintSizeAsIntFallback < 0) {
          return 0;
        }
      }
      else
      {
        int VarintSizeAsIntFallback = *v45;
        *(void *)a2 = v45 + 1;
      }
      int v47 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      int v49 = *((_DWORD *)a2 + 13);
      BOOL v33 = __OFSUB__(v49--, 1);
      *((_DWORD *)a2 + 13) = v49;
      if (v49 < 0 != v33) {
        return 0;
      }
      int v34 = v47;
      uint64_t result = CoreML::Specification::GLMClassifier_DoubleArray::MergePartialFromCodedStream((CoreML::Specification::GLMClassifier_DoubleArray *)Aligned, (char **)a2, v48);
      if (result) {
        goto LABEL_69;
      }
      return result;
    case 2u:
      if (v11 == 17)
      {
        if (google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<double,(google::protobuf::internal::WireFormatLite::FieldType)1>(18, (unint64_t **)a2, (uint64_t)v5))
        {
          goto LABEL_2;
        }
        return 0;
      }
      if (v11 != 18) {
        goto LABEL_108;
      }
      int v19 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v19 < 0)
      {
        unsigned int v20 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if ((v20 & 0x80000000) != 0) {
          return 0;
        }
      }
      else
      {
        unsigned int v20 = *v19;
        *(void *)a2 = v19 + 1;
      }
      if ((v20 & 7) != 0) {
        return 0;
      }
      int v50 = *((_DWORD *)a2 + 12);
      if (v50 == 0x7FFFFFFF) {
        int v51 = -1;
      }
      else {
        int v51 = v50 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
      }
      int v52 = *((_DWORD *)a2 + 10);
      if (v52 == 0x7FFFFFFF) {
        int v53 = -1;
      }
      else {
        int v53 = v52 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
      }
      signed int v54 = *v5;
      unsigned int v55 = v20 >> 3;
      if (v53 >= v51) {
        int v56 = v51;
      }
      else {
        int v56 = v53;
      }
      if (v51 == -1) {
        int v57 = v53;
      }
      else {
        int v57 = v56;
      }
      if (v57 < (uint64_t)v20)
      {
        if (v20 < 8) {
          goto LABEL_2;
        }
        if (v55 <= 1) {
          int v58 = 1;
        }
        else {
          int v58 = v20 >> 3;
        }
        while (1)
        {
          unint64_t v70 = 0;
          v59 = *(unint64_t **)a2;
          if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) < 8)
          {
            uint64_t result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v70);
            if (!result) {
              return result;
            }
            unint64_t v60 = v70;
            signed int v54 = *v5;
          }
          else
          {
            unint64_t v60 = *v59;
            *(void *)a2 = v59 + 1;
          }
          if (v54 == *((_DWORD *)this + 11))
          {
            google::protobuf::RepeatedField<double>::Reserve(v5, v54 + 1);
            signed int v54 = *v5;
          }
          uint64_t v61 = *((void *)this + 6) + 8 * v54;
          *((_DWORD *)this + 10) = v54 + 1;
          *(void *)(v61 + 8) = v60;
          ++v54;
          if (!--v58) {
            goto LABEL_2;
          }
        }
      }
      signed int v62 = v54 + v55;
      if (v20 > 7)
      {
        google::protobuf::RepeatedField<double>::Reserve(v5, v54 + v55);
        uint64_t v63 = *((void *)this + 6);
        uint64_t v64 = 8 * v62 - 8 * *((int *)this + 10);
        if (v64 >= 1) {
          bzero((void *)(v63 + 8 + 8 * *((int *)this + 10)), 8 * (((unint64_t)v64 >> 3) - ((unint64_t)v64 > 7)) + 8);
        }
      }
      else
      {
        uint64_t v63 = *((void *)this + 6);
      }
      *uint64_t v5 = v62;
      uint64_t v65 = v63 + 8;
      if (!v63) {
        uint64_t v65 = 0;
      }
      if (google::protobuf::io::CodedInputStream::ReadRaw(a2, (char *)(v65 + 8 * v54), v20)) {
        goto LABEL_2;
      }
      if ((int)*v5 < 1) {
        return 0;
      }
      uint64_t result = 0;
      *uint64_t v5 = v54;
      return result;
    case 3u:
      if (v11 != 24) {
        goto LABEL_108;
      }
      v21 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        int v22 = 0;
      }
      else
      {
        int v22 = *v21;
        if ((*v21 & 0x80000000) == 0)
        {
          *(void *)a2 = v21 + 1;
LABEL_116:
          *((_DWORD *)this + 15) = v22;
          goto LABEL_2;
        }
      }
      uint64_t Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v22);
      int v22 = Varint32Fallback;
      if (Varint32Fallback < 0) {
        return 0;
      }
      goto LABEL_116;
    case 4u:
      if (v11 != 32) {
        goto LABEL_108;
      }
      v23 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        int v24 = 0;
      }
      else
      {
        int v24 = *v23;
        if ((*v23 & 0x80000000) == 0)
        {
          *(void *)a2 = v23 + 1;
          goto LABEL_119;
        }
      }
      uint64_t v69 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v24);
      int v24 = v69;
      if (v69 < 0) {
        return 0;
      }
LABEL_119:
      *((_DWORD *)this + 16) = v24;
      goto LABEL_2;
    default:
      if (v13 == 100)
      {
        if (v11 != 34) {
          goto LABEL_108;
        }
        if (*((_DWORD *)this + 21) != 100)
        {
          CoreML::Specification::GLMClassifier::clear_ClassLabels((uint64_t)this);
          *((_DWORD *)this + 21) = 100;
          operator new();
        }
        v25 = (CoreML::Specification::StringVector *)*((void *)this + 9);
        v28 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v28 < 0)
        {
          int v29 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v29 < 0) {
            return 0;
          }
        }
        else
        {
          int v29 = *v28;
          *(void *)a2 = v28 + 1;
        }
        int v36 = google::protobuf::io::CodedInputStream::PushLimit(a2, v29);
        int v38 = *((_DWORD *)a2 + 13);
        BOOL v33 = __OFSUB__(v38--, 1);
        *((_DWORD *)a2 + 13) = v38;
        if (v38 < 0 != v33) {
          return 0;
        }
        int v34 = v36;
        uint64_t result = CoreML::Specification::StringVector::MergePartialFromCodedStream(v25, (char **)a2, v37);
        if (!result) {
          return result;
        }
      }
      else
      {
        if (v13 != 101 || v11 != 42) {
          goto LABEL_108;
        }
        if (*((_DWORD *)this + 21) != 101)
        {
          CoreML::Specification::GLMClassifier::clear_ClassLabels((uint64_t)this);
          *((_DWORD *)this + 21) = 101;
          operator new();
        }
        uint64_t v18 = (CoreML::Specification::Int64Vector *)*((void *)this + 9);
        v26 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v26 < 0)
        {
          int v27 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v27 < 0) {
            return 0;
          }
        }
        else
        {
          int v27 = *v26;
          *(void *)a2 = v26 + 1;
        }
        int v30 = google::protobuf::io::CodedInputStream::PushLimit(a2, v27);
        int v32 = *((_DWORD *)a2 + 13);
        BOOL v33 = __OFSUB__(v32--, 1);
        *((_DWORD *)a2 + 13) = v32;
        if (v32 < 0 != v33) {
          return 0;
        }
        int v34 = v30;
        uint64_t result = CoreML::Specification::Int64Vector::MergePartialFromCodedStream(v18, a2, v31);
        if (!result) {
          return result;
        }
      }
LABEL_69:
      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v34)) {
        return 0;
      }
      goto LABEL_2;
  }
}

void sub_19EB3CC78(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::GLMClassifier::clear_ClassLabels(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 84);
  if (v2 == 101 || v2 == 100)
  {
    this = *(void *)(this + 72);
    if (this) {
      this = (*(uint64_t (**)(uint64_t))(*(void *)this + 8))(this);
    }
  }
  *(_DWORD *)(v1 + 84) = 0;
  return this;
}

std::string *CoreML::Specification::GLMClassifier::MergeFrom(std::string *this, const CoreML::Specification::GLMClassifier *a2)
{
  uint64_t v3 = (uint64_t)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  unsigned int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    int v6 = (CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts **)(*((void *)a2 + 4) + 8);
    uint64_t v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 16), *((_DWORD *)a2 + 6));
    this = (std::string *)google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<CoreML::Specification::GLMClassifier_DoubleArray>::TypeHandler>((unint64_t *)(v3 + 16), (CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts **)v7, v6, v5, **(_DWORD **)(v3 + 32) - *(_DWORD *)(v3 + 24));
    signed int v8 = *(_DWORD *)(v3 + 24) + v5;
    *(_DWORD *)(v3 + 24) = v8;
    uint64_t v9 = *(signed int **)(v3 + 32);
    if (*v9 < v8) {
      *uint64_t v9 = v8;
    }
  }
  int v10 = *((_DWORD *)a2 + 10);
  if (v10)
  {
    google::protobuf::RepeatedField<double>::Reserve((unsigned int *)(v3 + 40), *(_DWORD *)(v3 + 40) + v10);
    this = (std::string *)memcpy((void *)(*(void *)(v3 + 48) + 8 * *(int *)(v3 + 40) + 8), (const void *)(*((void *)a2 + 6) + 8), 8 * *((int *)a2 + 10));
    *(_DWORD *)(v3 + 40) += *((_DWORD *)a2 + 10);
  }
  int v11 = *((_DWORD *)a2 + 15);
  if (v11) {
    *(_DWORD *)(v3 + 60) = v11;
  }
  int v12 = *((_DWORD *)a2 + 16);
  if (v12) {
    *(_DWORD *)(v3 + 64) = v12;
  }
  int v13 = *((_DWORD *)a2 + 21);
  if (v13 == 101)
  {
    if (*(_DWORD *)(v3 + 84) != 101)
    {
      CoreML::Specification::GLMClassifier::clear_ClassLabels(v3);
      *(_DWORD *)(v3 + 84) = 101;
      operator new();
    }
    int v15 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts *)*((void *)a2 + 9);
    int v17 = *(unint64_t **)(v3 + 72);
    return (std::string *)CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts::MergeFrom(v17, v15);
  }
  else if (v13 == 100)
  {
    if (*(_DWORD *)(v3 + 84) != 100)
    {
      CoreML::Specification::GLMClassifier::clear_ClassLabels(v3);
      *(_DWORD *)(v3 + 84) = 100;
      operator new();
    }
    uint64_t v14 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedStrings *)*((void *)a2 + 9);
    int v16 = *(std::string **)(v3 + 72);
    return CoreML::Specification::MILSpec::TensorValue_RepeatedStrings::MergeFrom(v16, v14);
  }
  return this;
}

void sub_19EB3CF74(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::GLMClassifier::IsInitialized(CoreML::Specification::GLMClassifier *this)
{
  return 1;
}

uint64_t CoreML::Specification::GLMClassifier::Clear(uint64_t this)
{
  uint64_t v1 = *(unsigned int *)(this + 24);
  if ((int)v1 >= 1)
  {
    int v2 = (uint64_t *)(*(void *)(this + 32) + 8);
    do
    {
      uint64_t v3 = *v2++;
      *(_DWORD *)(v3 + 16) = 0;
      --v1;
    }
    while (v1);
    *(_DWORD *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 40) = 0;
  *(void *)(this + 60) = 0;
  return CoreML::Specification::GLMClassifier::clear_ClassLabels(this);
}

void CoreML::Specification::GLMClassifier::New(CoreML::Specification::GLMClassifier *this, google::protobuf::Arena *a2)
{
}

void sub_19EB3D03C(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C40D1CF0537);
  _Unwind_Resume(a1);
}

CoreML::Specification::GLMClassifier *CoreML::Specification::GLMClassifier::GLMClassifier(CoreML::Specification::GLMClassifier *this)
{
  *(_OWORD *)((char *)this + 8) = 0u;
  *(void *)this = &unk_1EF0CFD28;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  if (this != (CoreML::Specification::GLMClassifier *)&CoreML::Specification::_GLMClassifier_default_instance_) {
    CoreML::Specification::protobuf_GLMClassifier_2eproto::InitDefaults(this);
  }
  *(void *)((char *)this + 60) = 0;
  *((void *)this + 10) = 0;
  return this;
}

void sub_19EB3D0DC(_Unwind_Exception *a1)
{
  unsigned int v5 = *(void **)(v2 + 48);
  if (v5)
  {
    if (!*v5) {
      operator delete(v5);
    }
  }
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::NeuralNetworkPreprocessing>::TypeHandler>(v3);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::GLMClassifier>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::GLMClassifier>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::GLMClassifier>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::GLMClassifier::New(CoreML::Specification::GLMClassifier *this)
{
}

void *CoreML::Specification::GLMClassifier::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.GLMClassifier");
}

void CoreML::Specification::GLMClassifier::~GLMClassifier(CoreML::Specification::GLMClassifier *this)
{
  CoreML::Specification::GLMClassifier::~GLMClassifier(this);

  JUMPOUT(0x19F3C1920);
}

{
  void *v2;

  *(void *)this = &unk_1EF0CFD28;
  if (*((_DWORD *)this + 21)) {
    CoreML::Specification::GLMClassifier::clear_ClassLabels((uint64_t)this);
  }
  uint64_t v2 = (void *)*((void *)this + 6);
  if (v2 && !*v2) {
    operator delete(v2);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::NeuralNetworkPreprocessing>::TypeHandler>((void *)this + 2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

void CoreML::Specification::GLMClassifier_DoubleArray::New(CoreML::Specification::GLMClassifier_DoubleArray *this)
{
}

void *CoreML::Specification::GLMClassifier_DoubleArray::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.GLMClassifier.DoubleArray");
}

void CoreML::Specification::GLMClassifier_DoubleArray::~GLMClassifier_DoubleArray(CoreML::Specification::GLMClassifier_DoubleArray *this)
{
  CoreML::Specification::GLMClassifier_DoubleArray::~GLMClassifier_DoubleArray(this);

  JUMPOUT(0x19F3C1920);
}

{
  void *v2;

  *(void *)this = &unk_1EF0D6938;
  uint64_t v2 = (void *)*((void *)this + 3);
  if (v2 && !*v2) {
    operator delete(v2);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::Imputer::GetCachedSize(CoreML::Specification::Imputer *this)
{
  return *((unsigned int *)this + 8);
}

uint64_t CoreML::Specification::Imputer::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, google::protobuf::io::CodedOutputStream *a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 36);
  if (v6 == 1)
  {
    this = google::protobuf::internal::WireFormatLite::WriteDouble(1, a2, *(double *)(this + 16), a3);
    int v6 = *(_DWORD *)(v5 + 36);
  }
  if (v6 == 2)
  {
    this = google::protobuf::internal::WireFormatLite::WriteInt64(2, *(void *)(v5 + 16), a2, a4);
    int v6 = *(_DWORD *)(v5 + 36);
  }
  if (v6 == 3)
  {
    uint64_t v7 = *(unsigned int **)(v5 + 16);
    if (*((char *)v7 + 23) < 0)
    {
      uint64_t v7 = *(unsigned int **)v7;
      uint64_t v8 = *(void *)(*(void *)(v5 + 16) + 8);
    }
    else
    {
      LODWORD(v8) = *((unsigned __int8 *)v7 + 23);
    }
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v7, v8, 1, (uint64_t)"CoreML.Specification.Imputer.imputedStringValue");
    if (*(_DWORD *)(v5 + 36) == 3) {
      uint64_t v9 = *(long long **)(v5 + 16);
    }
    else {
      uint64_t v9 = &google::protobuf::internal::fixed_address_empty_string;
    }
    this = google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(3u, (uint64_t)v9, a2);
    int v6 = *(_DWORD *)(v5 + 36);
  }
  if (v6 == 4)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)4, *(void *)(v5 + 16), a2, a4);
    int v6 = *(_DWORD *)(v5 + 36);
  }
  if (v6 == 5)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)5, *(void *)(v5 + 16), a2, a4);
    int v6 = *(_DWORD *)(v5 + 36);
  }
  if (v6 == 6)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)6, *(void *)(v5 + 16), a2, a4);
    int v6 = *(_DWORD *)(v5 + 36);
  }
  if (v6 == 7) {
    this = google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)7, *(void *)(v5 + 16), a2, a4);
  }
  int v10 = *(_DWORD *)(v5 + 40);
  if (v10 == 11)
  {
    this = google::protobuf::internal::WireFormatLite::WriteDouble(11, a2, *(double *)(v5 + 24), a3);
    int v10 = *(_DWORD *)(v5 + 40);
  }
  if (v10 == 12)
  {
    this = google::protobuf::internal::WireFormatLite::WriteInt64(12, *(void *)(v5 + 24), a2, a4);
    int v10 = *(_DWORD *)(v5 + 40);
  }
  if (v10 == 13)
  {
    int v11 = *(unsigned int **)(v5 + 24);
    if (*((char *)v11 + 23) < 0)
    {
      int v11 = *(unsigned int **)v11;
      uint64_t v12 = *(void *)(*(void *)(v5 + 24) + 8);
    }
    else
    {
      LODWORD(v12) = *((unsigned __int8 *)v11 + 23);
    }
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v11, v12, 1, (uint64_t)"CoreML.Specification.Imputer.replaceStringValue");
    if (*(_DWORD *)(v5 + 40) == 13) {
      int v13 = *(long long **)(v5 + 24);
    }
    else {
      int v13 = &google::protobuf::internal::fixed_address_empty_string;
    }
    return google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0xDu, (uint64_t)v13, a2);
  }
  return this;
}

uint64_t CoreML::Specification::Imputer::ByteSizeLong(CoreML::Specification::Imputer *this)
{
  switch(*((_DWORD *)this + 9))
  {
    case 1:
      uint64_t v2 = 9;
      break;
    case 2:
      unint64_t v3 = (9 * (__clz(*((void *)this + 2) | 1) ^ 0x3F) + 73) >> 6;
      goto LABEL_18;
    case 3:
      uint64_t v4 = *((void *)this + 2);
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      unint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
      goto LABEL_18;
    case 4:
      uint64_t v7 = (unsigned int *)*((void *)this + 2);
      uint64_t v8 = v7[4];
      uint64_t v9 = 8 * v8;
      if (v8)
      {
        if ((v9 & 0x80000000) != 0) {
          uint64_t v10 = 11;
        }
        else {
          uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
        }
      }
      else
      {
        uint64_t v10 = 0;
      }
      uint64_t v12 = v10 + v9;
      v7[8] = v9;
      v7[9] = v12;
      unint64_t v3 = v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6);
      goto LABEL_18;
    case 5:
      uint64_t v11 = CoreML::Specification::Int64Vector::ByteSizeLong(*((CoreML::Specification::Int64Vector **)this + 2));
      goto LABEL_14;
    case 6:
      uint64_t v11 = CoreML::Specification::StringToDoubleMap::ByteSizeLong(*((CoreML::Specification::StringToDoubleMap **)this
                                                                   + 2));
      goto LABEL_14;
    case 7:
      uint64_t v11 = CoreML::Specification::Int64ToDoubleMap::ByteSizeLong(*((CoreML::Specification::Int64ToDoubleMap **)this + 2));
LABEL_14:
      unint64_t v3 = v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6);
LABEL_18:
      uint64_t v2 = v3 + 1;
      break;
    default:
      uint64_t v2 = 0;
      break;
  }
  int v13 = *((_DWORD *)this + 10);
  switch(v13)
  {
    case 13:
      uint64_t v15 = *((void *)this + 3);
      uint64_t v16 = *(unsigned __int8 *)(v15 + 23);
      uint64_t v17 = *(void *)(v15 + 8);
      if ((v16 & 0x80u) == 0) {
        uint64_t v17 = v16;
      }
      uint64_t v18 = v2 + v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6);
      goto LABEL_28;
    case 12:
      uint64_t v18 = v2 + ((9 * (__clz(*((void *)this + 3) | 1) ^ 0x3F) + 73) >> 6);
LABEL_28:
      uint64_t result = v18 + 1;
      break;
    case 11:
      uint64_t result = v2 + 9;
      break;
    default:
      uint64_t result = v2;
      break;
  }
  *((_DWORD *)this + 8) = result;
  return result;
}

uint64_t CoreML::Specification::Imputer::MergePartialFromCodedStream(CoreML::Specification::Imputer *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (std::string **)((char *)this + 24);
  uint64_t v6 = (std::string **)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      uint64_t v7 = *(char **)a2;
      if (*(void *)a2 < *((void *)a2 + 1)) {
        break;
      }
      LODWORD(v8) = 0;
LABEL_7:
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v8);
      unint64_t v9 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v9 & 0x100000000) == 0) {
        goto LABEL_8;
      }
LABEL_14:
      switch(v9 >> 3)
      {
        case 1u:
          if (v9 != 9) {
            goto LABEL_8;
          }
          CoreML::Specification::Imputer::clear_ImputedValue((uint64_t)this);
          unint64_t v56 = 0;
          uint64_t v12 = *(unint64_t **)a2;
          if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) < 8)
          {
            uint64_t result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v56);
            if (!result) {
              return result;
            }
            unint64_t v13 = v56;
          }
          else
          {
            unint64_t v13 = *v12;
            *(void *)a2 = v12 + 1;
          }
          *((void *)this + 2) = v13;
          *((_DWORD *)this + 9) = 1;
          continue;
        case 2u:
          if (v9 != 16) {
            goto LABEL_8;
          }
          CoreML::Specification::Imputer::clear_ImputedValue((uint64_t)this);
          uint64_t v14 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v14 < 0)
          {
            unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v39 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            unint64_t Varint64Fallback = *v14;
            *(void *)a2 = v14 + 1;
          }
          *((void *)this + 2) = Varint64Fallback;
          *((_DWORD *)this + 9) = 2;
          continue;
        case 3u:
          if (v9 != 26) {
            goto LABEL_8;
          }
          if (*((_DWORD *)this + 9) != 3)
          {
            CoreML::Specification::Imputer::clear_ImputedValue((uint64_t)this);
            *((_DWORD *)this + 9) = 3;
            *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
LABEL_52:
            google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
          }
          if (*v6 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
            goto LABEL_52;
          }
          uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((unsigned __int8 **)a2, *v6);
          if (!result) {
            return result;
          }
          int v25 = *((_DWORD *)this + 9);
          v26 = (std::string *)&google::protobuf::internal::fixed_address_empty_string;
          if (v25 == 3) {
            v26 = *v6;
          }
          if (SHIBYTE(v26->__r_.__value_.__r.__words[2]) < 0) {
            v26 = (std::string *)v26->__r_.__value_.__r.__words[0];
          }
          int v27 = (std::string *)&google::protobuf::internal::fixed_address_empty_string;
          if (v25 == 3) {
            int v27 = *v6;
          }
          if (SHIBYTE(v27->__r_.__value_.__r.__words[2]) < 0) {
            std::string::size_type size = v27->__r_.__value_.__l.__size_;
          }
          else {
            LODWORD(size) = HIBYTE(v27->__r_.__value_.__r.__words[2]);
          }
          unsigned int v55 = "CoreML.Specification.Imputer.imputedStringValue";
          goto LABEL_114;
        case 4u:
          if (v9 != 34) {
            goto LABEL_8;
          }
          if (*((_DWORD *)this + 9) != 4)
          {
            CoreML::Specification::Imputer::clear_ImputedValue((uint64_t)this);
            *((_DWORD *)this + 9) = 4;
            operator new();
          }
          uint64_t v16 = *v6;
          int v29 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v29 < 0)
          {
            int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            int VarintSizeAsIntFallback = *v29;
            *(void *)a2 = v29 + 1;
          }
          int v41 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          int v43 = *((_DWORD *)a2 + 13);
          BOOL v44 = __OFSUB__(v43--, 1);
          *((_DWORD *)a2 + 13) = v43;
          if (v43 < 0 != v44) {
            return 0;
          }
          int v45 = v41;
          uint64_t result = CoreML::Specification::DoubleVector::MergePartialFromCodedStream((CoreML::Specification::DoubleVector *)v16, (char **)a2, v42);
          if (!result) {
            return result;
          }
          goto LABEL_108;
        case 5u:
          if (v9 != 42) {
            goto LABEL_8;
          }
          if (*((_DWORD *)this + 9) != 5)
          {
            CoreML::Specification::Imputer::clear_ImputedValue((uint64_t)this);
            *((_DWORD *)this + 9) = 5;
            operator new();
          }
          uint64_t v17 = *v6;
          unsigned int v31 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v31 < 0)
          {
            int v32 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v32 < 0) {
              return 0;
            }
          }
          else
          {
            int v32 = *v31;
            *(void *)a2 = v31 + 1;
          }
          int v46 = google::protobuf::io::CodedInputStream::PushLimit(a2, v32);
          int v48 = *((_DWORD *)a2 + 13);
          BOOL v44 = __OFSUB__(v48--, 1);
          *((_DWORD *)a2 + 13) = v48;
          if (v48 < 0 != v44) {
            return 0;
          }
          int v45 = v46;
          uint64_t result = CoreML::Specification::Int64Vector::MergePartialFromCodedStream((CoreML::Specification::Int64Vector *)v17, a2, v47);
          if (!result) {
            return result;
          }
          goto LABEL_108;
        case 6u:
          if (v9 != 50) {
            goto LABEL_8;
          }
          if (*((_DWORD *)this + 9) != 6)
          {
            CoreML::Specification::Imputer::clear_ImputedValue((uint64_t)this);
            *((_DWORD *)this + 9) = 6;
            operator new();
          }
          uint64_t v18 = *v6;
          BOOL v33 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v33 < 0)
          {
            int v34 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v34 < 0) {
              return 0;
            }
          }
          else
          {
            int v34 = *v33;
            *(void *)a2 = v33 + 1;
          }
          int v49 = google::protobuf::io::CodedInputStream::PushLimit(a2, v34);
          int v51 = *((_DWORD *)a2 + 13);
          BOOL v44 = __OFSUB__(v51--, 1);
          *((_DWORD *)a2 + 13) = v51;
          if (v51 < 0 != v44) {
            return 0;
          }
          int v45 = v49;
          uint64_t result = CoreML::Specification::StringToDoubleMap::MergePartialFromCodedStream((CoreML::Specification::StringToDoubleMap *)v18, a2, v50);
          if (!result) {
            return result;
          }
          goto LABEL_108;
        case 7u:
          if (v9 != 58) {
            goto LABEL_8;
          }
          if (*((_DWORD *)this + 9) != 7)
          {
            CoreML::Specification::Imputer::clear_ImputedValue((uint64_t)this);
            *((_DWORD *)this + 9) = 7;
            operator new();
          }
          int v19 = *v6;
          v35 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v35 < 0)
          {
            int v36 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v36 < 0) {
              return 0;
            }
          }
          else
          {
            int v36 = *v35;
            *(void *)a2 = v35 + 1;
          }
          int v52 = google::protobuf::io::CodedInputStream::PushLimit(a2, v36);
          int v54 = *((_DWORD *)a2 + 13);
          BOOL v44 = __OFSUB__(v54--, 1);
          *((_DWORD *)a2 + 13) = v54;
          if (v54 < 0 != v44) {
            return 0;
          }
          int v45 = v52;
          uint64_t result = CoreML::Specification::Int64ToDoubleMap::MergePartialFromCodedStream((CoreML::Specification::Int64ToDoubleMap *)v19, a2, v53);
          if (!result) {
            return result;
          }
LABEL_108:
          if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v45)) {
            continue;
          }
          return 0;
        case 0xBu:
          if (v9 != 89) {
            goto LABEL_8;
          }
          CoreML::Specification::Imputer::clear_ReplaceValue((uint64_t)this);
          unint64_t v56 = 0;
          unsigned int v20 = *(unint64_t **)a2;
          if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) < 8)
          {
            uint64_t result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v56);
            if (!result) {
              return result;
            }
            unint64_t v21 = v56;
          }
          else
          {
            unint64_t v21 = *v20;
            *(void *)a2 = v20 + 1;
          }
          *((void *)this + 3) = v21;
          *((_DWORD *)this + 1CoreML::Specification::GLMClassifier_DoubleArray::New(this, 0) = 11;
          break;
        case 0xCu:
          if (v9 != 96) {
            goto LABEL_8;
          }
          CoreML::Specification::Imputer::clear_ReplaceValue((uint64_t)this);
          int v22 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v22 < 0)
          {
            unint64_t v23 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v40 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            unint64_t v23 = *v22;
            *(void *)a2 = v22 + 1;
          }
          *((void *)this + 3) = v23;
          *((_DWORD *)this + 1CoreML::Specification::GLMClassifier_DoubleArray::New(this, 0) = 12;
          continue;
        case 0xDu:
          if (v9 != 106) {
            goto LABEL_8;
          }
          if (*((_DWORD *)this + 10) != 13)
          {
            CoreML::Specification::Imputer::clear_ReplaceValue((uint64_t)this);
            *((_DWORD *)this + 1CoreML::Specification::GLMClassifier_DoubleArray::New(this, 0) = 13;
            *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
LABEL_79:
            google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
          }
          if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
            goto LABEL_79;
          }
          uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((unsigned __int8 **)a2, *v5);
          if (!result) {
            return result;
          }
          int v37 = *((_DWORD *)this + 10);
          v26 = (std::string *)&google::protobuf::internal::fixed_address_empty_string;
          if (v37 == 13) {
            v26 = *v5;
          }
          if (SHIBYTE(v26->__r_.__value_.__r.__words[2]) < 0) {
            v26 = (std::string *)v26->__r_.__value_.__r.__words[0];
          }
          int v38 = (std::string *)&google::protobuf::internal::fixed_address_empty_string;
          if (v37 == 13) {
            int v38 = *v5;
          }
          if (SHIBYTE(v38->__r_.__value_.__r.__words[2]) < 0) {
            std::string::size_type size = v38->__r_.__value_.__l.__size_;
          }
          else {
            LODWORD(size) = HIBYTE(v38->__r_.__value_.__r.__words[2]);
          }
          unsigned int v55 = "CoreML.Specification.Imputer.replaceStringValue";
LABEL_114:
          if (!google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)v26, size, 0, (uint64_t)v55)) {
            return 0;
          }
          continue;
        default:
          goto LABEL_8;
      }
    }
    uint64_t v8 = *v7;
    if (*v7 < 1) {
      goto LABEL_7;
    }
    *(void *)a2 = v7 + 1;
    unint64_t v9 = v8 | 0x100000000;
    if ((v9 & 0x100000000) != 0) {
      goto LABEL_14;
    }
LABEL_8:
    if (!v9 || (v9 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v9, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_19EB3DDB8(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C407031D3CFLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::Imputer::clear_ImputedValue(uint64_t this)
{
  uint64_t v1 = this;
  switch(*(_DWORD *)(this + 36))
  {
    case 3:
      uint64_t v2 = *(void *)(this + 16);
      if ((long long *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
      {
        if (*(char *)(v2 + 23) < 0) {
          operator delete(*(void **)v2);
        }
        this = MEMORY[0x19F3C1920](v2, 0x1012C40EC159624);
      }
      break;
    case 4:
    case 5:
    case 6:
    case 7:
      this = *(void *)(this + 16);
      if (this) {
        this = (*(uint64_t (**)(uint64_t))(*(void *)this + 8))(this);
      }
      break;
    default:
      break;
  }
  *(_DWORD *)(v1 + 36) = 0;
  return this;
}

uint64_t CoreML::Specification::Imputer::clear_ReplaceValue(uint64_t this)
{
  uint64_t v1 = this;
  if (*(_DWORD *)(this + 40) == 13)
  {
    uint64_t v2 = *(void *)(this + 24);
    if ((long long *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
    {
      if (*(char *)(v2 + 23) < 0) {
        operator delete(*(void **)v2);
      }
      this = MEMORY[0x19F3C1920](v2, 0x1012C40EC159624);
    }
  }
  *(_DWORD *)(v1 + 4CoreML::Specification::GLMClassifier_DoubleArray::New(this, 0) = 0;
  return this;
}

std::string *CoreML::Specification::Imputer::MergeFrom(std::string *this, const CoreML::Specification::Imputer *a2)
{
  uint64_t v3 = (uint64_t)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  switch(*((_DWORD *)a2 + 9))
  {
    case 1:
      uint64_t v5 = *((void *)a2 + 2);
      if (*(_DWORD *)(v3 + 36) != 1)
      {
        this = (std::string *)CoreML::Specification::Imputer::clear_ImputedValue(v3);
        *(_DWORD *)(v3 + 36) = 1;
      }
      *(void *)(v3 + 16) = v5;
      goto LABEL_27;
    case 2:
      uint64_t v6 = *((void *)a2 + 2);
      if (*(_DWORD *)(v3 + 36) != 2)
      {
        this = (std::string *)CoreML::Specification::Imputer::clear_ImputedValue(v3);
        *(_DWORD *)(v3 + 36) = 2;
      }
      *(void *)(v3 + 16) = v6;
      goto LABEL_27;
    case 3:
      if (*(_DWORD *)(v3 + 36) != 3)
      {
        CoreML::Specification::Imputer::clear_ImputedValue(v3);
        *(_DWORD *)(v3 + 36) = 3;
        *(void *)(v3 + 16) = &google::protobuf::internal::fixed_address_empty_string;
LABEL_22:
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
      }
      uint64_t v7 = *(long long **)(v3 + 16);
      if (v7 == &google::protobuf::internal::fixed_address_empty_string) {
        goto LABEL_22;
      }
      this = std::string::operator=((std::string *)v7, *((const std::string **)a2 + 2));
LABEL_27:
      int v8 = *((_DWORD *)a2 + 10);
      if (v8 != 13)
      {
        if (v8 == 12)
        {
          uint64_t v12 = *((void *)a2 + 3);
          if (*(_DWORD *)(v3 + 40) != 12)
          {
            this = (std::string *)CoreML::Specification::Imputer::clear_ReplaceValue(v3);
            *(_DWORD *)(v3 + 4CoreML::Specification::GLMClassifier_DoubleArray::New(this, 0) = 12;
          }
          *(void *)(v3 + 24) = v12;
        }
        else if (v8 == 11)
        {
          uint64_t v9 = *((void *)a2 + 3);
          if (*(_DWORD *)(v3 + 40) != 11)
          {
            this = (std::string *)CoreML::Specification::Imputer::clear_ReplaceValue(v3);
            *(_DWORD *)(v3 + 4CoreML::Specification::GLMClassifier_DoubleArray::New(this, 0) = 11;
          }
          *(void *)(v3 + 24) = v9;
        }
        return this;
      }
      uint64_t v10 = (const std::string *)*((void *)a2 + 3);
      if (*(_DWORD *)(v3 + 40) != 13)
      {
        CoreML::Specification::Imputer::clear_ReplaceValue(v3);
        *(_DWORD *)(v3 + 4CoreML::Specification::GLMClassifier_DoubleArray::New(this, 0) = 13;
        *(void *)(v3 + 24) = &google::protobuf::internal::fixed_address_empty_string;
LABEL_43:
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
      }
      uint64_t v11 = *(long long **)(v3 + 24);
      if (v11 == &google::protobuf::internal::fixed_address_empty_string) {
        goto LABEL_43;
      }
      return std::string::operator=((std::string *)v11, v10);
    case 4:
      if (*(_DWORD *)(v3 + 36) != 4)
      {
        CoreML::Specification::Imputer::clear_ImputedValue(v3);
        *(_DWORD *)(v3 + 36) = 4;
        operator new();
      }
      goto LABEL_14;
    case 5:
      if (*(_DWORD *)(v3 + 36) != 5)
      {
        CoreML::Specification::Imputer::clear_ImputedValue(v3);
        *(_DWORD *)(v3 + 36) = 5;
        operator new();
      }
LABEL_14:
      this = (std::string *)CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts::MergeFrom(*(unint64_t **)(v3 + 16), *((const CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts **)a2 + 2));
      goto LABEL_27;
    case 6:
      if (*(_DWORD *)(v3 + 36) != 6)
      {
        CoreML::Specification::Imputer::clear_ImputedValue(v3);
        *(_DWORD *)(v3 + 36) = 6;
        operator new();
      }
      this = (std::string *)CoreML::Specification::StringToDoubleMap::MergeFrom(*(CoreML::Specification::StringToDoubleMap **)(v3 + 16), *((const CoreML::Specification::StringToDoubleMap **)a2 + 2));
      goto LABEL_27;
    case 7:
      if (*(_DWORD *)(v3 + 36) != 7)
      {
        CoreML::Specification::Imputer::clear_ImputedValue(v3);
        *(_DWORD *)(v3 + 36) = 7;
        operator new();
      }
      this = (std::string *)CoreML::Specification::Int64ToDoubleMap::MergeFrom(*(CoreML::Specification::Int64ToDoubleMap **)(v3 + 16), *((const CoreML::Specification::Int64ToDoubleMap **)a2 + 2));
      goto LABEL_27;
    default:
      goto LABEL_27;
  }
}

void sub_19EB3E364(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C407031D3CFLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::Imputer::IsInitialized(CoreML::Specification::Imputer *this)
{
  return 1;
}

uint64_t CoreML::Specification::Imputer::Clear(CoreML::Specification::Imputer *this)
{
  CoreML::Specification::Imputer::clear_ImputedValue((uint64_t)this);

  return CoreML::Specification::Imputer::clear_ReplaceValue((uint64_t)this);
}

void CoreML::Specification::Imputer::New(CoreML::Specification::Imputer *this, google::protobuf::Arena *a2)
{
}

void sub_19EB3E454(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A3C40D8CFA532);
  _Unwind_Resume(a1);
}

CoreML::Specification::Imputer *CoreML::Specification::Imputer::Imputer(CoreML::Specification::Imputer *this)
{
  *(void *)this = &unk_1EF0D9788;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::Imputer *)&CoreML::Specification::_Imputer_default_instance_) {
    CoreML::Specification::protobuf_Imputer_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 1CoreML::Specification::GLMClassifier_DoubleArray::New(this, 0) = 0;
  *((void *)this + 4) = 0;
  return this;
}

void sub_19EB3E4DC(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::Imputer>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::Imputer>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::Imputer>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::Imputer::New(CoreML::Specification::Imputer *this)
{
}

void *CoreML::Specification::Imputer::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.Imputer");
}

void CoreML::Specification::Imputer::~Imputer(CoreML::Specification::Imputer *this)
{
  CoreML::Specification::Imputer::~Imputer(this);

  JUMPOUT(0x19F3C1920);
}

{
  *(void *)this = &unk_1EF0D9788;
  if (*((_DWORD *)this + 9)) {
    CoreML::Specification::Imputer::clear_ImputedValue((uint64_t)this);
  }
  if (*((_DWORD *)this + 10)) {
    CoreML::Specification::Imputer::clear_ReplaceValue((uint64_t)this);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

BOOL CoreML::hasSufficientBytesInQuantizedWeightParam(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = &CoreML::Specification::_QuantizationParams_default_instance_;
  uint64_t v3 = a1[8];
  if (v3) {
    uint64_t v2 = (uint64_t *)a1[8];
  }
  uint64_t v4 = a1[5];
  LODWORD(v5) = *(unsigned __int8 *)(v4 + 23);
  if (*(char *)(v4 + 23) < 0) {
    uint64_t v6 = *(void *)(v4 + 8);
  }
  else {
    uint64_t v6 = *(unsigned __int8 *)(v4 + 23);
  }
  uint64_t v7 = a1[6];
  LODWORD(v8) = *(unsigned __int8 *)(v7 + 23);
  if (*(char *)(v7 + 23) < 0) {
    uint64_t v9 = *(void *)(v7 + 8);
  }
  else {
    uint64_t v9 = *(unsigned __int8 *)(v7 + 23);
  }
  int v10 = *((_DWORD *)a1 + 4);
  uint64_t v11 = a1[7];
  LODWORD(v12) = *(unsigned __int8 *)(v11 + 23);
  if (*(char *)(v11 + 23) < 0) {
    uint64_t v13 = *(void *)(v11 + 8);
  }
  else {
    uint64_t v13 = *(unsigned __int8 *)(v11 + 23);
  }
  uint64_t v14 = v2[2];
  if (v10 <= 0) {
    int v15 = 1;
  }
  else {
    int v15 = 2;
  }
  if (v6) {
    unsigned int v16 = v15;
  }
  else {
    unsigned int v16 = v10 > 0;
  }
  if (v9) {
    ++v16;
  }
  if (v13) {
    ++v16;
  }
  if (v16 > 1)
  {
LABEL_23:
    LODWORD(v5) = 0;
    return (int)v5 >= (unint64_t)(v14 * a2 + 7) >> 3;
  }
  if (v10 <= 0 && v16)
  {
    if ((v5 & 0x80) != 0)
    {
      uint64_t v5 = *(void *)(v4 + 8);
      if (v5) {
        return (int)v5 >= (unint64_t)(v14 * a2 + 7) >> 3;
      }
    }
    else if (*(unsigned char *)(v4 + 23))
    {
      return (int)v5 >= (unint64_t)(v14 * a2 + 7) >> 3;
    }
    if ((v8 & 0x80) != 0)
    {
      BOOL v18 = a1 != &CoreML::Specification::_WeightParams_default_instance_;
      BOOL v19 = v3 != 0;
      if (!v3) {
        goto LABEL_43;
      }
      if (a1 == &CoreML::Specification::_WeightParams_default_instance_) {
        goto LABEL_43;
      }
      uint64_t v8 = *(void *)(v7 + 8);
      if (!v8) {
        goto LABEL_43;
      }
    }
    else
    {
      BOOL v18 = a1 != &CoreML::Specification::_WeightParams_default_instance_;
      BOOL v19 = v3 != 0;
      if (!v3 || a1 == &CoreML::Specification::_WeightParams_default_instance_ || !*(unsigned char *)(v7 + 23))
      {
LABEL_43:
        if ((v12 & 0x80) != 0)
        {
          uint64_t v12 = *(void *)(v11 + 8);
          BOOL v20 = v12 == 0;
        }
        else
        {
          BOOL v20 = v12 == 0;
        }
        BOOL v21 = !v20 && v18;
        if (v19 && v21)
        {
          LODWORD(v5) = v12;
          return (int)v5 >= (unint64_t)(v14 * a2 + 7) >> 3;
        }
        goto LABEL_23;
      }
    }
    LODWORD(v5) = v8;
    return (int)v5 >= (unint64_t)(v14 * a2 + 7) >> 3;
  }
  if (v16) {
    LODWORD(v5) = 4 * v10;
  }
  else {
    LODWORD(v5) = 0;
  }
  return (int)v5 >= (unint64_t)(v14 * a2 + 7) >> 3;
}

uint64_t CoreML::Specification::CustomModel_CustomModelParamValue::GetCachedSize(CoreML::Specification::CustomModel_CustomModelParamValue *this)
{
  return *((unsigned int *)this + 6);
}

uint64_t CoreML::Specification::CustomModel_CustomModelParamValue::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, google::protobuf::io::CodedOutputStream *a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 28);
  if (v6 == 10)
  {
    this = google::protobuf::internal::WireFormatLite::WriteDouble(10, a2, *(double *)(this + 16), a3);
    int v6 = *(_DWORD *)(v5 + 28);
  }
  if (v6 == 20)
  {
    uint64_t v7 = *(unsigned int **)(v5 + 16);
    if (*((char *)v7 + 23) < 0)
    {
      uint64_t v7 = *(unsigned int **)v7;
      uint64_t v8 = *(void *)(*(void *)(v5 + 16) + 8);
    }
    else
    {
      LODWORD(v8) = *((unsigned __int8 *)v7 + 23);
    }
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v7, v8, 1, (uint64_t)"CoreML.Specification.CustomModel.CustomModelParamValue.stringValue");
    if (*(_DWORD *)(v5 + 28) == 20) {
      uint64_t v9 = *(long long **)(v5 + 16);
    }
    else {
      uint64_t v9 = &google::protobuf::internal::fixed_address_empty_string;
    }
    this = google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0x14u, (uint64_t)v9, a2);
    int v6 = *(_DWORD *)(v5 + 28);
  }
  if (v6 == 30)
  {
    this = google::protobuf::internal::WireFormatLite::WriteInt32(30, *(_DWORD *)(v5 + 16), a2, a4);
    int v6 = *(_DWORD *)(v5 + 28);
  }
  if (v6 == 40)
  {
    this = google::protobuf::internal::WireFormatLite::WriteInt64(40, *(void *)(v5 + 16), a2, a4);
    int v6 = *(_DWORD *)(v5 + 28);
  }
  if (v6 == 50)
  {
    this = google::protobuf::internal::WireFormatLite::WriteBool(50, *(unsigned __int8 *)(v5 + 16), a2, a4);
    int v6 = *(_DWORD *)(v5 + 28);
  }
  if (v6 == 60)
  {
    uint64_t v10 = *(void *)(v5 + 16);
    return google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(0x3Cu, v10, a2);
  }
  return this;
}

uint64_t CoreML::Specification::CustomModel_CustomModelParamValue::ByteSizeLong(CoreML::Specification::CustomModel_CustomModelParamValue *this)
{
  uint64_t v1 = 0;
  int v2 = *((_DWORD *)this + 7);
  if (v2 <= 39)
  {
    if (v2 == 10)
    {
      uint64_t v1 = 9;
      goto LABEL_18;
    }
    if (v2 != 20)
    {
      if (v2 == 30)
      {
        int v3 = *((_DWORD *)this + 4);
        uint64_t v4 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 2;
        if (v3 >= 0) {
          uint64_t v1 = v4;
        }
        else {
          uint64_t v1 = 12;
        }
      }
      goto LABEL_18;
    }
    goto LABEL_11;
  }
  switch(v2)
  {
    case '(':
      unint64_t v8 = (9 * (__clz(*((void *)this + 2) | 1) ^ 0x3F) + 73) >> 6;
LABEL_16:
      uint64_t v1 = v8 + 2;
      break;
    case '2':
      uint64_t v1 = 3;
      break;
    case '<':
LABEL_11:
      uint64_t v5 = *((void *)this + 2);
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v7 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        uint64_t v7 = v6;
      }
      unint64_t v8 = v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      goto LABEL_16;
  }
LABEL_18:
  *((_DWORD *)this + 6) = v1;
  return v1;
}

uint64_t CoreML::Specification::CustomModel_CustomModelParamValue::MergePartialFromCodedStream(CoreML::Specification::CustomModel_CustomModelParamValue *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (std::string **)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v6 = *(unsigned __int8 **)a2;
        unint64_t v7 = *((void *)a2 + 1);
        if (*(void *)a2 >= v7)
        {
          LODWORD(v9) = 0;
        }
        else
        {
          unint64_t v8 = v6 + 1;
          uint64_t v9 = *v6;
          if ((char)*v6 >= 1)
          {
            *(void *)a2 = v8;
            unint64_t v10 = v9 | 0x100000000;
            if ((v10 & 0x100000000) == 0) {
              goto LABEL_9;
            }
            goto LABEL_17;
          }
          if ((unint64_t)v8 < v7)
          {
            int v11 = *v8;
            if ((v9 & ~v11) >= 0x80)
            {
              *(void *)a2 = v6 + 2;
              unint64_t v10 = (v9 + (v11 << 7) - 128) | 0x100000000;
              goto LABEL_17;
            }
          }
        }
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v9);
        unint64_t v10 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
        if ((v10 & 0x100000000) == 0) {
          goto LABEL_9;
        }
LABEL_17:
        unsigned int v14 = v10 >> 3;
        if (v10 >> 3 <= 0x27) {
          break;
        }
        if (v14 == 40)
        {
          if (v10 != 64) {
            goto LABEL_9;
          }
          CoreML::Specification::CustomModel_CustomModelParamValue::clear_value((uint64_t)this);
          BOOL v19 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v19 < 0)
          {
            unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v28 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            unint64_t Varint64Fallback = *v19;
            *(void *)a2 = v19 + 1;
          }
          *uint64_t v5 = (std::string *)Varint64Fallback;
          goto LABEL_73;
        }
        if (v14 == 50)
        {
          if (v10 != 144) {
            goto LABEL_9;
          }
          CoreML::Specification::CustomModel_CustomModelParamValue::clear_value((uint64_t)this);
          BOOL v21 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v21 < 0)
          {
            unint64_t v22 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v29 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            unint64_t v22 = *v21;
            *(void *)a2 = v21 + 1;
          }
          *(unsigned char *)uint64_t v5 = v22 != 0;
LABEL_73:
          *((_DWORD *)this + 7) = v14;
        }
        else
        {
          if (v14 != 60 || v10 != 226) {
            goto LABEL_9;
          }
          if (*((_DWORD *)this + 7) != 60)
          {
            CoreML::Specification::CustomModel_CustomModelParamValue::clear_value((uint64_t)this);
            *((_DWORD *)this + 7) = 60;
            *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
LABEL_49:
            google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
          }
          if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
            goto LABEL_49;
          }
          if ((google::protobuf::internal::WireFormatLite::ReadBytes((unsigned __int8 **)a2, *v5) & 1) == 0) {
            return 0;
          }
        }
      }
      if (v14 == 10)
      {
        if (v10 != 81) {
          goto LABEL_9;
        }
        CoreML::Specification::CustomModel_CustomModelParamValue::clear_value((uint64_t)this);
        unint64_t v31 = 0;
        uint64_t v17 = *(unint64_t **)a2;
        if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) < 8)
        {
          uint64_t result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v31);
          if (!result) {
            return result;
          }
          unint64_t v18 = v31;
        }
        else
        {
          unint64_t v18 = *v17;
          *(void *)a2 = v17 + 1;
        }
        *uint64_t v5 = (std::string *)v18;
        goto LABEL_73;
      }
      if (v14 == 20) {
        break;
      }
      if (v14 == 30 && v10 == 240)
      {
        CoreML::Specification::CustomModel_CustomModelParamValue::clear_value((uint64_t)this);
        int v15 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1))
        {
          int v16 = 0;
        }
        else
        {
          int v16 = *v15;
          if ((*v15 & 0x80000000) == 0)
          {
            *(void *)a2 = v15 + 1;
LABEL_72:
            *(_DWORD *)uint64_t v5 = v16;
            goto LABEL_73;
          }
        }
        uint64_t Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v16);
        int v16 = Varint32Fallback;
        if (Varint32Fallback < 0) {
          return 0;
        }
        goto LABEL_72;
      }
LABEL_9:
      if (v10) {
        BOOL v12 = (v10 & 7) == 4;
      }
      else {
        BOOL v12 = 1;
      }
      if (v12) {
        return 1;
      }
      if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v10, a3) & 1) == 0) {
        return 0;
      }
    }
    if (v10 != 162) {
      goto LABEL_9;
    }
    if (*((_DWORD *)this + 7) != 20)
    {
      CoreML::Specification::CustomModel_CustomModelParamValue::clear_value((uint64_t)this);
      *((_DWORD *)this + 7) = 20;
      *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
LABEL_53:
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
    }
    if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_53;
    }
    uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((unsigned __int8 **)a2, *v5);
    if (!result) {
      return result;
    }
    int v24 = *((_DWORD *)this + 7);
    int v25 = (std::string *)&google::protobuf::internal::fixed_address_empty_string;
    if (v24 == 20) {
      int v25 = *v5;
    }
    if (SHIBYTE(v25->__r_.__value_.__r.__words[2]) < 0) {
      int v25 = (std::string *)v25->__r_.__value_.__r.__words[0];
    }
    v26 = (std::string *)&google::protobuf::internal::fixed_address_empty_string;
    if (v24 == 20) {
      v26 = *v5;
    }
    if (SHIBYTE(v26->__r_.__value_.__r.__words[2]) < 0) {
      std::string::size_type size = v26->__r_.__value_.__l.__size_;
    }
    else {
      LODWORD(size) = HIBYTE(v26->__r_.__value_.__r.__words[2]);
    }
  }
  while (google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)v25, size, 0, (uint64_t)"CoreML.Specification.CustomModel.CustomModelParamValue.stringValue"));
  return 0;
}

uint64_t CoreML::Specification::CustomModel_CustomModelParamValue::clear_value(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 28);
  if (v2 == 60 || v2 == 20)
  {
    uint64_t v3 = *(void *)(this + 16);
    if ((long long *)v3 != &google::protobuf::internal::fixed_address_empty_string && v3 != 0)
    {
      if (*(char *)(v3 + 23) < 0) {
        operator delete(*(void **)v3);
      }
      this = MEMORY[0x19F3C1920](v3, 0x1012C40EC159624);
    }
  }
  *(_DWORD *)(v1 + 28) = 0;
  return this;
}

std::string *CoreML::Specification::CustomModel_CustomModelParamValue::MergeFrom(std::string *this, const CoreML::Specification::CustomModel_CustomModelParamValue *a2)
{
  uint64_t v3 = (uint64_t)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 7);
  if (v5 > 39)
  {
    switch(v5)
    {
      case '(':
        uint64_t v10 = *((void *)a2 + 2);
        if (*(_DWORD *)(v3 + 28) != 40)
        {
          this = (std::string *)CoreML::Specification::CustomModel_CustomModelParamValue::clear_value(v3);
          *(_DWORD *)(v3 + 28) = 40;
        }
        *(void *)(v3 + 16) = v10;
        break;
      case '2':
        char v12 = *((unsigned char *)a2 + 16);
        if (*(_DWORD *)(v3 + 28) != 50)
        {
          this = (std::string *)CoreML::Specification::CustomModel_CustomModelParamValue::clear_value(v3);
          *(_DWORD *)(v3 + 28) = 50;
        }
        *(unsigned char *)(v3 + 16) = v12;
        break;
      case '<':
        unint64_t v7 = (const std::string *)*((void *)a2 + 2);
        if (*(_DWORD *)(v3 + 28) == 60) {
          goto LABEL_22;
        }
        CoreML::Specification::CustomModel_CustomModelParamValue::clear_value(v3);
        int v8 = 60;
        goto LABEL_31;
      default:
        return this;
    }
  }
  else
  {
    if (v5 != 10)
    {
      if (v5 != 20)
      {
        if (v5 == 30)
        {
          int v6 = *((_DWORD *)a2 + 4);
          if (*(_DWORD *)(v3 + 28) != 30)
          {
            this = (std::string *)CoreML::Specification::CustomModel_CustomModelParamValue::clear_value(v3);
            *(_DWORD *)(v3 + 28) = 30;
          }
          *(_DWORD *)(v3 + 16) = v6;
        }
        return this;
      }
      unint64_t v7 = (const std::string *)*((void *)a2 + 2);
      if (*(_DWORD *)(v3 + 28) == 20)
      {
LABEL_22:
        int v11 = *(std::string **)(v3 + 16);
        if (v11 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
        {
          return std::string::operator=(v11, v7);
        }
LABEL_32:
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
      }
      CoreML::Specification::CustomModel_CustomModelParamValue::clear_value(v3);
      int v8 = 20;
LABEL_31:
      *(_DWORD *)(v3 + 28) = v8;
      *(void *)(v3 + 16) = &google::protobuf::internal::fixed_address_empty_string;
      goto LABEL_32;
    }
    uint64_t v9 = *((void *)a2 + 2);
    if (*(_DWORD *)(v3 + 28) != 10)
    {
      this = (std::string *)CoreML::Specification::CustomModel_CustomModelParamValue::clear_value(v3);
      *(_DWORD *)(v3 + 28) = 10;
    }
    *(void *)(v3 + 16) = v9;
  }
  return this;
}

uint64_t CoreML::Specification::CustomModel_CustomModelParamValue::IsInitialized(CoreML::Specification::CustomModel_CustomModelParamValue *this)
{
  return 1;
}

void CoreML::Specification::CustomModel_CustomModelParamValue::New(CoreML::Specification::CustomModel_CustomModelParamValue *this, google::protobuf::Arena *a2)
{
}

void sub_19EB3F008(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A3C40EED1C14FLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::CustomModel_CustomModelParamValue *CoreML::Specification::CustomModel_CustomModelParamValue::CustomModel_CustomModelParamValue(CoreML::Specification::CustomModel_CustomModelParamValue *this)
{
  *(void *)this = &unk_1EF0D8CD8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::CustomModel_CustomModelParamValue *)&CoreML::Specification::_CustomModel_CustomModelParamValue_default_instance_) {
    CoreML::Specification::protobuf_CustomModel_2eproto::InitDefaults(this);
  }
  *((void *)this + 3) = 0;
  return this;
}

void sub_19EB3F08C(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::CustomModel_CustomModelParamValue>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::CustomModel_CustomModelParamValue>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::CustomModel_CustomModelParamValue>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void *google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>::~Map(void *a1)
{
  google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>::clear(a1);
  if (!*a1)
  {
    uint64_t v2 = a1[2];
    if (v2)
    {
      uint64_t v3 = google::protobuf::Map<std::string,std::string>::InnerMap::~InnerMap(v2);
      MEMORY[0x19F3C1920](v3, 0x10E0C40D5F42F35);
    }
  }
  return a1;
}

void google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>::clear(void *a1)
{
  uint64_t v1 = (void *)a1[2];
  unint64_t v2 = v1[3];
  unint64_t v3 = v1[1];
  if (v3 > v2)
  {
    uint64_t v5 = v1[4];
    while (1)
    {
      uint64_t v6 = *(void *)(v5 + 8 * v2);
      if (v6) {
        break;
      }
      if (v3 == ++v2) {
        return;
      }
    }
    if (v6 != *(void *)(v5 + 8 * (v2 ^ 1)) || (uint64_t v6 = *(void *)(*(void *)v6 + 32)) != 0)
    {
      do
      {
        v7[0] = v6;
        v7[1] = (uint64_t)v1;
        v7[2] = v2;
        google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>::erase((uint64_t)v8, a1, v7);
        uint64_t v6 = v8[0];
        uint64_t v1 = (void *)v8[1];
        unint64_t v2 = v8[2];
      }
      while (v8[0]);
    }
  }
}

__n128 google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>::erase(uint64_t a1, void *a2, uint64_t *a3)
{
  uint64_t v6 = *a3;
  if (!*a2)
  {
    uint64_t v7 = *(void *)(v6 + 24);
    if (v7)
    {
      uint64_t v8 = google::protobuf::MapPair<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>::~MapPair(v7);
      MEMORY[0x19F3C1920](v8, 0x10B2C4015637A22);
      uint64_t v6 = *a3;
    }
  }
  __n128 v28 = *(__n128 *)a3;
  unint64_t v29 = a3[2];
  uint64_t v9 = *(void *)(v6 + 32);
  if (v9) {
    goto LABEL_5;
  }
  int v30 = 0;
  if (google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::KeyValuePair>::revalidate_if_necessary((uint64_t)a3, (uint64_t *)&v30))
  {
    unint64_t v10 = a3[2] + 1;
  }
  else
  {
    uint64_t v11 = a3[2];
    uint64_t v12 = *(void *)(*(void *)(a3[1] + 32) + 8 * v11);
    uint64_t v13 = (uint64_t)v30;
    unsigned int v14 = (void *)v30[1];
    if (v14)
    {
      do
      {
        int v15 = v14;
        unsigned int v14 = (void *)*v14;
      }
      while (v14);
    }
    else
    {
      do
      {
        int v15 = *(void **)(v13 + 16);
        BOOL v16 = *v15 == v13;
        uint64_t v13 = (uint64_t)v15;
      }
      while (!v16);
    }
    int v30 = v15;
    if (v15 != (void *)(v12 + 8))
    {
      uint64_t v9 = v15[4];
LABEL_5:
      *a3 = v9;
      goto LABEL_17;
    }
    unint64_t v10 = v11 + 2;
  }
  google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>::KeyValuePair const>::SearchFrom(a3, v10);
LABEL_17:
  uint64_t v17 = (void *)a2[2];
  int v30 = 0;
  BOOL v18 = google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::KeyValuePair>::revalidate_if_necessary((uint64_t)&v28, (uint64_t *)&v30);
  unint64_t v19 = v29;
  BOOL v20 = (void **)v28.n128_u64[0];
  uint64_t v21 = v17[4];
  uint64_t v22 = *(void *)(v21 + 8 * v29);
  if (v18)
  {
    uint64_t v23 = google::protobuf::Map<std::string,std::string>::InnerMap::EraseFromLinkedList(v28.n128_i64[0], *(void *)(v21 + 8 * v29));
LABEL_23:
    *(void *)(v17[4] + 8 * v19) = v23;
    goto LABEL_24;
  }
  int v24 = (uint64_t *)std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::find<std::string *>(v22, (void *)v30[4]);
  if ((uint64_t *)(v22 + 8) != v24) {
    std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::erase(v22, v24);
  }
  if (!*(void *)(v22 + 24))
  {
    google::protobuf::Map<std::string,std::string>::InnerMap::DestroyTree(v17[5], (void **)v22);
    uint64_t v23 = 0;
    *(void *)(v17[4] + ((8 * v19) | 8)) = 0;
    v19 &= ~1uLL;
    goto LABEL_23;
  }
LABEL_24:
  google::protobuf::Map<std::string,std::string>::InnerMap::DestroyNode((uint64_t)v17, v20);
  --*v17;
  if (v19 == v17[3])
  {
    unint64_t v26 = v17[1];
    if (v19 < v26)
    {
      uint64_t v27 = v17[4];
      do
      {
        if (*(void *)(v27 + 8 * v19)) {
          break;
        }
        v17[3] = ++v19;
      }
      while (v26 != v19);
    }
  }
  __n128 result = *(__n128 *)a3;
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(void *)(a1 + 16) = a3[2];
  return result;
}

uint64_t CoreML::Specification::CustomModel::GetCachedSize(CoreML::Specification::CustomModel *this)
{
  return *((unsigned int *)this + 16);
}

uint64_t CoreML::Specification::CustomModel::SerializeWithCachedSizes(CoreML::Specification::CustomModel *this, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v4 = (unsigned int *)*((void *)this + 6);
  if (*((char *)v4 + 23) < 0)
  {
    uint64_t v5 = *((void *)v4 + 1);
    if (!v5) {
      goto LABEL_7;
    }
    uint64_t v4 = *(unsigned int **)v4;
    goto LABEL_6;
  }
  LODWORD(v5) = *((unsigned __int8 *)v4 + 23);
  if (*((unsigned char *)v4 + 23))
  {
LABEL_6:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v4, v5, 1, (uint64_t)"CoreML.Specification.CustomModel.className");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0xAu, *((void *)this + 6), a2);
  }
LABEL_7:
  uint64_t v6 = (unint64_t *)*((void *)this + 5);
  unint64_t v7 = *v6;
  if (*v6)
  {
    if (*((unsigned char *)a2 + 26))
    {
      if (v7 >= 2 && *((unsigned char *)a2 + 27) != 0) {
        goto LABEL_30;
      }
    }
    else if (v7 >= 2 && google::protobuf::io::CodedOutputStream::default_serialization_deterministic_ != 0)
    {
LABEL_30:
      operator new[]();
    }
    google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>::begin(v17, v6);
    uint64_t v9 = 0;
    while (v17[0])
    {
      uint64_t v11 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Wrap(*((google::protobuf::Arena **)v17[0] + 3), (google::protobuf::Arena *)(*((void *)v17[0] + 3) + 24), *((google::protobuf::Arena **)this + 2));
      if ((google::protobuf::Arena **)v9 != v11)
      {
        if (v9) {
          (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
        }
        uint64_t v9 = (uint64_t)v11;
      }
      google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)0x1E, v9, a2, v10);
      uint64_t v12 = (unsigned int *)*((void *)v17[0] + 3);
      if (*((char *)v12 + 23) < 0)
      {
        uint64_t v12 = *(unsigned int **)v12;
        uint64_t v13 = *(void *)(*((void *)v17[0] + 3) + 8);
      }
      else
      {
        LODWORD(v13) = *((unsigned __int8 *)v12 + 23);
      }
      google::protobuf::internal::WireFormatLite::VerifyUtf8String(v12, v13, 1, (uint64_t)"CoreML.Specification.CustomModel.ParametersEntry.key");
      google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>::KeyValuePair const>::operator++(v17);
    }
    if (v9) {
      (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
    }
  }
  uint64_t result = *((void *)this + 7);
  if (*(char *)(result + 23) < 0)
  {
    uint64_t v16 = *(void *)(result + 8);
    if (!v16) {
      return result;
    }
    uint64_t result = *(void *)result;
    goto LABEL_36;
  }
  LODWORD(v16) = *(unsigned __int8 *)(result + 23);
  if (*(unsigned char *)(result + 23))
  {
LABEL_36:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)result, v16, 1, (uint64_t)"CoreML.Specification.CustomModel.description");
    return google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0x28u, *((void *)this + 7), a2);
  }
  return result;
}

void sub_19EB3F774(_Unwind_Exception *a1)
{
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  MEMORY[0x19F3C1900](v1, 0x60C8044C4A2DFLL);
  _Unwind_Resume(a1);
}

uint64_t std::__introsort<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,CoreML::Specification::CustomModel_CustomModelParamValue> const*> &,google::protobuf::MapPair<std::string,CoreML::Specification::CustomModel_CustomModelParamValue> const**,false>(uint64_t result, char *a2, uint64_t a3, char a4)
{
  uint64_t v8 = (char *)result;
  while (2)
  {
    v95 = a2 - 8;
    v91 = a2 - 24;
    v92 = a2 - 16;
    uint64_t v9 = v8;
    while (1)
    {
      while (1)
      {
        while (1)
        {
          unint64_t v10 = (unint64_t)v9;
          uint64_t v11 = a2 - v9;
          uint64_t v12 = (a2 - v9) >> 3;
          if (v5 || !v4)
          {
            switch(v12)
            {
              case 0:
              case 1:
                return result;
              case 2:
                int v41 = *(void **)v95;
                unsigned int v42 = *(void **)v9;
                uint64_t result = google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(*(void **)v95, *(void **)v9);
                if (result)
                {
                  *(void *)uint64_t v9 = v41;
                  *(void *)v95 = v42;
                }
                break;
              case 3:
                uint64_t result = std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v9, (void **)v9 + 1, (void **)v95);
                break;
              case 4:
                uint64_t result = std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v9, (void **)v9 + 1, (void **)v9 + 2, (void **)v95);
                break;
              case 5:
                uint64_t result = std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v9, (void **)v9 + 1, (void **)v9 + 2, (void **)v9 + 3, (void **)v95);
                break;
              default:
                JUMPOUT(0);
            }
            return result;
          }
          if (v11 <= 191)
          {
            int v43 = v9 + 8;
            BOOL v45 = v9 == a2 || v43 == a2;
            if (a4)
            {
              if (!v45)
              {
                uint64_t v46 = 0;
                unsigned int v47 = v9;
                do
                {
                  int v49 = *(void **)v47;
                  int v48 = (void *)*((void *)v47 + 1);
                  unsigned int v47 = v43;
                  uint64_t result = google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(v48, v49);
                  if (result)
                  {
                    uint64_t v50 = v46;
                    while (1)
                    {
                      *(void *)&v9[v50 + 8] = v49;
                      if (!v50) {
                        break;
                      }
                      int v49 = *(void **)&v9[v50 - 8];
                      uint64_t result = google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(v48, v49);
                      v50 -= 8;
                      if ((result & 1) == 0)
                      {
                        int v51 = &v9[v50 + 8];
                        goto LABEL_80;
                      }
                    }
                    int v51 = v9;
LABEL_80:
                    *(void *)int v51 = v48;
                  }
                  int v43 = v47 + 8;
                  v46 += 8;
                }
                while (v47 + 8 != a2);
              }
            }
            else if (!v45)
            {
              do
              {
                v87 = *(void **)v10;
                v86 = *(void **)(v10 + 8);
                unint64_t v10 = (unint64_t)v43;
                uint64_t result = google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(v86, v87);
                if (result)
                {
                  v88 = (void *)v10;
                  do
                  {
                    void *v88 = v87;
                    v87 = (void *)*(v88 - 2);
                    uint64_t result = google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(v86, v87);
                    --v88;
                  }
                  while ((result & 1) != 0);
                  void *v88 = v86;
                }
                int v43 = (char *)(v10 + 8);
              }
              while ((char *)(v10 + 8) != a2);
            }
            return result;
          }
          if (!a3)
          {
            if (v9 != a2)
            {
              v98 = v9;
              int64_t v52 = (unint64_t)(v12 - 2) >> 1;
              int64_t v53 = v52;
              v89 = a2;
              uint64_t v90 = a2 - v9;
              do
              {
                int64_t v54 = v53;
                if (v11 >= 16 && v52 >= v53)
                {
                  uint64_t v55 = (2 * v53) | 1;
                  unint64_t v56 = &v98[8 * v55];
                  uint64_t v57 = 2 * v53 + 2;
                  int64_t v96 = v53;
                  if (v57 < v12)
                  {
                    int v58 = *(void **)v56;
                    unint64_t v60 = (void *)*((void *)v56 + 1);
                    BOOL v59 = google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(*(void **)v56, v60);
                    if (v59) {
                      v56 += 8;
                    }
                    else {
                      unint64_t v60 = v58;
                    }
                    if (v59) {
                      uint64_t v55 = v57;
                    }
                  }
                  else
                  {
                    unint64_t v60 = *(void **)v56;
                  }
                  uint64_t v61 = &v98[8 * v54];
                  signed int v62 = *(void **)v61;
                  uint64_t result = google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(v60, *(void **)v61);
                  uint64_t v11 = v90;
                  if ((result & 1) == 0)
                  {
                    do
                    {
                      uint64_t v63 = v56;
                      *(void *)uint64_t v61 = v60;
                      if (v52 < v55) {
                        break;
                      }
                      uint64_t v64 = (2 * v55) | 1;
                      unint64_t v56 = &v98[8 * v64];
                      uint64_t v65 = 2 * v55 + 2;
                      if (v65 < v12)
                      {
                        unint64_t v60 = *(void **)v56;
                        v66 = (void *)*((void *)v56 + 1);
                        if (google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(*(void **)v56, v66))
                        {
                          unint64_t v60 = v66;
                          v56 += 8;
                          uint64_t v55 = v65;
                        }
                        else
                        {
                          uint64_t v55 = v64;
                        }
                      }
                      else
                      {
                        unint64_t v60 = *(void **)v56;
                        uint64_t v55 = (2 * v55) | 1;
                      }
                      uint64_t result = google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(v60, v62);
                      uint64_t v61 = v63;
                    }
                    while (!result);
                    *(void *)uint64_t v63 = v62;
                    a2 = v89;
                    uint64_t v11 = v90;
                    int64_t v54 = v96;
                  }
                }
                int64_t v53 = v54 - 1;
              }
              while (v54);
              uint64_t v67 = (unint64_t)v11 >> 3;
              v68 = v98;
              do
              {
                uint64_t v69 = a2;
                uint64_t v70 = 0;
                uint64_t v71 = v67 - 2;
                v94 = *(void **)v68;
                if (v67 < 2) {
                  uint64_t v71 = v67 - 1;
                }
                uint64_t v72 = v71 >> 1;
                do
                {
                  v73 = &v68[8 * v70 + 8];
                  uint64_t v74 = (2 * v70) | 1;
                  uint64_t v75 = 2 * v70 + 2;
                  if (v75 >= v67)
                  {
                    v78 = *(void **)v73;
                    uint64_t v70 = (2 * v70) | 1;
                  }
                  else
                  {
                    v76 = *(void **)v73;
                    v77 = *(void **)&v68[8 * v70 + 16];
                    uint64_t result = google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(*(void **)v73, v77);
                    if (result) {
                      v78 = v77;
                    }
                    else {
                      v78 = v76;
                    }
                    if (result)
                    {
                      v73 += 8;
                      uint64_t v70 = v75;
                    }
                    else
                    {
                      uint64_t v70 = v74;
                    }
                  }
                  *(void *)v68 = v78;
                  v68 = v73;
                }
                while (v70 <= v72);
                a2 = v69 - 8;
                if (v73 == v69 - 8)
                {
                  *(void *)v73 = v94;
                }
                else
                {
                  *(void *)v73 = *(void *)a2;
                  *(void *)a2 = v94;
                  uint64_t v79 = v73 - v98 + 8;
                  if (v79 >= 9)
                  {
                    unint64_t v80 = (unint64_t)((v79 >> 3) - 2) >> 1;
                    v81 = &v98[8 * v80];
                    v82 = *(void **)v81;
                    v83 = *(void **)v73;
                    uint64_t result = google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(*(void **)v81, *(void **)v73);
                    if (result)
                    {
                      do
                      {
                        v84 = v81;
                        *(void *)v73 = v82;
                        if (!v80) {
                          break;
                        }
                        unint64_t v80 = (v80 - 1) >> 1;
                        v81 = &v98[8 * v80];
                        v82 = *(void **)v81;
                        uint64_t result = google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(*(void **)v81, v83);
                        v73 = v84;
                      }
                      while ((result & 1) != 0);
                      *(void *)v84 = v83;
                    }
                  }
                }
                BOOL v85 = v67-- <= 2;
                v68 = v98;
              }
              while (!v85);
            }
            return result;
          }
          unint64_t v13 = (unint64_t)v12 >> 1;
          unsigned int v14 = &v9[8 * ((unint64_t)v12 >> 1)];
          if ((unint64_t)v11 < 0x401)
          {
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v14, (void **)v9, (void **)v95);
          }
          else
          {
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v9, (void **)v14, (void **)v95);
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v9 + 1, (void **)v14 - 1, (void **)v92);
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v9 + 2, (void **)&v9[8 * v13 + 8], (void **)v91);
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v14 - 1, (void **)v14, (void **)&v9[8 * v13 + 8]);
            int v15 = *(void **)v9;
            *(void *)uint64_t v9 = *(void *)v14;
            *(void *)unsigned int v14 = v15;
          }
          --a3;
          uint64_t v16 = *(void **)v9;
          uint64_t v17 = v9;
          if (a4) {
            break;
          }
          uint64_t v17 = v9;
          if (google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(*((void **)v9 - 1), *(void **)v9))
          {
            break;
          }
          uint64_t result = google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(v16, *(void **)v95);
          if (result)
          {
            do
            {
              unint64_t v31 = (void *)*((void *)v9 + 1);
              v9 += 8;
              uint64_t result = google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(v16, v31);
            }
            while ((result & 1) == 0);
          }
          else
          {
            int v32 = v9 + 8;
            do
            {
              uint64_t v9 = v32;
              if (v32 >= a2) {
                break;
              }
              v32 += 8;
              uint64_t result = google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(v16, *(void **)v9);
            }
            while (!result);
          }
          BOOL v33 = a2;
          if (v9 < a2)
          {
            BOOL v33 = a2;
            do
            {
              int v34 = (void *)*((void *)v33 - 1);
              v33 -= 8;
              uint64_t result = google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(v16, v34);
            }
            while ((result & 1) != 0);
          }
          v35 = a2;
          if (v9 < v33)
          {
            int v36 = *(void **)v9;
            int v37 = *(void **)v33;
            do
            {
              *(void *)uint64_t v9 = v37;
              *(void *)BOOL v33 = v36;
              do
              {
                int v38 = (void *)*((void *)v9 + 1);
                v9 += 8;
                int v36 = v38;
              }
              while (!google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(v16, v38));
              do
              {
                char v39 = (void *)*((void *)v33 - 1);
                v33 -= 8;
                int v37 = v39;
                uint64_t result = google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(v16, v39);
              }
              while ((result & 1) != 0);
            }
            while (v9 < v33);
          }
          char v40 = v9 - 8;
          BOOL v4 = (unint64_t)(v9 - 8) >= v10;
          BOOL v5 = v9 - 8 == (char *)v10;
          a2 = v35;
          if (v9 - 8 != (char *)v10) {
            *(void *)unint64_t v10 = *(void *)v40;
          }
          a4 = 0;
          *(void *)char v40 = v16;
        }
        do
        {
          BOOL v18 = v17;
          BOOL v20 = (void *)*((void *)v17 + 1);
          v17 += 8;
          unint64_t v19 = v20;
        }
        while (google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(v20, v16));
        uint64_t v97 = a3;
        uint64_t v21 = a2;
        if (v18 == (char *)v10)
        {
          uint64_t v21 = a2;
          do
          {
            if (v17 >= v21) {
              break;
            }
            uint64_t v23 = (void *)*((void *)v21 - 1);
            v21 -= 8;
          }
          while (!google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(v23, v16));
        }
        else
        {
          do
          {
            uint64_t v22 = (void *)*((void *)v21 - 1);
            v21 -= 8;
          }
          while (!google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(v22, v16));
        }
        uint64_t v8 = (char *)v10;
        int v24 = a2;
        if (v17 < v21)
        {
          int v25 = *(void **)v21;
          unint64_t v26 = v17;
          uint64_t v27 = v21;
          do
          {
            *(void *)unint64_t v26 = v25;
            *(void *)uint64_t v27 = v19;
            do
            {
              BOOL v18 = v26;
              __n128 v28 = (void *)*((void *)v26 + 1);
              v26 += 8;
              unint64_t v19 = v28;
            }
            while (google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(v28, v16));
            do
            {
              unint64_t v29 = (void *)*((void *)v27 - 1);
              v27 -= 8;
              int v25 = v29;
            }
            while (!google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(v29, v16));
          }
          while (v26 < v27);
        }
        if (v18 != v8) {
          *(void *)uint64_t v8 = *(void *)v18;
        }
        *(void *)BOOL v18 = v16;
        BOOL v4 = v17 >= v21;
        a2 = v24;
        a3 = v97;
        if (v4) {
          break;
        }
LABEL_31:
        uint64_t result = std::__introsort<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,CoreML::Specification::CustomModel_CustomModelParamValue> const*> &,google::protobuf::MapPair<std::string,CoreML::Specification::CustomModel_CustomModelParamValue> const**,false>(v8, v18, v97, a4 & 1);
        a4 = 0;
        uint64_t v9 = v18 + 8;
      }
      BOOL v30 = std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,CoreML::Specification::CustomModel_CustomModelParamValue> const*> &,google::protobuf::MapPair<std::string,CoreML::Specification::CustomModel_CustomModelParamValue> const**>((void **)v8, (void **)v18);
      uint64_t v9 = v18 + 8;
      uint64_t result = std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,CoreML::Specification::CustomModel_CustomModelParamValue> const*> &,google::protobuf::MapPair<std::string,CoreML::Specification::CustomModel_CustomModelParamValue> const**>((void **)v18 + 1, (void **)v24);
      if (result) {
        break;
      }
      if (!v30) {
        goto LABEL_31;
      }
    }
    a2 = v18;
    if (!v30) {
      continue;
    }
    return result;
  }
}

google::protobuf::Arena **google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Wrap(google::protobuf::Arena *a1, google::protobuf::Arena *a2, google::protobuf::Arena *a3)
{
  if (!a3) {
    operator new();
  }
  result[1] = 0;
  result[2] = (google::protobuf::Arena *)&google::protobuf::internal::fixed_address_empty_string;
  result[3] = 0;
  result[4] = a3;
  *uint64_t result = (google::protobuf::Arena *)&unk_1EF0DB430;
  result[6] = a1;
  result[7] = a2;
  *((_DWORD *)result + 1CoreML::Specification::Imputer::New(this, 0) = 3;
  return result;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::MapEntryWrapper::value(uint64_t a1)
{
  return *(void *)(a1 + 56);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::MapEntryWrapper::key(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::InternalSerializeWithCachedSizesToArray(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  uint64_t v6 = (const void **)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 136))(a1);
  *a3 = 10;
  unint64_t v7 = google::protobuf::io::CodedOutputStream::WriteStringWithSizeToArray(v6, a3 + 1);
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 144))(a1);
  *unint64_t v7 = 18;
  uint64_t v9 = v7 + 1;
  unsigned int v10 = (*(uint64_t (**)(uint64_t))(*(void *)v8 + 120))(v8);
  if (v10 < 0x80)
  {
    LOBYTE(v11) = v10;
  }
  else
  {
    do
    {
      *v9++ = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      unsigned int v12 = v10 >> 14;
      v10 >>= 7;
    }
    while (v12);
  }
  *uint64_t v9 = v11;
  unint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, unsigned char *))(*(void *)v8 + 128);

  return v13(v8, a2, v9 + 1);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::GetCachedSize(_DWORD *a1)
{
  int v2 = a1[10];
  if (v2)
  {
    uint64_t v6 = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 136))(a1);
    int v7 = *(unsigned __int8 *)(v6 + 23);
    if ((v7 & 0x80u) != 0) {
      int v7 = *(_DWORD *)(v6 + 8);
    }
    unsigned int v3 = v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((a1[10] & 2) != 0) {
      goto LABEL_3;
    }
LABEL_7:
    unsigned int v5 = 0;
    return v5 + v3;
  }
  unsigned int v3 = 0;
  if ((v2 & 2) == 0) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v4 = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 144))(a1);
  unsigned int v5 = *(_DWORD *)(v4 + 24) + ((9 * (__clz(*(_DWORD *)(v4 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
  return v5 + v3;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::SerializeWithCachedSizes(uint64_t a1, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 136))(a1);
  google::protobuf::internal::WireFormatLite::WriteString(1u, v4, a2);
  unsigned int v5 = (google::protobuf::internal::WireFormatLite *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 144))(a1);

  return google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(v5, a2, v6, v7);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::ByteSizeLong(_DWORD *a1)
{
  int v2 = a1[10];
  if (v2)
  {
    uint64_t v7 = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 136))(a1);
    int v8 = *(unsigned __int8 *)(v7 + 23);
    if ((v8 & 0x80u) != 0) {
      int v8 = *(_DWORD *)(v7 + 8);
    }
    uint64_t v3 = (int)(v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6)) + 1;
    if ((a1[10] & 2) != 0) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v6 = 0;
    return v6 + v3;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) == 0) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v4 = (CoreML::Specification::CustomModel_CustomModelParamValue *)(*(uint64_t (**)(_DWORD *))(*(void *)a1 + 144))(a1);
  uint64_t v5 = CoreML::Specification::CustomModel_CustomModelParamValue::ByteSizeLong(v4);
  uint64_t v6 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  return v6 + v3;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::MergePartialFromCodedStream(uint64_t a1, google::protobuf::io::CodedInputStream *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = *(char **)this;
        if (*(void *)this >= *((void *)this + 1))
        {
          LODWORD(TagFallback) = 0;
        }
        else
        {
          unint64_t TagFallback = *v5;
          if ((*v5 & 0x80000000) == 0)
          {
            *(void *)this = v5 + 1;
            goto LABEL_6;
          }
        }
        unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(this, TagFallback);
LABEL_6:
        if (TagFallback != 10) {
          break;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v7 = *(long long **)(a1 + 16);
        if (v7 == &google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstance();
        }
        uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((unsigned __int8 **)this, (std::string *)v7);
        if (!result) {
          return result;
        }
        int v9 = *(_DWORD *)(a1 + 40) | 1;
        *(_DWORD *)(a1 + 4CoreML::Specification::Imputer::New(this, 0) = v9;
        unsigned int v10 = *(char **)this;
        if (*(void *)this < *((void *)this + 1) && *v10 == 18)
        {
          *(void *)this = v10 + 1;
          goto LABEL_19;
        }
      }
      if (TagFallback != 18) {
        break;
      }
      int v9 = *(_DWORD *)(a1 + 40);
LABEL_19:
      *(_DWORD *)(a1 + 4CoreML::Specification::Imputer::New(this, 0) = v9 | 2;
      Aligned = *(google::protobuf::Arena ***)(a1 + 24);
      if (!Aligned)
      {
        unsigned int v12 = *(google::protobuf::Arena **)(a1 + 32);
        if (!v12) {
          operator new();
        }
        CoreML::Specification::CustomModel_CustomModelParamValue::CustomModel_CustomModelParamValue((CoreML::Specification::CustomModel_CustomModelParamValue *)Aligned);
        unint64_t v13 = google::protobuf::Arena::AllocateAligned(v12, 0, 24);
        *unint64_t v13 = (google::protobuf::Arena *)Aligned;
        v13[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::CustomModel_CustomModelParamValue>;
        unsigned int v14 = (unint64_t *)((char *)v12 + 32);
        do
          unint64_t v15 = __ldxr(v14);
        while (__stxr((unint64_t)v13, v14));
        v13[2] = (google::protobuf::Arena *)v15;
        *(void *)(a1 + 24) = Aligned;
      }
      uint64_t v16 = *(char **)this;
      if (*(void *)this >= *((void *)this + 1) || *v16 < 0)
      {
        int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(this);
        if (VarintSizeAsIntFallback < 0) {
          return 0;
        }
      }
      else
      {
        int VarintSizeAsIntFallback = *v16;
        *(void *)this = v16 + 1;
      }
      int v18 = google::protobuf::io::CodedInputStream::PushLimit(this, VarintSizeAsIntFallback);
      int v20 = *((_DWORD *)this + 13);
      BOOL v21 = __OFSUB__(v20--, 1);
      *((_DWORD *)this + 13) = v20;
      if (v20 < 0 != v21) {
        return 0;
      }
      int v22 = v18;
      uint64_t result = CoreML::Specification::CustomModel_CustomModelParamValue::MergePartialFromCodedStream((CoreML::Specification::CustomModel_CustomModelParamValue *)Aligned, this, v19);
      if (!result) {
        return result;
      }
      uint64_t result = google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(this, v22);
      if (!result) {
        return result;
      }
      *(_DWORD *)(a1 + 40) |= 2u;
      if (*(void *)this == *((void *)this + 1)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(this, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

void sub_19EB40660(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A3C40EED1C14FLL);
  _Unwind_Resume(a1);
}

std::string *google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::CheckTypeAndMergeFrom(std::string *result, _DWORD *a2)
{
  int v2 = a2[10];
  if (v2)
  {
    uint64_t v4 = result;
    if (v2)
    {
      uint64_t v5 = (std::string **)&result->__r_.__value_.__r.__words[2];
      if ((long long *)result->__r_.__value_.__r.__words[2] == &google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstance();
      }
      uint64_t v6 = (const std::string *)(*(uint64_t (**)(_DWORD *))(*(void *)a2 + 136))(a2);
      if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstance();
      }
      uint64_t result = std::string::operator=(*v5, v6);
      LODWORD(v4[1].__r_.__value_.__r.__words[2]) |= 1u;
      int v2 = a2[10];
    }
    if ((v2 & 2) != 0)
    {
      if (!v4[1].__r_.__value_.__r.__words[0])
      {
        std::string::size_type size = (google::protobuf::Arena *)v4[1].__r_.__value_.__l.__size_;
        if (!size) {
          operator new();
        }
        CoreML::Specification::CustomModel_CustomModelParamValue::CustomModel_CustomModelParamValue((CoreML::Specification::CustomModel_CustomModelParamValue *)Aligned);
        int v9 = google::protobuf::Arena::AllocateAligned(size, 0, 24);
        *int v9 = (google::protobuf::Arena *)Aligned;
        v9[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::CustomModel_CustomModelParamValue>;
        unsigned int v10 = (unint64_t *)((char *)size + 32);
        do
          unint64_t v11 = __ldxr(v10);
        while (__stxr((unint64_t)v9, v10));
        v9[2] = (google::protobuf::Arena *)v11;
        v4[1].__r_.__value_.__r.__words[0] = (std::string::size_type)Aligned;
      }
      unsigned int v12 = (const CoreML::Specification::CustomModel_CustomModelParamValue *)(*(uint64_t (**)(_DWORD *))(*(void *)a2 + 144))(a2);
      uint64_t result = CoreML::Specification::CustomModel_CustomModelParamValue::MergeFrom((std::string *)v4[1].__r_.__value_.__l.__data_, v12);
      LODWORD(v4[1].__r_.__value_.__r.__words[2]) |= 2u;
    }
  }
  return result;
}

void sub_19EB40814(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A3C40EED1C14FLL);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::IsInitialized()
{
  return 1;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Clear(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if ((long long *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    uint64_t result = CoreML::Specification::CustomModel_CustomModelParamValue::clear_value(result);
  }
  *(_DWORD *)(a1 + 40) &= 0xFFFFFFFC;
  return result;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::GetArena(uint64_t a1)
{
  return *(void *)(a1 + 32);
}

google::protobuf::Arena **google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::New(uint64_t a1, google::protobuf::Arena *a2)
{
  if (!a2) {
    operator new();
  }
  result[1] = 0;
  result[2] = (google::protobuf::Arena *)&google::protobuf::internal::fixed_address_empty_string;
  result[3] = 0;
  result[4] = a2;
  *((_DWORD *)result + 1CoreML::Specification::Imputer::New(this, 0) = 0;
  uint64_t v5 = *(google::protobuf::Arena **)(a1 + 8);
  *uint64_t result = (google::protobuf::Arena *)&unk_1EF0DC2A0;
  result[1] = v5;
  return result;
}

void google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::New()
{
}

void *google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, (char *)&unk_19EC86ACE);
}

void google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::MapEntryWrapper::~MapEntryWrapper(void *a1)
{
  google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::~MapEntryImpl(a1);

  JUMPOUT(0x19F3C1920);
}

void *google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::~MapEntryImpl(void *a1)
{
  *a1 = &unk_1EF0DB4D8;
  if ((void *)a1[1] != a1 && !a1[4])
  {
    google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(a1[2]);
    uint64_t v2 = a1[3];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  return a1;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::value(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  if (!v2)
  {
    int v5 = 3;
    uint64_t v6 = "/Library/Caches/com.apple.xbs/Sources/CoreML/coremltools-internal/deps/protobuf/src/google/protobuf/map_entry_lite.h";
    int v7 = 162;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: default_instance_ != NULL: ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v5);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    uint64_t v2 = *(void *)(a1 + 8);
  }
  uint64_t v3 = *(void *)(v2 + 24);
  if (*(void *)(a1 + 24)) {
    return *(void *)(a1 + 24);
  }
  else {
    return v3;
  }
}

void sub_19EB40B10(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::key(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

void google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::~MapEntryImpl(void *a1)
{
  google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::~MapEntryImpl(a1);

  JUMPOUT(0x19F3C1920);
}

BOOL std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,CoreML::Specification::CustomModel_CustomModelParamValue> const*> &,google::protobuf::MapPair<std::string,CoreML::Specification::CustomModel_CustomModelParamValue> const**>(void **a1, void **a2)
{
  uint64_t v4 = a2 - a1;
  BOOL result = 1;
  switch(v4)
  {
    case 0:
    case 1:
      return result;
    case 2:
      uint64_t v6 = *(a2 - 1);
      int v7 = *a1;
      if (google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(v6, *a1))
      {
        *a1 = v6;
        *(a2 - 1) = v7;
      }
      return 1;
    case 3:
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>(a1, a1 + 1, a2 - 1);
      return 1;
    case 4:
      std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>(a1, a1 + 1, a1 + 2, a2 - 1);
      return 1;
    case 5:
      std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>(a1, a1 + 1, a1 + 2, a1 + 3, a2 - 1);
      return 1;
    default:
      int v8 = a1 + 2;
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>(a1, a1 + 1, a1 + 2);
      int v9 = a1 + 3;
      if (a1 + 3 == a2) {
        return 1;
      }
      int v10 = 0;
      uint64_t v11 = 24;
      break;
  }
  while (1)
  {
    unsigned int v12 = *v9;
    unint64_t v13 = *v8;
    if (google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(*v9, v13))
    {
      uint64_t v14 = v11;
      while (1)
      {
        *(void **)((char *)a1 + v14) = v13;
        uint64_t v15 = v14 - 8;
        if (v14 == 8) {
          break;
        }
        unint64_t v13 = *(void **)((char *)a1 + v14 - 16);
        BOOL v16 = google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(v12, v13);
        uint64_t v14 = v15;
        if (!v16)
        {
          uint64_t v17 = (void **)((char *)a1 + v15);
          goto LABEL_12;
        }
      }
      uint64_t v17 = a1;
LABEL_12:
      *uint64_t v17 = v12;
      if (++v10 == 8) {
        return v9 + 1 == a2;
      }
    }
    int v8 = v9;
    v11 += 8;
    if (++v9 == a2) {
      return 1;
    }
  }
}

uint64_t CoreML::Specification::CustomModel::ByteSizeLong(CoreML::Specification::CustomModel *this)
{
  uint64_t v2 = (uint64_t *)*((void *)this + 5);
  uint64_t v3 = *v2;
  google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>::begin(v15, v2);
  uint64_t v4 = 0;
  uint64_t v5 = 2 * v3;
  while (v15[0])
  {
    uint64_t v6 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Wrap(*((google::protobuf::Arena **)v15[0] + 3), (google::protobuf::Arena *)(*((void *)v15[0] + 3) + 24), *((google::protobuf::Arena **)this + 2));
    if (v4 != v6)
    {
      if (v4) {
        (*((void (**)(google::protobuf::Arena **))*v4 + 1))(v4);
      }
      uint64_t v4 = v6;
    }
    uint64_t v7 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::ByteSizeLong(v4);
    v5 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
    google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>::KeyValuePair const>::operator++(v15);
  }
  if (v4) {
    (*((void (**)(google::protobuf::Arena **))*v4 + 1))(v4);
  }
  uint64_t v8 = *((void *)this + 6);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
  if (*(char *)(v8 + 23) < 0)
  {
    if (!*(void *)(v8 + 8)) {
      goto LABEL_15;
    }
  }
  else if (!*(unsigned char *)(v8 + 23))
  {
    goto LABEL_15;
  }
  uint64_t v10 = *(void *)(v8 + 8);
  if ((v9 & 0x80u) == 0) {
    uint64_t v10 = v9;
  }
  v5 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_15:
  uint64_t v11 = *((void *)this + 7);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
  if (*(char *)(v11 + 23) < 0)
  {
    if (!*(void *)(v11 + 8)) {
      goto LABEL_20;
    }
  }
  else if (!*(unsigned char *)(v11 + 23))
  {
    goto LABEL_20;
  }
  uint64_t v13 = *(void *)(v11 + 8);
  if ((v12 & 0x80u) == 0) {
    uint64_t v13 = v12;
  }
  v5 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_20:
  *((_DWORD *)this + 16) = v5;
  return v5;
}

void sub_19EB40ED4(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t CoreML::Specification::CustomModel::MergePartialFromCodedStream(CoreML::Specification::CustomModel *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v4 = (std::string **)((char *)this + 56);
  uint64_t v5 = (google::protobuf::Arena **)((char *)this + 16);
  uint64_t v6 = (void *)((char *)this + 24);
  uint64_t v7 = (std::string **)((char *)this + 48);
  while (1)
  {
    while (1)
    {
      uint64_t v8 = *(unsigned __int8 **)a2;
      unint64_t v9 = *((void *)a2 + 1);
      if (*(void *)a2 >= v9)
      {
        LODWORD(v11) = 0;
LABEL_86:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v11);
        unint64_t v12 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
        if ((v12 & 0x100000000) == 0) {
          goto LABEL_87;
        }
        goto LABEL_9;
      }
      uint64_t v10 = v8 + 1;
      uint64_t v11 = *v8;
      if ((char)*v8 >= 1) {
        break;
      }
      if ((unint64_t)v10 >= v9) {
        goto LABEL_86;
      }
      int v13 = *v10;
      if ((v11 & ~v13) < 0x80) {
        goto LABEL_86;
      }
      *(void *)a2 = v8 + 2;
      unint64_t v12 = (v11 + (v13 << 7) - 128) | 0x100000000;
LABEL_9:
      unsigned int v14 = v12 >> 3;
      if (v12 >> 3 == 40)
      {
        if (v12 != 66) {
          goto LABEL_87;
        }
        if (*v4 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
        }
        if (!google::protobuf::internal::WireFormatLite::ReadBytes((unsigned __int8 **)a2, *v4)) {
          return 0;
        }
        uint64_t v15 = *v4;
        if (SHIBYTE((*v4)->__r_.__value_.__r.__words[2]) < 0)
        {
          uint64_t v15 = (std::string *)v15->__r_.__value_.__r.__words[0];
          std::string::size_type size = (*v4)->__r_.__value_.__l.__size_;
        }
        else
        {
          LODWORD(size) = HIBYTE((*v4)->__r_.__value_.__r.__words[2]);
        }
        int v34 = "CoreML.Specification.CustomModel.description";
LABEL_57:
        if (!google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)v15, size, 0, (uint64_t)v34)) {
          return 0;
        }
      }
      else
      {
        if (v14 != 30)
        {
          if (v14 != 10 || v12 != 82) {
            goto LABEL_87;
          }
          if (*v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
            google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
          }
          if (!google::protobuf::internal::WireFormatLite::ReadBytes((unsigned __int8 **)a2, *v7)) {
            return 0;
          }
          uint64_t v15 = *v7;
          if (SHIBYTE((*v7)->__r_.__value_.__r.__words[2]) < 0)
          {
            uint64_t v15 = (std::string *)v15->__r_.__value_.__r.__words[0];
            std::string::size_type size = (*v7)->__r_.__value_.__l.__size_;
          }
          else
          {
            LODWORD(size) = HIBYTE((*v7)->__r_.__value_.__r.__words[2]);
          }
          int v34 = "CoreML.Specification.CustomModel.className";
          goto LABEL_57;
        }
        if (v12 != 242) {
          goto LABEL_87;
        }
        BOOL v45 = v5;
        uint64_t v46 = v6;
        memset(&__p, 0, sizeof(__p));
        int v49 = 0;
        uint64_t v17 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v17 < 0)
        {
          int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0) {
            goto LABEL_84;
          }
        }
        else
        {
          int VarintSizeAsIntFallback = *v17;
          *(void *)a2 = v17 + 1;
        }
        int v19 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        int v20 = *((_DWORD *)a2 + 13);
        BOOL v21 = __OFSUB__(v20--, 1);
        *((_DWORD *)a2 + 13) = v20;
        if (v20 < 0 != v21) {
          goto LABEL_84;
        }
        int v22 = v19;
        uint64_t v23 = *(unsigned char **)a2;
        if (*(void *)a2 < *((void *)a2 + 1) && *v23 == 10)
        {
          *(void *)a2 = v23 + 1;
          if (!google::protobuf::internal::WireFormatLite::ReadBytes((unsigned __int8 **)a2, &__p)) {
            goto LABEL_84;
          }
          if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) >= 1 && **(unsigned char **)a2 == 18)
          {
            uint64_t v24 = *(void *)v46[2];
            int v48 = google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>::operator[]((uint64_t)v46, (uint64_t)&__p);
            if (v24 != *(void *)v46[2])
            {
              google::protobuf::io::CodedInputStream::Skip(a2, 1u);
              int v25 = (CoreML::Specification::CustomModel_CustomModelParamValue *)v48;
              unint64_t v26 = *(char **)a2;
              if (*(void *)a2 >= *((void *)a2 + 1) || *v26 < 0)
              {
                int v27 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                if ((v27 & 0x80000000) == 0) {
                  goto LABEL_60;
                }
              }
              else
              {
                int v27 = *v26;
                *(void *)a2 = v26 + 1;
LABEL_60:
                int v35 = google::protobuf::io::CodedInputStream::PushLimit(a2, v27);
                int v37 = *((_DWORD *)a2 + 13);
                BOOL v21 = __OFSUB__(v37--, 1);
                *((_DWORD *)a2 + 13) = v37;
                if (v37 < 0 == v21)
                {
                  int v38 = v35;
                  if (CoreML::Specification::CustomModel_CustomModelParamValue::MergePartialFromCodedStream(v25, a2, v36))
                  {
                    if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v38))
                    {
                      if (*(void *)a2 == *((void *)a2 + 1)
                        && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
                      {
                        *((_DWORD *)a2 + 8) = 0;
                        *((unsigned char *)a2 + 36) = 1;
                        goto LABEL_66;
                      }
                      int BeyondKeyValuePair = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>>::ReadBeyondKeyValuePair((uint64_t)&v45, (uint64_t)a2);
LABEL_65:
                      if (BeyondKeyValuePair)
                      {
LABEL_66:
                        if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v22))
                        {
                          if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                            p_p = (unsigned int *)&__p;
                          }
                          else {
                            p_p = (unsigned int *)__p.__r_.__value_.__r.__words[0];
                          }
                          if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                            int v40 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
                          }
                          else {
                            int v40 = __p.__r_.__value_.__r.__words[1];
                          }
                          BOOL v41 = google::protobuf::internal::WireFormatLite::VerifyUtf8String(p_p, v40, 0, (uint64_t)"CoreML.Specification.CustomModel.ParametersEntry.key");
                          BOOL v32 = v41;
                          if (v41) {
                            int v33 = 0;
                          }
                          else {
                            int v33 = 6;
                          }
LABEL_76:
                          if (v49) {
                            (*((void (**)(google::protobuf::Arena **))*v49 + 1))(v49);
                          }
                          goto LABEL_78;
                        }
                      }
LABEL_84:
                      BOOL v32 = 0;
                      int v33 = 6;
                      goto LABEL_76;
                    }
                  }
                }
              }
              google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>::erase(v46, (unsigned __int8 *)&__p);
              goto LABEL_84;
            }
          }
        }
        else
        {
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
          memset(&__p, 0, sizeof(__p));
        }
        __n128 v28 = google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::NewEntry(*v45);
        if (v49 != v28)
        {
          if (v49) {
            (*((void (**)(void))*v49 + 1))();
          }
          int v49 = v28;
        }
        unint64_t v29 = (long long *)v28[2];
        *((_DWORD *)v28 + 10) |= 1u;
        if (v29 == &google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstance();
        }
        std::string::operator=((std::string *)v29, &__p);
        int BeyondKeyValuePair = (*((uint64_t (**)(google::protobuf::Arena **, google::protobuf::io::CodedInputStream *))*v49
                              + 11))(v49, a2);
        if (BeyondKeyValuePair) {
          v31.n128_f64[0] = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>>::UseKeyAndValueFromEntry((uint64_t)&v45);
        }
        if (!(*((uint64_t (**)(google::protobuf::Arena **, __n128))*v49 + 5))(v49, v31)) {
          goto LABEL_65;
        }
        int v49 = 0;
        if (BeyondKeyValuePair) {
          goto LABEL_66;
        }
        BOOL v32 = 0;
        int v33 = 6;
LABEL_78:
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
        if (!v32 && v33) {
          return 0;
        }
      }
    }
    *(void *)a2 = v10;
    unint64_t v12 = v11 | 0x100000000;
    if ((v12 & 0x100000000) != 0) {
      goto LABEL_9;
    }
LABEL_87:
    if (!v12 || (v12 & 7) == 4) {
      return 1;
    }
    if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v12, a3))return 0; {
  }
    }
}

void sub_19EB41484(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::Map<std::string,std::string>>::~Parser((uint64_t)va);
  _Unwind_Resume(a1);
}

double google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>::erase(void *a1, unsigned __int8 *a2)
{
  google::protobuf::Map<std::string,std::string>::InnerMap::FindHelper(&v6, a1[2], a2, 0);
  double result = *(double *)&v6;
  if ((void)v6)
  {
    long long v4 = v6;
    uint64_t v5 = v7;
    *(void *)&double result = google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>::erase((uint64_t)&v6, a1, (uint64_t *)&v4).n128_u64[0];
  }
  return result;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>>::ReadBeyondKeyValuePair(uint64_t a1, uint64_t a2)
{
  long long v4 = google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::NewEntry(**(google::protobuf::Arena ***)a1);
  uint64_t v5 = *(google::protobuf::Arena ***)(a1 + 48);
  if (v5 != v4)
  {
    if (v5) {
      (*((void (**)(google::protobuf::Arena **))*v5 + 1))(v5);
    }
    *(void *)(a1 + 48) = v4;
  }
  uint64_t v6 = *(void *)(a1 + 40);
  *((_DWORD *)v4 + 10) |= 2u;
  Aligned = (google::protobuf::Arena **)v4[3];
  if (!Aligned)
  {
    uint64_t v8 = v4[4];
    if (!v8) {
      operator new();
    }
    CoreML::Specification::CustomModel_CustomModelParamValue::CustomModel_CustomModelParamValue((CoreML::Specification::CustomModel_CustomModelParamValue *)Aligned);
    unint64_t v9 = google::protobuf::Arena::AllocateAligned(v8, 0, 24);
    *unint64_t v9 = (google::protobuf::Arena *)Aligned;
    v9[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::CustomModel_CustomModelParamValue>;
    uint64_t v10 = (unint64_t *)((char *)v8 + 32);
    do
      unint64_t v11 = __ldxr(v10);
    while (__stxr((unint64_t)v9, v10));
    v9[2] = (google::protobuf::Arena *)v11;
    v4[3] = (google::protobuf::Arena *)Aligned;
  }
  if ((google::protobuf::Arena **)v6 != Aligned)
  {
    unint64_t v12 = Aligned[2];
    Aligned[2] = *(google::protobuf::Arena **)(v6 + 16);
    *(void *)(v6 + 16) = v12;
    int v13 = *((_DWORD *)Aligned + 7);
    *((_DWORD *)Aligned + 7) = *(_DWORD *)(v6 + 28);
    *(_DWORD *)(v6 + 28) = v13;
    int v14 = *((_DWORD *)Aligned + 6);
    *((_DWORD *)Aligned + 6) = *(_DWORD *)(v6 + 24);
    *(_DWORD *)(v6 + 24) = v14;
  }
  google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>::erase(*(void **)(a1 + 8), (unsigned __int8 *)(a1 + 16));
  uint64_t v15 = *(void *)(a1 + 48);
  *(_DWORD *)(v15 + 40) |= 1u;
  uint64_t v16 = *(void *)(v15 + 16);
  if ((long long *)v16 == &google::protobuf::internal::fixed_address_empty_string) {
    google::protobuf::internal::ArenaStringPtr::CreateInstance();
  }
  if (*(char *)(v16 + 23) < 0) {
    operator delete(*(void **)v16);
  }
  long long v17 = *(_OWORD *)(a1 + 16);
  *(void *)(v16 + 16) = *(void *)(a1 + 32);
  *(_OWORD *)uint64_t v16 = v17;
  *(unsigned char *)(a1 + 39) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  uint64_t v18 = (*(uint64_t (**)(void, uint64_t))(**(void **)(a1 + 48) + 88))(*(void *)(a1 + 48), a2);
  if (v18) {
    v19.n128_f64[0] = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>>::UseKeyAndValueFromEntry(a1);
  }
  if ((*(uint64_t (**)(void, __n128))(**(void **)(a1 + 48) + 40))(*(void *)(a1 + 48), v19)) {
    *(void *)(a1 + 48) = 0;
  }
  return v18;
}

void sub_19EB4172C(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A3C40EED1C14FLL);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::NewEntry(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = 0;
  result[2] = (google::protobuf::Arena *)&google::protobuf::internal::fixed_address_empty_string;
  result[3] = 0;
  result[4] = a1;
  *((_DWORD *)result + 1CoreML::Specification::Imputer::New(this, 0) = 0;
  *double result = (google::protobuf::Arena *)&unk_1EF0DC2A0;
  return result;
}

double google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>>::UseKeyAndValueFromEntry(uint64_t a1)
{
  uint64_t v2 = (const std::string *)(*(uint64_t (**)(void))(**(void **)(a1 + 48) + 136))(*(void *)(a1 + 48));
  std::string::operator=((std::string *)(a1 + 16), v2);
  uint64_t v3 = google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>::operator[](*(void *)(a1 + 8), a1 + 16);
  *(void *)(a1 + 4CoreML::Specification::Imputer::New(this, 0) = v3;
  uint64_t v5 = *(void *)(a1 + 48);
  *(_DWORD *)(v5 + 40) |= 2u;
  Aligned = *(google::protobuf::Arena ***)(v5 + 24);
  if (!Aligned)
  {
    uint64_t v7 = *(google::protobuf::Arena **)(v5 + 32);
    if (!v7) {
      operator new();
    }
    CoreML::Specification::CustomModel_CustomModelParamValue::CustomModel_CustomModelParamValue((CoreML::Specification::CustomModel_CustomModelParamValue *)Aligned);
    uint64_t v8 = google::protobuf::Arena::AllocateAligned(v7, 0, 24);
    *uint64_t v8 = (google::protobuf::Arena *)Aligned;
    v8[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::CustomModel_CustomModelParamValue>;
    unint64_t v9 = (unint64_t *)((char *)v7 + 32);
    do
      unint64_t v10 = __ldxr(v9);
    while (__stxr((unint64_t)v8, v9));
    v8[2] = (google::protobuf::Arena *)v10;
    *(void *)(v5 + 24) = Aligned;
    uint64_t v3 = *(google::protobuf::Arena ***)(a1 + 40);
  }
  if (Aligned != v3)
  {
    double result = *((double *)v3 + 2);
    v3[2] = Aligned[2];
    *((double *)Aligned + 2) = result;
    int v11 = *((_DWORD *)v3 + 7);
    *((_DWORD *)v3 + 7) = *((_DWORD *)Aligned + 7);
    *((_DWORD *)Aligned + 7) = v11;
    int v12 = *((_DWORD *)v3 + 6);
    *((_DWORD *)v3 + 6) = *((_DWORD *)Aligned + 6);
    *((_DWORD *)Aligned + 6) = v12;
  }
  return result;
}

void sub_19EB41918(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A3C40EED1C14FLL);
  _Unwind_Resume(a1);
}

long long *CoreML::Specification::CustomModel::MergeFrom(CoreML::Specification::CustomModel *this, const CoreML::Specification::CustomModel *a2)
{
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  double result = (long long *)google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::MergeFrom((uint64_t)this + 16, *((void **)a2 + 5));
  uint64_t v6 = *((void *)a2 + 6);
  if (*(char *)(v6 + 23) < 0)
  {
    if (!*(void *)(v6 + 8)) {
      goto LABEL_11;
    }
  }
  else if (!*(unsigned char *)(v6 + 23))
  {
    goto LABEL_11;
  }
  double result = (long long *)((char *)this + 48);
  uint64_t v7 = (long long *)*((void *)this + 6);
  if (v7 != (long long *)v6)
  {
    if (v7 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
    }
    double result = (long long *)std::string::operator=(*((std::string **)this + 6), (const std::string *)v6);
  }
LABEL_11:
  uint64_t v8 = *((void *)a2 + 7);
  if (*(char *)(v8 + 23) < 0)
  {
    if (!*(void *)(v8 + 8)) {
      return result;
    }
  }
  else if (!*(unsigned char *)(v8 + 23))
  {
    return result;
  }
  double result = (long long *)*((void *)this + 7);
  if (result != (long long *)v8)
  {
    if (result == &google::protobuf::internal::fixed_address_empty_string)
    {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
    }
    return (long long *)std::string::operator=((std::string *)result, (const std::string *)v8);
  }
  return result;
}

void *google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::MergeFrom(uint64_t a1, void *a2)
{
  double result = google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>::begin(v10, a2);
  uint64_t v4 = v10[0];
  if (v10[0])
  {
    uint64_t v5 = a1 + 8;
    do
    {
      uint64_t v6 = *((void *)v4 + 3);
      uint64_t v7 = (const CoreML::Specification::CustomModel_CustomModelParamValue *)(v6 + 24);
      uint64_t v8 = google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>::operator[](v5, v6);
      if (v7 != (const CoreML::Specification::CustomModel_CustomModelParamValue *)v8)
      {
        unint64_t v9 = (std::string *)v8;
        CoreML::Specification::CustomModel_CustomModelParamValue::clear_value((uint64_t)v8);
        CoreML::Specification::CustomModel_CustomModelParamValue::MergeFrom(v9, v7);
      }
      double result = google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>::KeyValuePair const>::operator++(v10);
      uint64_t v4 = v10[0];
    }
    while (v10[0]);
  }
  return result;
}

uint64_t CoreML::Specification::CustomModel::IsInitialized(CoreML::Specification::CustomModel *this)
{
  return 1;
}

void CoreML::Specification::CustomModel::Clear(CoreML::Specification::CustomModel *this)
{
  google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>::clear((void *)this + 3);
  uint64_t v2 = *((void *)this + 6);
  if ((long long *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  uint64_t v3 = *((void *)this + 7);
  if ((long long *)v3 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)uint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
}

void CoreML::Specification::CustomModel::New(CoreML::Specification::CustomModel *this, google::protobuf::Arena *a2)
{
}

void sub_19EB41BB0(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C405C383CC1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::CustomModel>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    double result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *double result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::CustomModel>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::CustomModel>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::CustomModel::New(CoreML::Specification::CustomModel *this)
{
}

void *CoreML::Specification::CustomModel::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.CustomModel");
}

void CoreML::Specification::CustomModel::~CustomModel(CoreML::Specification::CustomModel *this)
{
  CoreML::Specification::CustomModel::~CustomModel(this);

  JUMPOUT(0x19F3C1920);
}

{
  uint64_t v2;
  uint64_t v4;

  *(void *)this = &unk_1EF0CE8F8;
  uint64_t v2 = *((void *)this + 6);
  if ((long long *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x19F3C1920](v2, 0x1012C40EC159624);
  }
  uint64_t v4 = *((void *)this + 7);
  if ((long long *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    MEMORY[0x19F3C1920](v4, 0x1012C40EC159624);
  }
  google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>::~Map((void *)this + 3);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

void google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::~MapEntryLite(void *a1)
{
  google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::~MapEntryImpl(a1);

  JUMPOUT(0x19F3C1920);
}

void CoreML::Specification::CustomModel_CustomModelParamValue::New(CoreML::Specification::CustomModel_CustomModelParamValue *this)
{
}

void *CoreML::Specification::CustomModel_CustomModelParamValue::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.CustomModel.CustomModelParamValue");
}

void CoreML::Specification::CustomModel_CustomModelParamValue::~CustomModel_CustomModelParamValue(CoreML::Specification::CustomModel_CustomModelParamValue *this)
{
  CoreML::Specification::CustomModel_CustomModelParamValue::~CustomModel_CustomModelParamValue(this);

  JUMPOUT(0x19F3C1920);
}

{
  *(void *)this = &unk_1EF0D8CD8;
  if (*((_DWORD *)this + 7)) {
    CoreML::Specification::CustomModel_CustomModelParamValue::clear_value((uint64_t)this);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

void CoreML::validate<(MLModelType)556>(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    uint64_t v3 = *(uint64_t **)(a2 + 16);
  }
  else {
    uint64_t v3 = &CoreML::Specification::_ModelDescription_default_instance_;
  }
  if (*(_DWORD *)(a2 + 44) != 556)
  {
    std::string::basic_string[abi:ne180100]<0>(&__p, "Model not an a LinkedModel.");
    *(void *)a1 = 13;
    std::operator+<char>();
LABEL_8:
    if (SHIBYTE(v17) < 0)
    {
      unint64_t v5 = __p;
LABEL_10:
      operator delete(v5);
      return;
    }
    return;
  }
  if (*(unsigned char *)(a2 + 28))
  {
    std::string::basic_string[abi:ne180100]<0>(&__p, "LinkedModel cannot be marked as updatable");
    *(void *)a1 = 13;
    std::operator+<char>();
    goto LABEL_8;
  }
  CoreML::Result::Result((CoreML::Result *)&v19);
  int v6 = *(_DWORD *)(a2 + 24);
  LODWORD(v14[0]) = 0;
  CoreML::validateModelDescription((uint64_t)&__p, (uint64_t)v3, v6, (char *)v14);
  int v8 = (int)__p;
  __n128 v19 = __p;
  if (SHIBYTE(v21) < 0)
  {
    operator delete((void *)v20);
    int v8 = (int)v19;
  }
  long long v20 = v17;
  uint64_t v21 = v18;
  if ((v8 & 0xFFFFFFEF) != 0)
  {
    *(void *)a1 = v19;
    *(_OWORD *)(a1 + 8) = v20;
    *(void *)(a1 + 24) = v21;
    long long v20 = 0uLL;
    uint64_t v21 = 0;
    goto LABEL_36;
  }
  if (*(_DWORD *)(a2 + 44) == 556)
  {
    unint64_t v9 = *(uint64_t **)(a2 + 32);
  }
  else
  {
    inited = CoreML::Specification::protobuf_LinkedModel_2eproto::InitDefaults((CoreML::Specification::protobuf_LinkedModel_2eproto *)inited);
    unint64_t v9 = &CoreML::Specification::_LinkedModel_default_instance_;
  }
  if (*((_DWORD *)v9 + 7))
  {
    if (*(_DWORD *)(a2 + 44) == 556)
    {
      unint64_t v10 = *(uint64_t **)(a2 + 32);
    }
    else
    {
      inited = CoreML::Specification::protobuf_LinkedModel_2eproto::InitDefaults((CoreML::Specification::protobuf_LinkedModel_2eproto *)inited);
      unint64_t v10 = &CoreML::Specification::_LinkedModel_default_instance_;
    }
    if (*((_DWORD *)v10 + 7) == 1)
    {
      int v11 = (const CoreML::Specification::LinkedModelFile *)v10[2];
    }
    else
    {
      CoreML::Specification::protobuf_LinkedModel_2eproto::InitDefaults((CoreML::Specification::protobuf_LinkedModel_2eproto *)inited);
      int v11 = (const CoreML::Specification::LinkedModelFile *)&CoreML::Specification::_LinkedModelFile_default_instance_;
    }
    CoreML::Specification::LinkedModelFile::LinkedModelFile((CoreML::Specification::LinkedModelFile *)&__p, v11);
    int v12 = (uint64_t *)*((void *)&v17 + 1);
    if (!*((void *)&v17 + 1)) {
      int v12 = &CoreML::Specification::_StringParameter_default_instance_;
    }
    uint64_t v13 = v12[2];
    if (*(char *)(v13 + 23) < 0)
    {
      if (*(void *)(v13 + 8)) {
        goto LABEL_31;
      }
    }
    else if (*(unsigned char *)(v13 + 23))
    {
LABEL_31:
      *(void *)a1 = v19;
      *(_OWORD *)(a1 + 8) = v20;
      *(void *)(a1 + 24) = v21;
      long long v20 = 0uLL;
      uint64_t v21 = 0;
LABEL_35:
      CoreML::Specification::LinkedModelFile::~LinkedModelFile((CoreML::Specification::LinkedModelFile *)&__p);
      goto LABEL_36;
    }
    std::string::basic_string[abi:ne180100]<0>(v14, "LinkedModel.linkedModelFile.linkedModeFileName.defaultValue cannot be empty.");
    *(void *)a1 = 13;
    std::operator+<char>();
    if (v15 < 0) {
      operator delete(v14[0]);
    }
    goto LABEL_35;
  }
  std::string::basic_string[abi:ne180100]<0>(&__p, "LinkedModel.LinkType not set.");
  *(void *)a1 = 13;
  std::operator+<char>();
  if (SHIBYTE(v17) < 0) {
    operator delete(__p);
  }
LABEL_36:
  if (SHIBYTE(v21) < 0)
  {
    unint64_t v5 = (void *)v20;
    goto LABEL_10;
  }
}

void sub_19EB4211C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  CoreML::Specification::LinkedModelFile::~LinkedModelFile((CoreML::Specification::LinkedModelFile *)&a15);
  if (a29 < 0) {
    operator delete(a24);
  }
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::LinearKernel::GetCachedSize(CoreML::Specification::LinearKernel *this)
{
  return *((unsigned int *)this + 4);
}

uint64_t CoreML::Specification::LinearKernel::ByteSizeLong(CoreML::Specification::LinearKernel *this)
{
  *((_DWORD *)this + 4) = 0;
  return 0;
}

uint64_t CoreML::Specification::LinearKernel::MergePartialFromCodedStream(CoreML::Specification::LinearKernel *this, char **a2, unsigned int a3)
{
  do
  {
    uint64_t v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

std::string *CoreML::Specification::LinearKernel::CheckTypeAndMergeFrom(std::string *this, const google::protobuf::MessageLite *a2)
{
  uint64_t v2 = *((void *)a2 + 1);
  if (v2) {
    return google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v2 & 0xFFFFFFFFFFFFFFFELL);
  }
  return this;
}

uint64_t CoreML::Specification::LinearKernel::IsInitialized(CoreML::Specification::LinearKernel *this)
{
  return 1;
}

void CoreML::Specification::LinearKernel::New(CoreML::Specification::LinearKernel *this, google::protobuf::Arena *a2)
{
}

void sub_19EB422A8(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

CoreML::Specification::LinearKernel *CoreML::Specification::LinearKernel::LinearKernel(CoreML::Specification::LinearKernel *this)
{
  *(void *)this = &unk_1EF0CF6A0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::LinearKernel *)&CoreML::Specification::_LinearKernel_default_instance_) {
    CoreML::Specification::protobuf_SVM_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_19EB4232C(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::LinearKernel>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    double result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *double result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::LinearKernel>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::LinearKernel>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

uint64_t CoreML::Specification::SupportVectorClassifier::GetCachedSize(CoreML::Specification::SupportVectorClassifier *this)
{
  return *((unsigned int *)this + 40);
}

uint64_t *CoreML::Specification::SupportVectorClassifier::SerializeWithCachedSizes(uint64_t *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  unint64_t v5 = this;
  if (this != &CoreML::Specification::_SupportVectorClassifier_default_instance_)
  {
    uint64_t v6 = this[17];
    if (v6) {
      this = (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
    }
  }
  if (*((int *)v5 + 4) >= 1)
  {
    if (*((int *)a2 + 4) < 5)
    {
      __src[0] = 18;
      this = (uint64_t *)google::protobuf::io::CodedOutputStream::WriteRaw(a2, __src, 1);
      int v7 = *((_DWORD *)a2 + 4);
    }
    else
    {
      *(unsigned char *)(*((void *)a2 + 1))++ = 18;
      int v7 = *((_DWORD *)a2 + 4) - 1;
      *((_DWORD *)a2 + 4) = v7;
    }
    unsigned int v8 = *((_DWORD *)v5 + 8);
    if (v7 < 5)
    {
      this = (uint64_t *)google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v8);
    }
    else
    {
      uint64_t v9 = *((void *)a2 + 1);
      if (v8 < 0x80)
      {
        unsigned int v11 = *((_DWORD *)v5 + 8);
        unint64_t v10 = (unsigned char *)*((void *)a2 + 1);
      }
      else
      {
        unint64_t v10 = (unsigned char *)*((void *)a2 + 1);
        do
        {
          *v10++ = v8 | 0x80;
          unsigned int v11 = v8 >> 7;
          unsigned int v12 = v8 >> 14;
          v8 >>= 7;
        }
        while (v12);
      }
      *unint64_t v10 = v11;
      int v13 = v10 - v9 + 1;
      *((void *)a2 + 1) += v13;
      *((_DWORD *)a2 + 4) -= v13;
    }
    uint64_t v14 = *((unsigned int *)v5 + 4);
    if ((int)v14 >= 1)
    {
      for (uint64_t i = 0; i != v14; ++i)
      {
        unint64_t v16 = *(int *)(v5[3] + 4 * i + 8);
        if (*((int *)a2 + 4) < 10)
        {
          this = (uint64_t *)google::protobuf::io::CodedOutputStream::WriteVarint64SlowPath(a2, v16);
        }
        else
        {
          uint64_t v17 = *((void *)a2 + 1);
          if (v16 < 0x80)
          {
            LODWORD(v19) = *(_DWORD *)(v5[3] + 4 * i + 8);
            uint64_t v18 = (unsigned char *)*((void *)a2 + 1);
          }
          else
          {
            uint64_t v18 = (unsigned char *)*((void *)a2 + 1);
            do
            {
              *v18++ = v16 | 0x80;
              unint64_t v19 = v16 >> 7;
              unint64_t v20 = v16 >> 14;
              v16 >>= 7;
            }
            while (v20);
          }
          *uint64_t v18 = v19;
          int v21 = v18 - v17 + 1;
          *((void *)a2 + 1) += v21;
          *((_DWORD *)a2 + 4) -= v21;
        }
      }
    }
  }
  int v22 = *((_DWORD *)v5 + 41);
  if (v22 == 3)
  {
    this = (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)3, v5[18], a2, a4);
    int v22 = *((_DWORD *)v5 + 41);
  }
  if (v22 == 4) {
    this = (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)4, v5[18], a2, a4);
  }
  int v23 = *((_DWORD *)v5 + 12);
  if (v23)
  {
    for (int j = 0; j != v23; ++j)
      this = (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)5, *(void *)(v5[7] + 8 * j + 8), a2, a4);
  }
  if (*((int *)v5 + 16) > 0)
  {
    if (*((int *)a2 + 4) < 5)
    {
      __src[0] = 50;
      google::protobuf::io::CodedOutputStream::WriteRaw(a2, __src, 1);
      int v25 = *((_DWORD *)a2 + 4);
    }
    else
    {
      *(unsigned char *)(*((void *)a2 + 1))++ = 50;
      int v25 = *((_DWORD *)a2 + 4) - 1;
      *((_DWORD *)a2 + 4) = v25;
    }
    unsigned int v26 = *((_DWORD *)v5 + 20);
    if (v25 < 5)
    {
      google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v26);
    }
    else
    {
      uint64_t v27 = *((void *)a2 + 1);
      if (v26 < 0x80)
      {
        unsigned int v29 = *((_DWORD *)v5 + 20);
        __n128 v28 = (unsigned char *)*((void *)a2 + 1);
      }
      else
      {
        __n128 v28 = (unsigned char *)*((void *)a2 + 1);
        do
        {
          *v28++ = v26 | 0x80;
          unsigned int v29 = v26 >> 7;
          unsigned int v30 = v26 >> 14;
          v26 >>= 7;
        }
        while (v30);
      }
      unsigned char *v28 = v29;
      int v31 = v28 - v27 + 1;
      *((void *)a2 + 1) += v31;
      *((_DWORD *)a2 + 4) -= v31;
    }
    uint64_t v32 = v5[9];
    if (v32) {
      int v33 = (char *)(v32 + 8);
    }
    else {
      int v33 = 0;
    }
    this = (uint64_t *)google::protobuf::io::CodedOutputStream::WriteRaw(a2, v33, 8 * *((_DWORD *)v5 + 16));
  }
  if (*((int *)v5 + 22) >= 1)
  {
    if (*((int *)a2 + 4) < 5)
    {
      __src[0] = 58;
      google::protobuf::io::CodedOutputStream::WriteRaw(a2, __src, 1);
      int v34 = *((_DWORD *)a2 + 4);
    }
    else
    {
      *(unsigned char *)(*((void *)a2 + 1))++ = 58;
      int v34 = *((_DWORD *)a2 + 4) - 1;
      *((_DWORD *)a2 + 4) = v34;
    }
    unsigned int v35 = *((_DWORD *)v5 + 26);
    if (v34 < 5)
    {
      google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v35);
    }
    else
    {
      uint64_t v36 = *((void *)a2 + 1);
      if (v35 < 0x80)
      {
        unsigned int v38 = *((_DWORD *)v5 + 26);
        int v37 = (unsigned char *)*((void *)a2 + 1);
      }
      else
      {
        int v37 = (unsigned char *)*((void *)a2 + 1);
        do
        {
          *v37++ = v35 | 0x80;
          unsigned int v38 = v35 >> 7;
          unsigned int v39 = v35 >> 14;
          v35 >>= 7;
        }
        while (v39);
      }
      *int v37 = v38;
      int v40 = v37 - v36 + 1;
      *((void *)a2 + 1) += v40;
      *((_DWORD *)a2 + 4) -= v40;
    }
    uint64_t v41 = v5[12];
    if (v41) {
      unsigned int v42 = (char *)(v41 + 8);
    }
    else {
      unsigned int v42 = 0;
    }
    this = (uint64_t *)google::protobuf::io::CodedOutputStream::WriteRaw(a2, v42, 8 * *((_DWORD *)v5 + 22));
  }
  if (*((int *)v5 + 28) >= 1)
  {
    if (*((int *)a2 + 4) < 5)
    {
      __src[0] = 66;
      google::protobuf::io::CodedOutputStream::WriteRaw(a2, __src, 1);
      int v43 = *((_DWORD *)a2 + 4);
    }
    else
    {
      *(unsigned char *)(*((void *)a2 + 1))++ = 66;
      int v43 = *((_DWORD *)a2 + 4) - 1;
      *((_DWORD *)a2 + 4) = v43;
    }
    unsigned int v44 = *((_DWORD *)v5 + 32);
    if (v43 < 5)
    {
      google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v44);
    }
    else
    {
      uint64_t v45 = *((void *)a2 + 1);
      if (v44 < 0x80)
      {
        unsigned int v47 = *((_DWORD *)v5 + 32);
        uint64_t v46 = (unsigned char *)*((void *)a2 + 1);
      }
      else
      {
        uint64_t v46 = (unsigned char *)*((void *)a2 + 1);
        do
        {
          *v46++ = v44 | 0x80;
          unsigned int v47 = v44 >> 7;
          unsigned int v48 = v44 >> 14;
          v44 >>= 7;
        }
        while (v48);
      }
      *uint64_t v46 = v47;
      int v49 = v46 - v45 + 1;
      *((void *)a2 + 1) += v49;
      *((_DWORD *)a2 + 4) -= v49;
    }
    uint64_t v50 = v5[15];
    if (v50) {
      int v51 = (char *)(v50 + 8);
    }
    else {
      int v51 = 0;
    }
    this = (uint64_t *)google::protobuf::io::CodedOutputStream::WriteRaw(a2, v51, 8 * *((_DWORD *)v5 + 28));
  }
  int v52 = *((_DWORD *)v5 + 42);
  if (v52 == 100)
  {
    this = (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)0x64, v5[19], a2, a4);
    int v52 = *((_DWORD *)v5 + 42);
  }
  if (v52 == 101)
  {
    uint64_t v53 = v5[19];
    return (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)0x65, v53, a2, a4);
  }
  return this;
}

uint64_t CoreML::Specification::SupportVectorClassifier::ByteSizeLong(CoreML::Specification::SupportVectorClassifier *this)
{
  uint64_t v2 = google::protobuf::internal::WireFormatLite::Int32Size(*((_DWORD *)this + 4), *((void *)this + 3));
  if (v2)
  {
    uint64_t v3 = 11;
    uint64_t v4 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((int)v2 >= 0) {
      uint64_t v3 = v4;
    }
    int v5 = v2;
  }
  else
  {
    int v5 = 0;
    uint64_t v3 = 0;
  }
  *((_DWORD *)this + 8) = v5;
  uint64_t v6 = *((unsigned int *)this + 12);
  uint64_t v7 = v3 + v6 + v2;
  if (v6)
  {
    int v8 = 0;
    uint64_t v9 = *((void *)this + 7);
    do
    {
      unint64_t v10 = *(unsigned int **)(v9 + 8 * v8 + 8);
      uint64_t v11 = v10[4];
      uint64_t v12 = 8 * v11;
      if (v11)
      {
        if ((v12 & 0x80000000) != 0) {
          uint64_t v13 = 11;
        }
        else {
          uint64_t v13 = ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
        }
      }
      else
      {
        uint64_t v13 = 0;
      }
      uint64_t v14 = v13 + v12;
      v10[8] = v12;
      v10[9] = v14;
      v7 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      ++v8;
    }
    while (v6 != v8);
  }
  uint64_t v15 = *((unsigned int *)this + 16);
  uint64_t v16 = 8 * v15;
  uint64_t v17 = 11;
  uint64_t v18 = ((9 * (__clz((8 * v15) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v15 & 0x10000000) == 0) {
    uint64_t v17 = v18;
  }
  uint64_t v19 = v17 + v7;
  if (v15) {
    uint64_t v7 = v19;
  }
  *((_DWORD *)this + 2CoreML::Specification::CustomModel_CustomModelParamValue::New(this, 0) = v16;
  uint64_t v20 = v7 + v16;
  uint64_t v21 = *((unsigned int *)this + 22);
  uint64_t v22 = 8 * v21;
  uint64_t v23 = 11;
  uint64_t v24 = ((9 * (__clz((8 * v21) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v21 & 0x10000000) == 0) {
    uint64_t v23 = v24;
  }
  uint64_t v25 = v23 + v20;
  if (v21) {
    uint64_t v20 = v25;
  }
  *((_DWORD *)this + 26) = v22;
  uint64_t v26 = v20 + v22;
  uint64_t v27 = *((unsigned int *)this + 28);
  uint64_t v28 = 8 * v27;
  uint64_t v29 = 11;
  uint64_t v30 = ((9 * (__clz((8 * v27) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v27 & 0x10000000) == 0) {
    uint64_t v29 = v30;
  }
  uint64_t v31 = v29 + v26;
  if (v27) {
    uint64_t v26 = v31;
  }
  *((_DWORD *)this + 32) = v28;
  uint64_t v32 = v26 + v28;
  if (this != (CoreML::Specification::SupportVectorClassifier *)&CoreML::Specification::_SupportVectorClassifier_default_instance_)
  {
    int v33 = (CoreML::Specification::Kernel *)*((void *)this + 17);
    if (v33)
    {
      uint64_t v34 = CoreML::Specification::Kernel::ByteSizeLong(v33);
      v32 += v34 + ((9 * (__clz(v34 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  int v35 = *((_DWORD *)this + 41);
  if (v35 == 4)
  {
    uint64_t v36 = CoreML::Specification::DenseSupportVectors::ByteSizeLong(*((CoreML::Specification::DenseSupportVectors **)this
                                                                   + 18));
  }
  else
  {
    if (v35 != 3) {
      goto LABEL_34;
    }
    uint64_t v36 = CoreML::Specification::SparseSupportVectors::ByteSizeLong(*((CoreML::Specification::SparseSupportVectors **)this
                                                                    + 18));
  }
  v32 += v36 + ((9 * (__clz(v36 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_34:
  int v37 = *((_DWORD *)this + 42);
  if (v37 == 101)
  {
    uint64_t v38 = CoreML::Specification::Int64Vector::ByteSizeLong(*((CoreML::Specification::Int64Vector **)this + 19));
    goto LABEL_38;
  }
  if (v37 == 100)
  {
    uint64_t v38 = CoreML::Specification::StringVector::ByteSizeLong(*((CoreML::Specification::StringVector **)this + 19));
LABEL_38:
    v32 += v38 + ((9 * (__clz(v38 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
  *((_DWORD *)this + 4CoreML::Specification::CustomModel_CustomModelParamValue::New(this, 0) = v32;
  return v32;
}

uint64_t CoreML::Specification::Kernel::ByteSizeLong(CoreML::Specification::Kernel *this)
{
  switch(*((_DWORD *)this + 7))
  {
    case 1:
      *(_DWORD *)(*((void *)this + 2) + 16) = 0;
      uint64_t result = 2;
      break;
    case 2:
      uint64_t v3 = *((void *)this + 2);
      uint64_t v4 = 9;
      if (*(double *)(v3 + 16) == 0.0) {
        uint64_t v4 = 0;
      }
      *(_DWORD *)(v3 + 24) = v4;
      uint64_t result = v4 | 2;
      break;
    case 3:
      uint64_t v5 = CoreML::Specification::PolyKernel::ByteSizeLong(*((CoreML::Specification::PolyKernel **)this + 2));
      uint64_t v6 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6);
      goto LABEL_13;
    case 4:
      uint64_t v7 = *((void *)this + 2);
      uint64_t v8 = 9;
      if (*(double *)(v7 + 16) == 0.0) {
        uint64_t v8 = 0;
      }
      if (*(double *)(v7 + 24) != 0.0) {
        v8 += 9;
      }
      *(_DWORD *)(v7 + 32) = v8;
      uint64_t v6 = v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6);
LABEL_13:
      uint64_t result = v6 + 1;
      break;
    default:
      uint64_t result = 0;
      break;
  }
  *((_DWORD *)this + 6) = result;
  return result;
}

uint64_t CoreML::Specification::SparseSupportVectors::ByteSizeLong(CoreML::Specification::SparseSupportVectors *this)
{
  int v2 = *((_DWORD *)this + 6);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = *((unsigned int *)this + 6);
    do
    {
      uint64_t v5 = CoreML::Specification::SparseVector::ByteSizeLong(*(CoreML::Specification::SparseVector **)(*((void *)this + 4) + 8 * v3 + 8));
      v4 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  *((_DWORD *)this + 1CoreML::Specification::CustomModel_CustomModelParamValue::New(this, 0) = v4;
  return v4;
}

uint64_t CoreML::Specification::DenseSupportVectors::ByteSizeLong(CoreML::Specification::DenseSupportVectors *this)
{
  int v1 = *((_DWORD *)this + 6);
  if (v1)
  {
    int v2 = 0;
    uint64_t v3 = *((void *)this + 4);
    uint64_t v4 = *((unsigned int *)this + 6);
    do
    {
      uint64_t v5 = *(unsigned int **)(v3 + 8 * v2 + 8);
      uint64_t v6 = v5[4];
      uint64_t v7 = 8 * v6;
      if (v6)
      {
        if ((v7 & 0x80000000) != 0) {
          uint64_t v8 = 11;
        }
        else {
          uint64_t v8 = ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
        }
      }
      else
      {
        uint64_t v8 = 0;
      }
      uint64_t v9 = v8 + v7;
      v5[8] = v7;
      v5[9] = v9;
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      ++v2;
    }
    while (v1 != v2);
  }
  else
  {
    uint64_t v4 = 0;
  }
  *((_DWORD *)this + 1CoreML::Specification::CustomModel_CustomModelParamValue::New(this, 0) = v4;
  return v4;
}

uint64_t CoreML::Specification::SparseVector::ByteSizeLong(CoreML::Specification::SparseVector *this)
{
  int v2 = *((_DWORD *)this + 6);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = *((unsigned int *)this + 6);
    do
    {
      uint64_t v5 = CoreML::Specification::SparseNode::ByteSizeLong(*(CoreML::Specification::SparseNode **)(*((void *)this + 4)
                                                                                                 + 8 * v3
                                                                                                 + 8));
      v4 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  *((_DWORD *)this + 1CoreML::Specification::CustomModel_CustomModelParamValue::New(this, 0) = v4;
  return v4;
}

uint64_t CoreML::Specification::SparseNode::ByteSizeLong(CoreML::Specification::SparseNode *this)
{
  uint64_t v1 = 9;
  if (*((double *)this + 2) == 0.0) {
    uint64_t v1 = 0;
  }
  int v2 = *((_DWORD *)this + 6);
  uint64_t v3 = 11;
  uint64_t v4 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v2 >= 0) {
    uint64_t v3 = v4;
  }
  uint64_t v5 = v3 + v1;
  if (v2) {
    uint64_t v1 = v5;
  }
  *((_DWORD *)this + 7) = v1;
  return v1;
}

uint64_t CoreML::Specification::PolyKernel::ByteSizeLong(CoreML::Specification::PolyKernel *this)
{
  uint64_t v1 = 9;
  if (*((double *)this + 2) == 0.0) {
    uint64_t v1 = 0;
  }
  if (*((double *)this + 3) != 0.0) {
    v1 += 9;
  }
  int v2 = *((_DWORD *)this + 8);
  uint64_t v3 = 11;
  uint64_t v4 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v2 >= 0) {
    uint64_t v3 = v4;
  }
  uint64_t v5 = v3 + v1;
  if (v2) {
    uint64_t v1 = v5;
  }
  *((_DWORD *)this + 9) = v1;
  return v1;
}

uint64_t CoreML::Specification::SupportVectorClassifier::MergePartialFromCodedStream(CoreML::Specification::SupportVectorClassifier *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 112);
  uint64_t v6 = (unsigned int *)((char *)this + 88);
  uint64_t v7 = (unsigned int *)((char *)this + 64);
  uint64_t v8 = (CoreML::Specification::SupportVectorClassifier *)((char *)this + 40);
  uint64_t v9 = (signed int *)((char *)this + 16);
  v148 = (signed int *)((char *)this + 16);
LABEL_2:
  while (2)
  {
    unint64_t v10 = *(unsigned __int8 **)a2;
    unint64_t v11 = *((void *)a2 + 1);
    if (*(void *)a2 >= v11)
    {
      LODWORD(v13) = 0;
    }
    else
    {
      uint64_t v12 = v10 + 1;
      uint64_t v13 = *v10;
      if ((char)*v10 >= 1)
      {
        *(void *)a2 = v12;
        unint64_t v14 = v13 | 0x100000000;
        if ((v14 & 0x100000000) == 0) {
          goto LABEL_9;
        }
        goto LABEL_17;
      }
      if ((unint64_t)v12 < v11)
      {
        int v15 = *v12;
        if ((v13 & ~v15) >= 0x80)
        {
          *(void *)a2 = v10 + 2;
          unint64_t v14 = (v13 + (v15 << 7) - 128) | 0x100000000;
          goto LABEL_17;
        }
      }
    }
    unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v13);
    unint64_t v14 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
    if ((v14 & 0x100000000) == 0) {
      goto LABEL_9;
    }
LABEL_17:
    unsigned int v18 = v14 >> 3;
    switch(v14 >> 3)
    {
      case 1u:
        if (v14 != 10) {
          goto LABEL_9;
        }
        uint64_t v19 = (CoreML::Specification::Kernel *)*((void *)this + 17);
        if (!v19) {
          operator new();
        }
        uint64_t v20 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v20 < 0)
        {
          int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0) {
            return 0;
          }
        }
        else
        {
          int VarintSizeAsIntFallback = *v20;
          *(void *)a2 = v20 + 1;
        }
        int v49 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        int v51 = *((_DWORD *)a2 + 13);
        BOOL v52 = __OFSUB__(v51--, 1);
        *((_DWORD *)a2 + 13) = v51;
        if (v51 < 0 != v52) {
          return 0;
        }
        int v53 = v49;
        uint64_t result = CoreML::Specification::Kernel::MergePartialFromCodedStream(v19, a2, v50);
        if (result) {
          goto LABEL_121;
        }
        return result;
      case 2u:
        if (v14 == 16)
        {
          if (google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<int,(google::protobuf::internal::WireFormatLite::FieldType)5>(18, a2, v9))continue; {
          return 0;
          }
        }
        if (v14 != 18) {
          goto LABEL_9;
        }
        uint64_t v23 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v23 < 0)
        {
          int v24 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v24 < 0) {
            return 0;
          }
        }
        else
        {
          int v24 = *v23;
          *(void *)a2 = v23 + 1;
        }
        int v78 = google::protobuf::io::CodedInputStream::PushLimit(a2, v24);
        while (1)
        {
          int v79 = *((_DWORD *)a2 + 10);
          uint64_t v80 = *((int *)a2 + 11);
          unint64_t v81 = *((void *)a2 + 1);
          int v82 = *((_DWORD *)a2 + 6);
          if (v79 == 0x7FFFFFFF || (v83 = *(char **)a2, (int)(v79 - v82 + v80 + v81 - *(void *)a2) < 1))
          {
            *((_DWORD *)a2 + 1CoreML::Specification::CustomModel_CustomModelParamValue::New(this, 0) = v78;
            uint64_t v88 = v81 + v80;
            *((void *)a2 + 1) = v88;
            int v89 = *((_DWORD *)a2 + 12);
            if (v89 >= v78) {
              int v89 = v78;
            }
            BOOL v52 = __OFSUB__(v82, v89);
            int v90 = v82 - v89;
            if ((v90 < 0) ^ v52 | (v90 == 0)) {
              int v90 = 0;
            }
            else {
              *((void *)a2 + 1) = v88 - v90;
            }
            *((_DWORD *)a2 + 11) = v90;
            *((unsigned char *)a2 + 36) = 0;
            goto LABEL_2;
          }
          if ((unint64_t)v83 >= v81)
          {
            int v84 = 0;
          }
          else
          {
            int v84 = *v83;
            if ((*v83 & 0x80000000) == 0)
            {
              *(void *)a2 = v83 + 1;
              goto LABEL_132;
            }
          }
          uint64_t Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v84);
          int v84 = Varint32Fallback;
          if (Varint32Fallback < 0) {
            return 0;
          }
LABEL_132:
          signed int v86 = *((_DWORD *)this + 4);
          if (v86 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<float>::Reserve((unsigned int *)v9, v86 + 1);
            signed int v86 = *v9;
          }
          uint64_t v87 = *((void *)this + 3);
          *((_DWORD *)this + 4) = v86 + 1;
          *(_DWORD *)(v87 + 4 * v86 + 8) = v84;
        }
      case 3u:
        if (v14 != 26) {
          goto LABEL_9;
        }
        if (*((_DWORD *)this + 41) != 3)
        {
          CoreML::Specification::SupportVectorClassifier::clear_supportVectors((uint64_t)this);
          *((_DWORD *)this + 41) = 3;
          operator new();
        }
        uint64_t v25 = (CoreML::Specification::SparseSupportVectors *)*((void *)this + 18);
        int v43 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v43 < 0)
        {
          int v44 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v44 < 0) {
            return 0;
          }
        }
        else
        {
          int v44 = *v43;
          *(void *)a2 = v43 + 1;
        }
        int v58 = google::protobuf::io::CodedInputStream::PushLimit(a2, v44);
        int v60 = *((_DWORD *)a2 + 13);
        BOOL v52 = __OFSUB__(v60--, 1);
        *((_DWORD *)a2 + 13) = v60;
        if (v60 < 0 != v52) {
          return 0;
        }
        int v53 = v58;
        uint64_t result = CoreML::Specification::SparseSupportVectors::MergePartialFromCodedStream(v25, a2, v59);
        if (!result) {
          return result;
        }
        goto LABEL_121;
      case 4u:
        if (v14 != 34) {
          goto LABEL_9;
        }
        if (*((_DWORD *)this + 41) != 4)
        {
          CoreML::Specification::SupportVectorClassifier::clear_supportVectors((uint64_t)this);
          *((_DWORD *)this + 41) = 4;
          operator new();
        }
        uint64_t v26 = (CoreML::Specification::DenseSupportVectors *)*((void *)this + 18);
        uint64_t v45 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v45 < 0)
        {
          int v46 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v46 < 0) {
            return 0;
          }
        }
        else
        {
          int v46 = *v45;
          *(void *)a2 = v45 + 1;
        }
        int v61 = google::protobuf::io::CodedInputStream::PushLimit(a2, v46);
        int v63 = *((_DWORD *)a2 + 13);
        BOOL v52 = __OFSUB__(v63--, 1);
        *((_DWORD *)a2 + 13) = v63;
        if (v63 < 0 != v52) {
          return 0;
        }
        int v53 = v61;
        uint64_t result = CoreML::Specification::DenseSupportVectors::MergePartialFromCodedStream(v26, a2, v62);
        if (!result) {
          return result;
        }
        goto LABEL_121;
      case 5u:
        if (v14 != 42) {
          goto LABEL_9;
        }
        uint64_t v27 = (int *)*((void *)this + 7);
        if (!v27)
        {
          int v28 = *((_DWORD *)this + 12);
          int v29 = *((_DWORD *)this + 13);
LABEL_107:
          if (v28 <= v29)
          {
            google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(v8, v29 - v28 + 1);
            uint64_t v27 = (int *)*((void *)this + 7);
          }
          int v29 = *v27;
          goto LABEL_110;
        }
        int v28 = *((_DWORD *)this + 12);
        int v29 = *v27;
        if (v28 < *v27)
        {
          *((_DWORD *)this + 12) = v28 + 1;
          Aligned = *(google::protobuf::Arena ***)&v27[2 * v28 + 2];
          goto LABEL_115;
        }
        if (v29 == *((_DWORD *)this + 13)) {
          goto LABEL_107;
        }
LABEL_110:
        *uint64_t v27 = v29 + 1;
        uint64_t v67 = *(google::protobuf::Arena **)v8;
        if (!*(void *)v8) {
          operator new();
        }
        CoreML::Specification::Coefficients::Coefficients((CoreML::Specification::Coefficients *)Aligned);
        v68 = google::protobuf::Arena::AllocateAligned(v67, 0, 24);
        char *v68 = (google::protobuf::Arena *)Aligned;
        v68[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::Coefficients>;
        uint64_t v69 = (unint64_t *)((char *)v67 + 32);
        do
          unint64_t v70 = __ldxr(v69);
        while (__stxr((unint64_t)v68, v69));
        v68[2] = (google::protobuf::Arena *)v70;
        uint64_t v71 = *((void *)this + 7);
        uint64_t v72 = *((int *)this + 12);
        *((_DWORD *)this + 12) = v72 + 1;
        *(void *)(v71 + 8 * v72 + 8) = Aligned;
LABEL_115:
        v73 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v73 < 0)
        {
          int v74 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v74 < 0) {
            return 0;
          }
        }
        else
        {
          int v74 = *v73;
          *(void *)a2 = v73 + 1;
        }
        int v75 = google::protobuf::io::CodedInputStream::PushLimit(a2, v74);
        int v77 = *((_DWORD *)a2 + 13);
        BOOL v52 = __OFSUB__(v77--, 1);
        *((_DWORD *)a2 + 13) = v77;
        if (v77 < 0 != v52) {
          return 0;
        }
        int v53 = v75;
        uint64_t result = CoreML::Specification::Coefficients::MergePartialFromCodedStream((CoreML::Specification::Coefficients *)Aligned, (char **)a2, v76);
        if (!result) {
          return result;
        }
        goto LABEL_121;
      case 6u:
        if (v14 == 49)
        {
          int v38 = 50;
          unsigned int v39 = (unint64_t **)a2;
          uint64_t v40 = (uint64_t)v7;
          goto LABEL_67;
        }
        if (v14 != 50) {
          goto LABEL_9;
        }
        uint64_t v31 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v31 < 0)
        {
          unsigned int v32 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if ((v32 & 0x80000000) != 0) {
            return 0;
          }
        }
        else
        {
          unsigned int v32 = *v31;
          *(void *)a2 = v31 + 1;
        }
        if ((v32 & 7) != 0) {
          return 0;
        }
        int v91 = *((_DWORD *)a2 + 12);
        if (v91 == 0x7FFFFFFF) {
          int v92 = -1;
        }
        else {
          int v92 = v91 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
        }
        int v93 = *((_DWORD *)a2 + 10);
        if (v93 == 0x7FFFFFFF) {
          int v94 = -1;
        }
        else {
          int v94 = v93 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
        }
        signed int v95 = *v7;
        unsigned int v96 = v32 >> 3;
        if (v94 >= v92) {
          int v97 = v92;
        }
        else {
          int v97 = v94;
        }
        if (v92 == -1) {
          int v98 = v94;
        }
        else {
          int v98 = v97;
        }
        if (v98 >= (uint64_t)v32)
        {
          v103 = v6;
          v104 = v5;
          v105 = v8;
          signed int v106 = v95 + v96;
          if (v32 > 7)
          {
            google::protobuf::RepeatedField<double>::Reserve(v7, v95 + v96);
            uint64_t v107 = *((void *)this + 9);
            uint64_t v142 = 8 * v106 - 8 * *((int *)this + 16);
            if (v142 >= 1) {
              bzero((void *)(v107 + 8 + 8 * *((int *)this + 16)), 8 * (((unint64_t)v142 >> 3) - ((unint64_t)v142 > 7)) + 8);
            }
          }
          else
          {
            uint64_t v107 = *((void *)this + 9);
          }
          *uint64_t v7 = v106;
          uint64_t v143 = v107 + 8;
          if (!v107) {
            uint64_t v143 = 0;
          }
          uint64_t v8 = v105;
          uint64_t v5 = v104;
          uint64_t v6 = v103;
          uint64_t v9 = v148;
          if (!google::protobuf::io::CodedInputStream::ReadRaw(a2, (char *)(v143 + 8 * v95), v32))
          {
            if ((int)*v7 < 1) {
              return 0;
            }
            uint64_t result = 0;
            *uint64_t v7 = v95;
            return result;
          }
        }
        else if (v32 >= 8)
        {
          if (v96 <= 1) {
            int v99 = 1;
          }
          else {
            int v99 = v32 >> 3;
          }
          do
          {
            unint64_t v149 = 0;
            v100 = *(unint64_t **)a2;
            if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) < 8)
            {
              uint64_t result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v149);
              if (!result) {
                return result;
              }
              unint64_t v101 = v149;
              signed int v95 = *v7;
            }
            else
            {
              unint64_t v101 = *v100;
              *(void *)a2 = v100 + 1;
            }
            if (v95 == *((_DWORD *)this + 17))
            {
              google::protobuf::RepeatedField<double>::Reserve(v7, v95 + 1);
              signed int v95 = *v7;
            }
            uint64_t v102 = *((void *)this + 9) + 8 * v95;
            *((_DWORD *)this + 16) = v95 + 1;
            *(void *)(v102 + 8) = v101;
            ++v95;
            --v99;
          }
          while (v99);
        }
        continue;
      case 7u:
        if (v14 == 57)
        {
          int v38 = 58;
          unsigned int v39 = (unint64_t **)a2;
          uint64_t v40 = (uint64_t)v6;
          goto LABEL_67;
        }
        if (v14 != 58) {
          goto LABEL_9;
        }
        int v33 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v33 < 0)
        {
          unsigned int v34 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if ((v34 & 0x80000000) != 0) {
            return 0;
          }
        }
        else
        {
          unsigned int v34 = *v33;
          *(void *)a2 = v33 + 1;
        }
        if ((v34 & 7) != 0) {
          return 0;
        }
        int v108 = *((_DWORD *)a2 + 12);
        if (v108 == 0x7FFFFFFF) {
          int v109 = -1;
        }
        else {
          int v109 = v108 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
        }
        int v110 = *((_DWORD *)a2 + 10);
        if (v110 == 0x7FFFFFFF) {
          int v111 = -1;
        }
        else {
          int v111 = v110 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
        }
        signed int v112 = *v6;
        unsigned int v113 = v34 >> 3;
        if (v111 >= v109) {
          int v114 = v109;
        }
        else {
          int v114 = v111;
        }
        if (v109 == -1) {
          int v115 = v111;
        }
        else {
          int v115 = v114;
        }
        if (v115 >= (uint64_t)v34)
        {
          v120 = v7;
          v121 = v5;
          v122 = v8;
          signed int v123 = v112 + v113;
          if (v34 > 7)
          {
            google::protobuf::RepeatedField<double>::Reserve(v6, v112 + v113);
            uint64_t v124 = *((void *)this + 12);
            uint64_t v144 = 8 * v123 - 8 * *((int *)this + 22);
            if (v144 >= 1) {
              bzero((void *)(v124 + 8 + 8 * *((int *)this + 22)), 8 * (((unint64_t)v144 >> 3) - ((unint64_t)v144 > 7)) + 8);
            }
          }
          else
          {
            uint64_t v124 = *((void *)this + 12);
          }
          *uint64_t v6 = v123;
          uint64_t v145 = v124 + 8;
          if (!v124) {
            uint64_t v145 = 0;
          }
          uint64_t v8 = v122;
          uint64_t v5 = v121;
          uint64_t v7 = v120;
          uint64_t v9 = v148;
          if (!google::protobuf::io::CodedInputStream::ReadRaw(a2, (char *)(v145 + 8 * v112), v34))
          {
            if ((int)*v6 < 1) {
              return 0;
            }
            uint64_t result = 0;
            *uint64_t v6 = v112;
            return result;
          }
        }
        else if (v34 >= 8)
        {
          if (v113 <= 1) {
            int v116 = 1;
          }
          else {
            int v116 = v34 >> 3;
          }
          do
          {
            unint64_t v149 = 0;
            v117 = *(unint64_t **)a2;
            if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) < 8)
            {
              uint64_t result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v149);
              if (!result) {
                return result;
              }
              unint64_t v118 = v149;
              signed int v112 = *v6;
            }
            else
            {
              unint64_t v118 = *v117;
              *(void *)a2 = v117 + 1;
            }
            if (v112 == *((_DWORD *)this + 23))
            {
              google::protobuf::RepeatedField<double>::Reserve(v6, v112 + 1);
              signed int v112 = *v6;
            }
            uint64_t v119 = *((void *)this + 12) + 8 * v112;
            *((_DWORD *)this + 22) = v112 + 1;
            *(void *)(v119 + 8) = v118;
            ++v112;
            --v116;
          }
          while (v116);
        }
        continue;
      case 8u:
        if (v14 == 65)
        {
          int v38 = 66;
          unsigned int v39 = (unint64_t **)a2;
          uint64_t v40 = (uint64_t)v5;
LABEL_67:
          if (!google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<double,(google::protobuf::internal::WireFormatLite::FieldType)1>(v38, v39, v40))return 0; {
          continue;
          }
        }
        if (v14 != 66)
        {
LABEL_9:
          if (v14) {
            BOOL v16 = (v14 & 7) == 4;
          }
          else {
            BOOL v16 = 1;
          }
          if (v16) {
            return 1;
          }
          if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v14, a3) & 1) == 0)return 0; {
          continue;
          }
        }
        int v35 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v35 < 0)
        {
          unsigned int v36 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if ((v36 & 0x80000000) != 0) {
            return 0;
          }
        }
        else
        {
          unsigned int v36 = *v35;
          *(void *)a2 = v35 + 1;
        }
        if ((v36 & 7) != 0) {
          return 0;
        }
        int v125 = *((_DWORD *)a2 + 12);
        if (v125 == 0x7FFFFFFF) {
          int v126 = -1;
        }
        else {
          int v126 = v125 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
        }
        int v127 = *((_DWORD *)a2 + 10);
        if (v127 == 0x7FFFFFFF) {
          int v128 = -1;
        }
        else {
          int v128 = v127 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
        }
        signed int v129 = *v5;
        unsigned int v130 = v36 >> 3;
        if (v128 >= v126) {
          int v131 = v126;
        }
        else {
          int v131 = v128;
        }
        if (v126 == -1) {
          int v132 = v128;
        }
        else {
          int v132 = v131;
        }
        if (v132 < (uint64_t)v36)
        {
          if (v36 >= 8)
          {
            if (v130 <= 1) {
              int v133 = 1;
            }
            else {
              int v133 = v36 >> 3;
            }
            do
            {
              unint64_t v149 = 0;
              v134 = *(unint64_t **)a2;
              if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) < 8)
              {
                uint64_t result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v149);
                if (!result) {
                  return result;
                }
                unint64_t v135 = v149;
                signed int v129 = *v5;
              }
              else
              {
                unint64_t v135 = *v134;
                *(void *)a2 = v134 + 1;
              }
              if (v129 == *((_DWORD *)this + 29))
              {
                google::protobuf::RepeatedField<double>::Reserve(v5, v129 + 1);
                signed int v129 = *v5;
              }
              uint64_t v136 = *((void *)this + 15) + 8 * v129;
              *((_DWORD *)this + 28) = v129 + 1;
              *(void *)(v136 + 8) = v135;
              ++v129;
              --v133;
            }
            while (v133);
          }
          continue;
        }
        v137 = v7;
        v138 = v6;
        v139 = v8;
        signed int v140 = v129 + v130;
        if (v36 > 7)
        {
          google::protobuf::RepeatedField<double>::Reserve(v5, v129 + v130);
          uint64_t v141 = *((void *)this + 15);
          uint64_t v146 = 8 * v140 - 8 * *((int *)this + 28);
          if (v146 >= 1) {
            bzero((void *)(v141 + 8 + 8 * *((int *)this + 28)), 8 * (((unint64_t)v146 >> 3) - ((unint64_t)v146 > 7)) + 8);
          }
        }
        else
        {
          uint64_t v141 = *((void *)this + 15);
        }
        *uint64_t v5 = v140;
        uint64_t v147 = v141 + 8;
        if (!v141) {
          uint64_t v147 = 0;
        }
        uint64_t v8 = v139;
        uint64_t v6 = v138;
        uint64_t v7 = v137;
        uint64_t v9 = v148;
        if (google::protobuf::io::CodedInputStream::ReadRaw(a2, (char *)(v147 + 8 * v129), v36)) {
          continue;
        }
        if ((int)*v5 >= 1)
        {
          uint64_t result = 0;
          *uint64_t v5 = v129;
          return result;
        }
        return 0;
      default:
        if (v18 == 100)
        {
          if (v14 != 34) {
            goto LABEL_9;
          }
          if (*((_DWORD *)this + 42) != 100)
          {
            CoreML::Specification::SupportVectorClassifier::clear_ClassLabels((uint64_t)this);
            *((_DWORD *)this + 42) = 100;
            operator new();
          }
          int v37 = (CoreML::Specification::StringVector *)*((void *)this + 19);
          unsigned int v47 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v47 < 0)
          {
            int v48 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v48 < 0) {
              return 0;
            }
          }
          else
          {
            int v48 = *v47;
            *(void *)a2 = v47 + 1;
          }
          int v64 = google::protobuf::io::CodedInputStream::PushLimit(a2, v48);
          int v66 = *((_DWORD *)a2 + 13);
          BOOL v52 = __OFSUB__(v66--, 1);
          *((_DWORD *)a2 + 13) = v66;
          if (v66 < 0 != v52) {
            return 0;
          }
          int v53 = v64;
          uint64_t result = CoreML::Specification::StringVector::MergePartialFromCodedStream(v37, (char **)a2, v65);
          if (!result) {
            return result;
          }
        }
        else
        {
          if (v18 != 101 || v14 != 42) {
            goto LABEL_9;
          }
          if (*((_DWORD *)this + 42) != 101)
          {
            CoreML::Specification::SupportVectorClassifier::clear_ClassLabels((uint64_t)this);
            *((_DWORD *)this + 42) = 101;
            operator new();
          }
          uint64_t v22 = (CoreML::Specification::Int64Vector *)*((void *)this + 19);
          uint64_t v41 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v41 < 0)
          {
            int v42 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v42 < 0) {
              return 0;
            }
          }
          else
          {
            int v42 = *v41;
            *(void *)a2 = v41 + 1;
          }
          int v55 = google::protobuf::io::CodedInputStream::PushLimit(a2, v42);
          int v57 = *((_DWORD *)a2 + 13);
          BOOL v52 = __OFSUB__(v57--, 1);
          *((_DWORD *)a2 + 13) = v57;
          if (v57 < 0 != v52) {
            return 0;
          }
          int v53 = v55;
          uint64_t result = CoreML::Specification::Int64Vector::MergePartialFromCodedStream(v22, a2, v56);
          if (!result) {
            return result;
          }
        }
LABEL_121:
        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v53)) {
          return 0;
        }
        continue;
    }
  }
}

void sub_19EB43D80(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

CoreML::Specification::Kernel *CoreML::Specification::Kernel::Kernel(CoreML::Specification::Kernel *this)
{
  *(void *)this = &unk_1EF0D95C0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::Kernel *)&CoreML::Specification::_Kernel_default_instance_) {
    CoreML::Specification::protobuf_SVM_2eproto::InitDefaults(this);
  }
  *((void *)this + 3) = 0;
  return this;
}

void sub_19EB43E58(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::Kernel::MergePartialFromCodedStream(CoreML::Specification::Kernel *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (2)
  {
    while (1)
    {
      uint64_t v5 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1)) {
        break;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *(void *)a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) != 0) {
        goto LABEL_7;
      }
LABEL_23:
      if (v7) {
        BOOL v14 = (v7 & 7) == 4;
      }
      else {
        BOOL v14 = 1;
      }
      if (v14) {
        return 1;
      }
      if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0) {
        goto LABEL_58;
      }
    }
    LODWORD(v6) = 0;
LABEL_6:
    unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v6);
    unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
    if ((v7 & 0x100000000) == 0) {
      goto LABEL_23;
    }
LABEL_7:
    switch(v7 >> 3)
    {
      case 1u:
        if (v7 != 10) {
          goto LABEL_23;
        }
        if (*((_DWORD *)this + 7) != 1)
        {
          CoreML::Specification::Kernel::clear_kernel((uint64_t)this);
          *((_DWORD *)this + 7) = 1;
          operator new();
        }
        uint64_t v9 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v9 < 0)
        {
          int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0) {
            goto LABEL_58;
          }
        }
        else
        {
          int VarintSizeAsIntFallback = *v9;
          *(void *)a2 = v9 + 1;
        }
        uint64_t v21 = (CoreML::Specification::LinearKernel *)google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        int v23 = *((_DWORD *)a2 + 13);
        BOOL v24 = __OFSUB__(v23--, 1);
        *((_DWORD *)a2 + 13) = v23;
        if (v23 < 0 != v24) {
          goto LABEL_58;
        }
        int v25 = (int)v21;
        uint64_t result = CoreML::Specification::LinearKernel::MergePartialFromCodedStream(v21, (char **)a2, v22);
        if (!result) {
          return result;
        }
        uint64_t v27 = a2;
        int v28 = v25;
        goto LABEL_57;
      case 2u:
        if (v7 != 18) {
          goto LABEL_23;
        }
        if (*((_DWORD *)this + 7) != 2)
        {
          CoreML::Specification::Kernel::clear_kernel((uint64_t)this);
          *((_DWORD *)this + 7) = 2;
          operator new();
        }
        unint64_t v11 = (CoreML::Specification::RBFKernel *)*((void *)this + 2);
        int v15 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v15 < 0)
        {
          int v16 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v16 < 0) {
            goto LABEL_58;
          }
        }
        else
        {
          int v16 = *v15;
          *(void *)a2 = v15 + 1;
        }
        int v29 = google::protobuf::io::CodedInputStream::PushLimit(a2, v16);
        int v31 = *((_DWORD *)a2 + 13);
        BOOL v24 = __OFSUB__(v31--, 1);
        *((_DWORD *)a2 + 13) = v31;
        if (v31 < 0 != v24) {
          goto LABEL_58;
        }
        int v32 = v29;
        uint64_t result = CoreML::Specification::RBFKernel::MergePartialFromCodedStream(v11, (char **)a2, v30);
        if (!result) {
          return result;
        }
        goto LABEL_56;
      case 3u:
        if (v7 != 26) {
          goto LABEL_23;
        }
        if (*((_DWORD *)this + 7) != 3)
        {
          CoreML::Specification::Kernel::clear_kernel((uint64_t)this);
          *((_DWORD *)this + 7) = 3;
          operator new();
        }
        uint64_t v12 = (CoreML::Specification::PolyKernel *)*((void *)this + 2);
        uint64_t v17 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v17 < 0)
        {
          int v18 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v18 < 0) {
            goto LABEL_58;
          }
        }
        else
        {
          int v18 = *v17;
          *(void *)a2 = v17 + 1;
        }
        int v33 = google::protobuf::io::CodedInputStream::PushLimit(a2, v18);
        int v35 = *((_DWORD *)a2 + 13);
        BOOL v24 = __OFSUB__(v35--, 1);
        *((_DWORD *)a2 + 13) = v35;
        if (v35 < 0 != v24) {
          goto LABEL_58;
        }
        int v32 = v33;
        uint64_t result = CoreML::Specification::PolyKernel::MergePartialFromCodedStream(v12, (char **)a2, v34);
        if (!result) {
          return result;
        }
        goto LABEL_56;
      case 4u:
        if (v7 != 34) {
          goto LABEL_23;
        }
        if (*((_DWORD *)this + 7) != 4)
        {
          CoreML::Specification::Kernel::clear_kernel((uint64_t)this);
          *((_DWORD *)this + 7) = 4;
          operator new();
        }
        uint64_t v13 = (CoreML::Specification::SigmoidKernel *)*((void *)this + 2);
        uint64_t v19 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v19 < 0)
        {
          int v20 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v20 < 0) {
            goto LABEL_58;
          }
        }
        else
        {
          int v20 = *v19;
          *(void *)a2 = v19 + 1;
        }
        int v36 = google::protobuf::io::CodedInputStream::PushLimit(a2, v20);
        int v38 = *((_DWORD *)a2 + 13);
        BOOL v24 = __OFSUB__(v38--, 1);
        *((_DWORD *)a2 + 13) = v38;
        if (v38 < 0 != v24) {
          goto LABEL_58;
        }
        int v32 = v36;
        uint64_t result = CoreML::Specification::SigmoidKernel::MergePartialFromCodedStream(v13, (char **)a2, v37);
        if (!result) {
          return result;
        }
LABEL_56:
        uint64_t v27 = a2;
        int v28 = v32;
LABEL_57:
        if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(v27, v28)) {
          continue;
        }
LABEL_58:
        uint64_t result = 0;
        break;
      default:
        goto LABEL_23;
    }
    return result;
  }
}

void sub_19EB44240(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x1081C40B7564605);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::SupportVectorClassifier::clear_supportVectors(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 164);
  if (v2 == 4 || v2 == 3)
  {
    this = *(void *)(this + 144);
    if (this) {
      this = (*(uint64_t (**)(uint64_t))(*(void *)this + 8))(this);
    }
  }
  *(_DWORD *)(v1 + 164) = 0;
  return this;
}

CoreML::Specification::SparseSupportVectors *CoreML::Specification::SparseSupportVectors::SparseSupportVectors(CoreML::Specification::SparseSupportVectors *this)
{
  *(void *)this = &unk_1EF0D46C8;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  if (this != (CoreML::Specification::SparseSupportVectors *)&CoreML::Specification::_SparseSupportVectors_default_instance_) {
    CoreML::Specification::protobuf_SVM_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 1CoreML::Specification::CustomModel_CustomModelParamValue::New(this, 0) = 0;
  return this;
}

void sub_19EB44388(_Unwind_Exception *a1)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::NeuralNetworkPreprocessing>::TypeHandler>(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::SparseSupportVectors::MergePartialFromCodedStream(CoreML::Specification::SparseSupportVectors *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (CoreML::Specification::SparseSupportVectors *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      uint64_t v6 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      if (v8 != 10 || (v8 & 0xFFFFFFF8) != 8) {
        break;
      }
      uint64_t v12 = (int *)*((void *)this + 4);
      if (!v12)
      {
        int v13 = *((_DWORD *)this + 6);
        int v14 = *((_DWORD *)this + 7);
LABEL_23:
        if (v13 <= v14)
        {
          google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(v5, v14 - v13 + 1);
          uint64_t v12 = (int *)*((void *)this + 4);
        }
        int v14 = *v12;
        goto LABEL_26;
      }
      int v13 = *((_DWORD *)this + 6);
      int v14 = *v12;
      if (v13 < *v12)
      {
        *((_DWORD *)this + 6) = v13 + 1;
        Aligned = *(google::protobuf::Arena ***)&v12[2 * v13 + 2];
        goto LABEL_31;
      }
      if (v14 == *((_DWORD *)this + 7)) {
        goto LABEL_23;
      }
LABEL_26:
      *uint64_t v12 = v14 + 1;
      int v16 = *(google::protobuf::Arena **)v5;
      if (!*(void *)v5) {
        operator new();
      }
      CoreML::Specification::SparseVector::SparseVector((CoreML::Specification::SparseVector *)Aligned);
      uint64_t v17 = google::protobuf::Arena::AllocateAligned(v16, 0, 24);
      *uint64_t v17 = (google::protobuf::Arena *)Aligned;
      v17[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::SparseVector>;
      int v18 = (unint64_t *)((char *)v16 + 32);
      do
        unint64_t v19 = __ldxr(v18);
      while (__stxr((unint64_t)v17, v18));
      v17[2] = (google::protobuf::Arena *)v19;
      uint64_t v20 = *((void *)this + 4);
      uint64_t v21 = *((int *)this + 6);
      *((_DWORD *)this + 6) = v21 + 1;
      *(void *)(v20 + 8 * v21 + 8) = Aligned;
LABEL_31:
      unsigned int v22 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v22 < 0)
      {
        int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (VarintSizeAsIntFallback < 0) {
          return 0;
        }
      }
      else
      {
        int VarintSizeAsIntFallback = *v22;
        *(void *)a2 = v22 + 1;
      }
      int v24 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      int v26 = *((_DWORD *)a2 + 13);
      BOOL v27 = __OFSUB__(v26--, 1);
      *((_DWORD *)a2 + 13) = v26;
      if (v26 < 0 == v27)
      {
        int v28 = v24;
        BOOL result = CoreML::Specification::SparseVector::MergePartialFromCodedStream((CoreML::Specification::SparseVector *)Aligned, a2, v25);
        if (!result) {
          return result;
        }
        if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v28)) {
          continue;
        }
      }
      return 0;
    }
    if (!v8 || (v8 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_19EB445E8(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

CoreML::Specification::DenseSupportVectors *CoreML::Specification::DenseSupportVectors::DenseSupportVectors(CoreML::Specification::DenseSupportVectors *this)
{
  *(void *)this = &unk_1EF0D37F0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  if (this != (CoreML::Specification::DenseSupportVectors *)&CoreML::Specification::_DenseSupportVectors_default_instance_) {
    CoreML::Specification::protobuf_SVM_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 1CoreML::Specification::CustomModel_CustomModelParamValue::New(this, 0) = 0;
  return this;
}

void sub_19EB44680(_Unwind_Exception *a1)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::NeuralNetworkPreprocessing>::TypeHandler>(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::DenseSupportVectors::MergePartialFromCodedStream(CoreML::Specification::DenseSupportVectors *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (CoreML::Specification::DenseSupportVectors *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      uint64_t v6 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      if (v8 != 10 || (v8 & 0xFFFFFFF8) != 8) {
        break;
      }
      uint64_t v12 = (int *)*((void *)this + 4);
      if (!v12)
      {
        int v13 = *((_DWORD *)this + 6);
        int v14 = *((_DWORD *)this + 7);
LABEL_23:
        if (v13 <= v14)
        {
          google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(v5, v14 - v13 + 1);
          uint64_t v12 = (int *)*((void *)this + 4);
        }
        int v14 = *v12;
        goto LABEL_26;
      }
      int v13 = *((_DWORD *)this + 6);
      int v14 = *v12;
      if (v13 < *v12)
      {
        *((_DWORD *)this + 6) = v13 + 1;
        Aligned = *(google::protobuf::Arena ***)&v12[2 * v13 + 2];
        goto LABEL_31;
      }
      if (v14 == *((_DWORD *)this + 7)) {
        goto LABEL_23;
      }
LABEL_26:
      *uint64_t v12 = v14 + 1;
      int v16 = *(google::protobuf::Arena **)v5;
      if (!*(void *)v5) {
        operator new();
      }
      CoreML::Specification::DenseVector::DenseVector((CoreML::Specification::DenseVector *)Aligned);
      uint64_t v17 = google::protobuf::Arena::AllocateAligned(v16, 0, 24);
      *uint64_t v17 = (google::protobuf::Arena *)Aligned;
      v17[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::DenseVector>;
      int v18 = (unint64_t *)((char *)v16 + 32);
      do
        unint64_t v19 = __ldxr(v18);
      while (__stxr((unint64_t)v17, v18));
      v17[2] = (google::protobuf::Arena *)v19;
      uint64_t v20 = *((void *)this + 4);
      uint64_t v21 = *((int *)this + 6);
      *((_DWORD *)this + 6) = v21 + 1;
      *(void *)(v20 + 8 * v21 + 8) = Aligned;
LABEL_31:
      unsigned int v22 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v22 < 0)
      {
        int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (VarintSizeAsIntFallback < 0) {
          return 0;
        }
      }
      else
      {
        int VarintSizeAsIntFallback = *v22;
        *(void *)a2 = v22 + 1;
      }
      int v24 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      int v26 = *((_DWORD *)a2 + 13);
      BOOL v27 = __OFSUB__(v26--, 1);
      *((_DWORD *)a2 + 13) = v26;
      if (v26 < 0 == v27)
      {
        int v28 = v24;
        BOOL result = CoreML::Specification::DenseVector::MergePartialFromCodedStream((CoreML::Specification::DenseVector *)Aligned, (char **)a2, v25);
        if (!result) {
          return result;
        }
        if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v28)) {
          continue;
        }
      }
      return 0;
    }
    if (!v8 || (v8 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_19EB448E0(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::Coefficients::MergePartialFromCodedStream(CoreML::Specification::Coefficients *this, char **a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v6 = *a2;
          if (*a2 < a2[1]) {
            break;
          }
          LODWORD(v7) = 0;
LABEL_7:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v7);
          unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v8 & 0x100000000) != 0) {
            goto LABEL_8;
          }
LABEL_14:
          if (v8) {
            BOOL v12 = (v8 & 7) == 4;
          }
          else {
            BOOL v12 = 1;
          }
          if (v12) {
            return 1;
          }
          if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)return 0; {
        }
          }
        uint64_t v7 = *v6;
        if (*v6 < 1) {
          goto LABEL_7;
        }
        *a2 = v6 + 1;
        unint64_t v8 = v7 | 0x100000000;
        if ((v8 & 0x100000000) == 0) {
          goto LABEL_14;
        }
LABEL_8:
        if ((v8 & 0xFFFFFFF8) != 8) {
          goto LABEL_14;
        }
        if (v8 != 9) {
          break;
        }
        if (!google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<double,(google::protobuf::internal::WireFormatLite::FieldType)1>(10, (unint64_t **)a2, (uint64_t)v5))return 0; {
      }
        }
      if (v8 != 10) {
        goto LABEL_14;
      }
      unint64_t v10 = *a2;
      if (*a2 >= a2[1] || *v10 < 0)
      {
        unsigned int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((google::protobuf::io::CodedInputStream *)a2);
        if ((VarintSizeAsIntFallback & 0x80000000) != 0) {
          return 0;
        }
      }
      else
      {
        unsigned int VarintSizeAsIntFallback = *v10;
        *a2 = v10 + 1;
      }
      if ((VarintSizeAsIntFallback & 7) != 0) {
        return 0;
      }
      int v13 = *((_DWORD *)a2 + 12);
      int v14 = v13 == 0x7FFFFFFF
          ? -1
          : v13 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
      int v15 = *((_DWORD *)a2 + 10);
      int v16 = v15 == 0x7FFFFFFF
          ? -1
          : v15 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
      signed int v17 = *v5;
      unsigned int v18 = VarintSizeAsIntFallback >> 3;
      int v19 = v16 >= v14 ? v14 : v16;
      int v20 = v14 == -1 ? v16 : v19;
      if (v20 >= (uint64_t)VarintSizeAsIntFallback) {
        break;
      }
      if (VarintSizeAsIntFallback >= 8)
      {
        if (v18 <= 1) {
          int v21 = 1;
        }
        else {
          int v21 = VarintSizeAsIntFallback >> 3;
        }
        do
        {
          unint64_t v30 = 0;
          unsigned int v22 = (unint64_t *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 8)
          {
            BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v30);
            if (!result) {
              return result;
            }
            unint64_t v23 = v30;
            signed int v17 = *v5;
          }
          else
          {
            unint64_t v23 = *v22;
            *a2 = (char *)(v22 + 1);
          }
          if (v17 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<double>::Reserve(v5, v17 + 1);
            signed int v17 = *v5;
          }
          uint64_t v24 = *((void *)this + 3) + 8 * v17;
          *((_DWORD *)this + 4) = v17 + 1;
          *(void *)(v24 + 8) = v23;
          ++v17;
          --v21;
        }
        while (v21);
      }
    }
    signed int v26 = v17 + v18;
    if (VarintSizeAsIntFallback > 7)
    {
      google::protobuf::RepeatedField<double>::Reserve(v5, v17 + v18);
      uint64_t v27 = *((void *)this + 3);
      uint64_t v28 = 8 * v26 - 8 * *((int *)this + 4);
      if (v28 >= 1) {
        bzero((void *)(v27 + 8 + 8 * *((int *)this + 4)), 8 * (((unint64_t)v28 >> 3) - ((unint64_t)v28 > 7)) + 8);
      }
    }
    else
    {
      uint64_t v27 = *((void *)this + 3);
    }
    *uint64_t v5 = v26;
    uint64_t v29 = v27 + 8;
    if (!v27) {
      uint64_t v29 = 0;
    }
  }
  while (google::protobuf::io::CodedInputStream::ReadRaw((google::protobuf::io::CodedInputStream *)a2, (char *)(v29 + 8 * v17), VarintSizeAsIntFallback));
  if ((int)*v5 >= 1)
  {
    BOOL result = 0;
    *uint64_t v5 = v17;
    return result;
  }
  return 0;
}

uint64_t CoreML::Specification::SupportVectorClassifier::clear_ClassLabels(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 168);
  if (v2 == 101 || v2 == 100)
  {
    this = *(void *)(this + 152);
    if (this) {
      this = (*(uint64_t (**)(uint64_t))(*(void *)this + 8))(this);
    }
  }
  *(_DWORD *)(v1 + 168) = 0;
  return this;
}

CoreML::Specification::Coefficients *CoreML::Specification::Coefficients::Coefficients(CoreML::Specification::Coefficients *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1EF0CEE50;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  if (this != (CoreML::Specification::Coefficients *)&CoreML::Specification::_Coefficients_default_instance_) {
    CoreML::Specification::protobuf_SVM_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 9) = 0;
  return this;
}

void sub_19EB44CD0(_Unwind_Exception *a1)
{
  uint64_t v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<CoreML::Specification::Coefficients>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

BOOL CoreML::Specification::DenseVector::MergePartialFromCodedStream(CoreML::Specification::DenseVector *this, char **a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v6 = *a2;
          if (*a2 < a2[1]) {
            break;
          }
          LODWORD(v7) = 0;
LABEL_7:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v7);
          unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v8 & 0x100000000) != 0) {
            goto LABEL_8;
          }
LABEL_14:
          if (v8) {
            BOOL v12 = (v8 & 7) == 4;
          }
          else {
            BOOL v12 = 1;
          }
          if (v12) {
            return 1;
          }
          if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)return 0; {
        }
          }
        uint64_t v7 = *v6;
        if (*v6 < 1) {
          goto LABEL_7;
        }
        *a2 = v6 + 1;
        unint64_t v8 = v7 | 0x100000000;
        if ((v8 & 0x100000000) == 0) {
          goto LABEL_14;
        }
LABEL_8:
        if ((v8 & 0xFFFFFFF8) != 8) {
          goto LABEL_14;
        }
        if (v8 != 9) {
          break;
        }
        if (!google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<double,(google::protobuf::internal::WireFormatLite::FieldType)1>(10, (unint64_t **)a2, (uint64_t)v5))return 0; {
      }
        }
      if (v8 != 10) {
        goto LABEL_14;
      }
      unint64_t v10 = *a2;
      if (*a2 >= a2[1] || *v10 < 0)
      {
        unsigned int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((google::protobuf::io::CodedInputStream *)a2);
        if ((VarintSizeAsIntFallback & 0x80000000) != 0) {
          return 0;
        }
      }
      else
      {
        unsigned int VarintSizeAsIntFallback = *v10;
        *a2 = v10 + 1;
      }
      if ((VarintSizeAsIntFallback & 7) != 0) {
        return 0;
      }
      int v13 = *((_DWORD *)a2 + 12);
      int v14 = v13 == 0x7FFFFFFF
          ? -1
          : v13 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
      int v15 = *((_DWORD *)a2 + 10);
      int v16 = v15 == 0x7FFFFFFF
          ? -1
          : v15 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
      signed int v17 = *v5;
      unsigned int v18 = VarintSizeAsIntFallback >> 3;
      int v19 = v16 >= v14 ? v14 : v16;
      int v20 = v14 == -1 ? v16 : v19;
      if (v20 >= (uint64_t)VarintSizeAsIntFallback) {
        break;
      }
      if (VarintSizeAsIntFallback >= 8)
      {
        if (v18 <= 1) {
          int v21 = 1;
        }
        else {
          int v21 = VarintSizeAsIntFallback >> 3;
        }
        do
        {
          unint64_t v30 = 0;
          unsigned int v22 = (unint64_t *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 8)
          {
            BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v30);
            if (!result) {
              return result;
            }
            unint64_t v23 = v30;
            signed int v17 = *v5;
          }
          else
          {
            unint64_t v23 = *v22;
            *a2 = (char *)(v22 + 1);
          }
          if (v17 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<double>::Reserve(v5, v17 + 1);
            signed int v17 = *v5;
          }
          uint64_t v24 = *((void *)this + 3) + 8 * v17;
          *((_DWORD *)this + 4) = v17 + 1;
          *(void *)(v24 + 8) = v23;
          ++v17;
          --v21;
        }
        while (v21);
      }
    }
    signed int v26 = v17 + v18;
    if (VarintSizeAsIntFallback > 7)
    {
      google::protobuf::RepeatedField<double>::Reserve(v5, v17 + v18);
      uint64_t v27 = *((void *)this + 3);
      uint64_t v28 = 8 * v26 - 8 * *((int *)this + 4);
      if (v28 >= 1) {
        bzero((void *)(v27 + 8 + 8 * *((int *)this + 4)), 8 * (((unint64_t)v28 >> 3) - ((unint64_t)v28 > 7)) + 8);
      }
    }
    else
    {
      uint64_t v27 = *((void *)this + 3);
    }
    *uint64_t v5 = v26;
    uint64_t v29 = v27 + 8;
    if (!v27) {
      uint64_t v29 = 0;
    }
  }
  while (google::protobuf::io::CodedInputStream::ReadRaw((google::protobuf::io::CodedInputStream *)a2, (char *)(v29 + 8 * v17), VarintSizeAsIntFallback));
  if ((int)*v5 >= 1)
  {
    BOOL result = 0;
    *uint64_t v5 = v17;
    return result;
  }
  return 0;
}

CoreML::Specification::DenseVector *CoreML::Specification::DenseVector::DenseVector(CoreML::Specification::DenseVector *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1EF0CE990;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  if (this != (CoreML::Specification::DenseVector *)&CoreML::Specification::_DenseVector_default_instance_) {
    CoreML::Specification::protobuf_SVM_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 9) = 0;
  return this;
}

void sub_19EB45084(_Unwind_Exception *a1)
{
  uint64_t v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<CoreML::Specification::DenseVector>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

BOOL CoreML::Specification::SparseVector::MergePartialFromCodedStream(CoreML::Specification::SparseVector *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (CoreML::Specification::SparseVector *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      uint64_t v6 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      if (v8 != 10 || (v8 & 0xFFFFFFF8) != 8) {
        break;
      }
      BOOL v12 = (int *)*((void *)this + 4);
      if (!v12)
      {
        int v13 = *((_DWORD *)this + 6);
        int v14 = *((_DWORD *)this + 7);
LABEL_23:
        if (v13 <= v14)
        {
          google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(v5, v14 - v13 + 1);
          BOOL v12 = (int *)*((void *)this + 4);
        }
        int v14 = *v12;
        goto LABEL_26;
      }
      int v13 = *((_DWORD *)this + 6);
      int v14 = *v12;
      if (v13 < *v12)
      {
        *((_DWORD *)this + 6) = v13 + 1;
        Aligned = *(google::protobuf::Arena ***)&v12[2 * v13 + 2];
        goto LABEL_31;
      }
      if (v14 == *((_DWORD *)this + 7)) {
        goto LABEL_23;
      }
LABEL_26:
      *BOOL v12 = v14 + 1;
      int v16 = *(google::protobuf::Arena **)v5;
      if (!*(void *)v5) {
        operator new();
      }
      CoreML::Specification::SparseNode::SparseNode((CoreML::Specification::SparseNode *)Aligned);
      signed int v17 = google::protobuf::Arena::AllocateAligned(v16, 0, 24);
      *signed int v17 = (google::protobuf::Arena *)Aligned;
      v17[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::SparseNode>;
      unsigned int v18 = (unint64_t *)((char *)v16 + 32);
      do
        unint64_t v19 = __ldxr(v18);
      while (__stxr((unint64_t)v17, v18));
      v17[2] = (google::protobuf::Arena *)v19;
      uint64_t v20 = *((void *)this + 4);
      uint64_t v21 = *((int *)this + 6);
      *((_DWORD *)this + 6) = v21 + 1;
      *(void *)(v20 + 8 * v21 + 8) = Aligned;
LABEL_31:
      unsigned int v22 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v22 < 0)
      {
        int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (VarintSizeAsIntFallback < 0) {
          return 0;
        }
      }
      else
      {
        int VarintSizeAsIntFallback = *v22;
        *(void *)a2 = v22 + 1;
      }
      int v24 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      int v26 = *((_DWORD *)a2 + 13);
      BOOL v27 = __OFSUB__(v26--, 1);
      *((_DWORD *)a2 + 13) = v26;
      if (v26 < 0 == v27)
      {
        int v28 = v24;
        BOOL result = CoreML::Specification::SparseNode::MergePartialFromCodedStream((CoreML::Specification::SparseNode *)Aligned, (char **)a2, v25);
        if (!result) {
          return result;
        }
        if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v28)) {
          continue;
        }
      }
      return 0;
    }
    if (!v8 || (v8 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_19EB45310(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x1081C404FE48876);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::SparseNode::MergePartialFromCodedStream(CoreML::Specification::SparseNode *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(v6) = 0;
LABEL_6:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
          unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_20;
          }
          goto LABEL_7;
        }
        uint64_t v6 = *v5;
        if (*v5 < 1) {
          goto LABEL_6;
        }
        *a2 = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_20;
        }
LABEL_7:
        if (v7 >> 3 != 2) {
          break;
        }
        if (v7 != 17) {
          goto LABEL_20;
        }
        unint64_t v17 = 0;
        BOOL v12 = (unint64_t *)*a2;
        if ((int)(*((_DWORD *)a2 + 2) - *a2) < 8)
        {
          BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v17);
          if (!result) {
            return result;
          }
          unint64_t v13 = v17;
        }
        else
        {
          unint64_t v13 = *v12;
          *a2 = (char *)(v12 + 1);
        }
        *((void *)this + 2) = v13;
      }
      if (v7 >> 3 != 1 || v7 != 8) {
        break;
      }
      unint64_t v10 = *a2;
      if (*a2 >= a2[1])
      {
        int v11 = 0;
      }
      else
      {
        int v11 = *v10;
        if ((*v10 & 0x80000000) == 0)
        {
          *a2 = v10 + 1;
          goto LABEL_28;
        }
      }
      uint64_t Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a2, v11);
      int v11 = Varint32Fallback;
      if (Varint32Fallback < 0) {
        return 0;
      }
LABEL_28:
      *((_DWORD *)this + 6) = v11;
    }
LABEL_20:
    if (v7) {
      BOOL v14 = (v7 & 7) == 4;
    }
    else {
      BOOL v14 = 1;
    }
    if (v14) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::SparseNode *CoreML::Specification::SparseNode::SparseNode(CoreML::Specification::SparseNode *this)
{
  *(void *)this = &unk_1EF0CE860;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::SparseNode *)&CoreML::Specification::_SparseNode_default_instance_) {
    CoreML::Specification::protobuf_SVM_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  return this;
}

void sub_19EB454E8(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<CoreML::Specification::SparseNode>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

CoreML::Specification::SparseVector *CoreML::Specification::SparseVector::SparseVector(CoreML::Specification::SparseVector *this)
{
  *(void *)this = &unk_1EF0CF868;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  if (this != (CoreML::Specification::SparseVector *)&CoreML::Specification::_SparseVector_default_instance_) {
    CoreML::Specification::protobuf_SVM_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 1CoreML::Specification::CustomModel_CustomModelParamValue::New(this, 0) = 0;
  return this;
}

void sub_19EB45594(_Unwind_Exception *a1)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::NeuralNetworkPreprocessing>::TypeHandler>(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<CoreML::Specification::SparseVector>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

uint64_t CoreML::Specification::Kernel::clear_kernel(uint64_t this)
{
  uint64_t v1 = this;
  switch(*(_DWORD *)(this + 28))
  {
    case 1:
    case 2:
    case 3:
    case 4:
      this = *(void *)(this + 16);
      if (this) {
        this = (*(uint64_t (**)(uint64_t))(*(void *)this + 8))(this);
      }
      break;
    default:
      break;
  }
  *(_DWORD *)(v1 + 28) = 0;
  return this;
}

CoreML::Specification::RBFKernel *CoreML::Specification::RBFKernel::RBFKernel(CoreML::Specification::RBFKernel *this)
{
  *(void *)this = &unk_1EF0DAE18;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::RBFKernel *)&CoreML::Specification::_RBFKernel_default_instance_) {
    CoreML::Specification::protobuf_SVM_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return this;
}

void sub_19EB456CC(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::RBFKernel::MergePartialFromCodedStream(CoreML::Specification::RBFKernel *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 9 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      unint64_t v14 = 0;
      BOOL v12 = (unint64_t *)*a2;
      if ((int)(*((_DWORD *)a2 + 2) - *a2) < 8)
      {
        BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v14);
        if (!result) {
          return result;
        }
        unint64_t v13 = v14;
      }
      else
      {
        unint64_t v13 = *v12;
        *a2 = (char *)(v12 + 1);
      }
      *((void *)this + 2) = v13;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    BOOL result = v10;
    if (v10) {
      return result;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::PolyKernel *CoreML::Specification::PolyKernel::PolyKernel(CoreML::Specification::PolyKernel *this)
{
  *(void *)this = &unk_1EF0CE7C8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::PolyKernel *)&CoreML::Specification::_PolyKernel_default_instance_) {
    CoreML::Specification::protobuf_SVM_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((void *)this + 4) = 0;
  return this;
}

void sub_19EB45840(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::PolyKernel::MergePartialFromCodedStream(CoreML::Specification::PolyKernel *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v5 = *a2;
          if (*a2 >= a2[1])
          {
            LODWORD(v6) = 0;
LABEL_6:
            unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
            unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
            if ((v7 & 0x100000000) == 0) {
              goto LABEL_25;
            }
            goto LABEL_7;
          }
          uint64_t v6 = *v5;
          if (*v5 < 1) {
            goto LABEL_6;
          }
          *a2 = v5 + 1;
          unint64_t v7 = v6 | 0x100000000;
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_25;
          }
LABEL_7:
          unsigned int v9 = v7 >> 3;
          if (v7 >> 3 != 3) {
            break;
          }
          if (v7 != 25) {
            goto LABEL_25;
          }
          unint64_t v20 = 0;
          unint64_t v13 = (unint64_t *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 8)
          {
            BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v20);
            if (!result) {
              return result;
            }
            unint64_t v14 = v20;
          }
          else
          {
            unint64_t v14 = *v13;
            *a2 = (char *)(v13 + 1);
          }
          *((void *)this + 3) = v14;
        }
        if (v9 != 2) {
          break;
        }
        if (v7 != 17) {
          goto LABEL_25;
        }
        unint64_t v20 = 0;
        int v15 = (unint64_t *)*a2;
        if ((int)(*((_DWORD *)a2 + 2) - *a2) < 8)
        {
          BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v20);
          if (!result) {
            return result;
          }
          unint64_t v16 = v20;
        }
        else
        {
          unint64_t v16 = *v15;
          *a2 = (char *)(v15 + 1);
        }
        *((void *)this + 2) = v16;
      }
      if (v9 != 1 || v7 != 8) {
        break;
      }
      int v11 = *a2;
      if (*a2 >= a2[1])
      {
        int v12 = 0;
      }
      else
      {
        int v12 = *v11;
        if ((*v11 & 0x80000000) == 0)
        {
          *a2 = v11 + 1;
          goto LABEL_33;
        }
      }
      uint64_t Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a2, v12);
      int v12 = Varint32Fallback;
      if (Varint32Fallback < 0) {
        return 0;
      }
LABEL_33:
      *((_DWORD *)this + 8) = v12;
    }
LABEL_25:
    if (v7) {
      BOOL v17 = (v7 & 7) == 4;
    }
    else {
      BOOL v17 = 1;
    }
    if (v17) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::SigmoidKernel *CoreML::Specification::SigmoidKernel::SigmoidKernel(CoreML::Specification::SigmoidKernel *this)
{
  *(void *)this = &unk_1EF0CFEF0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::SigmoidKernel *)&CoreML::Specification::_SigmoidKernel_default_instance_) {
    CoreML::Specification::protobuf_SVM_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  return this;
}

void sub_19EB45A60(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::SigmoidKernel::MergePartialFromCodedStream(CoreML::Specification::SigmoidKernel *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(v6) = 0;
LABEL_6:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
          unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_20;
          }
          goto LABEL_7;
        }
        uint64_t v6 = *v5;
        if (*v5 < 1) {
          goto LABEL_6;
        }
        *a2 = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_20;
        }
LABEL_7:
        if (v7 >> 3 != 2) {
          break;
        }
        if (v7 != 17) {
          goto LABEL_20;
        }
        unint64_t v16 = 0;
        int v12 = (unint64_t *)*a2;
        if ((int)(*((_DWORD *)a2 + 2) - *a2) < 8)
        {
          BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v16);
          if (!result) {
            return result;
          }
          unint64_t v13 = v16;
        }
        else
        {
          unint64_t v13 = *v12;
          *a2 = (char *)(v12 + 1);
        }
        *((void *)this + 3) = v13;
      }
      if (v7 >> 3 != 1 || v7 != 9) {
        break;
      }
      unint64_t v16 = 0;
      BOOL v10 = (unint64_t *)*a2;
      if ((int)(*((_DWORD *)a2 + 2) - *a2) < 8)
      {
        BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v16);
        if (!result) {
          return result;
        }
        unint64_t v11 = v16;
      }
      else
      {
        unint64_t v11 = *v10;
        *a2 = (char *)(v10 + 1);
      }
      *((void *)this + 2) = v11;
    }
LABEL_20:
    if (v7) {
      BOOL v14 = (v7 & 7) == 4;
    }
    else {
      BOOL v14 = 1;
    }
    BOOL result = v14;
    if (v14) {
      return result;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

std::string *CoreML::Specification::SupportVectorClassifier::MergeFrom(std::string *this, const CoreML::Specification::SupportVectorClassifier *a2)
{
  uint64_t v3 = (uint64_t)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    google::protobuf::RepeatedField<float>::Reserve((unsigned int *)(v3 + 16), *(_DWORD *)(v3 + 16) + v5);
    this = (std::string *)memcpy((void *)(*(void *)(v3 + 24) + 4 * *(int *)(v3 + 16) + 8), (const void *)(*((void *)a2 + 3) + 8), 4 * *((int *)a2 + 4));
    *(_DWORD *)(v3 + 16) += *((_DWORD *)a2 + 4);
  }
  unsigned int v6 = *((_DWORD *)a2 + 12);
  if (v6)
  {
    unint64_t v7 = (CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts **)(*((void *)a2 + 7) + 8);
    unint64_t v8 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 40), *((_DWORD *)a2 + 12));
    this = (std::string *)google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<CoreML::Specification::Coefficients>::TypeHandler>((unint64_t *)(v3 + 40), (CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts **)v8, v7, v6, **(_DWORD **)(v3 + 56) - *(_DWORD *)(v3 + 48));
    signed int v9 = *(_DWORD *)(v3 + 48) + v6;
    *(_DWORD *)(v3 + 48) = v9;
    BOOL v10 = *(signed int **)(v3 + 56);
    if (*v10 < v9) {
      *BOOL v10 = v9;
    }
  }
  int v11 = *((_DWORD *)a2 + 16);
  if (v11)
  {
    google::protobuf::RepeatedField<double>::Reserve((unsigned int *)(v3 + 64), *(_DWORD *)(v3 + 64) + v11);
    this = (std::string *)memcpy((void *)(*(void *)(v3 + 72) + 8 * *(int *)(v3 + 64) + 8), (const void *)(*((void *)a2 + 9) + 8), 8 * *((int *)a2 + 16));
    *(_DWORD *)(v3 + 64) += *((_DWORD *)a2 + 16);
  }
  int v12 = *((_DWORD *)a2 + 22);
  if (v12)
  {
    google::protobuf::RepeatedField<double>::Reserve((unsigned int *)(v3 + 88), *(_DWORD *)(v3 + 88) + v12);
    this = (std::string *)memcpy((void *)(*(void *)(v3 + 96) + 8 * *(int *)(v3 + 88) + 8), (const void *)(*((void *)a2 + 12) + 8), 8 * *((int *)a2 + 22));
    *(_DWORD *)(v3 + 88) += *((_DWORD *)a2 + 22);
  }
  int v13 = *((_DWORD *)a2 + 28);
  if (v13)
  {
    google::protobuf::RepeatedField<double>::Reserve((unsigned int *)(v3 + 112), *(_DWORD *)(v3 + 112) + v13);
    this = (std::string *)memcpy((void *)(*(void *)(v3 + 120) + 8 * *(int *)(v3 + 112) + 8), (const void *)(*((void *)a2 + 15) + 8), 8 * *((int *)a2 + 28));
    *(_DWORD *)(v3 + 112) += *((_DWORD *)a2 + 28);
  }
  if (a2 != (const CoreML::Specification::SupportVectorClassifier *)&CoreML::Specification::_SupportVectorClassifier_default_instance_
    && *((void *)a2 + 17))
  {
    BOOL v14 = *(std::string **)(v3 + 136);
    if (!v14) {
      operator new();
    }
    this = CoreML::Specification::Kernel::MergeFrom(v14, *((const CoreML::Specification::Kernel **)a2 + 17));
  }
  int v15 = *((_DWORD *)a2 + 41);
  if (v15 == 4)
  {
    if (*(_DWORD *)(v3 + 164) != 4)
    {
      CoreML::Specification::SupportVectorClassifier::clear_supportVectors(v3);
      *(_DWORD *)(v3 + 164) = 4;
      operator new();
    }
    this = CoreML::Specification::DenseSupportVectors::MergeFrom(*(std::string **)(v3 + 144), *((const CoreML::Specification::DenseSupportVectors **)a2 + 18));
  }
  else if (v15 == 3)
  {
    if (*(_DWORD *)(v3 + 164) != 3)
    {
      CoreML::Specification::SupportVectorClassifier::clear_supportVectors(v3);
      *(_DWORD *)(v3 + 164) = 3;
      operator new();
    }
    this = CoreML::Specification::SparseSupportVectors::MergeFrom(*(std::string **)(v3 + 144), *((const CoreML::Specification::SparseSupportVectors **)a2 + 18));
  }
  int v16 = *((_DWORD *)a2 + 42);
  if (v16 == 101)
  {
    if (*(_DWORD *)(v3 + 168) != 101)
    {
      CoreML::Specification::SupportVectorClassifier::clear_ClassLabels(v3);
      *(_DWORD *)(v3 + 168) = 101;
      operator new();
    }
    unsigned int v18 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts *)*((void *)a2 + 19);
    unint64_t v20 = *(unint64_t **)(v3 + 152);
    return (std::string *)CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts::MergeFrom(v20, v18);
  }
  else if (v16 == 100)
  {
    if (*(_DWORD *)(v3 + 168) != 100)
    {
      CoreML::Specification::SupportVectorClassifier::clear_ClassLabels(v3);
      *(_DWORD *)(v3 + 168) = 100;
      operator new();
    }
    BOOL v17 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedStrings *)*((void *)a2 + 19);
    unint64_t v19 = *(std::string **)(v3 + 152);
    return CoreML::Specification::MILSpec::TensorValue_RepeatedStrings::MergeFrom(v19, v17);
  }
  return this;
}

void sub_19EB46040(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

unint64_t *google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<CoreML::Specification::Coefficients>::TypeHandler>(unint64_t *result, CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts **a2, CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts **a3, unsigned int a4, unsigned int a5)
{
  signed int v9 = (google::protobuf::Arena **)result;
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    int v11 = a3;
    int v12 = a2;
    do
    {
      BOOL v14 = *v11++;
      int v13 = v14;
      int v15 = *v12++;
      BOOL result = google::protobuf::internal::GenericTypeHandler<CoreML::Specification::GLMClassifier_DoubleArray>::Merge(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    unsigned int v18 = *v9;
    unint64_t v19 = (google::protobuf::Arena ***)&a2[a5];
    unint64_t v20 = &a3[a5];
    do
    {
      uint64_t v21 = *v20;
      if (!v18) {
        operator new();
      }
      CoreML::Specification::Coefficients::Coefficients((CoreML::Specification::Coefficients *)Aligned);
      unint64_t v23 = google::protobuf::Arena::AllocateAligned(v18, 0, 24);
      char *v23 = (google::protobuf::Arena *)Aligned;
      v23[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::Coefficients>;
      int v24 = (unint64_t *)((char *)v18 + 32);
      do
        unint64_t v25 = __ldxr(v24);
      while (__stxr((unint64_t)v23, v24));
      v23[2] = (google::protobuf::Arena *)v25;
      BOOL result = google::protobuf::internal::GenericTypeHandler<CoreML::Specification::GLMClassifier_DoubleArray>::Merge(v21, (CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts *)Aligned);
      *v19++ = Aligned;
      ++v20;
      --v17;
    }
    while (v17);
  }
  return result;
}

void sub_19EB461B8(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::Kernel::MergeFrom(std::string *this, const CoreML::Specification::Kernel *a2)
{
  uint64_t v3 = (uint64_t)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  switch(*((_DWORD *)a2 + 7))
  {
    case 1:
      if (*(_DWORD *)(v3 + 28) != 1)
      {
        CoreML::Specification::Kernel::clear_kernel(v3);
        *(_DWORD *)(v3 + 28) = 1;
        operator new();
      }
      uint64_t v11 = *(void *)(*((void *)a2 + 2) + 8);
      if (v11)
      {
        int v12 = (unint64_t *)(*(void *)(v3 + 16) + 8);
        this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(v12, v11 & 0xFFFFFFFFFFFFFFFELL);
      }
      break;
    case 2:
      if (*(_DWORD *)(v3 + 28) != 2)
      {
        CoreML::Specification::Kernel::clear_kernel(v3);
        *(_DWORD *)(v3 + 28) = 2;
        operator new();
      }
      uint64_t v5 = *(void *)(v3 + 16);
      uint64_t v8 = *((void *)a2 + 2);
      uint64_t v13 = *(void *)(v8 + 8);
      if (v13) {
        this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)(v5 + 8), v13 & 0xFFFFFFFFFFFFFFFELL);
      }
      double v14 = *(double *)(v8 + 16);
      if (v14 != 0.0) {
        *(double *)(v5 + 16) = v14;
      }
      break;
    case 3:
      if (*(_DWORD *)(v3 + 28) != 3)
      {
        CoreML::Specification::Kernel::clear_kernel(v3);
        *(_DWORD *)(v3 + 28) = 3;
        operator new();
      }
      unsigned int v6 = (const CoreML::Specification::PolyKernel *)*((void *)a2 + 2);
      signed int v9 = *(std::string **)(v3 + 16);
      this = CoreML::Specification::PolyKernel::MergeFrom(v9, v6);
      break;
    case 4:
      if (*(_DWORD *)(v3 + 28) != 4)
      {
        CoreML::Specification::Kernel::clear_kernel(v3);
        *(_DWORD *)(v3 + 28) = 4;
        operator new();
      }
      unint64_t v7 = (const CoreML::Specification::SigmoidKernel *)*((void *)a2 + 2);
      uint64_t v10 = *(std::string **)(v3 + 16);
      this = CoreML::Specification::SigmoidKernel::MergeFrom(v10, v7);
      break;
    default:
      return this;
  }
  return this;
}

void sub_19EB46488(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x1081C40E1DA5700);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::SparseSupportVectors::MergeFrom(std::string *this, const CoreML::Specification::SparseSupportVectors *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  unsigned int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    unsigned int v6 = (const CoreML::Specification::SparseVector **)(*((void *)a2 + 4) + 8);
    unint64_t v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)&v3->__r_.__value_.__r.__words[2], v5);
    this = (std::string *)google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<CoreML::Specification::SparseVector>::TypeHandler>(&v3->__r_.__value_.__r.__words[2], (unint64_t **)v7, v6, v5, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    signed int v8 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v5;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v8;
    std::string::size_type size = (signed int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v8) {
      *std::string::size_type size = v8;
    }
  }
  return this;
}

std::string *CoreML::Specification::DenseSupportVectors::MergeFrom(std::string *this, const CoreML::Specification::DenseSupportVectors *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  unsigned int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    unsigned int v6 = (CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts **)(*((void *)a2 + 4) + 8);
    unint64_t v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)&v3->__r_.__value_.__r.__words[2], v5);
    this = (std::string *)google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<CoreML::Specification::DenseVector>::TypeHandler>(&v3->__r_.__value_.__r.__words[2], (CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts **)v7, v6, v5, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    signed int v8 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v5;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v8;
    std::string::size_type size = (signed int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v8) {
      *std::string::size_type size = v8;
    }
  }
  return this;
}

unint64_t *google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<CoreML::Specification::DenseVector>::TypeHandler>(unint64_t *result, CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts **a2, CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts **a3, unsigned int a4, unsigned int a5)
{
  signed int v9 = (google::protobuf::Arena **)result;
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    uint64_t v11 = a3;
    int v12 = a2;
    do
    {
      double v14 = *v11++;
      uint64_t v13 = v14;
      int v15 = *v12++;
      BOOL result = google::protobuf::internal::GenericTypeHandler<CoreML::Specification::GLMClassifier_DoubleArray>::Merge(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    unsigned int v18 = *v9;
    unint64_t v19 = (google::protobuf::Arena ***)&a2[a5];
    unint64_t v20 = &a3[a5];
    do
    {
      uint64_t v21 = *v20;
      if (!v18) {
        operator new();
      }
      CoreML::Specification::DenseVector::DenseVector((CoreML::Specification::DenseVector *)Aligned);
      unint64_t v23 = google::protobuf::Arena::AllocateAligned(v18, 0, 24);
      char *v23 = (google::protobuf::Arena *)Aligned;
      v23[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::DenseVector>;
      int v24 = (unint64_t *)((char *)v18 + 32);
      do
        unint64_t v25 = __ldxr(v24);
      while (__stxr((unint64_t)v23, v24));
      v23[2] = (google::protobuf::Arena *)v25;
      BOOL result = google::protobuf::internal::GenericTypeHandler<CoreML::Specification::GLMClassifier_DoubleArray>::Merge(v21, (CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts *)Aligned);
      *v19++ = Aligned;
      ++v20;
      --v17;
    }
    while (v17);
  }
  return result;
}

void sub_19EB46764(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

unint64_t *google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<CoreML::Specification::SparseVector>::TypeHandler>(unint64_t *result, unint64_t **a2, const CoreML::Specification::SparseVector **a3, unsigned int a4, unsigned int a5)
{
  signed int v9 = (google::protobuf::Arena **)result;
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    uint64_t v11 = a3;
    int v12 = a2;
    do
    {
      double v14 = *v11++;
      uint64_t v13 = v14;
      int v15 = *v12++;
      BOOL result = google::protobuf::internal::GenericTypeHandler<CoreML::Specification::SparseVector>::Merge(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    unsigned int v18 = *v9;
    unint64_t v19 = (google::protobuf::Arena ***)&a2[a5];
    unint64_t v20 = &a3[a5];
    do
    {
      uint64_t v21 = *v20;
      if (!v18) {
        operator new();
      }
      CoreML::Specification::SparseVector::SparseVector((CoreML::Specification::SparseVector *)Aligned);
      unint64_t v23 = google::protobuf::Arena::AllocateAligned(v18, 0, 24);
      char *v23 = (google::protobuf::Arena *)Aligned;
      v23[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::SparseVector>;
      int v24 = (unint64_t *)((char *)v18 + 32);
      do
        unint64_t v25 = __ldxr(v24);
      while (__stxr((unint64_t)v23, v24));
      v23[2] = (google::protobuf::Arena *)v25;
      BOOL result = google::protobuf::internal::GenericTypeHandler<CoreML::Specification::SparseVector>::Merge(v21, (unint64_t *)Aligned);
      *v19++ = Aligned;
      ++v20;
      --v17;
    }
    while (v17);
  }
  return result;
}

void sub_19EB468AC(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

unint64_t *google::protobuf::internal::GenericTypeHandler<CoreML::Specification::SparseVector>::Merge(const CoreML::Specification::SparseVector *a1, unint64_t *a2)
{
  return CoreML::Specification::SparseVector::MergeFrom(a2, a1);
}

unint64_t *CoreML::Specification::SparseVector::MergeFrom(unint64_t *this, const CoreML::Specification::SparseVector *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    uint64_t v28 = *((void *)a2 + 4);
    this = (unint64_t *)google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 2), v5);
    unsigned int v6 = this;
    uint64_t v7 = *(int *)v3[4];
    uint64_t v8 = *((int *)v3 + 6);
    int v9 = v7 - v8;
    if ((int)v7 - (int)v8 >= v5) {
      uint64_t v10 = v5;
    }
    else {
      uint64_t v10 = v9;
    }
    if ((int)v10 >= 1)
    {
      uint64_t v11 = (const CoreML::Specification::SparseNode **)(v28 + 8);
      int v12 = (std::string **)this;
      do
      {
        double v14 = *v11++;
        uint64_t v13 = v14;
        int v15 = *v12++;
        this = (unint64_t *)google::protobuf::internal::GenericTypeHandler<CoreML::Specification::SparseNode>::Merge(v13, v15);
        --v10;
      }
      while (v10);
    }
    if (v9 < v5)
    {
      BOOL v16 = (google::protobuf::Arena *)v3[2];
      int v17 = v8 + v5 - v7;
      uint64_t v18 = 8 * v7 - 8 * v8;
      unint64_t v19 = (google::protobuf::Arena ***)((char *)v6 + v18);
      unint64_t v20 = (const CoreML::Specification::SparseNode **)(v18 + v28 + 8);
      do
      {
        uint64_t v21 = *v20;
        if (!v16) {
          operator new();
        }
        CoreML::Specification::SparseNode::SparseNode((CoreML::Specification::SparseNode *)Aligned);
        unint64_t v23 = google::protobuf::Arena::AllocateAligned(v16, 0, 24);
        char *v23 = (google::protobuf::Arena *)Aligned;
        v23[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::SparseNode>;
        int v24 = (unint64_t *)((char *)v16 + 32);
        do
          unint64_t v25 = __ldxr(v24);
        while (__stxr((unint64_t)v23, v24));
        v23[2] = (google::protobuf::Arena *)v25;
        this = (unint64_t *)google::protobuf::internal::GenericTypeHandler<CoreML::Specification::SparseNode>::Merge(v21, (std::string *)Aligned);
        *v19++ = Aligned;
        ++v20;
        --v17;
      }
      while (v17);
    }
    int v26 = *((_DWORD *)v3 + 6) + v5;
    *((_DWORD *)v3 + 6) = v26;
    BOOL v27 = (int *)v3[4];
    if (*v27 < v26) {
      *BOOL v27 = v26;
    }
  }
  return this;
}

void sub_19EB46A8C(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x1081C404FE48876);
  _Unwind_Resume(a1);
}

std::string *google::protobuf::internal::GenericTypeHandler<CoreML::Specification::SparseNode>::Merge(const CoreML::Specification::SparseNode *a1, std::string *a2)
{
  return CoreML::Specification::SparseNode::MergeFrom(a2, a1);
}

std::string *CoreML::Specification::SparseNode::MergeFrom(std::string *this, const CoreML::Specification::SparseNode *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  double v5 = *((double *)a2 + 2);
  if (v5 != 0.0) {
    *(double *)&v3->__r_.__value_.__r.__words[2] = v5;
  }
  int v6 = *((_DWORD *)a2 + 6);
  if (v6) {
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v6;
  }
  return this;
}

std::string *CoreML::Specification::PolyKernel::MergeFrom(std::string *this, const CoreML::Specification::PolyKernel *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  double v5 = *((double *)a2 + 2);
  if (v5 != 0.0) {
    *(double *)&v3->__r_.__value_.__r.__words[2] = v5;
  }
  double v6 = *((double *)a2 + 3);
  if (v6 != 0.0) {
    *(double *)&v3[1].__r_.__value_.__l.__data_ = v6;
  }
  int v7 = *((_DWORD *)a2 + 8);
  if (v7) {
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
  }
  return this;
}

std::string *CoreML::Specification::SigmoidKernel::MergeFrom(std::string *this, const CoreML::Specification::SigmoidKernel *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  double v5 = *((double *)a2 + 2);
  if (v5 != 0.0) {
    *(double *)&v3->__r_.__value_.__r.__words[2] = v5;
  }
  double v6 = *((double *)a2 + 3);
  if (v6 != 0.0) {
    *(double *)&v3[1].__r_.__value_.__l.__data_ = v6;
  }
  return this;
}

uint64_t CoreML::Specification::SupportVectorClassifier::IsInitialized(CoreML::Specification::SupportVectorClassifier *this)
{
  return 1;
}

uint64_t CoreML::Specification::SupportVectorClassifier::Clear(CoreML::Specification::SupportVectorClassifier *this)
{
  *((_DWORD *)this + 4) = 0;
  uint64_t v2 = *((unsigned int *)this + 12);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*((void *)this + 7) + 8);
    do
    {
      uint64_t v4 = *v3++;
      *(_DWORD *)(v4 + 16) = 0;
      --v2;
    }
    while (v2);
    *((_DWORD *)this + 12) = 0;
  }
  *((_DWORD *)this + 16) = 0;
  *((_DWORD *)this + 22) = 0;
  *((_DWORD *)this + 28) = 0;
  uint64_t v5 = *((void *)this + 17);
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
  }
  *((void *)this + 17) = 0;
  CoreML::Specification::SupportVectorClassifier::clear_supportVectors((uint64_t)this);

  return CoreML::Specification::SupportVectorClassifier::clear_ClassLabels((uint64_t)this);
}

void CoreML::Specification::SupportVectorClassifier::New(CoreML::Specification::SupportVectorClassifier *this, google::protobuf::Arena *a2)
{
}

void sub_19EB46CD0(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C4069FFF750);
  _Unwind_Resume(a1);
}

CoreML::Specification::SupportVectorClassifier *CoreML::Specification::SupportVectorClassifier::SupportVectorClassifier(CoreML::Specification::SupportVectorClassifier *this)
{
  *((void *)this + 1) = 0;
  *(_OWORD *)((char *)this + 4CoreML::Specification::CustomModel_CustomModelParamValue::New(this, 0) = 0u;
  *(void *)this = &unk_1EF0D6218;
  *((void *)this + 11) = 0;
  *((void *)this + 12) = 0;
  *((void *)this + 14) = 0;
  *((void *)this + 15) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *(_OWORD *)((char *)this + 56) = 0u;
  *((void *)this + 9) = 0;
  if (this != (CoreML::Specification::SupportVectorClassifier *)&CoreML::Specification::_SupportVectorClassifier_default_instance_) {
    CoreML::Specification::protobuf_SVM_2eproto::InitDefaults(this);
  }
  *((void *)this + 17) = 0;
  *((_DWORD *)this + 42) = 0;
  *((void *)this + 2CoreML::Specification::CustomModel_CustomModelParamValue::New(this, 0) = 0;
  return this;
}

void sub_19EB46D84(_Unwind_Exception *a1)
{
  uint64_t v5 = (void *)v2[15];
  if (v5 && !*v5) {
    operator delete(v5);
  }
  double v6 = (void *)v2[12];
  if (v6 && !*v6) {
    operator delete(v6);
  }
  int v7 = (void *)v2[9];
  if (v7 && !*v7) {
    operator delete(v7);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::NeuralNetworkPreprocessing>::TypeHandler>(v3);
  uint64_t v8 = (void *)v2[3];
  if (v8)
  {
    if (!*v8) {
      operator delete(v8);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::SupportVectorClassifier>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    BOOL result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *BOOL result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::SupportVectorClassifier>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::SupportVectorClassifier>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::SupportVectorClassifier::New(CoreML::Specification::SupportVectorClassifier *this)
{
}

void *CoreML::Specification::SupportVectorClassifier::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.SupportVectorClassifier");
}

void CoreML::Specification::SupportVectorClassifier::~SupportVectorClassifier(CoreML::Specification::SupportVectorClassifier *this)
{
  CoreML::Specification::SupportVectorClassifier::~SupportVectorClassifier(this);

  JUMPOUT(0x19F3C1920);
}

{
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  *(void *)this = &unk_1EF0D6218;
  if (this != (CoreML::Specification::SupportVectorClassifier *)&CoreML::Specification::_SupportVectorClassifier_default_instance_)
  {
    uint64_t v2 = *((void *)this + 17);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  if (*((_DWORD *)this + 41)) {
    CoreML::Specification::SupportVectorClassifier::clear_supportVectors((uint64_t)this);
  }
  if (*((_DWORD *)this + 42)) {
    CoreML::Specification::SupportVectorClassifier::clear_ClassLabels((uint64_t)this);
  }
  uint64_t v3 = (void *)*((void *)this + 15);
  if (v3 && !*v3) {
    operator delete(v3);
  }
  uint64_t v4 = (void *)*((void *)this + 12);
  if (v4 && !*v4) {
    operator delete(v4);
  }
  unint64_t v5 = (void *)*((void *)this + 9);
  if (v5 && !*v5) {
    operator delete(v5);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::NeuralNetworkPreprocessing>::TypeHandler>((void *)this + 5);
  double v6 = (void *)*((void *)this + 3);
  if (v6 && !*v6) {
    operator delete(v6);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::SupportVectorRegressor::GetCachedSize(CoreML::Specification::SupportVectorRegressor *this)
{
  return *((unsigned int *)this + 12);
}

uint64_t *CoreML::Specification::SupportVectorRegressor::SerializeWithCachedSizes(uint64_t *this, google::protobuf::io::CodedOutputStream *a2, google::protobuf::io::CodedOutputStream *a3, google::protobuf::io::CodedOutputStream *a4)
{
  unint64_t v5 = this;
  if (this != &CoreML::Specification::_SupportVectorRegressor_default_instance_)
  {
    uint64_t v6 = this[2];
    if (v6) {
      this = (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
    }
  }
  int v7 = *((_DWORD *)v5 + 13);
  if (v7 == 2)
  {
    this = (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)2, v5[5], a2, a4);
    int v7 = *((_DWORD *)v5 + 13);
  }
  if (v7 == 3) {
    this = (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)3, v5[5], a2, a4);
  }
  if (v5 != &CoreML::Specification::_SupportVectorRegressor_default_instance_)
  {
    uint64_t v8 = v5[3];
    if (v8) {
      this = (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)4, v8, a2, a4);
    }
  }
  double v9 = *((double *)v5 + 4);
  if (v9 != 0.0)
  {
    return (uint64_t *)google::protobuf::internal::WireFormatLite::WriteDouble(5, a2, v9, a3);
  }
  return this;
}

uint64_t CoreML::Specification::SupportVectorRegressor::ByteSizeLong(CoreML::Specification::SupportVectorRegressor *this)
{
  if (this == (CoreML::Specification::SupportVectorRegressor *)&CoreML::Specification::_SupportVectorRegressor_default_instance_)
  {
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v2 = (CoreML::Specification::Kernel *)*((void *)this + 2);
    if (v2)
    {
      uint64_t v3 = CoreML::Specification::Kernel::ByteSizeLong(v2);
      uint64_t v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      uint64_t v4 = 0;
    }
    unint64_t v5 = (unsigned int *)*((void *)this + 3);
    if (v5)
    {
      uint64_t v6 = v5[4];
      uint64_t v7 = 8 * v6;
      if (v6)
      {
        if ((v7 & 0x80000000) != 0) {
          uint64_t v8 = 11;
        }
        else {
          uint64_t v8 = ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
        }
      }
      else
      {
        uint64_t v8 = 0;
      }
      uint64_t v9 = v8 + v7;
      v5[8] = v7;
      v5[9] = v9;
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  if (*((double *)this + 4) == 0.0) {
    uint64_t v10 = v4;
  }
  else {
    uint64_t v10 = v4 + 9;
  }
  int v11 = *((_DWORD *)this + 13);
  if (v11 == 3)
  {
    uint64_t v12 = CoreML::Specification::DenseSupportVectors::ByteSizeLong(*((CoreML::Specification::DenseSupportVectors **)this
                                                                   + 5));
    goto LABEL_20;
  }
  if (v11 == 2)
  {
    uint64_t v12 = CoreML::Specification::SparseSupportVectors::ByteSizeLong(*((CoreML::Specification::SparseSupportVectors **)this
                                                                    + 5));
LABEL_20:
    v10 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  *((_DWORD *)this + 12) = v10;
  return v10;
}

uint64_t CoreML::Specification::SupportVectorRegressor::MergePartialFromCodedStream(CoreML::Specification::SupportVectorRegressor *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      unint64_t v5 = *(char **)a2;
      if (*(void *)a2 < *((void *)a2 + 1)) {
        break;
      }
      LODWORD(v6) = 0;
LABEL_6:
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v6);
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) == 0) {
        goto LABEL_30;
      }
LABEL_7:
      switch(v7 >> 3)
      {
        case 1u:
          if (v7 != 10) {
            goto LABEL_30;
          }
          uint64_t v9 = (CoreML::Specification::Kernel *)*((void *)this + 2);
          if (!v9) {
            operator new();
          }
          uint64_t v10 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v10 < 0)
          {
            int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            int VarintSizeAsIntFallback = *v10;
            *(void *)a2 = v10 + 1;
          }
          int v24 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          int v26 = *((_DWORD *)a2 + 13);
          BOOL v27 = __OFSUB__(v26--, 1);
          *((_DWORD *)a2 + 13) = v26;
          if (v26 < 0 != v27) {
            return 0;
          }
          int v28 = v24;
          uint64_t result = CoreML::Specification::Kernel::MergePartialFromCodedStream(v9, a2, v25);
          if (!result) {
            return result;
          }
          goto LABEL_59;
        case 2u:
          if (v7 != 18) {
            goto LABEL_30;
          }
          if (*((_DWORD *)this + 13) != 2)
          {
            CoreML::Specification::SupportVectorRegressor::clear_supportVectors((uint64_t)this);
            *((_DWORD *)this + 13) = 2;
            operator new();
          }
          uint64_t v12 = (CoreML::Specification::SparseSupportVectors *)*((void *)this + 5);
          unint64_t v20 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v20 < 0)
          {
            int v21 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v21 < 0) {
              return 0;
            }
          }
          else
          {
            int v21 = *v20;
            *(void *)a2 = v20 + 1;
          }
          int v33 = google::protobuf::io::CodedInputStream::PushLimit(a2, v21);
          int v35 = *((_DWORD *)a2 + 13);
          BOOL v27 = __OFSUB__(v35--, 1);
          *((_DWORD *)a2 + 13) = v35;
          if (v35 < 0 != v27) {
            return 0;
          }
          int v28 = v33;
          uint64_t result = CoreML::Specification::SparseSupportVectors::MergePartialFromCodedStream(v12, a2, v34);
          if (!result) {
            return result;
          }
          goto LABEL_59;
        case 3u:
          if (v7 != 26) {
            goto LABEL_30;
          }
          if (*((_DWORD *)this + 13) != 3)
          {
            CoreML::Specification::SupportVectorRegressor::clear_supportVectors((uint64_t)this);
            *((_DWORD *)this + 13) = 3;
            operator new();
          }
          uint64_t v13 = (CoreML::Specification::DenseSupportVectors *)*((void *)this + 5);
          unsigned int v22 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v22 < 0)
          {
            int v23 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v23 < 0) {
              return 0;
            }
          }
          else
          {
            int v23 = *v22;
            *(void *)a2 = v22 + 1;
          }
          int v36 = google::protobuf::io::CodedInputStream::PushLimit(a2, v23);
          int v38 = *((_DWORD *)a2 + 13);
          BOOL v27 = __OFSUB__(v38--, 1);
          *((_DWORD *)a2 + 13) = v38;
          if (v38 < 0 != v27) {
            return 0;
          }
          int v28 = v36;
          uint64_t result = CoreML::Specification::DenseSupportVectors::MergePartialFromCodedStream(v13, a2, v37);
          if (!result) {
            return result;
          }
LABEL_59:
          if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v28)) {
            continue;
          }
          return 0;
        case 4u:
          if (v7 != 34) {
            goto LABEL_30;
          }
          double v14 = (CoreML::Specification::Coefficients *)*((void *)this + 3);
          if (!v14) {
            operator new();
          }
          int v15 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v15 < 0)
          {
            int v16 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v16 < 0) {
              return 0;
            }
          }
          else
          {
            int v16 = *v15;
            *(void *)a2 = v15 + 1;
          }
          int v30 = google::protobuf::io::CodedInputStream::PushLimit(a2, v16);
          int v32 = *((_DWORD *)a2 + 13);
          BOOL v27 = __OFSUB__(v32--, 1);
          *((_DWORD *)a2 + 13) = v32;
          if (v32 < 0 != v27) {
            return 0;
          }
          int v28 = v30;
          uint64_t result = CoreML::Specification::Coefficients::MergePartialFromCodedStream(v14, (char **)a2, v31);
          if (!result) {
            return result;
          }
          goto LABEL_59;
        case 5u:
          if (v7 != 41) {
            goto LABEL_30;
          }
          unint64_t v39 = 0;
          int v17 = *(unint64_t **)a2;
          if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) < 8)
          {
            uint64_t result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v39);
            if (!result) {
              return result;
            }
            unint64_t v18 = v39;
          }
          else
          {
            unint64_t v18 = *v17;
            *(void *)a2 = v17 + 1;
          }
          *((void *)this + 4) = v18;
          break;
        default:
          goto LABEL_30;
      }
    }
    uint64_t v6 = *v5;
    if (*v5 < 1) {
      goto LABEL_6;
    }
    *(void *)a2 = v5 + 1;
    unint64_t v7 = v6 | 0x100000000;
    if ((v7 & 0x100000000) != 0) {
      goto LABEL_7;
    }
LABEL_30:
    if (!v7 || (v7 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_19EB475E4(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::SupportVectorRegressor::clear_supportVectors(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 52);
  if (v2 == 3 || v2 == 2)
  {
    this = *(void *)(this + 40);
    if (this) {
      this = (*(uint64_t (**)(uint64_t))(*(void *)this + 8))(this);
    }
  }
  *(_DWORD *)(v1 + 52) = 0;
  return this;
}

std::string *CoreML::Specification::SupportVectorRegressor::MergeFrom(std::string *this, const CoreML::Specification::SupportVectorRegressor *a2)
{
  uint64_t v3 = (uint64_t)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  if (a2 != (const CoreML::Specification::SupportVectorRegressor *)&CoreML::Specification::_SupportVectorRegressor_default_instance_)
  {
    if (*((void *)a2 + 2))
    {
      unint64_t v5 = *(std::string **)(v3 + 16);
      if (!v5) {
        operator new();
      }
      this = CoreML::Specification::Kernel::MergeFrom(v5, *((const CoreML::Specification::Kernel **)a2 + 2));
    }
    if (*((void *)a2 + 3))
    {
      uint64_t v6 = *(unint64_t **)(v3 + 24);
      if (!v6) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts::MergeFrom(v6, *((const CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts **)a2 + 3));
    }
  }
  double v7 = *((double *)a2 + 4);
  if (v7 != 0.0) {
    *(double *)(v3 + 32) = v7;
  }
  int v8 = *((_DWORD *)a2 + 13);
  if (v8 == 3)
  {
    if (*(_DWORD *)(v3 + 52) != 3)
    {
      CoreML::Specification::SupportVectorRegressor::clear_supportVectors(v3);
      *(_DWORD *)(v3 + 52) = 3;
      operator new();
    }
    uint64_t v10 = (const CoreML::Specification::DenseSupportVectors *)*((void *)a2 + 5);
    uint64_t v12 = *(std::string **)(v3 + 40);
    return CoreML::Specification::DenseSupportVectors::MergeFrom(v12, v10);
  }
  else if (v8 == 2)
  {
    if (*(_DWORD *)(v3 + 52) != 2)
    {
      CoreML::Specification::SupportVectorRegressor::clear_supportVectors(v3);
      *(_DWORD *)(v3 + 52) = 2;
      operator new();
    }
    uint64_t v9 = (const CoreML::Specification::SparseSupportVectors *)*((void *)a2 + 5);
    int v11 = *(std::string **)(v3 + 40);
    return CoreML::Specification::SparseSupportVectors::MergeFrom(v11, v9);
  }
  return this;
}

void sub_19EB478DC(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::SupportVectorRegressor::IsInitialized(CoreML::Specification::SupportVectorRegressor *this)
{
  return 1;
}

uint64_t CoreML::Specification::SupportVectorRegressor::Clear(CoreML::Specification::SupportVectorRegressor *this)
{
  uint64_t v2 = *((void *)this + 2);
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = *((void *)this + 3);
  *((void *)this + 2) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  *((void *)this + 3) = 0;
  *((void *)this + 4) = 0;

  return CoreML::Specification::SupportVectorRegressor::clear_supportVectors((uint64_t)this);
}

void CoreML::Specification::SupportVectorRegressor::New(CoreML::Specification::SupportVectorRegressor *this, google::protobuf::Arena *a2)
{
}

void sub_19EB47A20(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C4034009599);
  _Unwind_Resume(a1);
}

CoreML::Specification::SupportVectorRegressor *CoreML::Specification::SupportVectorRegressor::SupportVectorRegressor(CoreML::Specification::SupportVectorRegressor *this)
{
  *(void *)this = &unk_1EF0D59C8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::SupportVectorRegressor *)&CoreML::Specification::_SupportVectorRegressor_default_instance_) {
    CoreML::Specification::protobuf_SVM_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((void *)this + 4) = 0;
  *((void *)this + 6) = 0;
  return this;
}

void sub_19EB47AAC(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::SupportVectorRegressor>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::SupportVectorRegressor>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::SupportVectorRegressor>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::SupportVectorRegressor::New(CoreML::Specification::SupportVectorRegressor *this)
{
}

void *CoreML::Specification::SupportVectorRegressor::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.SupportVectorRegressor");
}

void CoreML::Specification::SupportVectorRegressor::~SupportVectorRegressor(CoreML::Specification::SupportVectorRegressor *this)
{
  CoreML::Specification::SupportVectorRegressor::~SupportVectorRegressor(this);

  JUMPOUT(0x19F3C1920);
}

{
  uint64_t v2;
  uint64_t v3;

  *(void *)this = &unk_1EF0D59C8;
  if (this != (CoreML::Specification::SupportVectorRegressor *)&CoreML::Specification::_SupportVectorRegressor_default_instance_)
  {
    uint64_t v2 = *((void *)this + 2);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 3);
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
  }
  if (*((_DWORD *)this + 13)) {
    CoreML::Specification::SupportVectorRegressor::clear_supportVectors((uint64_t)this);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::Coefficients::GetCachedSize(CoreML::Specification::Coefficients *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t CoreML::Specification::Coefficients::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2)
{
  if (*(int *)(this + 16) >= 1)
  {
    uint64_t v3 = this;
    if (*((int *)a2 + 4) < 5)
    {
      __src[0] = 10;
      google::protobuf::io::CodedOutputStream::WriteRaw(a2, __src, 1);
      int v4 = *((_DWORD *)a2 + 4);
    }
    else
    {
      *(unsigned char *)(*((void *)a2 + 1))++ = 10;
      int v4 = *((_DWORD *)a2 + 4) - 1;
      *((_DWORD *)a2 + 4) = v4;
    }
    unsigned int v5 = *(_DWORD *)(v3 + 32);
    if (v4 < 5)
    {
      google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v5);
    }
    else
    {
      uint64_t v6 = *((void *)a2 + 1);
      if (v5 < 0x80)
      {
        unsigned int v8 = *(_DWORD *)(v3 + 32);
        double v7 = (unsigned char *)*((void *)a2 + 1);
      }
      else
      {
        double v7 = (unsigned char *)*((void *)a2 + 1);
        do
        {
          *v7++ = v5 | 0x80;
          unsigned int v8 = v5 >> 7;
          unsigned int v9 = v5 >> 14;
          v5 >>= 7;
        }
        while (v9);
      }
      *double v7 = v8;
      int v10 = v7 - v6 + 1;
      *((void *)a2 + 1) += v10;
      *((_DWORD *)a2 + 4) -= v10;
    }
    uint64_t v11 = *(void *)(v3 + 24);
    if (v11) {
      uint64_t v12 = (char *)(v11 + 8);
    }
    else {
      uint64_t v12 = 0;
    }
    int v13 = 8 * *(_DWORD *)(v3 + 16);
    return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v12, v13);
  }
  return this;
}

uint64_t CoreML::Specification::Coefficients::ByteSizeLong(CoreML::Specification::Coefficients *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  uint64_t v2 = 8 * v1;
  if (v1)
  {
    if ((v2 & 0x80000000) != 0) {
      uint64_t v3 = 11;
    }
    else {
      uint64_t v3 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v4 = v3 + v2;
  *((_DWORD *)this + 8) = v2;
  *((_DWORD *)this + 9) = v4;
  return v4;
}

uint64_t CoreML::Specification::Coefficients::IsInitialized(CoreML::Specification::Coefficients *this)
{
  return 1;
}

uint64_t CoreML::Specification::Coefficients::Clear(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  return this;
}

void CoreML::Specification::Coefficients::New(CoreML::Specification::Coefficients *this, google::protobuf::Arena *a2)
{
}

void sub_19EB47E50(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::Coefficients>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::Coefficients>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::Coefficients>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::Coefficients::New(CoreML::Specification::Coefficients *this)
{
}

void *CoreML::Specification::Coefficients::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.Coefficients");
}

void CoreML::Specification::Coefficients::~Coefficients(CoreML::Specification::Coefficients *this)
{
  CoreML::Specification::Coefficients::~Coefficients(this);

  JUMPOUT(0x19F3C1920);
}

{
  void *v2;

  *(void *)this = &unk_1EF0CEE50;
  uint64_t v2 = (void *)*((void *)this + 3);
  if (v2 && !*v2) {
    operator delete(v2);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::DenseSupportVectors::GetCachedSize(CoreML::Specification::DenseSupportVectors *this)
{
  return *((unsigned int *)this + 10);
}

uint64_t CoreML::Specification::DenseSupportVectors::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  int v4 = *(_DWORD *)(this + 24);
  if (v4)
  {
    uint64_t v6 = this;
    for (int i = 0; i != v4; ++i)
      this = google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)1, *(void *)(*(void *)(v6 + 32) + 8 * i + 8), a2, a4);
  }
  return this;
}

uint64_t CoreML::Specification::DenseSupportVectors::IsInitialized(CoreML::Specification::DenseSupportVectors *this)
{
  return 1;
}

uint64_t CoreML::Specification::DenseSupportVectors::Clear(uint64_t this)
{
  uint64_t v1 = *(unsigned int *)(this + 24);
  if ((int)v1 >= 1)
  {
    uint64_t v2 = (uint64_t *)(*(void *)(this + 32) + 8);
    do
    {
      uint64_t v3 = *v2++;
      *(_DWORD *)(v3 + 16) = 0;
      --v1;
    }
    while (v1);
    *(_DWORD *)(this + 24) = 0;
  }
  return this;
}

void CoreML::Specification::DenseSupportVectors::New(CoreML::Specification::DenseSupportVectors *this, google::protobuf::Arena *a2)
{
}

void sub_19EB4809C(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::DenseSupportVectors>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::DenseSupportVectors>;
    int v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::DenseSupportVectors>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::DenseSupportVectors::New(CoreML::Specification::DenseSupportVectors *this)
{
}

void *CoreML::Specification::DenseSupportVectors::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.DenseSupportVectors");
}

void CoreML::Specification::DenseSupportVectors::~DenseSupportVectors(CoreML::Specification::DenseSupportVectors *this)
{
  CoreML::Specification::DenseSupportVectors::~DenseSupportVectors(this);

  JUMPOUT(0x19F3C1920);
}

{
  *(void *)this = &unk_1EF0D37F0;
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::NeuralNetworkPreprocessing>::TypeHandler>((void *)this + 2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::DenseVector::GetCachedSize(CoreML::Specification::DenseVector *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t CoreML::Specification::DenseVector::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2)
{
  if (*(int *)(this + 16) >= 1)
  {
    uint64_t v3 = this;
    if (*((int *)a2 + 4) < 5)
    {
      __src[0] = 10;
      google::protobuf::io::CodedOutputStream::WriteRaw(a2, __src, 1);
      int v4 = *((_DWORD *)a2 + 4);
    }
    else
    {
      *(unsigned char *)(*((void *)a2 + 1))++ = 10;
      int v4 = *((_DWORD *)a2 + 4) - 1;
      *((_DWORD *)a2 + 4) = v4;
    }
    unsigned int v5 = *(_DWORD *)(v3 + 32);
    if (v4 < 5)
    {
      google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v5);
    }
    else
    {
      uint64_t v6 = *((void *)a2 + 1);
      if (v5 < 0x80)
      {
        unsigned int v8 = *(_DWORD *)(v3 + 32);
        double v7 = (unsigned char *)*((void *)a2 + 1);
      }
      else
      {
        double v7 = (unsigned char *)*((void *)a2 + 1);
        do
        {
          *v7++ = v5 | 0x80;
          unsigned int v8 = v5 >> 7;
          unsigned int v9 = v5 >> 14;
          v5 >>= 7;
        }
        while (v9);
      }
      *double v7 = v8;
      int v10 = v7 - v6 + 1;
      *((void *)a2 + 1) += v10;
      *((_DWORD *)a2 + 4) -= v10;
    }
    uint64_t v11 = *(void *)(v3 + 24);
    if (v11) {
      uint64_t v12 = (char *)(v11 + 8);
    }
    else {
      uint64_t v12 = 0;
    }
    int v13 = 8 * *(_DWORD *)(v3 + 16);
    return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v12, v13);
  }
  return this;
}

uint64_t CoreML::Specification::DenseVector::ByteSizeLong(CoreML::Specification::DenseVector *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  uint64_t v2 = 8 * v1;
  if (v1)
  {
    if ((v2 & 0x80000000) != 0) {
      uint64_t v3 = 11;
    }
    else {
      uint64_t v3 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v4 = v3 + v2;
  *((_DWORD *)this + 8) = v2;
  *((_DWORD *)this + 9) = v4;
  return v4;
}

uint64_t CoreML::Specification::DenseVector::IsInitialized(CoreML::Specification::DenseVector *this)
{
  return 1;
}

uint64_t CoreML::Specification::DenseVector::Clear(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  return this;
}

void CoreML::Specification::DenseVector::New(CoreML::Specification::DenseVector *this, google::protobuf::Arena *a2)
{
}

void sub_19EB483DC(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::DenseVector>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::DenseVector>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::DenseVector>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::DenseVector::New(CoreML::Specification::DenseVector *this)
{
}

void *CoreML::Specification::DenseVector::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.DenseVector");
}

void CoreML::Specification::DenseVector::~DenseVector(CoreML::Specification::DenseVector *this)
{
  CoreML::Specification::DenseVector::~DenseVector(this);

  JUMPOUT(0x19F3C1920);
}

{
  void *v2;

  *(void *)this = &unk_1EF0CE990;
  uint64_t v2 = (void *)*((void *)this + 3);
  if (v2 && !*v2) {
    operator delete(v2);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::SparseSupportVectors::GetCachedSize(CoreML::Specification::SparseSupportVectors *this)
{
  return *((unsigned int *)this + 10);
}

uint64_t CoreML::Specification::SparseSupportVectors::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  int v4 = *(_DWORD *)(this + 24);
  if (v4)
  {
    uint64_t v6 = this;
    for (int i = 0; i != v4; ++i)
      this = google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)1, *(void *)(*(void *)(v6 + 32) + 8 * i + 8), a2, a4);
  }
  return this;
}

uint64_t CoreML::Specification::SparseSupportVectors::IsInitialized(CoreML::Specification::SparseSupportVectors *this)
{
  return 1;
}

uint64_t CoreML::Specification::SparseSupportVectors::Clear(uint64_t this)
{
  uint64_t v1 = *(unsigned int *)(this + 24);
  if ((int)v1 >= 1)
  {
    uint64_t v2 = 0;
    uint64_t v3 = *(void *)(this + 32) + 8;
    do
    {
      uint64_t v4 = *(void *)(v3 + 8 * v2);
      uint64_t v5 = *(unsigned int *)(v4 + 24);
      if ((int)v5 >= 1)
      {
        uint64_t v6 = (uint64_t *)(*(void *)(v4 + 32) + 8);
        do
        {
          uint64_t v7 = *v6++;
          *(_DWORD *)(v7 + 24) = 0;
          *(void *)(v7 + 16) = 0;
          --v5;
        }
        while (v5);
        *(_DWORD *)(v4 + 24) = 0;
      }
      ++v2;
    }
    while (v2 != v1);
    *(_DWORD *)(this + 24) = 0;
  }
  return this;
}

void CoreML::Specification::SparseSupportVectors::New(CoreML::Specification::SparseSupportVectors *this, google::protobuf::Arena *a2)
{
}

void sub_19EB48658(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::SparseSupportVectors>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::SparseSupportVectors>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::SparseSupportVectors>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::SparseSupportVectors::New(CoreML::Specification::SparseSupportVectors *this)
{
}

void *CoreML::Specification::SparseSupportVectors::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.SparseSupportVectors");
}

void CoreML::Specification::SparseSupportVectors::~SparseSupportVectors(CoreML::Specification::SparseSupportVectors *this)
{
  CoreML::Specification::SparseSupportVectors::~SparseSupportVectors(this);

  JUMPOUT(0x19F3C1920);
}

{
  *(void *)this = &unk_1EF0D46C8;
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::NeuralNetworkPreprocessing>::TypeHandler>((void *)this + 2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::SparseVector::GetCachedSize(CoreML::Specification::SparseVector *this)
{
  return *((unsigned int *)this + 10);
}

uint64_t CoreML::Specification::SparseVector::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  int v4 = *(_DWORD *)(this + 24);
  if (v4)
  {
    uint64_t v6 = this;
    for (int i = 0; i != v4; ++i)
      this = google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)1, *(void *)(*(void *)(v6 + 32) + 8 * i + 8), a2, a4);
  }
  return this;
}

uint64_t CoreML::Specification::SparseVector::IsInitialized(CoreML::Specification::SparseVector *this)
{
  return 1;
}

uint64_t CoreML::Specification::SparseVector::Clear(uint64_t this)
{
  uint64_t v1 = *(unsigned int *)(this + 24);
  if ((int)v1 >= 1)
  {
    uint64_t v2 = (uint64_t *)(*(void *)(this + 32) + 8);
    do
    {
      uint64_t v3 = *v2++;
      *(_DWORD *)(v3 + 24) = 0;
      *(void *)(v3 + 16) = 0;
      --v1;
    }
    while (v1);
    *(_DWORD *)(this + 24) = 0;
  }
  return this;
}

void CoreML::Specification::SparseVector::New(CoreML::Specification::SparseVector *this, google::protobuf::Arena *a2)
{
}

void sub_19EB4889C(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::SparseVector>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::SparseVector>;
    int v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::SparseVector>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::SparseVector::New(CoreML::Specification::SparseVector *this)
{
}

void *CoreML::Specification::SparseVector::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.SparseVector");
}

void CoreML::Specification::SparseVector::~SparseVector(CoreML::Specification::SparseVector *this)
{
  CoreML::Specification::SparseVector::~SparseVector(this);

  JUMPOUT(0x19F3C1920);
}

{
  *(void *)this = &unk_1EF0CF868;
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::NeuralNetworkPreprocessing>::TypeHandler>((void *)this + 2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::SparseNode::GetCachedSize(CoreML::Specification::SparseNode *this)
{
  return *((unsigned int *)this + 7);
}

uint64_t CoreML::Specification::SparseNode::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, google::protobuf::io::CodedOutputStream *a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  signed int v6 = *(_DWORD *)(this + 24);
  if (v6) {
    this = google::protobuf::internal::WireFormatLite::WriteInt32(1, v6, a2, a4);
  }
  double v7 = *(double *)(v5 + 16);
  if (v7 != 0.0)
  {
    return google::protobuf::internal::WireFormatLite::WriteDouble(2, a2, v7, a3);
  }
  return this;
}

uint64_t CoreML::Specification::SparseNode::IsInitialized(CoreML::Specification::SparseNode *this)
{
  return 1;
}

uint64_t CoreML::Specification::SparseNode::Clear(uint64_t this)
{
  *(_DWORD *)(this + 24) = 0;
  *(void *)(this + 16) = 0;
  return this;
}

void CoreML::Specification::SparseNode::New(CoreML::Specification::SparseNode *this, google::protobuf::Arena *a2)
{
}

void sub_19EB48AC8(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x1081C404FE48876);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::SparseNode>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::SparseNode>;
    int v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::SparseNode>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::SparseNode::New(CoreML::Specification::SparseNode *this)
{
}

void *CoreML::Specification::SparseNode::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.SparseNode");
}

void CoreML::Specification::SparseNode::~SparseNode(CoreML::Specification::SparseNode *this)
{
  *(void *)this = &unk_1EF0CE860;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);

  JUMPOUT(0x19F3C1920);
}

{
  *(void *)this = &unk_1EF0CE860;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::Kernel::GetCachedSize(CoreML::Specification::Kernel *this)
{
  return *((unsigned int *)this + 6);
}

uint64_t CoreML::Specification::Kernel::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 28);
  if (v6 == 1)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 16), a2, a4);
    int v6 = *(_DWORD *)(v5 + 28);
  }
  if (v6 == 2)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)2, *(void *)(v5 + 16), a2, a4);
    int v6 = *(_DWORD *)(v5 + 28);
  }
  if (v6 == 3)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)3, *(void *)(v5 + 16), a2, a4);
    int v6 = *(_DWORD *)(v5 + 28);
  }
  if (v6 == 4)
  {
    uint64_t v7 = *(void *)(v5 + 16);
    return google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)4, v7, a2, a4);
  }
  return this;
}

uint64_t CoreML::Specification::Kernel::IsInitialized(CoreML::Specification::Kernel *this)
{
  return 1;
}

void CoreML::Specification::Kernel::New(CoreML::Specification::Kernel *this, google::protobuf::Arena *a2)
{
}

void sub_19EB48D4C(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C406A65A86DLL);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::Kernel>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::Kernel>;
    int v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::Kernel>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::Kernel::New(CoreML::Specification::Kernel *this)
{
}

void *CoreML::Specification::Kernel::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.Kernel");
}

void CoreML::Specification::Kernel::~Kernel(CoreML::Specification::Kernel *this)
{
  CoreML::Specification::Kernel::~Kernel(this);

  JUMPOUT(0x19F3C1920);
}

{
  *(void *)this = &unk_1EF0D95C0;
  if (*((_DWORD *)this + 7)) {
    CoreML::Specification::Kernel::clear_kernel((uint64_t)this);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::SigmoidKernel::GetCachedSize(CoreML::Specification::SigmoidKernel *this)
{
  return *((unsigned int *)this + 8);
}

uint64_t CoreML::Specification::SigmoidKernel::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = this;
  double v5 = *(double *)(this + 16);
  if (v5 != 0.0) {
    this = google::protobuf::internal::WireFormatLite::WriteDouble(1, a2, v5, a3);
  }
  double v6 = *(double *)(v4 + 24);
  if (v6 != 0.0)
  {
    return google::protobuf::internal::WireFormatLite::WriteDouble(2, a2, v6, a3);
  }
  return this;
}

uint64_t CoreML::Specification::SigmoidKernel::ByteSizeLong(CoreML::Specification::SigmoidKernel *this)
{
  uint64_t v1 = 9;
  if (*((double *)this + 2) == 0.0) {
    uint64_t v1 = 0;
  }
  if (*((double *)this + 3) != 0.0) {
    v1 += 9;
  }
  *((_DWORD *)this + 8) = v1;
  return v1;
}

uint64_t CoreML::Specification::SigmoidKernel::IsInitialized(CoreML::Specification::SigmoidKernel *this)
{
  return 1;
}

uint64_t CoreML::Specification::SigmoidKernel::Clear(uint64_t this)
{
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  return this;
}

void CoreML::Specification::SigmoidKernel::New(CoreML::Specification::SigmoidKernel *this, google::protobuf::Arena *a2)
{
}

void sub_19EB48FAC(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x1081C40B7564605);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::SigmoidKernel>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::SigmoidKernel>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::SigmoidKernel>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::SigmoidKernel::New(CoreML::Specification::SigmoidKernel *this)
{
}

void *CoreML::Specification::SigmoidKernel::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.SigmoidKernel");
}

void CoreML::Specification::SigmoidKernel::~SigmoidKernel(CoreML::Specification::SigmoidKernel *this)
{
  *(void *)this = &unk_1EF0CFEF0;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);

  JUMPOUT(0x19F3C1920);
}

{
  *(void *)this = &unk_1EF0CFEF0;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::PolyKernel::GetCachedSize(CoreML::Specification::PolyKernel *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t CoreML::Specification::PolyKernel::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, google::protobuf::io::CodedOutputStream *a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  signed int v6 = *(_DWORD *)(this + 32);
  if (v6) {
    this = google::protobuf::internal::WireFormatLite::WriteInt32(1, v6, a2, a4);
  }
  double v7 = *(double *)(v5 + 16);
  if (v7 != 0.0) {
    this = google::protobuf::internal::WireFormatLite::WriteDouble(2, a2, v7, a3);
  }
  double v8 = *(double *)(v5 + 24);
  if (v8 != 0.0)
  {
    return google::protobuf::internal::WireFormatLite::WriteDouble(3, a2, v8, a3);
  }
  return this;
}

uint64_t CoreML::Specification::PolyKernel::IsInitialized(CoreML::Specification::PolyKernel *this)
{
  return 1;
}

uint64_t CoreML::Specification::PolyKernel::Clear(uint64_t this)
{
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

void CoreML::Specification::PolyKernel::New(CoreML::Specification::PolyKernel *this, google::protobuf::Arena *a2)
{
}

void sub_19EB4920C(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x1081C40825B58B5);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::PolyKernel>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::PolyKernel>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::PolyKernel>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::PolyKernel::New(CoreML::Specification::PolyKernel *this)
{
}

void *CoreML::Specification::PolyKernel::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.PolyKernel");
}

void CoreML::Specification::PolyKernel::~PolyKernel(CoreML::Specification::PolyKernel *this)
{
  *(void *)this = &unk_1EF0CE7C8;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);

  JUMPOUT(0x19F3C1920);
}

{
  *(void *)this = &unk_1EF0CE7C8;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::RBFKernel::GetCachedSize(CoreML::Specification::RBFKernel *this)
{
  return *((unsigned int *)this + 6);
}

uint64_t CoreML::Specification::RBFKernel::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, google::protobuf::io::CodedOutputStream *a3)
{
  double v3 = *(double *)(this + 16);
  if (v3 != 0.0) {
    return google::protobuf::internal::WireFormatLite::WriteDouble(1, a2, v3, a3);
  }
  return this;
}

uint64_t CoreML::Specification::RBFKernel::ByteSizeLong(CoreML::Specification::RBFKernel *this)
{
  uint64_t v1 = 9;
  if (*((double *)this + 2) == 0.0) {
    uint64_t v1 = 0;
  }
  *((_DWORD *)this + 6) = v1;
  return v1;
}

std::string *CoreML::Specification::RBFKernel::CheckTypeAndMergeFrom(std::string *this, const google::protobuf::MessageLite *a2)
{
  double v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  double v5 = *((double *)a2 + 2);
  if (v5 != 0.0) {
    *(double *)&v3->__r_.__value_.__r.__words[2] = v5;
  }
  return this;
}

uint64_t CoreML::Specification::RBFKernel::IsInitialized(CoreML::Specification::RBFKernel *this)
{
  return 1;
}

uint64_t CoreML::Specification::RBFKernel::Clear(uint64_t this)
{
  *(void *)(this + 16) = 0;
  return this;
}

void CoreML::Specification::RBFKernel::New(CoreML::Specification::RBFKernel *this, google::protobuf::Arena *a2)
{
}

void sub_19EB49460(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x1081C40E1DA5700);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::RBFKernel>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    double v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::RBFKernel>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::RBFKernel>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::RBFKernel::New(CoreML::Specification::RBFKernel *this)
{
}

void *CoreML::Specification::RBFKernel::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.RBFKernel");
}

void CoreML::Specification::RBFKernel::~RBFKernel(CoreML::Specification::RBFKernel *this)
{
  *(void *)this = &unk_1EF0DAE18;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);

  JUMPOUT(0x19F3C1920);
}

{
  *(void *)this = &unk_1EF0DAE18;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

void CoreML::Specification::LinearKernel::New(CoreML::Specification::LinearKernel *this)
{
}

void *CoreML::Specification::LinearKernel::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.LinearKernel");
}

void CoreML::Specification::LinearKernel::~LinearKernel(CoreML::Specification::LinearKernel *this)
{
  *(void *)this = &unk_1EF0CF6A0;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);

  JUMPOUT(0x19F3C1920);
}

{
  *(void *)this = &unk_1EF0CF6A0;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

CoreML::Specification::Kernel *CoreML::Specification::Kernel::Kernel(CoreML::Specification::Kernel *this, const CoreML::Specification::Kernel *a2)
{
  *(void *)this = &unk_1EF0D95C0;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 6) = 0;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  *((_DWORD *)this + 7) = 0;
  switch(*((_DWORD *)a2 + 7))
  {
    case 1:
      CoreML::Specification::Kernel::clear_kernel((uint64_t)this);
      *((_DWORD *)this + 7) = 1;
      operator new();
    case 2:
      CoreML::Specification::Kernel::clear_kernel((uint64_t)this);
      *((_DWORD *)this + 7) = 2;
      operator new();
    case 3:
      CoreML::Specification::Kernel::clear_kernel((uint64_t)this);
      *((_DWORD *)this + 7) = 3;
      operator new();
    case 4:
      CoreML::Specification::Kernel::clear_kernel((uint64_t)this);
      *((_DWORD *)this + 7) = 4;
      operator new();
    default:
      return this;
  }
}

void sub_19EB498D0(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v2, 0x1081C40B7564605);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

CoreML::Specification::SparseSupportVectors *CoreML::Specification::SparseSupportVectors::SparseSupportVectors(CoreML::Specification::SparseSupportVectors *this, const CoreML::Specification::SparseSupportVectors *a2)
{
  *(void *)this = &unk_1EF0D46C8;
  *(_OWORD *)((char *)this + 8) = 0u;
  uint64_t v4 = (unint64_t *)((char *)this + 8);
  unint64_t v5 = (unint64_t *)((char *)this + 16);
  *(_OWORD *)((char *)this + 24) = 0u;
  unsigned int v6 = *((_DWORD *)a2 + 6);
  if (v6)
  {
    uint64_t v7 = *((void *)a2 + 4);
    double v8 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((CoreML::Specification::SparseSupportVectors *)((char *)this + 16), *((_DWORD *)a2 + 6));
    google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<CoreML::Specification::SparseVector>::TypeHandler>(v5, (unint64_t **)v8, (const CoreML::Specification::SparseVector **)(v7 + 8), v6, **((_DWORD **)this + 4) - *((_DWORD *)this + 6));
    signed int v9 = *((_DWORD *)this + 6) + v6;
    *((_DWORD *)this + 6) = v9;
    int v10 = (signed int *)*((void *)this + 4);
    if (*v10 < v9) {
      *int v10 = v9;
    }
  }
  *((_DWORD *)this + 1CoreML::Specification::LinearKernel::New(this, 0) = 0;
  uint64_t v11 = *((void *)a2 + 1);
  if (v11) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(v4, v11 & 0xFFFFFFFFFFFFFFFELL);
  }
  return this;
}

void sub_19EB49A2C(_Unwind_Exception *a1)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::NeuralNetworkPreprocessing>::TypeHandler>(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

CoreML::Specification::DenseSupportVectors *CoreML::Specification::DenseSupportVectors::DenseSupportVectors(CoreML::Specification::DenseSupportVectors *this, const CoreML::Specification::DenseSupportVectors *a2)
{
  *(void *)this = &unk_1EF0D37F0;
  *(_OWORD *)((char *)this + 8) = 0u;
  uint64_t v4 = (unint64_t *)((char *)this + 8);
  unint64_t v5 = (unint64_t *)((char *)this + 16);
  *(_OWORD *)((char *)this + 24) = 0u;
  unsigned int v6 = *((_DWORD *)a2 + 6);
  if (v6)
  {
    uint64_t v7 = *((void *)a2 + 4);
    double v8 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((CoreML::Specification::DenseSupportVectors *)((char *)this + 16), *((_DWORD *)a2 + 6));
    google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<CoreML::Specification::DenseVector>::TypeHandler>(v5, (CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts **)v8, (CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts **)(v7 + 8), v6, **((_DWORD **)this + 4) - *((_DWORD *)this + 6));
    signed int v9 = *((_DWORD *)this + 6) + v6;
    *((_DWORD *)this + 6) = v9;
    int v10 = (signed int *)*((void *)this + 4);
    if (*v10 < v9) {
      *int v10 = v9;
    }
  }
  *((_DWORD *)this + 1CoreML::Specification::LinearKernel::New(this, 0) = 0;
  uint64_t v11 = *((void *)a2 + 1);
  if (v11) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(v4, v11 & 0xFFFFFFFFFFFFFFFELL);
  }
  return this;
}

void sub_19EB49B30(_Unwind_Exception *a1)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::NeuralNetworkPreprocessing>::TypeHandler>(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::CoreMLModels::Gazetteer::GetCachedSize(CoreML::Specification::CoreMLModels::Gazetteer *this)
{
  return *((unsigned int *)this + 12);
}

uint64_t CoreML::Specification::CoreMLModels::Gazetteer::SerializeWithCachedSizes(CoreML::Specification::CoreMLModels::Gazetteer *this, google::protobuf::io::CodedOutputStream *a2, unsigned int a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v6 = *((unsigned int *)this + 8);
  if (v6) {
    google::protobuf::internal::WireFormatLite::WriteUInt32(v6, a2, a3, a4);
  }
  uint64_t result = *((void *)this + 2);
  if (*(char *)(result + 23) < 0)
  {
    uint64_t v8 = *(void *)(result + 8);
    if (!v8) {
      goto LABEL_9;
    }
    uint64_t result = *(void *)result;
    goto LABEL_8;
  }
  LODWORD(v8) = *(unsigned __int8 *)(result + 23);
  if (*(unsigned char *)(result + 23))
  {
LABEL_8:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)result, v8, 1, (uint64_t)"CoreML.Specification.CoreMLModels.Gazetteer.language");
    uint64_t result = google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0xAu, *((void *)this + 2), a2);
  }
LABEL_9:
  uint64_t v9 = *((void *)this + 3);
  if ((*(char *)(v9 + 23) & 0x80000000) == 0)
  {
    if (!*(unsigned char *)(v9 + 23)) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (*(void *)(v9 + 8)) {
LABEL_11:
  }
    uint64_t result = google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(0x64u, v9, a2);
LABEL_12:
  if (*((_DWORD *)this + 13) == 200)
  {
    uint64_t v10 = *((void *)this + 5);
    return google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)0xC8, v10, a2, a4);
  }
  return result;
}

uint64_t CoreML::Specification::CoreMLModels::Gazetteer::ByteSizeLong(CoreML::Specification::CoreMLModels::Gazetteer *this)
{
  uint64_t v2 = *((void *)this + 2);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
  if (*(char *)(v2 + 23) < 0)
  {
    if (*(void *)(v2 + 8)) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v5 = 0;
    goto LABEL_8;
  }
  if (!*(unsigned char *)(v2 + 23)) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v4 = *(void *)(v2 + 8);
  if ((v3 & 0x80u) == 0) {
    uint64_t v4 = v3;
  }
  uint64_t v5 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  uint64_t v6 = *((void *)this + 3);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
  if (*(char *)(v6 + 23) < 0)
  {
    if (!*(void *)(v6 + 8)) {
      goto LABEL_13;
    }
  }
  else if (!*(unsigned char *)(v6 + 23))
  {
    goto LABEL_13;
  }
  uint64_t v8 = *(void *)(v6 + 8);
  if ((v7 & 0x80u) == 0) {
    uint64_t v8 = v7;
  }
  v5 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_13:
  int v9 = *((_DWORD *)this + 8);
  if (v9) {
    v5 += ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  if (*((_DWORD *)this + 13) == 200)
  {
    uint64_t v10 = CoreML::Specification::StringVector::ByteSizeLong(*((CoreML::Specification::StringVector **)this + 5));
    v5 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
  *((_DWORD *)this + 12) = v5;
  return v5;
}

uint64_t CoreML::Specification::CoreMLModels::Gazetteer::MergePartialFromCodedStream(CoreML::Specification::CoreMLModels::Gazetteer *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (std::string **)((char *)this + 24);
  uint64_t v6 = (std::string **)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      uint64_t v7 = *(unsigned __int8 **)a2;
      unint64_t v8 = *((void *)a2 + 1);
      if (*(void *)a2 >= v8)
      {
        LODWORD(v1CoreML::Specification::LinearKernel::New(this, 0) = 0;
LABEL_45:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v10);
        unint64_t v11 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
        if ((v11 & 0x100000000) == 0) {
          goto LABEL_46;
        }
        goto LABEL_9;
      }
      int v9 = v7 + 1;
      uint64_t v10 = *v7;
      if ((char)*v7 >= 1) {
        break;
      }
      if ((unint64_t)v9 >= v8) {
        goto LABEL_45;
      }
      int v12 = *v9;
      if ((v10 & ~v12) < 0x80) {
        goto LABEL_45;
      }
      *(void *)a2 = v7 + 2;
      unint64_t v11 = (v10 + (v12 << 7) - 128) | 0x100000000;
LABEL_9:
      unsigned int v13 = v11 >> 3;
      if (v11 >> 3 > 0x63)
      {
        if (v13 == 100)
        {
          if (v11 != 34) {
            goto LABEL_46;
          }
          if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
            google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
          }
          if ((google::protobuf::internal::WireFormatLite::ReadBytes((unsigned __int8 **)a2, *v5) & 1) == 0) {
            return 0;
          }
        }
        else
        {
          if (v13 != 200 || v11 != 66) {
            goto LABEL_46;
          }
          if (*((_DWORD *)this + 13) != 200)
          {
            *((_DWORD *)this + 13) = 200;
            operator new();
          }
          int v17 = (CoreML::Specification::StringVector *)*((void *)this + 5);
          unint64_t v20 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v20 < 0)
          {
            int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            int VarintSizeAsIntFallback = *v20;
            *(void *)a2 = v20 + 1;
          }
          int v22 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          int v24 = *((_DWORD *)a2 + 13);
          BOOL v25 = __OFSUB__(v24--, 1);
          *((_DWORD *)a2 + 13) = v24;
          if (v24 < 0 != v25) {
            return 0;
          }
          int v26 = v22;
          uint64_t result = CoreML::Specification::StringVector::MergePartialFromCodedStream(v17, (char **)a2, v23);
          if (!result) {
            return result;
          }
          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v26)) {
            return 0;
          }
        }
      }
      else if (v13 == 1)
      {
        if (v11 != 8) {
          goto LABEL_46;
        }
        unint64_t v18 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1))
        {
          int v19 = 0;
          goto LABEL_53;
        }
        int v19 = *v18;
        if (*v18 < 0)
        {
LABEL_53:
          uint64_t Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v19);
          *((_DWORD *)this + 8) = Varint32Fallback;
          if (Varint32Fallback < 0) {
            return 0;
          }
        }
        else
        {
          *((_DWORD *)this + 8) = v19;
          *(void *)a2 = v18 + 1;
        }
      }
      else
      {
        if (v13 != 10 || v11 != 82) {
          goto LABEL_46;
        }
        if (*v6 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
        }
        uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((unsigned __int8 **)a2, *v6);
        if (!result) {
          return result;
        }
        int v15 = (unsigned int *)*v6;
        if (SHIBYTE((*v6)->__r_.__value_.__r.__words[2]) < 0)
        {
          int v15 = *(unsigned int **)v15;
          std::string::size_type size = (*v6)->__r_.__value_.__l.__size_;
        }
        else
        {
          LODWORD(size) = HIBYTE((*v6)->__r_.__value_.__r.__words[2]);
        }
        if (!google::protobuf::internal::WireFormatLite::VerifyUtf8String(v15, size, 0, (uint64_t)"CoreML.Specification.CoreMLModels.Gazetteer.language"))return 0; {
      }
        }
    }
    *(void *)a2 = v9;
    unint64_t v11 = v10 | 0x100000000;
    if ((v11 & 0x100000000) != 0) {
      goto LABEL_9;
    }
LABEL_46:
    if (!v11 || (v11 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v11, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_19EB4A04C(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::CoreMLModels::Gazetteer::MergeFrom(std::string *this, const CoreML::Specification::CoreMLModels::Gazetteer *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  uint64_t v5 = *((void *)a2 + 2);
  if (*(char *)(v5 + 23) < 0)
  {
    if (!*(void *)(v5 + 8)) {
      goto LABEL_11;
    }
  }
  else if (!*(unsigned char *)(v5 + 23))
  {
    goto LABEL_11;
  }
  this = (std::string *)&v3->__r_.__value_.__r.__words[2];
  uint64_t v6 = (long long *)v3->__r_.__value_.__r.__words[2];
  if (v6 != (long long *)v5)
  {
    if (v6 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
    }
    this = std::string::operator=((std::string *)v3->__r_.__value_.__r.__words[2], (const std::string *)v5);
  }
LABEL_11:
  uint64_t v7 = *((void *)a2 + 3);
  if (*(char *)(v7 + 23) < 0)
  {
    if (!*(void *)(v7 + 8)) {
      goto LABEL_19;
    }
  }
  else if (!*(unsigned char *)(v7 + 23))
  {
    goto LABEL_19;
  }
  this = v3 + 1;
  data = (long long *)v3[1].__r_.__value_.__l.__data_;
  if (data != (long long *)v7)
  {
    if (data == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
    }
    this = std::string::operator=((std::string *)v3[1].__r_.__value_.__l.__data_, (const std::string *)v7);
  }
LABEL_19:
  int v9 = *((_DWORD *)a2 + 8);
  if (v9) {
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v9;
  }
  if (*((_DWORD *)a2 + 13) == 200)
  {
    if (HIDWORD(v3[2].__r_.__value_.__r.__words[0]) != 200)
    {
      HIDWORD(v3[2].__r_.__value_.__r.__words[0]) = 200;
      operator new();
    }
    uint64_t v10 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedStrings *)*((void *)a2 + 5);
    unint64_t v11 = (std::string *)v3[1].__r_.__value_.__r.__words[2];
    return CoreML::Specification::MILSpec::TensorValue_RepeatedStrings::MergeFrom(v11, v10);
  }
  return this;
}

void sub_19EB4A1F0(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::CoreMLModels::Gazetteer::IsInitialized(CoreML::Specification::CoreMLModels::Gazetteer *this)
{
  return 1;
}

uint64_t CoreML::Specification::CoreMLModels::Gazetteer::Clear(uint64_t this)
{
  uint64_t v1 = this;
  uint64_t v2 = *(void *)(this + 16);
  if ((long long *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  uint64_t v3 = *(void *)(this + 24);
  if ((long long *)v3 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)uint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
  *(_DWORD *)(this + 32) = 0;
  if (*(_DWORD *)(this + 52) == 200)
  {
    this = *(void *)(this + 40);
    if (this) {
      this = (*(uint64_t (**)(uint64_t))(*(void *)this + 8))(this);
    }
  }
  *(_DWORD *)(v1 + 52) = 0;
  return this;
}

void CoreML::Specification::CoreMLModels::Gazetteer::New(CoreML::Specification::CoreMLModels::Gazetteer *this, google::protobuf::Arena *a2)
{
}

void sub_19EB4A330(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C40C43D3D65);
  _Unwind_Resume(a1);
}

CoreML::Specification::CoreMLModels::Gazetteer *CoreML::Specification::CoreMLModels::Gazetteer::Gazetteer(CoreML::Specification::CoreMLModels::Gazetteer *this)
{
  *(void *)this = &unk_1EF0CF4D8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::CoreMLModels::Gazetteer *)&CoreML::Specification::CoreMLModels::_Gazetteer_default_instance_) {
    CoreML::Specification::CoreMLModels::protobuf_Gazetteer_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  *((_DWORD *)this + 8) = 0;
  *((void *)this + 6) = 0;
  return this;
}

void sub_19EB4A3C4(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::CoreMLModels::Gazetteer>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::CoreMLModels::Gazetteer>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::CoreMLModels::Gazetteer>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::CoreMLModels::Gazetteer::New(CoreML::Specification::CoreMLModels::Gazetteer *this)
{
}

void *CoreML::Specification::CoreMLModels::Gazetteer::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.CoreMLModels.Gazetteer");
}

void CoreML::Specification::CoreMLModels::Gazetteer::~Gazetteer(CoreML::Specification::CoreMLModels::Gazetteer *this)
{
  CoreML::Specification::CoreMLModels::Gazetteer::~Gazetteer(this);

  JUMPOUT(0x19F3C1920);
}

{
  uint64_t v2;
  uint64_t v4;
  int v6;
  uint64_t v7;

  *(void *)this = &unk_1EF0CF4D8;
  uint64_t v2 = *((void *)this + 2);
  if ((long long *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x19F3C1920](v2, 0x1012C40EC159624);
  }
  uint64_t v4 = *((void *)this + 3);
  if ((long long *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    MEMORY[0x19F3C1920](v4, 0x1012C40EC159624);
  }
  uint64_t v6 = *((_DWORD *)this + 13);
  if (v6)
  {
    if (v6 == 200)
    {
      uint64_t v7 = *((void *)this + 5);
      if (v7) {
        (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
      }
    }
    *((_DWORD *)this + 13) = 0;
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::Normalizer::GetCachedSize(CoreML::Specification::Normalizer *this)
{
  return *((unsigned int *)this + 5);
}

uint64_t CoreML::Specification::Normalizer::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  signed int v5 = *(_DWORD *)(this + 16);
  if (v5) {
    return google::protobuf::internal::WireFormatLite::WriteEnum(1, v5, a2, a4);
  }
  return this;
}

uint64_t CoreML::Specification::Normalizer::ByteSizeLong(CoreML::Specification::Normalizer *this)
{
  int v1 = *((_DWORD *)this + 4);
  if (v1)
  {
    if (v1 < 0) {
      uint64_t v2 = 11;
    }
    else {
      uint64_t v2 = ((9 * (__clz(v1 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *((_DWORD *)this + 5) = v2;
  return v2;
}

uint64_t CoreML::Specification::Normalizer::MergePartialFromCodedStream(CoreML::Specification::Normalizer *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      signed int v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      unint64_t v11 = *a2;
      if (*a2 >= a2[1])
      {
        int v12 = 0;
      }
      else
      {
        int v12 = *v11;
        if ((*v11 & 0x80000000) == 0)
        {
          *a2 = v11 + 1;
          goto LABEL_22;
        }
      }
      uint64_t Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a2, v12);
      int v12 = Varint32Fallback;
      if (Varint32Fallback < 0) {
        return 0;
      }
LABEL_22:
      *((_DWORD *)this + 4) = v12;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    if (v10) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

std::string *CoreML::Specification::Normalizer::CheckTypeAndMergeFrom(std::string *this, const google::protobuf::MessageLite *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 4);
  if (v5) {
    LODWORD(v3->__r_.__value_.__r.__words[2]) = v5;
  }
  return this;
}

uint64_t CoreML::Specification::Normalizer::IsInitialized(CoreML::Specification::Normalizer *this)
{
  return 1;
}

uint64_t CoreML::Specification::Normalizer::Clear(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  return this;
}

void CoreML::Specification::Normalizer::New(CoreML::Specification::Normalizer *this, google::protobuf::Arena *a2)
{
}

void sub_19EB4A7C0(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::Normalizer *CoreML::Specification::Normalizer::Normalizer(CoreML::Specification::Normalizer *this)
{
  *(void *)this = &unk_1EF0CE730;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::Normalizer *)&CoreML::Specification::_Normalizer_default_instance_) {
    CoreML::Specification::protobuf_Normalizer_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  return this;
}

void sub_19EB4A844(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::Normalizer>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::Normalizer>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::Normalizer>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::Normalizer::New(CoreML::Specification::Normalizer *this)
{
}

void *CoreML::Specification::Normalizer::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.Normalizer");
}

void CoreML::Specification::Normalizer::~Normalizer(CoreML::Specification::Normalizer *this)
{
  *(void *)this = &unk_1EF0CE730;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);

  JUMPOUT(0x19F3C1920);
}

{
  *(void *)this = &unk_1EF0CE730;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

void CoreML::validate<(MLModelType)610>(CoreML::Specification::protobuf_NonMaximumSuppression_2eproto *a1, uint64_t a2)
{
  uint64_t v3 = a1;
  if (*(void *)(a2 + 16)) {
    uint64_t v4 = *(uint64_t **)(a2 + 16);
  }
  else {
    uint64_t v4 = &CoreML::Specification::_ModelDescription_default_instance_;
  }
  if (*(_DWORD *)(a2 + 44) == 610)
  {
    unint64_t v5 = *(uint64_t **)(a2 + 32);
  }
  else
  {
    CoreML::Specification::protobuf_NonMaximumSuppression_2eproto::InitDefaults(a1);
    unint64_t v5 = &CoreML::Specification::_NonMaximumSuppression_default_instance_;
  }
  CoreML::Result::Result((CoreML::Result *)&v239);
  int v6 = *(_DWORD *)(a2 + 24);
  LODWORD(v238.__r_.__value_.__l.__data_) = 0;
  CoreML::validateModelDescription((uint64_t)__p, (uint64_t)v4, v6, (char *)&v238);
  int v7 = *(_DWORD *)__p;
  uint64_t v239 = *(void *)__p;
  if (SHIBYTE(v241) < 0)
  {
    operator delete((void *)v240);
    int v7 = v239;
  }
  long long v240 = *(_OWORD *)&__p[8];
  uint64_t v241 = v237;
  if ((v7 & 0xFFFFFFEF) != 0)
  {
    *(void *)uint64_t v3 = v239;
    *(_OWORD *)((char *)v3 + 8) = v240;
    *((void *)v3 + 3) = v241;
    long long v240 = 0uLL;
    uint64_t v241 = 0;
    goto LABEL_102;
  }
  uint64_t v221 = *((unsigned int *)v4 + 6);
  if ((int)v221 <= 0) {
    goto LABEL_96;
  }
  v213 = v5;
  v214 = v3;
  uint64_t v8 = 0;
  uint64_t v211 = (uint64_t)(v4 + 2);
  uint64_t v209 = a2;
  uint64_t v210 = (uint64_t)(v4 + 5);
  v212 = v4;
  int v9 = (const void **)v5[2];
  v227 = (const void **)v5[3];
  size_t v218 = *((unsigned __int8 *)v227 + 23);
  size_t v219 = *((unsigned __int8 *)v9 + 23);
  v223 = (const void **)v5[5];
  v225 = (const void **)v5[4];
  uint64_t v216 = v4[4] + 8;
  size_t v217 = *((unsigned __int8 *)v225 + 23);
  size_t v10 = *((unsigned __int8 *)v223 + 23);
  int v11 = -1;
  int v12 = -1;
  int v231 = -1;
  int v13 = -1;
  v215 = v9;
  do
  {
    size_t v14 = v219;
    int v15 = v9;
    if ((v219 & 0x80) != 0)
    {
      int v15 = *v9;
      size_t v14 = (size_t)v9[1];
    }
    uint64_t v16 = *(void *)(*(void *)(v216 + 8 * v8) + 16);
    int v17 = *(char *)(v16 + 23);
    if (v17 >= 0) {
      size_t v18 = *(unsigned __int8 *)(v16 + 23);
    }
    else {
      size_t v18 = *(void *)(v16 + 8);
    }
    if (v17 >= 0) {
      int v19 = *(const void **)(*(void *)(v216 + 8 * v8) + 16);
    }
    else {
      int v19 = *(const void **)v16;
    }
    if (v18 >= v14) {
      size_t v20 = v14;
    }
    else {
      size_t v20 = v18;
    }
    BOOL v21 = memcmp(v15, v19, v20) == 0 && v18 == v14;
    if (v21) {
      int v11 = v8;
    }
    size_t v22 = v218;
    unsigned int v23 = v227;
    if ((v218 & 0x80) != 0)
    {
      unsigned int v23 = *v227;
      size_t v22 = (size_t)v227[1];
    }
    int v230 = v11;
    if (v18 >= v22) {
      size_t v24 = v22;
    }
    else {
      size_t v24 = v18;
    }
    BOOL v25 = memcmp(v23, v19, v24) == 0 && v18 == v22;
    if (v25) {
      int v12 = v8;
    }
    int v229 = v12;
    size_t v26 = v217;
    BOOL v27 = v225;
    if ((v217 & 0x80) != 0)
    {
      BOOL v27 = *v225;
      size_t v26 = (size_t)v225[1];
    }
    if (v18 >= v26) {
      size_t v28 = v26;
    }
    else {
      size_t v28 = v18;
    }
    BOOL v29 = memcmp(v27, v19, v28) == 0 && v18 == v26;
    int v30 = v231;
    if (v29) {
      int v30 = v8;
    }
    int v231 = v30;
    size_t v31 = v10;
    int v32 = v223;
    if ((v10 & 0x80) != 0)
    {
      int v32 = *v223;
      size_t v31 = (size_t)v223[1];
    }
    if (v18 >= v31) {
      size_t v33 = v31;
    }
    else {
      size_t v33 = v18;
    }
    BOOL v34 = memcmp(v32, v19, v33) == 0;
    if (v18 != v31) {
      BOOL v34 = 0;
    }
    if (!v34 && !v29 && !v25 && !v21)
    {
      std::operator+<char>();
      int v53 = std::string::append(&v238, "' was not requested by any of the input feature names (e.g. confidenceInputFeatureName).");
      long long v54 = *(_OWORD *)&v53->__r_.__value_.__l.__data_;
      *(void *)&__p[16] = *((void *)&v53->__r_.__value_.__l + 2);
      *(_OWORD *)std::string __p = v54;
      v53->__r_.__value_.__l.__size_ = 0;
      v53->__r_.__value_.__r.__words[2] = 0;
      v53->__r_.__value_.__r.__words[0] = 0;
      *(void *)v214 = 9;
      std::operator+<char>();
      goto LABEL_97;
    }
    if (v34) {
      int v13 = v8;
    }
    ++v8;
    int v12 = v229;
    int v11 = v230;
    int v9 = v215;
  }
  while (v221 != v8);
  if (v230 == -1)
  {
    uint64_t v3 = v214;
LABEL_96:
    std::operator+<char>();
    int v55 = std::string::append(&v238, "' (as defined by confidenceInputFeatureName) to the model is not present in the model description.");
    long long v56 = *(_OWORD *)&v55->__r_.__value_.__l.__data_;
    *(void *)&__p[16] = *((void *)&v55->__r_.__value_.__l + 2);
    *(_OWORD *)std::string __p = v56;
    v55->__r_.__value_.__l.__size_ = 0;
    v55->__r_.__value_.__r.__words[2] = 0;
    v55->__r_.__value_.__r.__words[0] = 0;
    *(void *)uint64_t v3 = 10;
    std::operator+<char>();
    goto LABEL_97;
  }
  if (v229 == -1)
  {
    std::operator+<char>();
    int v58 = std::string::append(&v238, "' (as defined by coordinatesInputFeatureName) to the model is not present in the model description.");
    long long v59 = *(_OWORD *)&v58->__r_.__value_.__l.__data_;
    *(void *)&__p[16] = *((void *)&v58->__r_.__value_.__l + 2);
    *(_OWORD *)std::string __p = v59;
    v58->__r_.__value_.__l.__size_ = 0;
    v58->__r_.__value_.__r.__words[2] = 0;
    v58->__r_.__value_.__r.__words[0] = 0;
    *(void *)v214 = 10;
    std::operator+<char>();
  }
  else
  {
    uint64_t v224 = *((unsigned int *)v212 + 12);
    if ((int)v224 <= 0)
    {
LABEL_106:
      std::operator+<char>();
      int v60 = std::string::append(&v238, "' (as defined by confidenceOutputFeatureName) from the model is not present in the model description.");
      long long v61 = *(_OWORD *)&v60->__r_.__value_.__l.__data_;
      *(void *)&__p[16] = *((void *)&v60->__r_.__value_.__l + 2);
      *(_OWORD *)std::string __p = v61;
      v60->__r_.__value_.__l.__size_ = 0;
      v60->__r_.__value_.__r.__words[2] = 0;
      v60->__r_.__value_.__r.__words[0] = 0;
      *(void *)v214 = 10;
      std::operator+<char>();
    }
    else
    {
      uint64_t v35 = 0;
      int v36 = (const void **)v213[6];
      v226 = (const void **)v213[7];
      size_t v37 = *((unsigned __int8 *)v226 + 23);
      uint64_t v220 = v212[7] + 8;
      size_t v222 = *((unsigned __int8 *)v36 + 23);
      int v38 = -1;
      int v39 = -1;
      do
      {
        size_t v40 = v222;
        uint64_t v41 = v36;
        if ((v222 & 0x80) != 0)
        {
          uint64_t v41 = *v36;
          size_t v40 = (size_t)v36[1];
        }
        uint64_t v42 = *(void *)(*(void *)(v220 + 8 * v35) + 16);
        int v43 = *(char *)(v42 + 23);
        if (v43 >= 0) {
          size_t v44 = *(unsigned __int8 *)(v42 + 23);
        }
        else {
          size_t v44 = *(void *)(v42 + 8);
        }
        if (v43 >= 0) {
          uint64_t v45 = *(const void **)(*(void *)(v220 + 8 * v35) + 16);
        }
        else {
          uint64_t v45 = *(const void **)v42;
        }
        if (v44 >= v40) {
          size_t v46 = v40;
        }
        else {
          size_t v46 = v44;
        }
        BOOL v47 = memcmp(v41, v45, v46) == 0 && v44 == v40;
        if (v47) {
          int v38 = v35;
        }
        int v228 = v38;
        size_t v48 = v37;
        int v49 = v226;
        if ((v37 & 0x80) != 0)
        {
          int v49 = *v226;
          size_t v48 = (size_t)v226[1];
        }
        if (v44 >= v48) {
          size_t v50 = v48;
        }
        else {
          size_t v50 = v44;
        }
        BOOL v51 = memcmp(v49, v45, v50) == 0;
        if (v44 != v48) {
          BOOL v51 = 0;
        }
        if (!v51 && !v47)
        {
          std::operator+<char>();
          unsigned int v62 = std::string::append(&v238, "' was not requested by any of the output feature names (e.g. confidenceOutputFeatureName).");
          long long v63 = *(_OWORD *)&v62->__r_.__value_.__l.__data_;
          *(void *)&__p[16] = *((void *)&v62->__r_.__value_.__l + 2);
          *(_OWORD *)std::string __p = v63;
          v62->__r_.__value_.__l.__size_ = 0;
          v62->__r_.__value_.__r.__words[2] = 0;
          v62->__r_.__value_.__r.__words[0] = 0;
          *(void *)v214 = 9;
          std::operator+<char>();
          goto LABEL_97;
        }
        if (v51) {
          int v39 = v35;
        }
        ++v35;
        int v38 = v228;
      }
      while (v224 != v35);
      if (v228 == -1) {
        goto LABEL_106;
      }
      if (v39 != -1)
      {
        LODWORD(v235.__r_.__value_.__l.__data_) = 5;
        std::vector<CoreML::Specification::FeatureType::TypeCase>::vector[abi:ne180100](&v238, &v235, 1uLL);
        CoreML::validateDescriptionsContainFeatureWithNameAndType<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>>((CoreML::Result *)__p, v211, v215, (unsigned int **)&v238);
        uint64_t v239 = *(void *)__p;
        if (SHIBYTE(v241) < 0) {
          operator delete((void *)v240);
        }
        long long v240 = *(_OWORD *)&__p[8];
        uint64_t v241 = v237;
        HIBYTE(v237) = 0;
        __p[8] = 0;
        if (v238.__r_.__value_.__r.__words[0])
        {
          v238.__r_.__value_.__l.__size_ = v238.__r_.__value_.__r.__words[0];
          operator delete(v238.__r_.__value_.__l.__data_);
        }
        if ((v239 & 0xFFFFFFEF) != 0) {
          goto LABEL_91;
        }
        BOOL v52 = (const void **)v213[3];
        LODWORD(v235.__r_.__value_.__l.__data_) = 5;
        std::vector<CoreML::Specification::FeatureType::TypeCase>::vector[abi:ne180100](&v238, &v235, 1uLL);
        CoreML::validateDescriptionsContainFeatureWithNameAndType<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>>((CoreML::Result *)__p, v211, v52, (unsigned int **)&v238);
        uint64_t v239 = *(void *)__p;
        if (SHIBYTE(v241) < 0) {
          operator delete((void *)v240);
        }
        long long v240 = *(_OWORD *)&__p[8];
        uint64_t v241 = v237;
        HIBYTE(v237) = 0;
        __p[8] = 0;
        if (v238.__r_.__value_.__r.__words[0])
        {
          v238.__r_.__value_.__l.__size_ = v238.__r_.__value_.__r.__words[0];
          operator delete(v238.__r_.__value_.__l.__data_);
        }
        if ((v239 & 0xFFFFFFEF) != 0) {
          goto LABEL_91;
        }
        if ((v231 & 0x80000000) == 0)
        {
          int v66 = (const void **)v213[4];
          LODWORD(v235.__r_.__value_.__l.__data_) = 2;
          std::vector<CoreML::Specification::FeatureType::TypeCase>::vector[abi:ne180100](&v238, &v235, 1uLL);
          CoreML::validateDescriptionsContainFeatureWithNameAndType<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>>((CoreML::Result *)__p, v211, v66, (unsigned int **)&v238);
          uint64_t v239 = *(void *)__p;
          if (SHIBYTE(v241) < 0) {
            operator delete((void *)v240);
          }
          long long v240 = *(_OWORD *)&__p[8];
          uint64_t v241 = v237;
          HIBYTE(v237) = 0;
          __p[8] = 0;
          if (v238.__r_.__value_.__r.__words[0])
          {
            v238.__r_.__value_.__l.__size_ = v238.__r_.__value_.__r.__words[0];
            operator delete(v238.__r_.__value_.__l.__data_);
          }
          if ((v239 & 0xFFFFFFEF) != 0) {
            goto LABEL_91;
          }
        }
        if ((v13 & 0x80000000) == 0)
        {
          uint64_t v67 = (const void **)v213[5];
          LODWORD(v235.__r_.__value_.__l.__data_) = 2;
          std::vector<CoreML::Specification::FeatureType::TypeCase>::vector[abi:ne180100](&v238, &v235, 1uLL);
          CoreML::validateDescriptionsContainFeatureWithNameAndType<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>>((CoreML::Result *)__p, v211, v67, (unsigned int **)&v238);
          uint64_t v239 = *(void *)__p;
          if (SHIBYTE(v241) < 0) {
            operator delete((void *)v240);
          }
          long long v240 = *(_OWORD *)&__p[8];
          uint64_t v241 = v237;
          HIBYTE(v237) = 0;
          __p[8] = 0;
          if (v238.__r_.__value_.__r.__words[0])
          {
            v238.__r_.__value_.__l.__size_ = v238.__r_.__value_.__r.__words[0];
            operator delete(v238.__r_.__value_.__l.__data_);
          }
          if ((v239 & 0xFFFFFFEF) != 0)
          {
LABEL_91:
            *(void *)v214 = v239;
            *(_OWORD *)((char *)v214 + 8) = v240;
            *((void *)v214 + 3) = v241;
LABEL_92:
            long long v240 = 0uLL;
            uint64_t v241 = 0;
            goto LABEL_102;
          }
        }
        v68 = (const void **)v213[6];
        LODWORD(v235.__r_.__value_.__l.__data_) = 5;
        std::vector<CoreML::Specification::FeatureType::TypeCase>::vector[abi:ne180100](&v238, &v235, 1uLL);
        CoreML::validateDescriptionsContainFeatureWithNameAndType<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>>((CoreML::Result *)__p, v210, v68, (unsigned int **)&v238);
        uint64_t v239 = *(void *)__p;
        if (SHIBYTE(v241) < 0) {
          operator delete((void *)v240);
        }
        long long v240 = *(_OWORD *)&__p[8];
        uint64_t v241 = v237;
        HIBYTE(v237) = 0;
        __p[8] = 0;
        if (v238.__r_.__value_.__r.__words[0])
        {
          v238.__r_.__value_.__l.__size_ = v238.__r_.__value_.__r.__words[0];
          operator delete(v238.__r_.__value_.__l.__data_);
        }
        if ((v239 & 0xFFFFFFEF) != 0)
        {
          *(void *)v214 = v239;
          *(_OWORD *)((char *)v214 + 8) = v240;
          *((void *)v214 + 3) = v241;
          goto LABEL_92;
        }
        uint64_t v69 = (const void **)v213[7];
        LODWORD(v235.__r_.__value_.__l.__data_) = 5;
        std::vector<CoreML::Specification::FeatureType::TypeCase>::vector[abi:ne180100](&v238, &v235, 1uLL);
        CoreML::validateDescriptionsContainFeatureWithNameAndType<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>>((CoreML::Result *)__p, v210, v69, (unsigned int **)&v238);
        uint64_t v239 = *(void *)__p;
        if (SHIBYTE(v241) < 0) {
          operator delete((void *)v240);
        }
        long long v240 = *(_OWORD *)&__p[8];
        uint64_t v241 = v237;
        HIBYTE(v237) = 0;
        __p[8] = 0;
        inited = (unint64_t *)v238.__r_.__value_.__r.__words[0];
        if (v238.__r_.__value_.__r.__words[0])
        {
          v238.__r_.__value_.__l.__size_ = v238.__r_.__value_.__r.__words[0];
          operator delete(v238.__r_.__value_.__l.__data_);
        }
        if ((v239 & 0xFFFFFFEF) != 0) {
          goto LABEL_132;
        }
        double v71 = *((double *)v213 + 8);
        if (v71 < 0.0 || v71 > 1.0)
        {
          std::string::basic_string[abi:ne180100]<0>(__p, "iouThreshold must be a value between 0.0 and 1.0.");
          *(void *)v214 = 13;
          std::operator+<char>();
          goto LABEL_138;
        }
        if (*((double *)v213 + 9) < 0.0)
        {
          std::string::basic_string[abi:ne180100]<0>(__p, "confidenceThreshold must be a non-negative value. If you do not want to eliminate any predictions based on confidence, set it to 0.0.");
          *(void *)v214 = 13;
          std::operator+<char>();
          goto LABEL_138;
        }
        uint64_t v72 = v212[4] + 8;
        uint64_t v73 = *(void *)(v72 + 8 * v230);
        uint64_t v74 = *(void *)(v72 + 8 * v229);
        uint64_t v75 = v212[7] + 8;
        uint64_t v76 = *(void *)(v75 + 8 * v228);
        uint64_t v77 = *(void *)(v75 + 8 * v39);
        int v78 = *(uint64_t **)(v73 + 32);
        if (!v78) {
          int v78 = &CoreML::Specification::_FeatureType_default_instance_;
        }
        if (*((_DWORD *)v78 + 9) == 5)
        {
          int v79 = (uint64_t *)v78[3];
        }
        else
        {
          inited = CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults((CoreML::Specification::protobuf_FeatureTypes_2eproto *)inited);
          int v79 = &CoreML::Specification::_ArrayFeatureType_default_instance_;
        }
        int v80 = *((_DWORD *)v79 + 9);
        unint64_t v81 = *(uint64_t **)(v76 + 32);
        if (!v81) {
          unint64_t v81 = &CoreML::Specification::_FeatureType_default_instance_;
        }
        if (*((_DWORD *)v81 + 9) == 5)
        {
          int v82 = (uint64_t *)v81[3];
        }
        else
        {
          inited = CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults((CoreML::Specification::protobuf_FeatureTypes_2eproto *)inited);
          int v82 = &CoreML::Specification::_ArrayFeatureType_default_instance_;
        }
        int v83 = *((_DWORD *)v82 + 9);
        int v84 = *(uint64_t **)(v74 + 32);
        if (!v84) {
          int v84 = &CoreML::Specification::_FeatureType_default_instance_;
        }
        if (*((_DWORD *)v84 + 9) == 5)
        {
          BOOL v85 = (uint64_t *)v84[3];
        }
        else
        {
          inited = CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults((CoreML::Specification::protobuf_FeatureTypes_2eproto *)inited);
          BOOL v85 = &CoreML::Specification::_ArrayFeatureType_default_instance_;
        }
        int v86 = *((_DWORD *)v85 + 9);
        uint64_t v87 = *(uint64_t **)(v77 + 32);
        if (!v87) {
          uint64_t v87 = &CoreML::Specification::_FeatureType_default_instance_;
        }
        if (*((_DWORD *)v87 + 9) == 5)
        {
          uint64_t v88 = (uint64_t *)v87[3];
        }
        else
        {
          inited = CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults((CoreML::Specification::protobuf_FeatureTypes_2eproto *)inited);
          uint64_t v88 = &CoreML::Specification::_ArrayFeatureType_default_instance_;
        }
        if (v80 != v83 || v80 != v86 || v80 != *((_DWORD *)v88 + 9))
        {
          std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream[abi:ne180100]((uint64_t)__p);
          std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&__p[16], (uint64_t)"'confidence' and 'coordinates' must use a same element type, but ", 65);
          int v109 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&__p[16], (uint64_t)"'input confidence' is ", 22);
          if (*(void *)(v73 + 32)) {
            int v110 = *(const CoreML::Specification::FeatureType **)(v73 + 32);
          }
          else {
            int v110 = (const CoreML::Specification::FeatureType *)&CoreML::Specification::_FeatureType_default_instance_;
          }
          CoreML::FeatureType::FeatureType((CoreML::FeatureType *)&v235, v110);
          CoreML::FeatureType::toString(&v238, (uint64_t)&v235);
          if ((v238.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            int v111 = &v238;
          }
          else {
            int v111 = (std::string *)v238.__r_.__value_.__r.__words[0];
          }
          if ((v238.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            std::string::size_type size = HIBYTE(v238.__r_.__value_.__r.__words[2]);
          }
          else {
            std::string::size_type size = v238.__r_.__value_.__l.__size_;
          }
          unsigned int v113 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v109, (uint64_t)v111, size);
          std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v113, (uint64_t)", ", 2);
          if (SHIBYTE(v238.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v238.__r_.__value_.__l.__data_);
          }
          if (v235.__r_.__value_.__l.__size_) {
            std::__shared_weak_count::__release_shared[abi:ne180100]((std::__shared_weak_count *)v235.__r_.__value_.__l.__size_);
          }
          int v114 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&__p[16], (uint64_t)"'output confidence' is ", 23);
          if (*(void *)(v76 + 32)) {
            int v115 = *(const CoreML::Specification::FeatureType **)(v76 + 32);
          }
          else {
            int v115 = (const CoreML::Specification::FeatureType *)&CoreML::Specification::_FeatureType_default_instance_;
          }
          CoreML::FeatureType::FeatureType((CoreML::FeatureType *)&v235, v115);
          CoreML::FeatureType::toString(&v238, (uint64_t)&v235);
          if ((v238.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            int v116 = &v238;
          }
          else {
            int v116 = (std::string *)v238.__r_.__value_.__r.__words[0];
          }
          if ((v238.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            std::string::size_type v117 = HIBYTE(v238.__r_.__value_.__r.__words[2]);
          }
          else {
            std::string::size_type v117 = v238.__r_.__value_.__l.__size_;
          }
          unint64_t v118 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v114, (uint64_t)v116, v117);
          std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v118, (uint64_t)", ", 2);
          if (SHIBYTE(v238.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v238.__r_.__value_.__l.__data_);
          }
          if (v235.__r_.__value_.__l.__size_) {
            std::__shared_weak_count::__release_shared[abi:ne180100]((std::__shared_weak_count *)v235.__r_.__value_.__l.__size_);
          }
          uint64_t v119 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&__p[16], (uint64_t)"'input coordinates' are ", 24);
          if (*(void *)(v74 + 32)) {
            v120 = *(const CoreML::Specification::FeatureType **)(v74 + 32);
          }
          else {
            v120 = (const CoreML::Specification::FeatureType *)&CoreML::Specification::_FeatureType_default_instance_;
          }
          CoreML::FeatureType::FeatureType((CoreML::FeatureType *)&v235, v120);
          CoreML::FeatureType::toString(&v238, (uint64_t)&v235);
          if ((v238.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            v121 = &v238;
          }
          else {
            v121 = (std::string *)v238.__r_.__value_.__r.__words[0];
          }
          if ((v238.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            std::string::size_type v122 = HIBYTE(v238.__r_.__value_.__r.__words[2]);
          }
          else {
            std::string::size_type v122 = v238.__r_.__value_.__l.__size_;
          }
          signed int v123 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v119, (uint64_t)v121, v122);
          std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v123, (uint64_t)", ", 2);
          if (SHIBYTE(v238.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v238.__r_.__value_.__l.__data_);
          }
          if (v235.__r_.__value_.__l.__size_) {
            std::__shared_weak_count::__release_shared[abi:ne180100]((std::__shared_weak_count *)v235.__r_.__value_.__l.__size_);
          }
          uint64_t v124 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&__p[16], (uint64_t)"and 'output coordinates' are ", 29);
          if (*(void *)(v77 + 32)) {
            int v125 = *(const CoreML::Specification::FeatureType **)(v77 + 32);
          }
          else {
            int v125 = (const CoreML::Specification::FeatureType *)&CoreML::Specification::_FeatureType_default_instance_;
          }
          CoreML::FeatureType::FeatureType((CoreML::FeatureType *)&v235, v125);
          CoreML::FeatureType::toString(&v238, (uint64_t)&v235);
          if ((v238.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            int v126 = &v238;
          }
          else {
            int v126 = (std::string *)v238.__r_.__value_.__r.__words[0];
          }
          if ((v238.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            std::string::size_type v127 = HIBYTE(v238.__r_.__value_.__r.__words[2]);
          }
          else {
            std::string::size_type v127 = v238.__r_.__value_.__l.__size_;
          }
          int v128 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v124, (uint64_t)v126, v127);
          std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v128, (uint64_t)".", 1);
          if (SHIBYTE(v238.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v238.__r_.__value_.__l.__data_);
          }
          if (v235.__r_.__value_.__l.__size_) {
            std::__shared_weak_count::__release_shared[abi:ne180100]((std::__shared_weak_count *)v235.__r_.__value_.__l.__size_);
          }
          goto LABEL_271;
        }
        if (*(int *)(v209 + 24) < 5)
        {
          if (v80 != 65600)
          {
            std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream[abi:ne180100]((uint64_t)__p);
            std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&__p[16], (uint64_t)"The element data type of 'confidence' and 'coordinates' must be MultiArray<DOUBLE> for model specification version earlier than ", 128);
            uint64_t v136 = (void *)std::ostream::operator<<();
            std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v136, (uint64_t)", but ", 6);
            v137 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&__p[16], (uint64_t)"'input confidence' is ", 22);
            if (*(void *)(v73 + 32)) {
              v138 = *(const CoreML::Specification::FeatureType **)(v73 + 32);
            }
            else {
              v138 = (const CoreML::Specification::FeatureType *)&CoreML::Specification::_FeatureType_default_instance_;
            }
            CoreML::FeatureType::FeatureType((CoreML::FeatureType *)&v235, v138);
            CoreML::FeatureType::toString(&v238, (uint64_t)&v235);
            if ((v238.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              v139 = &v238;
            }
            else {
              v139 = (std::string *)v238.__r_.__value_.__r.__words[0];
            }
            if ((v238.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              std::string::size_type v140 = HIBYTE(v238.__r_.__value_.__r.__words[2]);
            }
            else {
              std::string::size_type v140 = v238.__r_.__value_.__l.__size_;
            }
            uint64_t v141 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v137, (uint64_t)v139, v140);
            std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v141, (uint64_t)", ", 2);
            if (SHIBYTE(v238.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v238.__r_.__value_.__l.__data_);
            }
            if (v235.__r_.__value_.__l.__size_) {
              std::__shared_weak_count::__release_shared[abi:ne180100]((std::__shared_weak_count *)v235.__r_.__value_.__l.__size_);
            }
            uint64_t v142 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&__p[16], (uint64_t)"'output confidence' is ", 23);
            if (*(void *)(v76 + 32)) {
              uint64_t v143 = *(const CoreML::Specification::FeatureType **)(v76 + 32);
            }
            else {
              uint64_t v143 = (const CoreML::Specification::FeatureType *)&CoreML::Specification::_FeatureType_default_instance_;
            }
            CoreML::FeatureType::FeatureType((CoreML::FeatureType *)&v235, v143);
            CoreML::FeatureType::toString(&v238, (uint64_t)&v235);
            if ((v238.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              uint64_t v144 = &v238;
            }
            else {
              uint64_t v144 = (std::string *)v238.__r_.__value_.__r.__words[0];
            }
            if ((v238.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              std::string::size_type v145 = HIBYTE(v238.__r_.__value_.__r.__words[2]);
            }
            else {
              std::string::size_type v145 = v238.__r_.__value_.__l.__size_;
            }
            uint64_t v146 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v142, (uint64_t)v144, v145);
            std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v146, (uint64_t)", ", 2);
            if (SHIBYTE(v238.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v238.__r_.__value_.__l.__data_);
            }
            if (v235.__r_.__value_.__l.__size_) {
              std::__shared_weak_count::__release_shared[abi:ne180100]((std::__shared_weak_count *)v235.__r_.__value_.__l.__size_);
            }
            uint64_t v147 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&__p[16], (uint64_t)"'input coordinates' are ", 24);
            if (*(void *)(v74 + 32)) {
              v148 = *(const CoreML::Specification::FeatureType **)(v74 + 32);
            }
            else {
              v148 = (const CoreML::Specification::FeatureType *)&CoreML::Specification::_FeatureType_default_instance_;
            }
            CoreML::FeatureType::FeatureType((CoreML::FeatureType *)&v235, v148);
            CoreML::FeatureType::toString(&v238, (uint64_t)&v235);
            if ((v238.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              unint64_t v149 = &v238;
            }
            else {
              unint64_t v149 = (std::string *)v238.__r_.__value_.__r.__words[0];
            }
            if ((v238.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              std::string::size_type v150 = HIBYTE(v238.__r_.__value_.__r.__words[2]);
            }
            else {
              std::string::size_type v150 = v238.__r_.__value_.__l.__size_;
            }
            v151 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v147, (uint64_t)v149, v150);
            std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v151, (uint64_t)", ", 2);
            if (SHIBYTE(v238.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v238.__r_.__value_.__l.__data_);
            }
            if (v235.__r_.__value_.__l.__size_) {
              std::__shared_weak_count::__release_shared[abi:ne180100]((std::__shared_weak_count *)v235.__r_.__value_.__l.__size_);
            }
            v152 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&__p[16], (uint64_t)"and 'output coordinates' are ", 29);
            if (*(void *)(v77 + 32)) {
              v153 = *(const CoreML::Specification::FeatureType **)(v77 + 32);
            }
            else {
              v153 = (const CoreML::Specification::FeatureType *)&CoreML::Specification::_FeatureType_default_instance_;
            }
            CoreML::FeatureType::FeatureType((CoreML::FeatureType *)&v235, v153);
            CoreML::FeatureType::toString(&v238, (uint64_t)&v235);
            if ((v238.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              v154 = &v238;
            }
            else {
              v154 = (std::string *)v238.__r_.__value_.__r.__words[0];
            }
            if ((v238.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              std::string::size_type v155 = HIBYTE(v238.__r_.__value_.__r.__words[2]);
            }
            else {
              std::string::size_type v155 = v238.__r_.__value_.__l.__size_;
            }
            v156 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v152, (uint64_t)v154, v155);
            std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v156, (uint64_t)". ", 2);
            if (SHIBYTE(v238.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v238.__r_.__value_.__l.__data_);
            }
            if (v235.__r_.__value_.__l.__size_) {
              std::__shared_weak_count::__release_shared[abi:ne180100]((std::__shared_weak_count *)v235.__r_.__value_.__l.__size_);
            }
            std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&__p[16], (uint64_t)"To enable MultiArray<FLOAT32>, use the model specification version ", 67);
            v157 = (void *)std::ostream::operator<<();
            std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v157, (uint64_t)" or later.", 10);
            std::stringbuf::str();
            *(void *)v214 = 13;
            std::operator+<char>();
            goto LABEL_272;
          }
        }
        else if (v80 != 65568 && v80 != 65600)
        {
          std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream[abi:ne180100]((uint64_t)__p);
          std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&__p[16], (uint64_t)"The element data type of 'confidence' and 'coordinates' must be either MultiArray<DOUBLE> or MultiArray<FLOAT32>, but ", 118);
          int v89 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&__p[16], (uint64_t)"'input confidence' is ", 22);
          if (*(void *)(v73 + 32)) {
            int v90 = *(const CoreML::Specification::FeatureType **)(v73 + 32);
          }
          else {
            int v90 = (const CoreML::Specification::FeatureType *)&CoreML::Specification::_FeatureType_default_instance_;
          }
          CoreML::FeatureType::FeatureType((CoreML::FeatureType *)&v235, v90);
          CoreML::FeatureType::toString(&v238, (uint64_t)&v235);
          if ((v238.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            int v91 = &v238;
          }
          else {
            int v91 = (std::string *)v238.__r_.__value_.__r.__words[0];
          }
          if ((v238.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            std::string::size_type v92 = HIBYTE(v238.__r_.__value_.__r.__words[2]);
          }
          else {
            std::string::size_type v92 = v238.__r_.__value_.__l.__size_;
          }
          int v93 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v89, (uint64_t)v91, v92);
          std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v93, (uint64_t)", ", 2);
          if (SHIBYTE(v238.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v238.__r_.__value_.__l.__data_);
          }
          if (v235.__r_.__value_.__l.__size_) {
            std::__shared_weak_count::__release_shared[abi:ne180100]((std::__shared_weak_count *)v235.__r_.__value_.__l.__size_);
          }
          int v94 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&__p[16], (uint64_t)"'output confidence' is ", 23);
          if (*(void *)(v76 + 32)) {
            signed int v95 = *(const CoreML::Specification::FeatureType **)(v76 + 32);
          }
          else {
            signed int v95 = (const CoreML::Specification::FeatureType *)&CoreML::Specification::_FeatureType_default_instance_;
          }
          CoreML::FeatureType::FeatureType((CoreML::FeatureType *)&v235, v95);
          CoreML::FeatureType::toString(&v238, (uint64_t)&v235);
          if ((v238.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            unsigned int v96 = &v238;
          }
          else {
            unsigned int v96 = (std::string *)v238.__r_.__value_.__r.__words[0];
          }
          if ((v238.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            std::string::size_type v97 = HIBYTE(v238.__r_.__value_.__r.__words[2]);
          }
          else {
            std::string::size_type v97 = v238.__r_.__value_.__l.__size_;
          }
          int v98 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v94, (uint64_t)v96, v97);
          std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v98, (uint64_t)", ", 2);
          if (SHIBYTE(v238.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v238.__r_.__value_.__l.__data_);
          }
          if (v235.__r_.__value_.__l.__size_) {
            std::__shared_weak_count::__release_shared[abi:ne180100]((std::__shared_weak_count *)v235.__r_.__value_.__l.__size_);
          }
          int v99 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&__p[16], (uint64_t)"'input coordinates' are ", 24);
          if (*(void *)(v74 + 32)) {
            v100 = *(const CoreML::Specification::FeatureType **)(v74 + 32);
          }
          else {
            v100 = (const CoreML::Specification::FeatureType *)&CoreML::Specification::_FeatureType_default_instance_;
          }
          CoreML::FeatureType::FeatureType((CoreML::FeatureType *)&v235, v100);
          CoreML::FeatureType::toString(&v238, (uint64_t)&v235);
          if ((v238.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            unint64_t v101 = &v238;
          }
          else {
            unint64_t v101 = (std::string *)v238.__r_.__value_.__r.__words[0];
          }
          if ((v238.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            std::string::size_type v102 = HIBYTE(v238.__r_.__value_.__r.__words[2]);
          }
          else {
            std::string::size_type v102 = v238.__r_.__value_.__l.__size_;
          }
          v103 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v99, (uint64_t)v101, v102);
          std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v103, (uint64_t)", ", 2);
          if (SHIBYTE(v238.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v238.__r_.__value_.__l.__data_);
          }
          if (v235.__r_.__value_.__l.__size_) {
            std::__shared_weak_count::__release_shared[abi:ne180100]((std::__shared_weak_count *)v235.__r_.__value_.__l.__size_);
          }
          v104 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&__p[16], (uint64_t)"and 'output coordinates' are ", 29);
          if (*(void *)(v77 + 32)) {
            v105 = *(const CoreML::Specification::FeatureType **)(v77 + 32);
          }
          else {
            v105 = (const CoreML::Specification::FeatureType *)&CoreML::Specification::_FeatureType_default_instance_;
          }
          CoreML::FeatureType::FeatureType((CoreML::FeatureType *)&v235, v105);
          CoreML::FeatureType::toString(&v238, (uint64_t)&v235);
          if ((v238.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            signed int v106 = &v238;
          }
          else {
            signed int v106 = (std::string *)v238.__r_.__value_.__r.__words[0];
          }
          if ((v238.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            std::string::size_type v107 = HIBYTE(v238.__r_.__value_.__r.__words[2]);
          }
          else {
            std::string::size_type v107 = v238.__r_.__value_.__l.__size_;
          }
          int v108 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v104, (uint64_t)v106, v107);
          std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v108, (uint64_t)".", 1);
          if (SHIBYTE(v238.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v238.__r_.__value_.__l.__data_);
          }
          if (v235.__r_.__value_.__l.__size_) {
            std::__shared_weak_count::__release_shared[abi:ne180100]((std::__shared_weak_count *)v235.__r_.__value_.__l.__size_);
          }
LABEL_271:
          std::stringbuf::str();
          *(void *)v214 = 13;
          std::operator+<char>();
LABEL_272:
          if (SHIBYTE(v238.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v238.__r_.__value_.__l.__data_);
          }
          std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::~basic_stringstream((uint64_t)__p);
          goto LABEL_102;
        }
        signed int v129 = *(uint64_t **)(v76 + 32);
        if (v129) {
          unsigned int v130 = *(uint64_t **)(v76 + 32);
        }
        else {
          unsigned int v130 = &CoreML::Specification::_FeatureType_default_instance_;
        }
        if (*((_DWORD *)v130 + 9) == 5)
        {
          int v131 = (uint64_t *)v130[3];
        }
        else
        {
          inited = CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults((CoreML::Specification::protobuf_FeatureTypes_2eproto *)inited);
          signed int v129 = *(uint64_t **)(v76 + 32);
          int v131 = &CoreML::Specification::_ArrayFeatureType_default_instance_;
        }
        int v132 = *((_DWORD *)v131 + 4);
        if (!v129) {
          signed int v129 = &CoreML::Specification::_FeatureType_default_instance_;
        }
        if (*((_DWORD *)v129 + 9) == 5)
        {
          int v133 = (uint64_t *)v129[3];
        }
        else
        {
          inited = CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults((CoreML::Specification::protobuf_FeatureTypes_2eproto *)inited);
          int v133 = &CoreML::Specification::_ArrayFeatureType_default_instance_;
        }
        int v134 = *((_DWORD *)v133 + 15);
        if (v134 == 31)
        {
          unint64_t v135 = (int *)(v133[5] + 24);
        }
        else
        {
          if (v134 != 21)
          {
            uint64_t v158 = 0;
LABEL_346:
            BOOL v159 = v132 == 0;
            BOOL v160 = v158 == 2 && v132 == 0;
            if (v132 == 2) {
              BOOL v159 = 1;
            }
            if (v158) {
              BOOL v161 = 0;
            }
            else {
              BOOL v161 = v132 == 2;
            }
            if (v158) {
              BOOL v162 = 0;
            }
            else {
              BOOL v162 = v159;
            }
            if (!v162 && !v160)
            {
              std::string::basic_string[abi:ne180100]<0>(__p, "If shape information is provided for confidence output, 2 dimensions must be specified using either shape (deprecated) or allowedShapes.");
              *(void *)v214 = 13;
              std::operator+<char>();
              goto LABEL_138;
            }
            if (!v161) {
              goto LABEL_372;
            }
            v163 = *(uint64_t **)(v76 + 32);
            if (!v163) {
              v163 = &CoreML::Specification::_FeatureType_default_instance_;
            }
            if (*((_DWORD *)v163 + 9) == 5)
            {
              v164 = (uint64_t *)v163[3];
            }
            else
            {
              inited = CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults((CoreML::Specification::protobuf_FeatureTypes_2eproto *)inited);
              v164 = &CoreML::Specification::_ArrayFeatureType_default_instance_;
            }
            uint64_t v165 = *(void *)(v164[3] + 8);
            v166 = *(uint64_t **)(v77 + 32);
            if (!v166) {
              v166 = &CoreML::Specification::_FeatureType_default_instance_;
            }
            if (*((_DWORD *)v166 + 9) == 5)
            {
              v167 = (uint64_t *)v166[3];
            }
            else
            {
              inited = CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults((CoreML::Specification::protobuf_FeatureTypes_2eproto *)inited);
              v167 = &CoreML::Specification::_ArrayFeatureType_default_instance_;
            }
            if (v165 != *(void *)(v167[3] + 8))
            {
              std::string::basic_string[abi:ne180100]<0>(__p, "Confidence and coordinates output shapes must be consistent (must have the same size along dimension 0).");
              *(void *)v214 = 13;
              std::operator+<char>();
            }
            else
            {
LABEL_372:
              if (!v160) {
                goto LABEL_405;
              }
              v168 = *(uint64_t **)(v76 + 32);
              if (!v168) {
                v168 = &CoreML::Specification::_FeatureType_default_instance_;
              }
              if (*((_DWORD *)v168 + 9) == 5)
              {
                v169 = (uint64_t *)v168[3];
              }
              else
              {
                inited = CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults((CoreML::Specification::protobuf_FeatureTypes_2eproto *)inited);
                v169 = &CoreML::Specification::_ArrayFeatureType_default_instance_;
              }
              int v170 = *((_DWORD *)v169 + 15);
              v171 = *(uint64_t **)(v77 + 32);
              if (!v171) {
                v171 = &CoreML::Specification::_FeatureType_default_instance_;
              }
              if (*((_DWORD *)v171 + 9) == 5)
              {
                v172 = (uint64_t *)v171[3];
              }
              else
              {
                inited = CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults((CoreML::Specification::protobuf_FeatureTypes_2eproto *)inited);
                v172 = &CoreML::Specification::_ArrayFeatureType_default_instance_;
              }
              if (v170 == 31 && *((_DWORD *)v172 + 15) == 31)
              {
                v173 = *(uint64_t **)(v76 + 32);
                if (!v173) {
                  v173 = &CoreML::Specification::_FeatureType_default_instance_;
                }
                if (*((_DWORD *)v173 + 9) == 5)
                {
                  v174 = (uint64_t *)v173[3];
                }
                else
                {
                  inited = CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults((CoreML::Specification::protobuf_FeatureTypes_2eproto *)inited);
                  v174 = &CoreML::Specification::_ArrayFeatureType_default_instance_;
                }
                if (*((_DWORD *)v174 + 15) == 31)
                {
                  v175 = (uint64_t *)v174[5];
                }
                else
                {
                  inited = CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults((CoreML::Specification::protobuf_FeatureTypes_2eproto *)inited);
                  v175 = &CoreML::Specification::_ArrayFeatureType_ShapeRange_default_instance_;
                }
                v176 = *(uint64_t **)(v76 + 32);
                if (!v176) {
                  v176 = &CoreML::Specification::_FeatureType_default_instance_;
                }
                if (*((_DWORD *)v176 + 9) == 5)
                {
                  v177 = (uint64_t *)v176[3];
                }
                else
                {
                  inited = CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults((CoreML::Specification::protobuf_FeatureTypes_2eproto *)inited);
                  v177 = &CoreML::Specification::_ArrayFeatureType_default_instance_;
                }
                if (*((_DWORD *)v177 + 15) == 31)
                {
                  v178 = (uint64_t *)v177[5];
                }
                else
                {
                  inited = CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults((CoreML::Specification::protobuf_FeatureTypes_2eproto *)inited);
                  v178 = &CoreML::Specification::_ArrayFeatureType_ShapeRange_default_instance_;
                }
                uint64_t v179 = *(void *)(v175[4] + 8);
                uint64_t v180 = *(void *)(v178[4] + 8);
                if (*(void *)(v179 + 16) == *(void *)(v180 + 16)
                  && *(void *)(v179 + 24) == *(void *)(v180 + 24))
                {
LABEL_405:
                  int v181 = *((_DWORD *)v213 + 26);
                  if (v181 == 100)
                  {
                    v182 = (unsigned int *)(v213[11] + 24);
                  }
                  else
                  {
                    if (v181 != 101) {
                      goto LABEL_132;
                    }
                    v182 = (unsigned int *)(v213[11] + 16);
                  }
                  unint64_t v183 = *v182;
                  if ((int)v183 > 0 && v161)
                  {
                    v185 = *(uint64_t **)(v76 + 32);
                    if (!v185) {
                      v185 = &CoreML::Specification::_FeatureType_default_instance_;
                    }
                    if (*((_DWORD *)v185 + 9) == 5)
                    {
                      v186 = (uint64_t *)v185[3];
                    }
                    else
                    {
                      inited = CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults((CoreML::Specification::protobuf_FeatureTypes_2eproto *)inited);
                      v186 = &CoreML::Specification::_ArrayFeatureType_default_instance_;
                    }
                    if (*(void *)(v186[3] + 16) != v183)
                    {
                      std::to_string(&v233, v183);
                      v190 = std::string::insert(&v233, 0, "Number of classes is not consistent for class labels (");
                      long long v191 = *(_OWORD *)&v190->__r_.__value_.__l.__data_;
                      v234.__r_.__value_.__r.__words[2] = v190->__r_.__value_.__r.__words[2];
                      *(_OWORD *)&v234.__r_.__value_.__l.__data_ = v191;
                      v190->__r_.__value_.__l.__size_ = 0;
                      v190->__r_.__value_.__r.__words[2] = 0;
                      v190->__r_.__value_.__r.__words[0] = 0;
                      v192 = std::string::append(&v234, ") and dimension 1 of output confidence shape (");
                      long long v193 = *(_OWORD *)&v192->__r_.__value_.__l.__data_;
                      v235.__r_.__value_.__r.__words[2] = v192->__r_.__value_.__r.__words[2];
                      *(_OWORD *)&v235.__r_.__value_.__l.__data_ = v193;
                      v192->__r_.__value_.__l.__size_ = 0;
                      v192->__r_.__value_.__r.__words[2] = 0;
                      v192->__r_.__value_.__r.__words[0] = 0;
                      v194 = *(uint64_t **)(v76 + 32);
                      if (!v194) {
                        v194 = &CoreML::Specification::_FeatureType_default_instance_;
                      }
                      if (*((_DWORD *)v194 + 9) == 5)
                      {
                        v195 = (uint64_t *)v194[3];
                      }
                      else
                      {
                        CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults((CoreML::Specification::protobuf_FeatureTypes_2eproto *)v192);
                        v195 = &CoreML::Specification::_ArrayFeatureType_default_instance_;
                      }
                      std::to_string(&v232, *(void *)(v195[3] + 16));
                      if ((v232.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                        v203 = &v232;
                      }
                      else {
                        v203 = (std::string *)v232.__r_.__value_.__r.__words[0];
                      }
                      if ((v232.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                        std::string::size_type v204 = HIBYTE(v232.__r_.__value_.__r.__words[2]);
                      }
                      else {
                        std::string::size_type v204 = v232.__r_.__value_.__l.__size_;
                      }
                      v205 = std::string::append(&v235, (const std::string::value_type *)v203, v204);
                      long long v206 = *(_OWORD *)&v205->__r_.__value_.__l.__data_;
                      v238.__r_.__value_.__r.__words[2] = v205->__r_.__value_.__r.__words[2];
                      *(_OWORD *)&v238.__r_.__value_.__l.__data_ = v206;
                      v205->__r_.__value_.__l.__size_ = 0;
                      v205->__r_.__value_.__r.__words[2] = 0;
                      v205->__r_.__value_.__r.__words[0] = 0;
                      v207 = std::string::append(&v238, ")");
                      long long v208 = *(_OWORD *)&v207->__r_.__value_.__l.__data_;
                      *(void *)&__p[16] = *((void *)&v207->__r_.__value_.__l + 2);
                      *(_OWORD *)std::string __p = v208;
                      v207->__r_.__value_.__l.__size_ = 0;
                      v207->__r_.__value_.__r.__words[2] = 0;
                      v207->__r_.__value_.__r.__words[0] = 0;
                      *(void *)v214 = 13;
                      std::operator+<char>();
                      if ((__p[23] & 0x80000000) != 0) {
                        operator delete(*(void **)__p);
                      }
                      if (SHIBYTE(v238.__r_.__value_.__r.__words[2]) < 0) {
                        operator delete(v238.__r_.__value_.__l.__data_);
                      }
                      if (SHIBYTE(v232.__r_.__value_.__r.__words[2]) < 0) {
                        operator delete(v232.__r_.__value_.__l.__data_);
                      }
                      if (SHIBYTE(v235.__r_.__value_.__r.__words[2]) < 0) {
                        operator delete(v235.__r_.__value_.__l.__data_);
                      }
                      if (SHIBYTE(v234.__r_.__value_.__r.__words[2]) < 0) {
                        operator delete(v234.__r_.__value_.__l.__data_);
                      }
                      if (SHIBYTE(v233.__r_.__value_.__r.__words[2]) < 0)
                      {
                        int v57 = (void *)v233.__r_.__value_.__r.__words[0];
                        goto LABEL_101;
                      }
                      goto LABEL_102;
                    }
                  }
                  if ((int)v183 > 0 && v160)
                  {
                    v188 = *(uint64_t **)(v76 + 32);
                    if (!v188) {
                      v188 = &CoreML::Specification::_FeatureType_default_instance_;
                    }
                    if (*((_DWORD *)v188 + 9) == 5)
                    {
                      v189 = (uint64_t *)v188[3];
                    }
                    else
                    {
                      inited = CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults((CoreML::Specification::protobuf_FeatureTypes_2eproto *)inited);
                      v189 = &CoreML::Specification::_ArrayFeatureType_default_instance_;
                    }
                    if (*((_DWORD *)v189 + 15) == 31)
                    {
                      v196 = (uint64_t *)v189[5];
                    }
                    else
                    {
                      CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults((CoreML::Specification::protobuf_FeatureTypes_2eproto *)inited);
                      v196 = &CoreML::Specification::_ArrayFeatureType_ShapeRange_default_instance_;
                    }
                    uint64_t v197 = *(void *)(v196[4] + 16);
                    if (*(void *)(v197 + 16) > v183
                      || (unint64_t v198 = *(void *)(v197 + 24), (v198 & 0x8000000000000000) == 0) && v198 < v183)
                    {
                      std::to_string(&v235, v183);
                      v199 = std::string::insert(&v235, 0, "Number of classes is not consistent for class labels (");
                      long long v200 = *(_OWORD *)&v199->__r_.__value_.__l.__data_;
                      v238.__r_.__value_.__r.__words[2] = v199->__r_.__value_.__r.__words[2];
                      *(_OWORD *)&v238.__r_.__value_.__l.__data_ = v200;
                      v199->__r_.__value_.__l.__size_ = 0;
                      v199->__r_.__value_.__r.__words[2] = 0;
                      v199->__r_.__value_.__r.__words[0] = 0;
                      v201 = std::string::append(&v238, ") and dimension 1 of output confidence shape range");
                      long long v202 = *(_OWORD *)&v201->__r_.__value_.__l.__data_;
                      *(void *)&__p[16] = *((void *)&v201->__r_.__value_.__l + 2);
                      *(_OWORD *)std::string __p = v202;
                      v201->__r_.__value_.__l.__size_ = 0;
                      v201->__r_.__value_.__r.__words[2] = 0;
                      v201->__r_.__value_.__r.__words[0] = 0;
                      *(void *)v214 = 13;
                      std::operator+<char>();
                      if ((__p[23] & 0x80000000) != 0) {
                        operator delete(*(void **)__p);
                      }
                      if (SHIBYTE(v238.__r_.__value_.__r.__words[2]) < 0) {
                        operator delete(v238.__r_.__value_.__l.__data_);
                      }
                      if (SHIBYTE(v235.__r_.__value_.__r.__words[2]) < 0)
                      {
                        int v57 = (void *)v235.__r_.__value_.__r.__words[0];
                        goto LABEL_101;
                      }
                      goto LABEL_102;
                    }
                  }
LABEL_132:
                  *(void *)v214 = v239;
                  *(_OWORD *)((char *)v214 + 8) = v240;
                  *((void *)v214 + 3) = v241;
                  long long v240 = 0uLL;
                  uint64_t v241 = 0;
                  goto LABEL_102;
                }
                std::string::basic_string[abi:ne180100]<0>(__p, "Confidence and coordinates output shapes must be consistent (must have the same range of sizes along dimension 0).");
                *(void *)v214 = 13;
                std::operator+<char>();
              }
              else
              {
                std::string::basic_string[abi:ne180100]<0>(__p, "Confidence and coordinates output shapes fexibility must both be ranges");
                *(void *)v214 = 13;
                std::operator+<char>();
              }
            }
LABEL_138:
            if ((__p[23] & 0x80000000) != 0)
            {
              int v57 = *(void **)__p;
              goto LABEL_101;
            }
            goto LABEL_102;
          }
          unint64_t v135 = (int *)(*(void *)(*(void *)(v133[5] + 32) + 8) + 16);
        }
        uint64_t v158 = *v135;
        goto LABEL_346;
      }
      std::operator+<char>();
      int v64 = std::string::append(&v238, "' (as defined by coordinatesOutputFeatureName) from the model is not present in the model description.");
      long long v65 = *(_OWORD *)&v64->__r_.__value_.__l.__data_;
      *(void *)&__p[16] = *((void *)&v64->__r_.__value_.__l + 2);
      *(_OWORD *)std::string __p = v65;
      v64->__r_.__value_.__l.__size_ = 0;
      v64->__r_.__value_.__r.__words[2] = 0;
      v64->__r_.__value_.__r.__words[0] = 0;
      *(void *)v214 = 10;
      std::operator+<char>();
    }
  }
LABEL_97:
  if ((__p[23] & 0x80000000) != 0) {
    operator delete(*(void **)__p);
  }
  if (SHIBYTE(v238.__r_.__value_.__r.__words[2]) < 0)
  {
    int v57 = (void *)v238.__r_.__value_.__r.__words[0];
LABEL_101:
    operator delete(v57);
  }
LABEL_102:
  if (SHIBYTE(v241) < 0) {
    operator delete((void *)v240);
  }
}

void sub_19EB4C390(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,void *a39,uint64_t a40,int a41,__int16 a42,char a43,char a44,uint64_t a45,void *a46,uint64_t a47,int a48,__int16 a49,char a50,char a51,uint64_t a52,void *__p,uint64_t a54,int a55,__int16 a56,char a57,char a58)
{
  if (a58 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v58 - 121) < 0) {
    operator delete(*(void **)(v58 - 144));
  }
  if (a32 < 0) {
    operator delete(a27);
  }
  if (a51 < 0) {
    operator delete(a46);
  }
  if (a44 < 0) {
    operator delete(a39);
  }
  if (a38 < 0) {
    operator delete(a33);
  }
  if (*(char *)(v58 - 89) < 0) {
    operator delete(*(void **)(v58 - 112));
  }
  _Unwind_Resume(exception_object);
}

void *std::vector<CoreML::Specification::FeatureType::TypeCase>::vector[abi:ne180100](void *a1, const void *a2, unint64_t a3)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a3)
  {
    if (a3 >> 62) {
      std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__throw_length_error[abi:ne180100]();
    }
    size_t v6 = 4 * a3;
    int v7 = (char *)operator new(4 * a3);
    *a1 = v7;
    a1[1] = v7;
    uint64_t v8 = &v7[4 * a3];
    a1[2] = v8;
    memmove(v7, a2, v6);
    a1[1] = v8;
  }
  return a1;
}

void sub_19EB4C724(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t CoreML::Specification::StringToInt64Map::GetCachedSize(CoreML::Specification::StringToInt64Map *this)
{
  return *((unsigned int *)this + 12);
}

void *CoreML::Specification::StringToInt64Map::SerializeWithCachedSizes(void *this, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v3 = (unint64_t *)this[5];
  unint64_t v4 = *v3;
  if (*v3)
  {
    uint64_t v5 = (uint64_t)this;
    if (*((unsigned char *)a2 + 26))
    {
      if (v4 >= 2 && *((unsigned char *)a2 + 27) != 0) {
        goto LABEL_24;
      }
    }
    else if (v4 >= 2 && google::protobuf::io::CodedOutputStream::default_serialization_deterministic_ != 0)
    {
LABEL_24:
      operator new[]();
    }
    this = google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>::begin(v13, v3);
    uint64_t v7 = 0;
    while (v13[0])
    {
      int v9 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::Wrap(*((google::protobuf::Arena **)v13[0] + 3), (google::protobuf::Arena *)(*((void *)v13[0] + 3) + 24), *(google::protobuf::Arena **)(v5 + 16));
      if ((google::protobuf::Arena **)v7 != v9)
      {
        if (v7) {
          (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
        }
        uint64_t v7 = (uint64_t)v9;
      }
      google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)1, v7, a2, v8);
      size_t v10 = (unsigned int *)*((void *)v13[0] + 3);
      if (*((char *)v10 + 23) < 0)
      {
        size_t v10 = *(unsigned int **)v10;
        uint64_t v11 = *(void *)(*((void *)v13[0] + 3) + 8);
      }
      else
      {
        LODWORD(v11) = *((unsigned __int8 *)v10 + 23);
      }
      google::protobuf::internal::WireFormatLite::VerifyUtf8String(v10, v11, 1, (uint64_t)"CoreML.Specification.StringToInt64Map.MapEntry.key");
      this = google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>::KeyValuePair const>::operator++(v13);
    }
    if (v7) {
      return (void *)(*(uint64_t (**)(uint64_t))(*(void *)v7 + 8))(v7);
    }
  }
  return this;
}

void sub_19EB4CA08(_Unwind_Exception *a1)
{
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  MEMORY[0x19F3C1900](v1, 0x60C8044C4A2DFLL);
  _Unwind_Resume(a1);
}

uint64_t std::__introsort<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,long long> const*> &,google::protobuf::MapPair<std::string,long long> const**,false>(uint64_t result, char *a2, uint64_t a3, char a4)
{
  uint64_t v8 = (char *)result;
  while (2)
  {
    signed int v95 = a2 - 8;
    int v91 = a2 - 24;
    std::string::size_type v92 = a2 - 16;
    int v9 = v8;
    while (1)
    {
      while (1)
      {
        while (1)
        {
          unint64_t v10 = (unint64_t)v9;
          uint64_t v11 = a2 - v9;
          uint64_t v12 = (a2 - v9) >> 3;
          if (v5 || !v4)
          {
            switch(v12)
            {
              case 0:
              case 1:
                return result;
              case 2:
                uint64_t v41 = *(void **)v95;
                uint64_t v42 = *(void **)v9;
                uint64_t result = google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(*(void **)v95, *(void **)v9);
                if (result)
                {
                  *(void *)int v9 = v41;
                  *(void *)signed int v95 = v42;
                }
                break;
              case 3:
                uint64_t result = std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v9, (void **)v9 + 1, (void **)v95);
                break;
              case 4:
                uint64_t result = std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v9, (void **)v9 + 1, (void **)v9 + 2, (void **)v95);
                break;
              case 5:
                uint64_t result = std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v9, (void **)v9 + 1, (void **)v9 + 2, (void **)v9 + 3, (void **)v95);
                break;
              default:
                JUMPOUT(0);
            }
            return result;
          }
          if (v11 <= 191)
          {
            int v43 = v9 + 8;
            BOOL v45 = v9 == a2 || v43 == a2;
            if (a4)
            {
              if (!v45)
              {
                uint64_t v46 = 0;
                BOOL v47 = v9;
                do
                {
                  int v49 = *(void **)v47;
                  size_t v48 = (void *)*((void *)v47 + 1);
                  BOOL v47 = v43;
                  uint64_t result = google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(v48, v49);
                  if (result)
                  {
                    uint64_t v50 = v46;
                    while (1)
                    {
                      *(void *)&v9[v50 + 8] = v49;
                      if (!v50) {
                        break;
                      }
                      int v49 = *(void **)&v9[v50 - 8];
                      uint64_t result = google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(v48, v49);
                      v50 -= 8;
                      if ((result & 1) == 0)
                      {
                        BOOL v51 = &v9[v50 + 8];
                        goto LABEL_80;
                      }
                    }
                    BOOL v51 = v9;
LABEL_80:
                    *(void *)BOOL v51 = v48;
                  }
                  int v43 = v47 + 8;
                  v46 += 8;
                }
                while (v47 + 8 != a2);
              }
            }
            else if (!v45)
            {
              do
              {
                uint64_t v87 = *(void **)v10;
                int v86 = *(void **)(v10 + 8);
                unint64_t v10 = (unint64_t)v43;
                uint64_t result = google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(v86, v87);
                if (result)
                {
                  uint64_t v88 = (void *)v10;
                  do
                  {
                    void *v88 = v87;
                    uint64_t v87 = (void *)*(v88 - 2);
                    uint64_t result = google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(v86, v87);
                    --v88;
                  }
                  while ((result & 1) != 0);
                  void *v88 = v86;
                }
                int v43 = (char *)(v10 + 8);
              }
              while ((char *)(v10 + 8) != a2);
            }
            return result;
          }
          if (!a3)
          {
            if (v9 != a2)
            {
              int v98 = v9;
              int64_t v52 = (unint64_t)(v12 - 2) >> 1;
              int64_t v53 = v52;
              int v89 = a2;
              uint64_t v90 = a2 - v9;
              do
              {
                int64_t v54 = v53;
                if (v11 >= 16 && v52 >= v53)
                {
                  uint64_t v55 = (2 * v53) | 1;
                  long long v56 = &v98[8 * v55];
                  uint64_t v57 = 2 * v53 + 2;
                  int64_t v96 = v53;
                  if (v57 < v12)
                  {
                    uint64_t v58 = *(void **)v56;
                    int v60 = (void *)*((void *)v56 + 1);
                    BOOL v59 = google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(*(void **)v56, v60);
                    if (v59) {
                      v56 += 8;
                    }
                    else {
                      int v60 = v58;
                    }
                    if (v59) {
                      uint64_t v55 = v57;
                    }
                  }
                  else
                  {
                    int v60 = *(void **)v56;
                  }
                  long long v61 = &v98[8 * v54];
                  unsigned int v62 = *(void **)v61;
                  uint64_t result = google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(v60, *(void **)v61);
                  uint64_t v11 = v90;
                  if ((result & 1) == 0)
                  {
                    do
                    {
                      long long v63 = v56;
                      *(void *)long long v61 = v60;
                      if (v52 < v55) {
                        break;
                      }
                      uint64_t v64 = (2 * v55) | 1;
                      long long v56 = &v98[8 * v64];
                      uint64_t v65 = 2 * v55 + 2;
                      if (v65 < v12)
                      {
                        int v60 = *(void **)v56;
                        int v66 = (void *)*((void *)v56 + 1);
                        if (google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(*(void **)v56, v66))
                        {
                          int v60 = v66;
                          v56 += 8;
                          uint64_t v55 = v65;
                        }
                        else
                        {
                          uint64_t v55 = v64;
                        }
                      }
                      else
                      {
                        int v60 = *(void **)v56;
                        uint64_t v55 = (2 * v55) | 1;
                      }
                      uint64_t result = google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(v60, v62);
                      long long v61 = v63;
                    }
                    while (!result);
                    *(void *)long long v63 = v62;
                    a2 = v89;
                    uint64_t v11 = v90;
                    int64_t v54 = v96;
                  }
                }
                int64_t v53 = v54 - 1;
              }
              while (v54);
              uint64_t v67 = (unint64_t)v11 >> 3;
              v68 = v98;
              do
              {
                uint64_t v69 = a2;
                uint64_t v70 = 0;
                uint64_t v71 = v67 - 2;
                int v94 = *(void **)v68;
                if (v67 < 2) {
                  uint64_t v71 = v67 - 1;
                }
                uint64_t v72 = v71 >> 1;
                do
                {
                  uint64_t v73 = &v68[8 * v70 + 8];
                  uint64_t v74 = (2 * v70) | 1;
                  uint64_t v75 = 2 * v70 + 2;
                  if (v75 >= v67)
                  {
                    int v78 = *(void **)v73;
                    uint64_t v70 = (2 * v70) | 1;
                  }
                  else
                  {
                    uint64_t v76 = *(void **)v73;
                    uint64_t v77 = *(void **)&v68[8 * v70 + 16];
                    uint64_t result = google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(*(void **)v73, v77);
                    if (result) {
                      int v78 = v77;
                    }
                    else {
                      int v78 = v76;
                    }
                    if (result)
                    {
                      v73 += 8;
                      uint64_t v70 = v75;
                    }
                    else
                    {
                      uint64_t v70 = v74;
                    }
                  }
                  *(void *)v68 = v78;
                  v68 = v73;
                }
                while (v70 <= v72);
                a2 = v69 - 8;
                if (v73 == v69 - 8)
                {
                  *(void *)uint64_t v73 = v94;
                }
                else
                {
                  *(void *)uint64_t v73 = *(void *)a2;
                  *(void *)a2 = v94;
                  uint64_t v79 = v73 - v98 + 8;
                  if (v79 >= 9)
                  {
                    unint64_t v80 = (unint64_t)((v79 >> 3) - 2) >> 1;
                    unint64_t v81 = &v98[8 * v80];
                    int v82 = *(void **)v81;
                    int v83 = *(void **)v73;
                    uint64_t result = google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(*(void **)v81, *(void **)v73);
                    if (result)
                    {
                      do
                      {
                        int v84 = v81;
                        *(void *)uint64_t v73 = v82;
                        if (!v80) {
                          break;
                        }
                        unint64_t v80 = (v80 - 1) >> 1;
                        unint64_t v81 = &v98[8 * v80];
                        int v82 = *(void **)v81;
                        uint64_t result = google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(*(void **)v81, v83);
                        uint64_t v73 = v84;
                      }
                      while ((result & 1) != 0);
                      *(void *)int v84 = v83;
                    }
                  }
                }
                BOOL v85 = v67-- <= 2;
                v68 = v98;
              }
              while (!v85);
            }
            return result;
          }
          unint64_t v13 = (unint64_t)v12 >> 1;
          size_t v14 = &v9[8 * ((unint64_t)v12 >> 1)];
          if ((unint64_t)v11 < 0x401)
          {
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v14, (void **)v9, (void **)v95);
          }
          else
          {
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v9, (void **)v14, (void **)v95);
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v9 + 1, (void **)v14 - 1, (void **)v92);
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v9 + 2, (void **)&v9[8 * v13 + 8], (void **)v91);
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v14 - 1, (void **)v14, (void **)&v9[8 * v13 + 8]);
            int v15 = *(void **)v9;
            *(void *)int v9 = *(void *)v14;
            *(void *)size_t v14 = v15;
          }
          --a3;
          uint64_t v16 = *(void **)v9;
          int v17 = v9;
          if (a4) {
            break;
          }
          int v17 = v9;
          if (google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(*((void **)v9 - 1), *(void **)v9))
          {
            break;
          }
          uint64_t result = google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(v16, *(void **)v95);
          if (result)
          {
            do
            {
              size_t v31 = (void *)*((void *)v9 + 1);
              v9 += 8;
              uint64_t result = google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(v16, v31);
            }
            while ((result & 1) == 0);
          }
          else
          {
            int v32 = v9 + 8;
            do
            {
              int v9 = v32;
              if (v32 >= a2) {
                break;
              }
              v32 += 8;
              uint64_t result = google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(v16, *(void **)v9);
            }
            while (!result);
          }
          size_t v33 = a2;
          if (v9 < a2)
          {
            size_t v33 = a2;
            do
            {
              BOOL v34 = (void *)*((void *)v33 - 1);
              v33 -= 8;
              uint64_t result = google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(v16, v34);
            }
            while ((result & 1) != 0);
          }
          uint64_t v35 = a2;
          if (v9 < v33)
          {
            int v36 = *(void **)v9;
            size_t v37 = *(void **)v33;
            do
            {
              *(void *)int v9 = v37;
              *(void *)size_t v33 = v36;
              do
              {
                int v38 = (void *)*((void *)v9 + 1);
                v9 += 8;
                int v36 = v38;
              }
              while (!google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(v16, v38));
              do
              {
                int v39 = (void *)*((void *)v33 - 1);
                v33 -= 8;
                size_t v37 = v39;
                uint64_t result = google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(v16, v39);
              }
              while ((result & 1) != 0);
            }
            while (v9 < v33);
          }
          size_t v40 = v9 - 8;
          BOOL v4 = (unint64_t)(v9 - 8) >= v10;
          BOOL v5 = v9 - 8 == (char *)v10;
          a2 = v35;
          if (v9 - 8 != (char *)v10) {
            *(void *)unint64_t v10 = *(void *)v40;
          }
          a4 = 0;
          *(void *)size_t v40 = v16;
        }
        do
        {
          size_t v18 = v17;
          size_t v20 = (void *)*((void *)v17 + 1);
          v17 += 8;
          int v19 = v20;
        }
        while (google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(v20, v16));
        uint64_t v97 = a3;
        BOOL v21 = a2;
        if (v18 == (char *)v10)
        {
          BOOL v21 = a2;
          do
          {
            if (v17 >= v21) {
              break;
            }
            unsigned int v23 = (void *)*((void *)v21 - 1);
            v21 -= 8;
          }
          while (!google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(v23, v16));
        }
        else
        {
          do
          {
            size_t v22 = (void *)*((void *)v21 - 1);
            v21 -= 8;
          }
          while (!google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(v22, v16));
        }
        uint64_t v8 = (char *)v10;
        size_t v24 = a2;
        if (v17 < v21)
        {
          BOOL v25 = *(void **)v21;
          size_t v26 = v17;
          BOOL v27 = v21;
          do
          {
            *(void *)size_t v26 = v25;
            *(void *)BOOL v27 = v19;
            do
            {
              size_t v18 = v26;
              size_t v28 = (void *)*((void *)v26 + 1);
              v26 += 8;
              int v19 = v28;
            }
            while (google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(v28, v16));
            do
            {
              BOOL v29 = (void *)*((void *)v27 - 1);
              v27 -= 8;
              BOOL v25 = v29;
            }
            while (!google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(v29, v16));
          }
          while (v26 < v27);
        }
        if (v18 != v8) {
          *(void *)uint64_t v8 = *(void *)v18;
        }
        *(void *)size_t v18 = v16;
        BOOL v4 = v17 >= v21;
        a2 = v24;
        a3 = v97;
        if (v4) {
          break;
        }
LABEL_31:
        uint64_t result = std::__introsort<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,long long> const*> &,google::protobuf::MapPair<std::string,long long> const**,false>(v8, v18, v97, a4 & 1);
        a4 = 0;
        int v9 = v18 + 8;
      }
      BOOL v30 = std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,long long> const*> &,google::protobuf::MapPair<std::string,long long> const**>((void **)v8, (void **)v18);
      int v9 = v18 + 8;
      uint64_t result = std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,long long> const*> &,google::protobuf::MapPair<std::string,long long> const**>((void **)v18 + 1, (void **)v24);
      if (result) {
        break;
      }
      if (!v30) {
        goto LABEL_31;
      }
    }
    a2 = v18;
    if (!v30) {
      continue;
    }
    return result;
  }
}

google::protobuf::Arena **google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::Wrap(google::protobuf::Arena *a1, google::protobuf::Arena *a2, google::protobuf::Arena *a3)
{
  if (!a3) {
    operator new();
  }
  result[1] = 0;
  result[2] = (google::protobuf::Arena *)&google::protobuf::internal::fixed_address_empty_string;
  result[3] = 0;
  result[4] = a3;
  *uint64_t result = (google::protobuf::Arena *)&unk_1EF0DBEB0;
  result[6] = a1;
  result[7] = a2;
  *((_DWORD *)result + 1CoreML::Specification::Normalizer::New(this, 0) = 3;
  return result;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::MapEntryWrapper::value(uint64_t a1)
{
  return *(void *)(a1 + 56);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::MapEntryWrapper::key(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

unsigned char *google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::InternalSerializeWithCachedSizesToArray(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  BOOL v5 = (const void **)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 136))(a1);
  *a3 = 10;
  size_t v6 = google::protobuf::io::CodedOutputStream::WriteStringWithSizeToArray(v5, a3 + 1);
  unint64_t v7 = *(void *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 144))(a1);
  *size_t v6 = 16;
  uint64_t v8 = v6 + 1;
  if (v7 < 0x80)
  {
    LOBYTE(v9) = v7;
  }
  else
  {
    do
    {
      *v8++ = v7 | 0x80;
      unint64_t v9 = v7 >> 7;
      unint64_t v10 = v7 >> 14;
      v7 >>= 7;
    }
    while (v10);
  }
  *uint64_t v8 = v9;
  return v8 + 1;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::GetCachedSize(_DWORD *a1)
{
  int v2 = a1[10];
  if (v2)
  {
    uint64_t v5 = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 136))(a1);
    int v6 = *(unsigned __int8 *)(v5 + 23);
    if ((v6 & 0x80u) != 0) {
      int v6 = *(_DWORD *)(v5 + 8);
    }
    unsigned int v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((a1[10] & 2) != 0) {
      goto LABEL_3;
    }
LABEL_7:
    int v4 = 0;
    return v4 + v3;
  }
  unsigned int v3 = 0;
  if ((v2 & 2) == 0) {
    goto LABEL_7;
  }
LABEL_3:
  int v4 = ((9 * (__clz(*(void *)(*(uint64_t (**)(_DWORD *))(*(void *)a1 + 144))(a1) | 1) ^ 0x3F) + 73) >> 6)
     + 1;
  return v4 + v3;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::SerializeWithCachedSizes(uint64_t a1, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 136))(a1);
  google::protobuf::internal::WireFormatLite::WriteString(1u, v4, a2);
  unint64_t v5 = *(void *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 144))(a1);

  return google::protobuf::internal::WireFormatLite::WriteInt64(2, v5, a2, v6);
}

unint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::ByteSizeLong(_DWORD *a1)
{
  int v2 = a1[10];
  if (v2)
  {
    uint64_t v5 = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 136))(a1);
    int v6 = *(unsigned __int8 *)(v5 + 23);
    if ((v6 & 0x80u) != 0) {
      int v6 = *(_DWORD *)(v5 + 8);
    }
    uint64_t v3 = (int)(v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6)) + 1;
    if ((a1[10] & 2) != 0) {
      goto LABEL_3;
    }
LABEL_7:
    unint64_t v4 = 0;
    return v4 + v3;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) == 0) {
    goto LABEL_7;
  }
LABEL_3:
  unint64_t v4 = ((9 * (__clz(*(void *)(*(uint64_t (**)(_DWORD *))(*(void *)a1 + 144))(a1) | 1) ^ 0x3F) + 73) >> 6)
     + 1;
  return v4 + v3;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::MergePartialFromCodedStream(uint64_t a1, google::protobuf::io::CodedInputStream *this, unsigned int a3)
{
  do
  {
    while (1)
    {
      uint64_t v5 = *(char **)this;
      if (*(void *)this >= *((void *)this + 1))
      {
        LODWORD(TagFallback) = 0;
      }
      else
      {
        unint64_t TagFallback = *v5;
        if ((*v5 & 0x80000000) == 0)
        {
          *(void *)this = v5 + 1;
          goto LABEL_6;
        }
      }
      unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(this, TagFallback);
LABEL_6:
      if (TagFallback != 10) {
        break;
      }
      *(_DWORD *)(a1 + 40) |= 1u;
      unint64_t v7 = *(long long **)(a1 + 16);
      if (v7 == &google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstance();
      }
      uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((unsigned __int8 **)this, (std::string *)v7);
      if (!result) {
        return result;
      }
      int v9 = *(_DWORD *)(a1 + 40) | 1;
      *(_DWORD *)(a1 + 4CoreML::Specification::Normalizer::New(this, 0) = v9;
      uint64_t v11 = *(char **)this;
      unint64_t v10 = *((void *)this + 1);
      if (*(void *)this < v10 && *v11 == 16)
      {
        uint64_t v12 = v11 + 1;
        *(void *)this = v12;
LABEL_19:
        int v13 = v9 | 2;
        *(_DWORD *)(a1 + 4CoreML::Specification::Normalizer::New(this, 0) = v13;
        if ((unint64_t)v12 >= v10 || *v12 < 0)
        {
          unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this);
          if ((v16 & 1) == 0) {
            return 0;
          }
          int v13 = *(_DWORD *)(a1 + 40);
          int v15 = *(unsigned __int8 **)this;
          unint64_t v10 = *((void *)this + 1);
        }
        else
        {
          unint64_t Varint64Fallback = *v12;
          int v15 = (unsigned __int8 *)(v12 + 1);
          *(void *)this = v15;
        }
        *(void *)(a1 + 24) = Varint64Fallback;
        *(_DWORD *)(a1 + 4CoreML::Specification::Normalizer::New(this, 0) = v13 | 2;
        if (v15 == (unsigned __int8 *)v10
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback == 16)
    {
      int v9 = *(_DWORD *)(a1 + 40);
      uint64_t v12 = *(char **)this;
      unint64_t v10 = *((void *)this + 1);
      goto LABEL_19;
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(this, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return 0;
}

std::string *google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::CheckTypeAndMergeFrom(std::string *result, _DWORD *a2)
{
  int v2 = a2[10];
  if (v2)
  {
    unint64_t v4 = result;
    if (v2)
    {
      uint64_t v5 = (std::string **)&result->__r_.__value_.__r.__words[2];
      if ((long long *)result->__r_.__value_.__r.__words[2] == &google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstance();
      }
      int v6 = (const std::string *)(*(uint64_t (**)(_DWORD *))(*(void *)a2 + 136))(a2);
      if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstance();
      }
      uint64_t result = std::string::operator=(*v5, v6);
      LODWORD(v4[1].__r_.__value_.__r.__words[2]) |= 1u;
      int v2 = a2[10];
    }
    if ((v2 & 2) != 0)
    {
      uint64_t result = (std::string *)(*(uint64_t (**)(_DWORD *))(*(void *)a2 + 144))(a2);
      v4[1].__r_.__value_.__r.__words[0] = result->__r_.__value_.__r.__words[0];
      LODWORD(v4[1].__r_.__value_.__r.__words[2]) |= 2u;
    }
  }
  return result;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::IsInitialized()
{
  return 1;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::Clear(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  if ((long long *)v1 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)uint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) &= 0xFFFFFFFC;
  return result;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::GetArena(uint64_t a1)
{
  return *(void *)(a1 + 32);
}

google::protobuf::Arena **google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::New(uint64_t a1, google::protobuf::Arena *a2)
{
  if (!a2) {
    operator new();
  }
  result[1] = 0;
  result[2] = (google::protobuf::Arena *)&google::protobuf::internal::fixed_address_empty_string;
  result[3] = 0;
  result[4] = a2;
  *((_DWORD *)result + 1CoreML::Specification::Normalizer::New(this, 0) = 0;
  uint64_t v5 = *(google::protobuf::Arena **)(a1 + 8);
  *uint64_t result = (google::protobuf::Arena *)&unk_1EF0DC7E0;
  result[1] = v5;
  return result;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::value(uint64_t a1)
{
  if (!*(void *)(a1 + 8))
  {
    int v3 = 3;
    unint64_t v4 = "/Library/Caches/com.apple.xbs/Sources/CoreML/coremltools-internal/deps/protobuf/src/google/protobuf/map_entry_lite.h";
    int v5 = 162;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: default_instance_ != NULL: ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v3);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  return a1 + 24;
}

void sub_19EB4DA24(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::key(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

void google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::New()
{
}

void *google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, (char *)&unk_19EC86ACE);
}

void google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::~MapEntryLite(void *a1)
{
  *a1 = &unk_1EF0DBF58;
  if ((void *)a1[1] != a1 && !a1[4]) {
    google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(a1[2]);
  }

  JUMPOUT(0x19F3C1920);
}

void google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::~MapEntryImpl(void *a1)
{
  *a1 = &unk_1EF0DBF58;
  if ((void *)a1[1] != a1 && !a1[4]) {
    google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(a1[2]);
  }

  JUMPOUT(0x19F3C1920);
}

void *google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::~MapEntryImpl(void *a1)
{
  *a1 = &unk_1EF0DBF58;
  if ((void *)a1[1] != a1 && !a1[4]) {
    google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(a1[2]);
  }
  return a1;
}

void *google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::~MapEntryLite(void *a1)
{
  *a1 = &unk_1EF0DBF58;
  if ((void *)a1[1] != a1 && !a1[4]) {
    google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(a1[2]);
  }
  return a1;
}

void google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::MapEntryWrapper::~MapEntryWrapper(void *a1)
{
  *a1 = &unk_1EF0DBF58;
  if ((void *)a1[1] != a1 && !a1[4]) {
    google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(a1[2]);
  }

  JUMPOUT(0x19F3C1920);
}

void *google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::MapEntryWrapper::~MapEntryWrapper(void *a1)
{
  *a1 = &unk_1EF0DBF58;
  if ((void *)a1[1] != a1 && !a1[4]) {
    google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(a1[2]);
  }
  return a1;
}

BOOL std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,long long> const*> &,google::protobuf::MapPair<std::string,long long> const**>(void **a1, void **a2)
{
  uint64_t v4 = a2 - a1;
  BOOL result = 1;
  switch(v4)
  {
    case 0:
    case 1:
      return result;
    case 2:
      int v6 = *(a2 - 1);
      unint64_t v7 = *a1;
      if (google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(v6, *a1))
      {
        *a1 = v6;
        *(a2 - 1) = v7;
      }
      return 1;
    case 3:
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>(a1, a1 + 1, a2 - 1);
      return 1;
    case 4:
      std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>(a1, a1 + 1, a1 + 2, a2 - 1);
      return 1;
    case 5:
      std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>(a1, a1 + 1, a1 + 2, a1 + 3, a2 - 1);
      return 1;
    default:
      uint64_t v8 = a1 + 2;
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>(a1, a1 + 1, a1 + 2);
      int v9 = a1 + 3;
      if (a1 + 3 == a2) {
        return 1;
      }
      int v10 = 0;
      uint64_t v11 = 24;
      break;
  }
  while (1)
  {
    uint64_t v12 = *v9;
    int v13 = *v8;
    if (google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(*v9, v13))
    {
      uint64_t v14 = v11;
      while (1)
      {
        *(void **)((char *)a1 + v14) = v13;
        uint64_t v15 = v14 - 8;
        if (v14 == 8) {
          break;
        }
        int v13 = *(void **)((char *)a1 + v14 - 16);
        BOOL v16 = google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(v12, v13);
        uint64_t v14 = v15;
        if (!v16)
        {
          int v17 = (void **)((char *)a1 + v15);
          goto LABEL_12;
        }
      }
      int v17 = a1;
LABEL_12:
      *int v17 = v12;
      if (++v10 == 8) {
        return v9 + 1 == a2;
      }
    }
    uint64_t v8 = v9;
    v11 += 8;
    if (++v9 == a2) {
      return 1;
    }
  }
}

uint64_t CoreML::Specification::StringToInt64Map::ByteSizeLong(CoreML::Specification::StringToInt64Map *this)
{
  int v2 = (void *)*((void *)this + 5);
  uint64_t v3 = *(unsigned int *)v2;
  google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>::begin(v8, v2);
  uint64_t v4 = 0;
  while (v8[0])
  {
    int v5 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::Wrap(*((google::protobuf::Arena **)v8[0] + 3), (google::protobuf::Arena *)(*((void *)v8[0] + 3) + 24), *((google::protobuf::Arena **)this + 2));
    if (v4 != v5)
    {
      if (v4) {
        (*((void (**)(google::protobuf::Arena **))*v4 + 1))(v4);
      }
      uint64_t v4 = v5;
    }
    unint64_t v6 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::ByteSizeLong(v4);
    v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
    google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>::KeyValuePair const>::operator++(v8);
  }
  if (v4) {
    (*((void (**)(google::protobuf::Arena **))*v4 + 1))(v4);
  }
  *((_DWORD *)this + 12) = v3;
  return v3;
}

void sub_19EB4DFF8(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t CoreML::Specification::StringToInt64Map::MergePartialFromCodedStream(CoreML::Specification::StringToInt64Map *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v4 = (google::protobuf::Arena **)((char *)this + 16);
  int v5 = (void *)((char *)this + 24);
  while (1)
  {
    unint64_t v6 = *(char **)a2;
    if (*(void *)a2 >= *((void *)a2 + 1))
    {
      LODWORD(v7) = 0;
    }
    else
    {
      uint64_t v7 = *v6;
      if (*v6 >= 1)
      {
        *(void *)a2 = v6 + 1;
        unint64_t v8 = v7 | 0x100000000;
        if ((v8 & 0x100000000) == 0) {
          goto LABEL_12;
        }
        goto LABEL_8;
      }
    }
    unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
    unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
    if ((v8 & 0x100000000) == 0) {
      goto LABEL_12;
    }
LABEL_8:
    if (v8 == 10 && (v8 & 0xFFFFFFF8) == 8)
    {
      uint64_t v42 = v4;
      int v43 = v5;
      memset(&__p, 0, sizeof(__p));
      uint64_t v46 = 0;
      int v13 = *(char **)a2;
      if (*(void *)a2 < *((void *)a2 + 1) && (*v13 & 0x80000000) == 0)
      {
        int VarintSizeAsIntFallback = *v13;
        *(void *)a2 = v13 + 1;
        goto LABEL_24;
      }
      int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
      if (VarintSizeAsIntFallback < 0) {
        goto LABEL_50;
      }
LABEL_24:
      int v16 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      int v17 = *((_DWORD *)a2 + 13);
      BOOL v18 = __OFSUB__(v17--, 1);
      *((_DWORD *)a2 + 13) = v17;
      if (v17 < 0 == v18)
      {
        int v19 = v16;
        size_t v20 = *(char **)a2;
        if (*(void *)a2 < *((void *)a2 + 1) && *v20 == 10)
        {
          *(void *)a2 = v20 + 1;
          if (!google::protobuf::internal::WireFormatLite::ReadBytes((unsigned __int8 **)a2, &__p)) {
            goto LABEL_50;
          }
          if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) >= 1 && **(unsigned char **)a2 == 16)
          {
            uint64_t v21 = *(void *)v43[2];
            BOOL v45 = google::protobuf::Map<std::string,long long>::operator[]((uint64_t)v43, (uint64_t)&__p);
            if (v21 != *(void *)v43[2])
            {
              google::protobuf::io::CodedInputStream::Skip(a2, 1u);
              size_t v22 = v45;
              size_t v24 = *(unsigned __int8 **)a2;
              unsigned int v23 = (char *)*((void *)a2 + 1);
              if (*(void *)a2 >= (unint64_t)v23 || (char)*v24 < 0)
              {
                unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
                if (v31)
                {
                  size_t v26 = *(char **)a2;
                  unsigned int v23 = (char *)*((void *)a2 + 1);
                  goto LABEL_52;
                }
                v15.n128_f64[0] = google::protobuf::Map<std::string,long long>::erase(v43, (unsigned __int8 *)&__p);
                goto LABEL_50;
              }
              unint64_t Varint64Fallback = *v24;
              size_t v26 = (char *)(v24 + 1);
              *(void *)a2 = v26;
LABEL_52:
              *size_t v22 = Varint64Fallback;
              if (v26 == v23 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
              {
                *((_DWORD *)a2 + 8) = 0;
                *((unsigned char *)a2 + 36) = 1;
LABEL_65:
                if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v19))
                {
                  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                    p_p = (unsigned int *)&__p;
                  }
                  else {
                    p_p = (unsigned int *)__p.__r_.__value_.__r.__words[0];
                  }
                  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                    int v39 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
                  }
                  else {
                    int v39 = __p.__r_.__value_.__r.__words[1];
                  }
                  BOOL v40 = google::protobuf::internal::WireFormatLite::VerifyUtf8String(p_p, v39, 0, (uint64_t)"CoreML.Specification.StringToInt64Map.MapEntry.key");
                  BOOL v30 = v40;
                  if (v40) {
                    int v12 = 0;
                  }
                  else {
                    int v12 = 6;
                  }
                  goto LABEL_75;
                }
                goto LABEL_50;
              }
              int v32 = google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::NewEntry(*v42);
              if (v46 != v32)
              {
                if (v46) {
                  (*((void (**)(void))*v46 + 1))();
                }
                uint64_t v46 = v32;
              }
              size_t v33 = v45;
              BOOL v34 = v43;
              *((_DWORD *)v32 + 10) |= 2u;
              v32[3] = *v33;
              google::protobuf::Map<std::string,long long>::erase(v34, (unsigned __int8 *)&__p);
              uint64_t v35 = v46;
              *((_DWORD *)v46 + 10) |= 1u;
              int v36 = v35[2];
              if (v36 == (google::protobuf::Arena *)&google::protobuf::internal::fixed_address_empty_string) {
                google::protobuf::internal::ArenaStringPtr::CreateInstance();
              }
              if (*((char *)v36 + 23) < 0) {
                operator delete(*(void **)v36);
              }
              long long v37 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
              *((void *)v36 + 2) = *((void *)&__p.__r_.__value_.__l + 2);
              *(_OWORD *)int v36 = v37;
              *((unsigned char *)&__p.__r_.__value_.__s + 23) = 0;
              __p.__r_.__value_.__s.__data_[0] = 0;
              int v29 = (*((uint64_t (**)(google::protobuf::Arena **, google::protobuf::io::CodedInputStream *))*v46
                     + 11))(v46, a2);
              if (v29) {
                google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::Map<std::string,long long>>::UseKeyAndValueFromEntry((uint64_t)&v42);
              }
              if (!(*((uint64_t (**)(google::protobuf::Arena **))*v46 + 5))(v46))
              {
LABEL_64:
                if (v29) {
                  goto LABEL_65;
                }
                goto LABEL_50;
              }
LABEL_46:
              uint64_t v46 = 0;
              if (v29) {
                goto LABEL_65;
              }
              BOOL v30 = 0;
              int v12 = 6;
LABEL_77:
              if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
                operator delete(__p.__r_.__value_.__l.__data_);
              }
              if (!v30) {
                goto LABEL_18;
              }
              goto LABEL_17;
            }
          }
        }
        else
        {
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
          memset(&__p, 0, sizeof(__p));
        }
        BOOL v27 = google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::NewEntry(*v42);
        if (v46 != v27)
        {
          if (v46) {
            (*((void (**)(void))*v46 + 1))();
          }
          uint64_t v46 = v27;
        }
        size_t v28 = (long long *)v27[2];
        *((_DWORD *)v27 + 10) |= 1u;
        if (v28 == &google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstance();
        }
        std::string::operator=((std::string *)v28, &__p);
        int v29 = (*((uint64_t (**)(google::protobuf::Arena **, google::protobuf::io::CodedInputStream *))*v46 + 11))(v46, a2);
        if (v29) {
          google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::Map<std::string,long long>>::UseKeyAndValueFromEntry((uint64_t)&v42);
        }
        if (!(*((uint64_t (**)(google::protobuf::Arena **))*v46 + 5))(v46)) {
          goto LABEL_64;
        }
        goto LABEL_46;
      }
LABEL_50:
      BOOL v30 = 0;
      int v12 = 6;
LABEL_75:
      if (v46) {
        (*((void (**)(google::protobuf::Arena **, __n128))*v46 + 1))(v46, v15);
      }
      goto LABEL_77;
    }
LABEL_12:
    if (!v8 || (v8 & 7) == 4) {
      return 1;
    }
    if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3))return 0; {
LABEL_17:
    }
    int v12 = 0;
LABEL_18:
    if (v12) {
      return 0;
    }
  }
}

void sub_19EB4E57C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::Map<std::string,std::string>>::~Parser((uint64_t)va);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Map<std::string,long long>::operator[](uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)(a1 + 16);
  if (*(char *)(a2 + 23) < 0) {
    std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string __p = *(std::string *)a2;
  }
  std::string::size_type v23 = 0;
  google::protobuf::Map<std::string,std::string>::InnerMap::FindHelper(v25, (uint64_t)v4, (unsigned __int8 *)&__p, 0);
  uint64_t v6 = v25[0];
  if (v25[0]) {
    goto LABEL_18;
  }
  unint64_t v7 = v4[1];
  unint64_t v8 = *v4 + 1;
  unint64_t v9 = ((3 * v7) >> 2) & 0xFFFFFFFFFFFFFFFLL;
  if (v9 <= v8)
  {
    if (v7 <= 0x800000000000000)
    {
      uint64_t v19 = 2 * v7;
LABEL_33:
      google::protobuf::Map<std::string,std::string>::InnerMap::Resize((uint64_t)v4, v19, v5);
      google::protobuf::Map<std::string,std::string>::InnerMap::FindHelper(v24, (uint64_t)v4, (unsigned __int8 *)&__p, 0);
      uint64_t v11 = v24[3];
      goto LABEL_11;
    }
  }
  else if (v7 >= 9 && (12 * v7) >> 6 >= v8)
  {
    char v20 = 0;
    unint64_t v21 = ((5 * v8) >> 2) + 1;
    do
      ++v20;
    while (v21 << v20 < v9);
    uint64_t v19 = v7 >> v20 <= 8 ? 8 : v7 >> v20;
    if (v19 != v7) {
      goto LABEL_33;
    }
  }
  uint64_t v11 = v25[3];
LABEL_11:
  int v12 = (google::protobuf::Arena *)v4[5];
  if (v12) {
    Aligned = (std::string *)google::protobuf::Arena::AllocateAligned(v12, MEMORY[0x1E4FBA3A0], 40);
  }
  else {
    Aligned = (std::string *)operator new(0x28uLL);
  }
  uint64_t v14 = (std::string::__raw *)Aligned;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(Aligned, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
  }
  else
  {
    long long v15 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    Aligned->__r_.__value_.__r.__words[2] = __p.__r_.__value_.__r.__words[2];
    *(_OWORD *)&Aligned->__r_.__value_.__l.__data_ = v15;
  }
  v14[1].__words[0] = v23;
  google::protobuf::Map<std::string,std::string>::InnerMap::InsertUnique(v24, (uint64_t)v4, v11, v14);
  ++*v4;
  uint64_t v6 = v24[0];
LABEL_18:
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  int v16 = *(google::protobuf::Arena ***)(v6 + 24);
  if (!v16)
  {
    if (!*(void *)a1) {
      operator new();
    }
    int v16 = google::protobuf::Arena::AllocateAligned(*(google::protobuf::Arena **)a1, MEMORY[0x1E4FBA3A0], 32);
    int v17 = *(google::protobuf::Arena **)a1;
    v16[1] = 0;
    v16[2] = 0;
    void *v16 = 0;
    google::protobuf::Arena::OwnDestructor<std::string>((google::protobuf::Arena **)v17, (google::protobuf::Arena *)v16);
    v16[3] = 0;
    std::string::operator=((std::string *)v16, (const std::string *)a2);
    *(void *)(v6 + 24) = v16;
  }
  return v16 + 3;
}

void sub_19EB4E7E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  MEMORY[0x19F3C1920](v14, 0x1012C4092066FB6);
  _Unwind_Resume(a1);
}

double google::protobuf::Map<std::string,long long>::erase(void *a1, unsigned __int8 *a2)
{
  google::protobuf::Map<std::string,std::string>::InnerMap::FindHelper(&v6, a1[2], a2, 0);
  double result = *(double *)&v6;
  if ((void)v6)
  {
    long long v4 = v6;
    uint64_t v5 = v7;
    *(void *)&double result = google::protobuf::Map<std::string,long long>::erase((uint64_t)&v6, a1, (uint64_t *)&v4).n128_u64[0];
  }
  return result;
}

google::protobuf::Arena **google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::NewEntry(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = 0;
  result[2] = (google::protobuf::Arena *)&google::protobuf::internal::fixed_address_empty_string;
  result[3] = 0;
  result[4] = a1;
  *((_DWORD *)result + 1CoreML::Specification::Normalizer::New(this, 0) = 0;
  *double result = (google::protobuf::Arena *)&unk_1EF0DC7E0;
  return result;
}

google::protobuf::Arena **google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::Map<std::string,long long>>::UseKeyAndValueFromEntry(uint64_t a1)
{
  int v2 = (const std::string *)(*(uint64_t (**)(void))(**(void **)(a1 + 48) + 136))(*(void *)(a1 + 48));
  std::string::operator=((std::string *)(a1 + 16), v2);
  double result = google::protobuf::Map<std::string,long long>::operator[](*(void *)(a1 + 8), a1 + 16);
  *(void *)(a1 + 4CoreML::Specification::Normalizer::New(this, 0) = result;
  uint64_t v4 = *(void *)(a1 + 48);
  *(_DWORD *)(v4 + 40) |= 2u;
  *double result = *(google::protobuf::Arena **)(v4 + 24);
  return result;
}

__n128 google::protobuf::Map<std::string,long long>::erase(uint64_t a1, void *a2, uint64_t *a3)
{
  uint64_t v6 = *a3;
  if (!*a2)
  {
    uint64_t v7 = *(void *)(v6 + 24);
    if (v7)
    {
      if (*(char *)(v7 + 23) < 0) {
        operator delete(*(void **)v7);
      }
      MEMORY[0x19F3C1920](v7, 0x1012C4092066FB6);
      uint64_t v6 = *a3;
    }
  }
  __n128 v27 = *(__n128 *)a3;
  unint64_t v28 = a3[2];
  uint64_t v8 = *(void *)(v6 + 32);
  if (v8) {
    goto LABEL_7;
  }
  int v29 = 0;
  if (google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::KeyValuePair>::revalidate_if_necessary((uint64_t)a3, (uint64_t *)&v29))
  {
    unint64_t v9 = a3[2] + 1;
  }
  else
  {
    uint64_t v10 = a3[2];
    uint64_t v11 = *(void *)(*(void *)(a3[1] + 32) + 8 * v10);
    uint64_t v12 = (uint64_t)v29;
    int v13 = (void *)v29[1];
    if (v13)
    {
      do
      {
        uint64_t v14 = v13;
        int v13 = (void *)*v13;
      }
      while (v13);
    }
    else
    {
      do
      {
        uint64_t v14 = *(void **)(v12 + 16);
        BOOL v15 = *v14 == v12;
        uint64_t v12 = (uint64_t)v14;
      }
      while (!v15);
    }
    int v29 = v14;
    if (v14 != (void *)(v11 + 8))
    {
      uint64_t v8 = v14[4];
LABEL_7:
      *a3 = v8;
      goto LABEL_19;
    }
    unint64_t v9 = v10 + 2;
  }
  google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>::KeyValuePair const>::SearchFrom(a3, v9);
LABEL_19:
  int v16 = (void *)a2[2];
  int v29 = 0;
  BOOL v17 = google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::KeyValuePair>::revalidate_if_necessary((uint64_t)&v27, (uint64_t *)&v29);
  unint64_t v18 = v28;
  uint64_t v19 = (void **)v27.n128_u64[0];
  uint64_t v20 = v16[4];
  uint64_t v21 = *(void *)(v20 + 8 * v28);
  if (v17)
  {
    uint64_t v22 = google::protobuf::Map<std::string,std::string>::InnerMap::EraseFromLinkedList(v27.n128_i64[0], *(void *)(v20 + 8 * v28));
LABEL_25:
    *(void *)(v16[4] + 8 * v18) = v22;
    goto LABEL_26;
  }
  std::string::size_type v23 = (uint64_t *)std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::find<std::string *>(v21, (void *)v29[4]);
  if ((uint64_t *)(v21 + 8) != v23) {
    std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::erase(v21, v23);
  }
  if (!*(void *)(v21 + 24))
  {
    google::protobuf::Map<std::string,std::string>::InnerMap::DestroyTree(v16[5], (void **)v21);
    uint64_t v22 = 0;
    *(void *)(v16[4] + ((8 * v18) | 8)) = 0;
    v18 &= ~1uLL;
    goto LABEL_25;
  }
LABEL_26:
  google::protobuf::Map<std::string,std::string>::InnerMap::DestroyNode((uint64_t)v16, v19);
  --*v16;
  if (v18 == v16[3])
  {
    unint64_t v25 = v16[1];
    if (v18 < v25)
    {
      uint64_t v26 = v16[4];
      do
      {
        if (*(void *)(v26 + 8 * v18)) {
          break;
        }
        v16[3] = ++v18;
      }
      while (v25 != v18);
    }
  }
  __n128 result = *(__n128 *)a3;
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(void *)(a1 + 16) = a3[2];
  return result;
}

void *CoreML::Specification::StringToInt64Map::MergeFrom(CoreML::Specification::StringToInt64Map *this, const CoreML::Specification::StringToInt64Map *a2)
{
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  __n128 result = google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>::begin(v10, *((void **)a2 + 5));
  uint64_t v6 = v10[0];
  if (v10[0])
  {
    uint64_t v7 = (char *)this + 24;
    do
    {
      uint64_t v8 = *((void *)v6 + 3);
      unint64_t v9 = *(google::protobuf::Arena **)(v8 + 24);
      *google::protobuf::Map<std::string,long long>::operator[]((uint64_t)v7, v8) = v9;
      __n128 result = google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>::KeyValuePair const>::operator++(v10);
      uint64_t v6 = v10[0];
    }
    while (v10[0]);
  }
  return result;
}

uint64_t CoreML::Specification::StringToInt64Map::IsInitialized(CoreML::Specification::StringToInt64Map *this)
{
  return 1;
}

void CoreML::Specification::StringToInt64Map::Clear(CoreML::Specification::StringToInt64Map *this)
{
}

void google::protobuf::Map<std::string,long long>::clear(void *a1)
{
  uint64_t v1 = (void *)a1[2];
  unint64_t v2 = v1[3];
  unint64_t v3 = v1[1];
  if (v3 > v2)
  {
    uint64_t v5 = v1[4];
    while (1)
    {
      uint64_t v6 = *(void *)(v5 + 8 * v2);
      if (v6) {
        break;
      }
      if (v3 == ++v2) {
        return;
      }
    }
    if (v6 != *(void *)(v5 + 8 * (v2 ^ 1)) || (uint64_t v6 = *(void *)(*(void *)v6 + 32)) != 0)
    {
      do
      {
        v7[0] = v6;
        v7[1] = (uint64_t)v1;
        v7[2] = v2;
        google::protobuf::Map<std::string,long long>::erase((uint64_t)v8, a1, v7);
        uint64_t v6 = v8[0];
        uint64_t v1 = (void *)v8[1];
        unint64_t v2 = v8[2];
      }
      while (v8[0]);
    }
  }
}

void CoreML::Specification::StringToInt64Map::New(CoreML::Specification::StringToInt64Map *this, google::protobuf::Arena *a2)
{
}

void sub_19EB4ED20(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C407031D3CFLL);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::StringToInt64Map>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    unint64_t v3 = result;
    __n128 result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *__n128 result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::StringToInt64Map>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::StringToInt64Map>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void *google::protobuf::Map<std::string,long long>::~Map(void *a1)
{
  google::protobuf::Map<std::string,long long>::clear(a1);
  if (!*a1)
  {
    uint64_t v2 = a1[2];
    if (v2)
    {
      uint64_t v3 = google::protobuf::Map<std::string,std::string>::InnerMap::~InnerMap(v2);
      MEMORY[0x19F3C1920](v3, 0x10E0C40D5F42F35);
    }
  }
  return a1;
}

uint64_t CoreML::Specification::PrecisionRecallCurve::GetCachedSize(CoreML::Specification::PrecisionRecallCurve *this)
{
  return *((unsigned int *)this + 12);
}

uint64_t *CoreML::Specification::PrecisionRecallCurve::SerializeWithCachedSizes(uint64_t *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  if (this != &CoreML::Specification::_PrecisionRecallCurve_default_instance_)
  {
    unint64_t v5 = this;
    uint64_t v6 = this[2];
    if (v6) {
      this = (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
    }
    uint64_t v7 = v5[3];
    if (v7) {
      this = (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
    }
    uint64_t v8 = v5[4];
    if (v8) {
      this = (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)3, v8, a2, a4);
    }
    uint64_t v9 = v5[5];
    if (v9)
    {
      return (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)4, v9, a2, a4);
    }
  }
  return this;
}

unsigned int *CoreML::Specification::PrecisionRecallCurve::ByteSizeLong(CoreML::Specification::PrecisionRecallCurve *this)
{
  if (this == (CoreML::Specification::PrecisionRecallCurve *)&CoreML::Specification::_PrecisionRecallCurve_default_instance_)
  {
    uint64_t v1 = 0;
  }
  else
  {
    uint64_t v1 = (unsigned int *)*((void *)this + 2);
    if (v1)
    {
      uint64_t v2 = v1[4];
      uint64_t v3 = 4 * v2;
      if (v2)
      {
        if ((v3 & 0x80000000) != 0) {
          uint64_t v4 = 11;
        }
        else {
          uint64_t v4 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
        }
      }
      else
      {
        uint64_t v4 = 0;
      }
      uint64_t v5 = v4 + v3;
      v1[8] = v3;
      v1[9] = v5;
      uint64_t v1 = (unsigned int *)(v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1);
    }
    uint64_t v6 = (unsigned int *)*((void *)this + 3);
    if (v6)
    {
      uint64_t v7 = v6[4];
      uint64_t v8 = 4 * v7;
      if (v7)
      {
        if ((v8 & 0x80000000) != 0) {
          uint64_t v9 = 11;
        }
        else {
          uint64_t v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
        }
      }
      else
      {
        uint64_t v9 = 0;
      }
      uint64_t v10 = v9 + v8;
      v6[8] = v8;
      v6[9] = v10;
      uint64_t v1 = (unsigned int *)((char *)v1 + v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1);
    }
    uint64_t v11 = (unsigned int *)*((void *)this + 4);
    if (v11)
    {
      uint64_t v12 = v11[4];
      uint64_t v13 = 4 * v12;
      if (v12)
      {
        if ((v13 & 0x80000000) != 0) {
          uint64_t v14 = 11;
        }
        else {
          uint64_t v14 = ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
        }
      }
      else
      {
        uint64_t v14 = 0;
      }
      uint64_t v15 = v14 + v13;
      v11[8] = v13;
      v11[9] = v15;
      uint64_t v1 = (unsigned int *)((char *)v1 + v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1);
    }
    int v16 = (unsigned int *)*((void *)this + 5);
    if (v16)
    {
      uint64_t v17 = v16[4];
      uint64_t v18 = 4 * v17;
      if (v17)
      {
        if ((v18 & 0x80000000) != 0) {
          uint64_t v19 = 11;
        }
        else {
          uint64_t v19 = ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
        }
      }
      else
      {
        uint64_t v19 = 0;
      }
      uint64_t v20 = v19 + v18;
      v16[8] = v18;
      v16[9] = v20;
      uint64_t v1 = (unsigned int *)((char *)v1 + v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 1);
    }
  }
  *((_DWORD *)this + 12) = v1;
  return v1;
}

BOOL CoreML::Specification::PrecisionRecallCurve::MergePartialFromCodedStream(CoreML::Specification::PrecisionRecallCurve *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = *(char **)a2;
      if (*(void *)a2 < *((void *)a2 + 1)) {
        break;
      }
      LODWORD(v6) = 0;
LABEL_6:
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v6);
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) == 0) {
        goto LABEL_23;
      }
LABEL_7:
      switch(v7 >> 3)
      {
        case 1u:
          if (v7 != 10) {
            goto LABEL_23;
          }
          uint64_t v9 = (CoreML::Specification::FloatVector *)*((void *)this + 2);
          if (!v9) {
            operator new();
          }
          return result;
        case 2u:
          if (v7 != 18) {
            goto LABEL_23;
          }
          uint64_t v9 = (CoreML::Specification::FloatVector *)*((void *)this + 3);
          if (!v9) {
            operator new();
          }
          return result;
        case 3u:
          if (v7 != 26) {
            goto LABEL_23;
          }
          uint64_t v9 = (CoreML::Specification::FloatVector *)*((void *)this + 4);
          if (!v9) {
            operator new();
          }
          return result;
        case 4u:
          if (v7 != 34) {
            goto LABEL_23;
          }
          uint64_t v9 = (CoreML::Specification::FloatVector *)*((void *)this + 5);
          if (!v9) {
            operator new();
          }
          return result;
        default:
          goto LABEL_23;
      }
      uint64_t v10 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v10 < 0)
      {
        int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (VarintSizeAsIntFallback < 0) {
          return 0;
        }
      }
      else
      {
        int VarintSizeAsIntFallback = *v10;
        *(void *)a2 = v10 + 1;
      }
      int v13 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      int v15 = *((_DWORD *)a2 + 13);
      BOOL v16 = __OFSUB__(v15--, 1);
      *((_DWORD *)a2 + 1google::protobuf::Map<std::string,long long>::clear((void *)this + 3) = v15;
      if (v15 < 0 == v16)
      {
        int v17 = v13;
        BOOL result = CoreML::Specification::FloatVector::MergePartialFromCodedStream(v9, (char **)a2, v14);
        if (!result) {
          return result;
        }
        if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v17)) {
          continue;
        }
      }
      return 0;
    }
    uint64_t v6 = *v5;
    if (*v5 < 1) {
      goto LABEL_6;
    }
    *(void *)a2 = v5 + 1;
    unint64_t v7 = v6 | 0x100000000;
    if ((v7 & 0x100000000) != 0) {
      goto LABEL_7;
    }
LABEL_23:
    if (!v7 || (v7 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_19EB4F2D8(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

CoreML::Specification::FloatVector *CoreML::Specification::FloatVector::FloatVector(CoreML::Specification::FloatVector *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1EF0CEB58;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<std::string,long long>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::FloatVector *)&CoreML::Specification::_FloatVector_default_instance_) {
    CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 9) = 0;
  return this;
}

void sub_19EB4F384(_Unwind_Exception *a1)
{
  uint64_t v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::FloatVector::MergePartialFromCodedStream(CoreML::Specification::FloatVector *this, char **a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v6 = *a2;
          if (*a2 < a2[1]) {
            break;
          }
          LODWORD(v7) = 0;
LABEL_7:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v7);
          unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v8 & 0x100000000) != 0) {
            goto LABEL_8;
          }
LABEL_14:
          if (v8) {
            BOOL v12 = (v8 & 7) == 4;
          }
          else {
            BOOL v12 = 1;
          }
          if (v12) {
            return 1;
          }
          if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)return 0; {
        }
          }
        uint64_t v7 = *v6;
        if (*v6 < 1) {
          goto LABEL_7;
        }
        *a2 = v6 + 1;
        unint64_t v8 = v7 | 0x100000000;
        if ((v8 & 0x100000000) == 0) {
          goto LABEL_14;
        }
LABEL_8:
        if ((v8 & 0xFFFFFFF8) != 8) {
          goto LABEL_14;
        }
        if (v8 != 13) {
          break;
        }
        if (!google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<float,(google::protobuf::internal::WireFormatLite::FieldType)2>(10, (unsigned int **)a2, (uint64_t)v5))return 0; {
      }
        }
      if (v8 != 10) {
        goto LABEL_14;
      }
      uint64_t v10 = *a2;
      if (*a2 >= a2[1] || *v10 < 0)
      {
        unsigned int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((google::protobuf::io::CodedInputStream *)a2);
        if ((VarintSizeAsIntFallback & 0x80000000) != 0) {
          return 0;
        }
      }
      else
      {
        unsigned int VarintSizeAsIntFallback = *v10;
        *a2 = v10 + 1;
      }
      if ((VarintSizeAsIntFallback & 3) != 0) {
        return 0;
      }
      int v13 = *((_DWORD *)a2 + 12);
      int v14 = v13 == 0x7FFFFFFF
          ? -1
          : v13 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
      int v15 = *((_DWORD *)a2 + 10);
      int v16 = v15 == 0x7FFFFFFF
          ? -1
          : v15 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
      signed int v17 = *v5;
      unsigned int v18 = VarintSizeAsIntFallback >> 2;
      int v19 = v16 >= v14 ? v14 : v16;
      int v20 = v14 == -1 ? v16 : v19;
      if (v20 >= (uint64_t)VarintSizeAsIntFallback) {
        break;
      }
      if (VarintSizeAsIntFallback >= 4)
      {
        if (v18 <= 1) {
          int v21 = 1;
        }
        else {
          int v21 = VarintSizeAsIntFallback >> 2;
        }
        do
        {
          unsigned int v30 = 0;
          uint64_t v22 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v30);
            if (!result) {
              return result;
            }
            unsigned int v23 = v30;
            signed int v17 = *v5;
          }
          else
          {
            unsigned int v23 = *v22;
            *a2 = (char *)(v22 + 1);
          }
          if (v17 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<float>::Reserve(v5, v17 + 1);
            signed int v17 = *v5;
          }
          uint64_t v24 = *((void *)this + 3) + 4 * v17;
          *((_DWORD *)this + 4) = v17 + 1;
          *(_DWORD *)(v24 + 8) = v23;
          ++v17;
          --v21;
        }
        while (v21);
      }
    }
    signed int v26 = v17 + v18;
    if (VarintSizeAsIntFallback > 3)
    {
      google::protobuf::RepeatedField<float>::Reserve(v5, v17 + v18);
      uint64_t v27 = *((void *)this + 3);
      uint64_t v28 = 4 * v26 - 4 * *((int *)this + 4);
      if (v28 >= 1) {
        bzero((void *)(v27 + 8 + 4 * *((int *)this + 4)), 4 * (((unint64_t)v28 >> 2) - ((unint64_t)v28 > 3)) + 4);
      }
    }
    else
    {
      uint64_t v27 = *((void *)this + 3);
    }
    *uint64_t v5 = v26;
    uint64_t v29 = v27 + 8;
    if (!v27) {
      uint64_t v29 = 0;
    }
  }
  while (google::protobuf::io::CodedInputStream::ReadRaw((google::protobuf::io::CodedInputStream *)a2, (char *)(v29 + 4 * v17), VarintSizeAsIntFallback));
  if ((int)*v5 >= 1)
  {
    BOOL result = 0;
    *uint64_t v5 = v17;
    return result;
  }
  return 0;
}

std::string *CoreML::Specification::PrecisionRecallCurve::MergeFrom(std::string *this, const CoreML::Specification::PrecisionRecallCurve *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  if (a2 != (const CoreML::Specification::PrecisionRecallCurve *)&CoreML::Specification::_PrecisionRecallCurve_default_instance_)
  {
    if (*((void *)a2 + 2))
    {
      uint64_t v5 = (unint64_t *)v3->__r_.__value_.__r.__words[2];
      if (!v5) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::MILSpec::TensorValue_RepeatedFloats::MergeFrom(v5, *((const CoreML::Specification::MILSpec::TensorValue_RepeatedFloats **)a2 + 2));
    }
    if (*((void *)a2 + 3))
    {
      data = (unint64_t *)v3[1].__r_.__value_.__l.__data_;
      if (!data) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::MILSpec::TensorValue_RepeatedFloats::MergeFrom(data, *((const CoreML::Specification::MILSpec::TensorValue_RepeatedFloats **)a2 + 3));
    }
    if (*((void *)a2 + 4))
    {
      std::string::size_type size = (unint64_t *)v3[1].__r_.__value_.__l.__size_;
      if (!size) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::MILSpec::TensorValue_RepeatedFloats::MergeFrom(size, *((const CoreML::Specification::MILSpec::TensorValue_RepeatedFloats **)a2 + 4));
    }
    if (*((void *)a2 + 5))
    {
      if (!v3[1].__r_.__value_.__r.__words[2]) {
        operator new();
      }
      unint64_t v8 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedFloats *)*((void *)a2 + 5);
      uint64_t v9 = (unint64_t *)v3[1].__r_.__value_.__r.__words[2];
      return (std::string *)CoreML::Specification::MILSpec::TensorValue_RepeatedFloats::MergeFrom(v9, v8);
    }
  }
  return this;
}

void sub_19EB4F840(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::PrecisionRecallCurve::IsInitialized(CoreML::Specification::PrecisionRecallCurve *this)
{
  return 1;
}

uint64_t CoreML::Specification::PrecisionRecallCurve::Clear(CoreML::Specification::PrecisionRecallCurve *this)
{
  uint64_t v2 = *((void *)this + 2);
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  *((void *)this + 2) = 0;
  uint64_t v3 = *((void *)this + 3);
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  *((void *)this + google::protobuf::Map<std::string,long long>::clear((void *)this + 3) = 0;
  uint64_t v4 = *((void *)this + 4);
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
  }
  *((void *)this + 4) = 0;
  uint64_t result = *((void *)this + 5);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 5) = 0;
  return result;
}

void CoreML::Specification::PrecisionRecallCurve::New(CoreML::Specification::PrecisionRecallCurve *this, google::protobuf::Arena *a2)
{
}

void sub_19EB4F9AC(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C40668C0A6DLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::PrecisionRecallCurve *CoreML::Specification::PrecisionRecallCurve::PrecisionRecallCurve(CoreML::Specification::PrecisionRecallCurve *this)
{
  *(void *)this = &unk_1EF0D4338;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::PrecisionRecallCurve *)&CoreML::Specification::_PrecisionRecallCurve_default_instance_) {
    CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 12) = 0;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  return this;
}

void sub_19EB4FA38(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::PrecisionRecallCurve>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::PrecisionRecallCurve>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::PrecisionRecallCurve>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::PrecisionRecallCurve::New(CoreML::Specification::PrecisionRecallCurve *this)
{
}

void *CoreML::Specification::PrecisionRecallCurve::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.PrecisionRecallCurve");
}

void CoreML::Specification::PrecisionRecallCurve::~PrecisionRecallCurve(CoreML::Specification::PrecisionRecallCurve *this)
{
  CoreML::Specification::PrecisionRecallCurve::~PrecisionRecallCurve(this);

  JUMPOUT(0x19F3C1920);
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(void *)this = &unk_1EF0D4338;
  if (this != (CoreML::Specification::PrecisionRecallCurve *)&CoreML::Specification::_PrecisionRecallCurve_default_instance_)
  {
    uint64_t v2 = *((void *)this + 2);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 3);
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = *((void *)this + 4);
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    unint64_t v5 = *((void *)this + 5);
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::DoubleRange::GetCachedSize(CoreML::Specification::DoubleRange *this)
{
  return *((unsigned int *)this + 8);
}

uint64_t CoreML::Specification::DoubleRange::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = this;
  double v5 = *(double *)(this + 16);
  if (v5 != 0.0) {
    this = google::protobuf::internal::WireFormatLite::WriteDouble(1, a2, v5, a3);
  }
  double v6 = *(double *)(v4 + 24);
  if (v6 != 0.0)
  {
    return google::protobuf::internal::WireFormatLite::WriteDouble(2, a2, v6, a3);
  }
  return this;
}

uint64_t CoreML::Specification::DoubleRange::ByteSizeLong(CoreML::Specification::DoubleRange *this)
{
  uint64_t v1 = 9;
  if (*((double *)this + 2) == 0.0) {
    uint64_t v1 = 0;
  }
  if (*((double *)this + 3) != 0.0) {
    v1 += 9;
  }
  *((_DWORD *)this + 8) = v1;
  return v1;
}

BOOL CoreML::Specification::DoubleRange::MergePartialFromCodedStream(CoreML::Specification::DoubleRange *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        double v5 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(v6) = 0;
LABEL_6:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
          unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_20;
          }
          goto LABEL_7;
        }
        uint64_t v6 = *v5;
        if (*v5 < 1) {
          goto LABEL_6;
        }
        *a2 = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_20;
        }
LABEL_7:
        if (v7 >> 3 != 2) {
          break;
        }
        if (v7 != 17) {
          goto LABEL_20;
        }
        unint64_t v16 = 0;
        BOOL v12 = (unint64_t *)*a2;
        if ((int)(*((_DWORD *)a2 + 2) - *a2) < 8)
        {
          BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v16);
          if (!result) {
            return result;
          }
          unint64_t v13 = v16;
        }
        else
        {
          unint64_t v13 = *v12;
          *a2 = (char *)(v12 + 1);
        }
        *((void *)this + google::protobuf::Map<std::string,long long>::clear((void *)this + 3) = v13;
      }
      if (v7 >> 3 != 1 || v7 != 9) {
        break;
      }
      unint64_t v16 = 0;
      uint64_t v10 = (unint64_t *)*a2;
      if ((int)(*((_DWORD *)a2 + 2) - *a2) < 8)
      {
        BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v16);
        if (!result) {
          return result;
        }
        unint64_t v11 = v16;
      }
      else
      {
        unint64_t v11 = *v10;
        *a2 = (char *)(v10 + 1);
      }
      *((void *)this + 2) = v11;
    }
LABEL_20:
    if (v7) {
      BOOL v14 = (v7 & 7) == 4;
    }
    else {
      BOOL v14 = 1;
    }
    BOOL result = v14;
    if (v14) {
      return result;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

uint64_t CoreML::Specification::DoubleRange::IsInitialized(CoreML::Specification::DoubleRange *this)
{
  return 1;
}

uint64_t CoreML::Specification::DoubleRange::Clear(uint64_t this)
{
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  return this;
}

void CoreML::Specification::DoubleRange::New(CoreML::Specification::DoubleRange *this, google::protobuf::Arena *a2)
{
}

void sub_19EB4FE84(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x1081C40B7564605);
  _Unwind_Resume(a1);
}

CoreML::Specification::DoubleRange *CoreML::Specification::DoubleRange::DoubleRange(CoreML::Specification::DoubleRange *this)
{
  *(void *)this = &unk_1EF0CEA28;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::DoubleRange *)&CoreML::Specification::_DoubleRange_default_instance_) {
    CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<std::string,long long>::clear((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  return this;
}

void sub_19EB4FF0C(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::DoubleRange>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    BOOL result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *BOOL result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::DoubleRange>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::DoubleRange>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::DoubleRange::New(CoreML::Specification::DoubleRange *this)
{
}

void *CoreML::Specification::DoubleRange::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.DoubleRange");
}

void CoreML::Specification::DoubleRange::~DoubleRange(CoreML::Specification::DoubleRange *this)
{
  *(void *)this = &unk_1EF0CEA28;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);

  JUMPOUT(0x19F3C1920);
}

{
  *(void *)this = &unk_1EF0CEA28;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::Int64Set::GetCachedSize(CoreML::Specification::Int64Set *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t CoreML::Specification::Int64Set::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2)
{
  if (*(int *)(this + 16) >= 1)
  {
    uint64_t v3 = this;
    if (*((int *)a2 + 4) < 5)
    {
      __src[0] = 10;
      this = google::protobuf::io::CodedOutputStream::WriteRaw(a2, __src, 1);
      int v4 = *((_DWORD *)a2 + 4);
    }
    else
    {
      *(unsigned char *)(*((void *)a2 + 1))++ = 10;
      int v4 = *((_DWORD *)a2 + 4) - 1;
      *((_DWORD *)a2 + 4) = v4;
    }
    unsigned int v5 = *(_DWORD *)(v3 + 32);
    if (v4 < 5)
    {
      this = google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v5);
    }
    else
    {
      uint64_t v6 = *((void *)a2 + 1);
      if (v5 < 0x80)
      {
        unsigned int v8 = *(_DWORD *)(v3 + 32);
        unint64_t v7 = (unsigned char *)*((void *)a2 + 1);
      }
      else
      {
        unint64_t v7 = (unsigned char *)*((void *)a2 + 1);
        do
        {
          *v7++ = v5 | 0x80;
          unsigned int v8 = v5 >> 7;
          unsigned int v9 = v5 >> 14;
          v5 >>= 7;
        }
        while (v9);
      }
      *unint64_t v7 = v8;
      int v10 = v7 - v6 + 1;
      *((void *)a2 + 1) += v10;
      *((_DWORD *)a2 + 4) -= v10;
    }
    uint64_t v11 = *(unsigned int *)(v3 + 16);
    if ((int)v11 >= 1)
    {
      for (uint64_t i = 0; i != v11; ++i)
      {
        unint64_t v13 = *(void *)(*(void *)(v3 + 24) + 8 * i + 8);
        if (*((int *)a2 + 4) < 10)
        {
          this = google::protobuf::io::CodedOutputStream::WriteVarint64SlowPath(a2, v13);
        }
        else
        {
          uint64_t v14 = *((void *)a2 + 1);
          if (v13 < 0x80)
          {
            unint64_t v16 = *(void *)(*(void *)(v3 + 24) + 8 * i + 8);
            int v15 = (unsigned char *)*((void *)a2 + 1);
          }
          else
          {
            int v15 = (unsigned char *)*((void *)a2 + 1);
            do
            {
              *v15++ = v13 | 0x80;
              unint64_t v16 = v13 >> 7;
              unint64_t v17 = v13 >> 14;
              v13 >>= 7;
            }
            while (v17);
          }
          *int v15 = v16;
          int v18 = v15 - v14 + 1;
          *((void *)a2 + 1) += v18;
          *((_DWORD *)a2 + 4) -= v18;
        }
      }
    }
  }
  return this;
}

uint64_t CoreML::Specification::Int64Set::ByteSizeLong(CoreML::Specification::Int64Set *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  uint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  uint64_t v6 = v5 + v2;
  *((_DWORD *)this + 8) = v2;
  *((_DWORD *)this + 9) = v6;
  return v6;
}

uint64_t CoreML::Specification::Int64Set::MergePartialFromCodedStream(CoreML::Specification::Int64Set *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      uint64_t v6 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      if ((v8 & 0xFFFFFFF8) != 8) {
        break;
      }
      if (v8 == 8)
      {
        if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(google::protobuf::internal::WireFormatLite::FieldType)3>(10, a2, (uint64_t)v5) & 1) == 0)return 0; {
      }
        }
      else
      {
        if (v8 != 10) {
          break;
        }
        int v10 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v10 < 0)
        {
          int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0) {
            return 0;
          }
        }
        else
        {
          int VarintSizeAsIntFallback = *v10;
          *(void *)a2 = v10 + 1;
        }
        int v13 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        while (1)
        {
          int v14 = *((_DWORD *)a2 + 10);
          uint64_t v15 = *((int *)a2 + 11);
          unint64_t v16 = *((void *)a2 + 1);
          int v17 = *((_DWORD *)a2 + 6);
          if (v14 == 0x7FFFFFFF) {
            break;
          }
          int v18 = *(char **)a2;
          if ((int)(v14 - v17 + v15 + v16 - *(void *)a2) < 1) {
            break;
          }
          if ((unint64_t)v18 >= v16 || *v18 < 0)
          {
            unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v21 & 1) == 0) {
              return 0;
            }
            unint64_t v19 = Varint64Fallback;
          }
          else
          {
            unint64_t v19 = *v18;
            *(void *)a2 = v18 + 1;
          }
          signed int v22 = *((_DWORD *)this + 4);
          if (v22 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<double>::Reserve(v5, v22 + 1);
            signed int v22 = *v5;
          }
          uint64_t v23 = *((void *)this + 3);
          *((_DWORD *)this + 4) = v22 + 1;
          *(void *)(v23 + 8 * v22 + 8) = v19;
        }
        *((_DWORD *)a2 + 1CoreML::Specification::DoubleRange::New(this, 0) = v13;
        uint64_t v24 = v16 + v15;
        *((void *)a2 + 1) = v16 + v15;
        int v25 = *((_DWORD *)a2 + 12);
        if (v25 >= v13) {
          int v25 = v13;
        }
        BOOL v26 = __OFSUB__(v17, v25);
        int v27 = v17 - v25;
        if ((v27 < 0) ^ v26 | (v27 == 0)) {
          int v27 = 0;
        }
        else {
          *((void *)a2 + 1) = v24 - v27;
        }
        *((_DWORD *)a2 + 11) = v27;
        *((unsigned char *)a2 + 36) = 0;
      }
    }
    if (v8) {
      BOOL v12 = (v8 & 7) == 4;
    }
    else {
      BOOL v12 = 1;
    }
    if (v12) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

uint64_t CoreML::Specification::Int64Set::IsInitialized(CoreML::Specification::Int64Set *this)
{
  return 1;
}

uint64_t CoreML::Specification::Int64Set::Clear(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  return this;
}

void CoreML::Specification::Int64Set::New(CoreML::Specification::Int64Set *this, google::protobuf::Arena *a2)
{
}

void sub_19EB504FC(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

CoreML::Specification::Int64Set *CoreML::Specification::Int64Set::Int64Set(CoreML::Specification::Int64Set *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1EF0DAB20;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<std::string,long long>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::Int64Set *)&CoreML::Specification::_Int64Set_default_instance_) {
    CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 9) = 0;
  return this;
}

void sub_19EB5058C(_Unwind_Exception *a1)
{
  uint64_t v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::Int64Set>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    BOOL result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *BOOL result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::Int64Set>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::Int64Set>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::Int64Set::New(CoreML::Specification::Int64Set *this)
{
}

void *CoreML::Specification::Int64Set::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.Int64Set");
}

void CoreML::Specification::Int64Set::~Int64Set(CoreML::Specification::Int64Set *this)
{
  CoreML::Specification::Int64Set::~Int64Set(this);

  JUMPOUT(0x19F3C1920);
}

{
  void *v2;

  *(void *)this = &unk_1EF0DAB20;
  uint64_t v2 = (void *)*((void *)this + 3);
  if (v2 && !*v2) {
    operator delete(v2);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::Int64Range::GetCachedSize(CoreML::Specification::Int64Range *this)
{
  return *((unsigned int *)this + 8);
}

uint64_t CoreML::Specification::Int64Range::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  unint64_t v6 = *(void *)(this + 16);
  if (v6) {
    this = google::protobuf::internal::WireFormatLite::WriteInt64(1, v6, a2, a4);
  }
  unint64_t v7 = *(void *)(v5 + 24);
  if (v7)
  {
    return google::protobuf::internal::WireFormatLite::WriteInt64(2, v7, a2, a4);
  }
  return this;
}

unint64_t CoreML::Specification::Int64Range::ByteSizeLong(CoreML::Specification::Int64Range *this)
{
  uint64_t v1 = *((void *)this + 2);
  uint64_t v2 = *((void *)this + 3);
  unint64_t v3 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1) {
    unint64_t v4 = v3 + 1;
  }
  else {
    unint64_t v4 = 0;
  }
  unint64_t v5 = v4 + ((9 * (__clz(v2 | 1) ^ 0x3F) + 73) >> 6);
  if (v2) {
    unint64_t v4 = v5 + 1;
  }
  *((_DWORD *)this + 8) = v4;
  return v4;
}

uint64_t CoreML::Specification::Int64Range::MergePartialFromCodedStream(CoreML::Specification::Int64Range *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        unint64_t v5 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(v6) = 0;
LABEL_6:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
          unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_20;
          }
          goto LABEL_7;
        }
        uint64_t v6 = *v5;
        if (*v5 < 1) {
          goto LABEL_6;
        }
        *a2 = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_20;
        }
LABEL_7:
        if (v7 >> 3 != 2) {
          break;
        }
        if (v7 != 16) {
          goto LABEL_20;
        }
        BOOL v12 = *a2;
        if (*a2 >= a2[1] || *v12 < 0)
        {
          unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
          if ((v16 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t Varint64Fallback = *v12;
          *a2 = v12 + 1;
        }
        *((void *)this + google::protobuf::Map<std::string,long long>::clear((void *)this + 3) = Varint64Fallback;
      }
      if (v7 >> 3 != 1 || v7 != 8) {
        break;
      }
      int v10 = *a2;
      if (*a2 >= a2[1] || *v10 < 0)
      {
        unint64_t v11 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v15 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t v11 = *v10;
        *a2 = v10 + 1;
      }
      *((void *)this + 2) = v11;
    }
LABEL_20:
    if (v7) {
      BOOL v14 = (v7 & 7) == 4;
    }
    else {
      BOOL v14 = 1;
    }
    if (v14) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

std::string *CoreML::Specification::Int64Range::MergeFrom(std::string *this, const CoreML::Specification::Int64Range *a2)
{
  unint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  std::string::size_type v5 = *((void *)a2 + 2);
  if (v5) {
    v3->__r_.__value_.__r.__words[2] = v5;
  }
  std::string::size_type v6 = *((void *)a2 + 3);
  if (v6) {
    v3[1].__r_.__value_.__r.__words[0] = v6;
  }
  return this;
}

uint64_t CoreML::Specification::Int64Range::IsInitialized(CoreML::Specification::Int64Range *this)
{
  return 1;
}

uint64_t CoreML::Specification::Int64Range::Clear(uint64_t this)
{
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  return this;
}

void CoreML::Specification::Int64Range::New(CoreML::Specification::Int64Range *this, google::protobuf::Arena *a2)
{
}

void sub_19EB5099C(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x1081C40B7564605);
  _Unwind_Resume(a1);
}

CoreML::Specification::Int64Range *CoreML::Specification::Int64Range::Int64Range(CoreML::Specification::Int64Range *this)
{
  *(void *)this = &unk_1EF0CE600;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::Int64Range *)&CoreML::Specification::_Int64Range_default_instance_) {
    CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<std::string,long long>::clear((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  return this;
}

void sub_19EB50A24(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::Int64Range>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    unint64_t v3 = result;
    BOOL result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *BOOL result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::Int64Range>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::Int64Range>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::Int64Range::New(CoreML::Specification::Int64Range *this)
{
}

void *CoreML::Specification::Int64Range::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.Int64Range");
}

void CoreML::Specification::Int64Range::~Int64Range(CoreML::Specification::Int64Range *this)
{
  *(void *)this = &unk_1EF0CE600;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);

  JUMPOUT(0x19F3C1920);
}

{
  *(void *)this = &unk_1EF0CE600;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::DoubleVector::GetCachedSize(CoreML::Specification::DoubleVector *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t CoreML::Specification::DoubleVector::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2)
{
  if (*(int *)(this + 16) >= 1)
  {
    uint64_t v3 = this;
    if (*((int *)a2 + 4) < 5)
    {
      __src[0] = 10;
      google::protobuf::io::CodedOutputStream::WriteRaw(a2, __src, 1);
      int v4 = *((_DWORD *)a2 + 4);
    }
    else
    {
      *(unsigned char *)(*((void *)a2 + 1))++ = 10;
      int v4 = *((_DWORD *)a2 + 4) - 1;
      *((_DWORD *)a2 + 4) = v4;
    }
    unsigned int v5 = *(_DWORD *)(v3 + 32);
    if (v4 < 5)
    {
      google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v5);
    }
    else
    {
      uint64_t v6 = *((void *)a2 + 1);
      if (v5 < 0x80)
      {
        unsigned int v8 = *(_DWORD *)(v3 + 32);
        unint64_t v7 = (unsigned char *)*((void *)a2 + 1);
      }
      else
      {
        unint64_t v7 = (unsigned char *)*((void *)a2 + 1);
        do
        {
          *v7++ = v5 | 0x80;
          unsigned int v8 = v5 >> 7;
          unsigned int v9 = v5 >> 14;
          v5 >>= 7;
        }
        while (v9);
      }
      *unint64_t v7 = v8;
      int v10 = v7 - v6 + 1;
      *((void *)a2 + 1) += v10;
      *((_DWORD *)a2 + 4) -= v10;
    }
    uint64_t v11 = *(void *)(v3 + 24);
    if (v11) {
      BOOL v12 = (char *)(v11 + 8);
    }
    else {
      BOOL v12 = 0;
    }
    int v13 = 8 * *(_DWORD *)(v3 + 16);
    return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v12, v13);
  }
  return this;
}

uint64_t CoreML::Specification::DoubleVector::ByteSizeLong(CoreML::Specification::DoubleVector *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  uint64_t v2 = 8 * v1;
  if (v1)
  {
    if ((v2 & 0x80000000) != 0) {
      uint64_t v3 = 11;
    }
    else {
      uint64_t v3 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v4 = v3 + v2;
  *((_DWORD *)this + 8) = v2;
  *((_DWORD *)this + 9) = v4;
  return v4;
}

BOOL CoreML::Specification::DoubleVector::MergePartialFromCodedStream(CoreML::Specification::DoubleVector *this, char **a2, unsigned int a3)
{
  unsigned int v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v6 = *a2;
          if (*a2 < a2[1]) {
            break;
          }
          LODWORD(v7) = 0;
LABEL_7:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v7);
          unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v8 & 0x100000000) != 0) {
            goto LABEL_8;
          }
LABEL_14:
          if (v8) {
            BOOL v12 = (v8 & 7) == 4;
          }
          else {
            BOOL v12 = 1;
          }
          if (v12) {
            return 1;
          }
          if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)return 0; {
        }
          }
        uint64_t v7 = *v6;
        if (*v6 < 1) {
          goto LABEL_7;
        }
        *a2 = v6 + 1;
        unint64_t v8 = v7 | 0x100000000;
        if ((v8 & 0x100000000) == 0) {
          goto LABEL_14;
        }
LABEL_8:
        if ((v8 & 0xFFFFFFF8) != 8) {
          goto LABEL_14;
        }
        if (v8 != 9) {
          break;
        }
        if (!google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<double,(google::protobuf::internal::WireFormatLite::FieldType)1>(10, (unint64_t **)a2, (uint64_t)v5))return 0; {
      }
        }
      if (v8 != 10) {
        goto LABEL_14;
      }
      int v10 = *a2;
      if (*a2 >= a2[1] || *v10 < 0)
      {
        unsigned int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((google::protobuf::io::CodedInputStream *)a2);
        if ((VarintSizeAsIntFallback & 0x80000000) != 0) {
          return 0;
        }
      }
      else
      {
        unsigned int VarintSizeAsIntFallback = *v10;
        *a2 = v10 + 1;
      }
      if ((VarintSizeAsIntFallback & 7) != 0) {
        return 0;
      }
      int v13 = *((_DWORD *)a2 + 12);
      int v14 = v13 == 0x7FFFFFFF
          ? -1
          : v13 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
      int v15 = *((_DWORD *)a2 + 10);
      int v16 = v15 == 0x7FFFFFFF
          ? -1
          : v15 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
      signed int v17 = *v5;
      unsigned int v18 = VarintSizeAsIntFallback >> 3;
      int v19 = v16 >= v14 ? v14 : v16;
      int v20 = v14 == -1 ? v16 : v19;
      if (v20 >= (uint64_t)VarintSizeAsIntFallback) {
        break;
      }
      if (VarintSizeAsIntFallback >= 8)
      {
        if (v18 <= 1) {
          int v21 = 1;
        }
        else {
          int v21 = VarintSizeAsIntFallback >> 3;
        }
        do
        {
          unint64_t v30 = 0;
          signed int v22 = (unint64_t *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 8)
          {
            BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v30);
            if (!result) {
              return result;
            }
            unint64_t v23 = v30;
            signed int v17 = *v5;
          }
          else
          {
            unint64_t v23 = *v22;
            *a2 = (char *)(v22 + 1);
          }
          if (v17 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<double>::Reserve(v5, v17 + 1);
            signed int v17 = *v5;
          }
          uint64_t v24 = *((void *)this + 3) + 8 * v17;
          *((_DWORD *)this + 4) = v17 + 1;
          *(void *)(v24 + 8) = v23;
          ++v17;
          --v21;
        }
        while (v21);
      }
    }
    signed int v26 = v17 + v18;
    if (VarintSizeAsIntFallback > 7)
    {
      google::protobuf::RepeatedField<double>::Reserve(v5, v17 + v18);
      uint64_t v27 = *((void *)this + 3);
      uint64_t v28 = 8 * v26 - 8 * *((int *)this + 4);
      if (v28 >= 1) {
        bzero((void *)(v27 + 8 + 8 * *((int *)this + 4)), 8 * (((unint64_t)v28 >> 3) - ((unint64_t)v28 > 7)) + 8);
      }
    }
    else
    {
      uint64_t v27 = *((void *)this + 3);
    }
    *unsigned int v5 = v26;
    uint64_t v29 = v27 + 8;
    if (!v27) {
      uint64_t v29 = 0;
    }
  }
  while (google::protobuf::io::CodedInputStream::ReadRaw((google::protobuf::io::CodedInputStream *)a2, (char *)(v29 + 8 * v17), VarintSizeAsIntFallback));
  if ((int)*v5 >= 1)
  {
    BOOL result = 0;
    *unsigned int v5 = v17;
    return result;
  }
  return 0;
}

uint64_t CoreML::Specification::DoubleVector::IsInitialized(CoreML::Specification::DoubleVector *this)
{
  return 1;
}

uint64_t CoreML::Specification::DoubleVector::Clear(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  return this;
}

void CoreML::Specification::DoubleVector::New(CoreML::Specification::DoubleVector *this, google::protobuf::Arena *a2)
{
}

void sub_19EB5106C(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

CoreML::Specification::DoubleVector *CoreML::Specification::DoubleVector::DoubleVector(CoreML::Specification::DoubleVector *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1EF0CF570;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<std::string,long long>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::DoubleVector *)&CoreML::Specification::_DoubleVector_default_instance_) {
    CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 9) = 0;
  return this;
}

void sub_19EB510FC(_Unwind_Exception *a1)
{
  uint64_t v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::DoubleVector>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    BOOL result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *BOOL result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::DoubleVector>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::DoubleVector>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::DoubleVector::New(CoreML::Specification::DoubleVector *this)
{
}

void *CoreML::Specification::DoubleVector::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.DoubleVector");
}

void CoreML::Specification::DoubleVector::~DoubleVector(CoreML::Specification::DoubleVector *this)
{
  CoreML::Specification::DoubleVector::~DoubleVector(this);

  JUMPOUT(0x19F3C1920);
}

{
  void *v2;

  *(void *)this = &unk_1EF0CF570;
  uint64_t v2 = (void *)*((void *)this + 3);
  if (v2 && !*v2) {
    operator delete(v2);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::FloatVector::GetCachedSize(CoreML::Specification::FloatVector *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t CoreML::Specification::FloatVector::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2)
{
  if (*(int *)(this + 16) >= 1)
  {
    uint64_t v3 = this;
    if (*((int *)a2 + 4) < 5)
    {
      __src[0] = 10;
      google::protobuf::io::CodedOutputStream::WriteRaw(a2, __src, 1);
      int v4 = *((_DWORD *)a2 + 4);
    }
    else
    {
      *(unsigned char *)(*((void *)a2 + 1))++ = 10;
      int v4 = *((_DWORD *)a2 + 4) - 1;
      *((_DWORD *)a2 + 4) = v4;
    }
    unsigned int v5 = *(_DWORD *)(v3 + 32);
    if (v4 < 5)
    {
      google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v5);
    }
    else
    {
      uint64_t v6 = *((void *)a2 + 1);
      if (v5 < 0x80)
      {
        unsigned int v8 = *(_DWORD *)(v3 + 32);
        uint64_t v7 = (unsigned char *)*((void *)a2 + 1);
      }
      else
      {
        uint64_t v7 = (unsigned char *)*((void *)a2 + 1);
        do
        {
          *v7++ = v5 | 0x80;
          unsigned int v8 = v5 >> 7;
          unsigned int v9 = v5 >> 14;
          v5 >>= 7;
        }
        while (v9);
      }
      *uint64_t v7 = v8;
      int v10 = v7 - v6 + 1;
      *((void *)a2 + 1) += v10;
      *((_DWORD *)a2 + 4) -= v10;
    }
    uint64_t v11 = *(void *)(v3 + 24);
    if (v11) {
      BOOL v12 = (char *)(v11 + 8);
    }
    else {
      BOOL v12 = 0;
    }
    int v13 = 4 * *(_DWORD *)(v3 + 16);
    return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v12, v13);
  }
  return this;
}

uint64_t CoreML::Specification::FloatVector::ByteSizeLong(CoreML::Specification::FloatVector *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  uint64_t v2 = 4 * v1;
  if (v1)
  {
    if ((v2 & 0x80000000) != 0) {
      uint64_t v3 = 11;
    }
    else {
      uint64_t v3 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v4 = v3 + v2;
  *((_DWORD *)this + 8) = v2;
  *((_DWORD *)this + 9) = v4;
  return v4;
}

uint64_t CoreML::Specification::FloatVector::IsInitialized(CoreML::Specification::FloatVector *this)
{
  return 1;
}

uint64_t CoreML::Specification::FloatVector::Clear(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  return this;
}

void CoreML::Specification::FloatVector::New(CoreML::Specification::FloatVector *this, google::protobuf::Arena *a2)
{
}

void sub_19EB5144C(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::FloatVector>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    BOOL result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *BOOL result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::FloatVector>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::FloatVector>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::FloatVector::New(CoreML::Specification::FloatVector *this)
{
}

void *CoreML::Specification::FloatVector::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.FloatVector");
}

void CoreML::Specification::FloatVector::~FloatVector(CoreML::Specification::FloatVector *this)
{
  CoreML::Specification::FloatVector::~FloatVector(this);

  JUMPOUT(0x19F3C1920);
}

{
  void *v2;

  *(void *)this = &unk_1EF0CEB58;
  uint64_t v2 = (void *)*((void *)this + 3);
  if (v2 && !*v2) {
    operator delete(v2);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::Int64Vector::GetCachedSize(CoreML::Specification::Int64Vector *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t CoreML::Specification::Int64Vector::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2)
{
  if (*(int *)(this + 16) >= 1)
  {
    uint64_t v3 = this;
    if (*((int *)a2 + 4) < 5)
    {
      __src[0] = 10;
      this = google::protobuf::io::CodedOutputStream::WriteRaw(a2, __src, 1);
      int v4 = *((_DWORD *)a2 + 4);
    }
    else
    {
      *(unsigned char *)(*((void *)a2 + 1))++ = 10;
      int v4 = *((_DWORD *)a2 + 4) - 1;
      *((_DWORD *)a2 + 4) = v4;
    }
    unsigned int v5 = *(_DWORD *)(v3 + 32);
    if (v4 < 5)
    {
      this = google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v5);
    }
    else
    {
      uint64_t v6 = *((void *)a2 + 1);
      if (v5 < 0x80)
      {
        unsigned int v8 = *(_DWORD *)(v3 + 32);
        uint64_t v7 = (unsigned char *)*((void *)a2 + 1);
      }
      else
      {
        uint64_t v7 = (unsigned char *)*((void *)a2 + 1);
        do
        {
          *v7++ = v5 | 0x80;
          unsigned int v8 = v5 >> 7;
          unsigned int v9 = v5 >> 14;
          v5 >>= 7;
        }
        while (v9);
      }
      *uint64_t v7 = v8;
      int v10 = v7 - v6 + 1;
      *((void *)a2 + 1) += v10;
      *((_DWORD *)a2 + 4) -= v10;
    }
    uint64_t v11 = *(unsigned int *)(v3 + 16);
    if ((int)v11 >= 1)
    {
      for (uint64_t i = 0; i != v11; ++i)
      {
        unint64_t v13 = *(void *)(*(void *)(v3 + 24) + 8 * i + 8);
        if (*((int *)a2 + 4) < 10)
        {
          this = google::protobuf::io::CodedOutputStream::WriteVarint64SlowPath(a2, v13);
        }
        else
        {
          uint64_t v14 = *((void *)a2 + 1);
          if (v13 < 0x80)
          {
            unint64_t v16 = *(void *)(*(void *)(v3 + 24) + 8 * i + 8);
            int v15 = (unsigned char *)*((void *)a2 + 1);
          }
          else
          {
            int v15 = (unsigned char *)*((void *)a2 + 1);
            do
            {
              *v15++ = v13 | 0x80;
              unint64_t v16 = v13 >> 7;
              unint64_t v17 = v13 >> 14;
              v13 >>= 7;
            }
            while (v17);
          }
          *int v15 = v16;
          int v18 = v15 - v14 + 1;
          *((void *)a2 + 1) += v18;
          *((_DWORD *)a2 + 4) -= v18;
        }
      }
    }
  }
  return this;
}

uint64_t CoreML::Specification::Int64Vector::ByteSizeLong(CoreML::Specification::Int64Vector *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  uint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  uint64_t v6 = v5 + v2;
  *((_DWORD *)this + 8) = v2;
  *((_DWORD *)this + 9) = v6;
  return v6;
}

uint64_t CoreML::Specification::Int64Vector::MergePartialFromCodedStream(CoreML::Specification::Int64Vector *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      uint64_t v6 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      if ((v8 & 0xFFFFFFF8) != 8) {
        break;
      }
      if (v8 == 8)
      {
        if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(google::protobuf::internal::WireFormatLite::FieldType)3>(10, a2, (uint64_t)v5) & 1) == 0)return 0; {
      }
        }
      else
      {
        if (v8 != 10) {
          break;
        }
        int v10 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v10 < 0)
        {
          int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0) {
            return 0;
          }
        }
        else
        {
          int VarintSizeAsIntFallback = *v10;
          *(void *)a2 = v10 + 1;
        }
        int v13 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        while (1)
        {
          int v14 = *((_DWORD *)a2 + 10);
          uint64_t v15 = *((int *)a2 + 11);
          unint64_t v16 = *((void *)a2 + 1);
          int v17 = *((_DWORD *)a2 + 6);
          if (v14 == 0x7FFFFFFF) {
            break;
          }
          int v18 = *(char **)a2;
          if ((int)(v14 - v17 + v15 + v16 - *(void *)a2) < 1) {
            break;
          }
          if ((unint64_t)v18 >= v16 || *v18 < 0)
          {
            unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v21 & 1) == 0) {
              return 0;
            }
            unint64_t v19 = Varint64Fallback;
          }
          else
          {
            unint64_t v19 = *v18;
            *(void *)a2 = v18 + 1;
          }
          signed int v22 = *((_DWORD *)this + 4);
          if (v22 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<double>::Reserve(v5, v22 + 1);
            signed int v22 = *v5;
          }
          uint64_t v23 = *((void *)this + 3);
          *((_DWORD *)this + 4) = v22 + 1;
          *(void *)(v23 + 8 * v22 + 8) = v19;
        }
        *((_DWORD *)a2 + 1CoreML::Specification::FloatVector::New(this, 0) = v13;
        uint64_t v24 = v16 + v15;
        *((void *)a2 + 1) = v16 + v15;
        int v25 = *((_DWORD *)a2 + 12);
        if (v25 >= v13) {
          int v25 = v13;
        }
        BOOL v26 = __OFSUB__(v17, v25);
        int v27 = v17 - v25;
        if ((v27 < 0) ^ v26 | (v27 == 0)) {
          int v27 = 0;
        }
        else {
          *((void *)a2 + 1) = v24 - v27;
        }
        *((_DWORD *)a2 + 11) = v27;
        *((unsigned char *)a2 + 36) = 0;
      }
    }
    if (v8) {
      BOOL v12 = (v8 & 7) == 4;
    }
    else {
      BOOL v12 = 1;
    }
    if (v12) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

uint64_t CoreML::Specification::Int64Vector::IsInitialized(CoreML::Specification::Int64Vector *this)
{
  return 1;
}

uint64_t CoreML::Specification::Int64Vector::Clear(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  return this;
}

void CoreML::Specification::Int64Vector::New(CoreML::Specification::Int64Vector *this, google::protobuf::Arena *a2)
{
}

void sub_19EB51A3C(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

CoreML::Specification::Int64Vector *CoreML::Specification::Int64Vector::Int64Vector(CoreML::Specification::Int64Vector *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1EF0CEBF0;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<std::string,long long>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::Int64Vector *)&CoreML::Specification::_Int64Vector_default_instance_) {
    CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 9) = 0;
  return this;
}

void sub_19EB51ACC(_Unwind_Exception *a1)
{
  uint64_t v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::Int64Vector>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    BOOL result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *BOOL result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::Int64Vector>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::Int64Vector>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::Int64Vector::New(CoreML::Specification::Int64Vector *this)
{
}

void *CoreML::Specification::Int64Vector::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.Int64Vector");
}

void CoreML::Specification::Int64Vector::~Int64Vector(CoreML::Specification::Int64Vector *this)
{
  CoreML::Specification::Int64Vector::~Int64Vector(this);

  JUMPOUT(0x19F3C1920);
}

{
  void *v2;

  *(void *)this = &unk_1EF0CEBF0;
  uint64_t v2 = (void *)*((void *)this + 3);
  if (v2 && !*v2) {
    operator delete(v2);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::StringVector::GetCachedSize(CoreML::Specification::StringVector *this)
{
  return *((unsigned int *)this + 10);
}

uint64_t CoreML::Specification::StringVector::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v2 = *(unsigned int *)(this + 24);
  if ((int)v2 >= 1)
  {
    uint64_t v4 = this;
    uint64_t v5 = -v2;
    uint64_t v6 = 1;
    do
    {
      uint64_t v7 = *(unsigned int **)(*(void *)(v4 + 32) + 8 * v6);
      if (*((char *)v7 + 23) < 0)
      {
        uint64_t v7 = *(unsigned int **)v7;
        uint64_t v8 = *(void *)(*(void *)(*(void *)(v4 + 32) + 8 * v6) + 8);
      }
      else
      {
        LODWORD(v8) = *((unsigned __int8 *)v7 + 23);
      }
      google::protobuf::internal::WireFormatLite::VerifyUtf8String(v7, v8, 1, (uint64_t)"CoreML.Specification.StringVector.vector");
      this = google::protobuf::internal::WireFormatLite::WriteString(1u, *(void *)(*(void *)(v4 + 32) + 8 * v6++), a2);
    }
    while (v5 + v6 != 1);
  }
  return this;
}

uint64_t CoreML::Specification::StringVector::ByteSizeLong(CoreML::Specification::StringVector *this)
{
  uint64_t v1 = *((unsigned int *)this + 6);
  if ((int)v1 < 1)
  {
    uint64_t v3 = *((unsigned int *)this + 6);
  }
  else
  {
    uint64_t v2 = (uint64_t *)(*((void *)this + 4) + 8);
    uint64_t v3 = *((unsigned int *)this + 6);
    do
    {
      uint64_t v4 = *v2++;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
      --v1;
    }
    while (v1);
  }
  *((_DWORD *)this + 1CoreML::Specification::Int64Vector::New(this, 0) = v3;
  return v3;
}

uint64_t CoreML::Specification::StringVector::MergePartialFromCodedStream(CoreML::Specification::StringVector *this, char **a2, unsigned int a3)
{
  uint64_t v5 = (google::protobuf::Arena **)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      uint64_t v6 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      if (v8 != 10 || (v8 & 0xFFFFFFF8) != 8) {
        break;
      }
      BOOL v12 = (int *)*((void *)this + 4);
      if (!v12)
      {
        int v13 = *((_DWORD *)this + 6);
        int v14 = *((_DWORD *)this + 7);
        goto LABEL_23;
      }
      int v13 = *((_DWORD *)this + 6);
      int v14 = *v12;
      if (v13 >= *v12)
      {
        if (v14 != *((_DWORD *)this + 7))
        {
LABEL_26:
          *BOOL v12 = v14 + 1;
          unint64_t v16 = *v5;
          if (!*v5) {
            operator new();
          }
          Aligned->__r_.__value_.__l.__size_ = 0;
          Aligned->__r_.__value_.__r.__words[2] = 0;
          Aligned->__r_.__value_.__r.__words[0] = 0;
          int v17 = google::protobuf::Arena::AllocateAligned(v16, 0, 24);
          *int v17 = (google::protobuf::Arena *)Aligned;
          v17[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<std::string>;
          int v18 = (unint64_t *)((char *)v16 + 32);
          do
            unint64_t v19 = __ldxr(v18);
          while (__stxr((unint64_t)v17, v18));
          v17[2] = (google::protobuf::Arena *)v19;
          uint64_t v20 = *((void *)this + 4);
          uint64_t v21 = *((int *)this + 6);
          *((_DWORD *)this + 6) = v21 + 1;
          *(void *)(v20 + 8 * v21 + 8) = Aligned;
          goto LABEL_31;
        }
LABEL_23:
        if (v13 <= v14)
        {
          google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)v5, v14 - v13 + 1);
          BOOL v12 = (int *)*((void *)this + 4);
        }
        int v14 = *v12;
        goto LABEL_26;
      }
      *((_DWORD *)this + 6) = v13 + 1;
      Aligned = *(std::string **)&v12[2 * v13 + 2];
LABEL_31:
      uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((unsigned __int8 **)a2, Aligned);
      if (!result) {
        return result;
      }
      uint64_t v23 = *((void *)this + 4);
      uint64_t v24 = *(unsigned int **)(v23 + 8 * *((int *)this + 6));
      if (*((char *)v24 + 23) < 0)
      {
        uint64_t v24 = *(unsigned int **)v24;
        uint64_t v25 = *(void *)(*(void *)(v23 + 8 * *((int *)this + 6)) + 8);
      }
      else
      {
        LODWORD(v25) = *((unsigned __int8 *)v24 + 23);
      }
      if (!google::protobuf::internal::WireFormatLite::VerifyUtf8String(v24, v25, 0, (uint64_t)"CoreML.Specification.StringVector.vector"))return 0; {
    }
      }
    if (!v8 || (v8 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t CoreML::Specification::StringVector::IsInitialized(CoreML::Specification::StringVector *this)
{
  return 1;
}

uint64_t CoreML::Specification::StringVector::Clear(CoreML::Specification::StringVector *this)
{
  return google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 16);
}

void CoreML::Specification::StringVector::New(CoreML::Specification::StringVector *this, google::protobuf::Arena *a2)
{
}

void sub_19EB51FCC(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

CoreML::Specification::StringVector *CoreML::Specification::StringVector::StringVector(CoreML::Specification::StringVector *this)
{
  *(void *)this = &unk_1EF0CF900;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  if (this != (CoreML::Specification::StringVector *)&CoreML::Specification::_StringVector_default_instance_) {
    CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 1CoreML::Specification::Int64Vector::New(this, 0) = 0;
  return this;
}

void sub_19EB52060(_Unwind_Exception *a1)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((void *)(v1 + 16));
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v2);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::StringVector>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::StringVector>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::StringVector>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::StringVector::New(CoreML::Specification::StringVector *this)
{
}

void *CoreML::Specification::StringVector::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.StringVector");
}

void CoreML::Specification::StringVector::~StringVector(CoreML::Specification::StringVector *this)
{
  *(void *)this = &unk_1EF0CF900;
  uint64_t v1 = (uint64_t *)((char *)this + 8);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((void *)this + 2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);

  JUMPOUT(0x19F3C1920);
}

{
  uint64_t *v1;

  *(void *)this = &unk_1EF0CF900;
  uint64_t v1 = (uint64_t *)((char *)this + 8);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((void *)this + 2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
}

void *google::protobuf::Map<long long,double>::~Map(void *a1)
{
  google::protobuf::Map<long long,double>::clear(a1);
  if (!*a1)
  {
    uint64_t v2 = a1[2];
    if (v2)
    {
      uint64_t v3 = google::protobuf::Map<long long,double>::InnerMap::~InnerMap(v2);
      MEMORY[0x19F3C1920](v3, 0x10E0C40D5F42F35);
    }
  }
  return a1;
}

void google::protobuf::Map<long long,double>::clear(void *a1)
{
  uint64_t v1 = (void *)a1[2];
  unint64_t v2 = v1[3];
  unint64_t v3 = v1[1];
  if (v3 > v2)
  {
    uint64_t v5 = v1[4];
    while (1)
    {
      uint64_t v6 = *(void *)(v5 + 8 * v2);
      if (v6) {
        break;
      }
      if (v3 == ++v2) {
        return;
      }
    }
    if (v6 != *(void *)(v5 + 8 * (v2 ^ 1)) || (uint64_t v6 = *(void *)(*(void *)v6 + 32)) != 0)
    {
      do
      {
        v7[0] = v6;
        v7[1] = (uint64_t)v1;
        v7[2] = v2;
        google::protobuf::Map<long long,double>::erase((uint64_t)v8, a1, v7);
        uint64_t v6 = v8[0];
        uint64_t v1 = (void *)v8[1];
        unint64_t v2 = v8[2];
      }
      while (v8[0]);
    }
  }
}

uint64_t google::protobuf::Map<long long,double>::InnerMap::~InnerMap(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    unint64_t v2 = *(void *)(a1 + 8);
    if (v2)
    {
      uint64_t v3 = 0;
      do
      {
        uint64_t v4 = *(void *)(a1 + 32);
        uint64_t v5 = *(void *)(v4 + 8 * v3);
        if (v5)
        {
          if (v5 == *(void *)(v4 + 8 * (v3 ^ 1)))
          {
            uint64_t v7 = v3 + 1;
            *(void *)(v4 + 8 * (v3 + 1)) = 0;
            *(void *)(*(void *)(a1 + 32) + 8 * vgoogle::protobuf::Map<std::string,long long>::clear((void *)this + 3) = 0;
            unint64_t v8 = *(uint64_t **)v5;
            do
            {
              unsigned int v9 = (void *)v8[4];
              int v10 = (uint64_t *)v8[1];
              uint64_t v11 = v8;
              if (v10)
              {
                do
                {
                  BOOL v12 = v10;
                  int v10 = (uint64_t *)*v10;
                }
                while (v10);
              }
              else
              {
                do
                {
                  BOOL v12 = (uint64_t *)v11[2];
                  BOOL v13 = *v12 == (void)v11;
                  uint64_t v11 = v12;
                }
                while (!v13);
              }
              std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::erase(v5, v8);
              if (!*(void *)(a1 + 40)) {
                operator delete(v9);
              }
              unint64_t v8 = v12;
            }
            while (v12 != (uint64_t *)(v5 + 8));
            google::protobuf::Map<std::string,std::string>::InnerMap::DestroyTree(*(void *)(a1 + 40), (void **)v5);
            goto LABEL_21;
          }
          *(void *)(v4 + 8 * vgoogle::protobuf::Map<std::string,long long>::clear((void *)this + 3) = 0;
          do
          {
            uint64_t v6 = *(void *)(v5 + 16);
            if (!*(void *)(a1 + 40)) {
              operator delete((void *)v5);
            }
            uint64_t v5 = v6;
          }
          while (v6);
        }
        uint64_t v7 = v3;
LABEL_21:
        uint64_t v3 = v7 + 1;
        unint64_t v2 = *(void *)(a1 + 8);
      }
      while (v7 + 1 < v2);
    }
    *(void *)a1 = 0;
    *(void *)(a1 + 24) = v2;
    if (!*(void *)(a1 + 40)) {
      operator delete(*(void **)(a1 + 32));
    }
  }
  return a1;
}

__n128 google::protobuf::Map<long long,double>::erase(uint64_t a1, void *a2, uint64_t *a3)
{
  uint64_t v6 = *a3;
  if (!*a2)
  {
    uint64_t v7 = *(void *)(v6 + 8);
    if (v7)
    {
      MEMORY[0x19F3C1920](v7, 0x1000C40451B5BE8);
      uint64_t v6 = *a3;
    }
  }
  __n128 v27 = *(__n128 *)a3;
  unint64_t v28 = a3[2];
  uint64_t v8 = *(void *)(v6 + 16);
  if (v8) {
    goto LABEL_5;
  }
  uint64_t v29 = 0;
  if (google::protobuf::Map<long long,double>::InnerMap::iterator_base<google::protobuf::Map<long long,double>::KeyValuePair>::revalidate_if_necessary((uint64_t)a3, &v29))
  {
    unint64_t v9 = a3[2] + 1;
  }
  else
  {
    uint64_t v10 = a3[2];
    uint64_t v11 = *(void *)(*(void *)(a3[1] + 32) + 8 * v10);
    BOOL v12 = v29;
    BOOL v13 = (void *)v29[1];
    if (v13)
    {
      do
      {
        int v14 = v13;
        BOOL v13 = (void *)*v13;
      }
      while (v13);
    }
    else
    {
      do
      {
        int v14 = (void *)v12[2];
        BOOL v15 = *v14 == (void)v12;
        BOOL v12 = v14;
      }
      while (!v15);
    }
    uint64_t v29 = v14;
    if (v14 != (void *)(v11 + 8))
    {
      uint64_t v8 = v14[4];
LABEL_5:
      *a3 = v8;
      goto LABEL_17;
    }
    unint64_t v9 = v10 + 2;
  }
  google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>::KeyValuePair const>::SearchFrom(a3, v9);
LABEL_17:
  unint64_t v16 = (void *)a2[2];
  uint64_t v29 = 0;
  BOOL v17 = google::protobuf::Map<long long,double>::InnerMap::iterator_base<google::protobuf::Map<long long,double>::KeyValuePair>::revalidate_if_necessary((uint64_t)&v27, &v29);
  unint64_t v18 = v28;
  unint64_t v19 = (void *)v27.n128_u64[0];
  uint64_t v20 = v16[4];
  uint64_t v21 = *(void *)(v20 + 8 * v28);
  if (v17)
  {
    uint64_t v22 = google::protobuf::Map<long long,double>::InnerMap::EraseFromLinkedList(v27.n128_i64[0], *(void *)(v20 + 8 * v28));
LABEL_23:
    *(void *)(v16[4] + 8 * v18) = v22;
    goto LABEL_24;
  }
  uint64_t v23 = (uint64_t *)std::__tree<long long *,google::protobuf::Map<long long,double>::InnerMap::KeyCompare,google::protobuf::Map<long long,double>::MapAllocator<long long *>>::find<long long *>(v21, (uint64_t *)v29[4]);
  if ((uint64_t *)(v21 + 8) != v23) {
    std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::erase(v21, v23);
  }
  if (!*(void *)(v21 + 24))
  {
    google::protobuf::Map<std::string,std::string>::InnerMap::DestroyTree(v16[5], (void **)v21);
    uint64_t v22 = 0;
    *(void *)(v16[4] + ((8 * v18) | 8)) = 0;
    v18 &= ~1uLL;
    goto LABEL_23;
  }
LABEL_24:
  if (!v16[5]) {
    operator delete(v19);
  }
  --*v16;
  if (v18 == v16[3])
  {
    unint64_t v25 = v16[1];
    if (v18 < v25)
    {
      uint64_t v26 = v16[4];
      do
      {
        if (*(void *)(v26 + 8 * v18)) {
          break;
        }
        v16[3] = ++v18;
      }
      while (v25 != v18);
    }
  }
  __n128 result = *(__n128 *)a3;
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(void *)(a1 + 16) = a3[2];
  return result;
}

BOOL google::protobuf::Map<long long,double>::InnerMap::iterator_base<google::protobuf::Map<long long,double>::KeyValuePair>::revalidate_if_necessary(uint64_t a1, void *a2)
{
  uint64_t v4 = *(uint64_t **)a1;
  uint64_t v3 = *(void **)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16) & (v3[1] - 1);
  *(void *)(a1 + 16) = v5;
  uint64_t v6 = v3[4];
  uint64_t v7 = *(uint64_t **)(v6 + 8 * v5);
  if (v7 == v4) {
    return 1;
  }
  if (v7 && v7 != *(uint64_t **)(v6 + 8 * (v5 ^ 1)))
  {
    while (1)
    {
      uint64_t v7 = (uint64_t *)v7[2];
      if (!v7) {
        break;
      }
      if (v7 == v4) {
        return 1;
      }
    }
  }
  google::protobuf::Map<long long,double>::InnerMap::FindHelper(&v13, v3, v4, a2);
  uint64_t v9 = v14;
  *(void *)(a1 + 16) = v14;
  uint64_t v10 = *(void *)(*(void *)(a1 + 8) + 32);
  uint64_t v11 = *(void *)(v10 + 8 * v9);
  return !v11 || v11 != *(void *)(v10 + 8 * (v9 ^ 1));
}

uint64_t google::protobuf::Map<long long,double>::InnerMap::EraseFromLinkedList(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v3 = *(void *)(a2 + 16);
  if (v2 == a1) {
    return v3;
  }
  *(void *)(v2 + 16) = google::protobuf::Map<long long,double>::InnerMap::EraseFromLinkedList();
  return v2;
}

uint64_t CoreML::Specification::Int64ToDoubleMap::GetCachedSize(CoreML::Specification::Int64ToDoubleMap *this)
{
  return *((unsigned int *)this + 12);
}

void *CoreML::Specification::Int64ToDoubleMap::SerializeWithCachedSizes(void *this, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v3 = (unint64_t *)this[5];
  unint64_t v4 = *v3;
  if (*v3)
  {
    uint64_t v5 = (uint64_t)this;
    if (*((unsigned char *)a2 + 26))
    {
      if (v4 >= 2 && *((unsigned char *)a2 + 27) != 0) {
        goto LABEL_21;
      }
    }
    else if (v4 >= 2 && google::protobuf::io::CodedOutputStream::default_serialization_deterministic_ != 0)
    {
LABEL_21:
      operator new[]();
    }
    this = google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>::begin(v11, v3);
    uint64_t v7 = 0;
    while (v11[0])
    {
      uint64_t v9 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::Wrap(*((google::protobuf::Arena **)v11[0] + 1), (google::protobuf::Arena *)(v11[0][1] + 8), *(google::protobuf::Arena **)(v5 + 16));
      if ((google::protobuf::Arena **)v7 != v9)
      {
        if (v7) {
          (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
        }
        uint64_t v7 = (uint64_t)v9;
      }
      google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)1, v7, a2, v8);
      this = google::protobuf::Map<long long,double>::InnerMap::iterator_base<google::protobuf::Map<long long,double>::KeyValuePair const>::operator++(v11);
    }
    if (v7) {
      return (void *)(*(uint64_t (**)(uint64_t))(*(void *)v7 + 8))(v7);
    }
  }
  return this;
}

void sub_19EB52978(_Unwind_Exception *a1)
{
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  MEMORY[0x19F3C1900](v1, 0x1060C80832E3BDALL);
  _Unwind_Resume(a1);
}

double std::__introsort<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*,false>(unint64_t a1, void *a2, uint64_t a3, char a4)
{
  while (2)
  {
    uint64_t v10 = (long long *)(a2 - 2);
    unint64_t v11 = a1;
    while (1)
    {
      while (1)
      {
        while (1)
        {
          a1 = v11;
          uint64_t v12 = (uint64_t)a2 - v11;
          unint64_t v13 = (uint64_t)((uint64_t)a2 - v11) >> 4;
          if (v5 || !v4)
          {
            switch(v13)
            {
              case 0uLL:
              case 1uLL:
                return *(double *)&v16;
              case 2uLL:
                if (*(void *)v10 < *(void *)v11)
                {
                  long long v84 = *(_OWORD *)v11;
                  *(_OWORD *)unint64_t v11 = *v10;
                  *(void *)&long long v16 = v84;
                  *uint64_t v10 = v84;
                }
                break;
              case 3uLL:
                std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>((long long *)v11, (uint64_t *)(v11 + 16), a2 - 2);
                break;
              case 4uLL:
                *(void *)&long long v16 = std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>((long long *)v11, (uint64_t *)(v11 + 16), (uint64_t *)(v11 + 32), (_OWORD *)a2 - 1).n128_u64[0];
                break;
              case 5uLL:
                *(void *)&long long v16 = std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>((long long *)v11, (uint64_t *)(v11 + 16), (uint64_t *)(v11 + 32), (__n128 *)(v11 + 48), (__n128 *)a2 - 1).n128_u64[0];
                break;
              default:
                JUMPOUT(0);
            }
            return *(double *)&v16;
          }
          if (v12 <= 383)
          {
            int v38 = (void *)(v11 + 16);
            BOOL v40 = (void *)v11 == a2 || v38 == a2;
            if (a4)
            {
              if (!v40)
              {
                uint64_t v41 = 0;
                uint64_t v42 = (void *)v11;
                do
                {
                  int v43 = v38;
                  uint64_t v44 = v42[2];
                  if (v44 < *v42)
                  {
                    uint64_t v45 = v42[3];
                    uint64_t v46 = v41;
                    while (1)
                    {
                      long long v16 = *(_OWORD *)(v11 + v46);
                      *(_OWORD *)(v11 + v46 + 16) = v16;
                      if (!v46) {
                        break;
                      }
                      uint64_t v47 = *(void *)(v11 + v46 - 16);
                      v46 -= 16;
                      if (v44 >= v47)
                      {
                        size_t v48 = (void *)(v11 + v46 + 16);
                        goto LABEL_80;
                      }
                    }
                    size_t v48 = (void *)v11;
LABEL_80:
                    *size_t v48 = v44;
                    v48[1] = v45;
                  }
                  int v38 = v43 + 2;
                  v41 += 16;
                  uint64_t v42 = v43;
                }
                while (v43 + 2 != a2);
              }
            }
            else if (!v40)
            {
              do
              {
                unint64_t v76 = (unint64_t)v38;
                uint64_t v77 = *(void *)(a1 + 16);
                if (v77 < *(void *)a1)
                {
                  uint64_t v78 = *(void *)(a1 + 24);
                  unint64_t v79 = v76;
                  do
                  {
                    long long v16 = *(_OWORD *)(v79 - 16);
                    *(_OWORD *)unint64_t v79 = v16;
                    uint64_t v80 = *(void *)(v79 - 32);
                    v79 -= 16;
                  }
                  while (v77 < v80);
                  *(void *)unint64_t v79 = v77;
                  *(void *)(v79 + 8) = v78;
                }
                int v38 = (void *)(v76 + 16);
                a1 = v76;
              }
              while ((void *)(v76 + 16) != a2);
            }
            return *(double *)&v16;
          }
          if (!a3)
          {
            if ((void *)v11 != a2)
            {
              int64_t v49 = (v13 - 2) >> 1;
              int64_t v50 = v49;
              do
              {
                int64_t v51 = v50;
                if (v49 >= v50)
                {
                  uint64_t v52 = (2 * v50) | 1;
                  int64_t v53 = (void *)(v11 + 16 * v52);
                  if (2 * v51 + 2 < (uint64_t)v13)
                  {
                    uint64_t v55 = v53[2];
                    BOOL v54 = *v53 < v55;
                    if (*v53 > v55) {
                      uint64_t v55 = *v53;
                    }
                    if (v54)
                    {
                      v53 += 2;
                      uint64_t v52 = 2 * v51 + 2;
                    }
                  }
                  else
                  {
                    uint64_t v55 = *v53;
                  }
                  long long v56 = (void *)(v11 + 16 * v51);
                  uint64_t v57 = *v56;
                  if (v55 >= *v56)
                  {
                    uint64_t v58 = v56[1];
                    do
                    {
                      BOOL v59 = v56;
                      long long v56 = v53;
                      _OWORD *v59 = *(_OWORD *)v53;
                      if (v49 < v52) {
                        break;
                      }
                      uint64_t v60 = (2 * v52) | 1;
                      int64_t v53 = (void *)(v11 + 16 * v60);
                      uint64_t v52 = 2 * v52 + 2;
                      if (v52 < (uint64_t)v13)
                      {
                        uint64_t v63 = *v53;
                        uint64_t v61 = v53[2];
                        BOOL v62 = *v53 < v61;
                        if (*v53 <= v61) {
                          uint64_t v63 = v53[2];
                        }
                        if (*v53 < v61) {
                          v53 += 2;
                        }
                        if (!v62) {
                          uint64_t v52 = v60;
                        }
                      }
                      else
                      {
                        uint64_t v63 = *v53;
                        uint64_t v52 = v60;
                      }
                    }
                    while (v63 >= v57);
                    *long long v56 = v57;
                    v56[1] = v58;
                  }
                }
                int64_t v50 = v51 - 1;
              }
              while (v51);
              uint64_t v64 = (unint64_t)v12 >> 4;
              do
              {
                uint64_t v65 = 0;
                long long v85 = *(_OWORD *)v11;
                int v66 = (_OWORD *)v11;
                do
                {
                  uint64_t v67 = &v66[v65 + 1];
                  uint64_t v68 = (2 * v65) | 1;
                  uint64_t v69 = 2 * v65 + 2;
                  if (v69 < v64 && *v67 < v67[2])
                  {
                    v67 += 2;
                    uint64_t v68 = v69;
                  }
                  _OWORD *v66 = *(_OWORD *)v67;
                  int v66 = v67;
                  uint64_t v65 = v68;
                }
                while (v68 <= (uint64_t)((unint64_t)(v64 - 2) >> 1));
                a2 -= 2;
                if (v67 == a2)
                {
                  *(void *)&long long v16 = v85;
                  *(_OWORD *)uint64_t v67 = v85;
                }
                else
                {
                  *(_OWORD *)uint64_t v67 = *(_OWORD *)a2;
                  *(void *)&long long v16 = v85;
                  *(_OWORD *)a2 = v85;
                  uint64_t v70 = (uint64_t)v67 - v11 + 16;
                  if (v70 >= 17)
                  {
                    unint64_t v71 = (((unint64_t)v70 >> 4) - 2) >> 1;
                    uint64_t v72 = (_OWORD *)(v11 + 16 * v71);
                    uint64_t v73 = *v67;
                    if (*(void *)v72 < *v67)
                    {
                      uint64_t v74 = v67[1];
                      do
                      {
                        uint64_t v75 = v67;
                        uint64_t v67 = v72;
                        long long v16 = *v72;
                        *uint64_t v75 = *v72;
                        if (!v71) {
                          break;
                        }
                        unint64_t v71 = (v71 - 1) >> 1;
                        uint64_t v72 = (_OWORD *)(v11 + 16 * v71);
                      }
                      while (*(void *)v72 < v73);
                      *uint64_t v67 = v73;
                      v67[1] = v74;
                    }
                  }
                }
                BOOL v54 = v64-- <= 2;
              }
              while (!v54);
            }
            return *(double *)&v16;
          }
          unint64_t v14 = v13 >> 1;
          BOOL v15 = (uint64_t *)(v11 + 16 * (v13 >> 1));
          if ((unint64_t)v12 >= 0x801)
          {
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>((long long *)a1, (uint64_t *)(a1 + 16 * (v13 >> 1)), a2 - 2);
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>((long long *)(a1 + 16), v15 - 2, a2 - 4);
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>((long long *)(a1 + 32), (uint64_t *)(a1 + 16 + 16 * v14), a2 - 6);
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>((long long *)v15 - 1, v15, (uint64_t *)(a1 + 16 + 16 * v14));
            long long v82 = *(_OWORD *)a1;
            *(_OWORD *)a1 = *(_OWORD *)v15;
            *(void *)&long long v16 = v82;
            *(_OWORD *)BOOL v15 = v82;
          }
          else
          {
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>((long long *)(a1 + 16 * (v13 >> 1)), (uint64_t *)a1, a2 - 2);
          }
          --a3;
          uint64_t v17 = *(void *)a1;
          if ((a4 & 1) != 0 || *(void *)(a1 - 16) < v17) {
            break;
          }
          if (v17 >= *(void *)v10)
          {
            unint64_t v31 = a1 + 16;
            do
            {
              unint64_t v11 = v31;
              if (v31 >= (unint64_t)a2) {
                break;
              }
              v31 += 16;
            }
            while (v17 >= *(void *)v11);
          }
          else
          {
            unint64_t v11 = a1;
            do
            {
              uint64_t v30 = *(void *)(v11 + 16);
              v11 += 16;
            }
            while (v17 >= v30);
          }
          int v32 = (long long *)a2;
          if (v11 < (unint64_t)a2)
          {
            int v32 = (long long *)a2;
            do
              uint64_t v33 = *((void *)v32-- - 2);
            while (v17 < v33);
          }
          uint64_t v34 = *(void *)(a1 + 8);
          while (v11 < (unint64_t)v32)
          {
            long long v83 = *(_OWORD *)v11;
            *(_OWORD *)unint64_t v11 = *v32;
            *(void *)&long long v16 = v83;
            *int v32 = v83;
            do
            {
              uint64_t v35 = *(void *)(v11 + 16);
              v11 += 16;
            }
            while (v17 >= v35);
            do
              uint64_t v36 = *((void *)v32-- - 2);
            while (v17 < v36);
          }
          long long v37 = (long long *)(v11 - 16);
          BOOL v4 = v11 - 16 >= a1;
          BOOL v5 = v11 - 16 == a1;
          if (v11 - 16 != a1)
          {
            long long v16 = *v37;
            *(_OWORD *)a1 = *v37;
          }
          a4 = 0;
          *(void *)(v11 - 16) = v17;
          *(void *)(v11 - 8) = v34;
        }
        uint64_t v18 = *(void *)(a1 + 8);
        unint64_t v19 = a1;
        do
        {
          unint64_t v20 = v19;
          uint64_t v21 = *(void *)(v19 + 16);
          v19 += 16;
        }
        while (v21 < v17);
        uint64_t v22 = (long long *)a2;
        if (v20 == a1)
        {
          uint64_t v22 = (long long *)a2;
          do
          {
            if (v19 >= (unint64_t)v22) {
              break;
            }
            uint64_t v24 = *((void *)v22-- - 2);
          }
          while (v24 >= v17);
        }
        else
        {
          do
            uint64_t v23 = *((void *)v22-- - 2);
          while (v23 >= v17);
        }
        unint64_t v11 = v19;
        if (v19 < (unint64_t)v22)
        {
          unint64_t v25 = v22;
          do
          {
            long long v26 = *(_OWORD *)v11;
            *(_OWORD *)unint64_t v11 = *v25;
            long long *v25 = v26;
            do
            {
              uint64_t v27 = *(void *)(v11 + 16);
              v11 += 16;
            }
            while (v27 < v17);
            do
              uint64_t v28 = *((void *)v25-- - 2);
            while (v28 >= v17);
          }
          while (v11 < (unint64_t)v25);
        }
        if (v11 - 16 != a1) {
          *(_OWORD *)a1 = *(_OWORD *)(v11 - 16);
        }
        *(void *)(v11 - 16) = v17;
        *(void *)(v11 - 8) = v18;
        if (v19 >= (unint64_t)v22) {
          break;
        }
LABEL_30:
        std::__introsort<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*,false>(a1, v11 - 16, a3, a4 & 1);
        a4 = 0;
      }
      BOOL v29 = std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>(a1, (void *)(v11 - 16));
      if (std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>(v11, a2))
      {
        break;
      }
      if (!v29) {
        goto LABEL_30;
      }
    }
    a2 = (void *)(v11 - 16);
    if (!v29) {
      continue;
    }
    return *(double *)&v16;
  }
}

google::protobuf::Arena **google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::Wrap(google::protobuf::Arena *a1, google::protobuf::Arena *a2, google::protobuf::Arena *a3)
{
  if (!a3) {
    operator new();
  }
  result[3] = 0;
  result[4] = a3;
  result[1] = 0;
  result[2] = 0;
  *__n128 result = (google::protobuf::Arena *)&unk_1EF0DC150;
  result[6] = a1;
  result[7] = a2;
  *((_DWORD *)result + 1CoreML::Specification::StringVector::New(this, 0) = 3;
  return result;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::MapEntryWrapper::value(uint64_t a1)
{
  return *(void *)(a1 + 56);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::MapEntryWrapper::key(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

unsigned char *google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::InternalSerializeWithCachedSizesToArray(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  unint64_t v5 = *(void *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 136))(a1);
  *a3 = 8;
  uint64_t v6 = a3 + 1;
  if (v5 < 0x80)
  {
    LOBYTE(v7) = v5;
  }
  else
  {
    do
    {
      *v6++ = v5 | 0x80;
      unint64_t v7 = v5 >> 7;
      unint64_t v8 = v5 >> 14;
      v5 >>= 7;
    }
    while (v8);
  }
  *uint64_t v6 = v7;
  uint64_t v9 = *(void *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 144))(a1);
  v6[1] = 17;
  *(void *)(v6 + 2) = v9;
  return v6 + 10;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::GetCachedSize(_DWORD *a1)
{
  int v2 = a1[10];
  if (v2)
  {
    int v3 = ((9 * (__clz(*(void *)(*(uint64_t (**)(_DWORD *))(*(void *)a1 + 136))(a1) | 1) ^ 0x3F) + 73) >> 6)
       + 1;
    if ((a1[10] & 2) != 0) {
      goto LABEL_3;
    }
LABEL_5:
    int v4 = 0;
    return (v4 + v3);
  }
  int v3 = 0;
  if ((v2 & 2) == 0) {
    goto LABEL_5;
  }
LABEL_3:
  (*(void (**)(_DWORD *))(*(void *)a1 + 144))(a1);
  int v4 = 9;
  return (v4 + v3);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::SerializeWithCachedSizes(uint64_t a1, google::protobuf::io::CodedOutputStream *a2)
{
  int v4 = (unint64_t *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 136))(a1);
  google::protobuf::internal::WireFormatLite::WriteInt64(1, *v4, a2, v5);
  double v7 = *(double *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 144))(a1);

  return google::protobuf::internal::WireFormatLite::WriteDouble(2, a2, v7, v6);
}

unint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::ByteSizeLong(_DWORD *a1)
{
  int v2 = a1[10];
  if (v2)
  {
    unint64_t v3 = ((9 * (__clz(*(void *)(*(uint64_t (**)(_DWORD *))(*(void *)a1 + 136))(a1) | 1) ^ 0x3F) + 73) >> 6)
       + 1;
    if ((a1[10] & 2) != 0) {
      goto LABEL_3;
    }
LABEL_5:
    uint64_t v4 = 0;
    return v4 + v3;
  }
  unint64_t v3 = 0;
  if ((v2 & 2) == 0) {
    goto LABEL_5;
  }
LABEL_3:
  (*(void (**)(_DWORD *))(*(void *)a1 + 144))(a1);
  uint64_t v4 = 9;
  return v4 + v3;
}

BOOL google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::MergePartialFromCodedStream(uint64_t a1, google::protobuf::io::CodedInputStream *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      unint64_t v5 = *(char **)this;
      if (*(void *)this >= *((void *)this + 1))
      {
        LODWORD(TagFallback) = 0;
      }
      else
      {
        unint64_t TagFallback = *v5;
        if ((*v5 & 0x80000000) == 0)
        {
          *(void *)this = v5 + 1;
          goto LABEL_6;
        }
      }
      unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(this, TagFallback);
LABEL_6:
      if (TagFallback == 8) {
        break;
      }
      if (TagFallback == 17)
      {
        int v12 = *(_DWORD *)(a1 + 40);
        unint64_t v13 = *(unint64_t **)this;
        unint64_t v8 = *((void *)this + 1);
        goto LABEL_21;
      }
      if (!TagFallback || (TagFallback & 7) == 4) {
        return 1;
      }
      if ((google::protobuf::internal::WireFormatLite::SkipField(this, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
    }
      }
    int v7 = *(_DWORD *)(a1 + 40) | 1;
    *(_DWORD *)(a1 + 4CoreML::Specification::StringVector::New(this, 0) = v7;
    uint64_t v9 = *(char **)this;
    unint64_t v8 = *((void *)this + 1);
    if (*(void *)this >= v8 || *v9 < 0)
    {
      unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this);
      if ((v14 & 1) == 0) {
        return 0;
      }
      int v7 = *(_DWORD *)(a1 + 40);
      unint64_t v11 = *(char **)this;
      unint64_t v8 = *((void *)this + 1);
    }
    else
    {
      unint64_t Varint64Fallback = *v9;
      unint64_t v11 = v9 + 1;
      *(void *)this = v11;
    }
    *(void *)(a1 + 16) = Varint64Fallback;
    int v12 = v7 | 1;
    *(_DWORD *)(a1 + 4CoreML::Specification::StringVector::New(this, 0) = v7 | 1;
    if ((unint64_t)v11 < v8 && *v11 == 17)
    {
      unint64_t v13 = (unint64_t *)(v11 + 1);
      *(void *)this = v11 + 1;
LABEL_21:
      int v15 = v12 | 2;
      *(_DWORD *)(a1 + 4CoreML::Specification::StringVector::New(this, 0) = v12 | 2;
      unint64_t v20 = 0;
      if ((int)v8 - (int)v13 < 8)
      {
        BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)this, &v20);
        if (!result) {
          return result;
        }
        unint64_t v18 = v20;
        int v15 = *(_DWORD *)(a1 + 40);
        long long v16 = *(char **)this;
        unint64_t v8 = *((void *)this + 1);
      }
      else
      {
        unint64_t v17 = *v13;
        long long v16 = (char *)(v13 + 1);
        unint64_t v18 = v17;
        *(void *)this = v16;
      }
      *(void *)(a1 + 24) = v18;
      *(_DWORD *)(a1 + 4CoreML::Specification::StringVector::New(this, 0) = v15 | 2;
      if (v16 == (char *)v8 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10))) {
        break;
      }
    }
  }
  *((_DWORD *)this + 8) = 0;
  BOOL result = 1;
  *((unsigned char *)this + 36) = 1;
  return result;
}

double google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::CheckTypeAndMergeFrom(uint64_t a1, _DWORD *a2)
{
  int v2 = a2[10];
  if (v2)
  {
    if (v2)
    {
      *(void *)(a1 + 16) = *(void *)(*(uint64_t (**)(_DWORD *))(*(void *)a2 + 136))(a2);
      *(_DWORD *)(a1 + 40) |= 1u;
      int v2 = a2[10];
    }
    if ((v2 & 2) != 0)
    {
      uint64_t v6 = (double *)(*(uint64_t (**)(_DWORD *))(*(void *)a2 + 144))(a2);
      double result = *v6;
      *(double *)(a1 + 24) = *v6;
      *(_DWORD *)(a1 + 40) |= 2u;
    }
  }
  return result;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::IsInitialized()
{
  return 1;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::Clear(uint64_t result)
{
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) &= 0xFFFFFFFC;
  return result;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::GetArena(uint64_t a1)
{
  return *(void *)(a1 + 32);
}

google::protobuf::Arena **google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::New(uint64_t a1, google::protobuf::Arena *a2)
{
  if (!a2) {
    operator new();
  }
  *((_DWORD *)result + 1CoreML::Specification::StringVector::New(this, 0) = 0;
  result[3] = 0;
  result[4] = a2;
  result[1] = 0;
  result[2] = 0;
  unint64_t v5 = *(google::protobuf::Arena **)(a1 + 8);
  *double result = (google::protobuf::Arena *)&unk_1EF0DC930;
  result[1] = v5;
  return result;
}

void google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::New()
{
}

void *google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, (char *)&unk_19EC86ACE);
}

void google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::MapEntryWrapper::~MapEntryWrapper(void *a1)
{
  *a1 = &unk_1EF0DC1F8;
  JUMPOUT(0x19F3C1920);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::value(uint64_t a1)
{
  if (!*(void *)(a1 + 8))
  {
    int v3 = 3;
    uint64_t v4 = "/Library/Caches/com.apple.xbs/Sources/CoreML/coremltools-internal/deps/protobuf/src/google/protobuf/map_entry_lite.h";
    int v5 = 162;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: default_instance_ != NULL: ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v3);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  return a1 + 24;
}

void sub_19EB53894(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::key(uint64_t a1)
{
  return a1 + 16;
}

void google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::~MapEntryImpl(void *a1)
{
  *a1 = &unk_1EF0DC1F8;
  JUMPOUT(0x19F3C1920);
}

void *google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::~MapEntryImpl(void *result)
{
  *double result = &unk_1EF0DC1F8;
  return result;
}

void *google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::MapEntryWrapper::~MapEntryWrapper(void *result)
{
  *double result = &unk_1EF0DC1F8;
  return result;
}

long long *std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>(long long *result, uint64_t *a2, uint64_t *a3)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *a3;
  if (*a2 >= *(void *)result)
  {
    if (v4 < v3)
    {
      long long v6 = *(_OWORD *)a2;
      *(_OWORD *)a2 = *(_OWORD *)a3;
      *(_OWORD *)a3 = v6;
      if (*a2 < *(void *)result)
      {
        long long v7 = *result;
        *double result = *(_OWORD *)a2;
        *(_OWORD *)a2 = v7;
      }
    }
  }
  else
  {
    if (v4 >= v3)
    {
      long long v8 = *result;
      *double result = *(_OWORD *)a2;
      *(_OWORD *)a2 = v8;
      if (*a3 >= *a2) {
        return result;
      }
      long long v5 = *(_OWORD *)a2;
      *(_OWORD *)a2 = *(_OWORD *)a3;
    }
    else
    {
      long long v5 = *result;
      *double result = *(_OWORD *)a3;
    }
    *(_OWORD *)a3 = v5;
  }
  return result;
}

__n128 std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>(long long *a1, uint64_t *a2, uint64_t *a3, _OWORD *a4)
{
  std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>(a1, a2, a3);
  if (*(void *)a4 < *a3)
  {
    __n128 result = *(__n128 *)a3;
    *(_OWORD *)a3 = *a4;
    *a4 = result;
    if (*a3 < *a2)
    {
      __n128 result = *(__n128 *)a2;
      *(_OWORD *)a2 = *(_OWORD *)a3;
      *(__n128 *)a3 = result;
      if (*a2 < *(void *)a1)
      {
        __n128 result = (__n128)*a1;
        *a1 = *(_OWORD *)a2;
        *(__n128 *)a2 = result;
      }
    }
  }
  return result;
}

__n128 std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>(long long *a1, uint64_t *a2, uint64_t *a3, __n128 *a4, __n128 *a5)
{
  result.n128_u64[0] = std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>(a1, a2, a3, a4).n128_u64[0];
  if ((int64_t)a5->n128_u64[0] < (int64_t)a4->n128_u64[0])
  {
    __n128 result = *a4;
    *a4 = *a5;
    *a5 = result;
    if ((int64_t)a4->n128_u64[0] < *a3)
    {
      __n128 result = *(__n128 *)a3;
      *(__n128 *)a3 = *a4;
      *a4 = result;
      if (*a3 < *a2)
      {
        __n128 result = *(__n128 *)a2;
        *(_OWORD *)a2 = *(_OWORD *)a3;
        *(__n128 *)a3 = result;
        if (*a2 < *(void *)a1)
        {
          __n128 result = (__n128)*a1;
          *a1 = *(_OWORD *)a2;
          *(__n128 *)a2 = result;
        }
      }
    }
  }
  return result;
}

BOOL std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>(uint64_t a1, void *a2)
{
  uint64_t v4 = ((uint64_t)a2 - a1) >> 4;
  BOOL result = 1;
  switch(v4)
  {
    case 0:
    case 1:
      return result;
    case 2:
      long long v6 = (long long *)(a2 - 2);
      if (*(a2 - 2) < *(void *)a1)
      {
        long long v7 = *(_OWORD *)a1;
        *(_OWORD *)a1 = *v6;
        *long long v6 = v7;
      }
      return result;
    case 3:
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>((long long *)a1, (uint64_t *)(a1 + 16), a2 - 2);
      return 1;
    case 4:
      std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>((long long *)a1, (uint64_t *)(a1 + 16), (uint64_t *)(a1 + 32), (_OWORD *)a2 - 1);
      return 1;
    case 5:
      std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>((long long *)a1, (uint64_t *)(a1 + 16), (uint64_t *)(a1 + 32), (__n128 *)(a1 + 48), (__n128 *)a2 - 1);
      return 1;
    default:
      long long v8 = (void *)(a1 + 32);
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>((long long *)a1, (uint64_t *)(a1 + 16), (uint64_t *)(a1 + 32));
      uint64_t v9 = (void *)(a1 + 48);
      if ((void *)(a1 + 48) == a2) {
        return 1;
      }
      uint64_t v10 = 0;
      int v11 = 0;
      break;
  }
  while (1)
  {
    uint64_t v12 = *v9;
    if (*v9 < *v8)
    {
      uint64_t v13 = v9[1];
      uint64_t v14 = v10;
      while (1)
      {
        *(_OWORD *)(a1 + v14 + 48) = *(_OWORD *)(a1 + v14 + 32);
        if (v14 == -32) {
          break;
        }
        uint64_t v15 = *(void *)(a1 + v14 + 16);
        v14 -= 16;
        if (v12 >= v15)
        {
          long long v16 = (void *)(a1 + v14 + 48);
          goto LABEL_12;
        }
      }
      long long v16 = (void *)a1;
LABEL_12:
      void *v16 = v12;
      v16[1] = v13;
      if (++v11 == 8) {
        return v9 + 2 == a2;
      }
    }
    long long v8 = v9;
    v10 += 16;
    v9 += 2;
    if (v9 == a2) {
      return 1;
    }
  }
}

uint64_t CoreML::Specification::Int64ToDoubleMap::ByteSizeLong(CoreML::Specification::Int64ToDoubleMap *this)
{
  int v2 = (void *)*((void *)this + 5);
  uint64_t v3 = *(unsigned int *)v2;
  google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>::begin(v8, v2);
  uint64_t v4 = 0;
  while (v8[0])
  {
    long long v5 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::Wrap(*((google::protobuf::Arena **)v8[0] + 1), (google::protobuf::Arena *)(v8[0][1] + 8), *((google::protobuf::Arena **)this + 2));
    if (v4 != v5)
    {
      if (v4) {
        (*((void (**)(google::protobuf::Arena **))*v4 + 1))(v4);
      }
      uint64_t v4 = v5;
    }
    unint64_t v6 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::ByteSizeLong(v4);
    v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
    google::protobuf::Map<long long,double>::InnerMap::iterator_base<google::protobuf::Map<long long,double>::KeyValuePair const>::operator++(v8);
  }
  if (v4) {
    (*((void (**)(google::protobuf::Arena **))*v4 + 1))(v4);
  }
  *((_DWORD *)this + 12) = v3;
  return v3;
}

void sub_19EB53DD8(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t CoreML::Specification::Int64ToDoubleMap::MergePartialFromCodedStream(CoreML::Specification::Int64ToDoubleMap *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  long long v5 = (google::protobuf::Arena **)((char *)this + 16);
  unint64_t v6 = (char *)this + 24;
  while (1)
  {
    long long v7 = *(char **)a2;
    if (*(void *)a2 >= *((void *)a2 + 1))
    {
      LODWORD(v8) = 0;
    }
    else
    {
      uint64_t v8 = *v7;
      if (*v7 >= 1)
      {
        *(void *)a2 = v7 + 1;
        unint64_t v9 = v8 | 0x100000000;
        if ((v9 & 0x100000000) == 0) {
          goto LABEL_12;
        }
        goto LABEL_8;
      }
    }
    unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v8);
    unint64_t v9 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
    if ((v9 & 0x100000000) == 0) {
      goto LABEL_12;
    }
LABEL_8:
    if (v9 == 10 && (v9 & 0xFFFFFFF8) == 8)
    {
      v42[0] = v5;
      v42[1] = v6;
      uint64_t v44 = 0;
      uint64_t v14 = *(char **)a2;
      if (*(void *)a2 < *((void *)a2 + 1) && (*v14 & 0x80000000) == 0)
      {
        int VarintSizeAsIntFallback = *v14;
        *(void *)a2 = v14 + 1;
        goto LABEL_24;
      }
      int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
      if (VarintSizeAsIntFallback < 0) {
        goto LABEL_63;
      }
LABEL_24:
      int v16 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      int v17 = *((_DWORD *)a2 + 13);
      BOOL v18 = __OFSUB__(v17--, 1);
      *((_DWORD *)a2 + 1google::protobuf::Map<std::string,long long>::clear((void *)this + 3) = v17;
      if (v17 < 0 != v18) {
        goto LABEL_63;
      }
      int v19 = v16;
      uint64_t v21 = *(char **)a2;
      unint64_t v20 = *((void *)a2 + 1);
      if (*(void *)a2 < v20 && *v21 == 8)
      {
        *(void *)a2 = v21 + 1;
        if ((unint64_t)(v21 + 1) >= v20 || v21[1] < 0)
        {
          unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if (v25)
          {
            unint64_t v22 = Varint64Fallback;
            uint64_t v23 = *(char **)a2;
            unint64_t v20 = *((void *)a2 + 1);
            goto LABEL_33;
          }
          goto LABEL_63;
        }
        unint64_t v22 = v21[1];
        uint64_t v23 = v21 + 2;
        *(void *)a2 = v23;
LABEL_33:
        v43[0] = (google::protobuf::Arena *)v22;
        if ((int)v20 - (int)v23 >= 1 && *v23 == 17)
        {
          uint64_t v26 = **((void **)this + 5);
          uint64_t v27 = google::protobuf::Map<long long,double>::operator[]((uint64_t)v6, v43);
          v43[1] = (google::protobuf::Arena *)v27;
          if (v26 != **((void **)this + 5))
          {
            google::protobuf::io::CodedInputStream::Skip(a2, 1u);
            unint64_t v45 = 0;
            uint64_t v28 = *(unint64_t **)a2;
            BOOL v29 = (char *)*((void *)a2 + 1);
            if ((int)(v29 - *(void *)a2) < 8)
            {
              if (google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v45))
              {
                unint64_t v32 = v45;
                uint64_t v30 = *(char **)a2;
                BOOL v29 = (char *)*((void *)a2 + 1);
                goto LABEL_38;
              }
              google::protobuf::Map<long long,double>::erase((uint64_t)v6, (uint64_t *)v43);
              goto LABEL_63;
            }
            unint64_t v31 = *v28;
            uint64_t v30 = (char *)(v28 + 1);
            unint64_t v32 = v31;
            *(void *)a2 = v30;
LABEL_38:
            *uint64_t v27 = (google::protobuf::Arena *)v32;
            if (v30 == v29 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
            {
              *((_DWORD *)a2 + 8) = 0;
              *((unsigned char *)a2 + 36) = 1;
              goto LABEL_57;
            }
            uint64_t v33 = google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::NewEntry(*v5);
            if (v33)
            {
              uint64_t v44 = v33;
              uint64_t v34 = v33;
            }
            else
            {
              uint64_t v34 = 0;
            }
            *((_DWORD *)v33 + 10) |= 2u;
            v33[3] = *v27;
            double v38 = google::protobuf::Map<long long,double>::erase((uint64_t)v6, (uint64_t *)v43);
            *((_DWORD *)v34 + 10) |= 1u;
            v34[2] = (google::protobuf::Arena *)v22;
            int v37 = (*((uint64_t (**)(google::protobuf::Arena **, google::protobuf::io::CodedInputStream *, double))*v34
                   + 11))(v34, a2, v38);
            if (v37)
            {
              google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::Map<long long,double>>::UseKeyAndValueFromEntry((uint64_t)v42);
              uint64_t v34 = v44;
            }
            if (!(*((uint64_t (**)(google::protobuf::Arena **))*v34 + 5))(v34))
            {
LABEL_56:
              if (v37) {
                goto LABEL_57;
              }
LABEL_63:
              BOOL v40 = 0;
              int v13 = 6;
LABEL_64:
              if (v44) {
                (*((void (**)(google::protobuf::Arena **))*v44 + 1))(v44);
              }
              if (!v40) {
                goto LABEL_18;
              }
              goto LABEL_17;
            }
LABEL_47:
            uint64_t v44 = 0;
            if ((v37 & 1) == 0) {
              return 0;
            }
LABEL_57:
            BOOL v39 = google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v19);
            BOOL v40 = v39;
            if (v39) {
              int v13 = 0;
            }
            else {
              int v13 = 6;
            }
            goto LABEL_64;
          }
        }
      }
      else
      {
        unint64_t v22 = 0;
        v43[0] = 0;
      }
      uint64_t v35 = google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::NewEntry(*v5);
      if (v35)
      {
        uint64_t v44 = v35;
        uint64_t v36 = v35;
      }
      else
      {
        uint64_t v36 = 0;
      }
      *((_DWORD *)v35 + 10) |= 1u;
      v35[2] = (google::protobuf::Arena *)v22;
      int v37 = (*((uint64_t (**)(google::protobuf::Arena **, google::protobuf::io::CodedInputStream *))*v35 + 11))(v35, a2);
      if (v37)
      {
        google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::Map<long long,double>>::UseKeyAndValueFromEntry((uint64_t)v42);
        uint64_t v36 = v44;
      }
      if (!(*((uint64_t (**)(google::protobuf::Arena **))*v36 + 5))(v36)) {
        goto LABEL_56;
      }
      goto LABEL_47;
    }
LABEL_12:
    if (!v9 || (v9 & 7) == 4) {
      return 1;
    }
    if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v9, a3))return 0; {
LABEL_17:
    }
    int v13 = 0;
LABEL_18:
    if (v13) {
      return 0;
    }
  }
}

void sub_19EB5424C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  if (a13) {
    (*(void (**)(uint64_t))(*(void *)a13 + 8))(a13);
  }
  _Unwind_Resume(exception_object);
}

google::protobuf::Arena **google::protobuf::Map<long long,double>::operator[](uint64_t a1, google::protobuf::Arena **a2)
{
  uint64_t v4 = *(void **)(a1 + 16);
  long long v19 = (unint64_t)*a2;
  google::protobuf::Map<long long,double>::InnerMap::FindHelper(v21, v4, (uint64_t *)&v19, 0);
  uint64_t v6 = v21[0];
  if (v21[0]) {
    goto LABEL_12;
  }
  unint64_t v7 = v4[1];
  unint64_t v8 = *v4 + 1;
  unint64_t v9 = ((3 * v7) >> 2) & 0xFFFFFFFFFFFFFFFLL;
  if (v9 <= v8)
  {
    if (v7 <= 0x800000000000000)
    {
      uint64_t v16 = 2 * v7;
LABEL_25:
      google::protobuf::Map<long long,double>::InnerMap::Resize((uint64_t)v4, v16, v5);
      google::protobuf::Map<long long,double>::InnerMap::FindHelper(v20, v4, (uint64_t *)&v19, 0);
      uint64_t v11 = v20[3];
      goto LABEL_8;
    }
  }
  else if (v7 >= 9 && (12 * v7) >> 6 >= v8)
  {
    char v17 = 0;
    unint64_t v18 = ((5 * v8) >> 2) + 1;
    do
      ++v17;
    while (v18 << v17 < v9);
    uint64_t v16 = v7 >> v17 <= 8 ? 8 : v7 >> v17;
    if (v16 != v7) {
      goto LABEL_25;
    }
  }
  uint64_t v11 = v21[3];
LABEL_8:
  uint64_t v12 = (google::protobuf::Arena *)v4[5];
  if (v12) {
    Aligned = (uint64_t *)google::protobuf::Arena::AllocateAligned(v12, MEMORY[0x1E4FBA3A0], 24);
  }
  else {
    Aligned = (uint64_t *)operator new(0x18uLL);
  }
  *(_OWORD *)Aligned = v19;
  google::protobuf::Map<long long,double>::InnerMap::InsertUnique(v20, (uint64_t)v4, v11, Aligned);
  ++*v4;
  uint64_t v6 = v20[0];
LABEL_12:
  uint64_t v14 = *(google::protobuf::Arena ***)(v6 + 8);
  if (!v14)
  {
    if (!*(void *)a1) {
      operator new();
    }
    uint64_t v14 = google::protobuf::Arena::AllocateAligned(*(google::protobuf::Arena **)a1, MEMORY[0x1E4FBA3A0], 16);
    *uint64_t v14 = 0;
    v14[1] = 0;
    *uint64_t v14 = *a2;
    *(void *)(v6 + 8) = v14;
  }
  return v14 + 1;
}

double google::protobuf::Map<long long,double>::erase(uint64_t a1, uint64_t *a2)
{
  google::protobuf::Map<long long,double>::InnerMap::FindHelper(&v6, *(void **)(a1 + 16), a2, 0);
  double result = *(double *)&v6;
  if ((void)v6)
  {
    long long v4 = v6;
    uint64_t v5 = v7;
    *(void *)&double result = google::protobuf::Map<long long,double>::erase((uint64_t)&v6, (void *)a1, (uint64_t *)&v4).n128_u64[0];
  }
  return result;
}

google::protobuf::Arena **google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::NewEntry(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  *((_DWORD *)result + 1CoreML::Specification::StringVector::New(this, 0) = 0;
  result[3] = 0;
  result[4] = a1;
  result[1] = 0;
  result[2] = 0;
  *double result = (google::protobuf::Arena *)&unk_1EF0DC930;
  return result;
}

double google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::Map<long long,double>>::UseKeyAndValueFromEntry(uint64_t a1)
{
  *(void *)(a1 + 16) = *(void *)(*(uint64_t (**)(void))(**(void **)(a1 + 32) + 136))(*(void *)(a1 + 32));
  int v2 = google::protobuf::Map<long long,double>::operator[](*(void *)(a1 + 8), (google::protobuf::Arena **)(a1 + 16));
  *(void *)(a1 + 24) = v2;
  uint64_t v3 = *(void *)(a1 + 32);
  *(_DWORD *)(v3 + 40) |= 2u;
  double result = *(double *)(v3 + 24);
  *(double *)int v2 = result;
  return result;
}

uint64_t *google::protobuf::Map<long long,double>::InnerMap::InsertUnique(uint64_t *result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  long long v4 = a4;
  unint64_t v5 = a3;
  uint64_t v7 = result;
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(v8 + 8 * a3);
  if (!v9)
  {
    a4[2] = 0;
    *(void *)(v8 + 8 * agoogle::protobuf::Map<std::string,long long>::clear((void *)this + 3) = a4;
    goto LABEL_8;
  }
  if (v9 != *(void *)(v8 + 8 * (a3 ^ 1)))
  {
    unint64_t v10 = 0;
    uint64_t v11 = *(void *)(v8 + 8 * a3);
    do
    {
      ++v10;
      uint64_t v11 = *(void *)(v11 + 16);
    }
    while (v11);
    if (v10 < 8)
    {
      a4[2] = v9;
      *(void *)(v8 + 8 * agoogle::protobuf::Map<std::string,long long>::clear((void *)this + 3) = a4;
LABEL_11:
      *uint64_t v7 = v4;
      v7[1] = a2;
      v7[2] = v5;
      return result;
    }
    google::protobuf::Map<long long,double>::InnerMap::TreeConvert(a2, a3);
    v4[2] = 0;
    uint64_t v14 = *(void *)(*(void *)(a2 + 32) + 8 * v5);
    uint64_t v15 = v4;
    double result = std::__tree<long long *,google::protobuf::Map<long long,double>::InnerMap::KeyCompare,google::protobuf::Map<long long,double>::MapAllocator<long long *>>::__emplace_unique_key_args<long long *,long long *>(v14, v4, (uint64_t *)&v15);
    v5 &= ~1uLL;
    long long v4 = (uint64_t *)result[4];
LABEL_8:
    unint64_t v12 = *(void *)(a2 + 24);
    if (v5 < v12) {
      unint64_t v12 = v5;
    }
    *(void *)(a2 + 24) = v12;
    goto LABEL_11;
  }
  a4[2] = 0;
  uint64_t v13 = *(void *)(v8 + 8 * a3);
  uint64_t v15 = a4;
  double result = std::__tree<long long *,google::protobuf::Map<long long,double>::InnerMap::KeyCompare,google::protobuf::Map<long long,double>::MapAllocator<long long *>>::__emplace_unique_key_args<long long *,long long *>(v13, a4, (uint64_t *)&v15);
  *uint64_t v7 = result[4];
  v7[1] = a2;
  v7[2] = v5 & 0xFFFFFFFFFFFFFFFELL;
  return result;
}

uint64_t *google::protobuf::Map<long long,double>::InnerMap::TreeConvert(uint64_t a1, uint64_t a2)
{
  long long v4 = *(google::protobuf::Arena **)(a1 + 40);
  if (v4) {
    Aligned = google::protobuf::Arena::AllocateAligned(v4, MEMORY[0x1E4FBA3A0], 32);
  }
  else {
    Aligned = operator new(0x20uLL);
  }
  uint64_t v6 = (uint64_t)Aligned;
  uint64_t v25 = *(void *)(a1 + 40);
  uint64_t v7 = v25;
  uint64_t v26 = 0;
  uint64_t v23 = &v24;
  uint64_t v24 = 0;
  Aligned[1] = 0;
  uint64_t v8 = (uint64_t **)(Aligned + 1);
  Aligned[2] = v7;
  Aligned[3] = 0;
  void *Aligned = Aligned + 1;
  uint64_t v9 = v23;
  if (v23 != &v24)
  {
    do
    {
      unint64_t v10 = *(uint64_t **)(v6 + 8);
      uint64_t v11 = v8;
      if (*(uint64_t ***)v6 == v8) {
        goto LABEL_11;
      }
      uint64_t v12 = *(void *)(v6 + 8);
      uint64_t v13 = v8;
      if (v10)
      {
        do
        {
          uint64_t v11 = (uint64_t **)v12;
          uint64_t v12 = *(void *)(v12 + 8);
        }
        while (v12);
      }
      else
      {
        do
        {
          uint64_t v11 = (uint64_t **)v13[2];
          BOOL v14 = *v11 == (uint64_t *)v13;
          uint64_t v13 = v11;
        }
        while (v14);
      }
      uint64_t v15 = *v9[4];
      if (*v11[4] < v15)
      {
LABEL_11:
        if (v10) {
          uint64_t v16 = v11;
        }
        else {
          uint64_t v16 = v8;
        }
        if (v10) {
          char v17 = v11 + 1;
        }
        else {
          char v17 = v8;
        }
      }
      else
      {
        uint64_t v16 = v8;
        char v17 = v8;
        if (v10)
        {
          char v17 = v8;
          while (1)
          {
            while (1)
            {
              uint64_t v16 = (uint64_t **)v10;
              uint64_t v21 = *(void *)v10[4];
              if (v15 >= v21) {
                break;
              }
              unint64_t v10 = *v16;
              char v17 = v16;
              if (!*v16) {
                goto LABEL_18;
              }
            }
            if (v21 >= v15) {
              break;
            }
            char v17 = v16 + 1;
            unint64_t v10 = v16[1];
            if (!v10) {
              goto LABEL_18;
            }
          }
        }
      }
      if (!*v17)
      {
LABEL_18:
        unint64_t v18 = (uint64_t *)google::protobuf::Map<std::string,std::string>::MapAllocator<std::__tree_node<std::string*,void *>>::allocate(*(google::protobuf::Arena **)(v6 + 16));
        v18[4] = (uint64_t)v9[4];
        std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::__insert_node_at((uint64_t **)v6, (uint64_t)v16, v17, v18);
      }
      long long v19 = v9[1];
      if (v19)
      {
        do
        {
          unint64_t v20 = (void **)v19;
          long long v19 = (void *)*v19;
        }
        while (v19);
      }
      else
      {
        do
        {
          unint64_t v20 = (void **)v9[2];
          BOOL v14 = *v20 == v9;
          uint64_t v9 = v20;
        }
        while (!v14);
      }
      uint64_t v9 = v20;
    }
    while (v20 != &v24);
  }
  std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::destroy((uint64_t)&v23, v24);
  google::protobuf::Map<long long,double>::InnerMap::CopyListToTree(*(uint64_t **)(a1 + 32), a2, v6);
  double result = google::protobuf::Map<long long,double>::InnerMap::CopyListToTree(*(uint64_t **)(a1 + 32), a2 ^ 1, v6);
  *(void *)(*(void *)(a1 + 32) + 8 * (a2 ^ 1)) = v6;
  *(void *)(*(void *)(a1 + 32) + 8 * a2) = v6;
  return result;
}

void sub_19EB54890(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::destroy(v10, *(void **)(v10 + 8));
  std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::destroy((uint64_t)&a9, a10);
  _Unwind_Resume(a1);
}

uint64_t *std::__tree<long long *,google::protobuf::Map<long long,double>::InnerMap::KeyCompare,google::protobuf::Map<long long,double>::MapAllocator<long long *>>::__emplace_unique_key_args<long long *,long long *>(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v6 = (uint64_t **)(a1 + 8);
  unint64_t v5 = *(uint64_t **)(a1 + 8);
  if (v5)
  {
    uint64_t v7 = *a2;
    while (1)
    {
      while (1)
      {
        uint64_t v8 = (uint64_t **)v5;
        uint64_t v9 = *(void *)v5[4];
        if (v7 >= v9) {
          break;
        }
        unint64_t v5 = *v8;
        uint64_t v6 = v8;
        if (!*v8) {
          goto LABEL_10;
        }
      }
      if (v9 >= v7) {
        break;
      }
      unint64_t v5 = v8[1];
      if (!v5)
      {
        uint64_t v6 = v8 + 1;
        goto LABEL_10;
      }
    }
  }
  else
  {
    uint64_t v8 = (uint64_t **)(a1 + 8);
LABEL_10:
    uint64_t v10 = (uint64_t *)google::protobuf::Map<std::string,std::string>::MapAllocator<std::__tree_node<std::string*,void *>>::allocate(*(google::protobuf::Arena **)(a1 + 16));
    v10[4] = *a3;
    std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::__insert_node_at((uint64_t **)a1, (uint64_t)v8, v6, v10);
    return v10;
  }
  return (uint64_t *)v8;
}

uint64_t *google::protobuf::Map<long long,double>::InnerMap::CopyListToTree(uint64_t *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = (uint64_t *)result[a2];
  if (v3)
  {
    do
    {
      uint64_t v6 = v3;
      double result = std::__tree<long long *,google::protobuf::Map<long long,double>::InnerMap::KeyCompare,google::protobuf::Map<long long,double>::MapAllocator<long long *>>::__emplace_unique_key_args<long long *,long long *>(a3, v3, (uint64_t *)&v6);
      unint64_t v5 = (uint64_t *)v3[2];
      v3[2] = 0;
      uint64_t v3 = v5;
    }
    while (v5);
  }
  return result;
}

void google::protobuf::Map<long long,double>::InnerMap::Resize(uint64_t a1, uint64_t a2, size_t a3)
{
  unint64_t v5 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = a2;
  uint64_t v6 = *(void **)(a1 + 32);
  uint64_t v7 = google::protobuf::Map<std::string,std::string>::MapAllocator<void *>::allocate(*(google::protobuf::Arena **)(a1 + 40), a2, a3);
  bzero(v7, 8 * a2);
  unint64_t v8 = *(void *)(a1 + 24);
  *(void *)(a1 + 24) = *(void *)(a1 + 8);
  *(void *)(a1 + 32) = v7;
  while (v8 < v5)
  {
    uint64_t v9 = v6[v8];
    if (v9)
    {
      if (v9 == v6[v8 ^ 1])
      {
        uint64_t v11 = *(void **)v9;
        do
        {
          google::protobuf::Map<long long,double>::InnerMap::InsertUnique(v15, a1, (*(void *)(a1 + 8) - 1) & (*(void *)(a1 + 16) + *(void *)v11[4]), (uint64_t *)v11[4]);
          uint64_t v12 = (void *)v11[1];
          if (v12)
          {
            do
            {
              uint64_t v13 = v12;
              uint64_t v12 = (void *)*v12;
            }
            while (v12);
          }
          else
          {
            do
            {
              uint64_t v13 = (void *)v11[2];
              BOOL v14 = *v13 == (void)v11;
              uint64_t v11 = v13;
            }
            while (!v14);
          }
          uint64_t v11 = v13;
        }
        while (v13 != (void *)(v9 + 8));
        ++v8;
        google::protobuf::Map<std::string,std::string>::InnerMap::DestroyTree(*(void *)(a1 + 40), (void **)v9);
      }
      else
      {
        do
        {
          uint64_t v10 = *(void *)(v9 + 16);
          google::protobuf::Map<long long,double>::InnerMap::InsertUnique(v15, a1, (*(void *)(a1 + 8) - 1) & (*(void *)(a1 + 16) + *(void *)v9), (uint64_t *)v9);
          uint64_t v9 = v10;
        }
        while (v10);
      }
    }
    ++v8;
  }
  if (!*(void *)(a1 + 40))
  {
    operator delete(v6);
  }
}

void *CoreML::Specification::Int64ToDoubleMap::MergeFrom(CoreML::Specification::Int64ToDoubleMap *this, const CoreML::Specification::Int64ToDoubleMap *a2)
{
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  double result = google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>::begin(v10, *((void **)a2 + 5));
  uint64_t v6 = v10[0];
  if (v10[0])
  {
    uint64_t v7 = (char *)this + 24;
    do
    {
      unint64_t v8 = (google::protobuf::Arena **)v6[1];
      uint64_t v9 = v8[1];
      *google::protobuf::Map<long long,double>::operator[]((uint64_t)v7, v8) = v9;
      double result = google::protobuf::Map<long long,double>::InnerMap::iterator_base<google::protobuf::Map<long long,double>::KeyValuePair const>::operator++(v10);
      uint64_t v6 = v10[0];
    }
    while (v10[0]);
  }
  return result;
}

uint64_t CoreML::Specification::Int64ToDoubleMap::IsInitialized(CoreML::Specification::Int64ToDoubleMap *this)
{
  return 1;
}

void CoreML::Specification::Int64ToDoubleMap::Clear(CoreML::Specification::Int64ToDoubleMap *this)
{
}

void CoreML::Specification::Int64ToDoubleMap::New(CoreML::Specification::Int64ToDoubleMap *this, google::protobuf::Arena *a2)
{
}

void sub_19EB54C1C(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C407031D3CFLL);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::Int64ToDoubleMap>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    double result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *double result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::Int64ToDoubleMap>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::Int64ToDoubleMap>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::Int64ToDoubleMap::New(CoreML::Specification::Int64ToDoubleMap *this)
{
}

void *CoreML::Specification::Int64ToDoubleMap::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.Int64ToDoubleMap");
}

void CoreML::Specification::Int64ToDoubleMap::~Int64ToDoubleMap(CoreML::Specification::Int64ToDoubleMap *this)
{
  *(void *)this = &unk_1EF0D1A40;
  google::protobuf::Map<long long,double>::~Map((void *)this + 3);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);

  JUMPOUT(0x19F3C1920);
}

{
  *(void *)this = &unk_1EF0D1A40;
  google::protobuf::Map<long long,double>::~Map((void *)this + 3);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

void google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::~MapEntryLite(void *a1)
{
  *a1 = &unk_1EF0DC1F8;
  JUMPOUT(0x19F3C1920);
}

void *google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::~MapEntryLite(void *result)
{
  *double result = &unk_1EF0DC1F8;
  return result;
}

uint64_t CoreML::Specification::StringToDoubleMap::GetCachedSize(CoreML::Specification::StringToDoubleMap *this)
{
  return *((unsigned int *)this + 12);
}

void *CoreML::Specification::StringToDoubleMap::SerializeWithCachedSizes(void *this, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v3 = (unint64_t *)this[5];
  unint64_t v4 = *v3;
  if (*v3)
  {
    uint64_t v5 = (uint64_t)this;
    if (*((unsigned char *)a2 + 26))
    {
      if (v4 >= 2 && *((unsigned char *)a2 + 27) != 0) {
        goto LABEL_24;
      }
    }
    else if (v4 >= 2 && google::protobuf::io::CodedOutputStream::default_serialization_deterministic_ != 0)
    {
LABEL_24:
      operator new[]();
    }
    this = google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>::begin(v13, v3);
    uint64_t v7 = 0;
    while (v13[0])
    {
      uint64_t v9 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::Wrap(*((google::protobuf::Arena **)v13[0] + 3), (google::protobuf::Arena *)(*((void *)v13[0] + 3) + 24), *(google::protobuf::Arena **)(v5 + 16));
      if ((google::protobuf::Arena **)v7 != v9)
      {
        if (v7) {
          (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
        }
        uint64_t v7 = (uint64_t)v9;
      }
      google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)1, v7, a2, v8);
      uint64_t v10 = (unsigned int *)*((void *)v13[0] + 3);
      if (*((char *)v10 + 23) < 0)
      {
        uint64_t v10 = *(unsigned int **)v10;
        uint64_t v11 = *(void *)(*((void *)v13[0] + 3) + 8);
      }
      else
      {
        LODWORD(v11) = *((unsigned __int8 *)v10 + 23);
      }
      google::protobuf::internal::WireFormatLite::VerifyUtf8String(v10, v11, 1, (uint64_t)"CoreML.Specification.StringToDoubleMap.MapEntry.key");
      this = google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>::KeyValuePair const>::operator++(v13);
    }
    if (v7) {
      return (void *)(*(uint64_t (**)(uint64_t))(*(void *)v7 + 8))(v7);
    }
  }
  return this;
}

void sub_19EB550B0(_Unwind_Exception *a1)
{
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  MEMORY[0x19F3C1900](v1, 0x60C8044C4A2DFLL);
  _Unwind_Resume(a1);
}

uint64_t std::__introsort<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,double> const*> &,google::protobuf::MapPair<std::string,double> const**,false>(uint64_t result, char *a2, uint64_t a3, char a4)
{
  unint64_t v8 = (char *)result;
  while (2)
  {
    signed int v95 = a2 - 8;
    int v91 = a2 - 24;
    std::string::size_type v92 = a2 - 16;
    uint64_t v9 = v8;
    while (1)
    {
      while (1)
      {
        while (1)
        {
          unint64_t v10 = (unint64_t)v9;
          uint64_t v11 = a2 - v9;
          uint64_t v12 = (a2 - v9) >> 3;
          if (v5 || !v4)
          {
            switch(v12)
            {
              case 0:
              case 1:
                return result;
              case 2:
                uint64_t v41 = *(void **)v95;
                uint64_t v42 = *(void **)v9;
                double result = google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(*(void **)v95, *(void **)v9);
                if (result)
                {
                  *(void *)uint64_t v9 = v41;
                  *(void *)signed int v95 = v42;
                }
                break;
              case 3:
                double result = std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v9, (void **)v9 + 1, (void **)v95);
                break;
              case 4:
                double result = std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v9, (void **)v9 + 1, (void **)v9 + 2, (void **)v95);
                break;
              case 5:
                double result = std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v9, (void **)v9 + 1, (void **)v9 + 2, (void **)v9 + 3, (void **)v95);
                break;
              default:
                JUMPOUT(0);
            }
            return result;
          }
          if (v11 <= 191)
          {
            int v43 = v9 + 8;
            BOOL v45 = v9 == a2 || v43 == a2;
            if (a4)
            {
              if (!v45)
              {
                uint64_t v46 = 0;
                uint64_t v47 = v9;
                do
                {
                  int64_t v49 = *(void **)v47;
                  size_t v48 = (void *)*((void *)v47 + 1);
                  uint64_t v47 = v43;
                  double result = google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(v48, v49);
                  if (result)
                  {
                    uint64_t v50 = v46;
                    while (1)
                    {
                      *(void *)&v9[v50 + 8] = v49;
                      if (!v50) {
                        break;
                      }
                      int64_t v49 = *(void **)&v9[v50 - 8];
                      double result = google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(v48, v49);
                      v50 -= 8;
                      if ((result & 1) == 0)
                      {
                        int64_t v51 = &v9[v50 + 8];
                        goto LABEL_80;
                      }
                    }
                    int64_t v51 = v9;
LABEL_80:
                    *(void *)int64_t v51 = v48;
                  }
                  int v43 = v47 + 8;
                  v46 += 8;
                }
                while (v47 + 8 != a2);
              }
            }
            else if (!v45)
            {
              do
              {
                uint64_t v87 = *(void **)v10;
                int v86 = *(void **)(v10 + 8);
                unint64_t v10 = (unint64_t)v43;
                double result = google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(v86, v87);
                if (result)
                {
                  uint64_t v88 = (void *)v10;
                  do
                  {
                    void *v88 = v87;
                    uint64_t v87 = (void *)*(v88 - 2);
                    double result = google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(v86, v87);
                    --v88;
                  }
                  while ((result & 1) != 0);
                  void *v88 = v86;
                }
                int v43 = (char *)(v10 + 8);
              }
              while ((char *)(v10 + 8) != a2);
            }
            return result;
          }
          if (!a3)
          {
            if (v9 != a2)
            {
              int v98 = v9;
              int64_t v52 = (unint64_t)(v12 - 2) >> 1;
              int64_t v53 = v52;
              int v89 = a2;
              uint64_t v90 = a2 - v9;
              do
              {
                int64_t v54 = v53;
                if (v11 >= 16 && v52 >= v53)
                {
                  uint64_t v55 = (2 * v53) | 1;
                  long long v56 = &v98[8 * v55];
                  uint64_t v57 = 2 * v53 + 2;
                  int64_t v96 = v53;
                  if (v57 < v12)
                  {
                    uint64_t v58 = *(void **)v56;
                    uint64_t v60 = (void *)*((void *)v56 + 1);
                    BOOL v59 = google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(*(void **)v56, v60);
                    if (v59) {
                      v56 += 8;
                    }
                    else {
                      uint64_t v60 = v58;
                    }
                    if (v59) {
                      uint64_t v55 = v57;
                    }
                  }
                  else
                  {
                    uint64_t v60 = *(void **)v56;
                  }
                  uint64_t v61 = &v98[8 * v54];
                  BOOL v62 = *(void **)v61;
                  double result = google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(v60, *(void **)v61);
                  uint64_t v11 = v90;
                  if ((result & 1) == 0)
                  {
                    do
                    {
                      uint64_t v63 = v56;
                      *(void *)uint64_t v61 = v60;
                      if (v52 < v55) {
                        break;
                      }
                      uint64_t v64 = (2 * v55) | 1;
                      long long v56 = &v98[8 * v64];
                      uint64_t v65 = 2 * v55 + 2;
                      if (v65 < v12)
                      {
                        uint64_t v60 = *(void **)v56;
                        int v66 = (void *)*((void *)v56 + 1);
                        if (google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(*(void **)v56, v66))
                        {
                          uint64_t v60 = v66;
                          v56 += 8;
                          uint64_t v55 = v65;
                        }
                        else
                        {
                          uint64_t v55 = v64;
                        }
                      }
                      else
                      {
                        uint64_t v60 = *(void **)v56;
                        uint64_t v55 = (2 * v55) | 1;
                      }
                      double result = google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(v60, v62);
                      uint64_t v61 = v63;
                    }
                    while (!result);
                    *(void *)uint64_t v63 = v62;
                    a2 = v89;
                    uint64_t v11 = v90;
                    int64_t v54 = v96;
                  }
                }
                int64_t v53 = v54 - 1;
              }
              while (v54);
              uint64_t v67 = (unint64_t)v11 >> 3;
              uint64_t v68 = v98;
              do
              {
                uint64_t v69 = a2;
                uint64_t v70 = 0;
                uint64_t v71 = v67 - 2;
                int v94 = *(void **)v68;
                if (v67 < 2) {
                  uint64_t v71 = v67 - 1;
                }
                uint64_t v72 = v71 >> 1;
                do
                {
                  uint64_t v73 = &v68[8 * v70 + 8];
                  uint64_t v74 = (2 * v70) | 1;
                  uint64_t v75 = 2 * v70 + 2;
                  if (v75 >= v67)
                  {
                    uint64_t v78 = *(void **)v73;
                    uint64_t v70 = (2 * v70) | 1;
                  }
                  else
                  {
                    unint64_t v76 = *(void **)v73;
                    uint64_t v77 = *(void **)&v68[8 * v70 + 16];
                    double result = google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(*(void **)v73, v77);
                    if (result) {
                      uint64_t v78 = v77;
                    }
                    else {
                      uint64_t v78 = v76;
                    }
                    if (result)
                    {
                      v73 += 8;
                      uint64_t v70 = v75;
                    }
                    else
                    {
                      uint64_t v70 = v74;
                    }
                  }
                  *(void *)uint64_t v68 = v78;
                  uint64_t v68 = v73;
                }
                while (v70 <= v72);
                a2 = v69 - 8;
                if (v73 == v69 - 8)
                {
                  *(void *)uint64_t v73 = v94;
                }
                else
                {
                  *(void *)uint64_t v73 = *(void *)a2;
                  *(void *)a2 = v94;
                  uint64_t v79 = v73 - v98 + 8;
                  if (v79 >= 9)
                  {
                    unint64_t v80 = (unint64_t)((v79 >> 3) - 2) >> 1;
                    unint64_t v81 = &v98[8 * v80];
                    long long v82 = *(void **)v81;
                    long long v83 = *(void **)v73;
                    double result = google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(*(void **)v81, *(void **)v73);
                    if (result)
                    {
                      do
                      {
                        long long v84 = v81;
                        *(void *)uint64_t v73 = v82;
                        if (!v80) {
                          break;
                        }
                        unint64_t v80 = (v80 - 1) >> 1;
                        unint64_t v81 = &v98[8 * v80];
                        long long v82 = *(void **)v81;
                        double result = google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(*(void **)v81, v83);
                        uint64_t v73 = v84;
                      }
                      while ((result & 1) != 0);
                      *(void *)long long v84 = v83;
                    }
                  }
                }
                BOOL v85 = v67-- <= 2;
                uint64_t v68 = v98;
              }
              while (!v85);
            }
            return result;
          }
          unint64_t v13 = (unint64_t)v12 >> 1;
          BOOL v14 = &v9[8 * ((unint64_t)v12 >> 1)];
          if ((unint64_t)v11 < 0x401)
          {
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v14, (void **)v9, (void **)v95);
          }
          else
          {
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v9, (void **)v14, (void **)v95);
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v9 + 1, (void **)v14 - 1, (void **)v92);
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v9 + 2, (void **)&v9[8 * v13 + 8], (void **)v91);
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v14 - 1, (void **)v14, (void **)&v9[8 * v13 + 8]);
            uint64_t v15 = *(void **)v9;
            *(void *)uint64_t v9 = *(void *)v14;
            *(void *)BOOL v14 = v15;
          }
          --a3;
          uint64_t v16 = *(void **)v9;
          char v17 = v9;
          if (a4) {
            break;
          }
          char v17 = v9;
          if (google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(*((void **)v9 - 1), *(void **)v9))
          {
            break;
          }
          double result = google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(v16, *(void **)v95);
          if (result)
          {
            do
            {
              unint64_t v31 = (void *)*((void *)v9 + 1);
              v9 += 8;
              double result = google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(v16, v31);
            }
            while ((result & 1) == 0);
          }
          else
          {
            unint64_t v32 = v9 + 8;
            do
            {
              uint64_t v9 = v32;
              if (v32 >= a2) {
                break;
              }
              v32 += 8;
              double result = google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(v16, *(void **)v9);
            }
            while (!result);
          }
          uint64_t v33 = a2;
          if (v9 < a2)
          {
            uint64_t v33 = a2;
            do
            {
              uint64_t v34 = (void *)*((void *)v33 - 1);
              v33 -= 8;
              double result = google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(v16, v34);
            }
            while ((result & 1) != 0);
          }
          uint64_t v35 = a2;
          if (v9 < v33)
          {
            uint64_t v36 = *(void **)v9;
            int v37 = *(void **)v33;
            do
            {
              *(void *)uint64_t v9 = v37;
              *(void *)uint64_t v33 = v36;
              do
              {
                double v38 = (void *)*((void *)v9 + 1);
                v9 += 8;
                uint64_t v36 = v38;
              }
              while (!google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(v16, v38));
              do
              {
                BOOL v39 = (void *)*((void *)v33 - 1);
                v33 -= 8;
                int v37 = v39;
                double result = google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(v16, v39);
              }
              while ((result & 1) != 0);
            }
            while (v9 < v33);
          }
          BOOL v40 = v9 - 8;
          BOOL v4 = (unint64_t)(v9 - 8) >= v10;
          BOOL v5 = v9 - 8 == (char *)v10;
          a2 = v35;
          if (v9 - 8 != (char *)v10) {
            *(void *)unint64_t v10 = *(void *)v40;
          }
          a4 = 0;
          *(void *)BOOL v40 = v16;
        }
        do
        {
          unint64_t v18 = v17;
          unint64_t v20 = (void *)*((void *)v17 + 1);
          v17 += 8;
          long long v19 = v20;
        }
        while (google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(v20, v16));
        uint64_t v97 = a3;
        uint64_t v21 = a2;
        if (v18 == (char *)v10)
        {
          uint64_t v21 = a2;
          do
          {
            if (v17 >= v21) {
              break;
            }
            uint64_t v23 = (void *)*((void *)v21 - 1);
            v21 -= 8;
          }
          while (!google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(v23, v16));
        }
        else
        {
          do
          {
            unint64_t v22 = (void *)*((void *)v21 - 1);
            v21 -= 8;
          }
          while (!google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(v22, v16));
        }
        unint64_t v8 = (char *)v10;
        uint64_t v24 = a2;
        if (v17 < v21)
        {
          uint64_t v25 = *(void **)v21;
          uint64_t v26 = v17;
          uint64_t v27 = v21;
          do
          {
            *(void *)uint64_t v26 = v25;
            *(void *)uint64_t v27 = v19;
            do
            {
              unint64_t v18 = v26;
              uint64_t v28 = (void *)*((void *)v26 + 1);
              v26 += 8;
              long long v19 = v28;
            }
            while (google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(v28, v16));
            do
            {
              BOOL v29 = (void *)*((void *)v27 - 1);
              v27 -= 8;
              uint64_t v25 = v29;
            }
            while (!google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(v29, v16));
          }
          while (v26 < v27);
        }
        if (v18 != v8) {
          *(void *)unint64_t v8 = *(void *)v18;
        }
        *(void *)unint64_t v18 = v16;
        BOOL v4 = v17 >= v21;
        a2 = v24;
        a3 = v97;
        if (v4) {
          break;
        }
LABEL_31:
        double result = std::__introsort<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,double> const*> &,google::protobuf::MapPair<std::string,double> const**,false>(v8, v18, v97, a4 & 1);
        a4 = 0;
        uint64_t v9 = v18 + 8;
      }
      BOOL v30 = std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,double> const*> &,google::protobuf::MapPair<std::string,double> const**>((void **)v8, (void **)v18);
      uint64_t v9 = v18 + 8;
      double result = std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,double> const*> &,google::protobuf::MapPair<std::string,double> const**>((void **)v18 + 1, (void **)v24);
      if (result) {
        break;
      }
      if (!v30) {
        goto LABEL_31;
      }
    }
    a2 = v18;
    if (!v30) {
      continue;
    }
    return result;
  }
}

google::protobuf::Arena **google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::Wrap(google::protobuf::Arena *a1, google::protobuf::Arena *a2, google::protobuf::Arena *a3)
{
  if (!a3) {
    operator new();
  }
  result[1] = 0;
  result[2] = (google::protobuf::Arena *)&google::protobuf::internal::fixed_address_empty_string;
  result[3] = 0;
  result[4] = a3;
  *double result = (google::protobuf::Arena *)&unk_1EF0DBD60;
  result[6] = a1;
  result[7] = a2;
  *((_DWORD *)result + 1CoreML::Specification::Int64ToDoubleMap::New(this, 0) = 3;
  return result;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::MapEntryWrapper::value(uint64_t a1)
{
  return *(void *)(a1 + 56);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::MapEntryWrapper::key(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

char *google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::InternalSerializeWithCachedSizesToArray(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  BOOL v5 = (const void **)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 136))(a1);
  *a3 = 10;
  uint64_t v6 = google::protobuf::io::CodedOutputStream::WriteStringWithSizeToArray(v5, a3 + 1);
  uint64_t v7 = *(void *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 144))(a1);
  *uint64_t v6 = 17;
  *(void *)(v6 + 1) = v7;
  return v6 + 9;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::GetCachedSize(_DWORD *a1)
{
  int v2 = a1[10];
  if (v2)
  {
    uint64_t v5 = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 136))(a1);
    int v6 = *(unsigned __int8 *)(v5 + 23);
    if ((v6 & 0x80u) != 0) {
      int v6 = *(_DWORD *)(v5 + 8);
    }
    unsigned int v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((a1[10] & 2) != 0) {
      goto LABEL_3;
    }
LABEL_7:
    int v4 = 0;
    return v4 + v3;
  }
  unsigned int v3 = 0;
  if ((v2 & 2) == 0) {
    goto LABEL_7;
  }
LABEL_3:
  (*(void (**)(_DWORD *))(*(void *)a1 + 144))(a1);
  int v4 = 9;
  return v4 + v3;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::SerializeWithCachedSizes(uint64_t a1, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 136))(a1);
  google::protobuf::internal::WireFormatLite::WriteString(1u, v4, a2);
  double v6 = *(double *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 144))(a1);

  return google::protobuf::internal::WireFormatLite::WriteDouble(2, a2, v6, v5);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::ByteSizeLong(_DWORD *a1)
{
  int v2 = a1[10];
  if (v2)
  {
    uint64_t v5 = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 136))(a1);
    int v6 = *(unsigned __int8 *)(v5 + 23);
    if ((v6 & 0x80u) != 0) {
      int v6 = *(_DWORD *)(v5 + 8);
    }
    uint64_t v3 = (int)(v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6)) + 1;
    if ((a1[10] & 2) != 0) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v4 = 0;
    return v4 + v3;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) == 0) {
    goto LABEL_7;
  }
LABEL_3:
  (*(void (**)(_DWORD *))(*(void *)a1 + 144))(a1);
  uint64_t v4 = 9;
  return v4 + v3;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::MergePartialFromCodedStream(uint64_t a1, char **this, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = *this;
        if (*this >= this[1])
        {
          LODWORD(TagFallback) = 0;
        }
        else
        {
          unint64_t TagFallback = *v5;
          if ((*v5 & 0x80000000) == 0)
          {
            *this = v5 + 1;
            goto LABEL_6;
          }
        }
        unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)this, TagFallback);
LABEL_6:
        if (TagFallback != 10) {
          break;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v7 = *(long long **)(a1 + 16);
        if (v7 == &google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstance();
        }
        uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((unsigned __int8 **)this, (std::string *)v7);
        if (!result) {
          return result;
        }
        int v8 = *(_DWORD *)(a1 + 40) | 1;
        *(_DWORD *)(a1 + 4CoreML::Specification::Int64ToDoubleMap::New(this, 0) = v8;
        unint64_t v10 = *this;
        uint64_t v9 = this[1];
        if (*this < v9 && *v10 == 17)
        {
          uint64_t v11 = (unint64_t *)(v10 + 1);
          *this = (char *)v11;
          goto LABEL_19;
        }
      }
      if (TagFallback == 17) {
        break;
      }
      if (!TagFallback || (TagFallback & 7) == 4) {
        return 1;
      }
      if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)this, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
    }
      }
    int v8 = *(_DWORD *)(a1 + 40);
    uint64_t v11 = (unint64_t *)*this;
    uint64_t v9 = this[1];
LABEL_19:
    int v12 = v8 | 2;
    *(_DWORD *)(a1 + 4CoreML::Specification::Int64ToDoubleMap::New(this, 0) = v12;
    unint64_t v17 = 0;
    if ((int)v9 - (int)v11 < 8)
    {
      uint64_t result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)this, &v17);
      if (!result) {
        return result;
      }
      unint64_t v15 = v17;
      int v12 = *(_DWORD *)(a1 + 40);
      unint64_t v13 = *this;
      uint64_t v9 = this[1];
    }
    else
    {
      unint64_t v14 = *v11;
      unint64_t v13 = (char *)(v11 + 1);
      unint64_t v15 = v14;
      *this = v13;
    }
    *(void *)(a1 + 24) = v15;
    *(_DWORD *)(a1 + 4CoreML::Specification::Int64ToDoubleMap::New(this, 0) = v12 | 2;
  }
  while (v13 != v9 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10));
  *((_DWORD *)this + 8) = 0;
  uint64_t result = 1;
  *((unsigned char *)this + 36) = 1;
  return result;
}

double google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::CheckTypeAndMergeFrom(uint64_t a1, _DWORD *a2)
{
  int v2 = a2[10];
  if (v2)
  {
    if (v2)
    {
      uint64_t v5 = (std::string **)(a1 + 16);
      if (*(long long **)(a1 + 16) == &google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstance();
      }
      int v6 = (const std::string *)(*(uint64_t (**)(_DWORD *))(*(void *)a2 + 136))(a2);
      if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstance();
      }
      std::string::operator=(*v5, v6);
      *(_DWORD *)(a1 + 40) |= 1u;
      int v2 = a2[10];
    }
    if ((v2 & 2) != 0)
    {
      int v8 = (double *)(*(uint64_t (**)(_DWORD *))(*(void *)a2 + 144))(a2);
      double result = *v8;
      *(double *)(a1 + 24) = *v8;
      *(_DWORD *)(a1 + 40) |= 2u;
    }
  }
  return result;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::IsInitialized()
{
  return 1;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::Clear(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  if ((long long *)v1 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)uint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v1 = 0;
      *(unsigned char *)(v1 + 2google::protobuf::Map<long long,double>::clear((void *)this + 3) = 0;
    }
  }
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) &= 0xFFFFFFFC;
  return result;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::GetArena(uint64_t a1)
{
  return *(void *)(a1 + 32);
}

google::protobuf::Arena **google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::New(uint64_t a1, google::protobuf::Arena *a2)
{
  if (!a2) {
    operator new();
  }
  result[1] = 0;
  result[2] = (google::protobuf::Arena *)&google::protobuf::internal::fixed_address_empty_string;
  result[3] = 0;
  result[4] = a2;
  *((_DWORD *)result + 1CoreML::Specification::Int64ToDoubleMap::New(this, 0) = 0;
  uint64_t v5 = *(google::protobuf::Arena **)(a1 + 8);
  *double result = (google::protobuf::Arena *)&unk_1EF0DC738;
  result[1] = v5;
  return result;
}

void google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::New()
{
}

void *google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, (char *)&unk_19EC86ACE);
}

void google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::MapEntryWrapper::~MapEntryWrapper(void *a1)
{
  *a1 = &unk_1EF0DBE08;
  if ((void *)a1[1] != a1 && !a1[4]) {
    google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(a1[2]);
  }

  JUMPOUT(0x19F3C1920);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::value(uint64_t a1)
{
  if (!*(void *)(a1 + 8))
  {
    int v3 = 3;
    uint64_t v4 = "/Library/Caches/com.apple.xbs/Sources/CoreML/coremltools-internal/deps/protobuf/src/google/protobuf/map_entry_lite.h";
    int v5 = 162;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: default_instance_ != NULL: ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v3);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  return a1 + 24;
}

void sub_19EB56174(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::key(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

void google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::~MapEntryImpl(void *a1)
{
  *a1 = &unk_1EF0DBE08;
  if ((void *)a1[1] != a1 && !a1[4]) {
    google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(a1[2]);
  }

  JUMPOUT(0x19F3C1920);
}

void *google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::~MapEntryImpl(void *a1)
{
  *a1 = &unk_1EF0DBE08;
  if ((void *)a1[1] != a1 && !a1[4]) {
    google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(a1[2]);
  }
  return a1;
}

void *google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::MapEntryWrapper::~MapEntryWrapper(void *a1)
{
  *a1 = &unk_1EF0DBE08;
  if ((void *)a1[1] != a1 && !a1[4]) {
    google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(a1[2]);
  }
  return a1;
}

BOOL std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,double> const*> &,google::protobuf::MapPair<std::string,double> const**>(void **a1, void **a2)
{
  uint64_t v4 = a2 - a1;
  BOOL result = 1;
  switch(v4)
  {
    case 0:
    case 1:
      return result;
    case 2:
      int v6 = *(a2 - 1);
      uint64_t v7 = *a1;
      if (google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(v6, *a1))
      {
        *a1 = v6;
        *(a2 - 1) = v7;
      }
      return 1;
    case 3:
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>(a1, a1 + 1, a2 - 1);
      return 1;
    case 4:
      std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>(a1, a1 + 1, a1 + 2, a2 - 1);
      return 1;
    case 5:
      std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>(a1, a1 + 1, a1 + 2, a1 + 3, a2 - 1);
      return 1;
    default:
      int v8 = a1 + 2;
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>(a1, a1 + 1, a1 + 2);
      uint64_t v9 = a1 + 3;
      if (a1 + 3 == a2) {
        return 1;
      }
      int v10 = 0;
      uint64_t v11 = 24;
      break;
  }
  while (1)
  {
    int v12 = *v9;
    unint64_t v13 = *v8;
    if (google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(*v9, v13))
    {
      uint64_t v14 = v11;
      while (1)
      {
        *(void **)((char *)a1 + v14) = v13;
        uint64_t v15 = v14 - 8;
        if (v14 == 8) {
          break;
        }
        unint64_t v13 = *(void **)((char *)a1 + v14 - 16);
        BOOL v16 = google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(v12, v13);
        uint64_t v14 = v15;
        if (!v16)
        {
          unint64_t v17 = (void **)((char *)a1 + v15);
          goto LABEL_12;
        }
      }
      unint64_t v17 = a1;
LABEL_12:
      *unint64_t v17 = v12;
      if (++v10 == 8) {
        return v9 + 1 == a2;
      }
    }
    int v8 = v9;
    v11 += 8;
    if (++v9 == a2) {
      return 1;
    }
  }
}

uint64_t CoreML::Specification::StringToDoubleMap::ByteSizeLong(CoreML::Specification::StringToDoubleMap *this)
{
  int v2 = (void *)*((void *)this + 5);
  uint64_t v3 = *(unsigned int *)v2;
  google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>::begin(v8, v2);
  uint64_t v4 = 0;
  while (v8[0])
  {
    int v5 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::Wrap(*((google::protobuf::Arena **)v8[0] + 3), (google::protobuf::Arena *)(*((void *)v8[0] + 3) + 24), *((google::protobuf::Arena **)this + 2));
    if (v4 != v5)
    {
      if (v4) {
        (*((void (**)(google::protobuf::Arena **))*v4 + 1))(v4);
      }
      uint64_t v4 = v5;
    }
    uint64_t v6 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::ByteSizeLong(v4);
    v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
    google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>::KeyValuePair const>::operator++(v8);
  }
  if (v4) {
    (*((void (**)(google::protobuf::Arena **))*v4 + 1))(v4);
  }
  *((_DWORD *)this + 12) = v3;
  return v3;
}

void sub_19EB56578(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t CoreML::Specification::StringToDoubleMap::MergePartialFromCodedStream(CoreML::Specification::StringToDoubleMap *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v4 = (google::protobuf::Arena **)((char *)this + 16);
  int v5 = (void *)((char *)this + 24);
  while (1)
  {
    uint64_t v6 = *(char **)a2;
    if (*(void *)a2 >= *((void *)a2 + 1))
    {
      LODWORD(v7) = 0;
    }
    else
    {
      uint64_t v7 = *v6;
      if (*v6 >= 1)
      {
        *(void *)a2 = v6 + 1;
        unint64_t v8 = v7 | 0x100000000;
        if ((v8 & 0x100000000) == 0) {
          goto LABEL_12;
        }
        goto LABEL_8;
      }
    }
    unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
    unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
    if ((v8 & 0x100000000) == 0) {
      goto LABEL_12;
    }
LABEL_8:
    if (v8 == 10 && (v8 & 0xFFFFFFF8) == 8)
    {
      int v43 = v4;
      uint64_t v44 = v5;
      memset(&__p, 0, sizeof(__p));
      uint64_t v47 = 0;
      unint64_t v13 = *(char **)a2;
      if (*(void *)a2 < *((void *)a2 + 1) && (*v13 & 0x80000000) == 0)
      {
        int VarintSizeAsIntFallback = *v13;
        *(void *)a2 = v13 + 1;
        goto LABEL_24;
      }
      int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
      if (VarintSizeAsIntFallback < 0) {
        goto LABEL_83;
      }
LABEL_24:
      int v15 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      int v16 = *((_DWORD *)a2 + 13);
      BOOL v17 = __OFSUB__(v16--, 1);
      *((_DWORD *)a2 + 1google::protobuf::Map<long long,double>::clear((void *)this + 3) = v16;
      if (v16 < 0 == v17)
      {
        int v18 = v15;
        long long v19 = *(char **)a2;
        if (*(void *)a2 < *((void *)a2 + 1) && *v19 == 10)
        {
          *(void *)a2 = v19 + 1;
          if (!google::protobuf::internal::WireFormatLite::ReadBytes((unsigned __int8 **)a2, &__p)) {
            goto LABEL_83;
          }
          if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) >= 1 && **(unsigned char **)a2 == 17)
          {
            uint64_t v20 = *(void *)v44[2];
            uint64_t v46 = google::protobuf::Map<std::string,double>::operator[]((uint64_t)v44, (uint64_t)&__p);
            if (v20 != *(void *)v44[2])
            {
              google::protobuf::io::CodedInputStream::Skip(a2, 1u);
              uint64_t v21 = v46;
              unint64_t v48 = 0;
              unint64_t v22 = *(unint64_t **)a2;
              uint64_t v23 = (char *)*((void *)a2 + 1);
              if ((int)(v23 - *(void *)a2) < 8)
              {
                if (google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v48))
                {
                  unint64_t v26 = v48;
                  uint64_t v24 = *(char **)a2;
                  uint64_t v23 = (char *)*((void *)a2 + 1);
                  goto LABEL_33;
                }
                google::protobuf::Map<std::string,long long>::erase(v44, (unsigned __int8 *)&__p);
                goto LABEL_83;
              }
              unint64_t v25 = *v22;
              uint64_t v24 = (char *)(v22 + 1);
              unint64_t v26 = v25;
              *(void *)a2 = v24;
LABEL_33:
              void *v21 = v26;
              if (v24 == v23 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
              {
                *((_DWORD *)a2 + 8) = 0;
                *((unsigned char *)a2 + 36) = 1;
LABEL_60:
                if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v18))
                {
                  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                    p_p = (unsigned int *)&__p;
                  }
                  else {
                    p_p = (unsigned int *)__p.__r_.__value_.__r.__words[0];
                  }
                  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                    int v39 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
                  }
                  else {
                    int v39 = __p.__r_.__value_.__r.__words[1];
                  }
                  BOOL v40 = google::protobuf::internal::WireFormatLite::VerifyUtf8String(p_p, v39, 0, (uint64_t)"CoreML.Specification.StringToDoubleMap.MapEntry.key");
                  BOOL v41 = v40;
                  if (v40) {
                    int v12 = 0;
                  }
                  else {
                    int v12 = 6;
                  }
                  goto LABEL_70;
                }
                goto LABEL_83;
              }
              uint64_t v27 = google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::NewEntry(*v43);
              if (v47 != v27)
              {
                if (v47) {
                  (*((void (**)(void))*v47 + 1))();
                }
                uint64_t v47 = v27;
              }
              uint64_t v28 = v46;
              BOOL v29 = v44;
              *((_DWORD *)v27 + 10) |= 2u;
              v27[3] = *v28;
              google::protobuf::Map<std::string,long long>::erase(v29, (unsigned __int8 *)&__p);
              BOOL v30 = v47;
              *((_DWORD *)v47 + 10) |= 1u;
              unint64_t v31 = v30[2];
              if (v31 == (google::protobuf::Arena *)&google::protobuf::internal::fixed_address_empty_string) {
                google::protobuf::internal::ArenaStringPtr::CreateInstance();
              }
              if (*((char *)v31 + 23) < 0) {
                operator delete(*(void **)v31);
              }
              long long v32 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
              *((void *)v31 + 2) = *((void *)&__p.__r_.__value_.__l + 2);
              *(_OWORD *)unint64_t v31 = v32;
              *((unsigned char *)&__p.__r_.__value_.__s + 2google::protobuf::Map<long long,double>::clear((void *)this + 3) = 0;
              __p.__r_.__value_.__s.__data_[0] = 0;
              int v33 = (*((uint64_t (**)(google::protobuf::Arena **, google::protobuf::io::CodedInputStream *))*v47
                     + 11))(v47, a2);
              if (v33) {
                v34.n128_f64[0] = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::Map<std::string,double>>::UseKeyAndValueFromEntry((uint64_t)&v43);
              }
              if (!(*((uint64_t (**)(google::protobuf::Arena **, __n128))*v47 + 5))(v47, v34))
              {
LABEL_45:
                if (v33) {
                  goto LABEL_60;
                }
                goto LABEL_83;
              }
LABEL_59:
              uint64_t v47 = 0;
              if (v33) {
                goto LABEL_60;
              }
              BOOL v41 = 0;
              int v12 = 6;
LABEL_72:
              if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
                operator delete(__p.__r_.__value_.__l.__data_);
              }
              if (!v41) {
                goto LABEL_18;
              }
              goto LABEL_17;
            }
          }
        }
        else
        {
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
          memset(&__p, 0, sizeof(__p));
        }
        uint64_t v35 = google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::NewEntry(*v43);
        if (v47 != v35)
        {
          if (v47) {
            (*((void (**)(void))*v47 + 1))();
          }
          uint64_t v47 = v35;
        }
        uint64_t v36 = (long long *)v35[2];
        *((_DWORD *)v35 + 10) |= 1u;
        if (v36 == &google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstance();
        }
        std::string::operator=((std::string *)v36, &__p);
        int v33 = (*((uint64_t (**)(google::protobuf::Arena **, google::protobuf::io::CodedInputStream *))*v47 + 11))(v47, a2);
        if (v33) {
          v37.n128_f64[0] = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::Map<std::string,double>>::UseKeyAndValueFromEntry((uint64_t)&v43);
        }
        if (!(*((uint64_t (**)(google::protobuf::Arena **, __n128))*v47 + 5))(v47, v37)) {
          goto LABEL_45;
        }
        goto LABEL_59;
      }
LABEL_83:
      BOOL v41 = 0;
      int v12 = 6;
LABEL_70:
      if (v47) {
        (*((void (**)(google::protobuf::Arena **))*v47 + 1))(v47);
      }
      goto LABEL_72;
    }
LABEL_12:
    if (!v8 || (v8 & 7) == 4) {
      return 1;
    }
    if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3))return 0; {
LABEL_17:
    }
    int v12 = 0;
LABEL_18:
    if (v12) {
      return 0;
    }
  }
}

void sub_19EB56B04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

google::protobuf::Arena **google::protobuf::Map<std::string,double>::operator[](uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)(a1 + 16);
  if (*(char *)(a2 + 23) < 0) {
    std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string __p = *(std::string *)a2;
  }
  std::string::size_type v23 = 0;
  google::protobuf::Map<std::string,std::string>::InnerMap::FindHelper(v25, (uint64_t)v4, (unsigned __int8 *)&__p, 0);
  uint64_t v6 = v25[0];
  if (v25[0]) {
    goto LABEL_18;
  }
  unint64_t v7 = v4[1];
  unint64_t v8 = *v4 + 1;
  unint64_t v9 = ((3 * v7) >> 2) & 0xFFFFFFFFFFFFFFFLL;
  if (v9 <= v8)
  {
    if (v7 <= 0x800000000000000)
    {
      uint64_t v19 = 2 * v7;
LABEL_33:
      google::protobuf::Map<std::string,std::string>::InnerMap::Resize((uint64_t)v4, v19, v5);
      google::protobuf::Map<std::string,std::string>::InnerMap::FindHelper(v24, (uint64_t)v4, (unsigned __int8 *)&__p, 0);
      uint64_t v11 = v24[3];
      goto LABEL_11;
    }
  }
  else if (v7 >= 9 && (12 * v7) >> 6 >= v8)
  {
    char v20 = 0;
    unint64_t v21 = ((5 * v8) >> 2) + 1;
    do
      ++v20;
    while (v21 << v20 < v9);
    uint64_t v19 = v7 >> v20 <= 8 ? 8 : v7 >> v20;
    if (v19 != v7) {
      goto LABEL_33;
    }
  }
  uint64_t v11 = v25[3];
LABEL_11:
  int v12 = (google::protobuf::Arena *)v4[5];
  if (v12) {
    Aligned = (std::string *)google::protobuf::Arena::AllocateAligned(v12, MEMORY[0x1E4FBA3A0], 40);
  }
  else {
    Aligned = (std::string *)operator new(0x28uLL);
  }
  uint64_t v14 = (std::string::__raw *)Aligned;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(Aligned, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
  }
  else
  {
    long long v15 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    Aligned->__r_.__value_.__r.__words[2] = __p.__r_.__value_.__r.__words[2];
    *(_OWORD *)&Aligned->__r_.__value_.__l.__data_ = v15;
  }
  v14[1].__words[0] = v23;
  google::protobuf::Map<std::string,std::string>::InnerMap::InsertUnique(v24, (uint64_t)v4, v11, v14);
  ++*v4;
  uint64_t v6 = v24[0];
LABEL_18:
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  int v16 = *(google::protobuf::Arena ***)(v6 + 24);
  if (!v16)
  {
    if (!*(void *)a1) {
      operator new();
    }
    int v16 = google::protobuf::Arena::AllocateAligned(*(google::protobuf::Arena **)a1, MEMORY[0x1E4FBA3A0], 32);
    BOOL v17 = *(google::protobuf::Arena **)a1;
    v16[1] = 0;
    v16[2] = 0;
    void *v16 = 0;
    google::protobuf::Arena::OwnDestructor<std::string>((google::protobuf::Arena **)v17, (google::protobuf::Arena *)v16);
    v16[3] = 0;
    std::string::operator=((std::string *)v16, (const std::string *)a2);
    *(void *)(v6 + 24) = v16;
  }
  return v16 + 3;
}

void sub_19EB56D68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  MEMORY[0x19F3C1920](v14, 0x1012C4092066FB6);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::NewEntry(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = 0;
  result[2] = (google::protobuf::Arena *)&google::protobuf::internal::fixed_address_empty_string;
  result[3] = 0;
  result[4] = a1;
  *((_DWORD *)result + 1CoreML::Specification::Int64ToDoubleMap::New(this, 0) = 0;
  *BOOL result = (google::protobuf::Arena *)&unk_1EF0DC738;
  return result;
}

double google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::Map<std::string,double>>::UseKeyAndValueFromEntry(uint64_t a1)
{
  int v2 = (const std::string *)(*(uint64_t (**)(void))(**(void **)(a1 + 48) + 136))(*(void *)(a1 + 48));
  std::string::operator=((std::string *)(a1 + 16), v2);
  uint64_t v3 = google::protobuf::Map<std::string,double>::operator[](*(void *)(a1 + 8), a1 + 16);
  *(void *)(a1 + 4CoreML::Specification::Int64ToDoubleMap::New(this, 0) = v3;
  uint64_t v4 = *(void *)(a1 + 48);
  *(_DWORD *)(v4 + 40) |= 2u;
  double result = *(double *)(v4 + 24);
  *(double *)uint64_t v3 = result;
  return result;
}

void *CoreML::Specification::StringToDoubleMap::MergeFrom(CoreML::Specification::StringToDoubleMap *this, const CoreML::Specification::StringToDoubleMap *a2)
{
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  double result = google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>::begin(v10, *((void **)a2 + 5));
  uint64_t v6 = v10[0];
  if (v10[0])
  {
    unint64_t v7 = (char *)this + 24;
    do
    {
      uint64_t v8 = *((void *)v6 + 3);
      unint64_t v9 = *(google::protobuf::Arena **)(v8 + 24);
      *google::protobuf::Map<std::string,double>::operator[]((uint64_t)v7, v8) = v9;
      double result = google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>::KeyValuePair const>::operator++(v10);
      uint64_t v6 = v10[0];
    }
    while (v10[0]);
  }
  return result;
}

uint64_t CoreML::Specification::StringToDoubleMap::IsInitialized(CoreML::Specification::StringToDoubleMap *this)
{
  return 1;
}

void CoreML::Specification::StringToDoubleMap::Clear(CoreML::Specification::StringToDoubleMap *this)
{
}

void CoreML::Specification::StringToDoubleMap::New(CoreML::Specification::StringToDoubleMap *this, google::protobuf::Arena *a2)
{
}

void sub_19EB56F94(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C407031D3CFLL);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::StringToDoubleMap>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    double result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *double result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::StringToDoubleMap>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::StringToDoubleMap>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::StringToDoubleMap::New(CoreML::Specification::StringToDoubleMap *this)
{
}

void *CoreML::Specification::StringToDoubleMap::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.StringToDoubleMap");
}

void CoreML::Specification::StringToDoubleMap::~StringToDoubleMap(CoreML::Specification::StringToDoubleMap *this)
{
  *(void *)this = &unk_1EF0D2A48;
  google::protobuf::Map<std::string,long long>::~Map((void *)this + 3);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);

  JUMPOUT(0x19F3C1920);
}

{
  *(void *)this = &unk_1EF0D2A48;
  google::protobuf::Map<std::string,long long>::~Map((void *)this + 3);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

void google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::~MapEntryLite(void *a1)
{
  *a1 = &unk_1EF0DBE08;
  if ((void *)a1[1] != a1 && !a1[4]) {
    google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(a1[2]);
  }

  JUMPOUT(0x19F3C1920);
}

void *google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::~MapEntryLite(void *a1)
{
  *a1 = &unk_1EF0DBE08;
  if ((void *)a1[1] != a1 && !a1[4]) {
    google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(a1[2]);
  }
  return a1;
}

void *google::protobuf::Map<long long,std::string>::~Map(void *a1)
{
  google::protobuf::Map<long long,std::string>::clear(a1);
  if (!*a1)
  {
    uint64_t v2 = a1[2];
    if (v2)
    {
      uint64_t v3 = google::protobuf::Map<long long,double>::InnerMap::~InnerMap(v2);
      MEMORY[0x19F3C1920](v3, 0x10E0C40D5F42F35);
    }
  }
  return a1;
}

void google::protobuf::Map<long long,std::string>::clear(void *a1)
{
  uint64_t v1 = (void *)a1[2];
  unint64_t v2 = v1[3];
  unint64_t v3 = v1[1];
  if (v3 > v2)
  {
    uint64_t v5 = v1[4];
    while (1)
    {
      uint64_t v6 = *(void *)(v5 + 8 * v2);
      if (v6) {
        break;
      }
      if (v3 == ++v2) {
        return;
      }
    }
    if (v6 != *(void *)(v5 + 8 * (v2 ^ 1)) || (uint64_t v6 = *(void *)(*(void *)v6 + 32)) != 0)
    {
      do
      {
        v7[0] = v6;
        v7[1] = (uint64_t)v1;
        v7[2] = v2;
        google::protobuf::Map<long long,std::string>::erase((uint64_t)v8, a1, v7);
        uint64_t v6 = v8[0];
        uint64_t v1 = (void *)v8[1];
        unint64_t v2 = v8[2];
      }
      while (v8[0]);
    }
  }
}

__n128 google::protobuf::Map<long long,std::string>::erase(uint64_t a1, void *a2, uint64_t *a3)
{
  uint64_t v6 = *a3;
  if (!*a2)
  {
    uint64_t v7 = *(void *)(v6 + 8);
    if (v7)
    {
      if (*(char *)(v7 + 31) < 0) {
        operator delete(*(void **)(v7 + 8));
      }
      MEMORY[0x19F3C1920](v7, 0x1012C404EF22A49);
      uint64_t v6 = *a3;
    }
  }
  __n128 v27 = *(__n128 *)a3;
  unint64_t v28 = a3[2];
  uint64_t v8 = *(void *)(v6 + 16);
  if (v8) {
    goto LABEL_7;
  }
  BOOL v29 = 0;
  if (google::protobuf::Map<long long,double>::InnerMap::iterator_base<google::protobuf::Map<long long,double>::KeyValuePair>::revalidate_if_necessary((uint64_t)a3, &v29))
  {
    unint64_t v9 = a3[2] + 1;
  }
  else
  {
    uint64_t v10 = a3[2];
    uint64_t v11 = *(void *)(*(void *)(a3[1] + 32) + 8 * v10);
    int v12 = v29;
    unint64_t v13 = (void *)v29[1];
    if (v13)
    {
      do
      {
        uint64_t v14 = v13;
        unint64_t v13 = (void *)*v13;
      }
      while (v13);
    }
    else
    {
      do
      {
        uint64_t v14 = (void *)v12[2];
        BOOL v15 = *v14 == (void)v12;
        int v12 = v14;
      }
      while (!v15);
    }
    BOOL v29 = v14;
    if (v14 != (void *)(v11 + 8))
    {
      uint64_t v8 = v14[4];
LABEL_7:
      *a3 = v8;
      goto LABEL_19;
    }
    unint64_t v9 = v10 + 2;
  }
  google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>::KeyValuePair const>::SearchFrom(a3, v9);
LABEL_19:
  int v16 = (void *)a2[2];
  BOOL v29 = 0;
  BOOL v17 = google::protobuf::Map<long long,double>::InnerMap::iterator_base<google::protobuf::Map<long long,double>::KeyValuePair>::revalidate_if_necessary((uint64_t)&v27, &v29);
  unint64_t v18 = v28;
  uint64_t v19 = (void *)v27.n128_u64[0];
  uint64_t v20 = v16[4];
  uint64_t v21 = *(void *)(v20 + 8 * v28);
  if (v17)
  {
    uint64_t v22 = google::protobuf::Map<long long,double>::InnerMap::EraseFromLinkedList(v27.n128_i64[0], *(void *)(v20 + 8 * v28));
LABEL_25:
    *(void *)(v16[4] + 8 * v18) = v22;
    goto LABEL_26;
  }
  std::string::size_type v23 = (uint64_t *)std::__tree<long long *,google::protobuf::Map<long long,double>::InnerMap::KeyCompare,google::protobuf::Map<long long,double>::MapAllocator<long long *>>::find<long long *>(v21, (uint64_t *)v29[4]);
  if ((uint64_t *)(v21 + 8) != v23) {
    std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::erase(v21, v23);
  }
  if (!*(void *)(v21 + 24))
  {
    google::protobuf::Map<std::string,std::string>::InnerMap::DestroyTree(v16[5], (void **)v21);
    uint64_t v22 = 0;
    *(void *)(v16[4] + ((8 * v18) | 8)) = 0;
    v18 &= ~1uLL;
    goto LABEL_25;
  }
LABEL_26:
  if (!v16[5]) {
    operator delete(v19);
  }
  --*v16;
  if (v18 == v16[3])
  {
    unint64_t v25 = v16[1];
    if (v18 < v25)
    {
      uint64_t v26 = v16[4];
      do
      {
        if (*(void *)(v26 + 8 * v18)) {
          break;
        }
        v16[3] = ++v18;
      }
      while (v25 != v18);
    }
  }
  __n128 result = *(__n128 *)a3;
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(void *)(a1 + 16) = a3[2];
  return result;
}

uint64_t CoreML::Specification::Int64ToStringMap::GetCachedSize(CoreML::Specification::Int64ToStringMap *this)
{
  return *((unsigned int *)this + 12);
}

void *CoreML::Specification::Int64ToStringMap::SerializeWithCachedSizes(void *this, google::protobuf::io::CodedOutputStream *a2)
{
  unint64_t v3 = (unint64_t *)this[5];
  unint64_t v4 = *v3;
  if (*v3)
  {
    uint64_t v5 = (uint64_t)this;
    if (*((unsigned char *)a2 + 26))
    {
      if (v4 >= 2 && *((unsigned char *)a2 + 27) != 0) {
        goto LABEL_24;
      }
    }
    else if (v4 >= 2 && google::protobuf::io::CodedOutputStream::default_serialization_deterministic_ != 0)
    {
LABEL_24:
      operator new[]();
    }
    this = google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>::begin(v14, v3);
    uint64_t v7 = 0;
    while (v14[0])
    {
      unint64_t v9 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::Wrap(*((google::protobuf::Arena **)v14[0] + 1), (google::protobuf::Arena *)(v14[0][1] + 8), *(google::protobuf::Arena **)(v5 + 16));
      if ((google::protobuf::Arena **)v7 != v9)
      {
        if (v7) {
          (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
        }
        uint64_t v7 = (uint64_t)v9;
      }
      google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)1, v7, a2, v8);
      uint64_t v10 = v14[0][1];
      if (*(char *)(v10 + 31) < 0)
      {
        uint64_t v11 = *(unsigned int **)(v10 + 8);
        uint64_t v12 = *(void *)(v10 + 16);
      }
      else
      {
        uint64_t v11 = (unsigned int *)(v10 + 8);
        LODWORD(v12) = *(unsigned __int8 *)(v10 + 31);
      }
      google::protobuf::internal::WireFormatLite::VerifyUtf8String(v11, v12, 1, (uint64_t)"CoreML.Specification.Int64ToStringMap.MapEntry.value");
      this = google::protobuf::Map<long long,double>::InnerMap::iterator_base<google::protobuf::Map<long long,double>::KeyValuePair const>::operator++(v14);
    }
    if (v7) {
      return (void *)(*(uint64_t (**)(uint64_t))(*(void *)v7 + 8))(v7);
    }
  }
  return this;
}

void sub_19EB577D0(_Unwind_Exception *a1)
{
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  MEMORY[0x19F3C1900](v1, 0x1060C80832E3BDALL);
  _Unwind_Resume(a1);
}

double std::__introsort<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,std::string> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,std::string> const*>*,false>(unint64_t a1, void *a2, uint64_t a3, char a4)
{
  while (2)
  {
    uint64_t v10 = (long long *)(a2 - 2);
    unint64_t v11 = a1;
    while (1)
    {
      while (1)
      {
        while (1)
        {
          a1 = v11;
          uint64_t v12 = (uint64_t)a2 - v11;
          unint64_t v13 = (uint64_t)((uint64_t)a2 - v11) >> 4;
          if (v5 || !v4)
          {
            switch(v13)
            {
              case 0uLL:
              case 1uLL:
                return *(double *)&v16;
              case 2uLL:
                if (*(void *)v10 < *(void *)v11)
                {
                  long long v84 = *(_OWORD *)v11;
                  *(_OWORD *)unint64_t v11 = *v10;
                  *(void *)&long long v16 = v84;
                  *uint64_t v10 = v84;
                }
                break;
              case 3uLL:
                std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>((long long *)v11, (uint64_t *)(v11 + 16), a2 - 2);
                break;
              case 4uLL:
                *(void *)&long long v16 = std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>((long long *)v11, (uint64_t *)(v11 + 16), (uint64_t *)(v11 + 32), (_OWORD *)a2 - 1).n128_u64[0];
                break;
              case 5uLL:
                *(void *)&long long v16 = std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>((long long *)v11, (uint64_t *)(v11 + 16), (uint64_t *)(v11 + 32), (__n128 *)(v11 + 48), (__n128 *)a2 - 1).n128_u64[0];
                break;
              default:
                JUMPOUT(0);
            }
            return *(double *)&v16;
          }
          if (v12 <= 383)
          {
            double v38 = (void *)(v11 + 16);
            BOOL v40 = (void *)v11 == a2 || v38 == a2;
            if (a4)
            {
              if (!v40)
              {
                uint64_t v41 = 0;
                uint64_t v42 = (void *)v11;
                do
                {
                  int v43 = v38;
                  uint64_t v44 = v42[2];
                  if (v44 < *v42)
                  {
                    uint64_t v45 = v42[3];
                    uint64_t v46 = v41;
                    while (1)
                    {
                      long long v16 = *(_OWORD *)(v11 + v46);
                      *(_OWORD *)(v11 + v46 + 16) = v16;
                      if (!v46) {
                        break;
                      }
                      uint64_t v47 = *(void *)(v11 + v46 - 16);
                      v46 -= 16;
                      if (v44 >= v47)
                      {
                        unint64_t v48 = (void *)(v11 + v46 + 16);
                        goto LABEL_80;
                      }
                    }
                    unint64_t v48 = (void *)v11;
LABEL_80:
                    *unint64_t v48 = v44;
                    v48[1] = v45;
                  }
                  double v38 = v43 + 2;
                  v41 += 16;
                  uint64_t v42 = v43;
                }
                while (v43 + 2 != a2);
              }
            }
            else if (!v40)
            {
              do
              {
                unint64_t v76 = (unint64_t)v38;
                uint64_t v77 = *(void *)(a1 + 16);
                if (v77 < *(void *)a1)
                {
                  uint64_t v78 = *(void *)(a1 + 24);
                  unint64_t v79 = v76;
                  do
                  {
                    long long v16 = *(_OWORD *)(v79 - 16);
                    *(_OWORD *)unint64_t v79 = v16;
                    uint64_t v80 = *(void *)(v79 - 32);
                    v79 -= 16;
                  }
                  while (v77 < v80);
                  *(void *)unint64_t v79 = v77;
                  *(void *)(v79 + 8) = v78;
                }
                double v38 = (void *)(v76 + 16);
                a1 = v76;
              }
              while ((void *)(v76 + 16) != a2);
            }
            return *(double *)&v16;
          }
          if (!a3)
          {
            if ((void *)v11 != a2)
            {
              int64_t v49 = (v13 - 2) >> 1;
              int64_t v50 = v49;
              do
              {
                int64_t v51 = v50;
                if (v49 >= v50)
                {
                  uint64_t v52 = (2 * v50) | 1;
                  int64_t v53 = (void *)(v11 + 16 * v52);
                  if (2 * v51 + 2 < (uint64_t)v13)
                  {
                    uint64_t v55 = v53[2];
                    BOOL v54 = *v53 < v55;
                    if (*v53 > v55) {
                      uint64_t v55 = *v53;
                    }
                    if (v54)
                    {
                      v53 += 2;
                      uint64_t v52 = 2 * v51 + 2;
                    }
                  }
                  else
                  {
                    uint64_t v55 = *v53;
                  }
                  long long v56 = (void *)(v11 + 16 * v51);
                  uint64_t v57 = *v56;
                  if (v55 >= *v56)
                  {
                    uint64_t v58 = v56[1];
                    do
                    {
                      BOOL v59 = v56;
                      long long v56 = v53;
                      _OWORD *v59 = *(_OWORD *)v53;
                      if (v49 < v52) {
                        break;
                      }
                      uint64_t v60 = (2 * v52) | 1;
                      int64_t v53 = (void *)(v11 + 16 * v60);
                      uint64_t v52 = 2 * v52 + 2;
                      if (v52 < (uint64_t)v13)
                      {
                        uint64_t v63 = *v53;
                        uint64_t v61 = v53[2];
                        BOOL v62 = *v53 < v61;
                        if (*v53 <= v61) {
                          uint64_t v63 = v53[2];
                        }
                        if (*v53 < v61) {
                          v53 += 2;
                        }
                        if (!v62) {
                          uint64_t v52 = v60;
                        }
                      }
                      else
                      {
                        uint64_t v63 = *v53;
                        uint64_t v52 = v60;
                      }
                    }
                    while (v63 >= v57);
                    *long long v56 = v57;
                    v56[1] = v58;
                  }
                }
                int64_t v50 = v51 - 1;
              }
              while (v51);
              uint64_t v64 = (unint64_t)v12 >> 4;
              do
              {
                uint64_t v65 = 0;
                long long v85 = *(_OWORD *)v11;
                int v66 = (_OWORD *)v11;
                do
                {
                  uint64_t v67 = &v66[v65 + 1];
                  uint64_t v68 = (2 * v65) | 1;
                  uint64_t v69 = 2 * v65 + 2;
                  if (v69 < v64 && *v67 < v67[2])
                  {
                    v67 += 2;
                    uint64_t v68 = v69;
                  }
                  _OWORD *v66 = *(_OWORD *)v67;
                  int v66 = v67;
                  uint64_t v65 = v68;
                }
                while (v68 <= (uint64_t)((unint64_t)(v64 - 2) >> 1));
                a2 -= 2;
                if (v67 == a2)
                {
                  *(void *)&long long v16 = v85;
                  *(_OWORD *)uint64_t v67 = v85;
                }
                else
                {
                  *(_OWORD *)uint64_t v67 = *(_OWORD *)a2;
                  *(void *)&long long v16 = v85;
                  *(_OWORD *)a2 = v85;
                  uint64_t v70 = (uint64_t)v67 - v11 + 16;
                  if (v70 >= 17)
                  {
                    unint64_t v71 = (((unint64_t)v70 >> 4) - 2) >> 1;
                    uint64_t v72 = (_OWORD *)(v11 + 16 * v71);
                    uint64_t v73 = *v67;
                    if (*(void *)v72 < *v67)
                    {
                      uint64_t v74 = v67[1];
                      do
                      {
                        uint64_t v75 = v67;
                        uint64_t v67 = v72;
                        long long v16 = *v72;
                        *uint64_t v75 = *v72;
                        if (!v71) {
                          break;
                        }
                        unint64_t v71 = (v71 - 1) >> 1;
                        uint64_t v72 = (_OWORD *)(v11 + 16 * v71);
                      }
                      while (*(void *)v72 < v73);
                      *uint64_t v67 = v73;
                      v67[1] = v74;
                    }
                  }
                }
                BOOL v54 = v64-- <= 2;
              }
              while (!v54);
            }
            return *(double *)&v16;
          }
          unint64_t v14 = v13 >> 1;
          BOOL v15 = (uint64_t *)(v11 + 16 * (v13 >> 1));
          if ((unint64_t)v12 >= 0x801)
          {
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>((long long *)a1, (uint64_t *)(a1 + 16 * (v13 >> 1)), a2 - 2);
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>((long long *)(a1 + 16), v15 - 2, a2 - 4);
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>((long long *)(a1 + 32), (uint64_t *)(a1 + 16 + 16 * v14), a2 - 6);
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>((long long *)v15 - 1, v15, (uint64_t *)(a1 + 16 + 16 * v14));
            long long v82 = *(_OWORD *)a1;
            *(_OWORD *)a1 = *(_OWORD *)v15;
            *(void *)&long long v16 = v82;
            *(_OWORD *)BOOL v15 = v82;
          }
          else
          {
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>((long long *)(a1 + 16 * (v13 >> 1)), (uint64_t *)a1, a2 - 2);
          }
          --a3;
          uint64_t v17 = *(void *)a1;
          if ((a4 & 1) != 0 || *(void *)(a1 - 16) < v17) {
            break;
          }
          if (v17 >= *(void *)v10)
          {
            unint64_t v31 = a1 + 16;
            do
            {
              unint64_t v11 = v31;
              if (v31 >= (unint64_t)a2) {
                break;
              }
              v31 += 16;
            }
            while (v17 >= *(void *)v11);
          }
          else
          {
            unint64_t v11 = a1;
            do
            {
              uint64_t v30 = *(void *)(v11 + 16);
              v11 += 16;
            }
            while (v17 >= v30);
          }
          long long v32 = (long long *)a2;
          if (v11 < (unint64_t)a2)
          {
            long long v32 = (long long *)a2;
            do
              uint64_t v33 = *((void *)v32-- - 2);
            while (v17 < v33);
          }
          uint64_t v34 = *(void *)(a1 + 8);
          while (v11 < (unint64_t)v32)
          {
            long long v83 = *(_OWORD *)v11;
            *(_OWORD *)unint64_t v11 = *v32;
            *(void *)&long long v16 = v83;
            *long long v32 = v83;
            do
            {
              uint64_t v35 = *(void *)(v11 + 16);
              v11 += 16;
            }
            while (v17 >= v35);
            do
              uint64_t v36 = *((void *)v32-- - 2);
            while (v17 < v36);
          }
          __n128 v37 = (long long *)(v11 - 16);
          BOOL v4 = v11 - 16 >= a1;
          BOOL v5 = v11 - 16 == a1;
          if (v11 - 16 != a1)
          {
            long long v16 = *v37;
            *(_OWORD *)a1 = *v37;
          }
          a4 = 0;
          *(void *)(v11 - 16) = v17;
          *(void *)(v11 - 8) = v34;
        }
        uint64_t v18 = *(void *)(a1 + 8);
        unint64_t v19 = a1;
        do
        {
          unint64_t v20 = v19;
          uint64_t v21 = *(void *)(v19 + 16);
          v19 += 16;
        }
        while (v21 < v17);
        uint64_t v22 = (long long *)a2;
        if (v20 == a1)
        {
          uint64_t v22 = (long long *)a2;
          do
          {
            if (v19 >= (unint64_t)v22) {
              break;
            }
            uint64_t v24 = *((void *)v22-- - 2);
          }
          while (v24 >= v17);
        }
        else
        {
          do
            uint64_t v23 = *((void *)v22-- - 2);
          while (v23 >= v17);
        }
        unint64_t v11 = v19;
        if (v19 < (unint64_t)v22)
        {
          unint64_t v25 = v22;
          do
          {
            long long v26 = *(_OWORD *)v11;
            *(_OWORD *)unint64_t v11 = *v25;
            long long *v25 = v26;
            do
            {
              uint64_t v27 = *(void *)(v11 + 16);
              v11 += 16;
            }
            while (v27 < v17);
            do
              uint64_t v28 = *((void *)v25-- - 2);
            while (v28 >= v17);
          }
          while (v11 < (unint64_t)v25);
        }
        if (v11 - 16 != a1) {
          *(_OWORD *)a1 = *(_OWORD *)(v11 - 16);
        }
        *(void *)(v11 - 16) = v17;
        *(void *)(v11 - 8) = v18;
        if (v19 >= (unint64_t)v22) {
          break;
        }
LABEL_30:
        std::__introsort<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,std::string> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,std::string> const*>*,false>(a1, v11 - 16, a3, a4 & 1);
        a4 = 0;
      }
      BOOL v29 = std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,std::string> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,std::string> const*>*>(a1, (void *)(v11 - 16));
      if (std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,std::string> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,std::string> const*>*>(v11, a2))
      {
        break;
      }
      if (!v29) {
        goto LABEL_30;
      }
    }
    a2 = (void *)(v11 - 16);
    if (!v29) {
      continue;
    }
    return *(double *)&v16;
  }
}

google::protobuf::Arena **google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::Wrap(google::protobuf::Arena *a1, google::protobuf::Arena *a2, google::protobuf::Arena *a3)
{
  if (!a3) {
    operator new();
  }
  result[1] = 0;
  result[2] = 0;
  result[4] = a3;
  result[3] = (google::protobuf::Arena *)&google::protobuf::internal::fixed_address_empty_string;
  *__n128 result = (google::protobuf::Arena *)&unk_1EF0DC000;
  result[6] = a1;
  result[7] = a2;
  *((_DWORD *)result + 1CoreML::Specification::StringToDoubleMap::New(this, 0) = 3;
  return result;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::MapEntryWrapper::value(uint64_t a1)
{
  return *(void *)(a1 + 56);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::MapEntryWrapper::key(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

char *google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::InternalSerializeWithCachedSizesToArray(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  unint64_t v5 = *(void *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 136))(a1);
  *a3 = 8;
  uint64_t v6 = a3 + 1;
  if (v5 < 0x80)
  {
    LOBYTE(v7) = v5;
  }
  else
  {
    do
    {
      *v6++ = v5 | 0x80;
      unint64_t v7 = v5 >> 7;
      unint64_t v8 = v5 >> 14;
      v5 >>= 7;
    }
    while (v8);
  }
  *uint64_t v6 = v7;
  unint64_t v9 = (const void **)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 144))(a1);
  v6[1] = 18;

  return google::protobuf::io::CodedOutputStream::WriteStringWithSizeToArray(v9, v6 + 2);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::GetCachedSize(_DWORD *a1)
{
  int v2 = a1[10];
  if (v2)
  {
    int v3 = ((9 * (__clz(*(void *)(*(uint64_t (**)(_DWORD *))(*(void *)a1 + 136))(a1) | 1) ^ 0x3F) + 73) >> 6)
       + 1;
    if ((a1[10] & 2) != 0) {
      goto LABEL_3;
    }
LABEL_7:
    unsigned int v6 = 0;
    return v6 + v3;
  }
  int v3 = 0;
  if ((v2 & 2) == 0) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v4 = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 144))(a1);
  int v5 = *(unsigned __int8 *)(v4 + 23);
  if ((v5 & 0x80u) != 0) {
    int v5 = *(_DWORD *)(v4 + 8);
  }
  unsigned int v6 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  return v6 + v3;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::SerializeWithCachedSizes(uint64_t a1, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v4 = (unint64_t *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 136))(a1);
  google::protobuf::internal::WireFormatLite::WriteInt64(1, *v4, a2, v5);
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 144))(a1);

  return google::protobuf::internal::WireFormatLite::WriteString(2u, v6, a2);
}

unint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::ByteSizeLong(_DWORD *a1)
{
  int v2 = a1[10];
  if (v2)
  {
    unint64_t v3 = ((9 * (__clz(*(void *)(*(uint64_t (**)(_DWORD *))(*(void *)a1 + 136))(a1) | 1) ^ 0x3F) + 73) >> 6)
       + 1;
    if ((a1[10] & 2) != 0) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v6 = 0;
    return v6 + v3;
  }
  unint64_t v3 = 0;
  if ((v2 & 2) == 0) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v4 = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 144))(a1);
  int v5 = *(unsigned __int8 *)(v4 + 23);
  if ((v5 & 0x80u) != 0) {
    int v5 = *(_DWORD *)(v4 + 8);
  }
  uint64_t v6 = (int)(v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6)) + 1;
  return v6 + v3;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::MergePartialFromCodedStream(uint64_t a1, google::protobuf::io::CodedInputStream *this, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        int v5 = *(char **)this;
        if (*(void *)this >= *((void *)this + 1))
        {
          LODWORD(TagFallback) = 0;
        }
        else
        {
          unint64_t TagFallback = *v5;
          if ((*v5 & 0x80000000) == 0)
          {
            *(void *)this = v5 + 1;
            goto LABEL_6;
          }
        }
        unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(this, TagFallback);
LABEL_6:
        if (TagFallback != 8) {
          break;
        }
        int v7 = *(_DWORD *)(a1 + 40) | 1;
        *(_DWORD *)(a1 + 4CoreML::Specification::StringToDoubleMap::New(this, 0) = v7;
        unint64_t v9 = *(char **)this;
        unint64_t v8 = *((void *)this + 1);
        if (*(void *)this >= v8 || *v9 < 0)
        {
          unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this);
          if ((v13 & 1) == 0) {
            return 0;
          }
          int v7 = *(_DWORD *)(a1 + 40);
          unint64_t v11 = *(char **)this;
          unint64_t v8 = *((void *)this + 1);
        }
        else
        {
          unint64_t Varint64Fallback = *v9;
          unint64_t v11 = v9 + 1;
          *(void *)this = v11;
        }
        *(void *)(a1 + 16) = Varint64Fallback;
        int v12 = v7 | 1;
        *(_DWORD *)(a1 + 4CoreML::Specification::StringToDoubleMap::New(this, 0) = v12;
        if ((unint64_t)v11 < v8 && *v11 == 18)
        {
          *(void *)this = v11 + 1;
          goto LABEL_21;
        }
      }
      if (TagFallback != 18) {
        break;
      }
      int v12 = *(_DWORD *)(a1 + 40);
LABEL_21:
      *(_DWORD *)(a1 + 4CoreML::Specification::StringToDoubleMap::New(this, 0) = v12 | 2;
      unint64_t v14 = *(long long **)(a1 + 24);
      if (v14 == &google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstance();
      }
      uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((unsigned __int8 **)this, (std::string *)v14);
      if (!result) {
        return result;
      }
      *(_DWORD *)(a1 + 40) |= 2u;
      if (*(void *)this == *((void *)this + 1)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(this, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return 0;
}

std::string *google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::CheckTypeAndMergeFrom(std::string *result, _DWORD *a2)
{
  int v2 = a2[10];
  if (v2)
  {
    uint64_t v4 = result;
    if (v2)
    {
      uint64_t result = (std::string *)(*(uint64_t (**)(_DWORD *))(*(void *)a2 + 136))(a2);
      v4->__r_.__value_.__r.__words[2] = result->__r_.__value_.__r.__words[0];
      LODWORD(v4[1].__r_.__value_.__r.__words[2]) |= 1u;
      int v2 = a2[10];
    }
    if ((v2 & 2) != 0)
    {
      int v5 = (std::string **)&v4[1];
      if ((long long *)v4[1].__r_.__value_.__l.__data_ == &google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstance();
      }
      uint64_t v6 = (const std::string *)(*(uint64_t (**)(_DWORD *))(*(void *)a2 + 144))(a2);
      if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstance();
      }
      uint64_t result = std::string::operator=(*v5, v6);
      LODWORD(v4[1].__r_.__value_.__r.__words[2]) |= 2u;
    }
  }
  return result;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::IsInitialized()
{
  return 1;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::Clear(uint64_t result)
{
  *(void *)(result + 16) = 0;
  uint64_t v1 = *(void *)(result + 24);
  if ((long long *)v1 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)uint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v1 = 0;
      *(unsigned char *)(v1 + 2google::protobuf::Map<std::string,long long>::clear((void *)this + 3) = 0;
    }
  }
  *(_DWORD *)(result + 40) &= 0xFFFFFFFC;
  return result;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::GetArena(uint64_t a1)
{
  return *(void *)(a1 + 32);
}

google::protobuf::Arena **google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::New(uint64_t a1, google::protobuf::Arena *a2)
{
  if (!a2) {
    operator new();
  }
  result[1] = 0;
  result[2] = 0;
  result[4] = a2;
  result[3] = (google::protobuf::Arena *)&google::protobuf::internal::fixed_address_empty_string;
  *((_DWORD *)result + 1CoreML::Specification::StringToDoubleMap::New(this, 0) = 0;
  int v5 = *(google::protobuf::Arena **)(a1 + 8);
  *uint64_t result = (google::protobuf::Arena *)&unk_1EF0DC888;
  result[1] = v5;
  return result;
}

void google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::New()
{
}

void *google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, (char *)&unk_19EC86ACE);
}

void google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::MapEntryWrapper::~MapEntryWrapper(void *a1)
{
  *a1 = &unk_1EF0DC0A8;
  if ((void *)a1[1] != a1 && !a1[4]) {
    google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(a1[3]);
  }

  JUMPOUT(0x19F3C1920);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::value(uint64_t a1)
{
  if (!*(void *)(a1 + 8))
  {
    int v3 = 3;
    uint64_t v4 = "/Library/Caches/com.apple.xbs/Sources/CoreML/coremltools-internal/deps/protobuf/src/google/protobuf/map_entry_lite.h";
    int v5 = 162;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: default_instance_ != NULL: ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v3);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  return *(void *)(a1 + 24);
}

void sub_19EB58824(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::key(uint64_t a1)
{
  return a1 + 16;
}

void google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::~MapEntryImpl(void *a1)
{
  *a1 = &unk_1EF0DC0A8;
  if ((void *)a1[1] != a1 && !a1[4]) {
    google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(a1[3]);
  }

  JUMPOUT(0x19F3C1920);
}

void *google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::~MapEntryImpl(void *a1)
{
  *a1 = &unk_1EF0DC0A8;
  if ((void *)a1[1] != a1 && !a1[4]) {
    google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(a1[3]);
  }
  return a1;
}

void *google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::MapEntryWrapper::~MapEntryWrapper(void *a1)
{
  *a1 = &unk_1EF0DC0A8;
  if ((void *)a1[1] != a1 && !a1[4]) {
    google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(a1[3]);
  }
  return a1;
}

BOOL std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,std::string> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,std::string> const*>*>(uint64_t a1, void *a2)
{
  uint64_t v4 = ((uint64_t)a2 - a1) >> 4;
  BOOL result = 1;
  switch(v4)
  {
    case 0:
    case 1:
      return result;
    case 2:
      uint64_t v6 = (long long *)(a2 - 2);
      if (*(a2 - 2) < *(void *)a1)
      {
        long long v7 = *(_OWORD *)a1;
        *(_OWORD *)a1 = *v6;
        *uint64_t v6 = v7;
      }
      return result;
    case 3:
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>((long long *)a1, (uint64_t *)(a1 + 16), a2 - 2);
      return 1;
    case 4:
      std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>((long long *)a1, (uint64_t *)(a1 + 16), (uint64_t *)(a1 + 32), (_OWORD *)a2 - 1);
      return 1;
    case 5:
      std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>((long long *)a1, (uint64_t *)(a1 + 16), (uint64_t *)(a1 + 32), (__n128 *)(a1 + 48), (__n128 *)a2 - 1);
      return 1;
    default:
      unint64_t v8 = (void *)(a1 + 32);
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>((long long *)a1, (uint64_t *)(a1 + 16), (uint64_t *)(a1 + 32));
      unint64_t v9 = (void *)(a1 + 48);
      if ((void *)(a1 + 48) == a2) {
        return 1;
      }
      uint64_t v10 = 0;
      int v11 = 0;
      break;
  }
  while (1)
  {
    uint64_t v12 = *v9;
    if (*v9 < *v8)
    {
      uint64_t v13 = v9[1];
      uint64_t v14 = v10;
      while (1)
      {
        *(_OWORD *)(a1 + v14 + 48) = *(_OWORD *)(a1 + v14 + 32);
        if (v14 == -32) {
          break;
        }
        uint64_t v15 = *(void *)(a1 + v14 + 16);
        v14 -= 16;
        if (v12 >= v15)
        {
          long long v16 = (void *)(a1 + v14 + 48);
          goto LABEL_12;
        }
      }
      long long v16 = (void *)a1;
LABEL_12:
      void *v16 = v12;
      v16[1] = v13;
      if (++v11 == 8) {
        return v9 + 2 == a2;
      }
    }
    unint64_t v8 = v9;
    v10 += 16;
    v9 += 2;
    if (v9 == a2) {
      return 1;
    }
  }
}

uint64_t CoreML::Specification::Int64ToStringMap::ByteSizeLong(CoreML::Specification::Int64ToStringMap *this)
{
  int v2 = (void *)*((void *)this + 5);
  uint64_t v3 = *(unsigned int *)v2;
  google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>::begin(v8, v2);
  uint64_t v4 = 0;
  while (v8[0])
  {
    int v5 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::Wrap(*((google::protobuf::Arena **)v8[0] + 1), (google::protobuf::Arena *)(v8[0][1] + 8), *((google::protobuf::Arena **)this + 2));
    if (v4 != v5)
    {
      if (v4) {
        (*((void (**)(google::protobuf::Arena **))*v4 + 1))(v4);
      }
      uint64_t v4 = v5;
    }
    unint64_t v6 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::ByteSizeLong(v4);
    v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
    google::protobuf::Map<long long,double>::InnerMap::iterator_base<google::protobuf::Map<long long,double>::KeyValuePair const>::operator++(v8);
  }
  if (v4) {
    (*((void (**)(google::protobuf::Arena **))*v4 + 1))(v4);
  }
  *((_DWORD *)this + 12) = v3;
  return v3;
}

void sub_19EB58C1C(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t CoreML::Specification::Int64ToStringMap::MergePartialFromCodedStream(CoreML::Specification::Int64ToStringMap *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  int v5 = (google::protobuf::Arena **)((char *)this + 16);
  unint64_t v6 = (char *)this + 24;
  long long v7 = (google::protobuf::Arena **)&v45;
  while (1)
  {
    unint64_t v8 = *(char **)a2;
    if (*(void *)a2 >= *((void *)a2 + 1))
    {
      LODWORD(v9) = 0;
    }
    else
    {
      uint64_t v9 = *v8;
      if (*v8 >= 1)
      {
        *(void *)a2 = v8 + 1;
        unint64_t v10 = v9 | 0x100000000;
        if ((v10 & 0x100000000) == 0) {
          goto LABEL_12;
        }
        goto LABEL_8;
      }
    }
    unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v9);
    unint64_t v10 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
    if ((v10 & 0x100000000) == 0) {
      goto LABEL_12;
    }
LABEL_8:
    if (v10 == 10 && (v10 & 0xFFFFFFF8) == 8)
    {
      v44[0] = v5;
      v44[1] = v6;
      uint64_t v47 = 0;
      uint64_t v15 = *(char **)a2;
      if (*(void *)a2 < *((void *)a2 + 1) && (*v15 & 0x80000000) == 0)
      {
        int VarintSizeAsIntFallback = *v15;
        *(void *)a2 = v15 + 1;
        goto LABEL_24;
      }
      int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
      if (VarintSizeAsIntFallback < 0) {
        goto LABEL_49;
      }
LABEL_24:
      int v18 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      int v19 = *((_DWORD *)a2 + 13);
      BOOL v20 = __OFSUB__(v19--, 1);
      *((_DWORD *)a2 + 1google::protobuf::Map<std::string,long long>::clear((void *)this + 3) = v19;
      if (v19 < 0 != v20) {
        goto LABEL_49;
      }
      int v21 = v18;
      uint64_t v23 = *(char **)a2;
      unint64_t v22 = *((void *)a2 + 1);
      if (*(void *)a2 < v22 && *v23 == 8)
      {
        *(void *)a2 = v23 + 1;
        if ((unint64_t)(v23 + 1) >= v22 || v23[1] < 0)
        {
          unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if (v27)
          {
            unint64_t v24 = Varint64Fallback;
            unint64_t v25 = *(char **)a2;
            unint64_t v22 = *((void *)a2 + 1);
            goto LABEL_33;
          }
          goto LABEL_49;
        }
        unint64_t v24 = v23[1];
        unint64_t v25 = v23 + 2;
        *(void *)a2 = v25;
LABEL_33:
        unint64_t v45 = v24;
        if ((int)v22 - (int)v25 >= 1 && *v25 == 18)
        {
          uint64_t v28 = **((void **)this + 5);
          BOOL v29 = google::protobuf::Map<long long,std::string>::operator[]((uint64_t)v6, v7);
          uint64_t v46 = v29;
          if (v28 != **((void **)this + 5))
          {
            google::protobuf::io::CodedInputStream::Skip(a2, 1u);
            if ((google::protobuf::internal::WireFormatLite::ReadBytes((unsigned __int8 **)a2, (std::string *)v29) & 1) == 0)
            {
              v17.n128_f64[0] = google::protobuf::Map<long long,std::string>::erase((uint64_t)v6, (uint64_t *)v7);
              goto LABEL_49;
            }
            if (*(void *)a2 == *((void *)a2 + 1)
              && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
            {
              *((_DWORD *)a2 + 8) = 0;
              *((unsigned char *)a2 + 36) = 1;
              goto LABEL_62;
            }
            uint64_t v30 = google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::NewEntry(*v5);
            int v43 = (uint64_t *)v7;
            if (v30)
            {
              uint64_t v47 = v30;
              unint64_t v31 = v30;
            }
            else
            {
              unint64_t v31 = 0;
            }
            uint64_t v36 = v30[3];
            *((_DWORD *)v30 + 10) |= 2u;
            if (v36 == (google::protobuf::Arena *)&google::protobuf::internal::fixed_address_empty_string) {
              google::protobuf::internal::ArenaStringPtr::CreateInstance();
            }
            if (*((char *)v36 + 23) < 0) {
              operator delete(*(void **)v36);
            }
            long long v37 = *(_OWORD *)v29;
            *((void *)v36 + 2) = v29[2];
            *(_OWORD *)uint64_t v36 = v37;
            *((unsigned char *)v29 + 2google::protobuf::Map<std::string,long long>::clear((void *)this + 3) = 0;
            *(unsigned char *)BOOL v29 = 0;
            long long v7 = (google::protobuf::Arena **)v43;
            double v38 = google::protobuf::Map<long long,std::string>::erase((uint64_t)v6, v43);
            *((_DWORD *)v31 + 10) |= 1u;
            v31[2] = (google::protobuf::Arena *)v24;
            int v34 = (*((uint64_t (**)(google::protobuf::Arena **, google::protobuf::io::CodedInputStream *, double))*v31
                   + 11))(v31, a2, v38);
            if (v34)
            {
              google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::Map<long long,std::string>>::UseKeyAndValueFromEntry((uint64_t)v44);
              unint64_t v31 = v47;
            }
            if (!(*((uint64_t (**)(google::protobuf::Arena **))*v31 + 5))(v31))
            {
LABEL_61:
              if (v34) {
                goto LABEL_62;
              }
              goto LABEL_49;
            }
LABEL_46:
            uint64_t v47 = 0;
            if ((v34 & 1) == 0) {
              return 0;
            }
LABEL_62:
            if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v21))
            {
              int v39 = (unsigned int *)v46;
              if (*((char *)v46 + 23) < 0)
              {
                int v39 = (unsigned int *)*v46;
                BOOL v40 = v46[1];
              }
              else
              {
                LODWORD(v4CoreML::Specification::StringToDoubleMap::New(this, 0) = *((unsigned __int8 *)v46 + 23);
              }
              BOOL v41 = google::protobuf::internal::WireFormatLite::VerifyUtf8String(v39, (int)v40, 0, (uint64_t)"CoreML.Specification.Int64ToStringMap.MapEntry.value");
              BOOL v35 = v41;
              if (v41) {
                int v14 = 0;
              }
              else {
                int v14 = 6;
              }
            }
            else
            {
LABEL_49:
              BOOL v35 = 0;
              int v14 = 6;
            }
            if (v47) {
              (*((void (**)(google::protobuf::Arena **, __n128))*v47 + 1))(v47, v17);
            }
            if (!v35) {
              goto LABEL_18;
            }
            goto LABEL_17;
          }
        }
      }
      else
      {
        unint64_t v24 = 0;
        unint64_t v45 = 0;
      }
      long long v32 = google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::NewEntry(*v5);
      if (v32)
      {
        uint64_t v47 = v32;
        uint64_t v33 = v32;
      }
      else
      {
        uint64_t v33 = 0;
      }
      *((_DWORD *)v32 + 10) |= 1u;
      v32[2] = (google::protobuf::Arena *)v24;
      int v34 = (*((uint64_t (**)(google::protobuf::Arena **, google::protobuf::io::CodedInputStream *))*v32 + 11))(v32, a2);
      if (v34)
      {
        google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::Map<long long,std::string>>::UseKeyAndValueFromEntry((uint64_t)v44);
        uint64_t v33 = v47;
      }
      if (!(*((uint64_t (**)(google::protobuf::Arena **))*v33 + 5))(v33)) {
        goto LABEL_61;
      }
      goto LABEL_46;
    }
LABEL_12:
    if (!v10 || (v10 & 7) == 4) {
      return 1;
    }
    if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v10, a3))return 0; {
LABEL_17:
    }
    int v14 = 0;
LABEL_18:
    if (v14) {
      return 0;
    }
  }
}

void sub_19EB590EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  if (a14) {
    (*(void (**)(uint64_t))(*(void *)a14 + 8))(a14);
  }
  _Unwind_Resume(exception_object);
}

google::protobuf::Arena **google::protobuf::Map<long long,std::string>::operator[](uint64_t a1, google::protobuf::Arena **a2)
{
  uint64_t v4 = *(void **)(a1 + 16);
  long long v20 = (unint64_t)*a2;
  google::protobuf::Map<long long,double>::InnerMap::FindHelper(v22, v4, (uint64_t *)&v20, 0);
  uint64_t v6 = v22[0];
  if (v22[0]) {
    goto LABEL_12;
  }
  unint64_t v7 = v4[1];
  unint64_t v8 = *v4 + 1;
  unint64_t v9 = ((3 * v7) >> 2) & 0xFFFFFFFFFFFFFFFLL;
  if (v9 <= v8)
  {
    if (v7 <= 0x800000000000000)
    {
      uint64_t v17 = 2 * v7;
LABEL_25:
      google::protobuf::Map<long long,std::string>::InnerMap::Resize((uint64_t)v4, v17, v5);
      google::protobuf::Map<long long,double>::InnerMap::FindHelper(v21, v4, (uint64_t *)&v20, 0);
      uint64_t v11 = v21[3];
      goto LABEL_8;
    }
  }
  else if (v7 >= 9 && (12 * v7) >> 6 >= v8)
  {
    char v18 = 0;
    unint64_t v19 = ((5 * v8) >> 2) + 1;
    do
      ++v18;
    while (v19 << v18 < v9);
    uint64_t v17 = v7 >> v18 <= 8 ? 8 : v7 >> v18;
    if (v17 != v7) {
      goto LABEL_25;
    }
  }
  uint64_t v11 = v22[3];
LABEL_8:
  uint64_t v12 = (google::protobuf::Arena *)v4[5];
  if (v12) {
    Aligned = (uint64_t *)google::protobuf::Arena::AllocateAligned(v12, MEMORY[0x1E4FBA3A0], 24);
  }
  else {
    Aligned = (uint64_t *)operator new(0x18uLL);
  }
  *(_OWORD *)Aligned = v20;
  google::protobuf::Map<long long,std::string>::InnerMap::InsertUnique(v21, (uint64_t)v4, v11, Aligned);
  ++*v4;
  uint64_t v6 = v21[0];
LABEL_12:
  int v14 = *(google::protobuf::Arena ***)(v6 + 8);
  if (!v14)
  {
    if (!*(void *)a1) {
      operator new();
    }
    int v14 = google::protobuf::Arena::AllocateAligned(*(google::protobuf::Arena **)a1, MEMORY[0x1E4FBA3A0], 32);
    *int v14 = 0;
    uint64_t v15 = *(google::protobuf::Arena **)a1;
    v14[2] = 0;
    v14[3] = 0;
    v14[1] = 0;
    google::protobuf::Arena::OwnDestructor<std::string>((google::protobuf::Arena **)v15, (google::protobuf::Arena *)(v14 + 1));
    *int v14 = *a2;
    *(void *)(v6 + 8) = v14;
  }
  return v14 + 1;
}

double google::protobuf::Map<long long,std::string>::erase(uint64_t a1, uint64_t *a2)
{
  google::protobuf::Map<long long,double>::InnerMap::FindHelper(&v6, *(void **)(a1 + 16), a2, 0);
  double result = *(double *)&v6;
  if ((void)v6)
  {
    long long v4 = v6;
    uint64_t v5 = v7;
    *(void *)&double result = google::protobuf::Map<long long,std::string>::erase((uint64_t)&v6, (void *)a1, (uint64_t *)&v4).n128_u64[0];
  }
  return result;
}

google::protobuf::Arena **google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::NewEntry(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = 0;
  result[2] = 0;
  result[4] = a1;
  result[3] = (google::protobuf::Arena *)&google::protobuf::internal::fixed_address_empty_string;
  *((_DWORD *)result + 1CoreML::Specification::StringToDoubleMap::New(this, 0) = 0;
  *double result = (google::protobuf::Arena *)&unk_1EF0DC888;
  return result;
}

__n128 google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::Map<long long,std::string>>::UseKeyAndValueFromEntry(uint64_t a1)
{
  *(void *)(a1 + 16) = *(void *)(*(uint64_t (**)(void))(**(void **)(a1 + 32) + 136))(*(void *)(a1 + 32));
  int v2 = google::protobuf::Map<long long,std::string>::operator[](*(void *)(a1 + 8), (google::protobuf::Arena **)(a1 + 16));
  *(void *)(a1 + 24) = v2;
  uint64_t v3 = *(void *)(a1 + 32);
  *(_DWORD *)(v3 + 40) |= 2u;
  uint64_t v4 = *(void *)(v3 + 24);
  if ((long long *)v4 == &google::protobuf::internal::fixed_address_empty_string) {
    google::protobuf::internal::ArenaStringPtr::CreateInstance();
  }
  if (*((char *)v2 + 23) < 0) {
    operator delete(*v2);
  }
  __n128 result = *(__n128 *)v4;
  v2[2] = *(google::protobuf::Arena **)(v4 + 16);
  *(__n128 *)int v2 = result;
  *(unsigned char *)(v4 + 2google::protobuf::Map<std::string,long long>::clear((void *)this + 3) = 0;
  *(unsigned char *)uint64_t v4 = 0;
  return result;
}

uint64_t *google::protobuf::Map<long long,std::string>::InnerMap::InsertUnique(uint64_t *result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4 = a4;
  unint64_t v5 = a3;
  uint64_t v7 = result;
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(v8 + 8 * a3);
  if (!v9)
  {
    a4[2] = 0;
    *(void *)(v8 + 8 * agoogle::protobuf::Map<std::string,long long>::clear((void *)this + 3) = a4;
    goto LABEL_8;
  }
  if (v9 != *(void *)(v8 + 8 * (a3 ^ 1)))
  {
    unint64_t v10 = 0;
    uint64_t v11 = *(void *)(v8 + 8 * a3);
    do
    {
      ++v10;
      uint64_t v11 = *(void *)(v11 + 16);
    }
    while (v11);
    if (v10 < 8)
    {
      a4[2] = v9;
      *(void *)(v8 + 8 * agoogle::protobuf::Map<std::string,long long>::clear((void *)this + 3) = a4;
LABEL_11:
      *uint64_t v7 = v4;
      v7[1] = a2;
      v7[2] = v5;
      return result;
    }
    google::protobuf::Map<long long,std::string>::InnerMap::TreeConvert(a2, a3);
    v4[2] = 0;
    uint64_t v14 = *(void *)(*(void *)(a2 + 32) + 8 * v5);
    uint64_t v15 = v4;
    __n128 result = std::__tree<long long *,google::protobuf::Map<long long,double>::InnerMap::KeyCompare,google::protobuf::Map<long long,double>::MapAllocator<long long *>>::__emplace_unique_key_args<long long *,long long *>(v14, v4, (uint64_t *)&v15);
    v5 &= ~1uLL;
    uint64_t v4 = (uint64_t *)result[4];
LABEL_8:
    unint64_t v12 = *(void *)(a2 + 24);
    if (v5 < v12) {
      unint64_t v12 = v5;
    }
    *(void *)(a2 + 24) = v12;
    goto LABEL_11;
  }
  a4[2] = 0;
  uint64_t v13 = *(void *)(v8 + 8 * a3);
  uint64_t v15 = a4;
  __n128 result = std::__tree<long long *,google::protobuf::Map<long long,double>::InnerMap::KeyCompare,google::protobuf::Map<long long,double>::MapAllocator<long long *>>::__emplace_unique_key_args<long long *,long long *>(v13, a4, (uint64_t *)&v15);
  *uint64_t v7 = result[4];
  v7[1] = a2;
  v7[2] = v5 & 0xFFFFFFFFFFFFFFFELL;
  return result;
}

uint64_t *google::protobuf::Map<long long,std::string>::InnerMap::TreeConvert(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(google::protobuf::Arena **)(a1 + 40);
  if (v4) {
    Aligned = google::protobuf::Arena::AllocateAligned(v4, MEMORY[0x1E4FBA3A0], 32);
  }
  else {
    Aligned = operator new(0x20uLL);
  }
  uint64_t v6 = (uint64_t)Aligned;
  uint64_t v25 = *(void *)(a1 + 40);
  uint64_t v7 = v25;
  uint64_t v26 = 0;
  uint64_t v23 = &v24;
  unint64_t v24 = 0;
  Aligned[1] = 0;
  uint64_t v8 = (uint64_t **)(Aligned + 1);
  Aligned[2] = v7;
  Aligned[3] = 0;
  void *Aligned = Aligned + 1;
  uint64_t v9 = v23;
  if (v23 != &v24)
  {
    do
    {
      unint64_t v10 = *(uint64_t **)(v6 + 8);
      uint64_t v11 = v8;
      if (*(uint64_t ***)v6 == v8) {
        goto LABEL_11;
      }
      uint64_t v12 = *(void *)(v6 + 8);
      uint64_t v13 = v8;
      if (v10)
      {
        do
        {
          uint64_t v11 = (uint64_t **)v12;
          uint64_t v12 = *(void *)(v12 + 8);
        }
        while (v12);
      }
      else
      {
        do
        {
          uint64_t v11 = (uint64_t **)v13[2];
          BOOL v14 = *v11 == (uint64_t *)v13;
          uint64_t v13 = v11;
        }
        while (v14);
      }
      uint64_t v15 = *v9[4];
      if (*v11[4] < v15)
      {
LABEL_11:
        if (v10) {
          long long v16 = v11;
        }
        else {
          long long v16 = v8;
        }
        if (v10) {
          uint64_t v17 = v11 + 1;
        }
        else {
          uint64_t v17 = v8;
        }
      }
      else
      {
        long long v16 = v8;
        uint64_t v17 = v8;
        if (v10)
        {
          uint64_t v17 = v8;
          while (1)
          {
            while (1)
            {
              long long v16 = (uint64_t **)v10;
              uint64_t v21 = *(void *)v10[4];
              if (v15 >= v21) {
                break;
              }
              unint64_t v10 = *v16;
              uint64_t v17 = v16;
              if (!*v16) {
                goto LABEL_18;
              }
            }
            if (v21 >= v15) {
              break;
            }
            uint64_t v17 = v16 + 1;
            unint64_t v10 = v16[1];
            if (!v10) {
              goto LABEL_18;
            }
          }
        }
      }
      if (!*v17)
      {
LABEL_18:
        char v18 = (uint64_t *)google::protobuf::Map<std::string,std::string>::MapAllocator<std::__tree_node<std::string*,void *>>::allocate(*(google::protobuf::Arena **)(v6 + 16));
        v18[4] = (uint64_t)v9[4];
        std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::__insert_node_at((uint64_t **)v6, (uint64_t)v16, v17, v18);
      }
      unint64_t v19 = v9[1];
      if (v19)
      {
        do
        {
          long long v20 = (void **)v19;
          unint64_t v19 = (void *)*v19;
        }
        while (v19);
      }
      else
      {
        do
        {
          long long v20 = (void **)v9[2];
          BOOL v14 = *v20 == v9;
          uint64_t v9 = v20;
        }
        while (!v14);
      }
      uint64_t v9 = v20;
    }
    while (v20 != &v24);
  }
  std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::destroy((uint64_t)&v23, v24);
  google::protobuf::Map<long long,double>::InnerMap::CopyListToTree(*(uint64_t **)(a1 + 32), a2, v6);
  __n128 result = google::protobuf::Map<long long,double>::InnerMap::CopyListToTree(*(uint64_t **)(a1 + 32), a2 ^ 1, v6);
  *(void *)(*(void *)(a1 + 32) + 8 * (a2 ^ 1)) = v6;
  *(void *)(*(void *)(a1 + 32) + 8 * a2) = v6;
  return result;
}

void sub_19EB597B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::destroy(v10, *(void **)(v10 + 8));
  std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::destroy((uint64_t)&a9, a10);
  _Unwind_Resume(a1);
}

void google::protobuf::Map<long long,std::string>::InnerMap::Resize(uint64_t a1, uint64_t a2, size_t a3)
{
  unint64_t v5 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = a2;
  uint64_t v6 = *(void **)(a1 + 32);
  uint64_t v7 = google::protobuf::Map<std::string,std::string>::MapAllocator<void *>::allocate(*(google::protobuf::Arena **)(a1 + 40), a2, a3);
  bzero(v7, 8 * a2);
  unint64_t v8 = *(void *)(a1 + 24);
  *(void *)(a1 + 24) = *(void *)(a1 + 8);
  *(void *)(a1 + 32) = v7;
  while (v8 < v5)
  {
    uint64_t v9 = v6[v8];
    if (v9)
    {
      if (v9 == v6[v8 ^ 1])
      {
        uint64_t v11 = *(void **)v9;
        do
        {
          google::protobuf::Map<long long,std::string>::InnerMap::InsertUnique(v15, a1, (*(void *)(a1 + 8) - 1) & (*(void *)(a1 + 16) + *(void *)v11[4]), (uint64_t *)v11[4]);
          uint64_t v12 = (void *)v11[1];
          if (v12)
          {
            do
            {
              uint64_t v13 = v12;
              uint64_t v12 = (void *)*v12;
            }
            while (v12);
          }
          else
          {
            do
            {
              uint64_t v13 = (void *)v11[2];
              BOOL v14 = *v13 == (void)v11;
              uint64_t v11 = v13;
            }
            while (!v14);
          }
          uint64_t v11 = v13;
        }
        while (v13 != (void *)(v9 + 8));
        ++v8;
        google::protobuf::Map<std::string,std::string>::InnerMap::DestroyTree(*(void *)(a1 + 40), (void **)v9);
      }
      else
      {
        do
        {
          uint64_t v10 = *(void *)(v9 + 16);
          google::protobuf::Map<long long,std::string>::InnerMap::InsertUnique(v15, a1, (*(void *)(a1 + 8) - 1) & (*(void *)(a1 + 16) + *(void *)v9), (uint64_t *)v9);
          uint64_t v9 = v10;
        }
        while (v10);
      }
    }
    ++v8;
  }
  if (!*(void *)(a1 + 40))
  {
    operator delete(v6);
  }
}

void *CoreML::Specification::Int64ToStringMap::MergeFrom(CoreML::Specification::Int64ToStringMap *this, const CoreML::Specification::Int64ToStringMap *a2)
{
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  __n128 result = google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>::begin(v11, *((void **)a2 + 5));
  uint64_t v6 = v11[0];
  if (v11[0])
  {
    uint64_t v7 = (char *)this + 24;
    do
    {
      unint64_t v8 = (google::protobuf::Arena **)v6[1];
      uint64_t v9 = (const std::string *)(v8 + 1);
      uint64_t v10 = google::protobuf::Map<long long,std::string>::operator[]((uint64_t)v7, v8);
      std::string::operator=((std::string *)v10, v9);
      __n128 result = google::protobuf::Map<long long,double>::InnerMap::iterator_base<google::protobuf::Map<long long,double>::KeyValuePair const>::operator++(v11);
      uint64_t v6 = v11[0];
    }
    while (v11[0]);
  }
  return result;
}

uint64_t CoreML::Specification::Int64ToStringMap::IsInitialized(CoreML::Specification::Int64ToStringMap *this)
{
  return 1;
}

void CoreML::Specification::Int64ToStringMap::Clear(CoreML::Specification::Int64ToStringMap *this)
{
}

void CoreML::Specification::Int64ToStringMap::New(CoreML::Specification::Int64ToStringMap *this, google::protobuf::Arena *a2)
{
}

void sub_19EB59A30(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C407031D3CFLL);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::Int64ToStringMap>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    __n128 result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *__n128 result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::Int64ToStringMap>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::Int64ToStringMap>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::Int64ToStringMap::New(CoreML::Specification::Int64ToStringMap *this)
{
}

void *CoreML::Specification::Int64ToStringMap::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.Int64ToStringMap");
}

void CoreML::Specification::Int64ToStringMap::~Int64ToStringMap(CoreML::Specification::Int64ToStringMap *this)
{
  *(void *)this = &unk_1EF0D1AD8;
  google::protobuf::Map<long long,std::string>::~Map((void *)this + 3);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);

  JUMPOUT(0x19F3C1920);
}

{
  *(void *)this = &unk_1EF0D1AD8;
  google::protobuf::Map<long long,std::string>::~Map((void *)this + 3);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

void google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::~MapEntryLite(void *a1)
{
  *a1 = &unk_1EF0DC0A8;
  if ((void *)a1[1] != a1 && !a1[4]) {
    google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(a1[3]);
  }

  JUMPOUT(0x19F3C1920);
}

void *google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::~MapEntryLite(void *a1)
{
  *a1 = &unk_1EF0DC0A8;
  if ((void *)a1[1] != a1 && !a1[4]) {
    google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(a1[3]);
  }
  return a1;
}

void CoreML::Specification::StringToInt64Map::New(CoreML::Specification::StringToInt64Map *this)
{
}

void *CoreML::Specification::StringToInt64Map::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.StringToInt64Map");
}

void CoreML::Specification::StringToInt64Map::~StringToInt64Map(CoreML::Specification::StringToInt64Map *this)
{
  *(void *)this = &unk_1EF0D2030;
  google::protobuf::Map<std::string,long long>::~Map((void *)this + 3);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);

  JUMPOUT(0x19F3C1920);
}

{
  *(void *)this = &unk_1EF0D2030;
  google::protobuf::Map<std::string,long long>::~Map((void *)this + 3);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

void CoreML::validate<(MLModelType)200>(CoreML::Specification::protobuf_Model_2eproto *a1, uint64_t a2)
{
  if (*(_DWORD *)(a2 + 44) == 200)
  {
    uint64_t v4 = *(uint64_t **)(a2 + 32);
  }
  else
  {
    CoreML::Specification::protobuf_Model_2eproto::InitDefaults(a1);
    uint64_t v4 = &CoreML::Specification::_PipelineClassifier_default_instance_;
  }
  unint64_t v5 = (const CoreML::Specification::Pipeline *)v4[2];
  if (v5) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = (const CoreML::Specification::Pipeline *)&CoreML::Specification::_Pipeline_default_instance_;
  }

  CoreML::validate(a1, (const CoreML::Specification::Model *)a2, v6);
}

void CoreML::validate(CoreML *this, const CoreML::Specification::Model *a2, const CoreML::Specification::Pipeline *a3)
{
  uint64_t v3 = this;
  uint64_t v4 = *((int *)a3 + 6);
  if (v4)
  {
    memset(v113, 0, sizeof(v113));
    int v114 = 1065353216;
    uint64_t v7 = (uint64_t *)*((void *)a2 + 2);
    if (!v7) {
      uint64_t v7 = &CoreML::Specification::_ModelDescription_default_instance_;
    }
    uint64_t v8 = v7[4];
    if (v8) {
      uint64_t v9 = v8 + 8;
    }
    else {
      uint64_t v9 = 0;
    }
    uint64_t v10 = *((int *)v7 + 6);
    int v101 = v4;
    if (!v10)
    {
      BOOL v14 = (void *)((char *)a3 + 32);
      uint64_t v18 = *((void *)a3 + 4);
      if (v18) {
        long long v16 = (const CoreML::Specification::Model **)(v18 + 8);
      }
      else {
        long long v16 = 0;
      }
      uint64_t v17 = &v16[v4];
LABEL_21:
      std::string::size_type v102 = (void **)((char *)v3 + 8);
      while (1)
      {
        unint64_t v19 = *v16;
        long long v20 = (uint64_t *)*((void *)*v16 + 2);
        if (!v20) {
          long long v20 = &CoreML::Specification::_ModelDescription_default_instance_;
        }
        uint64_t v21 = v20[4];
        uint64_t v22 = v21 ? v21 + 8 : 0;
        uint64_t v23 = *((int *)v20 + 6);
        if (v23) {
          break;
        }
LABEL_32:
        uint64_t v3 = this;
        CoreML::Model::validate(this, v19);
        if ((*(_DWORD *)this & 0xFFFFFFEF) != 0) {
          goto LABEL_138;
        }
        uint64_t v28 = (uint64_t *)*((void *)v19 + 2);
        if (!v28) {
          uint64_t v28 = &CoreML::Specification::_ModelDescription_default_instance_;
        }
        uint64_t v29 = v28[7];
        if (v29) {
          uint64_t v30 = v29 + 8;
        }
        else {
          uint64_t v30 = 0;
        }
        uint64_t v31 = *((int *)v28 + 12);
        if (v31)
        {
          uint64_t v32 = 8 * v31;
          do
          {
            uint64_t v33 = *(void *)v30;
            __p[0] = *(void **)(*(void *)v30 + 16);
            *((void *)std::__hash_table<std::__hash_value_type<std::string,CoreML::Specification::FeatureDescription const*>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,CoreML::Specification::FeatureDescription const*>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,CoreML::Specification::FeatureDescription const*>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,CoreML::Specification::FeatureDescription const*>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>(v113, (unsigned __int8 *)__p[0], (long long **)__p)+ 5) = v33;
            v30 += 8;
            v32 -= 8;
          }
          while (v32);
        }
        if (*((char *)this + 31) < 0) {
          operator delete(*v102);
        }
        if (++v16 == v17) {
          goto LABEL_44;
        }
      }
      uint64_t v24 = 8 * v23;
      while (1)
      {
        uint64_t v25 = *(void *)v22;
        uint64_t v26 = *(unsigned __int8 **)(*(void *)v22 + 16);
        char v27 = std::__hash_table<std::__hash_value_type<std::string,std::unique_ptr<MIL::Blob::StorageReader>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::unique_ptr<MIL::Blob::StorageReader>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::unique_ptr<MIL::Blob::StorageReader>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::unique_ptr<MIL::Blob::StorageReader>>>>::find<std::string>(v113, v26);
        if (!v27)
        {
          std::operator+<char>();
          unint64_t v45 = std::string::append(&v110, "' of model '");
          long long v46 = *(_OWORD *)&v45->__r_.__value_.__l.__data_;
          v111.__r_.__value_.__r.__words[2] = v45->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v111.__r_.__value_.__l.__data_ = v46;
          v45->__r_.__value_.__l.__size_ = 0;
          v45->__r_.__value_.__r.__words[2] = 0;
          v45->__r_.__value_.__r.__words[0] = 0;
          std::string::basic_string[abi:ne180100]<0>(&v109, "CoreML.Specification.ModelDescription");
          if ((v109.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            uint64_t v47 = &v109;
          }
          else {
            uint64_t v47 = (std::string *)v109.__r_.__value_.__r.__words[0];
          }
          if ((v109.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            std::string::size_type size = HIBYTE(v109.__r_.__value_.__r.__words[2]);
          }
          else {
            std::string::size_type size = v109.__r_.__value_.__l.__size_;
          }
          int64_t v49 = std::string::append(&v111, (const std::string::value_type *)v47, size);
          long long v50 = *(_OWORD *)&v49->__r_.__value_.__l.__data_;
          v112.__r_.__value_.__r.__words[2] = v49->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v112.__r_.__value_.__l.__data_ = v50;
          v49->__r_.__value_.__l.__size_ = 0;
          v49->__r_.__value_.__r.__words[2] = 0;
          v49->__r_.__value_.__r.__words[0] = 0;
          int64_t v51 = std::string::append(&v112, "' does not present in pipeline input or previous model.");
          long long v52 = *(_OWORD *)&v51->__r_.__value_.__l.__data_;
          std::string::size_type v106 = v51->__r_.__value_.__r.__words[2];
          *(_OWORD *)std::string __p = v52;
          v51->__r_.__value_.__l.__size_ = 0;
          v51->__r_.__value_.__r.__words[2] = 0;
          v51->__r_.__value_.__r.__words[0] = 0;
          *(void *)this = 13;
          std::operator+<char>();
          if (SHIBYTE(v106) < 0) {
            operator delete(__p[0]);
          }
          if (SHIBYTE(v112.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v112.__r_.__value_.__l.__data_);
          }
          if (SHIBYTE(v109.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v109.__r_.__value_.__l.__data_);
          }
          if (SHIBYTE(v111.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v111.__r_.__value_.__l.__data_);
          }
          if (SHIBYTE(v110.__r_.__value_.__r.__words[2]) < 0)
          {
            uint64_t v44 = (void *)v110.__r_.__value_.__r.__words[0];
            goto LABEL_137;
          }
          goto LABEL_138;
        }
        if (!CoreML::Specification::isEquivalent((CoreML::Specification *)v26, *(const CoreML::Specification::FeatureDescription **)(v25 + 32), *(const CoreML::Specification::FeatureDescription **)(*((void *)v27 + 5) + 16), *(uint64_t **)(*((void *)v27 + 5) + 32)))break; {
        v22 += 8;
        }
        v24 -= 8;
        if (!v24) {
          goto LABEL_32;
        }
      }
      std::operator+<char>();
      int64_t v53 = std::string::append(&v109, "' of model '");
      long long v54 = *(_OWORD *)&v53->__r_.__value_.__l.__data_;
      v110.__r_.__value_.__r.__words[2] = v53->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v110.__r_.__value_.__l.__data_ = v54;
      v53->__r_.__value_.__l.__size_ = 0;
      v53->__r_.__value_.__r.__words[2] = 0;
      v53->__r_.__value_.__r.__words[0] = 0;
      std::string::basic_string[abi:ne180100]<0>(&v108, "CoreML.Specification.ModelDescription");
      if ((v108.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v55 = &v108;
      }
      else {
        uint64_t v55 = (std::string *)v108.__r_.__value_.__r.__words[0];
      }
      if ((v108.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type v56 = HIBYTE(v108.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type v56 = v108.__r_.__value_.__l.__size_;
      }
      uint64_t v57 = std::string::append(&v110, (const std::string::value_type *)v55, v56);
      long long v58 = *(_OWORD *)&v57->__r_.__value_.__l.__data_;
      v111.__r_.__value_.__r.__words[2] = v57->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v111.__r_.__value_.__l.__data_ = v58;
      v57->__r_.__value_.__l.__size_ = 0;
      v57->__r_.__value_.__r.__words[2] = 0;
      v57->__r_.__value_.__r.__words[0] = 0;
      BOOL v59 = std::string::append(&v111, "' does not match the type previously specified by the pipeline input or the output of a previous model.");
      long long v60 = *(_OWORD *)&v59->__r_.__value_.__l.__data_;
      v112.__r_.__value_.__r.__words[2] = v59->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v112.__r_.__value_.__l.__data_ = v60;
      v59->__r_.__value_.__l.__size_ = 0;
      v59->__r_.__value_.__r.__words[2] = 0;
      v59->__r_.__value_.__r.__words[0] = 0;
      uint64_t v61 = std::string::append(&v112, " For the second case, make sure the input and previous model's output has the matching name and shapes.");
      long long v62 = *(_OWORD *)&v61->__r_.__value_.__l.__data_;
      std::string::size_type v106 = v61->__r_.__value_.__r.__words[2];
      *(_OWORD *)std::string __p = v62;
      v61->__r_.__value_.__l.__size_ = 0;
      v61->__r_.__value_.__r.__words[2] = 0;
      v61->__r_.__value_.__r.__words[0] = 0;
      *(void *)this = 1;
      std::operator+<char>();
      if (SHIBYTE(v106) < 0) {
        operator delete(__p[0]);
      }
      if (SHIBYTE(v112.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v112.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v111.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v111.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v108.__r_.__value_.__r.__words[2]) < 0)
      {
        uint64_t v63 = (void *)v108.__r_.__value_.__r.__words[0];
        goto LABEL_92;
      }
LABEL_93:
      if (SHIBYTE(v110.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v110.__r_.__value_.__l.__data_);
      }
      if ((SHIBYTE(v109.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_138;
      }
      uint64_t v44 = (void *)v109.__r_.__value_.__r.__words[0];
      goto LABEL_137;
    }
    uint64_t v11 = 8 * v10;
    do
    {
      uint64_t v12 = *(void *)v9;
      __p[0] = *(void **)(*(void *)v9 + 16);
      *((void *)std::__hash_table<std::__hash_value_type<std::string,CoreML::Specification::FeatureDescription const*>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,CoreML::Specification::FeatureDescription const*>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,CoreML::Specification::FeatureDescription const*>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,CoreML::Specification::FeatureDescription const*>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>(v113, (unsigned __int8 *)__p[0], (long long **)__p)+ 5) = v12;
      v9 += 8;
      v11 -= 8;
    }
    while (v11);
    BOOL v14 = (void *)((char *)a3 + 32);
    uint64_t v13 = *((void *)a3 + 4);
    uint64_t v15 = *((int *)a3 + 6);
    if (v13) {
      long long v16 = (const CoreML::Specification::Model **)(v13 + 8);
    }
    else {
      long long v16 = 0;
    }
    if (v15)
    {
      uint64_t v17 = &v16[v15];
      goto LABEL_21;
    }
LABEL_44:
    int v34 = (uint64_t *)*((void *)a2 + 2);
    if (!v34) {
      int v34 = &CoreML::Specification::_ModelDescription_default_instance_;
    }
    uint64_t v35 = v34[7];
    if (v35) {
      uint64_t v36 = v35 + 8;
    }
    else {
      uint64_t v36 = 0;
    }
    uint64_t v37 = *((int *)v34 + 12);
    if (v37)
    {
      uint64_t v38 = 8 * v37;
      while (1)
      {
        uint64_t v39 = *(void *)v36;
        BOOL v40 = *(unsigned __int8 **)(*(void *)v36 + 16);
        BOOL v41 = std::__hash_table<std::__hash_value_type<std::string,std::unique_ptr<MIL::Blob::StorageReader>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::unique_ptr<MIL::Blob::StorageReader>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::unique_ptr<MIL::Blob::StorageReader>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::unique_ptr<MIL::Blob::StorageReader>>>>::find<std::string>(v113, v40);
        if (!v41)
        {
          std::operator+<char>();
          uint64_t v78 = std::string::append(&v112, "' not present in pipeline input or a contained model.");
          long long v79 = *(_OWORD *)&v78->__r_.__value_.__l.__data_;
          std::string::size_type v106 = v78->__r_.__value_.__r.__words[2];
          *(_OWORD *)std::string __p = v79;
          v78->__r_.__value_.__l.__size_ = 0;
          v78->__r_.__value_.__r.__words[2] = 0;
          v78->__r_.__value_.__r.__words[0] = 0;
          *(void *)uint64_t v3 = 13;
          std::operator+<char>();
          goto LABEL_133;
        }
        if (!CoreML::Specification::isEquivalent((CoreML::Specification *)v40, *(const CoreML::Specification::FeatureDescription **)(v39 + 32), *(const CoreML::Specification::FeatureDescription **)(*((void *)v41 + 5) + 16), *(uint64_t **)(*((void *)v41 + 5) + 32)))break; {
        v36 += 8;
        }
        v38 -= 8;
        if (!v38) {
          goto LABEL_54;
        }
      }
      std::operator+<char>();
      uint64_t v80 = std::string::append(&v112, "' does not match type produced in pipeline input.");
      long long v81 = *(_OWORD *)&v80->__r_.__value_.__l.__data_;
      std::string::size_type v106 = v80->__r_.__value_.__r.__words[2];
      *(_OWORD *)std::string __p = v81;
      v80->__r_.__value_.__l.__size_ = 0;
      v80->__r_.__value_.__r.__words[2] = 0;
      v80->__r_.__value_.__r.__words[0] = 0;
      *(void *)uint64_t v3 = 1;
      std::operator+<char>();
LABEL_133:
      if (SHIBYTE(v106) < 0) {
        operator delete(__p[0]);
      }
      if ((SHIBYTE(v112.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_138;
      }
      uint64_t v44 = (void *)v112.__r_.__value_.__r.__words[0];
      goto LABEL_137;
    }
LABEL_54:
    if (*((unsigned char *)a2 + 28))
    {
      uint64_t v42 = (v101 - 1);
      if (v101 >= 2)
      {
        uint64_t v43 = 0;
        while (1)
        {
          CoreML::Specification::Model::Model((CoreML::Specification::Model *)__p, *(const CoreML::Specification::Model **)(*v14 + 8 * v43 + 8));
          if (v107) {
            break;
          }
          CoreML::Specification::Model::~Model((CoreML::Specification::Model *)__p);
          if (v42 == ++v43) {
            goto LABEL_59;
          }
        }
        std::to_string(&v110, v43);
        std::string::size_type v92 = std::string::insert(&v110, 0, "Only the last model in the pipeline can be updatable. Model at position '");
        long long v93 = *(_OWORD *)&v92->__r_.__value_.__l.__data_;
        v111.__r_.__value_.__r.__words[2] = v92->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v111.__r_.__value_.__l.__data_ = v93;
        v92->__r_.__value_.__l.__size_ = 0;
        v92->__r_.__value_.__r.__words[2] = 0;
        v92->__r_.__value_.__r.__words[0] = 0;
        int v94 = std::string::append(&v111, "' is marked as updatable.");
        long long v95 = *(_OWORD *)&v94->__r_.__value_.__l.__data_;
        v112.__r_.__value_.__r.__words[2] = v94->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v112.__r_.__value_.__l.__data_ = v95;
        v94->__r_.__value_.__l.__size_ = 0;
        v94->__r_.__value_.__r.__words[2] = 0;
        v94->__r_.__value_.__r.__words[0] = 0;
        *(void *)uint64_t v3 = 15;
        std::operator+<char>();
LABEL_156:
        if (SHIBYTE(v112.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v112.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v111.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v111.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v110.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v110.__r_.__value_.__l.__data_);
        }
        CoreML::Specification::Model::~Model((CoreML::Specification::Model *)__p);
        goto LABEL_138;
      }
LABEL_59:
      if (!*(unsigned char *)(*(void *)(*v14 + 8 * (int)v42 + 8) + 28))
      {
        std::string::basic_string[abi:ne180100]<0>(__p, "Last model in an updatable pipeline model should be marked as updatable.");
        *(void *)uint64_t v3 = 15;
        std::operator+<char>();
        if (SHIBYTE(v106) < 0)
        {
          uint64_t v44 = __p[0];
LABEL_137:
          operator delete(v44);
        }
LABEL_138:
        std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)v113);
        return;
      }
    }
    else if (v101 >= 1)
    {
      uint64_t v64 = 0;
      while (1)
      {
        CoreML::Specification::Model::Model((CoreML::Specification::Model *)__p, *(const CoreML::Specification::Model **)(*v14 + 8 * v64 + 8));
        if (v107) {
          break;
        }
        CoreML::Specification::Model::~Model((CoreML::Specification::Model *)__p);
        if (v101 == ++v64) {
          goto LABEL_101;
        }
      }
      std::to_string(&v110, v64);
      int64_t v96 = std::string::insert(&v110, 0, "Found an updatable model at '");
      long long v97 = *(_OWORD *)&v96->__r_.__value_.__l.__data_;
      v111.__r_.__value_.__r.__words[2] = v96->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v111.__r_.__value_.__l.__data_ = v97;
      v96->__r_.__value_.__l.__size_ = 0;
      v96->__r_.__value_.__r.__words[2] = 0;
      v96->__r_.__value_.__r.__words[0] = 0;
      int v98 = std::string::append(&v111, "' inside a non-updatable pipeline.");
      long long v99 = *(_OWORD *)&v98->__r_.__value_.__l.__data_;
      v112.__r_.__value_.__r.__words[2] = v98->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v112.__r_.__value_.__l.__data_ = v99;
      v98->__r_.__value_.__l.__size_ = 0;
      v98->__r_.__value_.__r.__words[2] = 0;
      v98->__r_.__value_.__r.__words[0] = 0;
      *(void *)uint64_t v3 = 15;
      std::operator+<char>();
      goto LABEL_156;
    }
LABEL_101:
    int v65 = *((_DWORD *)a3 + 12);
    if (v65 >= 1)
    {
      if (v65 == v101)
      {
        uint64_t v66 = 0;
        __p[1] = 0;
        std::string::size_type v106 = 0;
        __p[0] = &__p[1];
        while (1)
        {
          uint64_t v67 = *(long long **)(*((void *)a3 + 7) + 8 * v66 + 8);
          if (*((char *)v67 + 23) < 0)
          {
            std::string::__init_copy_ctor_external(&v112, *(const std::string::value_type **)v67, *((void *)v67 + 1));
          }
          else
          {
            long long v68 = *v67;
            v112.__r_.__value_.__r.__words[2] = *((void *)v67 + 2);
            *(_OWORD *)&v112.__r_.__value_.__l.__data_ = v68;
          }
          uint64_t v69 = (void **)std::__tree<std::__value_type<std::string,BOOL>,std::__map_value_compare<std::string,std::__value_type<std::string,BOOL>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,BOOL>>>::find<std::string>((uint64_t)__p, &v112);
          if (&__p[1] == v69)
          {
            std::__tree<std::string>::__emplace_unique_key_args<std::string,std::string const&>((uint64_t **)__p, &v112, (uint64_t)&v112);
          }
          else
          {
            std::operator+<char>();
            uint64_t v70 = std::string::append(&v108, "' at index '");
            long long v71 = *(_OWORD *)&v70->__r_.__value_.__l.__data_;
            v109.__r_.__value_.__r.__words[2] = v70->__r_.__value_.__r.__words[2];
            *(_OWORD *)&v109.__r_.__value_.__l.__data_ = v71;
            v70->__r_.__value_.__l.__size_ = 0;
            v70->__r_.__value_.__r.__words[2] = 0;
            v70->__r_.__value_.__r.__words[0] = 0;
            std::to_string(&v104, v66);
            if ((v104.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              uint64_t v72 = &v104;
            }
            else {
              uint64_t v72 = (std::string *)v104.__r_.__value_.__r.__words[0];
            }
            if ((v104.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              std::string::size_type v73 = HIBYTE(v104.__r_.__value_.__r.__words[2]);
            }
            else {
              std::string::size_type v73 = v104.__r_.__value_.__l.__size_;
            }
            uint64_t v74 = std::string::append(&v109, (const std::string::value_type *)v72, v73);
            long long v75 = *(_OWORD *)&v74->__r_.__value_.__l.__data_;
            v110.__r_.__value_.__r.__words[2] = v74->__r_.__value_.__r.__words[2];
            *(_OWORD *)&v110.__r_.__value_.__l.__data_ = v75;
            v74->__r_.__value_.__l.__size_ = 0;
            v74->__r_.__value_.__r.__words[2] = 0;
            v74->__r_.__value_.__r.__words[0] = 0;
            unint64_t v76 = std::string::append(&v110, " has already been used for previous models");
            long long v77 = *(_OWORD *)&v76->__r_.__value_.__l.__data_;
            v111.__r_.__value_.__r.__words[2] = v76->__r_.__value_.__r.__words[2];
            *(_OWORD *)&v111.__r_.__value_.__l.__data_ = v77;
            v76->__r_.__value_.__l.__size_ = 0;
            v76->__r_.__value_.__r.__words[2] = 0;
            v76->__r_.__value_.__r.__words[0] = 0;
            *(void *)this = 13;
            std::operator+<char>();
            if (SHIBYTE(v111.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v111.__r_.__value_.__l.__data_);
            }
            if (SHIBYTE(v110.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v110.__r_.__value_.__l.__data_);
            }
            if (SHIBYTE(v104.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v104.__r_.__value_.__l.__data_);
            }
            if (SHIBYTE(v109.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v109.__r_.__value_.__l.__data_);
            }
            if (SHIBYTE(v108.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v108.__r_.__value_.__l.__data_);
            }
          }
          if (SHIBYTE(v112.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v112.__r_.__value_.__l.__data_);
          }
          if (&__p[1] != v69) {
            break;
          }
          if (v101 == ++v66)
          {
            std::__tree<std::__value_type<std::string,Espresso::vimage2espresso_param>,std::__map_value_compare<std::string,std::__value_type<std::string,Espresso::vimage2espresso_param>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,Espresso::vimage2espresso_param>>>::destroy((char *)__p[1]);
            uint64_t v3 = this;
            goto LABEL_130;
          }
        }
        std::__tree<std::__value_type<std::string,Espresso::vimage2espresso_param>,std::__map_value_compare<std::string,std::__value_type<std::string,Espresso::vimage2espresso_param>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,Espresso::vimage2espresso_param>>>::destroy((char *)__p[1]);
        goto LABEL_138;
      }
      std::to_string(&v109, v65);
      long long v82 = std::string::insert(&v109, 0, "The number of pipeline model names '");
      long long v83 = *(_OWORD *)&v82->__r_.__value_.__l.__data_;
      v110.__r_.__value_.__r.__words[2] = v82->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v110.__r_.__value_.__l.__data_ = v83;
      v82->__r_.__value_.__l.__size_ = 0;
      v82->__r_.__value_.__r.__words[2] = 0;
      v82->__r_.__value_.__r.__words[0] = 0;
      long long v84 = std::string::append(&v110, "' doesn't match the number of models '");
      long long v85 = *(_OWORD *)&v84->__r_.__value_.__l.__data_;
      v111.__r_.__value_.__r.__words[2] = v84->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v111.__r_.__value_.__l.__data_ = v85;
      v84->__r_.__value_.__l.__size_ = 0;
      v84->__r_.__value_.__r.__words[2] = 0;
      v84->__r_.__value_.__r.__words[0] = 0;
      std::to_string(&v108, v101);
      if ((v108.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        int v86 = &v108;
      }
      else {
        int v86 = (std::string *)v108.__r_.__value_.__r.__words[0];
      }
      if ((v108.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type v87 = HIBYTE(v108.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type v87 = v108.__r_.__value_.__l.__size_;
      }
      uint64_t v88 = std::string::append(&v111, (const std::string::value_type *)v86, v87);
      long long v89 = *(_OWORD *)&v88->__r_.__value_.__l.__data_;
      v112.__r_.__value_.__r.__words[2] = v88->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v112.__r_.__value_.__l.__data_ = v89;
      v88->__r_.__value_.__l.__size_ = 0;
      v88->__r_.__value_.__r.__words[2] = 0;
      v88->__r_.__value_.__r.__words[0] = 0;
      uint64_t v90 = std::string::append(&v112, "'");
      long long v91 = *(_OWORD *)&v90->__r_.__value_.__l.__data_;
      std::string::size_type v106 = v90->__r_.__value_.__r.__words[2];
      *(_OWORD *)std::string __p = v91;
      v90->__r_.__value_.__l.__size_ = 0;
      v90->__r_.__value_.__r.__words[2] = 0;
      v90->__r_.__value_.__r.__words[0] = 0;
      *(void *)uint64_t v3 = 13;
      std::operator+<char>();
      if (SHIBYTE(v106) < 0) {
        operator delete(__p[0]);
      }
      if (SHIBYTE(v112.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v112.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v108.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v108.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v111.__r_.__value_.__r.__words[2]) < 0)
      {
        uint64_t v63 = (void *)v111.__r_.__value_.__r.__words[0];
LABEL_92:
        operator delete(v63);
      }
      goto LABEL_93;
    }
LABEL_130:
    CoreML::Result::Result(v3);
    goto LABEL_138;
  }
  std::string::basic_string[abi:ne180100]<0>(__p, "Pipeline must contain one or more models.");
  *(void *)uint64_t v3 = 13;
  std::operator+<char>();
  if (SHIBYTE(v106) < 0) {
    operator delete(__p[0]);
  }
}

void sub_19EB5A944(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, int a16, __int16 a17, char a18, char a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,void *a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,uint64_t a42,void *a43,uint64_t a44,int a45,__int16 a46,char a47,char a48,uint64_t a49,void *__p,uint64_t a51,int a52,__int16 a53,char a54,char a55)
{
  if (*(char *)(v55 - 169) < 0) {
    operator delete(*(void **)(v55 - 192));
  }
  if (a55 < 0) {
    operator delete(__p);
  }
  if (a48 < 0) {
    operator delete(a43);
  }
  CoreML::Specification::Model::~Model((CoreML::Specification::Model *)&a20);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(v55 - 160);
  _Unwind_Resume(a1);
}

char *std::__hash_table<std::__hash_value_type<std::string,CoreML::Specification::FeatureDescription const*>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,CoreML::Specification::FeatureDescription const*>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,CoreML::Specification::FeatureDescription const*>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,CoreML::Specification::FeatureDescription const*>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>(uint64_t *a1, unsigned __int8 *a2, long long **a3)
{
  unint64_t v7 = std::__string_hash<char>::operator()[abi:ne180100]((uint64_t)a2);
  unint64_t v8 = v7;
  unint64_t v9 = a1[1];
  if (v9)
  {
    uint8x8_t v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
    v10.i16[0] = vaddlv_u8(v10);
    unint64_t v11 = v10.u32[0];
    if (v10.u32[0] > 1uLL)
    {
      unint64_t v3 = v7;
      if (v7 >= v9) {
        unint64_t v3 = v7 % v9;
      }
    }
    else
    {
      unint64_t v3 = (v9 - 1) & v7;
    }
    uint64_t v12 = *(void ***)(*a1 + 8 * v3);
    if (v12)
    {
      uint64_t v13 = (char *)*v12;
      if (*v12)
      {
        do
        {
          unint64_t v14 = *((void *)v13 + 1);
          if (v14 == v8)
          {
            if (std::equal_to<std::string>::operator()[abi:ne180100]((unsigned __int8 *)v13 + 16, a2)) {
              return v13;
            }
          }
          else
          {
            if (v11 > 1)
            {
              if (v14 >= v9) {
                v14 %= v9;
              }
            }
            else
            {
              v14 &= v9 - 1;
            }
            if (v14 != v3) {
              break;
            }
          }
          uint64_t v13 = *(char **)v13;
        }
        while (v13);
      }
    }
  }
  uint64_t v13 = (char *)operator new(0x30uLL);
  *(void *)uint64_t v13 = 0;
  *((void *)v13 + 1) = v8;
  uint64_t v15 = (std::string *)(v13 + 16);
  long long v16 = *a3;
  if (*((char *)*a3 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(v15, *(const std::string::value_type **)v16, *((void *)v16 + 1));
  }
  else
  {
    long long v17 = *v16;
    *((void *)v13 + 4) = *((void *)v16 + 2);
    *(_OWORD *)&v15->__r_.__value_.__l.__data_ = v17;
  }
  uint64_t v18 = a1 + 2;
  *((void *)v13 + 5) = 0;
  float v19 = (float)(unint64_t)(a1[3] + 1);
  float v20 = *((float *)a1 + 8);
  if (!v9 || (float)(v20 * (float)v9) < v19)
  {
    BOOL v21 = 1;
    if (v9 >= 3) {
      BOOL v21 = (v9 & (v9 - 1)) != 0;
    }
    unint64_t v22 = v21 | (2 * v9);
    unint64_t v23 = vcvtps_u32_f32(v19 / v20);
    if (v22 <= v23) {
      int8x8_t prime = (int8x8_t)v23;
    }
    else {
      int8x8_t prime = (int8x8_t)v22;
    }
    if (*(void *)&prime == 1)
    {
      int8x8_t prime = (int8x8_t)2;
    }
    else if ((*(void *)&prime & (*(void *)&prime - 1)) != 0)
    {
      int8x8_t prime = (int8x8_t)std::__next_prime(*(void *)&prime);
    }
    unint64_t v9 = a1[1];
    if (*(void *)&prime > v9) {
      goto LABEL_33;
    }
    if (*(void *)&prime < v9)
    {
      unint64_t v31 = vcvtps_u32_f32((float)(unint64_t)a1[3] / *((float *)a1 + 8));
      if (v9 < 3 || (uint8x8_t v32 = (uint8x8_t)vcnt_s8((int8x8_t)v9), v32.i16[0] = vaddlv_u8(v32), v32.u32[0] > 1uLL))
      {
        unint64_t v31 = std::__next_prime(v31);
      }
      else
      {
        uint64_t v33 = 1 << -(char)__clz(v31 - 1);
        if (v31 >= 2) {
          unint64_t v31 = v33;
        }
      }
      if (*(void *)&prime <= v31) {
        int8x8_t prime = (int8x8_t)v31;
      }
      if (*(void *)&prime >= v9)
      {
        unint64_t v9 = a1[1];
      }
      else
      {
        if (prime)
        {
LABEL_33:
          if (*(void *)&prime >> 61) {
            std::__throw_bad_array_new_length[abi:ne180100]();
          }
          uint64_t v25 = operator new(8 * *(void *)&prime);
          uint64_t v26 = (void *)*a1;
          *a1 = (uint64_t)v25;
          if (v26) {
            operator delete(v26);
          }
          uint64_t v27 = 0;
          a1[1] = (uint64_t)prime;
          do
            *(void *)(*a1 + 8 * v27++) = 0;
          while (*(void *)&prime != v27);
          uint64_t v28 = (void *)*v18;
          if (*v18)
          {
            unint64_t v29 = v28[1];
            uint8x8_t v30 = (uint8x8_t)vcnt_s8(prime);
            v30.i16[0] = vaddlv_u8(v30);
            if (v30.u32[0] > 1uLL)
            {
              if (v29 >= *(void *)&prime) {
                v29 %= *(void *)&prime;
              }
            }
            else
            {
              v29 &= *(void *)&prime - 1;
            }
            *(void *)(*a1 + 8 * v29) = v18;
            int v34 = (void *)*v28;
            if (*v28)
            {
              do
              {
                unint64_t v35 = v34[1];
                if (v30.u32[0] > 1uLL)
                {
                  if (v35 >= *(void *)&prime) {
                    v35 %= *(void *)&prime;
                  }
                }
                else
                {
                  v35 &= *(void *)&prime - 1;
                }
                if (v35 != v29)
                {
                  if (!*(void *)(*a1 + 8 * v35))
                  {
                    *(void *)(*a1 + 8 * v35) = v28;
                    goto LABEL_58;
                  }
                  void *v28 = *v34;
                  *int v34 = **(void **)(*a1 + 8 * v35);
                  **(void **)(*a1 + 8 * v35) = v34;
                  int v34 = v28;
                }
                unint64_t v35 = v29;
LABEL_58:
                uint64_t v28 = v34;
                int v34 = (void *)*v34;
                unint64_t v29 = v35;
              }
              while (v34);
            }
          }
          unint64_t v9 = (unint64_t)prime;
          goto LABEL_62;
        }
        BOOL v40 = (void *)*a1;
        *a1 = 0;
        if (v40) {
          operator delete(v40);
        }
        unint64_t v9 = 0;
        a1[1] = 0;
      }
    }
LABEL_62:
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v8 >= v9) {
        unint64_t v3 = v8 % v9;
      }
      else {
        unint64_t v3 = v8;
      }
    }
    else
    {
      unint64_t v3 = (v9 - 1) & v8;
    }
  }
  uint64_t v36 = *a1;
  uint64_t v37 = *(void **)(*a1 + 8 * v3);
  if (v37)
  {
    *(void *)uint64_t v13 = *v37;
LABEL_75:
    *uint64_t v37 = v13;
    goto LABEL_76;
  }
  *(void *)uint64_t v13 = *v18;
  *uint64_t v18 = v13;
  *(void *)(v36 + 8 * vgoogle::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v18;
  if (*(void *)v13)
  {
    unint64_t v38 = *(void *)(*(void *)v13 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v38 >= v9) {
        v38 %= v9;
      }
    }
    else
    {
      v38 &= v9 - 1;
    }
    uint64_t v37 = (void *)(*a1 + 8 * v38);
    goto LABEL_75;
  }
LABEL_76:
  ++a1[3];
  return v13;
}

void sub_19EB5B08C(_Unwind_Exception *a1)
{
  std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,int>,void *>>>::operator()[abi:ne180100](0, v1);
  _Unwind_Resume(a1);
}

void CoreML::validate<(MLModelType)201>(CoreML *this, CoreML::Specification::Model *a2)
{
  if (*((_DWORD *)a2 + 11) == 201)
  {
    uint64_t v4 = (uint64_t *)*((void *)a2 + 4);
  }
  else
  {
    CoreML::Specification::protobuf_Model_2eproto::InitDefaults(this);
    uint64_t v4 = &CoreML::Specification::_PipelineRegressor_default_instance_;
  }
  unint64_t v5 = (const CoreML::Specification::Pipeline *)v4[2];
  if (v5) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = (const CoreML::Specification::Pipeline *)&CoreML::Specification::_Pipeline_default_instance_;
  }

  CoreML::validate(this, a2, v6);
}

void CoreML::validate<(MLModelType)202>(CoreML *this, CoreML::Specification::Model *a2)
{
  if (*((_DWORD *)a2 + 11) == 202)
  {
    uint64_t v4 = (const CoreML::Specification::Pipeline *)*((void *)a2 + 4);
  }
  else
  {
    CoreML::Specification::protobuf_Model_2eproto::InitDefaults(this);
    uint64_t v4 = (const CoreML::Specification::Pipeline *)&CoreML::Specification::_Pipeline_default_instance_;
  }

  CoreML::validate(this, a2, v4);
}

uint64_t CoreML::Specification::BayesianProbitRegressor_Gaussian::GetCachedSize(CoreML::Specification::BayesianProbitRegressor_Gaussian *this)
{
  return *((unsigned int *)this + 8);
}

uint64_t CoreML::Specification::BayesianProbitRegressor_Gaussian::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = this;
  double v5 = *(double *)(this + 16);
  if (v5 != 0.0) {
    this = google::protobuf::internal::WireFormatLite::WriteDouble(1, a2, v5, a3);
  }
  double v6 = *(double *)(v4 + 24);
  if (v6 != 0.0)
  {
    return google::protobuf::internal::WireFormatLite::WriteDouble(2, a2, v6, a3);
  }
  return this;
}

uint64_t CoreML::Specification::BayesianProbitRegressor_Gaussian::ByteSizeLong(CoreML::Specification::BayesianProbitRegressor_Gaussian *this)
{
  uint64_t v1 = 9;
  if (*((double *)this + 2) == 0.0) {
    uint64_t v1 = 0;
  }
  if (*((double *)this + 3) != 0.0) {
    v1 += 9;
  }
  *((_DWORD *)this + 8) = v1;
  return v1;
}

BOOL CoreML::Specification::BayesianProbitRegressor_Gaussian::MergePartialFromCodedStream(CoreML::Specification::BayesianProbitRegressor_Gaussian *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        double v5 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(v6) = 0;
LABEL_6:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
          unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_20;
          }
          goto LABEL_7;
        }
        uint64_t v6 = *v5;
        if (*v5 < 1) {
          goto LABEL_6;
        }
        *a2 = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_20;
        }
LABEL_7:
        if (v7 >> 3 != 2) {
          break;
        }
        if (v7 != 17) {
          goto LABEL_20;
        }
        unint64_t v16 = 0;
        uint64_t v12 = (unint64_t *)*a2;
        if ((int)(*((_DWORD *)a2 + 2) - *a2) < 8)
        {
          BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v16);
          if (!result) {
            return result;
          }
          unint64_t v13 = v16;
        }
        else
        {
          unint64_t v13 = *v12;
          *a2 = (char *)(v12 + 1);
        }
        *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v13;
      }
      if (v7 >> 3 != 1 || v7 != 9) {
        break;
      }
      unint64_t v16 = 0;
      uint8x8_t v10 = (unint64_t *)*a2;
      if ((int)(*((_DWORD *)a2 + 2) - *a2) < 8)
      {
        BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v16);
        if (!result) {
          return result;
        }
        unint64_t v11 = v16;
      }
      else
      {
        unint64_t v11 = *v10;
        *a2 = (char *)(v10 + 1);
      }
      *((void *)this + 2) = v11;
    }
LABEL_20:
    if (v7) {
      BOOL v14 = (v7 & 7) == 4;
    }
    else {
      BOOL v14 = 1;
    }
    BOOL result = v14;
    if (v14) {
      return result;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

uint64_t CoreML::Specification::BayesianProbitRegressor_Gaussian::IsInitialized(CoreML::Specification::BayesianProbitRegressor_Gaussian *this)
{
  return 1;
}

uint64_t CoreML::Specification::BayesianProbitRegressor_Gaussian::Clear(uint64_t this)
{
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  return this;
}

void CoreML::Specification::BayesianProbitRegressor_Gaussian::New(CoreML::Specification::BayesianProbitRegressor_Gaussian *this, google::protobuf::Arena *a2)
{
}

void sub_19EB5B3D0(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x1081C40B7564605);
  _Unwind_Resume(a1);
}

CoreML::Specification::BayesianProbitRegressor_Gaussian *CoreML::Specification::BayesianProbitRegressor_Gaussian::BayesianProbitRegressor_Gaussian(CoreML::Specification::BayesianProbitRegressor_Gaussian *this)
{
  *(void *)this = &unk_1EF0D86E8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::BayesianProbitRegressor_Gaussian *)&CoreML::Specification::_BayesianProbitRegressor_Gaussian_default_instance_) {
    CoreML::Specification::protobuf_BayesianProbitRegressor_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  return this;
}

void sub_19EB5B458(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::BayesianProbitRegressor_Gaussian>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    unint64_t v3 = result;
    BOOL result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *BOOL result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::BayesianProbitRegressor_Gaussian>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::BayesianProbitRegressor_Gaussian>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

uint64_t CoreML::Specification::BayesianProbitRegressor::GetCachedSize(CoreML::Specification::BayesianProbitRegressor *this)
{
  return *((unsigned int *)this + 29);
}

uint64_t CoreML::Specification::BayesianProbitRegressor::SerializeWithCachedSizes(CoreML::Specification::BayesianProbitRegressor *this, google::protobuf::io::CodedOutputStream *a2, unsigned int a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v6 = *((unsigned int *)this + 28);
  if (v6) {
    google::protobuf::internal::WireFormatLite::WriteUInt32(v6, a2, a3, a4);
  }
  if (this != (CoreML::Specification::BayesianProbitRegressor *)&CoreML::Specification::_BayesianProbitRegressor_default_instance_)
  {
    uint64_t v7 = *((void *)this + 13);
    if (v7) {
      google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
    }
  }
  int v8 = *((_DWORD *)this + 6);
  if (v8)
  {
    for (int i = 0; i != v8; ++i)
      google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)3, *(void *)(*((void *)this + 4) + 8 * i + 8), a2, a4);
  }
  uint8x8_t v10 = (unsigned int *)*((void *)this + 5);
  if (*((char *)v10 + 23) < 0)
  {
    uint64_t v11 = *((void *)v10 + 1);
    if (!v11) {
      goto LABEL_15;
    }
    uint8x8_t v10 = *(unsigned int **)v10;
    goto LABEL_14;
  }
  LODWORD(v11) = *((unsigned __int8 *)v10 + 23);
  if (*((unsigned char *)v10 + 23))
  {
LABEL_14:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v10, v11, 1, (uint64_t)"CoreML.Specification.BayesianProbitRegressor.regressionInputFeatureName");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0xAu, *((void *)this + 5), a2);
  }
LABEL_15:
  uint64_t v12 = (unsigned int *)*((void *)this + 6);
  if (*((char *)v12 + 23) < 0)
  {
    uint64_t v13 = *((void *)v12 + 1);
    if (!v13) {
      goto LABEL_21;
    }
    uint64_t v12 = *(unsigned int **)v12;
    goto LABEL_20;
  }
  LODWORD(v1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = *((unsigned __int8 *)v12 + 23);
  if (*((unsigned char *)v12 + 23))
  {
LABEL_20:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v12, v13, 1, (uint64_t)"CoreML.Specification.BayesianProbitRegressor.optimismInputFeatureName");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0xBu, *((void *)this + 6), a2);
  }
LABEL_21:
  BOOL v14 = (unsigned int *)*((void *)this + 7);
  if (*((char *)v14 + 23) < 0)
  {
    uint64_t v15 = *((void *)v14 + 1);
    if (!v15) {
      goto LABEL_27;
    }
    BOOL v14 = *(unsigned int **)v14;
    goto LABEL_26;
  }
  LODWORD(v15) = *((unsigned __int8 *)v14 + 23);
  if (*((unsigned char *)v14 + 23))
  {
LABEL_26:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v14, v15, 1, (uint64_t)"CoreML.Specification.BayesianProbitRegressor.samplingScaleInputFeatureName");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0xCu, *((void *)this + 7), a2);
  }
LABEL_27:
  unint64_t v16 = (unsigned int *)*((void *)this + 8);
  if (*((char *)v16 + 23) < 0)
  {
    uint64_t v17 = *((void *)v16 + 1);
    if (!v17) {
      goto LABEL_33;
    }
    unint64_t v16 = *(unsigned int **)v16;
    goto LABEL_32;
  }
  LODWORD(v17) = *((unsigned __int8 *)v16 + 23);
  if (*((unsigned char *)v16 + 23))
  {
LABEL_32:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v16, v17, 1, (uint64_t)"CoreML.Specification.BayesianProbitRegressor.samplingTruncationInputFeatureName");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0xDu, *((void *)this + 8), a2);
  }
LABEL_33:
  uint64_t v18 = (unsigned int *)*((void *)this + 9);
  if (*((char *)v18 + 23) < 0)
  {
    uint64_t v19 = *((void *)v18 + 1);
    if (!v19) {
      goto LABEL_39;
    }
    uint64_t v18 = *(unsigned int **)v18;
    goto LABEL_38;
  }
  LODWORD(v19) = *((unsigned __int8 *)v18 + 23);
  if (*((unsigned char *)v18 + 23))
  {
LABEL_38:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v18, v19, 1, (uint64_t)"CoreML.Specification.BayesianProbitRegressor.meanOutputFeatureName");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0x14u, *((void *)this + 9), a2);
  }
LABEL_39:
  float v20 = (unsigned int *)*((void *)this + 10);
  if (*((char *)v20 + 23) < 0)
  {
    uint64_t v21 = *((void *)v20 + 1);
    if (!v21) {
      goto LABEL_45;
    }
    float v20 = *(unsigned int **)v20;
    goto LABEL_44;
  }
  LODWORD(v21) = *((unsigned __int8 *)v20 + 23);
  if (*((unsigned char *)v20 + 23))
  {
LABEL_44:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v20, v21, 1, (uint64_t)"CoreML.Specification.BayesianProbitRegressor.varianceOutputFeatureName");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0x15u, *((void *)this + 10), a2);
  }
LABEL_45:
  unint64_t v22 = (unsigned int *)*((void *)this + 11);
  if (*((char *)v22 + 23) < 0)
  {
    uint64_t v23 = *((void *)v22 + 1);
    if (!v23) {
      goto LABEL_51;
    }
    unint64_t v22 = *(unsigned int **)v22;
    goto LABEL_50;
  }
  LODWORD(v2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = *((unsigned __int8 *)v22 + 23);
  if (*((unsigned char *)v22 + 23))
  {
LABEL_50:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v22, v23, 1, (uint64_t)"CoreML.Specification.BayesianProbitRegressor.pessimisticProbabilityOutputFeatureName");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0x16u, *((void *)this + 11), a2);
  }
LABEL_51:
  uint64_t result = *((void *)this + 12);
  if (*(char *)(result + 23) < 0)
  {
    uint64_t v25 = *(void *)(result + 8);
    if (!v25) {
      return result;
    }
    uint64_t result = *(void *)result;
  }
  else
  {
    LODWORD(v25) = *(unsigned __int8 *)(result + 23);
    if (!*(unsigned char *)(result + 23)) {
      return result;
    }
  }
  google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)result, v25, 1, (uint64_t)"CoreML.Specification.BayesianProbitRegressor.sampledProbabilityOutputFeatureName");
  uint64_t v26 = *((void *)this + 12);

  return google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0x17u, v26, a2);
}

uint64_t CoreML::Specification::BayesianProbitRegressor::ByteSizeLong(CoreML::Specification::BayesianProbitRegressor *this)
{
  int v2 = *((_DWORD *)this + 6);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = *((unsigned int *)this + 6);
    do
    {
      uint64_t v5 = CoreML::Specification::BayesianProbitRegressor_FeatureWeight::ByteSizeLong(*(CoreML::Specification::BayesianProbitRegressor_FeatureWeight **)(*((void *)this + 4) + 8 * v3 + 8));
      v4 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t v6 = *((void *)this + 5);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
  if (*(char *)(v6 + 23) < 0)
  {
    if (!*(void *)(v6 + 8)) {
      goto LABEL_11;
    }
  }
  else if (!*(unsigned char *)(v6 + 23))
  {
    goto LABEL_11;
  }
  uint64_t v8 = *(void *)(v6 + 8);
  if ((v7 & 0x80u) == 0) {
    uint64_t v8 = v7;
  }
  v4 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_11:
  uint64_t v9 = *((void *)this + 6);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
  if (*(char *)(v9 + 23) < 0)
  {
    if (!*(void *)(v9 + 8)) {
      goto LABEL_16;
    }
  }
  else if (!*(unsigned char *)(v9 + 23))
  {
    goto LABEL_16;
  }
  uint64_t v11 = *(void *)(v9 + 8);
  if ((v10 & 0x80u) == 0) {
    uint64_t v11 = v10;
  }
  v4 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_16:
  uint64_t v12 = *((void *)this + 7);
  uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
  if (*(char *)(v12 + 23) < 0)
  {
    if (!*(void *)(v12 + 8)) {
      goto LABEL_21;
    }
  }
  else if (!*(unsigned char *)(v12 + 23))
  {
    goto LABEL_21;
  }
  uint64_t v14 = *(void *)(v12 + 8);
  if ((v13 & 0x80u) == 0) {
    uint64_t v14 = v13;
  }
  v4 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_21:
  uint64_t v15 = *((void *)this + 8);
  uint64_t v16 = *(unsigned __int8 *)(v15 + 23);
  if (*(char *)(v15 + 23) < 0)
  {
    if (!*(void *)(v15 + 8)) {
      goto LABEL_26;
    }
  }
  else if (!*(unsigned char *)(v15 + 23))
  {
    goto LABEL_26;
  }
  uint64_t v17 = *(void *)(v15 + 8);
  if ((v16 & 0x80u) == 0) {
    uint64_t v17 = v16;
  }
  v4 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_26:
  uint64_t v18 = *((void *)this + 9);
  uint64_t v19 = *(unsigned __int8 *)(v18 + 23);
  if (*(char *)(v18 + 23) < 0)
  {
    if (!*(void *)(v18 + 8)) {
      goto LABEL_31;
    }
  }
  else if (!*(unsigned char *)(v18 + 23))
  {
    goto LABEL_31;
  }
  uint64_t v20 = *(void *)(v18 + 8);
  if ((v19 & 0x80u) == 0) {
    uint64_t v20 = v19;
  }
  v4 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_31:
  uint64_t v21 = *((void *)this + 10);
  uint64_t v22 = *(unsigned __int8 *)(v21 + 23);
  if (*(char *)(v21 + 23) < 0)
  {
    if (!*(void *)(v21 + 8)) {
      goto LABEL_36;
    }
  }
  else if (!*(unsigned char *)(v21 + 23))
  {
    goto LABEL_36;
  }
  uint64_t v23 = *(void *)(v21 + 8);
  if ((v22 & 0x80u) == 0) {
    uint64_t v23 = v22;
  }
  v4 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_36:
  uint64_t v24 = *((void *)this + 11);
  uint64_t v25 = *(unsigned __int8 *)(v24 + 23);
  if (*(char *)(v24 + 23) < 0)
  {
    if (!*(void *)(v24 + 8)) {
      goto LABEL_41;
    }
  }
  else if (!*(unsigned char *)(v24 + 23))
  {
    goto LABEL_41;
  }
  uint64_t v26 = *(void *)(v24 + 8);
  if ((v25 & 0x80u) == 0) {
    uint64_t v26 = v25;
  }
  v4 += v26 + ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_41:
  uint64_t v27 = *((void *)this + 12);
  uint64_t v28 = *(unsigned __int8 *)(v27 + 23);
  if (*(char *)(v27 + 23) < 0)
  {
    if (!*(void *)(v27 + 8)) {
      goto LABEL_46;
    }
  }
  else if (!*(unsigned char *)(v27 + 23))
  {
    goto LABEL_46;
  }
  uint64_t v29 = *(void *)(v27 + 8);
  if ((v28 & 0x80u) == 0) {
    uint64_t v29 = v28;
  }
  v4 += v29 + ((9 * (__clz(v29 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_46:
  if (this != (CoreML::Specification::BayesianProbitRegressor *)&CoreML::Specification::_BayesianProbitRegressor_default_instance_)
  {
    uint64_t v30 = *((void *)this + 13);
    if (v30)
    {
      uint64_t v31 = 9;
      if (*(double *)(v30 + 16) == 0.0) {
        uint64_t v31 = 0;
      }
      if (*(double *)(v30 + 24) != 0.0) {
        v31 += 9;
      }
      *(_DWORD *)(v30 + 32) = v31;
      v4 += v31 + ((9 * (__clz(v31 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  int v32 = *((_DWORD *)this + 28);
  if (v32) {
    v4 += ((9 * (__clz(v32 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  *((_DWORD *)this + 29) = v4;
  return v4;
}

uint64_t CoreML::Specification::BayesianProbitRegressor_FeatureWeight::ByteSizeLong(CoreML::Specification::BayesianProbitRegressor_FeatureWeight *this)
{
  int v2 = *((_DWORD *)this + 6);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = *((unsigned int *)this + 6);
    do
    {
      uint64_t v5 = CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight::ByteSizeLong(*(CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight **)(*((void *)this + 4) + 8 * v3 + 8));
      v4 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  int v6 = *((_DWORD *)this + 10);
  if (v6) {
    v4 += ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  *((_DWORD *)this + 11) = v4;
  return v4;
}

uint64_t CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight::ByteSizeLong(CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight *this)
{
  if (this == (CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight *)&CoreML::Specification::_BayesianProbitRegressor_FeatureValueWeight_default_instance_)
  {
    uint64_t v1 = 0;
  }
  else
  {
    uint64_t v1 = *((void *)this + 2);
    if (v1)
    {
      uint64_t v2 = 9;
      if (*(double *)(v1 + 16) == 0.0) {
        uint64_t v2 = 0;
      }
      if (*(double *)(v1 + 24) != 0.0) {
        v2 += 9;
      }
      *(_DWORD *)(v1 + 32) = v2;
      uint64_t v1 = v2 + ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  int v3 = *((_DWORD *)this + 6);
  if (v3) {
    v1 += ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  *((_DWORD *)this + 7) = v1;
  return v1;
}

uint64_t CoreML::Specification::BayesianProbitRegressor::MergePartialFromCodedStream(CoreML::Specification::BayesianProbitRegressor *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  BOOL v41 = (std::string **)((char *)this + 88);
  uint64_t v42 = (std::string **)((char *)this + 96);
  uint64_t v5 = (std::string **)((char *)this + 72);
  int v6 = (std::string **)((char *)this + 64);
  uint64_t v7 = (std::string **)((char *)this + 56);
  uint64_t v8 = (std::string **)((char *)this + 48);
  uint64_t v9 = (std::string **)((char *)this + 40);
  uint64_t v39 = (CoreML::Specification::BayesianProbitRegressor *)((char *)this + 16);
  BOOL v40 = (std::string **)((char *)this + 80);
  while (1)
  {
    while (1)
    {
      uint64_t v10 = *(unsigned __int8 **)a2;
      unint64_t v11 = *((void *)a2 + 1);
      if (*(void *)a2 >= v11)
      {
        LODWORD(v1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
        goto LABEL_16;
      }
      uint64_t v12 = v10 + 1;
      uint64_t v13 = *v10;
      if ((char)*v10 >= 1) {
        break;
      }
      if ((unint64_t)v12 < v11)
      {
        int v15 = *v12;
        if ((v13 & ~v15) >= 0x80)
        {
          *(void *)a2 = v10 + 2;
          unint64_t v14 = (v13 + (v15 << 7) - 128) | 0x100000000;
          goto LABEL_17;
        }
      }
LABEL_16:
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v13);
      unint64_t v14 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
      if ((v14 & 0x100000000) == 0) {
        goto LABEL_9;
      }
LABEL_17:
      switch(v14 >> 3)
      {
        case 1u:
          if (v14 != 8) {
            goto LABEL_9;
          }
          uint64_t v18 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1))
          {
            int v19 = 0;
          }
          else
          {
            int v19 = *v18;
            if ((*v18 & 0x80000000) == 0)
            {
              *((_DWORD *)this + 28) = v19;
              *(void *)a2 = v18 + 1;
              continue;
            }
          }
          uint64_t Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v19);
          *((_DWORD *)this + 28) = Varint32Fallback;
          if (Varint32Fallback < 0) {
            return 0;
          }
          break;
        case 2u:
          if (v14 != 18) {
            goto LABEL_9;
          }
          uint64_t v20 = (CoreML::Specification::BayesianProbitRegressor_Gaussian *)*((void *)this + 13);
          if (!v20) {
            operator new();
          }
          uint64_t v21 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v21 < 0)
          {
            int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            int VarintSizeAsIntFallback = *v21;
            *(void *)a2 = v21 + 1;
          }
          int v34 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          int v36 = *((_DWORD *)a2 + 13);
          BOOL v32 = __OFSUB__(v36--, 1);
          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v36;
          if (v36 < 0 != v32) {
            return 0;
          }
          int v33 = v34;
          uint64_t result = CoreML::Specification::BayesianProbitRegressor_Gaussian::MergePartialFromCodedStream(v20, (char **)a2, v35);
          if (!result) {
            return result;
          }
LABEL_87:
          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v33)) {
            return 0;
          }
          continue;
        case 3u:
          if (v14 != 26) {
            goto LABEL_9;
          }
          uint64_t v23 = google::protobuf::internal::RepeatedPtrFieldBase::Add<google::protobuf::RepeatedPtrField<CoreML::Specification::BayesianProbitRegressor_FeatureWeight>::TypeHandler>(v39);
          uint64_t v24 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v24 < 0)
          {
            int v25 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v25 < 0) {
              return 0;
            }
          }
          else
          {
            int v25 = *v24;
            *(void *)a2 = v24 + 1;
          }
          int v29 = google::protobuf::io::CodedInputStream::PushLimit(a2, v25);
          int v31 = *((_DWORD *)a2 + 13);
          BOOL v32 = __OFSUB__(v31--, 1);
          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v31;
          if (v31 < 0 != v32) {
            return 0;
          }
          int v33 = v29;
          uint64_t result = CoreML::Specification::BayesianProbitRegressor_FeatureWeight::MergePartialFromCodedStream((CoreML::Specification::BayesianProbitRegressor_FeatureWeight *)v23, a2, v30);
          if (!result) {
            return result;
          }
          goto LABEL_87;
        case 0xAu:
          if (v14 != 82) {
            goto LABEL_9;
          }
          if (*v9 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
            google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
          }
          uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((unsigned __int8 **)a2, *v9);
          if (!result) {
            return result;
          }
          uint64_t v27 = *v9;
          if (SHIBYTE((*v9)->__r_.__value_.__r.__words[2]) < 0)
          {
            uint64_t v27 = (std::string *)v27->__r_.__value_.__r.__words[0];
            std::string::size_type size = (*v9)->__r_.__value_.__l.__size_;
          }
          else
          {
            LODWORD(size) = HIBYTE((*v9)->__r_.__value_.__r.__words[2]);
          }
          uint64_t v37 = "CoreML.Specification.BayesianProbitRegressor.regressionInputFeatureName";
          goto LABEL_105;
        case 0xBu:
          if (v14 != 90) {
            goto LABEL_9;
          }
          if (*v8 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
            google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
          }
          uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((unsigned __int8 **)a2, *v8);
          if (!result) {
            return result;
          }
          uint64_t v27 = *v8;
          if (SHIBYTE((*v8)->__r_.__value_.__r.__words[2]) < 0)
          {
            uint64_t v27 = (std::string *)v27->__r_.__value_.__r.__words[0];
            std::string::size_type size = (*v8)->__r_.__value_.__l.__size_;
          }
          else
          {
            LODWORD(size) = HIBYTE((*v8)->__r_.__value_.__r.__words[2]);
          }
          uint64_t v37 = "CoreML.Specification.BayesianProbitRegressor.optimismInputFeatureName";
          goto LABEL_105;
        case 0xCu:
          if (v14 != 98) {
            goto LABEL_9;
          }
          if (*v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
            google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
          }
          uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((unsigned __int8 **)a2, *v7);
          if (!result) {
            return result;
          }
          uint64_t v27 = *v7;
          if (SHIBYTE((*v7)->__r_.__value_.__r.__words[2]) < 0)
          {
            uint64_t v27 = (std::string *)v27->__r_.__value_.__r.__words[0];
            std::string::size_type size = (*v7)->__r_.__value_.__l.__size_;
          }
          else
          {
            LODWORD(size) = HIBYTE((*v7)->__r_.__value_.__r.__words[2]);
          }
          uint64_t v37 = "CoreML.Specification.BayesianProbitRegressor.samplingScaleInputFeatureName";
          goto LABEL_105;
        case 0xDu:
          if (v14 != 106) {
            goto LABEL_9;
          }
          if (*v6 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
            google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
          }
          uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((unsigned __int8 **)a2, *v6);
          if (!result) {
            return result;
          }
          uint64_t v27 = *v6;
          if (SHIBYTE((*v6)->__r_.__value_.__r.__words[2]) < 0)
          {
            uint64_t v27 = (std::string *)v27->__r_.__value_.__r.__words[0];
            std::string::size_type size = (*v6)->__r_.__value_.__l.__size_;
          }
          else
          {
            LODWORD(size) = HIBYTE((*v6)->__r_.__value_.__r.__words[2]);
          }
          uint64_t v37 = "CoreML.Specification.BayesianProbitRegressor.samplingTruncationInputFeatureName";
          goto LABEL_105;
        case 0x14u:
          if (v14 != 162) {
            goto LABEL_9;
          }
          if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
            google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
          }
          uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((unsigned __int8 **)a2, *v5);
          if (!result) {
            return result;
          }
          uint64_t v27 = *v5;
          if (SHIBYTE((*v5)->__r_.__value_.__r.__words[2]) < 0)
          {
            uint64_t v27 = (std::string *)v27->__r_.__value_.__r.__words[0];
            std::string::size_type size = (*v5)->__r_.__value_.__l.__size_;
          }
          else
          {
            LODWORD(size) = HIBYTE((*v5)->__r_.__value_.__r.__words[2]);
          }
          uint64_t v37 = "CoreML.Specification.BayesianProbitRegressor.meanOutputFeatureName";
          goto LABEL_105;
        case 0x15u:
          if (v14 != 170) {
            goto LABEL_9;
          }
          if (*v40 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
            google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
          }
          uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((unsigned __int8 **)a2, *v40);
          if (!result) {
            return result;
          }
          uint64_t v27 = *v40;
          if (SHIBYTE((*v40)->__r_.__value_.__r.__words[2]) < 0)
          {
            uint64_t v27 = (std::string *)v27->__r_.__value_.__r.__words[0];
            std::string::size_type size = (*v40)->__r_.__value_.__l.__size_;
          }
          else
          {
            LODWORD(size) = HIBYTE((*v40)->__r_.__value_.__r.__words[2]);
          }
          uint64_t v37 = "CoreML.Specification.BayesianProbitRegressor.varianceOutputFeatureName";
          goto LABEL_105;
        case 0x16u:
          if (v14 != 178) {
            goto LABEL_9;
          }
          if (*v41 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
            google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
          }
          uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((unsigned __int8 **)a2, *v41);
          if (!result) {
            return result;
          }
          uint64_t v27 = *v41;
          if (SHIBYTE((*v41)->__r_.__value_.__r.__words[2]) < 0)
          {
            uint64_t v27 = (std::string *)v27->__r_.__value_.__r.__words[0];
            std::string::size_type size = (*v41)->__r_.__value_.__l.__size_;
          }
          else
          {
            LODWORD(size) = HIBYTE((*v41)->__r_.__value_.__r.__words[2]);
          }
          uint64_t v37 = "CoreML.Specification.BayesianProbitRegressor.pessimisticProbabilityOutputFeatureName";
          goto LABEL_105;
        case 0x17u:
          if (v14 != 186) {
            goto LABEL_9;
          }
          if (*v42 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
            google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
          }
          uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((unsigned __int8 **)a2, *v42);
          if (!result) {
            return result;
          }
          uint64_t v27 = *v42;
          if (SHIBYTE((*v42)->__r_.__value_.__r.__words[2]) < 0)
          {
            uint64_t v27 = (std::string *)v27->__r_.__value_.__r.__words[0];
            std::string::size_type size = (*v42)->__r_.__value_.__l.__size_;
          }
          else
          {
            LODWORD(size) = HIBYTE((*v42)->__r_.__value_.__r.__words[2]);
          }
          uint64_t v37 = "CoreML.Specification.BayesianProbitRegressor.sampledProbabilityOutputFeatureName";
LABEL_105:
          if (!google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)v27, size, 0, (uint64_t)v37)) {
            return 0;
          }
          continue;
        default:
          goto LABEL_9;
      }
    }
    *(void *)a2 = v12;
    unint64_t v14 = v13 | 0x100000000;
    if ((v14 & 0x100000000) != 0) {
      goto LABEL_17;
    }
LABEL_9:
    if (!v14 || (v14 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v14, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_19EB5C2B0(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x1081C40B7564605);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::BayesianProbitRegressor_FeatureWeight::MergePartialFromCodedStream(CoreML::Specification::BayesianProbitRegressor_FeatureWeight *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (CoreML::Specification::BayesianProbitRegressor_FeatureWeight *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        int v6 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1))
        {
          LODWORD(v7) = 0;
LABEL_7:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
          unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v8 & 0x100000000) == 0) {
            goto LABEL_21;
          }
          goto LABEL_8;
        }
        uint64_t v7 = *v6;
        if (*v6 < 1) {
          goto LABEL_7;
        }
        *(void *)a2 = v6 + 1;
        unint64_t v8 = v7 | 0x100000000;
        if ((v8 & 0x100000000) == 0) {
          goto LABEL_21;
        }
LABEL_8:
        if (v8 >> 3 != 2) {
          break;
        }
        if (v8 != 18) {
          goto LABEL_21;
        }
        uint64_t v13 = google::protobuf::internal::RepeatedPtrFieldBase::Add<google::protobuf::RepeatedPtrField<CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight>::TypeHandler>(v5);
        unint64_t v14 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v14 < 0)
        {
          int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0) {
            return 0;
          }
        }
        else
        {
          int VarintSizeAsIntFallback = *v14;
          *(void *)a2 = v14 + 1;
        }
        int v17 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        int v19 = *((_DWORD *)a2 + 13);
        BOOL v20 = __OFSUB__(v19--, 1);
        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v19;
        if (v19 < 0 == v20)
        {
          int v21 = v17;
          BOOL result = CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight::MergePartialFromCodedStream((CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight *)v13, a2, v18);
          if (!result) {
            return result;
          }
          if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v21)) {
            continue;
          }
        }
        return 0;
      }
      if (v8 >> 3 != 1 || v8 != 8) {
        break;
      }
      unint64_t v11 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        int v12 = 0;
        goto LABEL_33;
      }
      int v12 = *v11;
      if (*v11 < 0)
      {
LABEL_33:
        uint64_t Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v12);
        *((_DWORD *)this + 1CoreML::Specification::StringToInt64Map::New(this, 0) = Varint32Fallback;
        if (Varint32Fallback < 0) {
          return 0;
        }
      }
      else
      {
        *((_DWORD *)this + 1CoreML::Specification::StringToInt64Map::New(this, 0) = v12;
        *(void *)a2 = v11 + 1;
      }
    }
LABEL_21:
    if (!v8 || (v8 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0) {
      return 0;
    }
  }
}

BOOL CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight::MergePartialFromCodedStream(CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1))
        {
          LODWORD(v6) = 0;
LABEL_6:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v6);
          unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_22;
          }
          goto LABEL_7;
        }
        uint64_t v6 = *v5;
        if (*v5 < 1) {
          goto LABEL_6;
        }
        *(void *)a2 = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_22;
        }
LABEL_7:
        if (v7 >> 3 != 2) {
          break;
        }
        if (v7 != 18) {
          goto LABEL_22;
        }
        int v12 = (CoreML::Specification::BayesianProbitRegressor_Gaussian *)*((void *)this + 2);
        if (!v12) {
          operator new();
        }
        uint64_t v13 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v13 < 0)
        {
          int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0) {
            return 0;
          }
        }
        else
        {
          int VarintSizeAsIntFallback = *v13;
          *(void *)a2 = v13 + 1;
        }
        int v16 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        int v18 = *((_DWORD *)a2 + 13);
        BOOL v19 = __OFSUB__(v18--, 1);
        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v18;
        if (v18 < 0 == v19)
        {
          int v20 = v16;
          BOOL result = CoreML::Specification::BayesianProbitRegressor_Gaussian::MergePartialFromCodedStream(v12, (char **)a2, v17);
          if (!result) {
            return result;
          }
          if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v20)) {
            continue;
          }
        }
        return 0;
      }
      if (v7 >> 3 != 1 || v7 != 8) {
        break;
      }
      uint64_t v10 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        int v11 = 0;
        goto LABEL_34;
      }
      int v11 = *v10;
      if (*v10 < 0)
      {
LABEL_34:
        uint64_t Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v11);
        *((_DWORD *)this + 6) = Varint32Fallback;
        if (Varint32Fallback < 0) {
          return 0;
        }
      }
      else
      {
        *((_DWORD *)this + 6) = v11;
        *(void *)a2 = v10 + 1;
      }
    }
LABEL_22:
    if (!v7 || (v7 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_19EB5C67C(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x1081C40B7564605);
  _Unwind_Resume(a1);
}

unint64_t *CoreML::Specification::BayesianProbitRegressor::MergeFrom(unint64_t *this, const CoreML::Specification::BayesianProbitRegressor *a2)
{
  int v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    uint64_t v46 = *((void *)a2 + 4);
    this = (unint64_t *)google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 2), v5);
    unint64_t v45 = this;
    uint64_t v6 = *(int *)v3[4];
    uint64_t v7 = *((int *)v3 + 6);
    int v8 = v6 - v7;
    if ((int)v6 - (int)v7 >= v5) {
      uint64_t v9 = v5;
    }
    else {
      uint64_t v9 = v8;
    }
    if ((int)v9 >= 1)
    {
      uint64_t v10 = (unint64_t **)this;
      int v11 = (const CoreML::Specification::BayesianProbitRegressor_FeatureWeight **)(v46 + 8);
      do
      {
        uint64_t v13 = *v11++;
        int v12 = v13;
        unint64_t v14 = *v10++;
        this = google::protobuf::internal::GenericTypeHandler<CoreML::Specification::BayesianProbitRegressor_FeatureWeight>::Merge(v12, v14);
        --v9;
      }
      while (v9);
    }
    if (v8 < v5)
    {
      int v15 = (google::protobuf::Arena *)v3[2];
      int v16 = v7 + v5 - v6;
      uint64_t v17 = 8 * v6 - 8 * v7;
      int v18 = (google::protobuf::Arena ***)((char *)v45 + v17);
      BOOL v19 = (const CoreML::Specification::BayesianProbitRegressor_FeatureWeight **)(v17 + v46 + 8);
      do
      {
        int v20 = *v19;
        if (!v15) {
          operator new();
        }
        CoreML::Specification::BayesianProbitRegressor_FeatureWeight::BayesianProbitRegressor_FeatureWeight((CoreML::Specification::BayesianProbitRegressor_FeatureWeight *)Aligned);
        uint64_t v22 = google::protobuf::Arena::AllocateAligned(v15, 0, 24);
        *uint64_t v22 = (google::protobuf::Arena *)Aligned;
        v22[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::BayesianProbitRegressor_FeatureWeight>;
        uint64_t v23 = (unint64_t *)((char *)v15 + 32);
        do
          unint64_t v24 = __ldxr(v23);
        while (__stxr((unint64_t)v22, v23));
        v22[2] = (google::protobuf::Arena *)v24;
        this = google::protobuf::internal::GenericTypeHandler<CoreML::Specification::BayesianProbitRegressor_FeatureWeight>::Merge(v20, (unint64_t *)Aligned);
        *v18++ = Aligned;
        ++v19;
        --v16;
      }
      while (v16);
    }
    int v25 = *((_DWORD *)v3 + 6) + v5;
    *((_DWORD *)v3 + 6) = v25;
    uint64_t v26 = (int *)v3[4];
    if (*v26 < v25) {
      int *v26 = v25;
    }
  }
  uint64_t v27 = *((void *)a2 + 5);
  if (*(char *)(v27 + 23) < 0)
  {
    if (!*(void *)(v27 + 8)) {
      goto LABEL_28;
    }
  }
  else if (!*(unsigned char *)(v27 + 23))
  {
    goto LABEL_28;
  }
  this = v3 + 5;
  uint64_t v28 = (long long *)v3[5];
  if (v28 != (long long *)v27)
  {
    if (v28 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
    }
    this = (unint64_t *)std::string::operator=((std::string *)v3[5], (const std::string *)v27);
  }
LABEL_28:
  uint64_t v29 = *((void *)a2 + 6);
  if (*(char *)(v29 + 23) < 0)
  {
    if (!*(void *)(v29 + 8)) {
      goto LABEL_36;
    }
  }
  else if (!*(unsigned char *)(v29 + 23))
  {
    goto LABEL_36;
  }
  this = v3 + 6;
  unsigned int v30 = (long long *)v3[6];
  if (v30 != (long long *)v29)
  {
    if (v30 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
    }
    this = (unint64_t *)std::string::operator=((std::string *)v3[6], (const std::string *)v29);
  }
LABEL_36:
  uint64_t v31 = *((void *)a2 + 7);
  if (*(char *)(v31 + 23) < 0)
  {
    if (!*(void *)(v31 + 8)) {
      goto LABEL_44;
    }
  }
  else if (!*(unsigned char *)(v31 + 23))
  {
    goto LABEL_44;
  }
  this = v3 + 7;
  BOOL v32 = (long long *)v3[7];
  if (v32 != (long long *)v31)
  {
    if (v32 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
    }
    this = (unint64_t *)std::string::operator=((std::string *)v3[7], (const std::string *)v31);
  }
LABEL_44:
  uint64_t v33 = *((void *)a2 + 8);
  if (*(char *)(v33 + 23) < 0)
  {
    if (!*(void *)(v33 + 8)) {
      goto LABEL_52;
    }
  }
  else if (!*(unsigned char *)(v33 + 23))
  {
    goto LABEL_52;
  }
  this = v3 + 8;
  int v34 = (long long *)v3[8];
  if (v34 != (long long *)v33)
  {
    if (v34 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
    }
    this = (unint64_t *)std::string::operator=((std::string *)v3[8], (const std::string *)v33);
  }
LABEL_52:
  uint64_t v35 = *((void *)a2 + 9);
  if (*(char *)(v35 + 23) < 0)
  {
    if (!*(void *)(v35 + 8)) {
      goto LABEL_60;
    }
  }
  else if (!*(unsigned char *)(v35 + 23))
  {
    goto LABEL_60;
  }
  this = v3 + 9;
  int v36 = (long long *)v3[9];
  if (v36 != (long long *)v35)
  {
    if (v36 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
    }
    this = (unint64_t *)std::string::operator=((std::string *)v3[9], (const std::string *)v35);
  }
LABEL_60:
  uint64_t v37 = *((void *)a2 + 10);
  if (*(char *)(v37 + 23) < 0)
  {
    if (!*(void *)(v37 + 8)) {
      goto LABEL_68;
    }
  }
  else if (!*(unsigned char *)(v37 + 23))
  {
    goto LABEL_68;
  }
  this = v3 + 10;
  unint64_t v38 = (long long *)v3[10];
  if (v38 != (long long *)v37)
  {
    if (v38 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
    }
    this = (unint64_t *)std::string::operator=((std::string *)v3[10], (const std::string *)v37);
  }
LABEL_68:
  uint64_t v39 = *((void *)a2 + 11);
  if (*(char *)(v39 + 23) < 0)
  {
    if (!*(void *)(v39 + 8)) {
      goto LABEL_76;
    }
  }
  else if (!*(unsigned char *)(v39 + 23))
  {
    goto LABEL_76;
  }
  this = v3 + 11;
  BOOL v40 = (long long *)v3[11];
  if (v40 != (long long *)v39)
  {
    if (v40 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
    }
    this = (unint64_t *)std::string::operator=((std::string *)v3[11], (const std::string *)v39);
  }
LABEL_76:
  uint64_t v41 = *((void *)a2 + 12);
  if (*(char *)(v41 + 23) < 0)
  {
    if (!*(void *)(v41 + 8)) {
      goto LABEL_84;
    }
  }
  else if (!*(unsigned char *)(v41 + 23))
  {
    goto LABEL_84;
  }
  this = v3 + 12;
  uint64_t v42 = (long long *)v3[12];
  if (v42 != (long long *)v41)
  {
    if (v42 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
    }
    this = (unint64_t *)std::string::operator=((std::string *)v3[12], (const std::string *)v41);
  }
LABEL_84:
  if (a2 != (const CoreML::Specification::BayesianProbitRegressor *)&CoreML::Specification::_BayesianProbitRegressor_default_instance_
    && *((void *)a2 + 13))
  {
    uint64_t v43 = (std::string *)v3[13];
    if (!v43) {
      operator new();
    }
    this = (unint64_t *)CoreML::Specification::SigmoidKernel::MergeFrom(v43, *((const CoreML::Specification::SigmoidKernel **)a2 + 13));
  }
  int v44 = *((_DWORD *)a2 + 28);
  if (v44) {
    *((_DWORD *)v3 + 28) = v44;
  }
  return this;
}

void sub_19EB5CB3C(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x1081C40B7564605);
  _Unwind_Resume(a1);
}

unint64_t *google::protobuf::internal::GenericTypeHandler<CoreML::Specification::BayesianProbitRegressor_FeatureWeight>::Merge(const CoreML::Specification::BayesianProbitRegressor_FeatureWeight *a1, unint64_t *a2)
{
  return CoreML::Specification::BayesianProbitRegressor_FeatureWeight::MergeFrom(a2, a1);
}

CoreML::Specification::BayesianProbitRegressor_FeatureWeight *CoreML::Specification::BayesianProbitRegressor_FeatureWeight::BayesianProbitRegressor_FeatureWeight(CoreML::Specification::BayesianProbitRegressor_FeatureWeight *this)
{
  *(void *)this = &unk_1EF0D8FD0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  if (this != (CoreML::Specification::BayesianProbitRegressor_FeatureWeight *)&CoreML::Specification::_BayesianProbitRegressor_FeatureWeight_default_instance_) {
    CoreML::Specification::protobuf_BayesianProbitRegressor_2eproto::InitDefaults(this);
  }
  *((void *)this + 5) = 0;
  return this;
}

void sub_19EB5CC00(_Unwind_Exception *a1)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::NeuralNetworkPreprocessing>::TypeHandler>(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

unint64_t *CoreML::Specification::BayesianProbitRegressor_FeatureWeight::MergeFrom(unint64_t *this, const CoreML::Specification::BayesianProbitRegressor_FeatureWeight *a2)
{
  int v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    uint64_t v29 = *((void *)a2 + 4);
    this = (unint64_t *)google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 2), v5);
    uint64_t v28 = this;
    uint64_t v6 = *(int *)v3[4];
    uint64_t v7 = *((int *)v3 + 6);
    int v8 = v6 - v7;
    if ((int)v6 - (int)v7 >= v5) {
      uint64_t v9 = v5;
    }
    else {
      uint64_t v9 = v8;
    }
    if ((int)v9 >= 1)
    {
      uint64_t v10 = (std::string **)this;
      int v11 = (const CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight **)(v29 + 8);
      do
      {
        uint64_t v13 = *v11++;
        int v12 = v13;
        unint64_t v14 = *v10++;
        this = (unint64_t *)google::protobuf::internal::GenericTypeHandler<CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight>::Merge(v12, v14);
        --v9;
      }
      while (v9);
    }
    if (v8 < v5)
    {
      int v15 = (google::protobuf::Arena *)v3[2];
      int v16 = v7 + v5 - v6;
      uint64_t v17 = 8 * v6 - 8 * v7;
      int v18 = (google::protobuf::Arena ***)((char *)v28 + v17);
      BOOL v19 = (const CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight **)(v17 + v29 + 8);
      do
      {
        int v20 = *v19;
        if (!v15) {
          operator new();
        }
        CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight::BayesianProbitRegressor_FeatureValueWeight((CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight *)Aligned);
        uint64_t v22 = google::protobuf::Arena::AllocateAligned(v15, 0, 24);
        *uint64_t v22 = (google::protobuf::Arena *)Aligned;
        v22[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight>;
        uint64_t v23 = (unint64_t *)((char *)v15 + 32);
        do
          unint64_t v24 = __ldxr(v23);
        while (__stxr((unint64_t)v22, v23));
        v22[2] = (google::protobuf::Arena *)v24;
        this = (unint64_t *)google::protobuf::internal::GenericTypeHandler<CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight>::Merge(v20, (std::string *)Aligned);
        *v18++ = Aligned;
        ++v19;
        --v16;
      }
      while (v16);
    }
    int v25 = *((_DWORD *)v3 + 6) + v5;
    *((_DWORD *)v3 + 6) = v25;
    uint64_t v26 = (int *)v3[4];
    if (*v26 < v25) {
      int *v26 = v25;
    }
  }
  int v27 = *((_DWORD *)a2 + 10);
  if (v27) {
    *((_DWORD *)v3 + 1CoreML::Specification::StringToInt64Map::New(this, 0) = v27;
  }
  return this;
}

void sub_19EB5CDD8(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C406A65A86DLL);
  _Unwind_Resume(a1);
}

std::string *google::protobuf::internal::GenericTypeHandler<CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight>::Merge(const CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight *a1, std::string *a2)
{
  return CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight::MergeFrom(a2, a1);
}

CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight *CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight::BayesianProbitRegressor_FeatureValueWeight(CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight *this)
{
  *(void *)this = &unk_1EF0D93F8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight *)&CoreML::Specification::_BayesianProbitRegressor_FeatureValueWeight_default_instance_) {
    CoreML::Specification::protobuf_BayesianProbitRegressor_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  return this;
}

void sub_19EB5CE6C(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight::MergeFrom(std::string *this, const CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight *a2)
{
  int v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  uint64_t v5 = *((void *)a2 + 2);
  if (a2 != (const CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight *)&CoreML::Specification::_BayesianProbitRegressor_FeatureValueWeight_default_instance_
    && v5 != 0)
  {
    uint64_t v7 = (std::string *)v3->__r_.__value_.__r.__words[2];
    if (!v7) {
      operator new();
    }
    if (v5) {
      int v8 = (const CoreML::Specification::SigmoidKernel *)*((void *)a2 + 2);
    }
    else {
      int v8 = (const CoreML::Specification::SigmoidKernel *)&CoreML::Specification::_BayesianProbitRegressor_Gaussian_default_instance_;
    }
    this = CoreML::Specification::SigmoidKernel::MergeFrom(v7, v8);
  }
  int v9 = *((_DWORD *)a2 + 6);
  if (v9) {
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v9;
  }
  return this;
}

void sub_19EB5CF2C(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x1081C40B7564605);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::BayesianProbitRegressor::IsInitialized(CoreML::Specification::BayesianProbitRegressor *this)
{
  return 1;
}

uint64_t CoreML::Specification::BayesianProbitRegressor::Clear(CoreML::Specification::BayesianProbitRegressor *this)
{
  uint64_t v2 = *((unsigned int *)this + 6);
  if ((int)v2 >= 1)
  {
    int v3 = (uint64_t *)(*((void *)this + 4) + 8);
    do
    {
      uint64_t v4 = *v3++;
      google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight>::TypeHandler>(v4 + 16);
      *(_DWORD *)(v4 + 4CoreML::Specification::StringToInt64Map::New(this, 0) = 0;
      --v2;
    }
    while (v2);
    *((_DWORD *)this + 6) = 0;
  }
  uint64_t v5 = *((void *)this + 5);
  if ((long long *)v5 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)uint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v5 = 0;
      *(unsigned char *)(v5 + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
    }
  }
  uint64_t v6 = *((void *)this + 6);
  if ((long long *)v6 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)uint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v6 = 0;
      *(unsigned char *)(v6 + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
    }
  }
  uint64_t v7 = *((void *)this + 7);
  if ((long long *)v7 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v7 + 23) < 0)
    {
      **(unsigned char **)uint64_t v7 = 0;
      *(void *)(v7 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v7 = 0;
      *(unsigned char *)(v7 + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
    }
  }
  uint64_t v8 = *((void *)this + 8);
  if ((long long *)v8 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v8 + 23) < 0)
    {
      **(unsigned char **)uint64_t v8 = 0;
      *(void *)(v8 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v8 = 0;
      *(unsigned char *)(v8 + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
    }
  }
  uint64_t v9 = *((void *)this + 9);
  if ((long long *)v9 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v9 + 23) < 0)
    {
      **(unsigned char **)uint64_t v9 = 0;
      *(void *)(v9 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v9 = 0;
      *(unsigned char *)(v9 + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
    }
  }
  uint64_t v10 = *((void *)this + 10);
  if ((long long *)v10 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v10 + 23) < 0)
    {
      **(unsigned char **)uint64_t v10 = 0;
      *(void *)(v10 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v10 = 0;
      *(unsigned char *)(v10 + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
    }
  }
  uint64_t v11 = *((void *)this + 11);
  if ((long long *)v11 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v11 + 23) < 0)
    {
      **(unsigned char **)uint64_t v11 = 0;
      *(void *)(v11 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v11 = 0;
      *(unsigned char *)(v11 + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
    }
  }
  uint64_t v12 = *((void *)this + 12);
  if ((long long *)v12 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v12 + 23) < 0)
    {
      **(unsigned char **)uint64_t v12 = 0;
      *(void *)(v12 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v12 = 0;
      *(unsigned char *)(v12 + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
    }
  }
  uint64_t result = *((void *)this + 13);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  *((_DWORD *)this + 28) = 0;
  return result;
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight>::TypeHandler>(uint64_t result)
{
  uint64_t v1 = *(unsigned int *)(result + 8);
  if ((int)v1 >= 1)
  {
    uint64_t v2 = result;
    uint64_t v3 = *(void *)(result + 16) + 8;
    do
    {
      uint64_t v4 = *(void *)v3;
      uint64_t result = *(void *)(*(void *)v3 + 16);
      if (result) {
        uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
      }
      *(void *)(v4 + 16) = 0;
      *(_DWORD *)(v4 + 24) = 0;
      v3 += 8;
      --v1;
    }
    while (v1);
    *(_DWORD *)(v2 + 8) = 0;
  }
  return result;
}

void CoreML::Specification::BayesianProbitRegressor::New(CoreML::Specification::BayesianProbitRegressor *this, google::protobuf::Arena *a2)
{
}

void sub_19EB5D224(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C4092A090F6);
  _Unwind_Resume(a1);
}

CoreML::Specification::BayesianProbitRegressor *CoreML::Specification::BayesianProbitRegressor::BayesianProbitRegressor(CoreML::Specification::BayesianProbitRegressor *this)
{
  *(void *)this = &unk_1EF0D5B90;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  if (this != (CoreML::Specification::BayesianProbitRegressor *)&CoreML::Specification::_BayesianProbitRegressor_default_instance_) {
    CoreML::Specification::protobuf_BayesianProbitRegressor_2eproto::InitDefaults(this);
  }
  *((void *)this + 5) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 6) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 7) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 8) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 9) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 1CoreML::Specification::StringToInt64Map::New(this, 0) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 11) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 12) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  *((void *)this + 14) = 0;
  return this;
}

void sub_19EB5D2D4(_Unwind_Exception *a1)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::NeuralNetworkPreprocessing>::TypeHandler>(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::BayesianProbitRegressor>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::BayesianProbitRegressor>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::BayesianProbitRegressor>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::BayesianProbitRegressor::New(CoreML::Specification::BayesianProbitRegressor *this)
{
}

void *CoreML::Specification::BayesianProbitRegressor::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.BayesianProbitRegressor");
}

void CoreML::Specification::BayesianProbitRegressor::~BayesianProbitRegressor(CoreML::Specification::BayesianProbitRegressor *this)
{
  CoreML::Specification::BayesianProbitRegressor::~BayesianProbitRegressor(this);

  JUMPOUT(0x19F3C1920);
}

{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(void *)this = &unk_1EF0D5B90;
  uint64_t v2 = *((void *)this + 5);
  if ((long long *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x19F3C1920](v2, 0x1012C40EC159624);
  }
  uint64_t v4 = *((void *)this + 6);
  if ((long long *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    MEMORY[0x19F3C1920](v4, 0x1012C40EC159624);
  }
  uint64_t v6 = *((void *)this + 7);
  if ((long long *)v6 != &google::protobuf::internal::fixed_address_empty_string && v6)
  {
    if (*(char *)(v6 + 23) < 0) {
      operator delete(*(void **)v6);
    }
    MEMORY[0x19F3C1920](v6, 0x1012C40EC159624);
  }
  uint64_t v7 = *((void *)this + 8);
  if ((long long *)v7 != &google::protobuf::internal::fixed_address_empty_string && v7)
  {
    if (*(char *)(v7 + 23) < 0) {
      operator delete(*(void **)v7);
    }
    MEMORY[0x19F3C1920](v7, 0x1012C40EC159624);
  }
  uint64_t v8 = *((void *)this + 9);
  if ((long long *)v8 != &google::protobuf::internal::fixed_address_empty_string && v8)
  {
    if (*(char *)(v8 + 23) < 0) {
      operator delete(*(void **)v8);
    }
    MEMORY[0x19F3C1920](v8, 0x1012C40EC159624);
  }
  uint64_t v9 = *((void *)this + 10);
  if ((long long *)v9 != &google::protobuf::internal::fixed_address_empty_string && v9)
  {
    if (*(char *)(v9 + 23) < 0) {
      operator delete(*(void **)v9);
    }
    MEMORY[0x19F3C1920](v9, 0x1012C40EC159624);
  }
  uint64_t v10 = *((void *)this + 11);
  if ((long long *)v10 != &google::protobuf::internal::fixed_address_empty_string && v10)
  {
    if (*(char *)(v10 + 23) < 0) {
      operator delete(*(void **)v10);
    }
    MEMORY[0x19F3C1920](v10, 0x1012C40EC159624);
  }
  uint64_t v11 = *((void *)this + 12);
  if ((long long *)v11 != &google::protobuf::internal::fixed_address_empty_string && v11)
  {
    if (*(char *)(v11 + 23) < 0) {
      operator delete(*(void **)v11);
    }
    MEMORY[0x19F3C1920](v11, 0x1012C40EC159624);
  }
  if (this != (CoreML::Specification::BayesianProbitRegressor *)&CoreML::Specification::_BayesianProbitRegressor_default_instance_)
  {
    uint64_t v12 = *((void *)this + 13);
    if (v12) {
      (*(void (**)(uint64_t))(*(void *)v12 + 8))(v12);
    }
  }
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::NeuralNetworkPreprocessing>::TypeHandler>((void *)this + 2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::BayesianProbitRegressor_FeatureWeight::GetCachedSize(CoreML::Specification::BayesianProbitRegressor_FeatureWeight *this)
{
  return *((unsigned int *)this + 11);
}

uint64_t CoreML::Specification::BayesianProbitRegressor_FeatureWeight::SerializeWithCachedSizes(CoreML::Specification::BayesianProbitRegressor_FeatureWeight *this, google::protobuf::io::CodedOutputStream *a2, unsigned int a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t result = *((unsigned int *)this + 10);
  if (result) {
    uint64_t result = google::protobuf::internal::WireFormatLite::WriteUInt32(result, a2, a3, a4);
  }
  int v7 = *((_DWORD *)this + 6);
  if (v7)
  {
    for (int i = 0; i != v7; ++i)
      uint64_t result = google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)2, *(void *)(*((void *)this + 4) + 8 * i + 8), a2, a4);
  }
  return result;
}

uint64_t CoreML::Specification::BayesianProbitRegressor_FeatureWeight::IsInitialized(CoreML::Specification::BayesianProbitRegressor_FeatureWeight *this)
{
  return 1;
}

uint64_t CoreML::Specification::BayesianProbitRegressor_FeatureWeight::Clear(CoreML::Specification::BayesianProbitRegressor_FeatureWeight *this)
{
  uint64_t result = google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight>::TypeHandler>((uint64_t)this + 16);
  *((_DWORD *)this + 1CoreML::Specification::BayesianProbitRegressor::New(this, 0) = 0;
  return result;
}

void CoreML::Specification::BayesianProbitRegressor_FeatureWeight::New(CoreML::Specification::BayesianProbitRegressor_FeatureWeight *this, google::protobuf::Arena *a2)
{
}

void sub_19EB5D730(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C408C5061CCLL);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::BayesianProbitRegressor_FeatureWeight>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::BayesianProbitRegressor_FeatureWeight>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::BayesianProbitRegressor_FeatureWeight>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::BayesianProbitRegressor_FeatureWeight::New(CoreML::Specification::BayesianProbitRegressor_FeatureWeight *this)
{
}

void *CoreML::Specification::BayesianProbitRegressor_FeatureWeight::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.BayesianProbitRegressor.FeatureWeight");
}

void CoreML::Specification::BayesianProbitRegressor_FeatureWeight::~BayesianProbitRegressor_FeatureWeight(CoreML::Specification::BayesianProbitRegressor_FeatureWeight *this)
{
  CoreML::Specification::BayesianProbitRegressor_FeatureWeight::~BayesianProbitRegressor_FeatureWeight(this);

  JUMPOUT(0x19F3C1920);
}

{
  *(void *)this = &unk_1EF0D8FD0;
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::NeuralNetworkPreprocessing>::TypeHandler>((void *)this + 2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight::GetCachedSize(CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight *this)
{
  return *((unsigned int *)this + 7);
}

uint64_t CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight::SerializeWithCachedSizes(CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight *this, google::protobuf::io::CodedOutputStream *a2, unsigned int a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t result = *((unsigned int *)this + 6);
  if (result) {
    uint64_t result = google::protobuf::internal::WireFormatLite::WriteUInt32(result, a2, a3, a4);
  }
  if (this != (CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight *)&CoreML::Specification::_BayesianProbitRegressor_FeatureValueWeight_default_instance_)
  {
    uint64_t v7 = *((void *)this + 2);
    if (v7)
    {
      return google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
    }
  }
  return result;
}

uint64_t CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight::IsInitialized(CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight *this)
{
  return 1;
}

uint64_t CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight::Clear(CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight *this)
{
  uint64_t result = *((void *)this + 2);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return result;
}

void CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight::New(CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight *this, google::protobuf::Arena *a2)
{
}

void sub_19EB5D9AC(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C406A65A86DLL);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight::New(CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight *this)
{
}

void *CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.BayesianProbitRegressor.FeatureValueWeight");
}

void CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight::~BayesianProbitRegressor_FeatureValueWeight(CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight *this)
{
  CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight::~BayesianProbitRegressor_FeatureValueWeight(this);

  JUMPOUT(0x19F3C1920);
}

{
  uint64_t v2;

  *(void *)this = &unk_1EF0D93F8;
  if (this != (CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight *)&CoreML::Specification::_BayesianProbitRegressor_FeatureValueWeight_default_instance_)
  {
    uint64_t v2 = *((void *)this + 2);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

void CoreML::Specification::BayesianProbitRegressor_Gaussian::New(CoreML::Specification::BayesianProbitRegressor_Gaussian *this)
{
}

void *CoreML::Specification::BayesianProbitRegressor_Gaussian::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.BayesianProbitRegressor.Gaussian");
}

void CoreML::Specification::BayesianProbitRegressor_Gaussian::~BayesianProbitRegressor_Gaussian(CoreML::Specification::BayesianProbitRegressor_Gaussian *this)
{
  *(void *)this = &unk_1EF0D86E8;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);

  JUMPOUT(0x19F3C1920);
}

{
  *(void *)this = &unk_1EF0D86E8;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

void CoreML::validate<(MLModelType)2002>(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    uint64_t v3 = *(uint64_t **)(a2 + 16);
  }
  else {
    uint64_t v3 = &CoreML::Specification::_ModelDescription_default_instance_;
  }
  if (*(_DWORD *)(a2 + 44) == 2002)
  {
    CoreML::Result::Result((CoreML::Result *)&v65);
    unint64_t v5 = operator new(4uLL);
    *unint64_t v5 = 4;
    v60.__r_.__value_.__l.__size_ = (std::string::size_type)(v5 + 1);
    v60.__r_.__value_.__r.__words[2] = (std::string::size_type)(v5 + 1);
    v60.__r_.__value_.__r.__words[0] = (std::string::size_type)v5;
    CoreML::validateDescriptionsContainFeatureWithTypes<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>>((uint64_t)__p, (uint64_t)(v3 + 2), 1, (unsigned int **)&v60);
    uint64_t v65 = *(void *)__p;
    if (SHIBYTE(v67) < 0) {
      operator delete((void *)v66);
    }
    long long v66 = *(_OWORD *)&__p[8];
    uint64_t v67 = v56;
    HIBYTE(v56) = 0;
    __p[8] = 0;
    operator delete(v5);
    if ((v65 & 0xFFFFFFEF) != 0) {
      goto LABEL_8;
    }
    if (*(_DWORD *)(a2 + 44) == 2002)
    {
      uint64_t v8 = *(uint64_t **)(a2 + 32);
    }
    else
    {
      CoreML::Specification::CoreMLModels::protobuf_VisionFeaturePrint_2eproto::InitDefaults(v6);
      uint64_t v8 = &CoreML::Specification::CoreMLModels::_VisionFeaturePrint_default_instance_;
    }
    int v9 = *((_DWORD *)v8 + 7);
    switch(v9)
    {
      case 0:
        std::string::basic_string[abi:ne180100]<0>(__p, "Type for vision feature print not set");
        *(void *)a1 = 13;
        std::operator+<char>();
        goto LABEL_25;
      case 20:
        int v13 = *(_DWORD *)(v8[2] + 16);
        if ((v13 - 1) >= 2)
        {
          if (!v13)
          {
            std::string::basic_string[abi:ne180100]<0>(__p, "Version for scene is invalid");
            *(void *)a1 = 13;
            std::operator+<char>();
            goto LABEL_25;
          }
          std::to_string(&v64, v13);
          int v44 = std::string::insert(&v64, 0, "Version: '");
          long long v45 = *(_OWORD *)&v44->__r_.__value_.__l.__data_;
          v60.__r_.__value_.__r.__words[2] = v44->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v60.__r_.__value_.__l.__data_ = v45;
          v44->__r_.__value_.__l.__size_ = 0;
          v44->__r_.__value_.__r.__words[2] = 0;
          v44->__r_.__value_.__r.__words[0] = 0;
          uint64_t v46 = std::string::append(&v60, "' for scene print is invalid");
          long long v47 = *(_OWORD *)&v46->__r_.__value_.__l.__data_;
          *(void *)&__p[16] = *((void *)&v46->__r_.__value_.__l + 2);
          *(_OWORD *)std::string __p = v47;
          v46->__r_.__value_.__l.__size_ = 0;
          v46->__r_.__value_.__r.__words[2] = 0;
          v46->__r_.__value_.__r.__words[0] = 0;
          *(void *)a1 = 13;
          std::operator+<char>();
          goto LABEL_96;
        }
        unint64_t v14 = operator new(4uLL);
        *unint64_t v14 = 5;
        v60.__r_.__value_.__l.__size_ = (std::string::size_type)(v14 + 1);
        v60.__r_.__value_.__r.__words[2] = (std::string::size_type)(v14 + 1);
        v60.__r_.__value_.__r.__words[0] = (std::string::size_type)v14;
        CoreML::validateDescriptionsContainFeatureWithTypes<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>>((uint64_t)__p, (uint64_t)(v3 + 5), 1, (unsigned int **)&v60);
        uint64_t v65 = *(void *)__p;
        if (SHIBYTE(v67) < 0) {
          operator delete((void *)v66);
        }
        long long v66 = *(_OWORD *)&__p[8];
        uint64_t v67 = v56;
        HIBYTE(v56) = 0;
        __p[8] = 0;
        operator delete(v14);
        break;
      case 21:
        uint64_t v10 = v8[2];
        int v11 = *(_DWORD *)(v10 + 40);
        if (v11 == 1)
        {
          if (*(_DWORD *)(v10 + 24) == 2)
          {
            LODWORD(v64.__r_.__value_.__l.__data_) = 5;
            std::vector<CoreML::Specification::FeatureType::TypeCase>::vector[abi:ne180100](&v60, &v64, 1uLL);
            CoreML::validateDescriptionsContainFeatureWithTypes<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>>((uint64_t)__p, (uint64_t)(v3 + 5), 2, (unsigned int **)&v60);
            uint64_t v65 = *(void *)__p;
            if (SHIBYTE(v67) < 0) {
              operator delete((void *)v66);
            }
            long long v66 = *(_OWORD *)&__p[8];
            uint64_t v67 = v56;
            HIBYTE(v56) = 0;
            __p[8] = 0;
            int v15 = (std::string *)v60.__r_.__value_.__r.__words[0];
            if (v60.__r_.__value_.__r.__words[0])
            {
              v60.__r_.__value_.__l.__size_ = v60.__r_.__value_.__r.__words[0];
              operator delete(v60.__r_.__value_.__l.__data_);
            }
            if ((v65 & 0xFFFFFFEF) == 0)
            {
              uint64_t v16 = v3[7];
              uint64_t v17 = v16 ? (uint64_t **)(v16 + 8) : 0;
              uint64_t v18 = *((int *)v3 + 12);
              if (v18)
              {
                long long v54 = &v17[v18];
                while (1)
                {
                  BOOL v19 = *v17;
                  *(_OWORD *)&v60.__r_.__value_.__l.__data_ = (unint64_t)&unk_1EF0D2E70;
                  int v63 = 0;
                  uint64_t v20 = v19[1];
                  if (v20) {
                    int v15 = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&v60.__r_.__value_.__l.__size_, v20 & 0xFFFFFFFFFFFFFFFELL);
                  }
                  v60.__r_.__value_.__r.__words[2] = (std::string::size_type)&google::protobuf::internal::fixed_address_empty_string;
                  uint64_t v21 = v19[2];
                  if (*(char *)(v21 + 23) < 0) {
                    uint64_t v22 = *(void *)(v21 + 8);
                  }
                  else {
                    uint64_t v22 = *(unsigned __int8 *)(v21 + 23);
                  }
                  if ((long long *)v21 != &google::protobuf::internal::fixed_address_empty_string && v22 != 0) {
                    google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
                  }
                  uint64_t v61 = &google::protobuf::internal::fixed_address_empty_string;
                  uint64_t v24 = v19[3];
                  if (*(char *)(v24 + 23) < 0) {
                    uint64_t v25 = *(void *)(v24 + 8);
                  }
                  else {
                    uint64_t v25 = *(unsigned __int8 *)(v24 + 23);
                  }
                  if ((long long *)v24 != &google::protobuf::internal::fixed_address_empty_string && v25 != 0) {
                    google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
                  }
                  if (v19 != &CoreML::Specification::_FeatureDescription_default_instance_ && v19[4]) {
                    operator new();
                  }
                  uint64_t v62 = 0;
                  int v27 = (const void **)v60.__r_.__value_.__r.__words[2];
                  if (*((_DWORD *)v8 + 7) == 21)
                  {
                    uint64_t v28 = (uint64_t *)v8[2];
                  }
                  else
                  {
                    CoreML::Specification::CoreMLModels::protobuf_VisionFeaturePrint_2eproto::InitDefaults((CoreML::Specification::CoreMLModels::protobuf_VisionFeaturePrint_2eproto *)v15);
                    uint64_t v28 = &CoreML::Specification::CoreMLModels::_VisionFeaturePrint_Objects_default_instance_;
                  }
                  uint64_t v29 = v28[4];
                  uint64_t v30 = v29 ? v29 + 8 : 0;
                  uint64_t v31 = *((int *)v28 + 6);
                  uint64_t v32 = v30 + 8 * v31;
                  if (v31) {
                    break;
                  }
LABEL_91:
                  if (v32 == v30) {
                    goto LABEL_104;
                  }
                  CoreML::Specification::FeatureDescription::~FeatureDescription((CoreML::Specification::FeatureDescription *)&v60);
                  if (++v17 == v54) {
                    goto LABEL_8;
                  }
                }
                char v33 = *((unsigned char *)v27 + 23);
                if (v33 >= 0) {
                  int v34 = (const void *)*((unsigned __int8 *)v27 + 23);
                }
                else {
                  int v34 = v27[1];
                }
                if (v33 >= 0) {
                  uint64_t v35 = (unsigned __int8 *)v27;
                }
                else {
                  uint64_t v35 = (unsigned __int8 *)*v27;
                }
                do
                {
                  int v36 = *(const void ***)v30;
                  uint64_t v37 = *(unsigned __int8 *)(*(void *)v30 + 23);
                  if ((v37 & 0x80u) == 0) {
                    unint64_t v38 = (const void *)*(unsigned __int8 *)(*(void *)v30 + 23);
                  }
                  else {
                    unint64_t v38 = *(const void **)(*(void *)v30 + 8);
                  }
                  if (v38 == v34)
                  {
                    if ((v37 & 0x80) != 0)
                    {
                      if (!memcmp(*v36, v35, *(void *)(*(void *)v30 + 8))) {
                        goto LABEL_91;
                      }
                    }
                    else
                    {
                      if (!*(unsigned char *)(*(void *)v30 + 23)) {
                        goto LABEL_91;
                      }
                      uint64_t v39 = v35;
                      while (*(unsigned __int8 *)v36 == *v39)
                      {
                        int v36 = (const void **)((char *)v36 + 1);
                        ++v39;
                        if (!--v37) {
                          goto LABEL_91;
                        }
                      }
                    }
                  }
                  v30 += 8;
                }
                while (v30 != v32);
LABEL_104:
                std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream[abi:ne180100]((uint64_t)__p);
                unint64_t v48 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&__p[16], (uint64_t)"Model description declares an output: ", 38);
                int v49 = *((char *)v27 + 23);
                if (v49 >= 0) {
                  uint64_t v50 = (uint64_t)v27;
                }
                else {
                  uint64_t v50 = (uint64_t)*v27;
                }
                if (v49 >= 0) {
                  uint64_t v51 = *((unsigned __int8 *)v27 + 23);
                }
                else {
                  uint64_t v51 = (uint64_t)v27[1];
                }
                long long v52 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v48, v50, v51);
                std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v52, (uint64_t)" but it is not declared in Vision Feature Print output", 54);
                std::stringbuf::str();
                *(void *)a1 = 13;
                std::operator+<char>();
                if (SHIBYTE(v64.__r_.__value_.__r.__words[2]) < 0) {
                  operator delete(v64.__r_.__value_.__l.__data_);
                }
                *(void *)std::string __p = *MEMORY[0x1E4FBA408];
                uint64_t v53 = *(void *)(MEMORY[0x1E4FBA408] + 72);
                *(void *)&__p[*(void *)(*(void *)__p - 24)] = *(void *)(MEMORY[0x1E4FBA408] + 64);
                *(void *)&__p[16] = v53;
                uint64_t v56 = MEMORY[0x1E4FBA470] + 16;
                if (v58 < 0) {
                  operator delete(v57);
                }
                std::streambuf::~streambuf();
                std::iostream::~basic_iostream();
                MEMORY[0x19F3C1850](&v59);
                CoreML::Specification::FeatureDescription::~FeatureDescription((CoreML::Specification::FeatureDescription *)&v60);
                goto LABEL_9;
              }
            }
            break;
          }
          std::string::basic_string[abi:ne180100]<0>(__p, "Two outputs for objects need to be provided");
          *(void *)a1 = 13;
          std::operator+<char>();
          goto LABEL_25;
        }
        if (!v11)
        {
          std::string::basic_string[abi:ne180100]<0>(__p, "Version for objects is invalid");
          *(void *)a1 = 13;
          std::operator+<char>();
LABEL_25:
          if ((__p[23] & 0x80000000) == 0) {
            goto LABEL_9;
          }
          uint64_t v12 = *(void **)__p;
LABEL_102:
          operator delete(v12);
          goto LABEL_9;
        }
        std::to_string(&v64, v11);
        BOOL v40 = std::string::insert(&v64, 0, "Version: '");
        long long v41 = *(_OWORD *)&v40->__r_.__value_.__l.__data_;
        v60.__r_.__value_.__r.__words[2] = v40->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v60.__r_.__value_.__l.__data_ = v41;
        v40->__r_.__value_.__l.__size_ = 0;
        v40->__r_.__value_.__r.__words[2] = 0;
        v40->__r_.__value_.__r.__words[0] = 0;
        uint64_t v42 = std::string::append(&v60, "' for object print is invalid");
        long long v43 = *(_OWORD *)&v42->__r_.__value_.__l.__data_;
        *(void *)&__p[16] = *((void *)&v42->__r_.__value_.__l + 2);
        *(_OWORD *)std::string __p = v43;
        v42->__r_.__value_.__l.__size_ = 0;
        v42->__r_.__value_.__r.__words[2] = 0;
        v42->__r_.__value_.__r.__words[0] = 0;
        *(void *)a1 = 13;
        std::operator+<char>();
LABEL_96:
        if ((__p[23] & 0x80000000) != 0) {
          operator delete(*(void **)__p);
        }
        if (SHIBYTE(v60.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v60.__r_.__value_.__l.__data_);
        }
        if ((SHIBYTE(v64.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_9;
        }
        uint64_t v12 = (void *)v64.__r_.__value_.__r.__words[0];
        goto LABEL_102;
    }
LABEL_8:
    *(void *)a1 = v65;
    *(_OWORD *)(a1 + 8) = v66;
    *(void *)(a1 + 24) = v67;
    long long v66 = 0uLL;
    uint64_t v67 = 0;
LABEL_9:
    if ((SHIBYTE(v67) & 0x80000000) == 0) {
      return;
    }
    uint64_t v7 = (void *)v66;
    goto LABEL_13;
  }
  std::string::basic_string[abi:ne180100]<0>(__p, "Model not a vision feature print.");
  *(void *)a1 = 13;
  std::operator+<char>();
  if ((__p[23] & 0x80000000) == 0) {
    return;
  }
  uint64_t v7 = *(void **)__p;
LABEL_13:
  operator delete(v7);
}

void sub_19EB5E474(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (*(char *)(v20 - 121) < 0) {
    operator delete(*(void **)(v20 - 144));
  }
  std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::~basic_stringstream((uint64_t)&__p);
  CoreML::Specification::FeatureDescription::~FeatureDescription((CoreML::Specification::FeatureDescription *)(v20 - 192));
  if (*(char *)(v20 - 89) < 0) {
    operator delete(*(void **)(v20 - 112));
  }
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::CoreMLModels::WordEmbedding::GetCachedSize(CoreML::Specification::CoreMLModels::WordEmbedding *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t CoreML::Specification::CoreMLModels::WordEmbedding::SerializeWithCachedSizes(CoreML::Specification::CoreMLModels::WordEmbedding *this, google::protobuf::io::CodedOutputStream *a2, unsigned int a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v6 = *((unsigned int *)this + 8);
  if (v6) {
    google::protobuf::internal::WireFormatLite::WriteUInt32(v6, a2, a3, a4);
  }
  uint64_t result = *((void *)this + 2);
  if (*(char *)(result + 23) < 0)
  {
    uint64_t v8 = *(void *)(result + 8);
    if (!v8) {
      goto LABEL_9;
    }
    uint64_t result = *(void *)result;
    goto LABEL_8;
  }
  LODWORD(v8) = *(unsigned __int8 *)(result + 23);
  if (*(unsigned char *)(result + 23))
  {
LABEL_8:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)result, v8, 1, (uint64_t)"CoreML.Specification.CoreMLModels.WordEmbedding.language");
    uint64_t result = google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0xAu, *((void *)this + 2), a2);
  }
LABEL_9:
  uint64_t v9 = *((void *)this + 3);
  if (*(char *)(v9 + 23) < 0)
  {
    if (!*(void *)(v9 + 8)) {
      return result;
    }
  }
  else if (!*(unsigned char *)(v9 + 23))
  {
    return result;
  }

  return google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(0x64u, v9, a2);
}

uint64_t CoreML::Specification::CoreMLModels::WordEmbedding::ByteSizeLong(CoreML::Specification::CoreMLModels::WordEmbedding *this)
{
  uint64_t v1 = *((void *)this + 2);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 23);
  if (*(char *)(v1 + 23) < 0)
  {
    if (*(void *)(v1 + 8)) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v4 = 0;
    goto LABEL_8;
  }
  if (!*(unsigned char *)(v1 + 23)) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v3 = *(void *)(v1 + 8);
  if ((v2 & 0x80u) == 0) {
    uint64_t v3 = v2;
  }
  uint64_t v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  uint64_t v5 = *((void *)this + 3);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
  if (*(char *)(v5 + 23) < 0)
  {
    if (!*(void *)(v5 + 8)) {
      goto LABEL_13;
    }
  }
  else if (!*(unsigned char *)(v5 + 23))
  {
    goto LABEL_13;
  }
  uint64_t v7 = *(void *)(v5 + 8);
  if ((v6 & 0x80u) == 0) {
    uint64_t v7 = v6;
  }
  v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_13:
  int v8 = *((_DWORD *)this + 8);
  if (v8) {
    v4 += ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  *((_DWORD *)this + 9) = v4;
  return v4;
}

uint64_t CoreML::Specification::CoreMLModels::WordEmbedding::MergePartialFromCodedStream(CoreML::Specification::CoreMLModels::WordEmbedding *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (std::string **)((char *)this + 24);
  uint64_t v6 = (std::string **)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v7 = *(unsigned __int8 **)a2;
          unint64_t v8 = *((void *)a2 + 1);
          if (*(void *)a2 >= v8)
          {
            LODWORD(v1CoreML::Specification::BayesianProbitRegressor_Gaussian::New(this, 0) = 0;
LABEL_34:
            unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v10);
            unint64_t v11 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
            if ((v11 & 0x100000000) == 0) {
              goto LABEL_35;
            }
            goto LABEL_9;
          }
          uint64_t v9 = v7 + 1;
          uint64_t v10 = *v7;
          if ((char)*v7 < 1)
          {
            if ((unint64_t)v9 < v8)
            {
              int v12 = *v9;
              if ((v10 & ~v12) >= 0x80)
              {
                *(void *)a2 = v7 + 2;
                unint64_t v11 = (v10 + (v12 << 7) - 128) | 0x100000000;
                goto LABEL_9;
              }
            }
            goto LABEL_34;
          }
          *(void *)a2 = v9;
          unint64_t v11 = v10 | 0x100000000;
          if ((v11 & 0x100000000) == 0) {
            goto LABEL_35;
          }
LABEL_9:
          unsigned int v13 = v11 >> 3;
          if (v11 >> 3 != 100) {
            break;
          }
          if (v11 != 34) {
            goto LABEL_35;
          }
          if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
            google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
          }
          if ((google::protobuf::internal::WireFormatLite::ReadBytes((unsigned __int8 **)a2, *v5) & 1) == 0) {
            return 0;
          }
        }
        if (v13 != 10) {
          break;
        }
        if (v11 != 82) {
          goto LABEL_35;
        }
        if (*v6 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
        }
        uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((unsigned __int8 **)a2, *v6);
        if (!result) {
          return result;
        }
        uint64_t v18 = (unsigned int *)*v6;
        if (SHIBYTE((*v6)->__r_.__value_.__r.__words[2]) < 0)
        {
          uint64_t v18 = *(unsigned int **)v18;
          std::string::size_type size = (*v6)->__r_.__value_.__l.__size_;
        }
        else
        {
          LODWORD(size) = HIBYTE((*v6)->__r_.__value_.__r.__words[2]);
        }
        if (!google::protobuf::internal::WireFormatLite::VerifyUtf8String(v18, size, 0, (uint64_t)"CoreML.Specification.CoreMLModels.WordEmbedding.language"))return 0; {
      }
        }
      if (v13 != 1 || v11 != 8) {
        break;
      }
      int v15 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        int v16 = 0;
        goto LABEL_42;
      }
      int v16 = *v15;
      if (*v15 < 0)
      {
LABEL_42:
        uint64_t Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v16);
        *((_DWORD *)this + 8) = Varint32Fallback;
        if (Varint32Fallback < 0) {
          return 0;
        }
      }
      else
      {
        *((_DWORD *)this + 8) = v16;
        *(void *)a2 = v15 + 1;
      }
    }
LABEL_35:
    if (!v11 || (v11 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v11, a3) & 1) == 0) {
      return 0;
    }
  }
}

std::string *CoreML::Specification::CoreMLModels::WordEmbedding::MergeFrom(std::string *this, const CoreML::Specification::CoreMLModels::WordEmbedding *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  uint64_t v5 = *((void *)a2 + 2);
  if (*(char *)(v5 + 23) < 0)
  {
    if (!*(void *)(v5 + 8)) {
      goto LABEL_11;
    }
  }
  else if (!*(unsigned char *)(v5 + 23))
  {
    goto LABEL_11;
  }
  this = (std::string *)&v3->__r_.__value_.__r.__words[2];
  uint64_t v6 = (long long *)v3->__r_.__value_.__r.__words[2];
  if (v6 != (long long *)v5)
  {
    if (v6 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
    }
    this = std::string::operator=((std::string *)v3->__r_.__value_.__r.__words[2], (const std::string *)v5);
  }
LABEL_11:
  uint64_t v7 = *((void *)a2 + 3);
  if (*(char *)(v7 + 23) < 0)
  {
    if (!*(void *)(v7 + 8)) {
      goto LABEL_19;
    }
  }
  else if (!*(unsigned char *)(v7 + 23))
  {
    goto LABEL_19;
  }
  this = v3 + 1;
  data = (long long *)v3[1].__r_.__value_.__l.__data_;
  if (data != (long long *)v7)
  {
    if (data == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
    }
    this = std::string::operator=((std::string *)v3[1].__r_.__value_.__l.__data_, (const std::string *)v7);
  }
LABEL_19:
  int v9 = *((_DWORD *)a2 + 8);
  if (v9) {
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v9;
  }
  return this;
}

uint64_t CoreML::Specification::CoreMLModels::WordEmbedding::IsInitialized(CoreML::Specification::CoreMLModels::WordEmbedding *this)
{
  return 1;
}

uint64_t CoreML::Specification::CoreMLModels::WordEmbedding::Clear(uint64_t this)
{
  uint64_t v1 = *(void *)(this + 16);
  if ((long long *)v1 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)uint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v1 = 0;
      *(unsigned char *)(v1 + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
    }
  }
  uint64_t v2 = *(void *)(this + 24);
  if ((long long *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v2 = 0;
      *(unsigned char *)(v2 + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
    }
  }
  *(_DWORD *)(this + 32) = 0;
  return this;
}

void CoreML::Specification::CoreMLModels::WordEmbedding::New(CoreML::Specification::CoreMLModels::WordEmbedding *this, google::protobuf::Arena *a2)
{
}

void sub_19EB5EB28(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C40EE95837BLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::CoreMLModels::WordEmbedding *CoreML::Specification::CoreMLModels::WordEmbedding::WordEmbedding(CoreML::Specification::CoreMLModels::WordEmbedding *this)
{
  *(void *)this = &unk_1EF0CEF80;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::CoreMLModels::WordEmbedding *)&CoreML::Specification::CoreMLModels::_WordEmbedding_default_instance_) {
    CoreML::Specification::CoreMLModels::protobuf_WordEmbedding_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 4) = 0;
  return this;
}

void sub_19EB5EBB8(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::CoreMLModels::WordEmbedding>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::CoreMLModels::WordEmbedding>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::CoreMLModels::WordEmbedding>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::CoreMLModels::WordEmbedding::New(CoreML::Specification::CoreMLModels::WordEmbedding *this)
{
}

void *CoreML::Specification::CoreMLModels::WordEmbedding::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.CoreMLModels.WordEmbedding");
}

void CoreML::Specification::CoreMLModels::WordEmbedding::~WordEmbedding(CoreML::Specification::CoreMLModels::WordEmbedding *this)
{
  *(void *)this = &unk_1EF0CEF80;
  uint64_t v1 = (uint64_t *)((char *)this + 8);
  CoreML::Specification::SerializedModel::SharedDtor((uint64_t)this);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);

  JUMPOUT(0x19F3C1920);
}

{
  uint64_t *v1;

  *(void *)this = &unk_1EF0CEF80;
  uint64_t v1 = (uint64_t *)((char *)this + 8);
  CoreML::Specification::SerializedModel::SharedDtor((uint64_t)this);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
}

uint64_t CoreML::Specification::Int64Parameter::GetCachedSize(CoreML::Specification::Int64Parameter *this)
{
  return *((unsigned int *)this + 8);
}

uint64_t CoreML::Specification::Int64Parameter::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  unint64_t v6 = *(void *)(this + 16);
  if (v6) {
    this = google::protobuf::internal::WireFormatLite::WriteInt64(1, v6, a2, a4);
  }
  int v7 = *(_DWORD *)(v5 + 36);
  if (v7 == 10)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)0xA, *(void *)(v5 + 24), a2, a4);
    int v7 = *(_DWORD *)(v5 + 36);
  }
  if (v7 == 11)
  {
    uint64_t v8 = *(void *)(v5 + 24);
    return google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)0xB, v8, a2, a4);
  }
  return this;
}

unint64_t CoreML::Specification::Int64Parameter::ByteSizeLong(CoreML::Specification::Int64Parameter *this)
{
  uint64_t v2 = *((void *)this + 2);
  unint64_t v3 = (9 * (__clz(v2 | 1) ^ 0x3F) + 73) >> 6;
  if (v2) {
    unint64_t v4 = v3 + 1;
  }
  else {
    unint64_t v4 = 0;
  }
  int v5 = *((_DWORD *)this + 9);
  if (v5 == 11)
  {
    unint64_t v6 = CoreML::Specification::Int64Set::ByteSizeLong(*((CoreML::Specification::Int64Set **)this + 3));
    goto LABEL_8;
  }
  if (v5 == 10)
  {
    unint64_t v6 = CoreML::Specification::Int64Range::ByteSizeLong(*((CoreML::Specification::Int64Range **)this + 3));
LABEL_8:
    v4 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  *((_DWORD *)this + 8) = v4;
  return v4;
}

uint64_t CoreML::Specification::Int64Parameter::MergePartialFromCodedStream(CoreML::Specification::Int64Parameter *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        int v5 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1))
        {
          LODWORD(v6) = 0;
LABEL_6:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v6);
          unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_23;
          }
          goto LABEL_7;
        }
        uint64_t v6 = *v5;
        if (*v5 < 1) {
          goto LABEL_6;
        }
        *(void *)a2 = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_23;
        }
LABEL_7:
        unsigned int v9 = v7 >> 3;
        if (v7 >> 3 == 11)
        {
          if (v7 != 90) {
            goto LABEL_23;
          }
          if (*((_DWORD *)this + 9) != 11)
          {
            CoreML::Specification::Int64Parameter::clear_AllowedValues((uint64_t)this);
            *((_DWORD *)this + 9) = 11;
            operator new();
          }
          unsigned int v13 = (CoreML::Specification::Int64Set *)*((void *)this + 3);
          int v16 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v16 < 0)
          {
            int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            int VarintSizeAsIntFallback = *v16;
            *(void *)a2 = v16 + 1;
          }
          int v21 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          int v23 = *((_DWORD *)a2 + 13);
          BOOL v24 = __OFSUB__(v23--, 1);
          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v23;
          if (v23 < 0 != v24) {
            return 0;
          }
          int v25 = v21;
          uint64_t result = CoreML::Specification::Int64Set::MergePartialFromCodedStream(v13, a2, v22);
          if (!result) {
            return result;
          }
          goto LABEL_46;
        }
        if (v9 != 10) {
          break;
        }
        if (v7 != 82) {
          goto LABEL_23;
        }
        if (*((_DWORD *)this + 9) != 10)
        {
          CoreML::Specification::Int64Parameter::clear_AllowedValues((uint64_t)this);
          *((_DWORD *)this + 9) = 10;
          operator new();
        }
        unint64_t v14 = (CoreML::Specification::Int64Range *)*((void *)this + 3);
        uint64_t v18 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v18 < 0)
        {
          int v19 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v19 < 0) {
            return 0;
          }
        }
        else
        {
          int v19 = *v18;
          *(void *)a2 = v18 + 1;
        }
        int v27 = google::protobuf::io::CodedInputStream::PushLimit(a2, v19);
        int v29 = *((_DWORD *)a2 + 13);
        BOOL v24 = __OFSUB__(v29--, 1);
        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v29;
        if (v29 < 0 != v24) {
          return 0;
        }
        int v25 = v27;
        uint64_t result = CoreML::Specification::Int64Range::MergePartialFromCodedStream(v14, (char **)a2, v28);
        if (!result) {
          return result;
        }
LABEL_46:
        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v25)) {
          return 0;
        }
      }
      if (v9 != 1 || v7 != 8) {
        break;
      }
      unint64_t v11 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v11 < 0)
      {
        unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
        if ((v20 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t Varint64Fallback = *v11;
        *(void *)a2 = v11 + 1;
      }
      *((void *)this + 2) = Varint64Fallback;
    }
LABEL_23:
    if (!v7 || (v7 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_19EB5F0E0(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x1081C40B7564605);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::Int64Parameter::clear_AllowedValues(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 36);
  if (v2 == 11 || v2 == 10)
  {
    this = *(void *)(this + 24);
    if (this) {
      this = (*(uint64_t (**)(uint64_t))(*(void *)this + 8))(this);
    }
  }
  *(_DWORD *)(v1 + 36) = 0;
  return this;
}

std::string *CoreML::Specification::Int64Parameter::MergeFrom(std::string *this, const CoreML::Specification::Int64Parameter *a2)
{
  uint64_t v3 = (uint64_t)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  uint64_t v5 = *((void *)a2 + 2);
  if (v5) {
    *(void *)(v3 + 16) = v5;
  }
  int v6 = *((_DWORD *)a2 + 9);
  if (v6 == 11)
  {
    if (*(_DWORD *)(v3 + 36) != 11)
    {
      CoreML::Specification::Int64Parameter::clear_AllowedValues(v3);
      *(_DWORD *)(v3 + 36) = 11;
      operator new();
    }
    uint64_t v8 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts *)*((void *)a2 + 3);
    uint64_t v10 = *(unint64_t **)(v3 + 24);
    return (std::string *)CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts::MergeFrom(v10, v8);
  }
  else if (v6 == 10)
  {
    if (*(_DWORD *)(v3 + 36) != 10)
    {
      CoreML::Specification::Int64Parameter::clear_AllowedValues(v3);
      *(_DWORD *)(v3 + 36) = 10;
      operator new();
    }
    unint64_t v7 = (const CoreML::Specification::Int64Range *)*((void *)a2 + 3);
    unsigned int v9 = *(std::string **)(v3 + 24);
    return CoreML::Specification::Int64Range::MergeFrom(v9, v7);
  }
  return this;
}

void sub_19EB5F300(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::Int64Parameter::IsInitialized(CoreML::Specification::Int64Parameter *this)
{
  return 1;
}

uint64_t CoreML::Specification::Int64Parameter::Clear(uint64_t this)
{
  *(void *)(this + 16) = 0;
  return CoreML::Specification::Int64Parameter::clear_AllowedValues(this);
}

void CoreML::Specification::Int64Parameter::New(CoreML::Specification::Int64Parameter *this, google::protobuf::Arena *a2)
{
}

void sub_19EB5F3A4(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

CoreML::Specification::Int64Parameter *CoreML::Specification::Int64Parameter::Int64Parameter(CoreML::Specification::Int64Parameter *this)
{
  *(void *)this = &unk_1EF0D03B0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::Int64Parameter *)&CoreML::Specification::_Int64Parameter_default_instance_) {
    CoreML::Specification::protobuf_Parameters_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + 4) = 0;
  return this;
}

void sub_19EB5F42C(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::Int64Parameter>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::Int64Parameter>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::Int64Parameter>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

uint64_t CoreML::Specification::BoolParameter::GetCachedSize(CoreML::Specification::BoolParameter *this)
{
  return *((unsigned int *)this + 5);
}

uint64_t CoreML::Specification::BoolParameter::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  if (*(unsigned char *)(this + 16)) {
    return google::protobuf::internal::WireFormatLite::WriteBool(1, 1u, a2, a4);
  }
  return this;
}

uint64_t CoreML::Specification::BoolParameter::ByteSizeLong(CoreML::Specification::BoolParameter *this)
{
  uint64_t v1 = 2 * *((unsigned __int8 *)this + 16);
  *((_DWORD *)this + 5) = v1;
  return v1;
}

uint64_t CoreML::Specification::BoolParameter::MergePartialFromCodedStream(CoreML::Specification::BoolParameter *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      unint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      unint64_t v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v13 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t Varint64Fallback = *v11;
        *a2 = v11 + 1;
      }
      *((unsigned char *)this + 16) = Varint64Fallback != 0;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    if (v10) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

std::string *CoreML::Specification::BoolParameter::CheckTypeAndMergeFrom(std::string *this, const google::protobuf::MessageLite *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  if (*((unsigned char *)a2 + 16)) {
    v3->__r_.__value_.__s.__data_[16] = 1;
  }
  return this;
}

uint64_t CoreML::Specification::BoolParameter::IsInitialized(CoreML::Specification::BoolParameter *this)
{
  return 1;
}

uint64_t CoreML::Specification::BoolParameter::Clear(uint64_t this)
{
  *(unsigned char *)(this + 16) = 0;
  return this;
}

void CoreML::Specification::BoolParameter::New(CoreML::Specification::BoolParameter *this, google::protobuf::Arena *a2)
{
}

void sub_19EB5F6A4(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x1081C40B60F2DE8);
  _Unwind_Resume(a1);
}

CoreML::Specification::BoolParameter *CoreML::Specification::BoolParameter::BoolParameter(CoreML::Specification::BoolParameter *this)
{
  *(void *)this = &unk_1EF0CFBF8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::BoolParameter *)&CoreML::Specification::_BoolParameter_default_instance_) {
    CoreML::Specification::protobuf_Parameters_2eproto::InitDefaults(this);
  }
  *((unsigned char *)this + 16) = 0;
  *((_DWORD *)this + 5) = 0;
  return this;
}

void sub_19EB5F72C(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::BoolParameter>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::BoolParameter>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::BoolParameter>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::BoolParameter::New(CoreML::Specification::BoolParameter *this)
{
}

void *CoreML::Specification::BoolParameter::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.BoolParameter");
}

void CoreML::Specification::BoolParameter::~BoolParameter(CoreML::Specification::BoolParameter *this)
{
  *(void *)this = &unk_1EF0CFBF8;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);

  JUMPOUT(0x19F3C1920);
}

{
  *(void *)this = &unk_1EF0CFBF8;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::StringParameter::GetCachedSize(CoreML::Specification::StringParameter *this)
{
  return *((unsigned int *)this + 6);
}

uint64_t CoreML::Specification::StringParameter::SerializeWithCachedSizes(CoreML::Specification::StringParameter *this, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t result = *((void *)this + 2);
  if (*(char *)(result + 23) < 0)
  {
    uint64_t v5 = *(void *)(result + 8);
    if (!v5) {
      return result;
    }
    uint64_t result = *(void *)result;
  }
  else
  {
    LODWORD(v5) = *(unsigned __int8 *)(result + 23);
    if (!*(unsigned char *)(result + 23)) {
      return result;
    }
  }
  google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)result, v5, 1, (uint64_t)"CoreML.Specification.StringParameter.defaultValue");
  uint64_t v6 = *((void *)this + 2);

  return google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(1u, v6, a2);
}

uint64_t CoreML::Specification::StringParameter::ByteSizeLong(CoreML::Specification::StringParameter *this)
{
  uint64_t v1 = *((void *)this + 2);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 23);
  if (*(char *)(v1 + 23) < 0)
  {
    if (*(void *)(v1 + 8)) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v4 = 0;
    goto LABEL_8;
  }
  if (!*(unsigned char *)(v1 + 23)) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v3 = *(void *)(v1 + 8);
  if ((v2 & 0x80u) == 0) {
    uint64_t v3 = v2;
  }
  uint64_t v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  *((_DWORD *)this + 6) = v4;
  return v4;
}

uint64_t CoreML::Specification::StringParameter::MergePartialFromCodedStream(CoreML::Specification::StringParameter *this, char **a2, unsigned int a3)
{
  uint64_t v4 = (std::string **)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_7;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      if (v7 != 10 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      if (*v4 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
      }
      uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((unsigned __int8 **)a2, *v4);
      if (!result) {
        return result;
      }
      int v12 = (unsigned int *)*v4;
      if (SHIBYTE((*v4)->__r_.__value_.__r.__words[2]) < 0)
      {
        int v12 = *(unsigned int **)v12;
        std::string::size_type size = (*v4)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v4)->__r_.__value_.__r.__words[2]);
      }
      if (!google::protobuf::internal::WireFormatLite::VerifyUtf8String(v12, size, 0, (uint64_t)"CoreML.Specification.StringParameter.defaultValue"))return 0; {
    }
      }
    if (!v7 || (v7 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t CoreML::Specification::StringParameter::IsInitialized(CoreML::Specification::StringParameter *this)
{
  return 1;
}

uint64_t CoreML::Specification::StringParameter::Clear(uint64_t this)
{
  uint64_t v1 = *(void *)(this + 16);
  if ((long long *)v1 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)uint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v1 = 0;
      *(unsigned char *)(v1 + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
    }
  }
  return this;
}

void CoreML::Specification::StringParameter::New(CoreML::Specification::StringParameter *this, google::protobuf::Arena *a2)
{
}

void sub_19EB5FB2C(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C4084265165);
  _Unwind_Resume(a1);
}

CoreML::Specification::StringParameter *CoreML::Specification::StringParameter::StringParameter(CoreML::Specification::StringParameter *this)
{
  *(void *)this = off_1EF0D11F0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::StringParameter *)&CoreML::Specification::_StringParameter_default_instance_) {
    CoreML::Specification::protobuf_Parameters_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  *((_DWORD *)this + 6) = 0;
  return this;
}

void sub_19EB5FBBC(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::StringParameter>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::StringParameter>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::StringParameter>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::StringParameter::New(CoreML::Specification::StringParameter *this)
{
}

void *CoreML::Specification::StringParameter::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.StringParameter");
}

void CoreML::Specification::StringParameter::~StringParameter(CoreML::Specification::StringParameter *this)
{
  *(void *)this = off_1EF0D11F0;
  google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(*((void *)this + 2));
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);

  JUMPOUT(0x19F3C1920);
}

{
  *(void *)this = off_1EF0D11F0;
  google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(*((void *)this + 2));
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::DoubleParameter::GetCachedSize(CoreML::Specification::DoubleParameter *this)
{
  return *((unsigned int *)this + 8);
}

uint64_t CoreML::Specification::DoubleParameter::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, google::protobuf::io::CodedOutputStream *a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  double v6 = *(double *)(this + 16);
  if (v6 != 0.0) {
    this = google::protobuf::internal::WireFormatLite::WriteDouble(1, a2, v6, a3);
  }
  if (*(_DWORD *)(v5 + 36) == 10)
  {
    uint64_t v7 = *(void *)(v5 + 24);
    return google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)0xA, v7, a2, a4);
  }
  return this;
}

uint64_t CoreML::Specification::DoubleParameter::ByteSizeLong(CoreML::Specification::DoubleParameter *this)
{
  uint64_t v1 = 9;
  if (*((double *)this + 2) == 0.0) {
    uint64_t v1 = 0;
  }
  if (*((_DWORD *)this + 9) == 10)
  {
    uint64_t v2 = *((void *)this + 3);
    uint64_t v3 = 9;
    if (*(double *)(v2 + 16) == 0.0) {
      uint64_t v3 = 0;
    }
    if (*(double *)(v2 + 24) != 0.0) {
      v3 += 9;
    }
    *(_DWORD *)(v2 + 32) = v3;
    v1 += v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  *((_DWORD *)this + 8) = v1;
  return v1;
}

BOOL CoreML::Specification::DoubleParameter::MergePartialFromCodedStream(CoreML::Specification::DoubleParameter *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = *(char **)a2;
        if (*(void *)a2 < *((void *)a2 + 1)) {
          break;
        }
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) != 0) {
          goto LABEL_7;
        }
LABEL_19:
        if (v7) {
          BOOL v13 = (v7 & 7) == 4;
        }
        else {
          BOOL v13 = 1;
        }
        if (v13) {
          return 1;
        }
        if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)return 0; {
      }
        }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *(void *)a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        goto LABEL_19;
      }
LABEL_7:
      if (v7 >> 3 == 10) {
        break;
      }
      if (v7 >> 3 != 1 || v7 != 9) {
        goto LABEL_19;
      }
      unint64_t v22 = 0;
      BOOL v10 = *(unint64_t **)a2;
      if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) < 8)
      {
        BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v22);
        if (!result) {
          return result;
        }
        unint64_t v11 = v22;
      }
      else
      {
        unint64_t v11 = *v10;
        *(void *)a2 = v10 + 1;
      }
      *((void *)this + 2) = v11;
    }
    if (v7 != 82) {
      goto LABEL_19;
    }
    if (*((_DWORD *)this + 9) != 10)
    {
      *((_DWORD *)this + 9) = 10;
      operator new();
    }
    int v12 = (CoreML::Specification::DoubleRange *)*((void *)this + 3);
    unint64_t v14 = *(char **)a2;
    if (*(void *)a2 >= *((void *)a2 + 1) || *v14 < 0)
    {
      int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
      if (VarintSizeAsIntFallback < 0) {
        return 0;
      }
    }
    else
    {
      int VarintSizeAsIntFallback = *v14;
      *(void *)a2 = v14 + 1;
    }
    int v16 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
    int v18 = *((_DWORD *)a2 + 13);
    BOOL v19 = __OFSUB__(v18--, 1);
    *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v18;
    if (v18 < 0 != v19) {
      break;
    }
    int v20 = v16;
    BOOL result = CoreML::Specification::DoubleRange::MergePartialFromCodedStream(v12, (char **)a2, v17);
    if (!result) {
      return result;
    }
  }
  while (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v20));
  return 0;
}

void sub_19EB5FFF0(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x1081C40B7564605);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::DoubleParameter::MergeFrom(std::string *this, const CoreML::Specification::DoubleParameter *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  double v5 = *((double *)a2 + 2);
  if (v5 != 0.0) {
    *(double *)&v3->__r_.__value_.__r.__words[2] = v5;
  }
  if (*((_DWORD *)a2 + 9) == 10)
  {
    if (HIDWORD(v3[1].__r_.__value_.__r.__words[1]) != 10)
    {
      HIDWORD(v3[1].__r_.__value_.__r.__words[1]) = 10;
      operator new();
    }
    uint64_t v6 = (const CoreML::Specification::SigmoidKernel *)*((void *)a2 + 3);
    data = (std::string *)v3[1].__r_.__value_.__l.__data_;
    return CoreML::Specification::SigmoidKernel::MergeFrom(data, v6);
  }
  return this;
}

void sub_19EB600F8(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x1081C40B7564605);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::DoubleParameter::IsInitialized(CoreML::Specification::DoubleParameter *this)
{
  return 1;
}

uint64_t CoreML::Specification::DoubleParameter::Clear(uint64_t this)
{
  uint64_t v1 = this;
  *(void *)(this + 16) = 0;
  if (*(_DWORD *)(this + 36) == 10)
  {
    this = *(void *)(this + 24);
    if (this) {
      this = (*(uint64_t (**)(uint64_t))(*(void *)this + 8))(this);
    }
  }
  *(_DWORD *)(v1 + 36) = 0;
  return this;
}

void CoreML::Specification::DoubleParameter::New(CoreML::Specification::DoubleParameter *this, google::protobuf::Arena *a2)
{
}

void sub_19EB601D8(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

CoreML::Specification::DoubleParameter *CoreML::Specification::DoubleParameter::DoubleParameter(CoreML::Specification::DoubleParameter *this)
{
  *(void *)this = &unk_1EF0D0D30;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::DoubleParameter *)&CoreML::Specification::_DoubleParameter_default_instance_) {
    CoreML::Specification::protobuf_Parameters_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + 4) = 0;
  return this;
}

void sub_19EB60260(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::DoubleParameter>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    BOOL result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *BOOL result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::DoubleParameter>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::DoubleParameter>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::DoubleParameter::New(CoreML::Specification::DoubleParameter *this)
{
}

void *CoreML::Specification::DoubleParameter::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.DoubleParameter");
}

void CoreML::Specification::DoubleParameter::~DoubleParameter(CoreML::Specification::DoubleParameter *this)
{
  CoreML::Specification::DoubleParameter::~DoubleParameter(this);

  JUMPOUT(0x19F3C1920);
}

{
  int v2;
  uint64_t v3;

  *(void *)this = &unk_1EF0D0D30;
  uint64_t v2 = *((_DWORD *)this + 9);
  if (v2)
  {
    if (v2 == 10)
    {
      uint64_t v3 = *((void *)this + 3);
      if (v3) {
        (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
      }
    }
    *((_DWORD *)this + 9) = 0;
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

void CoreML::Specification::Int64Parameter::New(CoreML::Specification::Int64Parameter *this)
{
}

void *CoreML::Specification::Int64Parameter::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.Int64Parameter");
}

void CoreML::Specification::Int64Parameter::~Int64Parameter(CoreML::Specification::Int64Parameter *this)
{
  CoreML::Specification::Int64Parameter::~Int64Parameter(this);

  JUMPOUT(0x19F3C1920);
}

{
  *(void *)this = &unk_1EF0D03B0;
  if (*((_DWORD *)this + 9)) {
    CoreML::Specification::Int64Parameter::clear_AllowedValues((uint64_t)this);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

CoreML::Specification::Int64Parameter *CoreML::Specification::Int64Parameter::Int64Parameter(CoreML::Specification::Int64Parameter *this, const CoreML::Specification::Int64Parameter *a2)
{
  *(void *)this = &unk_1EF0D03B0;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 8) = 0;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  *((void *)this + 2) = *((void *)a2 + 2);
  *((_DWORD *)this + 9) = 0;
  int v5 = *((_DWORD *)a2 + 9);
  if (v5 == 10)
  {
    CoreML::Specification::Int64Parameter::clear_AllowedValues((uint64_t)this);
    *((_DWORD *)this + 9) = 10;
    operator new();
  }
  if (v5 == 11)
  {
    CoreML::Specification::Int64Parameter::clear_AllowedValues((uint64_t)this);
    *((_DWORD *)this + 9) = 11;
    operator new();
  }
  return this;
}

void sub_19EB605D0(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v2, 0x1081C40B7564605);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

CoreML::Specification::DoubleParameter *CoreML::Specification::DoubleParameter::DoubleParameter(CoreML::Specification::DoubleParameter *this, const CoreML::Specification::DoubleParameter *a2)
{
  *(void *)this = &unk_1EF0D0D30;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 8) = 0;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  *((void *)this + 2) = *((void *)a2 + 2);
  *((_DWORD *)this + 9) = 0;
  if (*((_DWORD *)a2 + 9) == 10)
  {
    *((_DWORD *)this + 9) = 10;
    operator new();
  }
  return this;
}

void sub_19EB606F4(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v2, 0x1081C40B7564605);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

CoreML::Specification::StringParameter *CoreML::Specification::StringParameter::StringParameter(CoreML::Specification::StringParameter *this, const CoreML::Specification::StringParameter *a2)
{
  *(void *)this = off_1EF0D11F0;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 6) = 0;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  uint64_t v5 = *((void *)a2 + 2);
  if (*(char *)(v5 + 23) < 0) {
    uint64_t v6 = *(void *)(v5 + 8);
  }
  else {
    uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
  }
  if ((long long *)v5 != &google::protobuf::internal::fixed_address_empty_string && v6 != 0) {
    google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
  }
  return this;
}

void sub_19EB607CC(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::TreeEnsembles::constructAndValidateTreeEnsembleFromSpec(CoreML::TreeEnsembles *this, const CoreML::Specification::Model *a2)
{
  v309[20] = *MEMORY[0x1E4F143B8];
  uint64_t v303 = 0;
  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v300);
  v299[0] = &v303;
  v299[1] = v300;
  int v4 = *((_DWORD *)a2 + 11);
  if (v4 != 302 && v4 != 402)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Model is not a tree ensemble.");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x1E4FBA4E8] + 16);
    __cxa_throw(exception, (struct type_info *)off_1E59A3028, MEMORY[0x1E4FBA1E8]);
  }
  if (*(void *)(*((void *)a2 + 4) + 16)) {
    uint64_t v5 = *(uint64_t **)(*((void *)a2 + 4) + 16);
  }
  else {
    uint64_t v5 = &CoreML::Specification::_TreeEnsembleParameters_default_instance_;
  }
  v296 = 0;
  v297 = 0;
  unint64_t v298 = 0;
  unint64_t v6 = v5[8];
  if (!v6)
  {
    std::string::basic_string[abi:ne180100]<0>(&__p, "Given output dimension equals 0.");
    CoreML::TreeEnsembles::constructAndValidateTreeEnsembleFromSpec(CoreML::Specification::Model const&)::$_0::operator()(v299, (uint64_t)&__p, 1);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  v288 = 0;
  v289[0] = 0;
  v287 = &v288;
  uint64_t v7 = v5[4];
  if (v7) {
    uint64_t v8 = v7 + 8;
  }
  else {
    uint64_t v8 = 0;
  }
  uint64_t v9 = *((int *)v5 + 6);
  unint64_t v283 = v6;
  v273 = this;
  v274 = v5;
  v272 = a2;
  if (!v9)
  {
    v293 = (uint64_t *)&v287;
    v294 = (uint64_t *)v299;
    goto LABEL_186;
  }
  uint64_t v275 = v8 + 8 * v9;
  std::string::size_type v281 = *MEMORY[0x1E4FBA418];
  std::string::size_type v280 = *(void *)(MEMORY[0x1E4FBA418] + 24);
  do
  {
    uint64_t v278 = v8;
    uint64_t v10 = *(void *)v8;
    unint64_t v11 = *(void *)(*(void *)v8 + 40);
    unint64_t v12 = *(void *)(*(void *)v8 + 48);
    BOOL v13 = v288;
    unint64_t v14 = &v288;
    if (v288)
    {
      int v15 = &v288;
      do
      {
        unint64_t v16 = v13[4];
        if (v16 >= v11)
        {
          if (v11 >= v16)
          {
            if (v13[5] < v12) {
              ++v13;
            }
            else {
              int v15 = (uint64_t **)v13;
            }
          }
          else
          {
            int v15 = (uint64_t **)v13;
          }
        }
        else
        {
          ++v13;
        }
        BOOL v13 = (uint64_t *)*v13;
      }
      while (v13);
      unint64_t v14 = &v288;
      if (v15 != &v288)
      {
        unsigned int v17 = v15[6];
        if (v17[4] == v11)
        {
          unint64_t v14 = v15;
          if (v17[5] == v12)
          {
            std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)&__p);
            std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&__p, (uint64_t)"Tree Node with TreeID=", 22);
            int v18 = (void *)std::ostream::operator<<();
            std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v18, (uint64_t)"and NodeID=", 11);
            BOOL v19 = (void *)std::ostream::operator<<();
            std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v19, (uint64_t)" duplicated in specification.", 29);
            std::stringbuf::str();
            CoreML::TreeEnsembles::constructAndValidateTreeEnsembleFromSpec(CoreML::Specification::Model const&)::$_0::operator()(v299, (uint64_t)&v284, 0);
            if (SHIBYTE(v284.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v284.__r_.__value_.__l.__data_);
            }
            __p.__r_.__value_.__r.__words[0] = v281;
            *(std::string::size_type *)((char *)__p.__r_.__value_.__r.__words + *(void *)(v281 - 24)) = v280;
            __p.__r_.__value_.__l.__size_ = MEMORY[0x1E4FBA470] + 16;
            if (v308 < 0) {
              operator delete(v307);
            }
            std::streambuf::~streambuf();
            std::ostream::~ostream();
            MEMORY[0x19F3C1850](v309);
            goto LABEL_130;
          }
        }
        else
        {
          unint64_t v14 = v15;
        }
      }
    }
    int v20 = (char *)operator new(0xB0uLL);
    int v21 = (std::__shared_weak_count *)v20;
    *((void *)v20 + 1) = 0;
    *((void *)v20 + 2) = 0;
    *(_OWORD *)(v20 + 24) = 0u;
    *(void *)int v20 = &unk_1EF0DD768;
    *(_OWORD *)(v20 + 4CoreML::Specification::Int64Parameter::New(this, 0) = 0u;
    *(_OWORD *)(v20 + 56) = 0u;
    *(_OWORD *)(v20 + 72) = 0u;
    *(_OWORD *)(v20 + 88) = 0u;
    *(_OWORD *)(v20 + 104) = 0u;
    *(_OWORD *)(v20 + 12CoreML::Specification::Int64Parameter::New(this, 0) = 0u;
    *(_OWORD *)(v20 + 136) = 0u;
    *(_OWORD *)(v20 + 152) = 0u;
    *((void *)v20 + 21) = 0;
    *(_OWORD *)(v20 + 56) = *(_OWORD *)(v10 + 40);
    unsigned int v22 = *(_DWORD *)(v10 + 56);
    v20[24] = v22 == 6;
    *((void *)v20 + 12) = *(void *)(v10 + 96);
    unint64_t v279 = v12;
    v276 = v20 + 24;
    if (v22 == 6)
    {
      uint64_t v23 = *(int *)(v10 + 24);
      if (v23)
      {
        if ((v23 & 0x80000000) != 0) {
          std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__throw_length_error[abi:ne180100]();
        }
        BOOL v24 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<CoreML::NNCompiler::MLRangeShape::Range>>(*(int *)(v10 + 24));
        uint64_t v26 = v25;
        bzero(v24, 16 * v23);
        shared_owners = (char *)v21[4].__shared_owners_;
        shared_weak_owners = (char *)v21[4].__shared_weak_owners_;
        int v29 = (unint64_t *)v24;
        if (shared_weak_owners != shared_owners)
        {
          do
          {
            *((_OWORD *)v29 - 1) = *((_OWORD *)shared_weak_owners - 1);
            v29 -= 2;
            shared_weak_owners -= 16;
          }
          while (shared_weak_owners != shared_owners);
          shared_weak_owners = (char *)v21[4].__shared_owners_;
        }
        v21[4].__shared_owners_ = (uint64_t)v29;
        v21[4].__shared_weak_owners_ = (uint64_t)&v24[16 * v23];
        v21[5].__vftable = (std::__shared_weak_count_vtbl *)&v24[16 * v26];
        if (shared_weak_owners)
        {
          operator delete(shared_weak_owners);
          int v29 = (unint64_t *)v21[4].__shared_owners_;
        }
        uint64_t v30 = *(unsigned int *)(v10 + 24);
        if ((int)v30 >= 1)
        {
          unint64_t v31 = 0;
          uint64_t v32 = 16 * v30;
          char v33 = (uint64_t *)(*(void *)(v10 + 32) + 8);
          do
          {
            uint64_t v34 = *v33++;
            unint64_t v35 = *(void *)(v34 + 24);
            int v36 = &v29[v31 / 8];
            *int v36 = *(void *)(v34 + 16);
            v36[1] = v35;
            v31 += 16;
          }
          while (v32 != v31);
        }
      }
      else
      {
        int v29 = 0;
      }
      uint64_t v37 = (unint64_t *)v21[4].__shared_weak_owners_;
      uint64_t v38 = (char *)v37 - (char *)v29;
      if (v37 == v29)
      {
        std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)&__p);
        std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&__p, (uint64_t)"Leaf Node (TreeID=", 18);
        int v44 = (void *)std::ostream::operator<<();
        std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v44, (uint64_t)", NodeID=", 9);
        long long v45 = (void *)std::ostream::operator<<();
        std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v45, (uint64_t)") has no evaluation value(s) specified.", 39);
        std::stringbuf::str();
        CoreML::TreeEnsembles::constructAndValidateTreeEnsembleFromSpec(CoreML::Specification::Model const&)::$_0::operator()(v299, (uint64_t)&v284, 0);
        if (SHIBYTE(v284.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v284.__r_.__value_.__l.__data_);
        }
        __p.__r_.__value_.__r.__words[0] = v281;
        *(std::string::size_type *)((char *)__p.__r_.__value_.__r.__words + *(void *)(v281 - 24)) = v280;
        __p.__r_.__value_.__l.__size_ = MEMORY[0x1E4FBA470] + 16;
        if (v308 < 0) {
          operator delete(v307);
        }
        std::streambuf::~streambuf();
        std::ostream::~ostream();
        MEMORY[0x19F3C1850](v309);
      }
      else
      {
        if ((unint64_t)v38 >= 0x11)
        {
          std::__introsort<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<unsigned long,double> *,false>(v29, v21[4].__shared_weak_owners_, 126 - 2 * __clz(v38 >> 4), 1);
          int v29 = (unint64_t *)v21[4].__shared_owners_;
          uint64_t v37 = (unint64_t *)v21[4].__shared_weak_owners_;
        }
        if (v29 == v37)
        {
          uint64_t v43 = (uint64_t)v37;
        }
        else
        {
          do
          {
            if (*v29 >= v283)
            {
              std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)&__p);
              std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&__p, (uint64_t)"Leaf Node (TreeID=", 18);
              uint64_t v39 = (void *)std::ostream::operator<<();
              std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v39, (uint64_t)", NodeID=", 9);
              BOOL v40 = (void *)std::ostream::operator<<();
              std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v40, (uint64_t)") specifies evaluation value applied to dimension ", 50);
              long long v41 = (void *)std::ostream::operator<<();
              std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v41, (uint64_t)"; which is out of range. Dimension must be less than ",
                53);
              uint64_t v42 = (void *)std::ostream::operator<<();
              std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v42, (uint64_t)".", 1);
              std::stringbuf::str();
              CoreML::TreeEnsembles::constructAndValidateTreeEnsembleFromSpec(CoreML::Specification::Model const&)::$_0::operator()(v299, (uint64_t)&v284, 0);
              if (SHIBYTE(v284.__r_.__value_.__r.__words[2]) < 0) {
                operator delete(v284.__r_.__value_.__l.__data_);
              }
              __p.__r_.__value_.__r.__words[0] = v281;
              *(std::string::size_type *)((char *)__p.__r_.__value_.__r.__words + *(void *)(v281 - 24)) = v280;
              __p.__r_.__value_.__l.__size_ = MEMORY[0x1E4FBA470] + 16;
              if (v308 < 0) {
                operator delete(v307);
              }
              std::streambuf::~streambuf();
              std::ostream::~ostream();
              MEMORY[0x19F3C1850](v309);
            }
            v29 += 2;
          }
          while (v29 != v37);
          uint64_t v37 = (unint64_t *)v21[4].__shared_owners_;
          uint64_t v43 = v21[4].__shared_weak_owners_;
        }
        if (v43 - (void)v37 != 16)
        {
          uint64_t v46 = 0;
          unint64_t v47 = 0;
          do
          {
            if (v37[v46] == v37[v46 + 2])
            {
              std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)&__p);
              std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&__p, (uint64_t)"Leaf Node (TreeID=", 18);
              unint64_t v48 = (void *)std::ostream::operator<<();
              std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v48, (uint64_t)", NodeID=", 9);
              int v49 = (void *)std::ostream::operator<<();
              std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v49, (uint64_t)") specifies multipule evaluation values applied to dimension ", 61);
              uint64_t v50 = (void *)std::ostream::operator<<();
              std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v50, (uint64_t)".", 1);
              std::stringbuf::str();
              CoreML::TreeEnsembles::constructAndValidateTreeEnsembleFromSpec(CoreML::Specification::Model const&)::$_0::operator()(v299, (uint64_t)&v284, 0);
              if (SHIBYTE(v284.__r_.__value_.__r.__words[2]) < 0) {
                operator delete(v284.__r_.__value_.__l.__data_);
              }
              __p.__r_.__value_.__r.__words[0] = v281;
              *(std::string::size_type *)((char *)__p.__r_.__value_.__r.__words + *(void *)(v281 - 24)) = v280;
              __p.__r_.__value_.__l.__size_ = MEMORY[0x1E4FBA470] + 16;
              if (v308 < 0) {
                operator delete(v307);
              }
              std::streambuf::~streambuf();
              std::ostream::~ostream();
              MEMORY[0x19F3C1850](v309);
              uint64_t v37 = (unint64_t *)v21[4].__shared_owners_;
              uint64_t v43 = v21[4].__shared_weak_owners_;
            }
            ++v47;
            v46 += 2;
          }
          while (v47 < ((v43 - (uint64_t)v37) >> 4) - 1);
        }
      }
    }
    else
    {
      if (v22 >= 6)
      {
        v267 = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
        std::logic_error::logic_error(v267, "Branch mode hit bad value -- this is confusing; error in validator?");
        __cxa_throw(v267, MEMORY[0x1E4FBA328], MEMORY[0x1E4FBA1B0]);
      }
      *((_DWORD *)v20 + 7) = v22;
      *((void *)v20 + 4) = *(void *)(v10 + 64);
      *((void *)v20 + 5) = *(void *)(v10 + 72);
      *(_OWORD *)(v20 + 72) = *(_OWORD *)(v10 + 80);
      v20[88] = *(unsigned char *)(v10 + 60);
    }
    *(void *)&long long v51 = v276;
    *((void *)&v51 + 1) = v21;
    long long v277 = v51;
    atomic_fetch_add_explicit(&v21->__shared_owners_, 1uLL, memory_order_relaxed);
    if (&v288 == v14 || (long long v52 = v14[4], v11 < (unint64_t)v52))
    {
LABEL_77:
      uint64_t v53 = *v14;
      long long v54 = v14;
      if (v287 != v14)
      {
        uint64_t v55 = *v14;
        uint64_t v56 = v14;
        if (v53)
        {
          do
          {
            long long v54 = (uint64_t **)v55;
            uint64_t v55 = (uint64_t *)v55[1];
          }
          while (v55);
        }
        else
        {
          do
          {
            long long v54 = (uint64_t **)v56[2];
            BOOL v57 = *v54 == (uint64_t *)v56;
            uint64_t v56 = v54;
          }
          while (v57);
        }
        char v58 = v54[4];
        if ((unint64_t)v58 >= v11 && (v11 < (unint64_t)v58 || (unint64_t)v54[5] >= v279))
        {
          uint64_t v62 = v288;
          uint64_t v59 = &v288;
          unint64_t v14 = &v288;
          if (v288)
          {
            uint64_t v59 = &v288;
            while (1)
            {
              while (1)
              {
                unint64_t v14 = (uint64_t **)v62;
                unint64_t v63 = v62[4];
                if (v11 >= v63) {
                  break;
                }
LABEL_99:
                uint64_t v62 = *v14;
                uint64_t v59 = v14;
                if (!*v14) {
                  goto LABEL_124;
                }
              }
              if (v63 >= v11)
              {
                std::string v64 = v14[5];
                if (v279 < (unint64_t)v64) {
                  goto LABEL_99;
                }
                if ((unint64_t)v64 >= v279) {
                  goto LABEL_88;
                }
              }
              uint64_t v59 = v14 + 1;
              uint64_t v62 = v14[1];
              if (!v62) {
                goto LABEL_124;
              }
            }
          }
          goto LABEL_124;
        }
      }
      if (v53) {
        uint64_t v59 = v54 + 1;
      }
      else {
        uint64_t v59 = v14;
      }
      if (v53) {
        unint64_t v14 = v54;
      }
      goto LABEL_88;
    }
    if ((unint64_t)v52 >= v11)
    {
      uint64_t v65 = v14[5];
      if (v279 < (unint64_t)v65) {
        goto LABEL_77;
      }
      if ((unint64_t)v65 >= v279) {
        goto LABEL_127;
      }
    }
    uint64_t v59 = v14 + 1;
    std::string v60 = v14[1];
    if (v60)
    {
      do
      {
        uint64_t v59 = (uint64_t **)v60;
        std::string v60 = (uint64_t *)*v60;
        unint64_t v14 = v59;
        uint64_t v61 = v59;
      }
      while (v60);
    }
    else
    {
      uint64_t v61 = v14;
      do
      {
        long long v66 = (uint64_t *)v61;
        uint64_t v61 = (uint64_t **)v61[2];
      }
      while (*v61 != v66);
    }
    if (v61 != &v288)
    {
      uint64_t v67 = v61[4];
      if (v11 >= (unint64_t)v67 && ((unint64_t)v67 < v11 || v279 >= (unint64_t)v61[5]))
      {
        long long v68 = v288;
        uint64_t v59 = &v288;
        unint64_t v14 = &v288;
        if (!v288)
        {
LABEL_124:
          long long v71 = operator new(0x40uLL);
          v71[4] = v11;
          v71[5] = v279;
          *((_OWORD *)v71 + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v277;
          *long long v71 = 0;
          v71[1] = 0;
          v71[2] = v14;
          std::string *v59 = v71;
          if (*(void *)v287)
          {
            v287 = *(void **)v287;
            long long v71 = *v59;
          }
          std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(v288, v71);
          ++v289[0];
          *((void *)&v51 + 1) = 0;
          goto LABEL_127;
        }
        uint64_t v59 = &v288;
        while (1)
        {
          while (1)
          {
            unint64_t v14 = (uint64_t **)v68;
            unint64_t v69 = v68[4];
            if (v11 >= v69) {
              break;
            }
LABEL_118:
            long long v68 = *v14;
            uint64_t v59 = v14;
            if (!*v14) {
              goto LABEL_124;
            }
          }
          if (v69 >= v11)
          {
            uint64_t v70 = v14[5];
            if (v279 < (unint64_t)v70) {
              goto LABEL_118;
            }
            if ((unint64_t)v70 >= v279) {
              break;
            }
          }
          uint64_t v59 = v14 + 1;
          long long v68 = v14[1];
          if (!v68) {
            goto LABEL_124;
          }
        }
      }
    }
LABEL_88:
    if (!*v59) {
      goto LABEL_124;
    }
LABEL_127:
    if (*((void *)&v51 + 1)) {
      std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&v51 + 1));
    }
    std::__shared_weak_count::__release_shared[abi:ne180100](v21);
LABEL_130:
    uint64_t v8 = v278 + 8;
  }
  while (v278 + 8 != v275);
  uint64_t v72 = (uint64_t *)v287;
  v293 = (uint64_t *)&v287;
  v294 = (uint64_t *)v299;
  if (v287 != &v288)
  {
    while (2)
    {
      uint64_t v73 = v72[6];
      if (*(unsigned char *)v73) {
        goto LABEL_178;
      }
      CoreML::TreeEnsembles::constructAndValidateTreeEnsembleFromSpec(CoreML::Specification::Model const&)::$_2::operator()(&v290, &v293, *(void *)(v73 + 32), *(void *)(v73 + 56));
      uint64_t v74 = v290;
      if (v290)
      {
        if (v290 == (void *)v72[6])
        {
          std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)&__p);
          std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&__p, (uint64_t)"False child and parent have same ID (TreeID=", 44);
          int v94 = (void *)std::ostream::operator<<();
          std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v94, (uint64_t)", NodeID=", 9);
          long long v95 = (void *)std::ostream::operator<<();
          std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v95, (uint64_t)")", 1);
          std::stringbuf::str();
          CoreML::TreeEnsembles::constructAndValidateTreeEnsembleFromSpec(CoreML::Specification::Model const&)::$_0::operator()(v299, (uint64_t)&v284, 0);
          if (SHIBYTE(v284.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v284.__r_.__value_.__l.__data_);
          }
          __p.__r_.__value_.__r.__words[0] = v281;
          *(std::string::size_type *)((char *)__p.__r_.__value_.__r.__words + *(void *)(v281 - 24)) = v280;
          __p.__r_.__value_.__l.__size_ = MEMORY[0x1E4FBA470] + 16;
          if (v308 < 0) {
            operator delete(v307);
          }
          goto LABEL_175;
        }
        long long v75 = (std::__shared_weak_count *)*((void *)v290 + 14);
        if (v75)
        {
          unint64_t v76 = std::__shared_weak_count::lock(v75);
          if (v76)
          {
            uint64_t v77 = *((void *)v74 + 13);
            std::__shared_weak_count::__release_shared[abi:ne180100](v76);
            if (v77)
            {
              std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)&__p);
              std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&__p, (uint64_t)"In TreeID=", 10);
              uint64_t v78 = (void *)std::ostream::operator<<();
              std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v78, (uint64_t)", false child of NodeID=", 24);
              long long v79 = (void *)std::ostream::operator<<();
              std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v79, (uint64_t)" is already the child of node NodeID=", 37);
              uint64_t v80 = std::__shared_weak_count::lock(*((std::__shared_weak_count **)v74 + 14));
              std::ostream::operator<<();
              std::__shared_weak_count::__release_shared[abi:ne180100](v80);
              std::stringbuf::str();
              CoreML::TreeEnsembles::constructAndValidateTreeEnsembleFromSpec(CoreML::Specification::Model const&)::$_0::operator()(v299, (uint64_t)&v284, 0);
              goto LABEL_171;
            }
          }
        }
        uint64_t v81 = v72[6];
        long long v82 = v291;
        if (v291) {
          atomic_fetch_add_explicit(&v291->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        long long v83 = *(std::__shared_weak_count **)(v81 + 144);
        *(void *)(v81 + 136) = v74;
        *(void *)(v81 + 144) = v82;
        if (v83) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v83);
        }
        uint64_t v85 = v72[6];
        uint64_t v84 = v72[7];
        if (v84) {
          atomic_fetch_add_explicit((atomic_ullong *volatile)(v84 + 16), 1uLL, memory_order_relaxed);
        }
        int v86 = (std::__shared_weak_count *)*((void *)v74 + 14);
        *((void *)v74 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v85;
        *((void *)v74 + 14) = v84;
        if (v86) {
          std::__shared_weak_count::__release_weak(v86);
        }
        if (v82) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v82);
        }
        CoreML::TreeEnsembles::constructAndValidateTreeEnsembleFromSpec(CoreML::Specification::Model const&)::$_2::operator()(&v290, &v293, *(void *)(v72[6] + 32), *(void *)(v72[6] + 48));
        std::string::size_type v87 = v290;
        if (v290)
        {
          if (v290 == (void *)v72[6])
          {
            std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)&__p);
            std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&__p, (uint64_t)"True child and parent have same ID (TreeID=", 43);
            v103 = (void *)std::ostream::operator<<();
            std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v103, (uint64_t)", NodeID=", 9);
            std::string v104 = (void *)std::ostream::operator<<();
            std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v104, (uint64_t)")", 1);
            std::stringbuf::str();
            CoreML::TreeEnsembles::constructAndValidateTreeEnsembleFromSpec(CoreML::Specification::Model const&)::$_0::operator()(v299, (uint64_t)&v284, 0);
          }
          else
          {
            uint64_t v88 = (std::__shared_weak_count *)*((void *)v290 + 14);
            if (!v88
              || (long long v89 = std::__shared_weak_count::lock(v88)) == 0
              || (uint64_t v90 = *((void *)v87 + 13), std::__shared_weak_count::__release_shared[abi:ne180100](v89), !v90))
            {
              uint64_t v96 = v72[6];
              long long v97 = v291;
              if (v291) {
                atomic_fetch_add_explicit(&v291->__shared_owners_, 1uLL, memory_order_relaxed);
              }
              int v98 = *(std::__shared_weak_count **)(v96 + 128);
              *(void *)(v96 + 12CoreML::Specification::Int64Parameter::New(this, 0) = v87;
              *(void *)(v96 + 128) = v97;
              if (v98) {
                std::__shared_weak_count::__release_shared[abi:ne180100](v98);
              }
              uint64_t v100 = v72[6];
              uint64_t v99 = v72[7];
              if (v99) {
                atomic_fetch_add_explicit((atomic_ullong *volatile)(v99 + 16), 1uLL, memory_order_relaxed);
              }
              int v101 = (std::__shared_weak_count *)*((void *)v87 + 14);
              *((void *)v87 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v100;
              *((void *)v87 + 14) = v99;
              if (v101) {
                std::__shared_weak_count::__release_weak(v101);
              }
              if (!v97) {
                goto LABEL_178;
              }
              std::string::size_type v102 = v97;
LABEL_177:
              std::__shared_weak_count::__release_shared[abi:ne180100](v102);
              goto LABEL_178;
            }
            std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)&__p);
            std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&__p, (uint64_t)"In TreeID=", 10);
            long long v91 = (void *)std::ostream::operator<<();
            std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v91, (uint64_t)", true child of NodeID=", 23);
            std::string::size_type v92 = (void *)std::ostream::operator<<();
            std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v92, (uint64_t)" is already the child of node NodeID=", 37);
            long long v93 = std::__shared_weak_count::lock(*((std::__shared_weak_count **)v87 + 14));
            std::ostream::operator<<();
            std::__shared_weak_count::__release_shared[abi:ne180100](v93);
            std::stringbuf::str();
            CoreML::TreeEnsembles::constructAndValidateTreeEnsembleFromSpec(CoreML::Specification::Model const&)::$_0::operator()(v299, (uint64_t)&v284, 0);
          }
LABEL_171:
          if (SHIBYTE(v284.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v284.__r_.__value_.__l.__data_);
          }
          __p.__r_.__value_.__r.__words[0] = v281;
          *(std::string::size_type *)((char *)__p.__r_.__value_.__r.__words + *(void *)(v281 - 24)) = v280;
          __p.__r_.__value_.__l.__size_ = MEMORY[0x1E4FBA470] + 16;
          if (v308 < 0) {
            operator delete(v307);
          }
LABEL_175:
          std::streambuf::~streambuf();
          std::ostream::~ostream();
          MEMORY[0x19F3C1850](v309);
        }
      }
      std::string::size_type v102 = v291;
      if (v291) {
        goto LABEL_177;
      }
LABEL_178:
      v105 = (uint64_t *)v72[1];
      if (v105)
      {
        do
        {
          std::string::size_type v106 = (uint64_t **)v105;
          v105 = (uint64_t *)*v105;
        }
        while (v105);
      }
      else
      {
        do
        {
          std::string::size_type v106 = (uint64_t **)v72[2];
          BOOL v57 = *v106 == v72;
          uint64_t v72 = (uint64_t *)v106;
        }
        while (!v57);
      }
      uint64_t v72 = (uint64_t *)v106;
      if (v106 == &v288) {
        break;
      }
      continue;
    }
  }
LABEL_186:
  char v107 = v296;
  if (v289[0] > (uint64_t)(v298 - (void)v296) >> 4)
  {
    if (v289[0] >> 60) {
      std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__throw_length_error[abi:ne180100]();
    }
    std::string v108 = v297;
    v306 = &v298;
    __p.__r_.__value_.__r.__words[0] = (std::string::size_type)std::__allocate_at_least[abi:ne180100]<std::allocator<CoreML::NNCompiler::MLRangeShape::Range>>(v289[0]);
    __p.__r_.__value_.__l.__size_ = __p.__r_.__value_.__r.__words[0] + v108 - v107;
    __p.__r_.__value_.__r.__words[2] = __p.__r_.__value_.__l.__size_;
    std::string::size_type v305 = __p.__r_.__value_.__r.__words[0] + 16 * v109;
    std::vector<std::shared_ptr<MIL::IRValue const>>::__swap_out_circular_buffer(&v296, &__p);
    std::__split_buffer<std::shared_ptr<MIL::IRValue const>>::~__split_buffer((uint64_t)&__p);
  }
  std::string v110 = (uint64_t *)v287;
  if (v287 != &v288)
  {
    std::string v111 = v297;
    do
    {
      if ((unint64_t)v111 >= v298)
      {
        uint64_t v113 = (v111 - v296) >> 4;
        if ((unint64_t)(v113 + 1) >> 60) {
          std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__throw_length_error[abi:ne180100]();
        }
        unint64_t v114 = (uint64_t)(v298 - (void)v296) >> 3;
        if (v114 <= v113 + 1) {
          unint64_t v114 = v113 + 1;
        }
        if (v298 - (unint64_t)v296 >= 0x7FFFFFFFFFFFFFF0) {
          unint64_t v115 = 0xFFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v115 = v114;
        }
        v306 = &v298;
        int v116 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<CoreML::NNCompiler::MLRangeShape::Range>>(v115);
        std::string::size_type v117 = &v116[16 * v113];
        __p.__r_.__value_.__r.__words[0] = (std::string::size_type)v116;
        __p.__r_.__value_.__l.__size_ = (std::string::size_type)v117;
        std::string::size_type v305 = (std::string::size_type)&v116[16 * v118];
        long long v119 = *((_OWORD *)v110 + 3);
        *(_OWORD *)std::string::size_type v117 = v119;
        if (*((void *)&v119 + 1)) {
          atomic_fetch_add_explicit((atomic_ullong *volatile)(*((void *)&v119 + 1) + 8), 1uLL, memory_order_relaxed);
        }
        __p.__r_.__value_.__r.__words[2] = (std::string::size_type)(v117 + 16);
        std::vector<std::shared_ptr<MIL::IRValue const>>::__swap_out_circular_buffer(&v296, &__p);
        std::string v111 = v297;
        std::__split_buffer<std::shared_ptr<MIL::IRValue const>>::~__split_buffer((uint64_t)&__p);
      }
      else
      {
        *(void *)std::string v111 = v110[6];
        uint64_t v112 = v110[7];
        *((void *)v111 + 1) = v112;
        if (v112) {
          atomic_fetch_add_explicit((atomic_ullong *volatile)(v112 + 8), 1uLL, memory_order_relaxed);
        }
        v111 += 16;
      }
      v297 = v111;
      v120 = (uint64_t *)v110[1];
      if (v120)
      {
        do
        {
          v121 = (uint64_t **)v120;
          v120 = (uint64_t *)*v120;
        }
        while (v120);
      }
      else
      {
        do
        {
          v121 = (uint64_t **)v110[2];
          BOOL v57 = *v121 == v110;
          std::string v110 = (uint64_t *)v121;
        }
        while (!v57);
      }
      std::string v110 = (uint64_t *)v121;
    }
    while (v121 != &v288);
  }
  std::__tree<std::__value_type<std::pair<unsigned long,unsigned long>,std::shared_ptr<CoreML::TreeEnsembles::_TreeComputationNode>>,std::__map_value_compare<std::pair<unsigned long,unsigned long>,std::__value_type<std::pair<unsigned long,unsigned long>,std::shared_ptr<CoreML::TreeEnsembles::_TreeComputationNode>>,std::less<std::pair<unsigned long,unsigned long>>,true>,std::allocator<std::__value_type<std::pair<unsigned long,unsigned long>,std::shared_ptr<CoreML::TreeEnsembles::_TreeComputationNode>>>>::destroy(v288);
  v293 = 0;
  v294 = 0;
  unint64_t v295 = 0;
  std::string::size_type v122 = v296;
  signed int v123 = v297;
  if (v296 == v297)
  {
    uint64_t v124 = 0;
  }
  else
  {
    uint64_t v124 = 0;
    int v125 = 0;
    unint64_t v126 = 0;
    do
    {
      uint64_t v127 = *(void *)v122;
      int v128 = *(std::__shared_weak_count **)(*(void *)v122 + 112);
      if (!v128
        || (signed int v129 = std::__shared_weak_count::lock(v128)) == 0
        || (uint64_t v130 = *(void *)(v127 + 104), std::__shared_weak_count::__release_shared[abi:ne180100](v129), !v130))
      {
        unint64_t v131 = *(void *)(*(void *)v122 + 32);
        unint64_t v132 = *(void *)(*(void *)v122 + 40);
        if ((unint64_t)v125 >= v126)
        {
          uint64_t v133 = ((char *)v125 - (char *)v124) >> 4;
          unint64_t v134 = v133 + 1;
          if ((unint64_t)(v133 + 1) >> 60) {
            std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__throw_length_error[abi:ne180100]();
          }
          if ((uint64_t)(v126 - (void)v124) >> 3 > v134) {
            unint64_t v134 = (uint64_t)(v126 - (void)v124) >> 3;
          }
          if (v126 - (unint64_t)v124 >= 0x7FFFFFFFFFFFFFF0) {
            unint64_t v135 = 0xFFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v135 = v134;
          }
          if (v135) {
            unint64_t v135 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<CoreML::NNCompiler::MLRangeShape::Range>>(v135);
          }
          else {
            uint64_t v136 = 0;
          }
          v137 = (unint64_t *)(v135 + 16 * v133);
          unint64_t *v137 = v131;
          v137[1] = v132;
          if (v125 == v124)
          {
            v139 = (unint64_t *)(v135 + 16 * v133);
          }
          else
          {
            unint64_t v138 = v135 + 16 * v133;
            do
            {
              v139 = (unint64_t *)(v138 - 16);
              *(_OWORD *)(v138 - 16) = *((_OWORD *)v125 - 1);
              v125 -= 2;
              v138 -= 16;
            }
            while (v125 != v124);
          }
          unint64_t v126 = v135 + 16 * v136;
          int v125 = v137 + 2;
          if (v124) {
            operator delete(v124);
          }
          uint64_t v124 = v139;
        }
        else
        {
          *int v125 = v131;
          v125[1] = v132;
          v125 += 2;
        }
        std::string::size_type v140 = v294;
        if ((unint64_t)v294 >= v295)
        {
          int64_t v143 = ((char *)v294 - (char *)v293) >> 4;
          unint64_t v144 = v143 + 1;
          if ((unint64_t)(v143 + 1) >> 60) {
            std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__throw_length_error[abi:ne180100]();
          }
          uint64_t v145 = v295 - (void)v293;
          if ((uint64_t)(v295 - (void)v293) >> 3 > v144) {
            unint64_t v144 = v145 >> 3;
          }
          if ((unint64_t)v145 >= 0x7FFFFFFFFFFFFFF0) {
            unint64_t v146 = 0xFFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v146 = v144;
          }
          v306 = &v295;
          uint64_t v147 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<CoreML::NNCompiler::MLRangeShape::Range>>(v146);
          v148 = &v147[16 * v143];
          __p.__r_.__value_.__r.__words[0] = (std::string::size_type)v147;
          __p.__r_.__value_.__l.__size_ = (std::string::size_type)v148;
          std::string::size_type v305 = (std::string::size_type)&v147[16 * v149];
          long long v150 = *(_OWORD *)v122;
          *(_OWORD *)v148 = *(_OWORD *)v122;
          if (*((void *)&v150 + 1)) {
            atomic_fetch_add_explicit((atomic_ullong *volatile)(*((void *)&v150 + 1) + 8), 1uLL, memory_order_relaxed);
          }
          __p.__r_.__value_.__r.__words[2] = (std::string::size_type)(v148 + 16);
          std::vector<std::shared_ptr<MIL::IRValue const>>::__swap_out_circular_buffer(&v293, &__p);
          uint64_t v142 = v294;
          std::__split_buffer<std::shared_ptr<MIL::IRValue const>>::~__split_buffer((uint64_t)&__p);
        }
        else
        {
          uint64_t *v294 = *(void *)v122;
          uint64_t v141 = *((void *)v122 + 1);
          v140[1] = v141;
          if (v141) {
            atomic_fetch_add_explicit((atomic_ullong *volatile)(v141 + 8), 1uLL, memory_order_relaxed);
          }
          uint64_t v142 = v140 + 2;
        }
        v294 = v142;
      }
      v122 += 16;
    }
    while (v122 != v123);
    if (v294 != v293)
    {
      unint64_t v151 = 126 - 2 * __clz(((char *)v125 - (char *)v124) >> 4);
      uint64_t v152 = v125 == v124 ? 0 : v151;
      std::__introsort<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<unsigned long,unsigned long> *,false>((unint64_t)v124, v125, v152, 1);
      if ((char *)v125 - (char *)v124 != 16)
      {
        unint64_t v153 = 0;
        std::string::size_type v282 = *MEMORY[0x1E4FBA418];
        std::string::size_type v154 = *(void *)(MEMORY[0x1E4FBA418] + 24);
        unint64_t v155 = ((char *)v125 - (char *)v124) >> 4;
        do
        {
          unint64_t v156 = v124[2 * v153];
          unint64_t v157 = v153 + 1;
          if (v124[2 * v153 + 2] == v156)
          {
            if (v157 < v155)
            {
              uint64_t v158 = &v124[2 * v153 + 2];
              while (1)
              {
                unint64_t v159 = *v158;
                v158 += 2;
                if (v159 != v156) {
                  break;
                }
                if (v155 == ++v157)
                {
                  unint64_t v157 = v155;
                  break;
                }
              }
            }
            std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)&__p);
            std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&__p, (uint64_t)"Tree TreeID=", 12);
            BOOL v160 = (void *)std::ostream::operator<<();
            std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v160, (uint64_t)" has multiple root nodes: ", 26);
            unint64_t v161 = v157 - v153;
            if (v157 > v153)
            {
              uint64_t v162 = (uint64_t)&v124[2 * v153 + 1];
              do
              {
                std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&__p, (uint64_t)"NodeID=", 7);
                std::ostream::operator<<();
                if (v161 != 1) {
                  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&__p, (uint64_t)", ", 2);
                }
                v162 += 16;
                --v161;
              }
              while (v161);
            }
            std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&__p, (uint64_t)".", 1);
            std::stringbuf::str();
            CoreML::TreeEnsembles::constructAndValidateTreeEnsembleFromSpec(CoreML::Specification::Model const&)::$_0::operator()(v299, (uint64_t)&v284, 0);
            if (SHIBYTE(v284.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v284.__r_.__value_.__l.__data_);
            }
            __p.__r_.__value_.__r.__words[0] = v282;
            *(std::string::size_type *)((char *)__p.__r_.__value_.__r.__words + *(void *)(v282 - 24)) = v154;
            __p.__r_.__value_.__l.__size_ = MEMORY[0x1E4FBA470] + 16;
            if (v308 < 0) {
              operator delete(v307);
            }
            std::streambuf::~streambuf();
            std::ostream::~ostream();
            MEMORY[0x19F3C1850](v309);
            unint64_t v155 = ((char *)v125 - (char *)v124) >> 4;
          }
          else
          {
            unint64_t v155 = ((char *)v125 - (char *)v124) >> 4;
          }
          unint64_t v153 = v157;
        }
        while (v157 < v155 - 1);
      }
    }
  }
  *(_OWORD *)&v284.__r_.__value_.__r.__words[1] = 0uLL;
  v284.__r_.__value_.__r.__words[0] = (std::string::size_type)&v284.__r_.__value_.__l.__size_;
  v287 = 0;
  v288 = 0;
  v289[0] = 0;
  v163 = v293;
  v164 = v294;
  if (v293 == v294) {
    goto LABEL_331;
  }
  while (2)
  {
    std::string::size_type v165 = *v163;
    v166 = (std::__shared_weak_count *)v163[1];
    if (v166)
    {
      atomic_fetch_add_explicit(&v166->__shared_owners_, 1uLL, memory_order_relaxed);
      __p.__r_.__value_.__l.__size_ = (std::string::size_type)v166;
      atomic_fetch_add_explicit(&v166->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    else
    {
      __p.__r_.__value_.__l.__size_ = 0;
    }
    __p.__r_.__value_.__r.__words[0] = v165;
    __p.__r_.__value_.__r.__words[2] = 0;
    v167 = (uint64_t *)v289[0];
    v168 = (char *)v287;
    if ((void *)v289[0] == v287)
    {
      if (v289[0])
      {
        v174 = v288;
        v175 = (void *)v289[0];
        if (v288 != (uint64_t *)v289[0])
        {
          do
          {
            v176 = (std::__shared_weak_count *)*(v174 - 2);
            if (v176) {
              std::__shared_weak_count::__release_shared[abi:ne180100](v176);
            }
            v174 -= 3;
          }
          while (v174 != v167);
          v175 = v287;
        }
        v288 = v167;
        operator delete(v175);
        v287 = 0;
        v288 = 0;
        v289[0] = 0;
      }
      v177 = std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<long long>>>(1uLL);
      v287 = v177;
      v288 = v177;
      v289[0] = (unint64_t)&v177[3 * v178];
      goto LABEL_299;
    }
    if (v288 == v287)
    {
      v177 = v287;
LABEL_299:
      v171 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::pair<std::shared_ptr<CoreML::TreeEnsembles::_TreeComputationNode>,unsigned long>>,std::pair<std::shared_ptr<CoreML::TreeEnsembles::_TreeComputationNode>,unsigned long> const*,std::pair<std::shared_ptr<CoreML::TreeEnsembles::_TreeComputationNode>,unsigned long> const*,std::pair<std::shared_ptr<CoreML::TreeEnsembles::_TreeComputationNode>,unsigned long>*>((uint64_t)v289, &__p, &v305, v177);
      goto LABEL_300;
    }
    long long v169 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    if (__p.__r_.__value_.__l.__size_) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(__p.__r_.__value_.__l.__size_ + 8), 1uLL, memory_order_relaxed);
    }
    int v170 = (std::__shared_weak_count *)*((void *)v168 + 1);
    *(_OWORD *)v168 = v169;
    if (v170) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v170);
    }
    *((void *)v168 + 2) = *((void *)&__p.__r_.__value_.__l + 2);
    v171 = (uint64_t *)(v168 + 24);
    for (int i = v288; i != v171; i -= 3)
    {
      v173 = (std::__shared_weak_count *)*(i - 2);
      if (v173) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v173);
      }
    }
LABEL_300:
    v288 = v171;
    if (__p.__r_.__value_.__l.__size_)
    {
      std::__shared_weak_count::__release_shared[abi:ne180100]((std::__shared_weak_count *)__p.__r_.__value_.__l.__size_);
      v171 = v288;
    }
    uint64_t v179 = (uint64_t *)v287;
    while (2)
    {
      if (v179 != v171)
      {
        uint64_t v180 = *(v171 - 3);
        int v181 = (std::__shared_weak_count *)*(v171 - 2);
        if (v181) {
          atomic_fetch_add_explicit(&v181->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        if (!v180)
        {
          std::string::basic_string[abi:ne180100]<0>(&__p, "Internal error: null child node; likely specification error.");
          CoreML::TreeEnsembles::constructAndValidateTreeEnsembleFromSpec(CoreML::Specification::Model const&)::$_0::operator()(v299, (uint64_t)&__p, 1);
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
        }
        if (*(unsigned char *)v180)
        {
LABEL_310:
          v182 = v288;
          unint64_t v183 = (std::__shared_weak_count *)*(v288 - 2);
          if (v183) {
            std::__shared_weak_count::__release_shared[abi:ne180100](v183);
          }
          v288 = v182 - 3;
        }
        else
        {
          uint64_t v184 = *(v171 - 1);
          if (v184 == 1)
          {
            *(v171 - 1) = 2;
            std::__tree<unsigned long long>::__emplace_unique_key_args<unsigned long long,unsigned long long const&>((uint64_t *)&v284, *(void *)(v180 + 120), *(void *)(v180 + 120));
            std::string::size_type v186 = *(void *)(v180 + 128);
            __p.__r_.__value_.__r.__words[0] = *(void *)(v180 + 120);
            __p.__r_.__value_.__l.__size_ = v186;
            if (v186) {
              atomic_fetch_add_explicit((atomic_ullong *volatile)(v186 + 8), 1uLL, memory_order_relaxed);
            }
          }
          else
          {
            if (v184) {
              goto LABEL_310;
            }
            *(v171 - 1) = 1;
            std::__tree<unsigned long long>::__emplace_unique_key_args<unsigned long long,unsigned long long const&>((uint64_t *)&v284, *(void *)(v180 + 136), *(void *)(v180 + 136));
            std::string::size_type v185 = *(void *)(v180 + 144);
            __p.__r_.__value_.__r.__words[0] = *(void *)(v180 + 136);
            __p.__r_.__value_.__l.__size_ = v185;
            if (v185) {
              atomic_fetch_add_explicit((atomic_ullong *volatile)(v185 + 8), 1uLL, memory_order_relaxed);
            }
          }
          __p.__r_.__value_.__r.__words[2] = 0;
          std::vector<std::pair<std::shared_ptr<CoreML::TreeEnsembles::_TreeComputationNode>,unsigned long>>::push_back[abi:ne180100]((char **)&v287, (uint64_t)&__p);
          if (__p.__r_.__value_.__l.__size_) {
            std::__shared_weak_count::__release_shared[abi:ne180100]((std::__shared_weak_count *)__p.__r_.__value_.__l.__size_);
          }
        }
        if (v181) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v181);
        }
        uint64_t v179 = (uint64_t *)v287;
        v171 = v288;
        continue;
      }
      break;
    }
    if (v166) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v166);
    }
    v163 += 2;
    if (v163 != v164) {
      continue;
    }
    break;
  }
  v187 = (unint64_t *)v293;
  v188 = v294;
  while (v187 != (unint64_t *)v188)
  {
    std::__tree<unsigned long long>::__emplace_unique_key_args<unsigned long long,unsigned long long const&>((uint64_t *)&v284, *v187, *v187);
    v187 += 2;
  }
LABEL_331:
  if (v284.__r_.__value_.__r.__words[2] != (v297 - v296) >> 4)
  {
    std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)&__p);
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&__p, (uint64_t)"Node detected that are not connected to any single root node. Note: ", 68);
    v189 = v296;
    for (int j = v297; v189 != j; v189 += 16)
    {
      std::string::size_type size = v284.__r_.__value_.__l.__size_;
      if (v284.__r_.__value_.__l.__size_)
      {
        std::string::size_type v192 = *(void *)v189;
        long long v193 = (std::string *)&v284.__r_.__value_.__r.__words[1];
        do
        {
          v194 = (std::string *)size;
          v195 = v193;
          std::string::size_type v196 = *(void *)(size + 32);
          uint64_t v197 = (std::string::size_type *)(size + 8);
          if (v196 >= v192)
          {
            uint64_t v197 = (std::string::size_type *)v194;
            long long v193 = v194;
          }
          std::string::size_type size = *v197;
        }
        while (size);
        if (v193 != (std::string *)&v284.__r_.__value_.__r.__words[1])
        {
          if (v196 < v192) {
            v194 = v195;
          }
          if (v192 >= v194[1].__r_.__value_.__l.__size_) {
            continue;
          }
        }
      }
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&__p, (uint64_t)"(TreeID=", 8);
      unint64_t v198 = (void *)std::ostream::operator<<();
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v198, (uint64_t)", NodeID=", 9);
      v199 = (void *)std::ostream::operator<<();
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v199, (uint64_t)") ", 2);
    }
    std::stringbuf::str();
    CoreML::TreeEnsembles::constructAndValidateTreeEnsembleFromSpec(CoreML::Specification::Model const&)::$_0::operator()(v299, (uint64_t)&v290, 0);
    if (v292 < 0) {
      operator delete(v290);
    }
    __p.__r_.__value_.__r.__words[0] = *MEMORY[0x1E4FBA418];
    *(std::string::size_type *)((char *)__p.__r_.__value_.__r.__words
                              + *(void *)(__p.__r_.__value_.__r.__words[0] - 24)) = *(void *)(MEMORY[0x1E4FBA418]
                                                                                                + 24);
    __p.__r_.__value_.__l.__size_ = MEMORY[0x1E4FBA470] + 16;
    if (v308 < 0) {
      operator delete(v307);
    }
    std::streambuf::~streambuf();
    std::ostream::~ostream();
    MEMORY[0x19F3C1850](v309);
  }
  __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v287;
  std::vector<std::pair<std::shared_ptr<CoreML::TreeEnsembles::_TreeComputationNode>,unsigned long>>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
  std::__tree<std::__value_type<CoreML::TreeEnsembleBase::BranchMode,unsigned long>,std::__map_value_compare<CoreML::TreeEnsembleBase::BranchMode,std::__value_type<CoreML::TreeEnsembleBase::BranchMode,unsigned long>,std::less<CoreML::TreeEnsembleBase::BranchMode>,true>,std::allocator<std::__value_type<CoreML::TreeEnsembleBase::BranchMode,unsigned long>>>::destroy((void *)v284.__r_.__value_.__l.__size_);
  unint64_t v200 = v283;
  if (v124) {
    operator delete(v124);
  }
  v201 = (char *)operator new(0xA0uLL);
  *((void *)v201 + 1) = 0;
  *((void *)v201 + 2) = 0;
  *(void *)v201 = &unk_1EF0DD730;
  *(_OWORD *)(v201 + 4CoreML::Specification::Int64Parameter::New(this, 0) = 0u;
  *(_OWORD *)(v201 + 56) = 0u;
  *(_OWORD *)(v201 + 72) = 0u;
  *(_OWORD *)(v201 + 104) = 0u;
  *(_OWORD *)(v201 + 12CoreML::Specification::Int64Parameter::New(this, 0) = 0u;
  *(_OWORD *)(v201 + 136) = 0u;
  *(_OWORD *)(v201 + 88) = 0u;
  *(_OWORD *)(v201 + 24) = 0u;
  *((void *)v201 + 19) = 0;
  *(void *)v273 = v201 + 24;
  *((void *)v273 + 1) = v201;
  long long v202 = v293;
  v203 = v294;
  int64_t v204 = (char *)v294 - (char *)v293;
  if (v294 == v293)
  {
    v207 = std::__copy_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<std::shared_ptr<CoreML::TreeEnsembles::_TreeComputationNode> *,std::shared_ptr<CoreML::TreeEnsembles::_TreeComputationNode> *,std::shared_ptr<CoreML::TreeEnsembles::_TreeComputationNode> *>(v293, v294, 0);
    for (k = (void *)*((void *)v201 + 10); k != v207; k -= 2)
    {
      uint64_t v209 = (std::__shared_weak_count *)*(k - 1);
      if (v209) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v209);
      }
    }
    *((void *)v201 + 1CoreML::Specification::Int64Parameter::New(this, 0) = v207;
    unint64_t v200 = v283;
  }
  else
  {
    if (v204 < 0) {
      std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__throw_length_error[abi:ne180100]();
    }
    v205 = std::__allocate_at_least[abi:ne180100]<std::allocator<CoreML::NNCompiler::MLRangeShape::Range>>(v204 >> 4);
    *((void *)v201 + 9) = v205;
    *((void *)v201 + 1CoreML::Specification::Int64Parameter::New(this, 0) = v205;
    *((void *)v201 + 11) = &v205[2 * v206];
    *((void *)v201 + 1CoreML::Specification::Int64Parameter::New(this, 0) = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::shared_ptr<CoreML::TreeEnsembles::_TreeComputationNode>>,std::shared_ptr<CoreML::TreeEnsembles::_TreeComputationNode>*,std::shared_ptr<CoreML::TreeEnsembles::_TreeComputationNode>*,std::shared_ptr<CoreML::TreeEnsembles::_TreeComputationNode>*>((uint64_t)(v201 + 88), v202, v203, v205);
  }
  int64_t v210 = ((char *)v294 - (char *)v293) >> 4;
  *((void *)v201 + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = (v297 - v296) >> 4;
  *((void *)v201 + 4) = v210;
  *((void *)v201 + 5) = v200;
  uint64_t v211 = (void **)(v201 + 48);
  std::vector<double>::resize((char **)v201 + 6, v200);
  uint64_t v212 = *((int *)v274 + 10);
  if (v212)
  {
    v213 = v272;
    if (v200 == v212)
    {
      if ((int)v212 >= 1)
      {
        v214 = *v211;
        uint64_t v215 = *((unsigned int *)v274 + 10);
        uint64_t v216 = (uint64_t *)(v274[6] + 8);
        do
        {
          uint64_t v217 = *v216++;
          *v214++ = v217;
          --v215;
        }
        while (v215);
      }
    }
    else
    {
      std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)&__p);
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&__p, (uint64_t)"Dimension of default value array (", 34);
      v225 = (void *)std::ostream::operator<<();
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v225, (uint64_t)") does not match specified output dimension (", 45);
      v226 = (void *)std::ostream::operator<<();
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v226, (uint64_t)").", 2);
      std::stringbuf::str();
      CoreML::TreeEnsembles::constructAndValidateTreeEnsembleFromSpec(CoreML::Specification::Model const&)::$_0::operator()(v299, (uint64_t)&v284, 0);
      if (SHIBYTE(v284.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v284.__r_.__value_.__l.__data_);
      }
      __p.__r_.__value_.__r.__words[0] = *MEMORY[0x1E4FBA418];
      *(std::string::size_type *)((char *)__p.__r_.__value_.__r.__words
                                + *(void *)(__p.__r_.__value_.__r.__words[0] - 24)) = *(void *)(MEMORY[0x1E4FBA418]
                                                                                                  + 24);
      __p.__r_.__value_.__l.__size_ = MEMORY[0x1E4FBA470] + 16;
      if (v308 < 0) {
        operator delete(v307);
      }
      std::streambuf::~streambuf();
      std::ostream::~ostream();
      MEMORY[0x19F3C1850](v309);
    }
  }
  else
  {
    uint64_t v218 = *((void *)v201 + 8);
    size_t v219 = (unsigned char *)*((void *)v201 + 6);
    v213 = v272;
    if (v200 <= (v218 - (uint64_t)v219) >> 3)
    {
      v227 = (char *)*((void *)v201 + 7);
      unint64_t v228 = (v227 - v219) >> 3;
      if (v228 >= v200) {
        uint64_t v229 = v200;
      }
      else {
        uint64_t v229 = (v227 - v219) >> 3;
      }
      if (v229)
      {
        int v230 = (void *)*((void *)v201 + 6);
        do
        {
          *v230++ = 0;
          --v229;
        }
        while (v229);
      }
      if (v200 <= v228)
      {
        *((void *)v201 + 7) = &v219[8 * v200];
      }
      else
      {
        int v231 = &v227[8 * (v200 - v228)];
        uint64_t v232 = 8 * v200 - 8 * v228;
        do
        {
          *(void *)v227 = 0;
          v227 += 8;
          v232 -= 8;
        }
        while (v232);
        *((void *)v201 + 7) = v231;
      }
    }
    else
    {
      if (v219)
      {
        *((void *)v201 + 7) = v219;
        operator delete(v219);
        uint64_t v218 = 0;
        *uint64_t v211 = 0;
        *((void *)v201 + 7) = 0;
        *((void *)v201 + 8) = 0;
      }
      if (v200 >> 61) {
        std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__throw_length_error[abi:ne180100]();
      }
      uint64_t v220 = v218 >> 2;
      if (v218 >> 2 <= v200) {
        uint64_t v220 = v200;
      }
      if ((unint64_t)v218 >= 0x7FFFFFFFFFFFFFF8) {
        unint64_t v221 = 0x1FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v221 = v220;
      }
      std::vector<_KDInterval>::__vallocate[abi:ne180100]((void *)v201 + 6, v221);
      size_t v222 = (void *)*((void *)v201 + 7);
      v223 = &v222[v200];
      uint64_t v224 = 8 * v200;
      do
      {
        *v222++ = 0;
        v224 -= 8;
      }
      while (v224);
      *((void *)v201 + 7) = v223;
    }
  }
  int v233 = *((_DWORD *)v213 + 11);
  if (v233 == 402)
  {
    uint64_t v234 = *((void *)v213 + 4);
    CoreML::Specification::Int64Vector::Int64Vector((CoreML::Specification::Int64Vector *)&v287);
    std::string v235 = CoreML::Specification::StringVector::StringVector((CoreML::Specification::StringVector *)&v284);
    int v236 = *(_DWORD *)(v234 + 44);
    if (v236 == 100)
    {
      std::string v238 = *(const CoreML::Specification::MILSpec::TensorValue_RepeatedStrings **)(v234 + 32);
      if (v238 != (const CoreML::Specification::MILSpec::TensorValue_RepeatedStrings *)&v284)
      {
        uint64_t v239 = v285;
        if (v285 >= 1)
        {
          long long v240 = (uint64_t *)(v286 + 8);
          do
          {
            uint64_t v241 = *v240;
            if (*(char *)(*v240 + 23) < 0)
            {
              **(unsigned char **)uint64_t v241 = 0;
              *(void *)(v241 + 8) = 0;
            }
            else
            {
              *(unsigned char *)uint64_t v241 = 0;
              *(unsigned char *)(v241 + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
            }
            ++v240;
            --v239;
          }
          while (v239);
          int v285 = 0;
        }
        std::string v235 = (CoreML::Specification::protobuf_TreeEnsemble_2eproto *)CoreML::Specification::MILSpec::TensorValue_RepeatedStrings::MergeFrom(&v284, v238);
      }
    }
    else if (v236 == 101)
    {
      uint64_t v237 = *(const CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts **)(v234 + 32);
      if (v237 != (const CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts *)&v287)
      {
        LODWORD(v289[0]) = 0;
        std::string v235 = (CoreML::Specification::protobuf_TreeEnsemble_2eproto *)CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts::MergeFrom((unint64_t *)&v287, v237);
      }
    }
    if (*((_DWORD *)v213 + 11) == 402)
    {
      v242 = (uint64_t *)*((void *)v213 + 4);
    }
    else
    {
      CoreML::Specification::protobuf_TreeEnsemble_2eproto::InitDefaults(v235);
      v242 = &CoreML::Specification::_TreeEnsembleClassifier_default_instance_;
    }
    *((_DWORD *)v201 + 38) = *((_DWORD *)v242 + 6);
    int v243 = v289[0];
    int v244 = v285;
    if (SLODWORD(v289[0]) <= v285) {
      int v245 = v285;
    }
    else {
      int v245 = v289[0];
    }
    if (v245)
    {
      std::vector<std::string>::size_type v246 = v245;
      if (v283 == 1 && v245 == 2)
      {
        int v247 = 1;
      }
      else
      {
        if (v283 < 2 || v283 != v245)
        {
          std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)&__p);
          std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&__p, (uint64_t)"Specified output dimension (", 28);
          v259 = (void *)std::ostream::operator<<();
          std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v259, (uint64_t)") does not match the given number of classes (", 46);
          v260 = (void *)std::ostream::operator<<();
          std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v260, (uint64_t)").", 2);
          std::stringbuf::str();
          CoreML::TreeEnsembles::constructAndValidateTreeEnsembleFromSpec(CoreML::Specification::Model const&)::$_0::operator()(v299, (uint64_t)&v290, 0);
          if (v292 < 0) {
            operator delete(v290);
          }
          __p.__r_.__value_.__r.__words[0] = *MEMORY[0x1E4FBA418];
          *(std::string::size_type *)((char *)__p.__r_.__value_.__r.__words
                                    + *(void *)(__p.__r_.__value_.__r.__words[0] - 24)) = *(void *)(MEMORY[0x1E4FBA418] + 24);
          __p.__r_.__value_.__l.__size_ = MEMORY[0x1E4FBA470] + 16;
          if (v308 < 0) {
            operator delete(v307);
          }
          std::streambuf::~streambuf();
          std::ostream::~ostream();
          MEMORY[0x19F3C1850](v309);
          goto LABEL_458;
        }
        int v247 = 2;
      }
      *((_DWORD *)v201 + 24) = v247;
      if (v243 <= v244) {
        std::vector<std::string>::resize((std::vector<std::string> *)(v201 + 104), v246);
      }
      else {
        std::vector<long long>::resize((char **)v201 + 16, v246);
      }
      uint64_t v252 = 0;
      uint64_t v253 = 0;
      uint64_t v254 = 0;
      if (v246 <= 1) {
        std::vector<std::string>::size_type v246 = 1;
      }
      do
      {
        uint64_t v255 = v252 >> 32;
        if (v243 <= v244) {
          std::string::operator=((std::string *)(*((void *)v201 + 13) + v253), *(const std::string **)(v286 + 8 * v255 + 8));
        }
        else {
          *(void *)(*((void *)v201 + 16) + 8 * v254) = *(void *)(v289[1] + 8 * v255 + 8);
        }
        ++v254;
        v253 += 24;
        v252 += 0x100000000;
      }
      while (v246 != v254);
LABEL_458:
      v284.__r_.__value_.__r.__words[0] = (std::string::size_type)&unk_1EF0CF900;
      google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(&v284.__r_.__value_.__r.__words[2]);
      google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)&v284.__r_.__value_.__l.__size_);
      CoreML::Specification::Int64Vector::~Int64Vector((CoreML::Specification::Int64Vector *)&v287);
      goto LABEL_459;
    }
    std::vector<std::string>::__clear[abi:ne180100]((uint64_t *)v201 + 13);
    if (v283 != 1)
    {
      std::vector<long long>::resize((char **)v201 + 16, v283);
      if (v283)
      {
        uint64_t v256 = 0;
        uint64_t v257 = *((void *)v201 + 16);
        do
        {
          *(void *)(v257 + 8 * v256) = v256;
          ++v256;
        }
        while (v283 != v256);
      }
      int v258 = 2;
      goto LABEL_457;
    }
    *(_OWORD *)&__p.__r_.__value_.__l.__data_ = xmmword_19EC35D70;
    v248 = (char *)*((void *)v201 + 16);
    uint64_t v249 = *((void *)v201 + 18);
    if ((unint64_t)(v249 - (void)v248) >= 0x10)
    {
      v261 = (char *)*((void *)v201 + 17);
      int64_t v262 = v261 - v248;
      if ((unint64_t)(v261 - v248) <= 0xF)
      {
        v263 = (char *)&__p + v262;
        if (v261 != v248)
        {
          memcpy(*((void **)v201 + 16), &__p, v261 - v248);
          v248 = (char *)*((void *)v201 + 17);
        }
        int64_t v264 = 16 - v262;
        memcpy(v248, v263, v264);
        uint64_t v265 = v264 >> 3;
        goto LABEL_456;
      }
    }
    else
    {
      if (v248)
      {
        *((void *)v201 + 17) = v248;
        operator delete(v248);
        uint64_t v249 = 0;
        *((void *)v201 + 16) = 0;
        *((void *)v201 + 17) = 0;
        *((void *)v201 + 18) = 0;
      }
      uint64_t v250 = v249 >> 2;
      if ((unint64_t)(v249 >> 2) <= 2) {
        uint64_t v250 = 2;
      }
      if ((unint64_t)v249 >= 0x7FFFFFFFFFFFFFF8) {
        unint64_t v251 = 0x1FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v251 = v250;
      }
      std::vector<_KDInterval>::__vallocate[abi:ne180100]((void *)v201 + 16, v251);
      v248 = (char *)*((void *)v201 + 17);
    }
    *(_OWORD *)v248 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    uint64_t v265 = 2;
LABEL_456:
    *((void *)v201 + 17) = &v248[8 * v265];
    int v258 = 1;
LABEL_457:
    *((_DWORD *)v201 + 24) = v258;
    goto LABEL_458;
  }
  if (v233 == 302)
  {
    *((_DWORD *)v201 + 24) = 0;
    *((_DWORD *)v201 + 38) = *(_DWORD *)(*((void *)v213 + 4) + 24);
  }
LABEL_459:
  if (v303)
  {
    v268 = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::stringbuf::str();
    v269 = std::string::insert(&v284, 0, "Error(s) in tree structure: \n");
    long long v270 = *(_OWORD *)&v269->__r_.__value_.__l.__data_;
    __p.__r_.__value_.__r.__words[2] = v269->__r_.__value_.__r.__words[2];
    *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v270;
    v269->__r_.__value_.__l.__size_ = 0;
    v269->__r_.__value_.__r.__words[2] = 0;
    v269->__r_.__value_.__r.__words[0] = 0;
    std::logic_error::logic_error(v268, &__p);
    __cxa_throw(v268, MEMORY[0x1E4FBA328], MEMORY[0x1E4FBA1B0]);
  }
  __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v293;
  std::vector<std::shared_ptr<MIL::IRNamedValueType>>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
  __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v296;
  std::vector<std::shared_ptr<MIL::IRNamedValueType>>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
  v300[0] = *MEMORY[0x1E4FBA418];
  *(void *)((char *)v300 + *(void *)(v300[0] - 24)) = *(void *)(MEMORY[0x1E4FBA418] + 24);
  v300[1] = MEMORY[0x1E4FBA470] + 16;
  if (v301 < 0) {
    operator delete((void *)v300[9]);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return MEMORY[0x19F3C1850](&v302);
}

void sub_19EB62EB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,void *__p,uint64_t a35,uint64_t a36,char a37,uint64_t a38,uint64_t a39,char a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,char a45)
{
  CoreML::Specification::StringVector::~StringVector((CoreML::Specification::StringVector *)&a23);
  CoreML::Specification::Int64Vector::~Int64Vector((CoreML::Specification::Int64Vector *)&a29);
  std::__shared_weak_count::__release_shared[abi:ne180100](v45);
  a23 = &a37;
  std::vector<std::shared_ptr<MIL::IRNamedValueType>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a23);
  a23 = &a40;
  std::vector<std::shared_ptr<MIL::IRNamedValueType>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a23);
  std::ostringstream::~ostringstream((uint64_t)&a45);
  _Unwind_Resume(a1);
}

void *CoreML::TreeEnsembles::constructAndValidateTreeEnsembleFromSpec(CoreML::Specification::Model const&)::$_0::operator()(void **a1, uint64_t a2, int a3)
{
  ++**a1;
  unint64_t v6 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(a1[1], (uint64_t)"\n  ", 3);
  if (a3) {
    uint64_t v7 = "FATAL: ";
  }
  else {
    uint64_t v7 = (const char *)&unk_19EC86ACE;
  }
  if (a3) {
    uint64_t v8 = 7;
  }
  else {
    uint64_t v8 = 0;
  }
  uint64_t v9 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v6, (uint64_t)v7, v8);
  int v10 = *(char *)(a2 + 23);
  if (v10 >= 0) {
    uint64_t v11 = a2;
  }
  else {
    uint64_t v11 = *(void *)a2;
  }
  if (v10 >= 0) {
    uint64_t v12 = *(unsigned __int8 *)(a2 + 23);
  }
  else {
    uint64_t v12 = *(void *)(a2 + 8);
  }
  BOOL v13 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v9, v11, v12);
  BOOL result = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v13, (uint64_t)";", 1);
  if (**a1 >= 0x32uLL)
  {
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(a1[1], (uint64_t)"\n  FATAL: maximum number of errors reached; aborting processing.",
      64);
LABEL_17:
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::stringbuf::str();
    unint64_t v16 = std::string::insert(&v18, 0, "Errors encountered during processing tree model:\n");
    long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
    v19.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v19.__r_.__value_.__l.__data_ = v17;
    v16->__r_.__value_.__l.__size_ = 0;
    v16->__r_.__value_.__r.__words[2] = 0;
    v16->__r_.__value_.__r.__words[0] = 0;
    std::logic_error::logic_error(exception, &v19);
    __cxa_throw(exception, MEMORY[0x1E4FBA328], MEMORY[0x1E4FBA1B0]);
  }
  if (a3) {
    goto LABEL_17;
  }
  return result;
}

void sub_19EB633F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0)
  {
    operator delete(a10);
    if ((v22 & 1) == 0) {
LABEL_8:
    }
      _Unwind_Resume(a1);
  }
  else if (!v22)
  {
    goto LABEL_8;
  }
  __cxa_free_exception(v21);
  goto LABEL_8;
}

void std::__introsort<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<unsigned long,double> *,false>(unint64_t *a1, unint64_t a2, uint64_t a3, char a4)
{
void *CoreML::TreeEnsembles::constructAndValidateTreeEnsembleFromSpec(CoreML::Specification::Model const&)::$_2::operator()(void *result, void *a2, unint64_t a3, unint64_t a4)
{
  BOOL v5 = result;
  unint64_t v6 = *(void **)(*a2 + 8);
  if (!v6) {
    goto LABEL_13;
  }
  uint64_t v7 = (void *)(*a2 + 8);
  do
  {
    unint64_t v8 = v6[4];
    if (v8 >= a3)
    {
      if (a3 >= v8)
      {
        if (v6[5] < a4) {
          ++v6;
        }
        else {
          uint64_t v7 = v6;
        }
      }
      else
      {
        uint64_t v7 = v6;
      }
    }
    else
    {
      ++v6;
    }
    unint64_t v6 = (void *)*v6;
  }
  while (v6);
  if (v7 == (void *)(*a2 + 8) || (unint64_t v9 = v7[4], a3 < v9) || v9 >= a3 && a4 < v7[5])
  {
LABEL_13:
    std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v16);
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v16, (uint64_t)"Tree Node with TreeID=", 22);
    int v10 = (void *)std::ostream::operator<<();
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v10, (uint64_t)" and NodeID=", 12);
    uint64_t v11 = (void *)std::ostream::operator<<();
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v11, (uint64_t)" referenced but not declared in specification.", 46);
    uint64_t v12 = (void **)a2[1];
    std::stringbuf::str();
    CoreML::TreeEnsembles::constructAndValidateTreeEnsembleFromSpec(CoreML::Specification::Model const&)::$_0::operator()(v12, (uint64_t)&__p, 0);
    if (v15 < 0) {
      operator delete(__p);
    }
    *BOOL v5 = 0;
    v5[1] = 0;
    v16[0] = *MEMORY[0x1E4FBA418];
    *(void *)((char *)v16 + *(void *)(v16[0] - 24)) = *(void *)(MEMORY[0x1E4FBA418] + 24);
    v16[1] = MEMORY[0x1E4FBA470] + 16;
    if (v17 < 0) {
      operator delete((void *)v16[9]);
    }
    std::streambuf::~streambuf();
    std::ostream::~ostream();
    return (void *)MEMORY[0x19F3C1850](&v18);
  }
  else
  {
    *BOOL result = v7[6];
    uint64_t v13 = v7[7];
    result[1] = v13;
    if (v13) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v13 + 8), 1uLL, memory_order_relaxed);
    }
  }
  return result;
}

void sub_19EB64094(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  std::ostringstream::~ostringstream((uint64_t)&a15);
  _Unwind_Resume(a1);
}

void std::__tree<std::__value_type<std::pair<unsigned long,unsigned long>,std::shared_ptr<CoreML::TreeEnsembles::_TreeComputationNode>>,std::__map_value_compare<std::pair<unsigned long,unsigned long>,std::__value_type<std::pair<unsigned long,unsigned long>,std::shared_ptr<CoreML::TreeEnsembles::_TreeComputationNode>>,std::less<std::pair<unsigned long,unsigned long>>,true>,std::allocator<std::__value_type<std::pair<unsigned long,unsigned long>,std::shared_ptr<CoreML::TreeEnsembles::_TreeComputationNode>>>>::destroy(void *a1)
{
  if (a1)
  {
    std::__tree<std::__value_type<std::pair<unsigned long,unsigned long>,std::shared_ptr<CoreML::TreeEnsembles::_TreeComputationNode>>,std::__map_value_compare<std::pair<unsigned long,unsigned long>,std::__value_type<std::pair<unsigned long,unsigned long>,std::shared_ptr<CoreML::TreeEnsembles::_TreeComputationNode>>,std::less<std::pair<unsigned long,unsigned long>>,true>,std::allocator<std::__value_type<std::pair<unsigned long,unsigned long>,std::shared_ptr<CoreML::TreeEnsembles::_TreeComputationNode>>>>::destroy(*a1);
    std::__tree<std::__value_type<std::pair<unsigned long,unsigned long>,std::shared_ptr<CoreML::TreeEnsembles::_TreeComputationNode>>,std::__map_value_compare<std::pair<unsigned long,unsigned long>,std::__value_type<std::pair<unsigned long,unsigned long>,std::shared_ptr<CoreML::TreeEnsembles::_TreeComputationNode>>,std::less<std::pair<unsigned long,unsigned long>>,true>,std::allocator<std::__value_type<std::pair<unsigned long,unsigned long>,std::shared_ptr<CoreML::TreeEnsembles::_TreeComputationNode>>>>::destroy(a1[1]);
    uint64_t v2 = (std::__shared_weak_count *)a1[7];
    if (v2) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v2);
    }
    operator delete(a1);
  }
}

unint64_t std::__introsort<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<unsigned long,unsigned long> *,false>(unint64_t result, unint64_t *a2, uint64_t a3, char a4)
{
  unint64_t v9 = (unint64_t *)result;
LABEL_2:
  int v10 = a2 - 2;
  unint64_t k = v9;
  while (1)
  {
    unint64_t v9 = k;
    uint64_t v12 = (char *)a2 - (char *)k;
    unint64_t v13 = ((char *)a2 - (char *)k) >> 4;
    if (v5 || !v4)
    {
      switch(v13)
      {
        case 0uLL:
        case 1uLL:
          return result;
        case 2uLL:
          unint64_t v45 = *v10;
          unint64_t v46 = *k;
          if (*v10 < *k || v46 >= v45 && *(a2 - 1) < k[1])
          {
            unint64_t *k = v45;
            *(a2 - 2) = v46;
            unint64_t v47 = k[1];
            k[1] = *(a2 - 1);
            *(a2 - 1) = v47;
          }
          break;
        case 3uLL:
          BOOL result = (unint64_t)std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<unsigned long,unsigned long> *>(k, k + 2, a2 - 2);
          break;
        case 4uLL:
          BOOL result = (unint64_t)std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<unsigned long,unsigned long> *>(k, k + 2, k + 4, a2 - 2);
          break;
        case 5uLL:
          BOOL result = (unint64_t)std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<unsigned long,unsigned long> *>(k, k + 2, k + 4, k + 6, a2 - 2);
          break;
        default:
          JUMPOUT(0);
      }
      return result;
    }
    if (v12 <= 383)
    {
      unint64_t v48 = k + 2;
      BOOL v50 = k == a2 || v48 == a2;
      if (a4)
      {
        if (v50) {
          return result;
        }
        uint64_t v51 = 0;
        long long v52 = k;
        while (2)
        {
          BOOL v53 = v52;
          long long v52 = v48;
          unint64_t v54 = v53[2];
          unint64_t v55 = *v53;
          if (v54 < *v53)
          {
            unint64_t v56 = v53[3];
            goto LABEL_112;
          }
          if (v55 >= v54)
          {
            unint64_t v56 = v53[3];
            if (v56 < v53[1])
            {
LABEL_112:
              v53[2] = v55;
              v52[1] = v53[1];
              unint64_t v57 = k;
              if (v53 != k)
              {
                uint64_t v58 = v51;
                do
                {
                  unint64_t v59 = *(unint64_t *)((char *)k + v58 - 16);
                  if (v54 >= v59)
                  {
                    if (v59 < v54)
                    {
                      unint64_t v57 = v53;
                      goto LABEL_121;
                    }
                    unint64_t v57 = (unint64_t *)((char *)k + v58);
                    unint64_t v60 = *(unint64_t *)((char *)k + v58 - 8);
                    if (v56 >= v60) {
                      goto LABEL_121;
                    }
                  }
                  else
                  {
                    unint64_t v60 = *(unint64_t *)((char *)k + v58 - 8);
                  }
                  v53 -= 2;
                  unint64_t v61 = (unint64_t *)((char *)k + v58);
                  *unint64_t v61 = v59;
                  v61[1] = v60;
                  v58 -= 16;
                }
                while (v58);
                unint64_t v57 = k;
              }
LABEL_121:
              *unint64_t v57 = v54;
              v57[1] = v56;
            }
          }
          unint64_t v48 = v52 + 2;
          v51 += 16;
          if (v52 + 2 == a2) {
            return result;
          }
          continue;
        }
      }
      if (v50) {
        return result;
      }
      while (2)
      {
        unint64_t v77 = v9;
        unint64_t v9 = v48;
        unint64_t v78 = v77[2];
        unint64_t v79 = *v77;
        if (v78 >= *v77)
        {
          if (v79 >= v78)
          {
            unint64_t v80 = v77[3];
            if (v80 < v77[1]) {
              goto LABEL_159;
            }
          }
        }
        else
        {
          unint64_t v80 = v77[3];
          do
          {
            do
            {
LABEL_159:
              unint64_t v81 = v77;
              unint64_t v82 = v79;
              unint64_t v83 = *(v77 - 2);
              v77 -= 2;
              unint64_t v79 = v83;
              unint64_t v84 = v77[3];
              v77[4] = v82;
              v77[5] = v84;
            }
            while (v78 < v83);
          }
          while (v79 >= v78 && v80 < *(v81 - 1));
          unint64_t *v81 = v78;
          v81[1] = v80;
        }
        unint64_t v48 = v9 + 2;
        if (v9 + 2 == a2) {
          return result;
        }
        continue;
      }
    }
    if (!a3) {
      break;
    }
    unint64_t v14 = v13 >> 1;
    char v15 = &k[2 * (v13 >> 1)];
    if ((unint64_t)v12 >= 0x801)
    {
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<unsigned long,unsigned long> *>(v9, &v9[2 * (v13 >> 1)], a2 - 2);
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<unsigned long,unsigned long> *>(v9 + 2, v15 - 2, a2 - 4);
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<unsigned long,unsigned long> *>(v9 + 4, &v9[2 * v14 + 2], a2 - 6);
      BOOL result = (unint64_t)std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<unsigned long,unsigned long> *>(v15 - 2, v15, &v9[2 * v14 + 2]);
      long long v16 = *(_OWORD *)v9;
      *(_OWORD *)unint64_t v9 = *(_OWORD *)v15;
      *(_OWORD *)char v15 = v16;
    }
    else
    {
      BOOL result = (unint64_t)std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<unsigned long,unsigned long> *>(&v9[2 * (v13 >> 1)], v9, a2 - 2);
    }
    --a3;
    unint64_t v17 = *v9;
    if ((a4 & 1) != 0 || (unint64_t v18 = *(v9 - 2), v18 < v17))
    {
LABEL_14:
      unint64_t v20 = v9[1];
      for (int i = v9 + 2; ; i += 2)
      {
        unint64_t v22 = *i;
        if (*i >= v17 && (v17 < v22 || i[1] >= v20)) {
          break;
        }
      }
      if (i - 2 == v9)
      {
        unint64_t j = a2;
        if (i < a2)
        {
          unint64_t v26 = *v10;
          unint64_t j = a2 - 2;
          if (*v10 >= v17)
          {
            unint64_t j = a2 - 2;
            do
            {
              if (v17 >= v26)
              {
                if (j[1] < v20 || i >= j) {
                  break;
                }
              }
              else if (i >= j)
              {
                break;
              }
              unint64_t v28 = *(j - 2);
              j -= 2;
              unint64_t v26 = v28;
            }
            while (v28 >= v17);
          }
        }
      }
      else
      {
        unint64_t v23 = *v10;
        for (unint64_t j = a2 - 2; v23 >= v17 && (v17 < v23 || j[1] >= v20); j -= 2)
        {
          unint64_t v25 = *(j - 2);
          unint64_t v23 = v25;
        }
      }
      unint64_t k = i;
      if (i < j)
      {
        unint64_t v29 = *j;
        unint64_t k = i;
        unint64_t v30 = j;
        do
        {
          unint64_t *k = v29;
          *unint64_t v30 = v22;
          unint64_t v31 = k[1];
          k[1] = v30[1];
          v30[1] = v31;
          do
          {
            do
            {
              unint64_t v32 = k[2];
              k += 2;
              unint64_t v22 = v32;
            }
            while (v32 < v17);
          }
          while (v17 >= v22 && k[1] < v20);
          do
          {
            unint64_t v33 = *(v30 - 2);
            v30 -= 2;
            unint64_t v29 = v33;
          }
          while (v33 >= v17 && (v17 < v29 || v30[1] >= v20));
        }
        while (k < v30);
      }
      if (k - 2 != v9)
      {
        *unint64_t v9 = *(k - 2);
        v9[1] = *(k - 1);
      }
      *(k - 2) = v17;
      *(k - 1) = v20;
      if (i < j) {
        goto LABEL_51;
      }
      BOOL v34 = std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<unsigned long,unsigned long> *>(v9, k - 2);
      BOOL result = std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<unsigned long,unsigned long> *>(k, a2);
      if (result)
      {
        a2 = k - 2;
        if (v34) {
          return result;
        }
        goto LABEL_2;
      }
      if (!v34)
      {
LABEL_51:
        BOOL result = std::__introsort<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<unsigned long,unsigned long> *,false>(v9, k - 2, a3, a4 & 1);
        a4 = 0;
      }
    }
    else
    {
      if (v17 < v18)
      {
        unint64_t v19 = v9[1];
      }
      else
      {
        unint64_t v19 = v9[1];
        if (*(v9 - 1) < v19) {
          goto LABEL_14;
        }
      }
      unint64_t v35 = *v10;
      if (v17 >= *v10 && (v35 < v17 || v19 >= *(a2 - 1)))
      {
        for (unint64_t k = v9 + 2; k < a2 && v17 >= *k && (*k < v17 || v19 >= k[1]); k += 2)
          ;
      }
      else
      {
        unint64_t k = v9;
        do
        {
          unint64_t v37 = k[2];
          k += 2;
          unint64_t v36 = v37;
        }
        while (v17 >= v37 && (v36 < v17 || v19 >= k[1]));
      }
      unint64_t m = a2;
      if (k < a2)
      {
        for (unint64_t m = a2 - 2; v17 < v35 || v35 >= v17 && v19 < m[1]; m -= 2)
        {
          unint64_t v39 = *(m - 2);
          unint64_t v35 = v39;
        }
      }
      if (k < m)
      {
        unint64_t v40 = *k;
        unint64_t v41 = *m;
        do
        {
          unint64_t *k = v41;
          *unint64_t m = v40;
          unint64_t v42 = k[1];
          k[1] = m[1];
          m[1] = v42;
          do
          {
            unint64_t v43 = k[2];
            k += 2;
            unint64_t v40 = v43;
          }
          while (v17 >= v43 && (v40 < v17 || v19 >= k[1]));
          do
          {
            do
            {
              unint64_t v44 = *(m - 2);
              m -= 2;
              unint64_t v41 = v44;
            }
            while (v17 < v44);
          }
          while (v41 >= v17 && v19 < m[1]);
        }
        while (k < m);
      }
      BOOL v4 = k - 2 >= v9;
      BOOL v5 = k - 2 == v9;
      if (k - 2 != v9)
      {
        *unint64_t v9 = *(k - 2);
        v9[1] = *(k - 1);
      }
      a4 = 0;
      *(k - 2) = v17;
      *(k - 1) = v19;
    }
  }
  if (k != a2)
  {
    int64_t v62 = (v13 - 2) >> 1;
    int64_t v63 = v62;
    while (2)
    {
      int64_t v64 = v63;
      if (v62 >= v63)
      {
        uint64_t v65 = (2 * v63) | 1;
        int64_t v66 = &k[2 * v65];
        if (2 * v64 + 2 < (uint64_t)v13)
        {
          unint64_t v67 = v66[2];
          if (*v66 < v67 || v67 >= *v66 && k[2 * v65 + 1] < v66[3])
          {
            v66 += 2;
            uint64_t v65 = 2 * v64 + 2;
          }
        }
        int64_t v68 = &k[2 * v64];
        unint64_t v69 = *v66;
        unint64_t v70 = *v68;
        if (*v66 >= *v68)
        {
          if (v70 < v69)
          {
            unint64_t v71 = v68[1];
            goto LABEL_136;
          }
          unint64_t v71 = k[2 * v64 + 1];
          if (v66[1] >= v71)
          {
LABEL_136:
            unint64_t *v68 = v69;
            v68[1] = v66[1];
            if (v62 >= v65)
            {
              while (1)
              {
                uint64_t v73 = 2 * v65;
                uint64_t v65 = (2 * v65) | 1;
                unint64_t v72 = &k[2 * v65];
                uint64_t v74 = v73 + 2;
                if (v74 < (uint64_t)v13)
                {
                  unint64_t v75 = v72[2];
                  if (*v72 < v75 || v75 >= *v72 && k[2 * v65 + 1] < v72[3])
                  {
                    v72 += 2;
                    uint64_t v65 = v74;
                  }
                }
                unint64_t v76 = *v72;
                if (*v72 < v70 || v70 >= v76 && v72[1] < v71) {
                  break;
                }
                unint64_t *v66 = v76;
                v66[1] = v72[1];
                int64_t v66 = v72;
                if (v62 < v65) {
                  goto LABEL_138;
                }
              }
            }
            unint64_t v72 = v66;
LABEL_138:
            *unint64_t v72 = v70;
            v72[1] = v71;
          }
        }
      }
      int64_t v63 = v64 - 1;
      if (v64) {
        continue;
      }
      break;
    }
    uint64_t v85 = (unint64_t)v12 >> 4;
    while (2)
    {
      int64_t v86 = 0;
      unint64_t v87 = *k;
      unint64_t v88 = k[1];
      uint64_t v89 = v85 - 2;
      if (v85 < 2) {
        uint64_t v89 = v85 - 1;
      }
      uint64_t v90 = v89 >> 1;
      uint64_t v91 = k;
      do
      {
        uint64_t v92 = v91;
        int64_t v93 = v86 + 1;
        v91 += 2 * v86 + 2;
        uint64_t v94 = 2 * v86;
        BOOL result = (2 * v86) | 1;
        int64_t v86 = result;
        uint64_t v95 = v94 + 2;
        if (v95 < v85)
        {
          BOOL result = (unint64_t)(v91 + 2);
          unint64_t v96 = v91[2];
          if (*v91 < v96 || v96 >= *v91 && v92[2 * v93 + 1] < v91[3])
          {
            v91 += 2;
            int64_t v86 = v95;
          }
        }
        unint64_t *v92 = *v91;
        v92[1] = v91[1];
      }
      while (v86 <= v90);
      if (v91 == a2 - 2)
      {
        unint64_t *v91 = v87;
        v91[1] = v88;
      }
      else
      {
        unint64_t *v91 = *(a2 - 2);
        v91[1] = *(a2 - 1);
        *(a2 - 2) = v87;
        *(a2 - 1) = v88;
        uint64_t v97 = (char *)v91 - (char *)k + 16;
        if (v97 >= 17)
        {
          unint64_t v98 = (v97 >> 4) - 2;
          unint64_t v99 = v98 >> 1;
          uint64_t v100 = &k[2 * (v98 >> 1)];
          unint64_t v101 = *v100;
          unint64_t v102 = *v91;
          if (*v100 < *v91)
          {
            unint64_t v103 = v91[1];
            goto LABEL_178;
          }
          if (v102 >= v101)
          {
            BOOL result = k[2 * v99 + 1];
            unint64_t v103 = v91[1];
            if (result < v103)
            {
LABEL_178:
              unint64_t *v91 = v101;
              v91[1] = k[2 * v99 + 1];
              if (v98 >= 2)
              {
                while (1)
                {
                  unint64_t v105 = v99 - 1;
                  unint64_t v99 = (v99 - 1) >> 1;
                  unint64_t v104 = &k[2 * v99];
                  unint64_t v106 = *v104;
                  if (*v104 >= v102)
                  {
                    if (v102 < v106) {
                      break;
                    }
                    BOOL result = k[2 * v99 + 1];
                    if (result >= v103) {
                      break;
                    }
                  }
                  else
                  {
                    BOOL result = v104[1];
                  }
                  unint64_t *v100 = v106;
                  v100[1] = result;
                  uint64_t v100 = &k[2 * v99];
                  if (v105 <= 1) {
                    goto LABEL_185;
                  }
                }
              }
              unint64_t v104 = v100;
LABEL_185:
              unint64_t *v104 = v102;
              v104[1] = v103;
            }
          }
        }
      }
      a2 -= 2;
      if (v85-- <= 2) {
        return result;
      }
      continue;
    }
  }
  return result;
}

void std::vector<std::pair<std::shared_ptr<CoreML::TreeEnsembles::_TreeComputationNode>,unsigned long>>::push_back[abi:ne180100](char **a1, uint64_t a2)
{
  unint64_t v4 = (unint64_t)a1[1];
  unint64_t v5 = (unint64_t)a1[2];
  if (v4 >= v5)
  {
    unint64_t v7 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v4 - (void)*a1) >> 3);
    unint64_t v8 = v7 + 1;
    if (v7 + 1 > 0xAAAAAAAAAAAAAAALL) {
      std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__throw_length_error[abi:ne180100]();
    }
    unint64_t v9 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v5 - (void)*a1) >> 3);
    if (2 * v9 > v8) {
      unint64_t v8 = 2 * v9;
    }
    if (v9 >= 0x555555555555555) {
      unint64_t v10 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v10 = v8;
    }
    uint64_t v11 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<long long>>>(v10);
    uint64_t v12 = &v11[24 * v7];
    unint64_t v14 = &v11[24 * v13];
    *(_OWORD *)uint64_t v12 = *(_OWORD *)a2;
    *(void *)a2 = 0;
    *(void *)(a2 + 8) = 0;
    *((void *)v12 + 2) = *(void *)(a2 + 16);
    unint64_t v6 = v12 + 24;
    char v15 = *a1;
    long long v16 = a1[1];
    if (v16 == *a1)
    {
      *a1 = v12;
      a1[1] = v6;
      a1[2] = v14;
    }
    else
    {
      do
      {
        long long v17 = *(_OWORD *)(v16 - 24);
        v16 -= 24;
        *(_OWORD *)(v12 - 24) = v17;
        v12 -= 24;
        *(void *)long long v16 = 0;
        *((void *)v16 + 1) = 0;
        *((void *)v12 + 2) = *((void *)v16 + 2);
      }
      while (v16 != v15);
      long long v16 = *a1;
      unint64_t v18 = a1[1];
      *a1 = v12;
      a1[1] = v6;
      a1[2] = v14;
      while (v18 != v16)
      {
        unint64_t v19 = (std::__shared_weak_count *)*((void *)v18 - 2);
        if (v19) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v19);
        }
        v18 -= 24;
      }
    }
    if (v16) {
      operator delete(v16);
    }
  }
  else
  {
    *(_OWORD *)unint64_t v4 = *(_OWORD *)a2;
    *(void *)a2 = 0;
    *(void *)(a2 + 8) = 0;
    *(void *)(v4 + 16) = *(void *)(a2 + 16);
    unint64_t v6 = (char *)(v4 + 24);
  }
  a1[1] = v6;
}

void std::vector<std::pair<std::shared_ptr<CoreML::TreeEnsembles::_TreeComputationNode>,unsigned long>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v2 = *a1;
  if (*v2)
  {
    std::vector<std::pair<std::shared_ptr<CoreML::TreeEnsembles::_TreeComputationNode>,unsigned long>>::__clear[abi:ne180100]((uint64_t *)v2);
    uint64_t v3 = **a1;
    operator delete(v3);
  }
}

void *std::__copy_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<std::shared_ptr<CoreML::TreeEnsembles::_TreeComputationNode> *,std::shared_ptr<CoreML::TreeEnsembles::_TreeComputationNode> *,std::shared_ptr<CoreML::TreeEnsembles::_TreeComputationNode> *>(uint64_t *a1, uint64_t *a2, void *a3)
{
  if (a1 != a2)
  {
    unint64_t v5 = a1;
    do
    {
      uint64_t v7 = *v5;
      uint64_t v6 = v5[1];
      if (v6) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v6 + 8), 1uLL, memory_order_relaxed);
      }
      unint64_t v8 = (std::__shared_weak_count *)a3[1];
      *a3 = v7;
      a3[1] = v6;
      if (v8) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v8);
      }
      a3 += 2;
      v5 += 2;
    }
    while (v5 != a2);
  }
  return a3;
}

void *std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::shared_ptr<CoreML::TreeEnsembles::_TreeComputationNode>>,std::shared_ptr<CoreML::TreeEnsembles::_TreeComputationNode>*,std::shared_ptr<CoreML::TreeEnsembles::_TreeComputationNode>*,std::shared_ptr<CoreML::TreeEnsembles::_TreeComputationNode>*>(uint64_t a1, void *a2, void *a3, void *a4)
{
  for (BOOL result = a4; a2 != a3; a2 += 2)
  {
    uint64_t v5 = a2[1];
    *BOOL result = *a2;
    result[1] = v5;
    if (v5) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v5 + 8), 1uLL, memory_order_relaxed);
    }
    result += 2;
  }
  return result;
}

void std::__shared_ptr_emplace<CoreML::TreeEnsembles::_TreeEnsemble>::__on_zero_shared(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 128);
  if (v2)
  {
    *(void *)(a1 + 136) = v2;
    operator delete(v2);
  }
  unint64_t v4 = (void **)(a1 + 104);
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v4);
  unint64_t v4 = (void **)(a1 + 72);
  std::vector<std::shared_ptr<MIL::IRNamedValueType>>::__destroy_vector::operator()[abi:ne180100](&v4);
  uint64_t v3 = *(void **)(a1 + 48);
  if (v3)
  {
    *(void *)(a1 + 56) = v3;
    operator delete(v3);
  }
}

void std::__shared_ptr_emplace<CoreML::TreeEnsembles::_TreeEnsemble>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1EF0DD730;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x19F3C1920);
}

void std::__shared_ptr_emplace<CoreML::TreeEnsembles::_TreeEnsemble>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1EF0DD730;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::vector<std::pair<std::shared_ptr<CoreML::TreeEnsembles::_TreeComputationNode>,unsigned long>>::__clear[abi:ne180100](uint64_t *a1)
{
  uint64_t v2 = *a1;
  for (uint64_t i = a1[1]; i != v2; i -= 24)
  {
    unint64_t v4 = *(std::__shared_weak_count **)(i - 16);
    if (v4) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v4);
    }
  }
  a1[1] = v2;
}

void *std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::pair<std::shared_ptr<CoreML::TreeEnsembles::_TreeComputationNode>,unsigned long>>,std::pair<std::shared_ptr<CoreML::TreeEnsembles::_TreeComputationNode>,unsigned long> const*,std::pair<std::shared_ptr<CoreML::TreeEnsembles::_TreeComputationNode>,unsigned long> const*,std::pair<std::shared_ptr<CoreML::TreeEnsembles::_TreeComputationNode>,unsigned long>*>(uint64_t a1, void *a2, void *a3, void *a4)
{
  for (BOOL result = a4; a2 != a3; a2 += 3)
  {
    uint64_t v5 = a2[1];
    *BOOL result = *a2;
    result[1] = v5;
    if (v5) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v5 + 8), 1uLL, memory_order_relaxed);
    }
    result[2] = a2[2];
    result += 3;
  }
  return result;
}

unint64_t *std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<unsigned long,unsigned long> *>(unint64_t *result, unint64_t *a2, unint64_t *a3)
{
  unint64_t v3 = *a2;
  unint64_t v4 = *result;
  if (*a2 >= *result && (v4 < v3 || a2[1] >= result[1]))
  {
    unint64_t v7 = *a3;
    if (*a3 < v3 || v3 >= v7 && a3[1] < a2[1])
    {
      *a2 = v7;
      *a3 = v3;
      unint64_t v8 = a2 + 1;
      unint64_t v9 = a2[1];
      a2[1] = a3[1];
      a3[1] = v9;
      unint64_t v10 = *a2;
      unint64_t v11 = *result;
      if (*a2 < *result || v11 >= v10 && *v8 < result[1])
      {
        *result++ = v10;
        *a2 = v11;
LABEL_18:
        unint64_t v15 = *result;
        *BOOL result = *v8;
        *unint64_t v8 = v15;
      }
    }
  }
  else
  {
    unint64_t v5 = *a3;
    if (*a3 < v3 || v3 >= v5 && a3[1] < a2[1])
    {
      *result++ = v5;
      *a3 = v4;
      uint64_t v6 = a3 + 1;
LABEL_17:
      unint64_t v8 = v6;
      goto LABEL_18;
    }
    *BOOL result = v3;
    *a2 = v4;
    unint64_t v12 = result[1];
    result[1] = a2[1];
    a2[1] = v12;
    unint64_t v13 = *a3;
    unint64_t v14 = *a2;
    if (*a3 < *a2 || v14 >= v13 && a3[1] < v12)
    {
      *a2 = v13;
      *a3 = v14;
      uint64_t v6 = a3 + 1;
      BOOL result = a2 + 1;
      goto LABEL_17;
    }
  }
  return result;
}

unint64_t *std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<unsigned long,unsigned long> *>(unint64_t *a1, unint64_t *a2, unint64_t *a3, unint64_t *a4)
{
  BOOL result = std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<unsigned long,unsigned long> *>(a1, a2, a3);
  unint64_t v9 = *a4;
  unint64_t v10 = *a3;
  if (*a4 < *a3 || v10 >= v9 && a4[1] < a3[1])
  {
    *a3 = v9;
    *a4 = v10;
    unint64_t v11 = a3[1];
    a3[1] = a4[1];
    a4[1] = v11;
    unint64_t v12 = *a3;
    unint64_t v13 = *a2;
    if (*a3 < *a2 || v13 >= v12 && a3[1] < a2[1])
    {
      *a2 = v12;
      *a3 = v13;
      unint64_t v14 = a2[1];
      a2[1] = a3[1];
      a3[1] = v14;
      unint64_t v15 = *a2;
      unint64_t v16 = *a1;
      if (*a2 < *a1 || v16 >= v15 && a2[1] < a1[1])
      {
        *a1 = v15;
        *a2 = v16;
        unint64_t v17 = a1[1];
        a1[1] = a2[1];
        a2[1] = v17;
      }
    }
  }
  return result;
}

unint64_t *std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<unsigned long,unsigned long> *>(unint64_t *a1, unint64_t *a2, unint64_t *a3, unint64_t *a4, unint64_t *a5)
{
  BOOL result = std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<unsigned long,unsigned long> *>(a1, a2, a3, a4);
  unint64_t v11 = *a5;
  unint64_t v12 = *a4;
  if (*a5 < *a4 || v12 >= v11 && a5[1] < a4[1])
  {
    *a4 = v11;
    *a5 = v12;
    unint64_t v13 = a4[1];
    a4[1] = a5[1];
    a5[1] = v13;
    unint64_t v14 = *a4;
    unint64_t v15 = *a3;
    if (*a4 < *a3 || v15 >= v14 && a4[1] < a3[1])
    {
      *a3 = v14;
      *a4 = v15;
      unint64_t v16 = a3[1];
      a3[1] = a4[1];
      a4[1] = v16;
      unint64_t v17 = *a3;
      unint64_t v18 = *a2;
      if (*a3 < *a2 || v18 >= v17 && a3[1] < a2[1])
      {
        *a2 = v17;
        *a3 = v18;
        unint64_t v19 = a2[1];
        a2[1] = a3[1];
        a3[1] = v19;
        unint64_t v20 = *a2;
        unint64_t v21 = *a1;
        if (*a2 < *a1 || v21 >= v20 && a2[1] < a1[1])
        {
          *a1 = v20;
          *a2 = v21;
          unint64_t v22 = a1[1];
          a1[1] = a2[1];
          a2[1] = v22;
        }
      }
    }
  }
  return result;
}

BOOL std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<unsigned long,unsigned long> *>(unint64_t *a1, unint64_t *a2)
{
  uint64_t v4 = ((char *)a2 - (char *)a1) >> 4;
  BOOL result = 1;
  switch(v4)
  {
    case 0:
    case 1:
      return result;
    case 2:
      unint64_t v6 = *(a2 - 2);
      unint64_t v7 = *a1;
      if (v6 < *a1 || v7 >= v6 && *(a2 - 1) < a1[1])
      {
        *a1 = v6;
        *(a2 - 2) = v7;
        unint64_t v8 = a1[1];
        a1[1] = *(a2 - 1);
        *(a2 - 1) = v8;
      }
      return result;
    case 3:
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<unsigned long,unsigned long> *>(a1, a1 + 2, a2 - 2);
      return 1;
    case 4:
      std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<unsigned long,unsigned long> *>(a1, a1 + 2, a1 + 4, a2 - 2);
      return 1;
    case 5:
      std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<unsigned long,unsigned long> *>(a1, a1 + 2, a1 + 4, a1 + 6, a2 - 2);
      return 1;
    default:
      unint64_t v9 = a1 + 4;
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<unsigned long,unsigned long> *>(a1, a1 + 2, a1 + 4);
      unint64_t v10 = a1 + 6;
      if (a1 + 6 == a2) {
        return 1;
      }
      uint64_t v11 = 0;
      int v12 = 0;
      break;
  }
  do
  {
    unint64_t v13 = *v10;
    unint64_t v14 = *v9;
    if (*v10 >= *v9)
    {
      if (v14 < v13) {
        goto LABEL_23;
      }
      unint64_t v15 = v10[1];
      if (v15 >= v9[1]) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v15 = v10[1];
    }
    *unint64_t v10 = v14;
    v10[1] = v9[1];
    unint64_t v16 = a1;
    if (v9 == a1) {
      goto LABEL_22;
    }
    uint64_t v17 = v11;
    while (1)
    {
      unint64_t v18 = (char *)a1 + v17;
      unint64_t v19 = *(unint64_t *)((char *)a1 + v17 + 16);
      if (v13 < v19)
      {
        unint64_t v20 = *((void *)v18 + 3);
        goto LABEL_18;
      }
      if (v19 < v13)
      {
        unint64_t v16 = v9;
        goto LABEL_22;
      }
      unint64_t v20 = *(unint64_t *)((char *)a1 + v17 + 24);
      if (v15 >= v20) {
        break;
      }
LABEL_18:
      v9 -= 2;
      *((void *)v18 + 4) = v19;
      *(unint64_t *)((char *)a1 + v17 + 4CoreML::Specification::Int64Parameter::New(this, 0) = v20;
      v17 -= 16;
      if (v17 == -32)
      {
        unint64_t v16 = a1;
        goto LABEL_22;
      }
    }
    unint64_t v16 = (unint64_t *)((char *)a1 + v17 + 32);
LABEL_22:
    unint64_t *v16 = v13;
    v16[1] = v15;
    if (++v12 == 8) {
      return v10 + 2 == a2;
    }
LABEL_23:
    unint64_t v9 = v10;
    v11 += 16;
    v10 += 2;
  }
  while (v10 != a2);
  return 1;
}

BOOL std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<unsigned long,double> *>(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (a2 - a1) >> 4;
  BOOL result = 1;
  switch(v4)
  {
    case 0:
    case 1:
      return result;
    case 2:
      unint64_t v6 = *(void *)(a2 - 16);
      unint64_t v7 = *(void *)a1;
      if (v6 < *(void *)a1)
      {
        double v8 = *(double *)(a1 + 8);
        double v9 = *(double *)(a2 - 8);
LABEL_30:
        *(void *)a1 = v6;
        *(void *)(a2 - 16) = v7;
        *(double *)(a1 + 8) = v9;
        *(double *)(a2 - 8) = v8;
        return result;
      }
      if (v7 >= v6)
      {
        double v9 = *(double *)(a2 - 8);
        double v8 = *(double *)(a1 + 8);
        if (v9 < v8) {
          goto LABEL_30;
        }
      }
      return result;
    case 3:
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<unsigned long long,double> *>((unint64_t *)a1, (unint64_t *)(a1 + 16), (unint64_t *)(a2 - 16));
      return 1;
    case 4:
      std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<unsigned long long,double> *>(a1, a1 + 16, a1 + 32, a2 - 16);
      return 1;
    case 5:
      std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<unsigned long long,double> *>(a1, a1 + 16, a1 + 32, a1 + 48, (unint64_t *)(a2 - 16));
      return 1;
    default:
      uint64_t v10 = a1 + 32;
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<unsigned long long,double> *>((unint64_t *)a1, (unint64_t *)(a1 + 16), (unint64_t *)(a1 + 32));
      uint64_t v11 = a1 + 48;
      if (a1 + 48 == a2) {
        return 1;
      }
      uint64_t v12 = 0;
      int v13 = 0;
      break;
  }
LABEL_6:
  unint64_t v14 = *(void *)v11;
  unint64_t v15 = *(void *)v10;
  if (*(void *)v11 >= *(void *)v10)
  {
    if (v15 < v14) {
      goto LABEL_21;
    }
    double v16 = *(double *)(v11 + 8);
    double v17 = *(double *)(v10 + 8);
    if (v16 >= v17) {
      goto LABEL_21;
    }
  }
  else
  {
    double v16 = *(double *)(v11 + 8);
    double v17 = *(double *)(v10 + 8);
  }
  *(void *)uint64_t v11 = v15;
  *(double *)(v11 + 8) = v17;
  uint64_t v18 = a1;
  if (v10 == a1) {
    goto LABEL_20;
  }
  uint64_t v19 = v12;
  while (1)
  {
    uint64_t v20 = a1 + v19;
    unint64_t v21 = *(void *)(a1 + v19 + 16);
    if (v14 >= v21)
    {
      if (v21 < v14)
      {
        uint64_t v18 = v10;
        goto LABEL_20;
      }
      double v22 = *(double *)(a1 + v19 + 24);
      if (v16 >= v22)
      {
        uint64_t v18 = a1 + v19 + 32;
LABEL_20:
        *(void *)uint64_t v18 = v14;
        *(double *)(v18 + 8) = v16;
        if (++v13 == 8) {
          return v11 + 16 == a2;
        }
LABEL_21:
        uint64_t v10 = v11;
        v12 += 16;
        v11 += 16;
        if (v11 == a2) {
          return 1;
        }
        goto LABEL_6;
      }
    }
    else
    {
      double v22 = *(double *)(v20 + 24);
    }
    v10 -= 16;
    *(void *)(v20 + 32) = v21;
    *(double *)(a1 + v19 + 4CoreML::Specification::Int64Parameter::New(this, 0) = v22;
    v19 -= 16;
    if (v19 == -32)
    {
      uint64_t v18 = a1;
      goto LABEL_20;
    }
  }
}

void std::__shared_ptr_emplace<CoreML::TreeEnsembles::_TreeComputationNode>::__on_zero_shared(void *a1)
{
  uint64_t v2 = (std::__shared_weak_count *)a1[21];
  if (v2) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }
  unint64_t v3 = (std::__shared_weak_count *)a1[19];
  if (v3) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v3);
  }
  uint64_t v4 = (std::__shared_weak_count *)a1[17];
  if (v4) {
    std::__shared_weak_count::__release_weak(v4);
  }
  unint64_t v5 = (void *)a1[13];
  if (v5)
  {
    a1[14] = v5;
    operator delete(v5);
  }
}

void std::__shared_ptr_emplace<CoreML::TreeEnsembles::_TreeComputationNode>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1EF0DD768;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x19F3C1920);
}

void std::__shared_ptr_emplace<CoreML::TreeEnsembles::_TreeComputationNode>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1EF0DD768;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void CoreML::validate<(MLModelType)609>(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    unint64_t v3 = *(uint64_t **)(a2 + 16);
  }
  else {
    unint64_t v3 = &CoreML::Specification::_ModelDescription_default_instance_;
  }
  if (*(_DWORD *)(a2 + 44) == 609)
  {
    CoreML::Result::Result((CoreML::Result *)&v19);
    int v5 = *(_DWORD *)(a2 + 24);
    LODWORD(v1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
    CoreML::validateModelDescription((uint64_t)&v16, (uint64_t)v3, v5, (char *)&v13);
    int v6 = (int)v16;
    uint64_t v19 = v16;
    if (SHIBYTE(v21) < 0)
    {
      operator delete((void *)__p);
      int v6 = (int)v19;
    }
    long long __p = v17;
    uint64_t v21 = v18;
    if ((v6 & 0xFFFFFFEF) != 0) {
      goto LABEL_14;
    }
    unint64_t v7 = (unsigned int *)operator new(4uLL);
    *unint64_t v7 = 5;
    unint64_t v14 = v7 + 1;
    unint64_t v15 = v7 + 1;
    int v13 = v7;
    CoreML::validateDescriptionsContainFeatureWithTypes<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>>((uint64_t)&v16, (uint64_t)(v3 + 2), 1, &v13);
    uint64_t v19 = v16;
    if (SHIBYTE(v21) < 0) {
      operator delete((void *)__p);
    }
    long long __p = v17;
    uint64_t v21 = v18;
    HIBYTE(v18) = 0;
    LOBYTE(v17) = 0;
    operator delete(v7);
    if ((v19 & 0xFFFFFFEF) != 0) {
      goto LABEL_14;
    }
    double v8 = (unsigned int *)operator new(0xCuLL);
    unint64_t v14 = v8 + 3;
    unint64_t v15 = v8 + 3;
    *(void *)double v8 = 0x100000002;
    v8[2] = 5;
    int v13 = v8;
    CoreML::validateDescriptionsContainFeatureWithTypes<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>>((uint64_t)&v16, (uint64_t)(v3 + 5), 1, &v13);
    uint64_t v19 = v16;
    if (SHIBYTE(v21) < 0) {
      operator delete((void *)__p);
    }
    long long __p = v17;
    uint64_t v21 = v18;
    HIBYTE(v18) = 0;
    LOBYTE(v17) = 0;
    operator delete(v8);
    if ((v19 & 0xFFFFFFEF) != 0) {
      goto LABEL_14;
    }
    if (*((_DWORD *)v3 + 6) == 1)
    {
      uint64_t v11 = *(uint64_t **)(*(void *)(v3[7] + 8) + 32);
      if (!v11) {
        uint64_t v11 = &CoreML::Specification::_FeatureType_default_instance_;
      }
      if (*((_DWORD *)v11 + 9) != 2
        || (*(_DWORD *)(a2 + 44) != 609
          ? (CoreML::Specification::protobuf_ArrayFeatureExtractor_2eproto::InitDefaults(v9),
             uint64_t v12 = &CoreML::Specification::_ArrayFeatureExtractor_default_instance_)
          : (uint64_t v12 = *(uint64_t **)(a2 + 32)),
            *((_DWORD *)v12 + 4) == 1))
      {
LABEL_14:
        *(void *)a1 = v19;
        *(_OWORD *)(a1 + 8) = __p;
        *(void *)(a1 + 24) = v21;
        long long __p = 0uLL;
        uint64_t v21 = 0;
LABEL_15:
        if ((SHIBYTE(v21) & 0x80000000) == 0) {
          return;
        }
        uint64_t v10 = (void *)__p;
        goto LABEL_19;
      }
      std::string::basic_string[abi:ne180100]<0>(&v16, "If output type is Double in interface, exactly one extraction index must be specified.");
      *(void *)a1 = 13;
      std::operator+<char>();
    }
    else
    {
      std::string::basic_string[abi:ne180100]<0>(&v16, "Exactly one input array column must be specified.");
      *(void *)a1 = 13;
      std::operator+<char>();
    }
    if (SHIBYTE(v17) < 0) {
      operator delete(v16);
    }
    goto LABEL_15;
  }
  std::string::basic_string[abi:ne180100]<0>(&v19, "Model not an array feature extractor.");
  *(void *)a1 = 13;
  std::operator+<char>();
  if ((SHIBYTE(__p) & 0x80000000) == 0) {
    return;
  }
  uint64_t v10 = v19;
LABEL_19:
  operator delete(v10);
}

void sub_19EB65A28(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, uint64_t a20,void *a21,int a22,__int16 a23,char a24,char a25,int a26,__int16 a27,char a28,char a29)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  if (a29 < 0) {
    operator delete(a21);
  }
  _Unwind_Resume(exception_object);
}

BOOL CoreML::Specification::operator==(unint64_t *inited, int a2, uint64_t a3)
{
  if (*(_DWORD *)(a3 + 36) != a2) {
    return 0;
  }
  switch(a2)
  {
    case 4:
      uint64_t v6 = *(void *)(a3 + 24);
      if (inited[2] != *(void *)(v6 + 16) || inited[3] != *(void *)(v6 + 24)) {
        return 0;
      }
      int v7 = *((_DWORD *)inited + 8);
      int v8 = *(_DWORD *)(v6 + 32);
      return v7 == v8;
    case 5:
      uint64_t v9 = *(void *)(a3 + 24);
      uint64_t v10 = *((unsigned int *)inited + 9);
      if (v10 != *(_DWORD *)(v9 + 36)) {
        return 0;
      }
      int v11 = *((_DWORD *)inited + 15);
      if (v11)
      {
        if (v11 == 31)
        {
          uint64_t v12 = (int *)(inited[5] + 24);
        }
        else
        {
          if (v11 != 21) {
            goto LABEL_31;
          }
          uint64_t v12 = (int *)(*(void *)(*(void *)(inited[5] + 32) + 8) + 16);
        }
      }
      else
      {
        uint64_t v12 = (int *)(inited + 2);
      }
      uint64_t v10 = *v12;
LABEL_31:
      int v20 = *(_DWORD *)(v9 + 60);
      if (v20)
      {
        if (v20 == 31)
        {
          uint64_t v21 = (int *)(*(void *)(v9 + 40) + 24);
        }
        else
        {
          if (v20 != 21) {
            goto LABEL_45;
          }
          uint64_t v21 = (int *)(*(void *)(*(void *)(*(void *)(v9 + 40) + 32) + 8) + 16);
        }
      }
      else
      {
        uint64_t v21 = (int *)(v9 + 16);
      }
      uint64_t v4 = *v21;
LABEL_45:
      if (v10 != v4) {
        return 0;
      }
      if (v20 | v11) {
        goto LABEL_67;
      }
      uint64_t v24 = *((unsigned int *)inited + 4);
      if ((int)v24 < 1) {
        goto LABEL_67;
      }
      uint64_t v25 = *(void *)(v9 + 24);
      uint64_t v26 = v24 - 1;
      unint64_t v27 = (uint64_t *)(v25 + 8);
      unint64_t v28 = (uint64_t *)(inited[3] + 8);
      do
      {
        uint64_t v30 = *v28++;
        uint64_t v29 = v30;
        uint64_t v32 = *v27++;
        uint64_t v31 = v32;
        BOOL v34 = v26-- != 0;
        BOOL result = v29 == v31;
      }
      while (v29 == v31 && v34);
      return result;
    case 6:
      int v8 = *(_DWORD *)(*(void *)(a3 + 24) + 28);
      int v7 = *((_DWORD *)inited + 7);
      return v7 == v8;
    case 7:
      int v8 = *(_DWORD *)(*(void *)(a3 + 24) + 36);
      int v7 = *((_DWORD *)inited + 9);
      return v7 == v8;
    case 8:
      if (*((_DWORD *)inited + 7) == 1)
      {
        unint64_t v14 = (uint64_t *)inited[2];
LABEL_18:
        unint64_t v15 = *(uint64_t **)(a3 + 24);
        goto LABEL_20;
      }
      inited = CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults((CoreML::Specification::protobuf_FeatureTypes_2eproto *)inited);
      if (*(_DWORD *)(a3 + 36) == 8)
      {
        unint64_t v14 = &CoreML::Specification::_ArrayFeatureType_default_instance_;
        goto LABEL_18;
      }
      inited = CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults((CoreML::Specification::protobuf_FeatureTypes_2eproto *)inited);
      unint64_t v15 = &CoreML::Specification::_StateFeatureType_default_instance_;
      unint64_t v14 = &CoreML::Specification::_ArrayFeatureType_default_instance_;
LABEL_20:
      if (*((_DWORD *)v15 + 7) == 1)
      {
        double v16 = (uint64_t *)v15[2];
      }
      else
      {
        CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults((CoreML::Specification::protobuf_FeatureTypes_2eproto *)inited);
        double v16 = &CoreML::Specification::_ArrayFeatureType_default_instance_;
      }
      uint64_t v17 = *((unsigned int *)v14 + 9);
      if (v17 != *((_DWORD *)v16 + 9)) {
        return 0;
      }
      int v18 = *((_DWORD *)v14 + 15);
      if (v18)
      {
        if (v18 == 31)
        {
          uint64_t v19 = (int *)(v14[5] + 24);
        }
        else
        {
          if (v18 != 21) {
            goto LABEL_38;
          }
          uint64_t v19 = (int *)(*(void *)(*(void *)(v14[5] + 32) + 8) + 16);
        }
      }
      else
      {
        uint64_t v19 = (int *)(v14 + 2);
      }
      uint64_t v17 = *v19;
LABEL_38:
      int v22 = *((_DWORD *)v16 + 15);
      if (v22)
      {
        if (v22 == 31)
        {
          unint64_t v23 = (int *)(v16[5] + 24);
        }
        else
        {
          if (v22 != 21) {
            goto LABEL_58;
          }
          unint64_t v23 = (int *)(*(void *)(*(void *)(v16[5] + 32) + 8) + 16);
        }
      }
      else
      {
        unint64_t v23 = (int *)(v16 + 2);
      }
      uint64_t v3 = *v23;
LABEL_58:
      if (v17 != v3) {
        return 0;
      }
      unint64_t v35 = *((unsigned int *)v14 + 4);
      if ((int)v35 < 1)
      {
LABEL_67:
        BOOL result = 1;
      }
      else
      {
        uint64_t v36 = v14[3];
        uint64_t v37 = v16[3];
        if (*(void *)(v36 + 8) != *(void *)(v37 + 8)) {
          return 0;
        }
        unint64_t v38 = 0;
        uint64_t v39 = v36 + 16;
        uint64_t v40 = v37 + 16;
        while (v35 - 1 != v38)
        {
          uint64_t v41 = *(void *)(v39 + 8 * v38);
          uint64_t v42 = *(void *)(v40 + 8 * v38++);
          if (v41 != v42) {
            goto LABEL_69;
          }
        }
        unint64_t v38 = *((unsigned int *)v14 + 4);
LABEL_69:
        BOOL result = v38 >= v35;
      }
      break;
    default:
      goto LABEL_67;
  }
  return result;
}

BOOL CoreML::Specification::isEquivalent(CoreML::Specification *this, const CoreML::Specification::FeatureDescription *a2, const CoreML::Specification::FeatureDescription *a3, uint64_t *a4)
{
  uint64_t v4 = *((unsigned __int8 *)this + 23);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = *((unsigned __int8 *)this + 23);
  }
  else {
    uint64_t v5 = *((void *)this + 1);
  }
  uint64_t v6 = *((unsigned __int8 *)a3 + 23);
  int v7 = (char)v6;
  if ((v6 & 0x80u) != 0) {
    uint64_t v6 = *((void *)a3 + 1);
  }
  if (v5 != v6) {
    return 0;
  }
  if (v7 >= 0) {
    uint64_t v10 = a3;
  }
  else {
    uint64_t v10 = *(const CoreML::Specification::FeatureDescription **)a3;
  }
  if ((v4 & 0x80) != 0)
  {
    if (!memcmp(*(const void **)this, v10, *((void *)this + 1))) {
      goto LABEL_17;
    }
    return 0;
  }
  if (*((unsigned char *)this + 23))
  {
    while (*(unsigned __int8 *)this == *(unsigned __int8 *)v10)
    {
      this = (CoreML::Specification *)((char *)this + 1);
      uint64_t v10 = (const CoreML::Specification::FeatureDescription *)((char *)v10 + 1);
      if (!--v4) {
        goto LABEL_17;
      }
    }
    return 0;
  }
LABEL_17:
  if (a2) {
    uint64_t v12 = (uint64_t *)a2;
  }
  else {
    uint64_t v12 = &CoreML::Specification::_FeatureType_default_instance_;
  }
  if (a4) {
    int v13 = a4;
  }
  else {
    int v13 = &CoreML::Specification::_FeatureType_default_instance_;
  }
  unint64_t v14 = (unint64_t *)v12[3];
  int v15 = *((_DWORD *)v12 + 9);

  return CoreML::Specification::operator==(v14, v15, (uint64_t)v13);
}

uint64_t CoreML::Specification::NonMaximumSuppression_PickTop::GetCachedSize(CoreML::Specification::NonMaximumSuppression_PickTop *this)
{
  return *((unsigned int *)this + 5);
}

uint64_t CoreML::Specification::NonMaximumSuppression_PickTop::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  if (*(unsigned char *)(this + 16)) {
    return google::protobuf::internal::WireFormatLite::WriteBool(1, 1u, a2, a4);
  }
  return this;
}

uint64_t CoreML::Specification::NonMaximumSuppression_PickTop::ByteSizeLong(CoreML::Specification::NonMaximumSuppression_PickTop *this)
{
  uint64_t v1 = 2 * *((unsigned __int8 *)this + 16);
  *((_DWORD *)this + 5) = v1;
  return v1;
}

uint64_t CoreML::Specification::NonMaximumSuppression_PickTop::MergePartialFromCodedStream(CoreML::Specification::NonMaximumSuppression_PickTop *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      int v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v13 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t Varint64Fallback = *v11;
        *a2 = v11 + 1;
      }
      *((unsigned char *)this + 16) = Varint64Fallback != 0;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    if (v10) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

std::string *CoreML::Specification::NonMaximumSuppression_PickTop::CheckTypeAndMergeFrom(std::string *this, const google::protobuf::MessageLite *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  if (*((unsigned char *)a2 + 16)) {
    v3->__r_.__value_.__s.__data_[16] = 1;
  }
  return this;
}

uint64_t CoreML::Specification::NonMaximumSuppression_PickTop::IsInitialized(CoreML::Specification::NonMaximumSuppression_PickTop *this)
{
  return 1;
}

uint64_t CoreML::Specification::NonMaximumSuppression_PickTop::Clear(uint64_t this)
{
  *(unsigned char *)(this + 16) = 0;
  return this;
}

void CoreML::Specification::NonMaximumSuppression_PickTop::New(CoreML::Specification::NonMaximumSuppression_PickTop *this, google::protobuf::Arena *a2)
{
}

void sub_19EB6606C(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x1081C40B60F2DE8);
  _Unwind_Resume(a1);
}

CoreML::Specification::NonMaximumSuppression_PickTop *CoreML::Specification::NonMaximumSuppression_PickTop::NonMaximumSuppression_PickTop(CoreML::Specification::NonMaximumSuppression_PickTop *this)
{
  *(void *)this = &unk_1EF0D8060;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::NonMaximumSuppression_PickTop *)&CoreML::Specification::_NonMaximumSuppression_PickTop_default_instance_) {
    CoreML::Specification::protobuf_NonMaximumSuppression_2eproto::InitDefaults(this);
  }
  *((unsigned char *)this + 16) = 0;
  *((_DWORD *)this + 5) = 0;
  return this;
}

void sub_19EB660F4(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::NonMaximumSuppression_PickTop>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    BOOL result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *BOOL result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::NonMaximumSuppression_PickTop>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::NonMaximumSuppression_PickTop>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

uint64_t CoreML::Specification::NonMaximumSuppression::GetCachedSize(CoreML::Specification::NonMaximumSuppression *this)
{
  return *((unsigned int *)this + 24);
}

uint64_t CoreML::Specification::NonMaximumSuppression::SerializeWithCachedSizes(CoreML::Specification::NonMaximumSuppression *this, google::protobuf::io::CodedOutputStream *a2, google::protobuf::io::CodedOutputStream *a3, google::protobuf::io::CodedOutputStream *a4)
{
  if (*((_DWORD *)this + 25) == 1) {
    google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)1, *((void *)this + 10), a2, a4);
  }
  int v6 = *((_DWORD *)this + 26);
  if (v6 == 100)
  {
    google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)0x64, *((void *)this + 11), a2, a4);
    int v6 = *((_DWORD *)this + 26);
  }
  if (v6 == 101) {
    google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)0x65, *((void *)this + 11), a2, a4);
  }
  double v7 = *((double *)this + 8);
  if (v7 != 0.0) {
    google::protobuf::internal::WireFormatLite::WriteDouble(110, a2, v7, a3);
  }
  double v8 = *((double *)this + 9);
  if (v8 != 0.0) {
    google::protobuf::internal::WireFormatLite::WriteDouble(111, a2, v8, a3);
  }
  uint64_t v9 = (unsigned int *)*((void *)this + 2);
  if (*((char *)v9 + 23) < 0)
  {
    uint64_t v10 = *((void *)v9 + 1);
    if (!v10) {
      goto LABEL_17;
    }
    uint64_t v9 = *(unsigned int **)v9;
    goto LABEL_16;
  }
  LODWORD(v1CoreML::Specification::Int64Parameter::New(this, 0) = *((unsigned __int8 *)v9 + 23);
  if (*((unsigned char *)v9 + 23))
  {
LABEL_16:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v9, v10, 1, (uint64_t)"CoreML.Specification.NonMaximumSuppression.confidenceInputFeatureName");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0xC8u, *((void *)this + 2), a2);
  }
LABEL_17:
  int v11 = (unsigned int *)*((void *)this + 3);
  if (*((char *)v11 + 23) < 0)
  {
    uint64_t v12 = *((void *)v11 + 1);
    if (!v12) {
      goto LABEL_23;
    }
    int v11 = *(unsigned int **)v11;
    goto LABEL_22;
  }
  LODWORD(v12) = *((unsigned __int8 *)v11 + 23);
  if (*((unsigned char *)v11 + 23))
  {
LABEL_22:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v11, v12, 1, (uint64_t)"CoreML.Specification.NonMaximumSuppression.coordinatesInputFeatureName");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0xC9u, *((void *)this + 3), a2);
  }
LABEL_23:
  char v13 = (unsigned int *)*((void *)this + 4);
  if (*((char *)v13 + 23) < 0)
  {
    uint64_t v14 = *((void *)v13 + 1);
    if (!v14) {
      goto LABEL_29;
    }
    char v13 = *(unsigned int **)v13;
    goto LABEL_28;
  }
  LODWORD(v14) = *((unsigned __int8 *)v13 + 23);
  if (*((unsigned char *)v13 + 23))
  {
LABEL_28:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v13, v14, 1, (uint64_t)"CoreML.Specification.NonMaximumSuppression.iouThresholdInputFeatureName");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0xCAu, *((void *)this + 4), a2);
  }
LABEL_29:
  int v15 = (unsigned int *)*((void *)this + 5);
  if (*((char *)v15 + 23) < 0)
  {
    uint64_t v16 = *((void *)v15 + 1);
    if (!v16) {
      goto LABEL_35;
    }
    int v15 = *(unsigned int **)v15;
    goto LABEL_34;
  }
  LODWORD(v16) = *((unsigned __int8 *)v15 + 23);
  if (*((unsigned char *)v15 + 23))
  {
LABEL_34:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v15, v16, 1, (uint64_t)"CoreML.Specification.NonMaximumSuppression.confidenceThresholdInputFeatureName");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0xCBu, *((void *)this + 5), a2);
  }
LABEL_35:
  uint64_t v17 = (unsigned int *)*((void *)this + 6);
  if (*((char *)v17 + 23) < 0)
  {
    uint64_t v18 = *((void *)v17 + 1);
    if (!v18) {
      goto LABEL_41;
    }
    uint64_t v17 = *(unsigned int **)v17;
    goto LABEL_40;
  }
  LODWORD(v18) = *((unsigned __int8 *)v17 + 23);
  if (*((unsigned char *)v17 + 23))
  {
LABEL_40:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v17, v18, 1, (uint64_t)"CoreML.Specification.NonMaximumSuppression.confidenceOutputFeatureName");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0xD2u, *((void *)this + 6), a2);
  }
LABEL_41:
  uint64_t result = *((void *)this + 7);
  if (*(char *)(result + 23) < 0)
  {
    uint64_t v20 = *(void *)(result + 8);
    if (!v20) {
      return result;
    }
    uint64_t result = *(void *)result;
  }
  else
  {
    LODWORD(v2CoreML::Specification::Int64Parameter::New(this, 0) = *(unsigned __int8 *)(result + 23);
    if (!*(unsigned char *)(result + 23)) {
      return result;
    }
  }
  google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)result, v20, 1, (uint64_t)"CoreML.Specification.NonMaximumSuppression.coordinatesOutputFeatureName");
  uint64_t v21 = *((void *)this + 7);

  return google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0xD3u, v21, a2);
}

uint64_t CoreML::Specification::NonMaximumSuppression::ByteSizeLong(CoreML::Specification::NonMaximumSuppression *this)
{
  uint64_t v2 = *((void *)this + 2);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
  if (*(char *)(v2 + 23) < 0)
  {
    if (*(void *)(v2 + 8)) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v5 = 0;
    goto LABEL_8;
  }
  if (!*(unsigned char *)(v2 + 23)) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v4 = *(void *)(v2 + 8);
  if ((v3 & 0x80u) == 0) {
    uint64_t v4 = v3;
  }
  uint64_t v5 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_8:
  uint64_t v6 = *((void *)this + 3);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
  if (*(char *)(v6 + 23) < 0)
  {
    if (!*(void *)(v6 + 8)) {
      goto LABEL_13;
    }
  }
  else if (!*(unsigned char *)(v6 + 23))
  {
    goto LABEL_13;
  }
  uint64_t v8 = *(void *)(v6 + 8);
  if ((v7 & 0x80u) == 0) {
    uint64_t v8 = v7;
  }
  v5 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_13:
  uint64_t v9 = *((void *)this + 4);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
  if (*(char *)(v9 + 23) < 0)
  {
    if (!*(void *)(v9 + 8)) {
      goto LABEL_18;
    }
  }
  else if (!*(unsigned char *)(v9 + 23))
  {
    goto LABEL_18;
  }
  uint64_t v11 = *(void *)(v9 + 8);
  if ((v10 & 0x80u) == 0) {
    uint64_t v11 = v10;
  }
  v5 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_18:
  uint64_t v12 = *((void *)this + 5);
  uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
  if (*(char *)(v12 + 23) < 0)
  {
    if (!*(void *)(v12 + 8)) {
      goto LABEL_23;
    }
  }
  else if (!*(unsigned char *)(v12 + 23))
  {
    goto LABEL_23;
  }
  uint64_t v14 = *(void *)(v12 + 8);
  if ((v13 & 0x80u) == 0) {
    uint64_t v14 = v13;
  }
  v5 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_23:
  uint64_t v15 = *((void *)this + 6);
  uint64_t v16 = *(unsigned __int8 *)(v15 + 23);
  if (*(char *)(v15 + 23) < 0)
  {
    if (!*(void *)(v15 + 8)) {
      goto LABEL_28;
    }
  }
  else if (!*(unsigned char *)(v15 + 23))
  {
    goto LABEL_28;
  }
  uint64_t v17 = *(void *)(v15 + 8);
  if ((v16 & 0x80u) == 0) {
    uint64_t v17 = v16;
  }
  v5 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_28:
  uint64_t v18 = *((void *)this + 7);
  uint64_t v19 = *(unsigned __int8 *)(v18 + 23);
  if (*(char *)(v18 + 23) < 0)
  {
    if (!*(void *)(v18 + 8)) {
      goto LABEL_33;
    }
  }
  else if (!*(unsigned char *)(v18 + 23))
  {
    goto LABEL_33;
  }
  uint64_t v20 = *(void *)(v18 + 8);
  if ((v19 & 0x80u) == 0) {
    uint64_t v20 = v19;
  }
  v5 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_33:
  if (*((double *)this + 8) != 0.0) {
    v5 += 10;
  }
  if (*((double *)this + 9) == 0.0) {
    uint64_t v21 = v5;
  }
  else {
    uint64_t v21 = v5 + 10;
  }
  if (*((_DWORD *)this + 25) == 1)
  {
    uint64_t v22 = *((void *)this + 10);
    uint64_t v23 = *(unsigned __int8 *)(v22 + 16);
    *(_DWORD *)(v22 + 2CoreML::Specification::Int64Parameter::New(this, 0) = 2 * v23;
    v21 += 2 * v23 + 2;
  }
  int v24 = *((_DWORD *)this + 26);
  if (v24 == 101)
  {
    uint64_t v25 = CoreML::Specification::Int64Vector::ByteSizeLong(*((CoreML::Specification::Int64Vector **)this + 11));
    goto LABEL_54;
  }
  if (v24 == 100)
  {
    uint64_t v25 = CoreML::Specification::StringVector::ByteSizeLong(*((CoreML::Specification::StringVector **)this + 11));
LABEL_54:
    v21 += v25 + ((9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
  *((_DWORD *)this + 24) = v21;
  return v21;
}

uint64_t CoreML::Specification::NonMaximumSuppression::MergePartialFromCodedStream(CoreML::Specification::NonMaximumSuppression *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  unint64_t v47 = (std::string **)((char *)this + 56);
  uint64_t v5 = (std::string **)((char *)this + 48);
  uint64_t v6 = (std::string **)((char *)this + 40);
  uint64_t v7 = (std::string **)((char *)this + 32);
  uint64_t v8 = (std::string **)((char *)this + 24);
  uint64_t v9 = (std::string **)((char *)this + 16);
  while (1)
  {
LABEL_2:
    uint64_t v10 = *(unsigned __int8 **)a2;
    unint64_t v11 = *((void *)a2 + 1);
    if (*(void *)a2 >= v11)
    {
      LODWORD(v1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
    }
    else
    {
      uint64_t v12 = v10 + 1;
      uint64_t v13 = *v10;
      if ((char)*v10 >= 1)
      {
        *(void *)a2 = v12;
        unint64_t v14 = v13 | 0x100000000;
        if ((v14 & 0x100000000) == 0) {
          goto LABEL_9;
        }
        goto LABEL_17;
      }
      if ((unint64_t)v12 < v11)
      {
        int v15 = *v12;
        if ((v13 & ~v15) >= 0x80)
        {
          *(void *)a2 = v10 + 2;
          unint64_t v14 = (v13 + (v15 << 7) - 128) | 0x100000000;
          goto LABEL_17;
        }
      }
    }
    unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v13);
    unint64_t v14 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
    if ((v14 & 0x100000000) == 0) {
      goto LABEL_9;
    }
LABEL_17:
    unsigned int v18 = v14 >> 3;
    if (v14 >> 3 > 0x6D) {
      break;
    }
    if (v18 == 1)
    {
      if (v14 != 10) {
        goto LABEL_9;
      }
      if (*((_DWORD *)this + 25) != 1)
      {
        *((_DWORD *)this + 25) = 1;
        operator new();
      }
      uint64_t v25 = (CoreML::Specification::NonMaximumSuppression_PickTop *)*((void *)this + 10);
      uint64_t v31 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v31 < 0)
      {
        int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (VarintSizeAsIntFallback < 0) {
          return 0;
        }
      }
      else
      {
        int VarintSizeAsIntFallback = *v31;
        *(void *)a2 = v31 + 1;
      }
      int v40 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      int v42 = *((_DWORD *)a2 + 13);
      BOOL v38 = __OFSUB__(v42--, 1);
      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v42;
      if (v42 < 0 != v38) {
        return 0;
      }
      int v39 = v40;
      uint64_t result = CoreML::Specification::NonMaximumSuppression_PickTop::MergePartialFromCodedStream(v25, (char **)a2, v41);
      if (!result) {
        return result;
      }
    }
    else if (v18 == 100)
    {
      if (v14 != 34) {
        goto LABEL_9;
      }
      if (*((_DWORD *)this + 26) != 100)
      {
        CoreML::Specification::NonMaximumSuppression::clear_ClassLabels((uint64_t)this);
        *((_DWORD *)this + 26) = 100;
        operator new();
      }
      uint64_t v26 = (CoreML::Specification::StringVector *)*((void *)this + 11);
      unint64_t v33 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v33 < 0)
      {
        int v34 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v34 < 0) {
          return 0;
        }
      }
      else
      {
        int v34 = *v33;
        *(void *)a2 = v33 + 1;
      }
      int v43 = google::protobuf::io::CodedInputStream::PushLimit(a2, v34);
      int v45 = *((_DWORD *)a2 + 13);
      BOOL v38 = __OFSUB__(v45--, 1);
      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v45;
      if (v45 < 0 != v38) {
        return 0;
      }
      int v39 = v43;
      uint64_t result = CoreML::Specification::StringVector::MergePartialFromCodedStream(v26, (char **)a2, v44);
      if (!result) {
        return result;
      }
    }
    else
    {
      if (v18 != 101 || v14 != 42) {
        goto LABEL_9;
      }
      if (*((_DWORD *)this + 26) != 101)
      {
        CoreML::Specification::NonMaximumSuppression::clear_ClassLabels((uint64_t)this);
        *((_DWORD *)this + 26) = 101;
        operator new();
      }
      uint64_t v22 = (CoreML::Specification::Int64Vector *)*((void *)this + 11);
      uint64_t v29 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v29 < 0)
      {
        int v30 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v30 < 0) {
          return 0;
        }
      }
      else
      {
        int v30 = *v29;
        *(void *)a2 = v29 + 1;
      }
      int v35 = google::protobuf::io::CodedInputStream::PushLimit(a2, v30);
      int v37 = *((_DWORD *)a2 + 13);
      BOOL v38 = __OFSUB__(v37--, 1);
      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v37;
      if (v37 < 0 != v38) {
        return 0;
      }
      int v39 = v35;
      uint64_t result = CoreML::Specification::Int64Vector::MergePartialFromCodedStream(v22, a2, v36);
      if (!result) {
        return result;
      }
    }
    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v39)) {
      return 0;
    }
  }
  switch(v18)
  {
    case 0xC8u:
      if (v14 != 66) {
        goto LABEL_9;
      }
      if (*v9 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
      }
      uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((unsigned __int8 **)a2, *v9);
      if (!result) {
        return result;
      }
      uint64_t v20 = *v9;
      if (SHIBYTE((*v9)->__r_.__value_.__r.__words[2]) < 0)
      {
        uint64_t v20 = (std::string *)v20->__r_.__value_.__r.__words[0];
        std::string::size_type size = (*v9)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v9)->__r_.__value_.__r.__words[2]);
      }
      unint64_t v46 = "CoreML.Specification.NonMaximumSuppression.confidenceInputFeatureName";
      goto LABEL_114;
    case 0xC9u:
      if (v14 != 74) {
        goto LABEL_9;
      }
      if (*v8 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
      }
      uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((unsigned __int8 **)a2, *v8);
      if (!result) {
        return result;
      }
      uint64_t v20 = *v8;
      if (SHIBYTE((*v8)->__r_.__value_.__r.__words[2]) < 0)
      {
        uint64_t v20 = (std::string *)v20->__r_.__value_.__r.__words[0];
        std::string::size_type size = (*v8)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v8)->__r_.__value_.__r.__words[2]);
      }
      unint64_t v46 = "CoreML.Specification.NonMaximumSuppression.coordinatesInputFeatureName";
      goto LABEL_114;
    case 0xCAu:
      if (v14 != 82) {
        goto LABEL_9;
      }
      if (*v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
      }
      uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((unsigned __int8 **)a2, *v7);
      if (!result) {
        return result;
      }
      uint64_t v20 = *v7;
      if (SHIBYTE((*v7)->__r_.__value_.__r.__words[2]) < 0)
      {
        uint64_t v20 = (std::string *)v20->__r_.__value_.__r.__words[0];
        std::string::size_type size = (*v7)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v7)->__r_.__value_.__r.__words[2]);
      }
      unint64_t v46 = "CoreML.Specification.NonMaximumSuppression.iouThresholdInputFeatureName";
      goto LABEL_114;
    case 0xCBu:
      if (v14 != 90) {
        goto LABEL_9;
      }
      if (*v6 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
      }
      uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((unsigned __int8 **)a2, *v6);
      if (!result) {
        return result;
      }
      uint64_t v20 = *v6;
      if (SHIBYTE((*v6)->__r_.__value_.__r.__words[2]) < 0)
      {
        uint64_t v20 = (std::string *)v20->__r_.__value_.__r.__words[0];
        std::string::size_type size = (*v6)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v6)->__r_.__value_.__r.__words[2]);
      }
      unint64_t v46 = "CoreML.Specification.NonMaximumSuppression.confidenceThresholdInputFeatureName";
      goto LABEL_114;
    case 0xCCu:
    case 0xCDu:
    case 0xCEu:
    case 0xCFu:
    case 0xD0u:
    case 0xD1u:
      goto LABEL_9;
    case 0xD2u:
      if (v14 != 146) {
        goto LABEL_9;
      }
      if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
      }
      uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((unsigned __int8 **)a2, *v5);
      if (!result) {
        return result;
      }
      uint64_t v20 = *v5;
      if (SHIBYTE((*v5)->__r_.__value_.__r.__words[2]) < 0)
      {
        uint64_t v20 = (std::string *)v20->__r_.__value_.__r.__words[0];
        std::string::size_type size = (*v5)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v5)->__r_.__value_.__r.__words[2]);
      }
      unint64_t v46 = "CoreML.Specification.NonMaximumSuppression.confidenceOutputFeatureName";
      goto LABEL_114;
    case 0xD3u:
      if (v14 != 154) {
        goto LABEL_9;
      }
      if (*v47 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
      }
      uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((unsigned __int8 **)a2, *v47);
      if (!result) {
        return result;
      }
      uint64_t v20 = *v47;
      if (SHIBYTE((*v47)->__r_.__value_.__r.__words[2]) < 0)
      {
        uint64_t v20 = (std::string *)v20->__r_.__value_.__r.__words[0];
        std::string::size_type size = (*v47)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v47)->__r_.__value_.__r.__words[2]);
      }
      unint64_t v46 = "CoreML.Specification.NonMaximumSuppression.coordinatesOutputFeatureName";
LABEL_114:
      if (!google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)v20, size, 0, (uint64_t)v46)) {
        return 0;
      }
      goto LABEL_2;
    default:
      if (v18 != 110)
      {
        if (v18 != 111 || v14 != 121) {
          goto LABEL_9;
        }
        unint64_t v48 = 0;
        uint64_t v23 = *(unint64_t **)a2;
        if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) < 8)
        {
          uint64_t result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v48);
          if (!result) {
            return result;
          }
          unint64_t v24 = v48;
        }
        else
        {
          unint64_t v24 = *v23;
          *(void *)a2 = v23 + 1;
        }
        *((void *)this + 9) = v24;
        goto LABEL_2;
      }
      if (v14 == 113)
      {
        unint64_t v48 = 0;
        unint64_t v27 = *(unint64_t **)a2;
        if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) < 8)
        {
          uint64_t result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v48);
          if (!result) {
            return result;
          }
          unint64_t v28 = v48;
        }
        else
        {
          unint64_t v28 = *v27;
          *(void *)a2 = v27 + 1;
        }
        *((void *)this + 8) = v28;
        goto LABEL_2;
      }
LABEL_9:
      if (v14) {
        BOOL v16 = (v14 & 7) == 4;
      }
      else {
        BOOL v16 = 1;
      }
      if (!v16)
      {
        if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v14, a3) & 1) == 0)return 0; {
        goto LABEL_2;
        }
      }
      return 1;
  }
}

void sub_19EB66D3C(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NonMaximumSuppression::clear_ClassLabels(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 104);
  if (v2 == 101 || v2 == 100)
  {
    this = *(void *)(this + 88);
    if (this) {
      this = (*(uint64_t (**)(uint64_t))(*(void *)this + 8))(this);
    }
  }
  *(_DWORD *)(v1 + 104) = 0;
  return this;
}

std::string *CoreML::Specification::NonMaximumSuppression::MergeFrom(std::string *this, const CoreML::Specification::NonMaximumSuppression *a2)
{
  uint64_t v3 = (uint64_t)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  uint64_t v5 = *((void *)a2 + 2);
  if (*(char *)(v5 + 23) < 0)
  {
    if (!*(void *)(v5 + 8)) {
      goto LABEL_11;
    }
  }
  else if (!*(unsigned char *)(v5 + 23))
  {
    goto LABEL_11;
  }
  this = (std::string *)(v3 + 16);
  uint64_t v6 = *(long long **)(v3 + 16);
  if (v6 != (long long *)v5)
  {
    if (v6 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
    }
    this = std::string::operator=(*(std::string **)(v3 + 16), (const std::string *)v5);
  }
LABEL_11:
  uint64_t v7 = *((void *)a2 + 3);
  if (*(char *)(v7 + 23) < 0)
  {
    if (!*(void *)(v7 + 8)) {
      goto LABEL_19;
    }
  }
  else if (!*(unsigned char *)(v7 + 23))
  {
    goto LABEL_19;
  }
  this = (std::string *)(v3 + 24);
  uint64_t v8 = *(long long **)(v3 + 24);
  if (v8 != (long long *)v7)
  {
    if (v8 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
    }
    this = std::string::operator=(*(std::string **)(v3 + 24), (const std::string *)v7);
  }
LABEL_19:
  uint64_t v9 = *((void *)a2 + 4);
  if (*(char *)(v9 + 23) < 0)
  {
    if (!*(void *)(v9 + 8)) {
      goto LABEL_27;
    }
  }
  else if (!*(unsigned char *)(v9 + 23))
  {
    goto LABEL_27;
  }
  this = (std::string *)(v3 + 32);
  uint64_t v10 = *(long long **)(v3 + 32);
  if (v10 != (long long *)v9)
  {
    if (v10 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
    }
    this = std::string::operator=(*(std::string **)(v3 + 32), (const std::string *)v9);
  }
LABEL_27:
  uint64_t v11 = *((void *)a2 + 5);
  if (*(char *)(v11 + 23) < 0)
  {
    if (!*(void *)(v11 + 8)) {
      goto LABEL_35;
    }
  }
  else if (!*(unsigned char *)(v11 + 23))
  {
    goto LABEL_35;
  }
  this = (std::string *)(v3 + 40);
  uint64_t v12 = *(long long **)(v3 + 40);
  if (v12 != (long long *)v11)
  {
    if (v12 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
    }
    this = std::string::operator=(*(std::string **)(v3 + 40), (const std::string *)v11);
  }
LABEL_35:
  uint64_t v13 = *((void *)a2 + 6);
  if (*(char *)(v13 + 23) < 0)
  {
    if (!*(void *)(v13 + 8)) {
      goto LABEL_43;
    }
  }
  else if (!*(unsigned char *)(v13 + 23))
  {
    goto LABEL_43;
  }
  this = (std::string *)(v3 + 48);
  unint64_t v14 = *(long long **)(v3 + 48);
  if (v14 != (long long *)v13)
  {
    if (v14 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
    }
    this = std::string::operator=(*(std::string **)(v3 + 48), (const std::string *)v13);
  }
LABEL_43:
  uint64_t v15 = *((void *)a2 + 7);
  if (*(char *)(v15 + 23) < 0)
  {
    if (!*(void *)(v15 + 8)) {
      goto LABEL_51;
    }
  }
  else if (!*(unsigned char *)(v15 + 23))
  {
    goto LABEL_51;
  }
  this = (std::string *)(v3 + 56);
  BOOL v16 = *(long long **)(v3 + 56);
  if (v16 != (long long *)v15)
  {
    if (v16 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
    }
    this = std::string::operator=(*(std::string **)(v3 + 56), (const std::string *)v15);
  }
LABEL_51:
  double v17 = *((double *)a2 + 8);
  if (v17 != 0.0) {
    *(double *)(v3 + 64) = v17;
  }
  double v18 = *((double *)a2 + 9);
  if (v18 != 0.0) {
    *(double *)(v3 + 72) = v18;
  }
  if (*((_DWORD *)a2 + 25) == 1)
  {
    if (*(_DWORD *)(v3 + 100) != 1)
    {
      *(_DWORD *)(v3 + 10CoreML::Specification::Int64Parameter::New(this, 0) = 1;
      operator new();
    }
    uint64_t v19 = *(void *)(v3 + 80);
    uint64_t v20 = *((void *)a2 + 10);
    uint64_t v21 = *(void *)(v20 + 8);
    if (v21) {
      this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)(v19 + 8), v21 & 0xFFFFFFFFFFFFFFFELL);
    }
    if (*(unsigned char *)(v20 + 16)) {
      *(unsigned char *)(v19 + 16) = 1;
    }
  }
  int v22 = *((_DWORD *)a2 + 26);
  if (v22 == 101)
  {
    if (*(_DWORD *)(v3 + 104) != 101)
    {
      CoreML::Specification::NonMaximumSuppression::clear_ClassLabels(v3);
      *(_DWORD *)(v3 + 104) = 101;
      operator new();
    }
    unint64_t v24 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts *)*((void *)a2 + 11);
    uint64_t v26 = *(unint64_t **)(v3 + 88);
    return (std::string *)CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts::MergeFrom(v26, v24);
  }
  else if (v22 == 100)
  {
    if (*(_DWORD *)(v3 + 104) != 100)
    {
      CoreML::Specification::NonMaximumSuppression::clear_ClassLabels(v3);
      *(_DWORD *)(v3 + 104) = 100;
      operator new();
    }
    uint64_t v23 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedStrings *)*((void *)a2 + 11);
    uint64_t v25 = *(std::string **)(v3 + 88);
    return CoreML::Specification::MILSpec::TensorValue_RepeatedStrings::MergeFrom(v25, v23);
  }
  return this;
}

void sub_19EB67224(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NonMaximumSuppression::IsInitialized(CoreML::Specification::NonMaximumSuppression *this)
{
  return 1;
}

uint64_t CoreML::Specification::NonMaximumSuppression::Clear(CoreML::Specification::NonMaximumSuppression *this)
{
  uint64_t v2 = *((void *)this + 2);
  if ((long long *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v2 = 0;
      *(unsigned char *)(v2 + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
    }
  }
  uint64_t v3 = *((void *)this + 3);
  if ((long long *)v3 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)uint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v3 = 0;
      *(unsigned char *)(v3 + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
    }
  }
  uint64_t v4 = *((void *)this + 4);
  if ((long long *)v4 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)uint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v4 = 0;
      *(unsigned char *)(v4 + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
    }
  }
  uint64_t v5 = *((void *)this + 5);
  if ((long long *)v5 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)uint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v5 = 0;
      *(unsigned char *)(v5 + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
    }
  }
  uint64_t v6 = *((void *)this + 6);
  if ((long long *)v6 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)uint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v6 = 0;
      *(unsigned char *)(v6 + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
    }
  }
  uint64_t v7 = *((void *)this + 7);
  if ((long long *)v7 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v7 + 23) < 0)
    {
      **(unsigned char **)uint64_t v7 = 0;
      *(void *)(v7 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v7 = 0;
      *(unsigned char *)(v7 + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
    }
  }
  *((void *)this + 8) = 0;
  *((void *)this + 9) = 0;
  if (*((_DWORD *)this + 25) == 1)
  {
    uint64_t v8 = *((void *)this + 10);
    if (v8) {
      (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
    }
  }
  *((_DWORD *)this + 25) = 0;

  return CoreML::Specification::NonMaximumSuppression::clear_ClassLabels((uint64_t)this);
}

void CoreML::Specification::NonMaximumSuppression::New(CoreML::Specification::NonMaximumSuppression *this, google::protobuf::Arena *a2)
{
}

void sub_19EB67458(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C40D18C2FB1);
  _Unwind_Resume(a1);
}

CoreML::Specification::NonMaximumSuppression *CoreML::Specification::NonMaximumSuppression::NonMaximumSuppression(CoreML::Specification::NonMaximumSuppression *this)
{
  *(void *)this = &unk_1EF0D4E80;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::NonMaximumSuppression *)&CoreML::Specification::_NonMaximumSuppression_default_instance_) {
    CoreML::Specification::protobuf_NonMaximumSuppression_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 4) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 5) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 6) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 7) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 8) = 0;
  *((void *)this + 9) = 0;
  *((_DWORD *)this + 26) = 0;
  *((void *)this + 12) = 0;
  return this;
}

void sub_19EB674F8(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::NonMaximumSuppression>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::NonMaximumSuppression>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::NonMaximumSuppression>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::NonMaximumSuppression::New(CoreML::Specification::NonMaximumSuppression *this)
{
}

void *CoreML::Specification::NonMaximumSuppression::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.NonMaximumSuppression");
}

void CoreML::Specification::NonMaximumSuppression::~NonMaximumSuppression(CoreML::Specification::NonMaximumSuppression *this)
{
  CoreML::Specification::NonMaximumSuppression::~NonMaximumSuppression(this);

  JUMPOUT(0x19F3C1920);
}

{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;

  *(void *)this = &unk_1EF0D4E80;
  uint64_t v2 = *((void *)this + 2);
  if ((long long *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x19F3C1920](v2, 0x1012C40EC159624);
  }
  uint64_t v4 = *((void *)this + 3);
  if ((long long *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    MEMORY[0x19F3C1920](v4, 0x1012C40EC159624);
  }
  uint64_t v6 = *((void *)this + 4);
  if ((long long *)v6 != &google::protobuf::internal::fixed_address_empty_string && v6)
  {
    if (*(char *)(v6 + 23) < 0) {
      operator delete(*(void **)v6);
    }
    MEMORY[0x19F3C1920](v6, 0x1012C40EC159624);
  }
  uint64_t v7 = *((void *)this + 5);
  if ((long long *)v7 != &google::protobuf::internal::fixed_address_empty_string && v7)
  {
    if (*(char *)(v7 + 23) < 0) {
      operator delete(*(void **)v7);
    }
    MEMORY[0x19F3C1920](v7, 0x1012C40EC159624);
  }
  uint64_t v8 = *((void *)this + 6);
  if ((long long *)v8 != &google::protobuf::internal::fixed_address_empty_string && v8)
  {
    if (*(char *)(v8 + 23) < 0) {
      operator delete(*(void **)v8);
    }
    MEMORY[0x19F3C1920](v8, 0x1012C40EC159624);
  }
  uint64_t v9 = *((void *)this + 7);
  if ((long long *)v9 != &google::protobuf::internal::fixed_address_empty_string && v9)
  {
    if (*(char *)(v9 + 23) < 0) {
      operator delete(*(void **)v9);
    }
    MEMORY[0x19F3C1920](v9, 0x1012C40EC159624);
  }
  uint64_t v10 = *((_DWORD *)this + 25);
  if (v10)
  {
    if (v10 == 1)
    {
      uint64_t v11 = *((void *)this + 10);
      if (v11) {
        (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
      }
    }
    *((_DWORD *)this + 25) = 0;
  }
  if (*((_DWORD *)this + 26)) {
    CoreML::Specification::NonMaximumSuppression::clear_ClassLabels((uint64_t)this);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

void CoreML::Specification::NonMaximumSuppression_PickTop::New(CoreML::Specification::NonMaximumSuppression_PickTop *this)
{
}

void *CoreML::Specification::NonMaximumSuppression_PickTop::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.NonMaximumSuppression.PickTop");
}

void CoreML::Specification::NonMaximumSuppression_PickTop::~NonMaximumSuppression_PickTop(CoreML::Specification::NonMaximumSuppression_PickTop *this)
{
  *(void *)this = &unk_1EF0D8060;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);

  JUMPOUT(0x19F3C1920);
}

{
  *(void *)this = &unk_1EF0D8060;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

void CoreML::validate<(MLModelType)600>(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    uint64_t v4 = *(uint64_t **)(a2 + 16);
  }
  else {
    uint64_t v4 = &CoreML::Specification::_ModelDescription_default_instance_;
  }
  CoreML::Result::Result((CoreML::Result *)&v22);
  int v5 = *(_DWORD *)(a2 + 24);
  LODWORD(v16) = 0;
  CoreML::validateModelDescription((uint64_t)&v19, (uint64_t)v4, v5, (char *)&v16);
  int v6 = (int)v19;
  int v22 = v19;
  if (SHIBYTE(v24) < 0)
  {
    operator delete((void *)__p);
    int v6 = (int)v22;
  }
  long long __p = v20;
  uint64_t v24 = v21;
  if ((v6 & 0xFFFFFFEF) != 0) {
    goto LABEL_23;
  }
  uint64_t v7 = (unsigned int *)operator new(8uLL);
  *(void *)uint64_t v7 = 0x300000001;
  double v17 = v7 + 2;
  double v18 = v7 + 2;
  BOOL v16 = v7;
  CoreML::validateDescriptionsContainFeatureWithTypes<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>>((uint64_t)&v19, (uint64_t)(v4 + 2), 1, &v16);
  int v22 = v19;
  if (SHIBYTE(v24) < 0) {
    operator delete((void *)__p);
  }
  long long __p = v20;
  uint64_t v24 = v21;
  HIBYTE(v21) = 0;
  LOBYTE(v2CoreML::Specification::NonMaximumSuppression_PickTop::New(this, 0) = 0;
  operator delete(v7);
  if ((v22 & 0xFFFFFFEF) != 0) {
    goto LABEL_23;
  }
  if (*(_DWORD *)(a2 + 44) == 600)
  {
    uint64_t v9 = *(uint64_t **)(a2 + 32);
  }
  else
  {
    CoreML::Specification::protobuf_OneHotEncoder_2eproto::InitDefaults(v8);
    uint64_t v9 = &CoreML::Specification::_OneHotEncoder_default_instance_;
  }
  int v10 = *((unsigned __int8 *)v9 + 16);
  uint64_t v11 = (unsigned int *)operator new(4uLL);
  uint64_t v12 = v11;
  if (v10) {
    int v13 = 6;
  }
  else {
    int v13 = 5;
  }
  unsigned int *v11 = v13;
  double v17 = v11 + 1;
  double v18 = v11 + 1;
  BOOL v16 = v11;
  CoreML::validateDescriptionsContainFeatureWithTypes<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>>((uint64_t)&v19, (uint64_t)(v4 + 5), 1, &v16);
  int v22 = v19;
  if (SHIBYTE(v24) < 0) {
    operator delete((void *)__p);
  }
  long long __p = v20;
  uint64_t v24 = v21;
  HIBYTE(v21) = 0;
  LOBYTE(v2CoreML::Specification::NonMaximumSuppression_PickTop::New(this, 0) = 0;
  operator delete(v12);
  if ((v22 & 0xFFFFFFEF) != 0
    || (*(_DWORD *)(a2 + 44) != 600
      ? (CoreML::Specification::protobuf_OneHotEncoder_2eproto::InitDefaults(v14),
         uint64_t v15 = &CoreML::Specification::_OneHotEncoder_default_instance_)
      : (uint64_t v15 = *(uint64_t **)(a2 + 32)),
        *((_DWORD *)v15 + 9)))
  {
LABEL_23:
    *(void *)a1 = v22;
    *(_OWORD *)(a1 + 8) = __p;
    *(void *)(a1 + 24) = v24;
  }
  else
  {
    std::string::basic_string[abi:ne180100]<0>(&v19, "OneHotEncoder parameter incorrect type");
    *(void *)a1 = 13;
    std::operator+<char>();
    if (SHIBYTE(v20) < 0) {
      operator delete(v19);
    }
    if (SHIBYTE(v24) < 0) {
      operator delete((void *)__p);
    }
  }
}

void sub_19EB67B04(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  _Unwind_Resume(exception_object);
}

void CoreML::validate<(MLModelType)2001>(void *a1, uint64_t a2)
{
  uint64_t v2 = a1;
  if (*(void *)(a2 + 16)) {
    uint64_t v3 = *(uint64_t **)(a2 + 16);
  }
  else {
    uint64_t v3 = &CoreML::Specification::_ModelDescription_default_instance_;
  }
  if (*(_DWORD *)(a2 + 44) != 2001)
  {
    std::string::basic_string[abi:ne180100]<0>(&v108, "Model not a word tagger.");
    *uint64_t v2 = 13;
    std::operator+<char>();
LABEL_87:
    if ((SHIBYTE(v108.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return;
    }
    double v49 = (void *)v108.__r_.__value_.__r.__words[0];
    goto LABEL_89;
  }
  uint64_t v4 = *(const void ****)(a2 + 32);
  int v5 = v4[4];
  if (*((char *)v5 + 23) < 0) {
    int v6 = v5[1];
  }
  else {
    int v6 = (const void *)*((unsigned __int8 *)v5 + 23);
  }
  BOOL v7 = v6 != 0;
  uint64_t v8 = v4[3];
  if (*((char *)v8 + 23) < 0) {
    uint64_t v9 = v8[1];
  }
  else {
    uint64_t v9 = (const void *)*((unsigned __int8 *)v8 + 23);
  }
  if (v6) {
    int v10 = 2;
  }
  else {
    int v10 = 1;
  }
  if (!v9) {
    int v10 = v7;
  }
  uint64_t v11 = v4[5];
  if (*((char *)v11 + 23) < 0) {
    uint64_t v12 = v11[1];
  }
  else {
    uint64_t v12 = (const void *)*((unsigned __int8 *)v11 + 23);
  }
  if (v12) {
    ++v10;
  }
  int v13 = v4[6];
  if (*((char *)v13 + 23) < 0) {
    unint64_t v14 = v13[1];
  }
  else {
    unint64_t v14 = (const void *)*((unsigned __int8 *)v13 + 23);
  }
  if (v14) {
    ++v10;
  }
  if (*((_DWORD *)v3 + 12) != v10)
  {
    std::string::basic_string[abi:ne180100]<0>(&v108, "More model output features than the output features of the word tagger model.");
    *uint64_t v2 = 9;
    std::operator+<char>();
    goto LABEL_87;
  }
  if (v10)
  {
    uint64_t v15 = 0;
    uint64_t v102 = (uint64_t)(v3 + 2);
    uint64_t v101 = (uint64_t)(v3 + 5);
    int v106 = -1;
    int v107 = -1;
    int v105 = -1;
    int v16 = -1;
    double v17 = v4;
    unint64_t v104 = v3;
    do
    {
      double v18 = *(long long **)(*(void *)(v3[7] + 8 * v15 + 8) + 16);
      if (*((char *)v18 + 23) < 0)
      {
        std::string::__init_copy_ctor_external(&v108, *(const std::string::value_type **)v18, *((void *)v18 + 1));
      }
      else
      {
        long long v19 = *v18;
        v108.__r_.__value_.__r.__words[2] = *((void *)v18 + 2);
        *(_OWORD *)&v108.__r_.__value_.__l.__data_ = v19;
      }
      long long v20 = v4[3];
      char v21 = HIBYTE(v108.__r_.__value_.__r.__words[2]);
      int v22 = (void *)v108.__r_.__value_.__r.__words[0];
      if (*((char *)v20 + 23) < 0)
      {
        long long v20 = (const void **)*v20;
        std::string::size_type v23 = (std::string::size_type)v4[3][1];
      }
      else
      {
        std::string::size_type v23 = *((unsigned __int8 *)v20 + 23);
      }
      if ((v108.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type size = HIBYTE(v108.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type size = v108.__r_.__value_.__l.__size_;
      }
      if ((v108.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v25 = &v108;
      }
      else {
        uint64_t v25 = (std::string *)v108.__r_.__value_.__r.__words[0];
      }
      if (size >= v23) {
        size_t v26 = v23;
      }
      else {
        size_t v26 = size;
      }
      BOOL v27 = memcmp(v20, v25, v26) == 0 && size == v23;
      int v28 = v106;
      if (v27) {
        int v28 = v15;
      }
      int v106 = v28;
      uint64_t v29 = v4[4];
      if (*((char *)v29 + 23) < 0)
      {
        uint64_t v29 = (const void **)*v29;
        std::string::size_type v30 = (std::string::size_type)v4[4][1];
      }
      else
      {
        std::string::size_type v30 = *((unsigned __int8 *)v29 + 23);
      }
      if (size >= v30) {
        size_t v31 = v30;
      }
      else {
        size_t v31 = size;
      }
      BOOL v32 = memcmp(v29, v25, v31) == 0 && size == v30;
      int v33 = v107;
      if (v32) {
        int v33 = v15;
      }
      int v107 = v33;
      int v34 = v17[5];
      if (*((char *)v34 + 23) < 0)
      {
        int v34 = (const void **)*v34;
        std::string::size_type v35 = (std::string::size_type)v17[5][1];
      }
      else
      {
        std::string::size_type v35 = *((unsigned __int8 *)v34 + 23);
      }
      if (size >= v35) {
        size_t v36 = v35;
      }
      else {
        size_t v36 = size;
      }
      BOOL v37 = memcmp(v34, v25, v36) == 0 && size == v35;
      int v38 = v105;
      if (v37) {
        int v38 = v15;
      }
      int v105 = v38;
      int v39 = v17[6];
      if (*((char *)v39 + 23) < 0)
      {
        int v39 = (const void **)*v39;
        std::string::size_type v40 = (std::string::size_type)v17[6][1];
      }
      else
      {
        std::string::size_type v40 = *((unsigned __int8 *)v39 + 23);
      }
      if (size >= v40) {
        size_t v41 = v40;
      }
      else {
        size_t v41 = size;
      }
      BOOL v43 = memcmp(v39, v25, v41) == 0 && size == v40;
      BOOL v42 = !v43;
      BOOL v44 = v43 || v37 || v32 || v27;
      if (!v42) {
        int v16 = v15;
      }
      if (!v44)
      {
        std::operator+<char>();
        BOOL v50 = std::string::append(&v112, "' was not required by the output features of the word tagger model.");
        long long v51 = *(_OWORD *)&v50->__r_.__value_.__l.__data_;
        v110.__r_.__value_.__r.__words[2] = v50->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v110.__r_.__value_.__l.__data_ = v51;
        v50->__r_.__value_.__l.__size_ = 0;
        v50->__r_.__value_.__r.__words[2] = 0;
        v50->__r_.__value_.__r.__words[0] = 0;
        *a1 = 9;
        std::operator+<char>();
        if (SHIBYTE(v110.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v110.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v112.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v112.__r_.__value_.__l.__data_);
        }
        goto LABEL_87;
      }
      if (v21 < 0) {
        operator delete(v22);
      }
      ++v15;
      uint64_t v3 = v104;
      uint64_t v4 = v17;
    }
    while (v15 < *((int *)v104 + 12));
    if (v107 == -1)
    {
      uint64_t v2 = a1;
      goto LABEL_96;
    }
    CoreML::Result::Result((CoreML::Result *)&v110);
    int v45 = operator new(4uLL);
    _DWORD *v45 = 3;
    v112.__r_.__value_.__l.__size_ = (std::string::size_type)(v45 + 1);
    v112.__r_.__value_.__r.__words[2] = (std::string::size_type)(v45 + 1);
    v112.__r_.__value_.__r.__words[0] = (std::string::size_type)v45;
    CoreML::validateDescriptionsContainFeatureWithTypes<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>>((uint64_t)&v108, v102, 1, (unsigned int **)&v112);
    v110.__r_.__value_.__r.__words[0] = v108.__r_.__value_.__r.__words[0];
    if (SHIBYTE(v111) < 0) {
      operator delete((void *)v110.__r_.__value_.__l.__size_);
    }
    *(_OWORD *)&v110.__r_.__value_.__r.__words[1] = *(_OWORD *)&v108.__r_.__value_.__r.__words[1];
    uint64_t v111 = v109;
    HIBYTE(v109) = 0;
    v108.__r_.__value_.__s.__data_[8] = 0;
    operator delete(v45);
    if (((uint64_t)v110.__r_.__value_.__l.__data_ & 0xFFFFFFEF) != 0) {
      goto LABEL_82;
    }
    int v46 = *((_DWORD *)v104 + 12);
    unint64_t v47 = operator new(4uLL);
    *unint64_t v47 = 7;
    v112.__r_.__value_.__l.__size_ = (std::string::size_type)(v47 + 1);
    v112.__r_.__value_.__r.__words[2] = (std::string::size_type)(v47 + 1);
    v112.__r_.__value_.__r.__words[0] = (std::string::size_type)v47;
    CoreML::validateDescriptionsContainFeatureWithTypes<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>>((uint64_t)&v108, v101, v46, (unsigned int **)&v112);
    v110.__r_.__value_.__r.__words[0] = v108.__r_.__value_.__r.__words[0];
    if (SHIBYTE(v111) < 0) {
      operator delete((void *)v110.__r_.__value_.__l.__size_);
    }
    *(_OWORD *)&v110.__r_.__value_.__r.__words[1] = *(_OWORD *)&v108.__r_.__value_.__r.__words[1];
    uint64_t v111 = v109;
    HIBYTE(v109) = 0;
    v108.__r_.__value_.__s.__data_[8] = 0;
    operator delete(v47);
    if (((uint64_t)v110.__r_.__value_.__l.__data_ & 0xFFFFFFEF) != 0)
    {
LABEL_82:
      *(std::string *)a1 = v110;
      a1[3] = v111;
LABEL_83:
      *(_OWORD *)&v110.__r_.__value_.__r.__words[1] = 0uLL;
      uint64_t v111 = 0;
LABEL_84:
      if ((SHIBYTE(v111) & 0x80000000) == 0) {
        return;
      }
      double v49 = (void *)v110.__r_.__value_.__l.__size_;
      goto LABEL_89;
    }
    unint64_t v54 = *(uint64_t **)(*(void *)(v104[7] + 8 * v107 + 8) + 32);
    if (!v54) {
      unint64_t v54 = &CoreML::Specification::_FeatureType_default_instance_;
    }
    if (*((_DWORD *)v54 + 9) == 7)
    {
      unint64_t v55 = (uint64_t *)v54[3];
    }
    else
    {
      inited = CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults((CoreML::Specification::protobuf_FeatureTypes_2eproto *)inited);
      unint64_t v55 = &CoreML::Specification::_SequenceFeatureType_default_instance_;
    }
    if (*((_DWORD *)v55 + 9) == 3)
    {
      if (v106 == -1) {
        goto LABEL_133;
      }
      unint64_t v56 = *(uint64_t **)(*(void *)(v104[7] + 8 * v106 + 8) + 32);
      if (!v56) {
        unint64_t v56 = &CoreML::Specification::_FeatureType_default_instance_;
      }
      if (*((_DWORD *)v56 + 9) == 7)
      {
        unint64_t v57 = (uint64_t *)v56[3];
      }
      else
      {
        inited = CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults((CoreML::Specification::protobuf_FeatureTypes_2eproto *)inited);
        unint64_t v57 = &CoreML::Specification::_SequenceFeatureType_default_instance_;
      }
      if (*((_DWORD *)v57 + 9) == 3)
      {
LABEL_133:
        if (v105 == -1) {
          goto LABEL_152;
        }
        int64_t v68 = *(uint64_t **)(*(void *)(v104[7] + 8 * v105 + 8) + 32);
        if (!v68) {
          int64_t v68 = &CoreML::Specification::_FeatureType_default_instance_;
        }
        if (*((_DWORD *)v68 + 9) == 7)
        {
          unint64_t v69 = (uint64_t *)v68[3];
        }
        else
        {
          inited = CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults((CoreML::Specification::protobuf_FeatureTypes_2eproto *)inited);
          unint64_t v69 = &CoreML::Specification::_SequenceFeatureType_default_instance_;
        }
        if (*((_DWORD *)v69 + 9) == 1)
        {
LABEL_152:
          if (v16 == -1) {
            goto LABEL_193;
          }
          uint64_t v73 = *(uint64_t **)(*(void *)(v104[7] + 8 * v16 + 8) + 32);
          if (!v73) {
            uint64_t v73 = &CoreML::Specification::_FeatureType_default_instance_;
          }
          if (*((_DWORD *)v73 + 9) == 7)
          {
            uint64_t v74 = (uint64_t *)v73[3];
          }
          else
          {
            CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults((CoreML::Specification::protobuf_FeatureTypes_2eproto *)inited);
            uint64_t v74 = &CoreML::Specification::_SequenceFeatureType_default_instance_;
          }
          if (*((_DWORD *)v74 + 9) == 1)
          {
LABEL_193:
            if (*((_DWORD *)v17 + 16))
            {
              if (*((_DWORD *)v17 + 21) == 200 && *((int *)v17[9] + 6) > 0)
              {
                unint64_t v84 = v17[7];
                if (*((char *)v84 + 23) < 0) {
                  uint64_t v85 = v84[1];
                }
                else {
                  uint64_t v85 = (const void *)*((unsigned __int8 *)v84 + 23);
                }
                if (v85)
                {
                  *(std::string *)a1 = v110;
                  a1[3] = v111;
                  goto LABEL_83;
                }
                std::string::basic_string[abi:ne180100]<0>(&v108, "Model parameter data not set");
                *a1 = 13;
                std::operator+<char>();
              }
              else
              {
                std::string::basic_string[abi:ne180100]<0>(&v108, "Model output tags not set. Must have at least one tag");
                *a1 = 13;
                std::operator+<char>();
              }
            }
            else
            {
              std::string::basic_string[abi:ne180100]<0>(&v108, "Model revision number not set. Must be >= 1");
              *a1 = 13;
              std::operator+<char>();
            }
            if (SHIBYTE(v108.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v108.__r_.__value_.__l.__data_);
            }
            goto LABEL_84;
          }
          std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream[abi:ne180100]((uint64_t)&v108);
          int64_t v86 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&v108.__r_.__value_.__r.__words[2], (uint64_t)"Unsupported type \"", 18);
          uint64_t v87 = *((unsigned int *)v74 + 9);
          if (v87 > 8) {
            unint64_t v88 = "INVALID";
          }
          else {
            unint64_t v88 = off_1E59A5540[v87];
          }
          size_t v95 = strlen(v88);
          unint64_t v96 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v86, (uint64_t)v88, v95);
          uint64_t v97 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v96, (uint64_t)"\" for feature \"", 15);
          std::operator+[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>((void **)&v112.__r_.__value_.__l.__data_, v4[6], "\". Should be: ");
          if ((v112.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            unint64_t v98 = &v112;
          }
          else {
            unint64_t v98 = (std::string *)v112.__r_.__value_.__r.__words[0];
          }
          if ((v112.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            std::string::size_type v99 = HIBYTE(v112.__r_.__value_.__r.__words[2]);
          }
          else {
            std::string::size_type v99 = v112.__r_.__value_.__l.__size_;
          }
          uint64_t v100 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v97, (uint64_t)v98, v99);
          std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v100, (uint64_t)"MLFeatureTypeType_int64Type", 27);
          if (SHIBYTE(v112.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v112.__r_.__value_.__l.__data_);
          }
          std::stringbuf::str();
          *a1 = 2;
          std::operator+<char>();
LABEL_184:
          if (SHIBYTE(v112.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v112.__r_.__value_.__l.__data_);
          }
          std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::~basic_stringstream((uint64_t)&v108);
          goto LABEL_84;
        }
        std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream[abi:ne180100]((uint64_t)&v108);
        uint64_t v58 = a1;
        unint64_t v75 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&v108.__r_.__value_.__r.__words[2], (uint64_t)"Unsupported type \"", 18);
        uint64_t v76 = *((unsigned int *)v69 + 9);
        if (v76 > 8) {
          unint64_t v77 = "INVALID";
        }
        else {
          unint64_t v77 = off_1E59A5540[v76];
        }
        size_t v89 = strlen(v77);
        uint64_t v90 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v75, (uint64_t)v77, v89);
        uint64_t v91 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v90, (uint64_t)"\" for feature \"", 15);
        std::operator+[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>((void **)&v112.__r_.__value_.__l.__data_, v4[5], "\". Should be: ");
        if ((v112.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          uint64_t v92 = &v112;
        }
        else {
          uint64_t v92 = (std::string *)v112.__r_.__value_.__r.__words[0];
        }
        if ((v112.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          std::string::size_type v93 = HIBYTE(v112.__r_.__value_.__r.__words[2]);
        }
        else {
          std::string::size_type v93 = v112.__r_.__value_.__l.__size_;
        }
        uint64_t v94 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v91, (uint64_t)v92, v93);
        std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v94, (uint64_t)"MLFeatureTypeType_int64Type", 27);
        if (SHIBYTE(v112.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v112.__r_.__value_.__l.__data_);
        }
      }
      else
      {
        std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream[abi:ne180100]((uint64_t)&v108);
        uint64_t v58 = a1;
        unint64_t v70 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&v108.__r_.__value_.__r.__words[2], (uint64_t)"Unsupported type \"", 18);
        uint64_t v71 = *((unsigned int *)v57 + 9);
        if (v71 > 8) {
          unint64_t v72 = "INVALID";
        }
        else {
          unint64_t v72 = off_1E59A5540[v71];
        }
        size_t v78 = strlen(v72);
        unint64_t v79 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v70, (uint64_t)v72, v78);
        unint64_t v80 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v79, (uint64_t)"\" for feature \"", 15);
        std::operator+[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>((void **)&v112.__r_.__value_.__l.__data_, v4[3], "\". Should be: ");
        if ((v112.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          unint64_t v81 = &v112;
        }
        else {
          unint64_t v81 = (std::string *)v112.__r_.__value_.__r.__words[0];
        }
        if ((v112.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          std::string::size_type v82 = HIBYTE(v112.__r_.__value_.__r.__words[2]);
        }
        else {
          std::string::size_type v82 = v112.__r_.__value_.__l.__size_;
        }
        unint64_t v83 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v80, (uint64_t)v81, v82);
        std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v83, (uint64_t)"MLFeatureTypeType_stringType", 28);
        if (SHIBYTE(v112.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v112.__r_.__value_.__l.__data_);
        }
      }
    }
    else
    {
      std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream[abi:ne180100]((uint64_t)&v108);
      uint64_t v58 = a1;
      unint64_t v59 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&v108.__r_.__value_.__r.__words[2], (uint64_t)"Unsupported type \"", 18);
      uint64_t v60 = *((unsigned int *)v55 + 9);
      if (v60 > 8) {
        unint64_t v61 = "INVALID";
      }
      else {
        unint64_t v61 = off_1E59A5540[v60];
      }
      size_t v62 = strlen(v61);
      int64_t v63 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v59, (uint64_t)v61, v62);
      int64_t v64 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v63, (uint64_t)"\" for feature \"", 15);
      std::operator+[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>((void **)&v112.__r_.__value_.__l.__data_, v4[4], "\". Should be: ");
      if ((v112.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v65 = &v112;
      }
      else {
        uint64_t v65 = (std::string *)v112.__r_.__value_.__r.__words[0];
      }
      if ((v112.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type v66 = HIBYTE(v112.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type v66 = v112.__r_.__value_.__l.__size_;
      }
      unint64_t v67 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v64, (uint64_t)v65, v66);
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v67, (uint64_t)"MLFeatureTypeType_stringType", 28);
      if (SHIBYTE(v112.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v112.__r_.__value_.__l.__data_);
      }
    }
    std::stringbuf::str();
    *uint64_t v58 = 2;
    std::operator+<char>();
    goto LABEL_184;
  }
LABEL_96:
  std::operator+<char>();
  long long v52 = std::string::append(&v110, "' (defined by tokenTagsOutputFeatureName) to the model is not present in the model description.");
  long long v53 = *(_OWORD *)&v52->__r_.__value_.__l.__data_;
  v108.__r_.__value_.__r.__words[2] = v52->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v108.__r_.__value_.__l.__data_ = v53;
  v52->__r_.__value_.__l.__size_ = 0;
  v52->__r_.__value_.__r.__words[2] = 0;
  v52->__r_.__value_.__r.__words[0] = 0;
  *uint64_t v2 = 10;
  std::operator+<char>();
  if (SHIBYTE(v108.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v108.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v110.__r_.__value_.__r.__words[2]) < 0)
  {
    double v49 = (void *)v110.__r_.__value_.__r.__words[0];
LABEL_89:
    operator delete(v49);
  }
}

void sub_19EB68740(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v20 - 113) < 0) {
    operator delete(*(void **)(v20 - 136));
  }
  _Unwind_Resume(exception_object);
}

void CoreML::validate<(MLModelType)2005>(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    uint64_t v3 = *(uint64_t **)(a2 + 16);
  }
  else {
    uint64_t v3 = &CoreML::Specification::_ModelDescription_default_instance_;
  }
  if (*(_DWORD *)(a2 + 44) == 2005)
  {
    CoreML::Result::Result((CoreML::Result *)&v18);
    int v5 = (unsigned int *)operator new(4uLL);
    *int v5 = 3;
    int v13 = v5 + 1;
    unint64_t v14 = v5 + 1;
    uint64_t v12 = v5;
    CoreML::validateDescriptionsContainFeatureWithTypes<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>>((uint64_t)&v15, (uint64_t)(v3 + 2), 1, &v12);
    double v18 = v15;
    if (SHIBYTE(v20) < 0) {
      operator delete((void *)__p);
    }
    long long __p = v16;
    uint64_t v20 = v17;
    HIBYTE(v17) = 0;
    LOBYTE(v16) = 0;
    operator delete(v5);
    if ((v18 & 0xFFFFFFEF) != 0) {
      goto LABEL_11;
    }
    int v6 = (unsigned int *)operator new(4uLL);
    *int v6 = 5;
    int v13 = v6 + 1;
    unint64_t v14 = v6 + 1;
    uint64_t v12 = v6;
    CoreML::validateDescriptionsContainFeatureWithTypes<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>>((uint64_t)&v15, (uint64_t)(v3 + 5), 1, &v12);
    double v18 = v15;
    if (SHIBYTE(v20) < 0) {
      operator delete((void *)__p);
    }
    long long __p = v16;
    uint64_t v20 = v17;
    HIBYTE(v17) = 0;
    LOBYTE(v16) = 0;
    operator delete(v6);
    if ((v18 & 0xFFFFFFEF) != 0) {
      goto LABEL_11;
    }
    if (*(_DWORD *)(a2 + 44) == 2005)
    {
      uint64_t v9 = *(uint64_t **)(a2 + 32);
    }
    else
    {
      CoreML::Specification::CoreMLModels::protobuf_WordEmbedding_2eproto::InitDefaults(v7);
      uint64_t v9 = &CoreML::Specification::CoreMLModels::_WordEmbedding_default_instance_;
    }
    if (*((_DWORD *)v9 + 8) > 1u)
    {
      uint64_t v10 = v9[3];
      if (*(char *)(v10 + 23) < 0) {
        uint64_t v11 = *(void *)(v10 + 8);
      }
      else {
        uint64_t v11 = *(unsigned __int8 *)(v10 + 23);
      }
      if (v11)
      {
LABEL_11:
        *(void *)a1 = v18;
        *(_OWORD *)(a1 + 8) = __p;
        *(void *)(a1 + 24) = v20;
        long long __p = 0uLL;
        uint64_t v20 = 0;
LABEL_12:
        if ((SHIBYTE(v20) & 0x80000000) == 0) {
          return;
        }
        uint64_t v8 = (void *)__p;
        goto LABEL_16;
      }
      std::string::basic_string[abi:ne180100]<0>(&v15, "Model parameter data not set");
      *(void *)a1 = 13;
      std::operator+<char>();
    }
    else
    {
      std::string::basic_string[abi:ne180100]<0>(&v15, "Model revision number missing or invalid. Must be >= 2");
      *(void *)a1 = 13;
      std::operator+<char>();
    }
    if (SHIBYTE(v16) < 0) {
      operator delete(v15);
    }
    goto LABEL_12;
  }
  std::string::basic_string[abi:ne180100]<0>(&v18, "Model not a word embedding.");
  *(void *)a1 = 13;
  std::operator+<char>();
  if ((SHIBYTE(__p) & 0x80000000) == 0) {
    return;
  }
  uint64_t v8 = v18;
LABEL_16:
  operator delete(v8);
}

void sub_19EB68B38(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, uint64_t a20,void *a21,int a22,__int16 a23,char a24,char a25,int a26,__int16 a27,char a28,char a29)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  if (a29 < 0) {
    operator delete(a21);
  }
  _Unwind_Resume(exception_object);
}

void CoreML::validate<(MLModelType)2000>(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    uint64_t v3 = *(uint64_t **)(a2 + 16);
  }
  else {
    uint64_t v3 = &CoreML::Specification::_ModelDescription_default_instance_;
  }
  if (*(_DWORD *)(a2 + 44) == 2000)
  {
    CoreML::Result::Result((CoreML::Result *)&v18);
    int v5 = (unsigned int *)operator new(4uLL);
    *int v5 = 3;
    int v13 = v5 + 1;
    unint64_t v14 = v5 + 1;
    uint64_t v12 = v5;
    CoreML::validateDescriptionsContainFeatureWithTypes<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>>((uint64_t)&v15, (uint64_t)(v3 + 2), 1, &v12);
    double v18 = v15;
    if (SHIBYTE(v20) < 0) {
      operator delete((void *)__p);
    }
    long long __p = v16;
    uint64_t v20 = v17;
    HIBYTE(v17) = 0;
    LOBYTE(v16) = 0;
    operator delete(v5);
    if ((v18 & 0xFFFFFFEF) != 0) {
      goto LABEL_11;
    }
    int v6 = (unsigned int *)operator new(4uLL);
    *int v6 = 3;
    int v13 = v6 + 1;
    unint64_t v14 = v6 + 1;
    uint64_t v12 = v6;
    CoreML::validateDescriptionsContainFeatureWithTypes<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>>((uint64_t)&v15, (uint64_t)(v3 + 5), 1, &v12);
    double v18 = v15;
    if (SHIBYTE(v20) < 0) {
      operator delete((void *)__p);
    }
    long long __p = v16;
    uint64_t v20 = v17;
    HIBYTE(v17) = 0;
    LOBYTE(v16) = 0;
    operator delete(v6);
    if ((v18 & 0xFFFFFFEF) != 0) {
      goto LABEL_11;
    }
    if (*(_DWORD *)(a2 + 44) == 2000)
    {
      uint64_t v9 = *(uint64_t **)(a2 + 32);
    }
    else
    {
      CoreML::Specification::CoreMLModels::protobuf_TextClassifier_2eproto::InitDefaults(v7);
      uint64_t v9 = &CoreML::Specification::CoreMLModels::_TextClassifier_default_instance_;
    }
    if (*((_DWORD *)v9 + 8))
    {
      if (*((_DWORD *)v9 + 13) == 200 && *(int *)(v9[5] + 24) > 0)
      {
        uint64_t v10 = v9[3];
        if (*(char *)(v10 + 23) < 0) {
          uint64_t v11 = *(void *)(v10 + 8);
        }
        else {
          uint64_t v11 = *(unsigned __int8 *)(v10 + 23);
        }
        if (v11)
        {
LABEL_11:
          *(void *)a1 = v18;
          *(_OWORD *)(a1 + 8) = __p;
          *(void *)(a1 + 24) = v20;
          long long __p = 0uLL;
          uint64_t v20 = 0;
LABEL_12:
          if ((SHIBYTE(v20) & 0x80000000) == 0) {
            return;
          }
          uint64_t v8 = (void *)__p;
          goto LABEL_16;
        }
        std::string::basic_string[abi:ne180100]<0>(&v15, "Model parameter data not set");
        *(void *)a1 = 13;
        std::operator+<char>();
      }
      else
      {
        std::string::basic_string[abi:ne180100]<0>(&v15, "Model output class label not set. Must have at least one class label");
        *(void *)a1 = 13;
        std::operator+<char>();
      }
    }
    else
    {
      std::string::basic_string[abi:ne180100]<0>(&v15, "Model revision number not set. Must be >= 1");
      *(void *)a1 = 13;
      std::operator+<char>();
    }
    if (SHIBYTE(v16) < 0) {
      operator delete(v15);
    }
    goto LABEL_12;
  }
  std::string::basic_string[abi:ne180100]<0>(&v18, "Model not a text classifier.");
  *(void *)a1 = 13;
  std::operator+<char>();
  if ((SHIBYTE(__p) & 0x80000000) == 0) {
    return;
  }
  uint64_t v8 = v18;
LABEL_16:
  operator delete(v8);
}

void sub_19EB68E7C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, uint64_t a20,void *a21,int a22,__int16 a23,char a24,char a25,int a26,__int16 a27,char a28,char a29)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  if (a29 < 0) {
    operator delete(a21);
  }
  _Unwind_Resume(exception_object);
}

void CoreML::Recommender::constructAndValidateItemSimilarityRecommenderFromSpec(CoreML::Recommender *this, const CoreML::Specification::Model *a2)
{
  uint64_t v190 = *MEMORY[0x1E4F143B8];
  if (*((void *)a2 + 2)) {
    uint64_t v4 = (uint64_t *)*((void *)a2 + 2);
  }
  else {
    uint64_t v4 = &CoreML::Specification::_ModelDescription_default_instance_;
  }
  int v5 = *((_DWORD *)a2 + 6);
  LODWORD(v17CoreML::Specification::NonMaximumSuppression_PickTop::New(this, 0) = 0;
  CoreML::validateModelDescription((uint64_t)&v182, (uint64_t)v4, v5, (char *)&v170);
  if ((v182 & 0xFFFFFFEF) != 0 || (unint64_t v161 = v4, *((_DWORD *)a2 + 11) != 501))
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, &__p);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x1E4FBA4E8] + 16);
    __cxa_throw(exception, (struct type_info *)off_1E59A3028, MEMORY[0x1E4FBA1E8]);
  }
  uint64_t v6 = *((void *)a2 + 4);
  int v170 = &unk_1EF0D69D0;
  long long v172 = 0u;
  long long v171 = 0u;
  unsigned int v7 = *(_DWORD *)(v6 + 24);
  if (v7)
  {
    uint64_t v8 = *(void *)(v6 + 32);
    uint64_t v9 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)((char *)&v171 + 8), *(_DWORD *)(v6 + 24));
    google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<CoreML::Specification::ItemSimilarityRecommender_SimilarItems>::TypeHandler>((unint64_t *)&v171 + 1, (unint64_t **)v9, (const CoreML::Specification::ItemSimilarityRecommender_SimilarItems **)(v8 + 8), v7, **((_DWORD **)&v172 + 1) - v172);
    int v10 = v172 + v7;
    LODWORD(v172) = v10;
    if (**((_DWORD **)&v172 + 1) < v10) {
      **((_DWORD **)&v172 + 1) = v10;
    }
  }
  int v181 = 0;
  uint64_t v11 = *(void *)(v6 + 8);
  if (v11) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)&v171, v11 & 0xFFFFFFFFFFFFFFFELL);
  }
  __str = (std::string *)&google::protobuf::internal::fixed_address_empty_string;
  uint64_t v12 = *(void *)(v6 + 40);
  if (*(char *)(v12 + 23) < 0) {
    uint64_t v13 = *(void *)(v12 + 8);
  }
  else {
    uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
  }
  if ((long long *)v12 != &google::protobuf::internal::fixed_address_empty_string && v13) {
    google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
  }
  v174 = (std::string *)&google::protobuf::internal::fixed_address_empty_string;
  uint64_t v14 = *(void *)(v6 + 48);
  if (*(char *)(v14 + 23) < 0) {
    uint64_t v15 = *(void *)(v14 + 8);
  }
  else {
    uint64_t v15 = *(unsigned __int8 *)(v14 + 23);
  }
  if ((long long *)v14 != &google::protobuf::internal::fixed_address_empty_string && v15) {
    google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
  }
  v175 = (std::string *)&google::protobuf::internal::fixed_address_empty_string;
  uint64_t v16 = *(void *)(v6 + 56);
  if (*(char *)(v16 + 23) < 0) {
    uint64_t v17 = *(void *)(v16 + 8);
  }
  else {
    uint64_t v17 = *(unsigned __int8 *)(v16 + 23);
  }
  if ((long long *)v16 != &google::protobuf::internal::fixed_address_empty_string && v17) {
    google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
  }
  v176 = (std::string *)&google::protobuf::internal::fixed_address_empty_string;
  uint64_t v18 = *(void *)(v6 + 64);
  if (*(char *)(v18 + 23) < 0) {
    uint64_t v19 = *(void *)(v18 + 8);
  }
  else {
    uint64_t v19 = *(unsigned __int8 *)(v18 + 23);
  }
  if ((long long *)v18 != &google::protobuf::internal::fixed_address_empty_string && v19) {
    google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
  }
  v177 = (std::string *)&google::protobuf::internal::fixed_address_empty_string;
  uint64_t v20 = *(void *)(v6 + 72);
  if (*(char *)(v20 + 23) < 0) {
    uint64_t v21 = *(void *)(v20 + 8);
  }
  else {
    uint64_t v21 = *(unsigned __int8 *)(v20 + 23);
  }
  if ((long long *)v20 != &google::protobuf::internal::fixed_address_empty_string && v21) {
    google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
  }
  uint64_t v178 = (std::string *)&google::protobuf::internal::fixed_address_empty_string;
  uint64_t v22 = *(void *)(v6 + 80);
  if (*(char *)(v22 + 23) < 0) {
    uint64_t v23 = *(void *)(v22 + 8);
  }
  else {
    uint64_t v23 = *(unsigned __int8 *)(v22 + 23);
  }
  if ((long long *)v22 != &google::protobuf::internal::fixed_address_empty_string && v23) {
    google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
  }
  if ((uint64_t *)v6 == &CoreML::Specification::_ItemSimilarityRecommender_default_instance_)
  {
    uint64_t v24 = 0;
    uint64_t v179 = 0;
  }
  else
  {
    if (*(void *)(v6 + 88)) {
      operator new();
    }
    uint64_t v179 = 0;
    if (*(void *)(v6 + 96)) {
      operator new();
    }
    uint64_t v24 = 0;
  }
  unint64_t v156 = this;
  uint64_t v180 = 0;
  uint64_t v25 = (char *)operator new(0x110uLL);
  size_t v26 = v25;
  *(_OWORD *)(v25 + 8) = 0u;
  *(void *)uint64_t v25 = &unk_1EF0DD618;
  *((_OWORD *)v25 + 2) = 0u;
  v166 = (uint64_t **)(v25 + 32);
  *((void *)v25 + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v25 + 32;
  BOOL v27 = v25 + 24;
  *(_OWORD *)(v25 + 56) = 0u;
  *((_OWORD *)v25 + 5) = 0u;
  uint64_t v158 = (std::string *)(v25 + 80);
  *((void *)v25 + 6) = v25 + 56;
  *((_OWORD *)v25 + 8) = 0u;
  unint64_t v159 = (std::string *)(v25 + 128);
  BOOL v160 = (std::string *)(v25 + 104);
  uint64_t v162 = (std::string *)(v25 + 152);
  *((_OWORD *)v25 + 11) = 0u;
  int v28 = (std::string *)(v25 + 176);
  *((_OWORD *)v25 + 14) = 0u;
  unint64_t v155 = (void **)(v25 + 224);
  unint64_t v157 = (std::string *)(v25 + 200);
  v163 = (std::vector<std::string> *)(v25 + 248);
  v164 = (uint64_t **)(v25 + 56);
  *((_OWORD *)v25 + 6) = 0u;
  *((_OWORD *)v25 + 7) = 0u;
  *((_OWORD *)v25 + 9) = 0u;
  *((_OWORD *)v25 + 1CoreML::Specification::NonMaximumSuppression_PickTop::New(this, 0) = 0u;
  *((_OWORD *)v25 + 12) = 0u;
  *((_OWORD *)v25 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0u;
  *((_OWORD *)v25 + 15) = 0u;
  *((_OWORD *)v25 + 16) = 0u;
  uint64_t v165 = v172;
  v167 = v25;
  v168 = v25 + 24;
  if ((int)v172 < 1)
  {
    unint64_t v30 = 0;
  }
  else
  {
    std::string::size_type v154 = (std::string *)(v25 + 176);
    uint64_t v29 = 0;
    unint64_t v30 = 0;
    do
    {
      uint64_t v31 = *(void *)(*((void *)&v172 + 1) + 8 * v29 + 8);
      unint64_t v32 = *(void *)(v31 + 40);
      int v33 = v166;
      while (1)
      {
        int v34 = *v33;
        std::string::size_type v35 = v33;
        if (!*v33) {
          break;
        }
        while (1)
        {
          int v33 = (uint64_t **)v34;
          unint64_t v36 = v34[4];
          if (v32 < v36) {
            break;
          }
          if (v36 >= v32)
          {
            BOOL v37 = (uint64_t *)v33;
            goto LABEL_66;
          }
          int v34 = v33[1];
          if (!v34)
          {
            std::string::size_type v35 = v33 + 1;
            goto LABEL_62;
          }
        }
      }
LABEL_62:
      BOOL v37 = (uint64_t *)operator new(0x40uLL);
      v37[4] = v32;
      v37[5] = 0;
      v37[6] = 0;
      v37[7] = 0;
      *BOOL v37 = 0;
      v37[1] = 0;
      v37[2] = (uint64_t)v33;
      unsigned __int8 *v35 = v37;
      int v38 = **(void ***)v168;
      int v39 = v37;
      if (v38)
      {
        *(void *)v168 = v38;
        int v39 = *v35;
      }
      std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(*((uint64_t **)v26 + 4), v39);
      ++*((void *)v26 + 5);
LABEL_66:
      if (v30 <= v32) {
        unint64_t v30 = v32;
      }
      uint64_t v40 = *(unsigned int *)(v31 + 24);
      if ((int)v40 <= 0)
      {
        BOOL v42 = (unint64_t *)v37[6];
      }
      else
      {
        uint64_t v41 = 0;
        BOOL v42 = (unint64_t *)v37[6];
        do
        {
          uint64_t v43 = *(void *)(*(void *)(v31 + 32) + 8 * v41 + 8);
          unint64_t v44 = *(void *)(v43 + 16);
          unint64_t v45 = *(void *)(v43 + 24);
          unint64_t v46 = v37[7];
          if ((unint64_t)v42 >= v46)
          {
            unint64_t v47 = (unint64_t *)v37[5];
            uint64_t v48 = ((char *)v42 - (char *)v47) >> 4;
            unint64_t v49 = v48 + 1;
            if ((unint64_t)(v48 + 1) >> 60) {
              std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__throw_length_error[abi:ne180100]();
            }
            uint64_t v50 = v46 - (void)v47;
            if (v50 >> 3 > v49) {
              unint64_t v49 = v50 >> 3;
            }
            BOOL v51 = (unint64_t)v50 >= 0x7FFFFFFFFFFFFFF0;
            unint64_t v52 = 0xFFFFFFFFFFFFFFFLL;
            if (!v51) {
              unint64_t v52 = v49;
            }
            if (v52)
            {
              unint64_t v52 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<CoreML::NNCompiler::MLRangeShape::Range>>(v52);
              unint64_t v47 = (unint64_t *)v37[5];
              BOOL v42 = (unint64_t *)v37[6];
            }
            else
            {
              uint64_t v53 = 0;
            }
            unint64_t v54 = (unint64_t *)(v52 + 16 * v48);
            *unint64_t v54 = v44;
            v54[1] = v45;
            unint64_t v55 = v54;
            if (v42 != v47)
            {
              do
              {
                *((_OWORD *)v55 - 1) = *((_OWORD *)v42 - 1);
                v55 -= 2;
                v42 -= 2;
              }
              while (v42 != v47);
              unint64_t v47 = (unint64_t *)v37[5];
            }
            BOOL v42 = v54 + 2;
            v37[5] = (uint64_t)v55;
            v37[6] = (uint64_t)(v54 + 2);
            v37[7] = v52 + 16 * v53;
            if (v47) {
              operator delete(v47);
            }
          }
          else
          {
            *BOOL v42 = v44;
            v42[1] = v45;
            v42 += 2;
          }
          v37[6] = (uint64_t)v42;
          if (v30 <= v44) {
            unint64_t v30 = v44;
          }
          ++v41;
        }
        while (v41 != v40);
      }
      unint64_t v56 = (unint64_t *)v37[5];
      unint64_t v57 = 126 - 2 * __clz(((char *)v42 - (char *)v56) >> 4);
      if (v42 == v56) {
        uint64_t v58 = 0;
      }
      else {
        uint64_t v58 = v57;
      }
      std::__introsort<std::_ClassicAlgPolicy,std::__less<void,void> &,std::pair<unsigned long long,double> *,false>(v56, (unint64_t)v42, v58, 1);
      double v59 = *(double *)(v31 + 48);
      size_t v26 = v167;
      BOOL v27 = v168;
      if (v59 != 0.0)
      {
        uint64_t v60 = v164;
        while (1)
        {
          unint64_t v61 = *v60;
          size_t v62 = v60;
          if (!*v60) {
            break;
          }
          while (1)
          {
            uint64_t v60 = (uint64_t **)v61;
            unint64_t v63 = v61[4];
            if (v32 < v63) {
              break;
            }
            if (v63 >= v32)
            {
              int64_t v64 = (uint64_t *)v60;
              goto LABEL_104;
            }
            unint64_t v61 = v60[1];
            if (!v61)
            {
              size_t v62 = v60 + 1;
              goto LABEL_100;
            }
          }
        }
LABEL_100:
        int64_t v64 = (uint64_t *)operator new(0x30uLL);
        v64[4] = v32;
        v64[5] = 0;
        *int64_t v64 = 0;
        v64[1] = 0;
        v64[2] = (uint64_t)v60;
        *size_t v62 = v64;
        uint64_t v65 = **((void **)v167 + 6);
        std::string::size_type v66 = v64;
        if (v65)
        {
          *((void *)v167 + 6) = v65;
          std::string::size_type v66 = *v62;
        }
        std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(*((uint64_t **)v167 + 7), v66);
        ++*((void *)v167 + 8);
LABEL_104:
        *((double *)v64 + 5) = v59;
      }
      ++v29;
    }
    while (v29 != v165);
    uint64_t v24 = v180;
    int v28 = v154;
  }
  *((void *)v26 + 9) = 0;
  if (v24 && (unint64_t v67 = *(int *)(v24 + 16), v67))
  {
    if (v179 && *(_DWORD *)(v179 + 24))
    {
      uint64_t v141 = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
      std::logic_error::logic_error(v141, "Only integer item ids or string item ids can be specified in the same model.");
      v141->__vftable = (std::logic_error_vtbl *)(MEMORY[0x1E4FBA4E8] + 16);
      __cxa_throw(v141, (struct type_info *)off_1E59A3028, MEMORY[0x1E4FBA1E8]);
    }
    *((void *)v26 + 9) = v67;
    if (v30 >= v67)
    {
      uint64_t v130 = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
      std::to_string(&v185, v30);
      unint64_t v131 = std::string::insert(&v185, 0, "List of integer item ids specified must be large enough to index all item ids specified.  The largest item index is ");
      long long v132 = *(_OWORD *)&v131->__r_.__value_.__l.__data_;
      v186.__r_.__value_.__r.__words[2] = v131->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v186.__r_.__value_.__l.__data_ = v132;
      v131->__r_.__value_.__l.__size_ = 0;
      v131->__r_.__value_.__r.__words[2] = 0;
      v131->__r_.__value_.__r.__words[0] = 0;
      uint64_t v133 = std::string::append(&v186, ", whereas there are  only ");
      long long v134 = *(_OWORD *)&v133->__r_.__value_.__l.__data_;
      v187.__r_.__value_.__r.__words[2] = v133->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v187.__r_.__value_.__l.__data_ = v134;
      v133->__r_.__value_.__l.__size_ = 0;
      v133->__r_.__value_.__r.__words[2] = 0;
      v133->__r_.__value_.__r.__words[0] = 0;
      std::to_string(&v184, *((void *)v167 + 9));
      if ((v184.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        unint64_t v135 = &v184;
      }
      else {
        unint64_t v135 = (std::string *)v184.__r_.__value_.__r.__words[0];
      }
      if ((v184.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type size = HIBYTE(v184.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type size = v184.__r_.__value_.__l.__size_;
      }
      v137 = std::string::append(&v187, (const std::string::value_type *)v135, size);
      long long v138 = *(_OWORD *)&v137->__r_.__value_.__l.__data_;
      *(void *)&v169[16] = *((void *)&v137->__r_.__value_.__l + 2);
      *(_OWORD *)long long v169 = v138;
      v137->__r_.__value_.__l.__size_ = 0;
      v137->__r_.__value_.__r.__words[2] = 0;
      v137->__r_.__value_.__r.__words[0] = 0;
      v139 = std::string::append((std::string *)v169, " item ids given.");
      long long v140 = *(_OWORD *)&v139->__r_.__value_.__l.__data_;
      v188.__r_.__value_.__r.__words[2] = v139->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v188.__r_.__value_.__l.__data_ = v140;
      v139->__r_.__value_.__l.__size_ = 0;
      v139->__r_.__value_.__r.__words[2] = 0;
      v139->__r_.__value_.__r.__words[0] = 0;
      std::logic_error::logic_error(v130, &v188);
      v130->__vftable = (std::logic_error_vtbl *)(MEMORY[0x1E4FBA4E8] + 16);
      __cxa_throw(v130, (struct type_info *)off_1E59A3028, MEMORY[0x1E4FBA1E8]);
    }
    std::vector<long long>::reserve(v155, v67);
    uint64_t v68 = *(void *)(v24 + 24);
    if (v68) {
      unint64_t v69 = (void *)(v68 + 8);
    }
    else {
      unint64_t v69 = 0;
    }
    if (v68) {
      uint64_t v70 = v68 + 8 + 8 * *(int *)(v24 + 16);
    }
    else {
      uint64_t v70 = 0;
    }
    if (v69 == (void *)v70)
    {
      unint64_t v81 = (char *)*((void *)v26 + 29);
    }
    else
    {
      unint64_t v79 = (char *)*((void *)v26 + 29);
      do
      {
        unint64_t v80 = *((void *)v26 + 30);
        if ((unint64_t)v79 >= v80)
        {
          std::string::size_type v82 = (char *)*v155;
          uint64_t v83 = (v79 - (unsigned char *)*v155) >> 3;
          unint64_t v84 = v83 + 1;
          if ((unint64_t)(v83 + 1) >> 61) {
            std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__throw_length_error[abi:ne180100]();
          }
          uint64_t v85 = v80 - (void)v82;
          if (v85 >> 2 > v84) {
            unint64_t v84 = v85 >> 2;
          }
          if ((unint64_t)v85 >= 0x7FFFFFFFFFFFFFF8) {
            unint64_t v86 = 0x1FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v86 = v84;
          }
          if (v86)
          {
            unint64_t v86 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<_KDInterval>>(v86);
            std::string::size_type v82 = (char *)*((void *)v26 + 28);
            unint64_t v79 = (char *)*((void *)v26 + 29);
          }
          else
          {
            uint64_t v87 = 0;
          }
          unint64_t v88 = (void *)(v86 + 8 * v83);
          void *v88 = *v69;
          unint64_t v81 = (char *)(v88 + 1);
          while (v79 != v82)
          {
            uint64_t v89 = *((void *)v79 - 1);
            v79 -= 8;
            *--unint64_t v88 = v89;
          }
          *((void *)v26 + 28) = v88;
          *((void *)v26 + 29) = v81;
          *((void *)v26 + 3CoreML::Specification::NonMaximumSuppression_PickTop::New(this, 0) = v86 + 8 * v87;
          if (v82) {
            operator delete(v82);
          }
        }
        else
        {
          *(void *)unint64_t v79 = *v69;
          unint64_t v81 = v79 + 8;
        }
        *((void *)v26 + 29) = v81;
        ++v69;
        unint64_t v79 = v81;
      }
      while (v69 != (void *)v70);
    }
    uint64_t v90 = (uint64_t *)*v155;
    *(_OWORD *)&v188.__r_.__value_.__r.__words[1] = 0uLL;
    v188.__r_.__value_.__r.__words[0] = (std::string::size_type)&v188.__r_.__value_.__l.__size_;
    if (v90 == (uint64_t *)v81)
    {
      uint64_t v92 = 0;
      std::string::size_type v91 = 0;
    }
    else
    {
      std::string::size_type v91 = 0;
      uint64_t v92 = 0;
      for (uint64_t i = (std::string *)&v188.__r_.__value_.__r.__words[1]; ; uint64_t i = (std::string *)v188.__r_.__value_.__r.__words[0])
      {
        p_std::string::size_type size = &v188.__r_.__value_.__l.__size_;
        if (i == (std::string *)&v188.__r_.__value_.__r.__words[1]) {
          goto LABEL_162;
        }
        size_t v95 = v92;
        unint64_t v96 = &v188.__r_.__value_.__l.__size_;
        if (v92)
        {
          do
          {
            p_std::string::size_type size = v95;
            size_t v95 = (std::string::size_type *)v95[1];
          }
          while (v95);
        }
        else
        {
          do
          {
            p_std::string::size_type size = (std::string::size_type *)v96[2];
            BOOL v97 = *p_size == (void)v96;
            unint64_t v96 = p_size;
          }
          while (v97);
        }
        uint64_t v98 = *v90;
        if ((uint64_t)p_size[4] < *v90)
        {
LABEL_162:
          std::string::size_type v99 = v92 ? p_size : &v188.__r_.__value_.__r.__words[1];
          uint64_t v100 = v92 ? p_size + 1 : &v188.__r_.__value_.__r.__words[1];
        }
        else
        {
          std::string::size_type v99 = &v188.__r_.__value_.__l.__size_;
          uint64_t v100 = &v188.__r_.__value_.__l.__size_;
          if (v92)
          {
            uint64_t v102 = v92;
            uint64_t v100 = &v188.__r_.__value_.__l.__size_;
            while (1)
            {
              while (1)
              {
                std::string::size_type v99 = v102;
                int64_t v103 = v102[4];
                if (v98 >= v103) {
                  break;
                }
                uint64_t v102 = (std::string::size_type *)*v99;
                uint64_t v100 = v99;
                if (!*v99) {
                  goto LABEL_169;
                }
              }
              if (v103 >= v98) {
                break;
              }
              uint64_t v100 = v99 + 1;
              uint64_t v102 = (std::string::size_type *)v99[1];
              if (!v102) {
                goto LABEL_169;
              }
            }
          }
        }
        if (!*v100)
        {
LABEL_169:
          uint64_t v101 = (uint64_t *)operator new(0x28uLL);
          v101[4] = *v90;
          *uint64_t v101 = 0;
          v101[1] = 0;
          v101[2] = (uint64_t)v99;
          std::string::size_type *v100 = (std::string::size_type)v101;
          if (*(void *)v188.__r_.__value_.__l.__data_)
          {
            v188.__r_.__value_.__r.__words[0] = *(void *)v188.__r_.__value_.__l.__data_;
            uint64_t v101 = (uint64_t *)*v100;
          }
          std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>((uint64_t *)v188.__r_.__value_.__l.__size_, v101);
          std::string::size_type v91 = ++v188.__r_.__value_.__r.__words[2];
        }
        ++v90;
        uint64_t v92 = (std::string::size_type *)v188.__r_.__value_.__l.__size_;
        if (v90 == (uint64_t *)v81) {
          break;
        }
      }
    }
    uint64_t v104 = *((void *)v26 + 9);
    std::__tree<std::__value_type<CoreML::TreeEnsembleBase::BranchMode,unsigned long>,std::__map_value_compare<CoreML::TreeEnsembleBase::BranchMode,std::__value_type<CoreML::TreeEnsembleBase::BranchMode,unsigned long>,std::less<CoreML::TreeEnsembleBase::BranchMode>,true>,std::allocator<std::__value_type<CoreML::TreeEnsembleBase::BranchMode,unsigned long>>>::destroy(v92);
    BOOL v97 = v91 == v104;
    BOOL v27 = v168;
    if (!v97)
    {
      int v105 = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
      std::logic_error::logic_error(v105, "List of integer item ids specified must be unique; list contains duplicates.");
      v105->__vftable = (std::logic_error_vtbl *)(MEMORY[0x1E4FBA4E8] + 16);
      __cxa_throw(v105, (struct type_info *)off_1E59A3028, MEMORY[0x1E4FBA1E8]);
    }
  }
  else
  {
    uint64_t v71 = v179;
    if (v179 && (std::vector<std::string>::size_type v72 = *(int *)(v179 + 24), v72))
    {
      *((void *)v26 + 9) = v72;
      if (v30 > v72)
      {
        uint64_t v142 = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
        std::to_string(&v185, v30);
        int64_t v143 = std::string::insert(&v185, 0, "List of string item ids specified must be large enough to index all item ids specified.  The largest item index is ");
        long long v144 = *(_OWORD *)&v143->__r_.__value_.__l.__data_;
        v186.__r_.__value_.__r.__words[2] = v143->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v186.__r_.__value_.__l.__data_ = v144;
        v143->__r_.__value_.__l.__size_ = 0;
        v143->__r_.__value_.__r.__words[2] = 0;
        v143->__r_.__value_.__r.__words[0] = 0;
        uint64_t v145 = std::string::append(&v186, ", whereas there are  only ");
        long long v146 = *(_OWORD *)&v145->__r_.__value_.__l.__data_;
        v187.__r_.__value_.__r.__words[2] = v145->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v187.__r_.__value_.__l.__data_ = v146;
        v145->__r_.__value_.__l.__size_ = 0;
        v145->__r_.__value_.__r.__words[2] = 0;
        v145->__r_.__value_.__r.__words[0] = 0;
        std::to_string(&v184, *((void *)v167 + 9));
        if ((v184.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          uint64_t v147 = &v184;
        }
        else {
          uint64_t v147 = (std::string *)v184.__r_.__value_.__r.__words[0];
        }
        if ((v184.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          std::string::size_type v148 = HIBYTE(v184.__r_.__value_.__r.__words[2]);
        }
        else {
          std::string::size_type v148 = v184.__r_.__value_.__l.__size_;
        }
        uint64_t v149 = std::string::append(&v187, (const std::string::value_type *)v147, v148);
        long long v150 = *(_OWORD *)&v149->__r_.__value_.__l.__data_;
        *(void *)&v169[16] = *((void *)&v149->__r_.__value_.__l + 2);
        *(_OWORD *)long long v169 = v150;
        v149->__r_.__value_.__l.__size_ = 0;
        v149->__r_.__value_.__r.__words[2] = 0;
        v149->__r_.__value_.__r.__words[0] = 0;
        unint64_t v151 = std::string::append((std::string *)v169, " item ids given.");
        long long v152 = *(_OWORD *)&v151->__r_.__value_.__l.__data_;
        v188.__r_.__value_.__r.__words[2] = v151->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v188.__r_.__value_.__l.__data_ = v152;
        v151->__r_.__value_.__l.__size_ = 0;
        v151->__r_.__value_.__r.__words[2] = 0;
        v151->__r_.__value_.__r.__words[0] = 0;
        std::logic_error::logic_error(v142, &v188);
        v142->__vftable = (std::logic_error_vtbl *)(MEMORY[0x1E4FBA4E8] + 16);
        __cxa_throw(v142, (struct type_info *)off_1E59A3028, MEMORY[0x1E4FBA1E8]);
      }
      std::vector<std::string>::reserve(v163, v72);
      uint64_t v73 = *(void *)(v71 + 32);
      if (v73) {
        uint64_t v74 = (long long **)(v73 + 8);
      }
      else {
        uint64_t v74 = 0;
      }
      uint64_t v75 = *(int *)(v71 + 24);
      if (v75)
      {
        unint64_t v76 = *((void *)v26 + 32);
        uint64_t v77 = 8 * v75;
        do
        {
          size_t v78 = *v74;
          if (v76 >= *((void *)v26 + 33))
          {
            unint64_t v76 = std::vector<std::string>::__push_back_slow_path<std::string const&>((uint64_t *)v163, v78);
          }
          else
          {
            std::vector<std::string>::__construct_one_at_end[abi:ne180100]<std::string const&>((uint64_t)v163, v78);
            v76 += 24;
          }
          *((void *)v26 + 32) = v76;
          ++v74;
          v77 -= 8;
        }
        while (v77);
      }
      else
      {
        unint64_t v76 = *((void *)v26 + 32);
      }
      begin = (std::string::__raw *)v163->__begin_;
      *(_OWORD *)&v188.__r_.__value_.__r.__words[1] = 0uLL;
      v188.__r_.__value_.__r.__words[0] = (std::string::size_type)&v188.__r_.__value_.__l.__size_;
      if (begin == (std::string::__raw *)v76)
      {
        int v107 = 0;
        std::string::size_type v108 = 0;
      }
      else
      {
        do
        {
          std::__tree<std::string>::__emplace_hint_unique_key_args<std::string,std::string const&>((uint64_t *)&v188, (uint64_t *)&v188.__r_.__value_.__l.__size_, begin, (uint64_t)begin);
          ++begin;
        }
        while (begin != (std::string::__raw *)v76);
        std::string::size_type v108 = v188.__r_.__value_.__r.__words[2];
        int v107 = (char *)v188.__r_.__value_.__l.__size_;
      }
      uint64_t v109 = *((void *)v26 + 9);
      std::__tree<std::__value_type<std::string,Espresso::vimage2espresso_param>,std::__map_value_compare<std::string,std::__value_type<std::string,Espresso::vimage2espresso_param>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,Espresso::vimage2espresso_param>>>::destroy(v107);
      if (v108 != v109)
      {
        unint64_t v153 = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
        std::logic_error::logic_error(v153, "List of string item ids specified must be unique; list contains duplicates.");
        v153->__vftable = (std::logic_error_vtbl *)(MEMORY[0x1E4FBA4E8] + 16);
        __cxa_throw(v153, (struct type_info *)off_1E59A3028, MEMORY[0x1E4FBA1E8]);
      }
    }
    else
    {
      *((void *)v26 + 9) = v30 + 1;
    }
  }
  std::string::operator=(v162, __str);
  std::string::operator=(v160, v174);
  std::string::operator=(v159, v176);
  std::string::operator=(v158, v175);
  std::string::operator=(v28, v177);
  std::string::operator=(v157, v178);
  *(void *)unint64_t v156 = v27;
  *((void *)v156 + 1) = v26;
  if (v26[175] < 0) {
    uint64_t v110 = *((void *)v26 + 20);
  }
  else {
    uint64_t v110 = v26[175];
  }
  if (!v110)
  {
    if (*((_DWORD *)v161 + 6) != 1)
    {
      signed int v129 = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
      std::logic_error::logic_error(v129, "Name of column for item input data not specified.");
      goto LABEL_259;
    }
    std::string::operator=(v162, *(const std::string **)(*(void *)(v161[4] + 8) + 16));
  }
  uint64_t v111 = operator new(0xCuLL);
  *(void *)&v169[8] = v111 + 3;
  *(void *)&v169[16] = v111 + 3;
  *(void *)uint64_t v111 = 0x700000006;
  v111[2] = 5;
  *(void *)long long v169 = v111;
  uint64_t v112 = (uint64_t)(v161 + 2);
  CoreML::validateDescriptionsContainFeatureWithNameAndType<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>>((CoreML::Result *)&v188, (uint64_t)(v161 + 2), (const void **)&v162->__r_.__value_.__l.__data_, (unsigned int **)v169);
  int data = (int)v188.__r_.__value_.__l.__data_;
  std::string::size_type v182 = v188.__r_.__value_.__r.__words[0];
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__p.__r_.__value_.__l.__data_);
    int data = v182;
  }
  *(_OWORD *)&__p.__r_.__value_.__l.__data_ = *(_OWORD *)&v188.__r_.__value_.__r.__words[1];
  __p.__r_.__value_.__r.__words[2] = v189.__r_.__value_.__r.__words[0];
  if ((data & 0xFFFFFFEF) != 0)
  {
    int v128 = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(v128, &__p);
    v128->__vftable = (std::logic_error_vtbl *)(MEMORY[0x1E4FBA4E8] + 16);
    __cxa_throw(v128, (struct type_info *)off_1E59A3028, MEMORY[0x1E4FBA1E8]);
  }
  operator delete(v111);
  if ((v167[127] & 0x80000000) == 0)
  {
    if (!v167[127]) {
      goto LABEL_207;
    }
    goto LABEL_204;
  }
  if (*((void *)v167 + 14))
  {
LABEL_204:
    unint64_t v114 = operator new(4uLL);
    *unint64_t v114 = 1;
    *(void *)&v169[8] = v114 + 1;
    *(void *)&v169[16] = v114 + 1;
    *(void *)long long v169 = v114;
    CoreML::validateDescriptionsContainFeatureWithNameAndType<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>>((CoreML::Result *)&v188, v112, (const void **)&v160->__r_.__value_.__l.__data_, (unsigned int **)v169);
    std::string::size_type v182 = v188.__r_.__value_.__r.__words[0];
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    *(_OWORD *)&__p.__r_.__value_.__l.__data_ = *(_OWORD *)&v188.__r_.__value_.__r.__words[1];
    __p.__r_.__value_.__r.__words[2] = v189.__r_.__value_.__r.__words[0];
    v189.__r_.__value_.__s.__data_[7] = 0;
    v188.__r_.__value_.__s.__data_[8] = 0;
    operator delete(v114);
    if ((v182 & 0xFFFFFFEF) == 0) {
      goto LABEL_207;
    }
    signed int v129 = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(v129, &__p);
LABEL_259:
    v129->__vftable = (std::logic_error_vtbl *)(MEMORY[0x1E4FBA4E8] + 16);
    __cxa_throw(v129, (struct type_info *)off_1E59A3028, MEMORY[0x1E4FBA1E8]);
  }
LABEL_207:
  unint64_t v115 = operator new(8uLL);
  *unint64_t v115 = 0x500000007;
  v187.__r_.__value_.__l.__size_ = (std::string::size_type)(v115 + 1);
  v187.__r_.__value_.__r.__words[2] = (std::string::size_type)(v115 + 1);
  v187.__r_.__value_.__r.__words[0] = (std::string::size_type)v115;
  if (v167[151] < 0) {
    std::string::__init_copy_ctor_external(&v188, *((const std::string::value_type **)v167 + 16), *((void *)v167 + 17));
  }
  else {
    std::string v188 = *v159;
  }
  if (v167[103] < 0) {
    std::string::__init_copy_ctor_external(&v189, *((const std::string::value_type **)v167 + 10), *((void *)v167 + 11));
  }
  else {
    std::string v189 = *v158;
  }
  char v116 = 0;
  uint64_t v117 = 1;
  uint64_t v118 = &v188;
  do
  {
    char v119 = v116;
    if (SHIBYTE(v118->__r_.__value_.__r.__words[2]) < 0)
    {
      if (!v118->__r_.__value_.__l.__size_) {
        goto LABEL_221;
      }
    }
    else if (!*((unsigned char *)&v118->__r_.__value_.__s + 23))
    {
      goto LABEL_221;
    }
    CoreML::validateDescriptionsContainFeatureWithNameAndType<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>>((CoreML::Result *)v169, v112, (const void **)&v118->__r_.__value_.__l.__data_, (unsigned int **)&v187);
    int v120 = *(_DWORD *)v169;
    std::string::size_type v182 = *(void *)v169;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      int v120 = v182;
    }
    std::string __p = *(std::string *)&v169[8];
    if ((v120 & 0xFFFFFFEF) != 0)
    {
      unint64_t v126 = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
      std::logic_error::logic_error(v126, &__p);
      v126->__vftable = (std::logic_error_vtbl *)(MEMORY[0x1E4FBA4E8] + 16);
      __cxa_throw(v126, (struct type_info *)off_1E59A3028, MEMORY[0x1E4FBA1E8]);
    }
LABEL_221:
    uint64_t v118 = &v188 + v117;
    char v116 = 1;
    uint64_t v117 = 2;
  }
  while ((v119 & 1) == 0);
  for (uint64_t j = 0; j != -6; j -= 3)
  {
    if (SHIBYTE(v189.__r_.__value_.__r.__words[j + 2]) < 0) {
      operator delete(*(void **)((char *)&v188 + j * 8 + 24));
    }
  }
  operator delete(v115);
  if (v167[223] < 0)
  {
    uint64_t v122 = *((void *)v167 + 26);
    if (!v122) {
      goto LABEL_233;
    }
  }
  else
  {
    uint64_t v122 = v167[223];
    if (!v167[223]) {
      goto LABEL_233;
    }
  }
  signed int v123 = operator new(4uLL);
  *signed int v123 = 6;
  *(void *)&v169[8] = v123 + 1;
  *(void *)&v169[16] = v123 + 1;
  *(void *)long long v169 = v123;
  CoreML::validateDescriptionsContainFeatureWithNameAndType<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>>((CoreML::Result *)&v188, (uint64_t)(v161 + 5), (const void **)&v157->__r_.__value_.__l.__data_, (unsigned int **)v169);
  std::string::size_type v182 = v188.__r_.__value_.__r.__words[0];
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  *(_OWORD *)&__p.__r_.__value_.__l.__data_ = *(_OWORD *)&v188.__r_.__value_.__r.__words[1];
  __p.__r_.__value_.__r.__words[2] = v189.__r_.__value_.__r.__words[0];
  v189.__r_.__value_.__s.__data_[7] = 0;
  v188.__r_.__value_.__s.__data_[8] = 0;
  operator delete(v123);
  if ((v182 & 0xFFFFFFEF) != 0) {
    goto LABEL_238;
  }
LABEL_233:
  if ((v167[199] & 0x80000000) == 0)
  {
    if (v167[199]) {
      goto LABEL_235;
    }
LABEL_240:
    if (v122) {
      goto LABEL_241;
    }
    int v125 = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(v125, "No output columns specified.");
LABEL_261:
    v125->__vftable = (std::logic_error_vtbl *)(MEMORY[0x1E4FBA4E8] + 16);
    __cxa_throw(v125, (struct type_info *)off_1E59A3028, MEMORY[0x1E4FBA1E8]);
  }
  if (!*((void *)v167 + 23)) {
    goto LABEL_240;
  }
LABEL_235:
  uint64_t v124 = operator new(4uLL);
  *uint64_t v124 = 7;
  *(void *)&v169[8] = v124 + 1;
  *(void *)&v169[16] = v124 + 1;
  *(void *)long long v169 = v124;
  CoreML::validateDescriptionsContainFeatureWithNameAndType<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>>((CoreML::Result *)&v188, (uint64_t)(v161 + 5), (const void **)&v28->__r_.__value_.__l.__data_, (unsigned int **)v169);
  std::string::size_type v182 = v188.__r_.__value_.__r.__words[0];
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  *(_OWORD *)&__p.__r_.__value_.__l.__data_ = *(_OWORD *)&v188.__r_.__value_.__r.__words[1];
  __p.__r_.__value_.__r.__words[2] = v189.__r_.__value_.__r.__words[0];
  v189.__r_.__value_.__s.__data_[7] = 0;
  v188.__r_.__value_.__s.__data_[8] = 0;
  operator delete(v124);
  if ((v182 & 0xFFFFFFEF) != 0)
  {
LABEL_238:
    int v125 = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(v125, &__p);
    goto LABEL_261;
  }
LABEL_241:
  CoreML::Specification::ItemSimilarityRecommender::~ItemSimilarityRecommender((CoreML::Specification::ItemSimilarityRecommender *)&v170);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_19EB6A3F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void **a13, void **a14, void **a15, void **a16, uint64_t a17, void **a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,char a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,void *a47,uint64_t a48,int a49,__int16 a50,char a51,char a52,void *a53,uint64_t a54,int a55,__int16 a56,char a57,char a58,void *a59,uint64_t a60,int a61,__int16 a62,char a63)
{
  if (*(char *)(v67 - 153) < 0) {
    operator delete(*(void **)(v67 - 176));
  }
  if (a30 < 0) {
    operator delete(__p);
  }
  if (a58 < 0) {
    operator delete(a53);
  }
  if (*(char *)(v67 - 185) < 0) {
    operator delete(*(void **)(v67 - 208));
  }
  if (*(char *)(v67 - 217) < 0) {
    operator delete(*(void **)(v67 - 240));
  }
  if (a64 < 0)
  {
    operator delete(a59);
    uint64_t v69 = a23;
    uint64_t v70 = (void **)a11;
    if ((v64 & 1) == 0)
    {
LABEL_16:
      *(void *)(v67 - 176) = a19;
      std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)(v67 - 176));
      uint64_t v71 = *v70;
      if (*v70)
      {
        *(void *)(v69 + 232) = v71;
        operator delete(v71);
      }
      if (*(char *)(v69 + 223) < 0) {
        operator delete(*a13);
      }
      if (*(char *)(v69 + 199) < 0) {
        operator delete(*v66);
      }
      if (*(char *)(v69 + 175) < 0) {
        operator delete(*a18);
      }
      if (*(char *)(v69 + 151) < 0) {
        operator delete(*a15);
      }
      if (*(char *)(v69 + 127) < 0) {
        operator delete(*a16);
      }
      if (*(char *)(v69 + 103) < 0) {
        operator delete(*a14);
      }
      std::__tree<std::__value_type<CoreML::TreeEnsembleBase::BranchMode,unsigned long>,std::__map_value_compare<CoreML::TreeEnsembleBase::BranchMode,std::__value_type<CoreML::TreeEnsembleBase::BranchMode,unsigned long>,std::less<CoreML::TreeEnsembleBase::BranchMode>,true>,std::allocator<std::__value_type<CoreML::TreeEnsembleBase::BranchMode,unsigned long>>>::destroy(*(void **)(v69 + 56));
      std::__tree<std::__value_type<unsigned long long,std::vector<std::pair<unsigned long long,double>>>,std::__map_value_compare<unsigned long long,std::__value_type<unsigned long long,std::vector<std::pair<unsigned long long,double>>>,std::less<unsigned long long>,true>,std::allocator<std::__value_type<unsigned long long,std::vector<std::pair<unsigned long long,double>>>>>::destroy(*(void **)(v69 + 32));
      std::__shared_weak_count::~__shared_weak_count((std::__shared_weak_count *)v69);
      operator delete(v72);
      CoreML::Specification::ItemSimilarityRecommender::~ItemSimilarityRecommender((CoreML::Specification::ItemSimilarityRecommender *)&a32);
      if (a52 < 0) {
        operator delete(a47);
      }
      _Unwind_Resume(a1);
    }
  }
  else
  {
    uint64_t v69 = a23;
    uint64_t v70 = (void **)a11;
    if (!v64) {
      goto LABEL_16;
    }
  }
  __cxa_free_exception(v65);
  goto LABEL_16;
}

__n128 CoreML::validate<(MLModelType)607>(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    uint64_t v4 = *(uint64_t **)(a2 + 16);
  }
  else {
    uint64_t v4 = &CoreML::Specification::_ModelDescription_default_instance_;
  }
  CoreML::Result::Result((CoreML::Result *)&v18);
  int v5 = *(_DWORD *)(a2 + 24);
  LODWORD(v12) = 0;
  CoreML::validateModelDescription((uint64_t)&v15, (uint64_t)v4, v5, (char *)&v12);
  int v6 = (int)v15;
  uint64_t v18 = v15;
  if (SHIBYTE(v20) < 0)
  {
    operator delete((void *)__p.n128_u64[0]);
    int v6 = (int)v18;
  }
  __n128 __p = v16;
  uint64_t v20 = v17;
  if ((v6 & 0xFFFFFFEF) != 0) {
    goto LABEL_21;
  }
  unsigned int v7 = (unsigned int *)operator new(4uLL);
  *unsigned int v7 = 5;
  uint64_t v13 = v7 + 1;
  uint64_t v14 = v7 + 1;
  uint64_t v12 = v7;
  CoreML::validateDescriptionsContainFeatureWithTypes<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>>((uint64_t)&v15, (uint64_t)(v4 + 2), 1, &v12);
  uint64_t v18 = v15;
  if (SHIBYTE(v20) < 0) {
    operator delete((void *)__p.n128_u64[0]);
  }
  __n128 __p = v16;
  uint64_t v20 = v17;
  HIBYTE(v17) = 0;
  v16.n128_u8[0] = 0;
  operator delete(v7);
  if ((v18 & 0xFFFFFFEF) != 0) {
    goto LABEL_21;
  }
  uint64_t v8 = (unsigned int *)operator new(4uLL);
  *uint64_t v8 = 5;
  uint64_t v13 = v8 + 1;
  uint64_t v14 = v8 + 1;
  uint64_t v12 = v8;
  CoreML::validateDescriptionsContainFeatureWithTypes<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>>((uint64_t)&v15, (uint64_t)(v4 + 5), 1, &v12);
  uint64_t v18 = v15;
  if (SHIBYTE(v20) < 0) {
    operator delete((void *)__p.n128_u64[0]);
  }
  __n128 __p = v16;
  uint64_t v20 = v17;
  HIBYTE(v17) = 0;
  v16.n128_u8[0] = 0;
  operator delete(v8);
  if ((v18 & 0xFFFFFFEF) != 0
    || (*(_DWORD *)(a2 + 44) != 607
      ? (CoreML::Specification::protobuf_Normalizer_2eproto::InitDefaults(v9),
         int v10 = &CoreML::Specification::_Normalizer_default_instance_)
      : (int v10 = *(uint64_t **)(a2 + 32)),
        *((_DWORD *)v10 + 4) < 3u))
  {
LABEL_21:
    *(void *)a1 = v18;
    __n128 result = __p;
    *(__n128 *)(a1 + 8) = __p;
    *(void *)(a1 + 24) = v20;
  }
  else
  {
    std::string::basic_string[abi:ne180100]<0>(&v15, "NormalizerValidator normLx invalid");
    *(void *)a1 = 13;
    std::operator+<char>();
    if (v16.n128_i8[15] < 0) {
      operator delete(v15);
    }
    if (SHIBYTE(v20) < 0) {
      operator delete((void *)__p.n128_u64[0]);
    }
  }
  return result;
}

void sub_19EB6AA18(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  _Unwind_Resume(exception_object);
}

uint64_t CoreML::Specification::ItemSimilarityRecommender_ConnectedItem::GetCachedSize(CoreML::Specification::ItemSimilarityRecommender_ConnectedItem *this)
{
  return *((unsigned int *)this + 8);
}

uint64_t CoreML::Specification::ItemSimilarityRecommender_ConnectedItem::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, google::protobuf::io::CodedOutputStream *a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  unint64_t v6 = *(void *)(this + 16);
  if (v6) {
    this = google::protobuf::internal::WireFormatLite::WriteUInt64(1, v6, a2, a4);
  }
  double v7 = *(double *)(v5 + 24);
  if (v7 != 0.0)
  {
    return google::protobuf::internal::WireFormatLite::WriteDouble(2, a2, v7, a3);
  }
  return this;
}

unint64_t CoreML::Specification::ItemSimilarityRecommender_ConnectedItem::ByteSizeLong(CoreML::Specification::ItemSimilarityRecommender_ConnectedItem *this)
{
  uint64_t v1 = *((void *)this + 2);
  unint64_t v2 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1) {
    unint64_t v3 = v2 + 1;
  }
  else {
    unint64_t v3 = 0;
  }
  if (*((double *)this + 3) != 0.0) {
    v3 += 9;
  }
  *((_DWORD *)this + 8) = v3;
  return v3;
}

BOOL CoreML::Specification::ItemSimilarityRecommender_ConnectedItem::MergePartialFromCodedStream(CoreML::Specification::ItemSimilarityRecommender_ConnectedItem *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(v6) = 0;
LABEL_6:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
          unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_20;
          }
          goto LABEL_7;
        }
        uint64_t v6 = *v5;
        if (*v5 < 1) {
          goto LABEL_6;
        }
        *a2 = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_20;
        }
LABEL_7:
        if (v7 >> 3 != 2) {
          break;
        }
        if (v7 != 17) {
          goto LABEL_20;
        }
        unint64_t v16 = 0;
        uint64_t v11 = (unint64_t *)*a2;
        if ((int)(*((_DWORD *)a2 + 2) - *a2) < 8)
        {
          BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v16);
          if (!result) {
            return result;
          }
          unint64_t v12 = v16;
        }
        else
        {
          unint64_t v12 = *v11;
          *a2 = (char *)(v11 + 1);
        }
        *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v12;
      }
      if (v7 >> 3 != 1 || v7 != 8) {
        break;
      }
      int v10 = *a2;
      if (*a2 >= a2[1] || *v10 < 0)
      {
        *((void *)this + 2) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v14 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        *((void *)this + 2) = *v10;
        *a2 = v10 + 1;
      }
    }
LABEL_20:
    if (v7) {
      BOOL v13 = (v7 & 7) == 4;
    }
    else {
      BOOL v13 = 1;
    }
    if (v13) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

std::string *CoreML::Specification::ItemSimilarityRecommender_ConnectedItem::MergeFrom(std::string *this, const CoreML::Specification::ItemSimilarityRecommender_ConnectedItem *a2)
{
  unint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  std::string::size_type v5 = *((void *)a2 + 2);
  if (v5) {
    v3->__r_.__value_.__r.__words[2] = v5;
  }
  double v6 = *((double *)a2 + 3);
  if (v6 != 0.0) {
    *(double *)&v3[1].__r_.__value_.__l.__data_ = v6;
  }
  return this;
}

uint64_t CoreML::Specification::ItemSimilarityRecommender_ConnectedItem::IsInitialized(CoreML::Specification::ItemSimilarityRecommender_ConnectedItem *this)
{
  return 1;
}

uint64_t CoreML::Specification::ItemSimilarityRecommender_ConnectedItem::Clear(uint64_t this)
{
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  return this;
}

void CoreML::Specification::ItemSimilarityRecommender_ConnectedItem::New(CoreML::Specification::ItemSimilarityRecommender_ConnectedItem *this, google::protobuf::Arena *a2)
{
}

void sub_19EB6AD28(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x1081C40B7564605);
  _Unwind_Resume(a1);
}

CoreML::Specification::ItemSimilarityRecommender_ConnectedItem *CoreML::Specification::ItemSimilarityRecommender_ConnectedItem::ItemSimilarityRecommender_ConnectedItem(CoreML::Specification::ItemSimilarityRecommender_ConnectedItem *this)
{
  *(void *)this = &unk_1EF0D92C8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::ItemSimilarityRecommender_ConnectedItem *)&CoreML::Specification::_ItemSimilarityRecommender_ConnectedItem_default_instance_) {
    CoreML::Specification::protobuf_ItemSimilarityRecommender_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  return this;
}

void sub_19EB6ADB0(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::ItemSimilarityRecommender_ConnectedItem>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    unint64_t v3 = result;
    BOOL result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *BOOL result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::ItemSimilarityRecommender_ConnectedItem>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::ItemSimilarityRecommender_ConnectedItem>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

uint64_t CoreML::Specification::ItemSimilarityRecommender::GetCachedSize(CoreML::Specification::ItemSimilarityRecommender *this)
{
  return *((unsigned int *)this + 26);
}

uint64_t CoreML::Specification::ItemSimilarityRecommender::SerializeWithCachedSizes(CoreML::Specification::ItemSimilarityRecommender *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 6);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
      google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)1, *(void *)(*((void *)this + 4) + 8 * i + 8), a2, a4);
  }
  if (this != (CoreML::Specification::ItemSimilarityRecommender *)&CoreML::Specification::_ItemSimilarityRecommender_default_instance_)
  {
    uint64_t v8 = *((void *)this + 11);
    if (v8) {
      google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
    }
    uint64_t v9 = *((void *)this + 12);
    if (v9) {
      google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)3, v9, a2, a4);
    }
  }
  int v10 = (unsigned int *)*((void *)this + 5);
  if (*((char *)v10 + 23) < 0)
  {
    uint64_t v11 = *((void *)v10 + 1);
    if (!v11) {
      goto LABEL_15;
    }
    int v10 = *(unsigned int **)v10;
    goto LABEL_14;
  }
  LODWORD(v11) = *((unsigned __int8 *)v10 + 23);
  if (*((unsigned char *)v10 + 23))
  {
LABEL_14:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v10, v11, 1, (uint64_t)"CoreML.Specification.ItemSimilarityRecommender.itemInputFeatureName");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0xAu, *((void *)this + 5), a2);
  }
LABEL_15:
  unint64_t v12 = (unsigned int *)*((void *)this + 6);
  if (*((char *)v12 + 23) < 0)
  {
    uint64_t v13 = *((void *)v12 + 1);
    if (!v13) {
      goto LABEL_21;
    }
    unint64_t v12 = *(unsigned int **)v12;
    goto LABEL_20;
  }
  LODWORD(v1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = *((unsigned __int8 *)v12 + 23);
  if (*((unsigned char *)v12 + 23))
  {
LABEL_20:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v12, v13, 1, (uint64_t)"CoreML.Specification.ItemSimilarityRecommender.numRecommendationsInputFeatureName");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0xBu, *((void *)this + 6), a2);
  }
LABEL_21:
  char v14 = (unsigned int *)*((void *)this + 7);
  if (*((char *)v14 + 23) < 0)
  {
    uint64_t v15 = *((void *)v14 + 1);
    if (!v15) {
      goto LABEL_27;
    }
    char v14 = *(unsigned int **)v14;
    goto LABEL_26;
  }
  LODWORD(v15) = *((unsigned __int8 *)v14 + 23);
  if (*((unsigned char *)v14 + 23))
  {
LABEL_26:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v14, v15, 1, (uint64_t)"CoreML.Specification.ItemSimilarityRecommender.itemRestrictionInputFeatureName");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0xCu, *((void *)this + 7), a2);
  }
LABEL_27:
  unint64_t v16 = (unsigned int *)*((void *)this + 8);
  if (*((char *)v16 + 23) < 0)
  {
    uint64_t v17 = *((void *)v16 + 1);
    if (!v17) {
      goto LABEL_33;
    }
    unint64_t v16 = *(unsigned int **)v16;
    goto LABEL_32;
  }
  LODWORD(v17) = *((unsigned __int8 *)v16 + 23);
  if (*((unsigned char *)v16 + 23))
  {
LABEL_32:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v16, v17, 1, (uint64_t)"CoreML.Specification.ItemSimilarityRecommender.itemExclusionInputFeatureName");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0xDu, *((void *)this + 8), a2);
  }
LABEL_33:
  uint64_t v18 = (unsigned int *)*((void *)this + 9);
  if (*((char *)v18 + 23) < 0)
  {
    uint64_t v19 = *((void *)v18 + 1);
    if (!v19) {
      goto LABEL_39;
    }
    uint64_t v18 = *(unsigned int **)v18;
    goto LABEL_38;
  }
  LODWORD(v19) = *((unsigned __int8 *)v18 + 23);
  if (*((unsigned char *)v18 + 23))
  {
LABEL_38:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v18, v19, 1, (uint64_t)"CoreML.Specification.ItemSimilarityRecommender.recommendedItemListOutputFeatureName");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0x14u, *((void *)this + 9), a2);
  }
LABEL_39:
  uint64_t result = *((void *)this + 10);
  if (*(char *)(result + 23) < 0)
  {
    uint64_t v21 = *(void *)(result + 8);
    if (!v21) {
      return result;
    }
    uint64_t result = *(void *)result;
  }
  else
  {
    LODWORD(v21) = *(unsigned __int8 *)(result + 23);
    if (!*(unsigned char *)(result + 23)) {
      return result;
    }
  }
  google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)result, v21, 1, (uint64_t)"CoreML.Specification.ItemSimilarityRecommender.recommendedItemScoreOutputFeatureName");
  uint64_t v22 = *((void *)this + 10);

  return google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0x15u, v22, a2);
}

uint64_t CoreML::Specification::ItemSimilarityRecommender::ByteSizeLong(CoreML::Specification::ItemSimilarityRecommender *this)
{
  int v2 = *((_DWORD *)this + 6);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = *((unsigned int *)this + 6);
    do
    {
      uint64_t v5 = CoreML::Specification::ItemSimilarityRecommender_SimilarItems::ByteSizeLong(*(CoreML::Specification::ItemSimilarityRecommender_SimilarItems **)(*((void *)this + 4) + 8 * v3 + 8));
      v4 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t v6 = *((void *)this + 5);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
  if (*(char *)(v6 + 23) < 0)
  {
    if (!*(void *)(v6 + 8)) {
      goto LABEL_11;
    }
  }
  else if (!*(unsigned char *)(v6 + 23))
  {
    goto LABEL_11;
  }
  uint64_t v8 = *(void *)(v6 + 8);
  if ((v7 & 0x80u) == 0) {
    uint64_t v8 = v7;
  }
  v4 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_11:
  uint64_t v9 = *((void *)this + 6);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
  if (*(char *)(v9 + 23) < 0)
  {
    if (!*(void *)(v9 + 8)) {
      goto LABEL_16;
    }
  }
  else if (!*(unsigned char *)(v9 + 23))
  {
    goto LABEL_16;
  }
  uint64_t v11 = *(void *)(v9 + 8);
  if ((v10 & 0x80u) == 0) {
    uint64_t v11 = v10;
  }
  v4 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_16:
  uint64_t v12 = *((void *)this + 7);
  uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
  if (*(char *)(v12 + 23) < 0)
  {
    if (!*(void *)(v12 + 8)) {
      goto LABEL_21;
    }
  }
  else if (!*(unsigned char *)(v12 + 23))
  {
    goto LABEL_21;
  }
  uint64_t v14 = *(void *)(v12 + 8);
  if ((v13 & 0x80u) == 0) {
    uint64_t v14 = v13;
  }
  v4 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_21:
  uint64_t v15 = *((void *)this + 8);
  uint64_t v16 = *(unsigned __int8 *)(v15 + 23);
  if (*(char *)(v15 + 23) < 0)
  {
    if (!*(void *)(v15 + 8)) {
      goto LABEL_26;
    }
  }
  else if (!*(unsigned char *)(v15 + 23))
  {
    goto LABEL_26;
  }
  uint64_t v17 = *(void *)(v15 + 8);
  if ((v16 & 0x80u) == 0) {
    uint64_t v17 = v16;
  }
  v4 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_26:
  uint64_t v18 = *((void *)this + 9);
  uint64_t v19 = *(unsigned __int8 *)(v18 + 23);
  if (*(char *)(v18 + 23) < 0)
  {
    if (!*(void *)(v18 + 8)) {
      goto LABEL_31;
    }
  }
  else if (!*(unsigned char *)(v18 + 23))
  {
    goto LABEL_31;
  }
  uint64_t v20 = *(void *)(v18 + 8);
  if ((v19 & 0x80u) == 0) {
    uint64_t v20 = v19;
  }
  v4 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_31:
  uint64_t v21 = *((void *)this + 10);
  uint64_t v22 = *(unsigned __int8 *)(v21 + 23);
  if (*(char *)(v21 + 23) < 0)
  {
    if (!*(void *)(v21 + 8)) {
      goto LABEL_36;
    }
  }
  else if (!*(unsigned char *)(v21 + 23))
  {
    goto LABEL_36;
  }
  uint64_t v23 = *(void *)(v21 + 8);
  if ((v22 & 0x80u) == 0) {
    uint64_t v23 = v22;
  }
  v4 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_36:
  if (this != (CoreML::Specification::ItemSimilarityRecommender *)&CoreML::Specification::_ItemSimilarityRecommender_default_instance_)
  {
    uint64_t v24 = (CoreML::Specification::StringVector *)*((void *)this + 11);
    if (v24)
    {
      uint64_t v25 = CoreML::Specification::StringVector::ByteSizeLong(v24);
      v4 += v25 + ((9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    size_t v26 = (CoreML::Specification::Int64Vector *)*((void *)this + 12);
    if (v26)
    {
      uint64_t v27 = CoreML::Specification::Int64Vector::ByteSizeLong(v26);
      v4 += v27 + ((9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  *((_DWORD *)this + 26) = v4;
  return v4;
}

uint64_t CoreML::Specification::ItemSimilarityRecommender_SimilarItems::ByteSizeLong(CoreML::Specification::ItemSimilarityRecommender_SimilarItems *this)
{
  int v1 = *((_DWORD *)this + 6);
  if (v1)
  {
    int v2 = 0;
    uint64_t v3 = *((void *)this + 4);
    uint64_t v4 = *((unsigned int *)this + 6);
    do
    {
      uint64_t v5 = *(void *)(v3 + 8 * v2 + 8);
      uint64_t v6 = *(void *)(v5 + 16);
      unint64_t v7 = (9 * (__clz(v6 | 1) ^ 0x3F) + 73) >> 6;
      if (v6) {
        unint64_t v8 = v7 + 1;
      }
      else {
        unint64_t v8 = 0;
      }
      if (*(double *)(v5 + 24) != 0.0) {
        v8 += 9;
      }
      *(_DWORD *)(v5 + 32) = v8;
      v4 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6);
      ++v2;
    }
    while (v1 != v2);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t v9 = *((void *)this + 5);
  uint64_t v10 = v4 + ((9 * (__clz(v9 | 1) ^ 0x3F) + 73) >> 6);
  if (v9) {
    uint64_t v4 = v10 + 1;
  }
  if (*((double *)this + 6) != 0.0) {
    v4 += 9;
  }
  *((_DWORD *)this + 14) = v4;
  return v4;
}

uint64_t CoreML::Specification::ItemSimilarityRecommender::MergePartialFromCodedStream(CoreML::Specification::ItemSimilarityRecommender *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (std::string **)((char *)this + 72);
  uint64_t v6 = (std::string **)((char *)this + 64);
  unint64_t v7 = (std::string **)((char *)this + 56);
  unint64_t v8 = (std::string **)((char *)this + 48);
  uint64_t v9 = (std::string **)((char *)this + 40);
  BOOL v51 = (CoreML::Specification::ItemSimilarityRecommender *)((char *)this + 16);
  unint64_t v52 = (std::string **)((char *)this + 80);
  while (1)
  {
LABEL_2:
    uint64_t v10 = *(unsigned __int8 **)a2;
    unint64_t v11 = *((void *)a2 + 1);
    if (*(void *)a2 >= v11)
    {
      LODWORD(v1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
      goto LABEL_16;
    }
    uint64_t v12 = v10 + 1;
    uint64_t v13 = *v10;
    if ((char)*v10 >= 1)
    {
      *(void *)a2 = v12;
      unint64_t v14 = v13 | 0x100000000;
      if ((v14 & 0x100000000) != 0) {
        goto LABEL_17;
      }
      goto LABEL_9;
    }
    if ((unint64_t)v12 < v11)
    {
      int v15 = *v12;
      if ((v13 & ~v15) >= 0x80) {
        break;
      }
    }
LABEL_16:
    unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v13);
    unint64_t v14 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
    if ((v14 & 0x100000000) != 0) {
      goto LABEL_17;
    }
LABEL_9:
    if (v14) {
      BOOL v16 = (v14 & 7) == 4;
    }
    else {
      BOOL v16 = 1;
    }
    if (v16) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v14, a3) & 1) == 0) {
      goto LABEL_109;
    }
  }
  *(void *)a2 = v10 + 2;
  unint64_t v14 = (v13 + (v15 << 7) - 128) | 0x100000000;
LABEL_17:
  switch(v14 >> 3)
  {
    case 1u:
      if (v14 != 10) {
        goto LABEL_9;
      }
      uint64_t v18 = (int *)*((void *)this + 4);
      if (!v18)
      {
        int v19 = *((_DWORD *)this + 6);
        int v20 = *((_DWORD *)this + 7);
LABEL_94:
        if (v19 <= v20)
        {
          google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(v51, v20 - v19 + 1);
          uint64_t v18 = (int *)*((void *)this + 4);
        }
        int v20 = *v18;
        goto LABEL_97;
      }
      int v19 = *((_DWORD *)this + 6);
      int v20 = *v18;
      if (v19 < *v18)
      {
        *((_DWORD *)this + 6) = v19 + 1;
        Aligned = *(google::protobuf::Arena ***)&v18[2 * v19 + 2];
        goto LABEL_102;
      }
      if (v20 == *((_DWORD *)this + 7)) {
        goto LABEL_94;
      }
LABEL_97:
      *uint64_t v18 = v20 + 1;
      uint64_t v40 = *(google::protobuf::Arena **)v51;
      if (!*(void *)v51) {
        operator new();
      }
      CoreML::Specification::ItemSimilarityRecommender_SimilarItems::ItemSimilarityRecommender_SimilarItems((CoreML::Specification::ItemSimilarityRecommender_SimilarItems *)Aligned);
      uint64_t v41 = google::protobuf::Arena::AllocateAligned(v40, 0, 24);
      void *v41 = (google::protobuf::Arena *)Aligned;
      v41[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::ItemSimilarityRecommender_SimilarItems>;
      BOOL v42 = (unint64_t *)((char *)v40 + 32);
      do
        unint64_t v43 = __ldxr(v42);
      while (__stxr((unint64_t)v41, v42));
      v41[2] = (google::protobuf::Arena *)v43;
      uint64_t v44 = *((void *)this + 4);
      uint64_t v45 = *((int *)this + 6);
      *((_DWORD *)this + 6) = v45 + 1;
      *(void *)(v44 + 8 * v45 + 8) = Aligned;
LABEL_102:
      unint64_t v46 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v46 < 0)
      {
        int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (VarintSizeAsIntFallback < 0) {
          goto LABEL_109;
        }
      }
      else
      {
        int VarintSizeAsIntFallback = *v46;
        *(void *)a2 = v46 + 1;
      }
      int v48 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      int v50 = *((_DWORD *)a2 + 13);
      BOOL v34 = __OFSUB__(v50--, 1);
      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v50;
      if (v50 < 0 == v34)
      {
        int v35 = v48;
        uint64_t result = CoreML::Specification::ItemSimilarityRecommender_SimilarItems::MergePartialFromCodedStream((CoreML::Specification::ItemSimilarityRecommender_SimilarItems *)Aligned, a2, v49);
        if (!result) {
          return result;
        }
LABEL_108:
        if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v35)) {
          goto LABEL_2;
        }
      }
LABEL_109:
      uint64_t result = 0;
      break;
    case 2u:
      if (v14 != 18) {
        goto LABEL_9;
      }
      uint64_t v22 = (CoreML::Specification::StringVector *)*((void *)this + 11);
      if (!v22) {
        operator new();
      }
      uint64_t v23 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v23 < 0)
      {
        int v24 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v24 < 0) {
          goto LABEL_109;
        }
      }
      else
      {
        int v24 = *v23;
        *(void *)a2 = v23 + 1;
      }
      int v31 = google::protobuf::io::CodedInputStream::PushLimit(a2, v24);
      int v33 = *((_DWORD *)a2 + 13);
      BOOL v34 = __OFSUB__(v33--, 1);
      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v33;
      if (v33 < 0 != v34) {
        goto LABEL_109;
      }
      int v35 = v31;
      uint64_t result = CoreML::Specification::StringVector::MergePartialFromCodedStream(v22, (char **)a2, v32);
      if (!result) {
        return result;
      }
      goto LABEL_108;
    case 3u:
      if (v14 != 26) {
        goto LABEL_9;
      }
      uint64_t v25 = (CoreML::Specification::Int64Vector *)*((void *)this + 12);
      if (!v25) {
        operator new();
      }
      size_t v26 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v26 < 0)
      {
        int v27 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v27 < 0) {
          goto LABEL_109;
        }
      }
      else
      {
        int v27 = *v26;
        *(void *)a2 = v26 + 1;
      }
      int v36 = google::protobuf::io::CodedInputStream::PushLimit(a2, v27);
      int v38 = *((_DWORD *)a2 + 13);
      BOOL v34 = __OFSUB__(v38--, 1);
      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v38;
      if (v38 < 0 != v34) {
        goto LABEL_109;
      }
      int v35 = v36;
      uint64_t result = CoreML::Specification::Int64Vector::MergePartialFromCodedStream(v25, a2, v37);
      if (!result) {
        return result;
      }
      goto LABEL_108;
    case 0xAu:
      if (v14 != 82) {
        goto LABEL_9;
      }
      if (*v9 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
      }
      uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((unsigned __int8 **)a2, *v9);
      if (!result) {
        return result;
      }
      uint64_t v29 = *v9;
      if (SHIBYTE((*v9)->__r_.__value_.__r.__words[2]) < 0)
      {
        uint64_t v29 = (std::string *)v29->__r_.__value_.__r.__words[0];
        std::string::size_type size = (*v9)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v9)->__r_.__value_.__r.__words[2]);
      }
      int v39 = "CoreML.Specification.ItemSimilarityRecommender.itemInputFeatureName";
      goto LABEL_91;
    case 0xBu:
      if (v14 != 90) {
        goto LABEL_9;
      }
      if (*v8 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
      }
      uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((unsigned __int8 **)a2, *v8);
      if (!result) {
        return result;
      }
      uint64_t v29 = *v8;
      if (SHIBYTE((*v8)->__r_.__value_.__r.__words[2]) < 0)
      {
        uint64_t v29 = (std::string *)v29->__r_.__value_.__r.__words[0];
        std::string::size_type size = (*v8)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v8)->__r_.__value_.__r.__words[2]);
      }
      int v39 = "CoreML.Specification.ItemSimilarityRecommender.numRecommendationsInputFeatureName";
      goto LABEL_91;
    case 0xCu:
      if (v14 != 98) {
        goto LABEL_9;
      }
      if (*v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
      }
      uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((unsigned __int8 **)a2, *v7);
      if (!result) {
        return result;
      }
      uint64_t v29 = *v7;
      if (SHIBYTE((*v7)->__r_.__value_.__r.__words[2]) < 0)
      {
        uint64_t v29 = (std::string *)v29->__r_.__value_.__r.__words[0];
        std::string::size_type size = (*v7)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v7)->__r_.__value_.__r.__words[2]);
      }
      int v39 = "CoreML.Specification.ItemSimilarityRecommender.itemRestrictionInputFeatureName";
      goto LABEL_91;
    case 0xDu:
      if (v14 != 106) {
        goto LABEL_9;
      }
      if (*v6 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
      }
      uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((unsigned __int8 **)a2, *v6);
      if (!result) {
        return result;
      }
      uint64_t v29 = *v6;
      if (SHIBYTE((*v6)->__r_.__value_.__r.__words[2]) < 0)
      {
        uint64_t v29 = (std::string *)v29->__r_.__value_.__r.__words[0];
        std::string::size_type size = (*v6)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v6)->__r_.__value_.__r.__words[2]);
      }
      int v39 = "CoreML.Specification.ItemSimilarityRecommender.itemExclusionInputFeatureName";
      goto LABEL_91;
    case 0x14u:
      if (v14 != 162) {
        goto LABEL_9;
      }
      if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
      }
      uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((unsigned __int8 **)a2, *v5);
      if (!result) {
        return result;
      }
      uint64_t v29 = *v5;
      if (SHIBYTE((*v5)->__r_.__value_.__r.__words[2]) < 0)
      {
        uint64_t v29 = (std::string *)v29->__r_.__value_.__r.__words[0];
        std::string::size_type size = (*v5)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v5)->__r_.__value_.__r.__words[2]);
      }
      int v39 = "CoreML.Specification.ItemSimilarityRecommender.recommendedItemListOutputFeatureName";
      goto LABEL_91;
    case 0x15u:
      if (v14 != 170) {
        goto LABEL_9;
      }
      if (*v52 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
      }
      uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((unsigned __int8 **)a2, *v52);
      if (!result) {
        return result;
      }
      uint64_t v29 = *v52;
      if (SHIBYTE((*v52)->__r_.__value_.__r.__words[2]) < 0)
      {
        uint64_t v29 = (std::string *)v29->__r_.__value_.__r.__words[0];
        std::string::size_type size = (*v52)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v52)->__r_.__value_.__r.__words[2]);
      }
      int v39 = "CoreML.Specification.ItemSimilarityRecommender.recommendedItemScoreOutputFeatureName";
LABEL_91:
      if (!google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)v29, size, 0, (uint64_t)v39)) {
        goto LABEL_109;
      }
      goto LABEL_2;
    default:
      goto LABEL_9;
  }
  return result;
}

void sub_19EB6BAB4(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C407C6D6C37);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::ItemSimilarityRecommender_SimilarItems::MergePartialFromCodedStream(CoreML::Specification::ItemSimilarityRecommender_SimilarItems *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (CoreML::Specification::ItemSimilarityRecommender_SimilarItems *)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v6 = *(char **)a2;
          if (*(void *)a2 < *((void *)a2 + 1)) {
            break;
          }
          LODWORD(v7) = 0;
LABEL_7:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
          unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v8 & 0x100000000) != 0) {
            goto LABEL_8;
          }
LABEL_26:
          if (v8) {
            BOOL v19 = (v8 & 7) == 4;
          }
          else {
            BOOL v19 = 1;
          }
          if (v19) {
            return 1;
          }
          if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)return 0; {
        }
          }
        uint64_t v7 = *v6;
        if (*v6 < 1) {
          goto LABEL_7;
        }
        *(void *)a2 = v6 + 1;
        unint64_t v8 = v7 | 0x100000000;
        if ((v8 & 0x100000000) == 0) {
          goto LABEL_26;
        }
LABEL_8:
        unsigned int v10 = v8 >> 3;
        if (v8 >> 3 != 3) {
          break;
        }
        if (v8 != 25) {
          goto LABEL_26;
        }
        unint64_t v35 = 0;
        uint64_t v13 = *(unint64_t **)a2;
        if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) < 8)
        {
          BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v35);
          if (!result) {
            return result;
          }
          unint64_t v14 = v35;
        }
        else
        {
          unint64_t v14 = *v13;
          *(void *)a2 = v13 + 1;
        }
        *((void *)this + 6) = v14;
      }
      if (v10 == 2) {
        break;
      }
      if (v10 != 1 || v8 != 8) {
        goto LABEL_26;
      }
      uint64_t v12 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v12 < 0)
      {
        *((void *)this + 5) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
        if ((v20 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        *((void *)this + 5) = *v12;
        *(void *)a2 = v12 + 1;
      }
    }
    if (v8 != 18) {
      goto LABEL_26;
    }
    int v15 = (int *)*((void *)this + 4);
    if (!v15)
    {
      int v16 = *((_DWORD *)this + 6);
      int v17 = *((_DWORD *)this + 7);
LABEL_36:
      if (v16 <= v17)
      {
        google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(v5, v17 - v16 + 1);
        int v15 = (int *)*((void *)this + 4);
      }
      int v17 = *v15;
      goto LABEL_39;
    }
    int v16 = *((_DWORD *)this + 6);
    int v17 = *v15;
    if (v16 < *v15)
    {
      *((_DWORD *)this + 6) = v16 + 1;
      Aligned = *(google::protobuf::Arena ***)&v15[2 * v16 + 2];
      goto LABEL_44;
    }
    if (v17 == *((_DWORD *)this + 7)) {
      goto LABEL_36;
    }
LABEL_39:
    *int v15 = v17 + 1;
    uint64_t v21 = *(google::protobuf::Arena **)v5;
    if (!*(void *)v5) {
      operator new();
    }
    CoreML::Specification::ItemSimilarityRecommender_ConnectedItem::ItemSimilarityRecommender_ConnectedItem((CoreML::Specification::ItemSimilarityRecommender_ConnectedItem *)Aligned);
    uint64_t v22 = google::protobuf::Arena::AllocateAligned(v21, 0, 24);
    *uint64_t v22 = (google::protobuf::Arena *)Aligned;
    v22[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::ItemSimilarityRecommender_ConnectedItem>;
    uint64_t v23 = (unint64_t *)((char *)v21 + 32);
    do
      unint64_t v24 = __ldxr(v23);
    while (__stxr((unint64_t)v22, v23));
    v22[2] = (google::protobuf::Arena *)v24;
    uint64_t v25 = *((void *)this + 4);
    uint64_t v26 = *((int *)this + 6);
    *((_DWORD *)this + 6) = v26 + 1;
    *(void *)(v25 + 8 * v26 + 8) = Aligned;
LABEL_44:
    int v27 = *(char **)a2;
    if (*(void *)a2 >= *((void *)a2 + 1) || *v27 < 0)
    {
      int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
      if (VarintSizeAsIntFallback < 0) {
        return 0;
      }
    }
    else
    {
      int VarintSizeAsIntFallback = *v27;
      *(void *)a2 = v27 + 1;
    }
    int v29 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
    int v31 = *((_DWORD *)a2 + 13);
    BOOL v32 = __OFSUB__(v31--, 1);
    *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v31;
    if (v31 < 0 != v32) {
      break;
    }
    int v33 = v29;
    BOOL result = CoreML::Specification::ItemSimilarityRecommender_ConnectedItem::MergePartialFromCodedStream((CoreML::Specification::ItemSimilarityRecommender_ConnectedItem *)Aligned, (char **)a2, v30);
    if (!result) {
      return result;
    }
  }
  while (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v33));
  return 0;
}

void sub_19EB6BE44(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x1081C40B7564605);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<CoreML::Specification::ItemSimilarityRecommender_ConnectedItem>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

CoreML::Specification::ItemSimilarityRecommender_SimilarItems *CoreML::Specification::ItemSimilarityRecommender_SimilarItems::ItemSimilarityRecommender_SimilarItems(CoreML::Specification::ItemSimilarityRecommender_SimilarItems *this)
{
  *(void *)this = &unk_1EF0D9198;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  if (this != (CoreML::Specification::ItemSimilarityRecommender_SimilarItems *)&CoreML::Specification::_ItemSimilarityRecommender_SimilarItems_default_instance_) {
    CoreML::Specification::protobuf_ItemSimilarityRecommender_2eproto::InitDefaults(this);
  }
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0;
  *((_DWORD *)this + 14) = 0;
  return this;
}

void sub_19EB6BF04(_Unwind_Exception *a1)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::NeuralNetworkPreprocessing>::TypeHandler>(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<CoreML::Specification::ItemSimilarityRecommender_SimilarItems>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

std::string *CoreML::Specification::ItemSimilarityRecommender::MergeFrom(std::string *this, const CoreML::Specification::ItemSimilarityRecommender *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  unsigned int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    uint64_t v6 = (const CoreML::Specification::ItemSimilarityRecommender_SimilarItems **)(*((void *)a2 + 4) + 8);
    uint64_t v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)&v3->__r_.__value_.__r.__words[2], *((_DWORD *)a2 + 6));
    this = (std::string *)google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<CoreML::Specification::ItemSimilarityRecommender_SimilarItems>::TypeHandler>(&v3->__r_.__value_.__r.__words[2], (unint64_t **)v7, v6, v5, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    signed int v8 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v5;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v8;
    std::string::size_type size = (signed int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v8) {
      *std::string::size_type size = v8;
    }
  }
  uint64_t v10 = *((void *)a2 + 5);
  if (*(char *)(v10 + 23) < 0)
  {
    if (!*(void *)(v10 + 8)) {
      goto LABEL_14;
    }
  }
  else if (!*(unsigned char *)(v10 + 23))
  {
    goto LABEL_14;
  }
  this = (std::string *)((char *)v3 + 40);
  unint64_t v11 = (long long *)v3[1].__r_.__value_.__r.__words[2];
  if (v11 != (long long *)v10)
  {
    if (v11 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
    }
    this = std::string::operator=((std::string *)v3[1].__r_.__value_.__r.__words[2], (const std::string *)v10);
  }
LABEL_14:
  uint64_t v12 = *((void *)a2 + 6);
  if (*(char *)(v12 + 23) < 0)
  {
    if (!*(void *)(v12 + 8)) {
      goto LABEL_22;
    }
  }
  else if (!*(unsigned char *)(v12 + 23))
  {
    goto LABEL_22;
  }
  this = v3 + 2;
  int data = (long long *)v3[2].__r_.__value_.__l.__data_;
  if (data != (long long *)v12)
  {
    if (data == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
    }
    this = std::string::operator=((std::string *)v3[2].__r_.__value_.__l.__data_, (const std::string *)v12);
  }
LABEL_22:
  uint64_t v14 = *((void *)a2 + 7);
  if (*(char *)(v14 + 23) < 0)
  {
    if (!*(void *)(v14 + 8)) {
      goto LABEL_30;
    }
  }
  else if (!*(unsigned char *)(v14 + 23))
  {
    goto LABEL_30;
  }
  this = (std::string *)((char *)v3 + 56);
  int v15 = (long long *)v3[2].__r_.__value_.__l.__size_;
  if (v15 != (long long *)v14)
  {
    if (v15 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
    }
    this = std::string::operator=((std::string *)v3[2].__r_.__value_.__l.__size_, (const std::string *)v14);
  }
LABEL_30:
  uint64_t v16 = *((void *)a2 + 8);
  if (*(char *)(v16 + 23) < 0)
  {
    if (!*(void *)(v16 + 8)) {
      goto LABEL_38;
    }
  }
  else if (!*(unsigned char *)(v16 + 23))
  {
    goto LABEL_38;
  }
  this = (std::string *)((char *)v3 + 64);
  int v17 = (long long *)v3[2].__r_.__value_.__r.__words[2];
  if (v17 != (long long *)v16)
  {
    if (v17 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
    }
    this = std::string::operator=((std::string *)v3[2].__r_.__value_.__r.__words[2], (const std::string *)v16);
  }
LABEL_38:
  uint64_t v18 = *((void *)a2 + 9);
  if (*(char *)(v18 + 23) < 0)
  {
    if (!*(void *)(v18 + 8)) {
      goto LABEL_46;
    }
  }
  else if (!*(unsigned char *)(v18 + 23))
  {
    goto LABEL_46;
  }
  this = v3 + 3;
  BOOL v19 = (long long *)v3[3].__r_.__value_.__l.__data_;
  if (v19 != (long long *)v18)
  {
    if (v19 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
    }
    this = std::string::operator=((std::string *)v3[3].__r_.__value_.__l.__data_, (const std::string *)v18);
  }
LABEL_46:
  uint64_t v20 = *((void *)a2 + 10);
  if (*(char *)(v20 + 23) < 0)
  {
    if (!*(void *)(v20 + 8)) {
      goto LABEL_54;
    }
  }
  else if (!*(unsigned char *)(v20 + 23))
  {
    goto LABEL_54;
  }
  this = (std::string *)((char *)v3 + 80);
  uint64_t v21 = (long long *)v3[3].__r_.__value_.__l.__size_;
  if (v21 != (long long *)v20)
  {
    if (v21 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
    }
    this = std::string::operator=((std::string *)v3[3].__r_.__value_.__l.__size_, (const std::string *)v20);
  }
LABEL_54:
  if (a2 != (const CoreML::Specification::ItemSimilarityRecommender *)&CoreML::Specification::_ItemSimilarityRecommender_default_instance_)
  {
    if (*((void *)a2 + 11))
    {
      uint64_t v22 = (std::string *)v3[3].__r_.__value_.__r.__words[2];
      if (!v22) {
        operator new();
      }
      this = CoreML::Specification::MILSpec::TensorValue_RepeatedStrings::MergeFrom(v22, *((const CoreML::Specification::MILSpec::TensorValue_RepeatedStrings **)a2 + 11));
    }
    if (*((void *)a2 + 12))
    {
      if (!v3[4].__r_.__value_.__r.__words[0]) {
        operator new();
      }
      uint64_t v23 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts *)*((void *)a2 + 12);
      unint64_t v24 = (unint64_t *)v3[4].__r_.__value_.__l.__data_;
      return (std::string *)CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts::MergeFrom(v24, v23);
    }
  }
  return this;
}

void sub_19EB6C2A8(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

unint64_t *google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<CoreML::Specification::ItemSimilarityRecommender_SimilarItems>::TypeHandler>(unint64_t *result, unint64_t **a2, const CoreML::Specification::ItemSimilarityRecommender_SimilarItems **a3, unsigned int a4, unsigned int a5)
{
  uint64_t v9 = (google::protobuf::Arena **)result;
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    unint64_t v11 = a3;
    uint64_t v12 = a2;
    do
    {
      uint64_t v14 = *v11++;
      uint64_t v13 = v14;
      int v15 = *v12++;
      BOOL result = google::protobuf::internal::GenericTypeHandler<CoreML::Specification::ItemSimilarityRecommender_SimilarItems>::Merge(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    uint64_t v18 = *v9;
    BOOL v19 = (google::protobuf::Arena ***)&a2[a5];
    uint64_t v20 = &a3[a5];
    do
    {
      uint64_t v21 = *v20;
      if (!v18) {
        operator new();
      }
      CoreML::Specification::ItemSimilarityRecommender_SimilarItems::ItemSimilarityRecommender_SimilarItems((CoreML::Specification::ItemSimilarityRecommender_SimilarItems *)Aligned);
      uint64_t v23 = google::protobuf::Arena::AllocateAligned(v18, 0, 24);
      const CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts *v23 = (google::protobuf::Arena *)Aligned;
      v23[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::ItemSimilarityRecommender_SimilarItems>;
      unint64_t v24 = (unint64_t *)((char *)v18 + 32);
      do
        unint64_t v25 = __ldxr(v24);
      while (__stxr((unint64_t)v23, v24));
      v23[2] = (google::protobuf::Arena *)v25;
      BOOL result = google::protobuf::internal::GenericTypeHandler<CoreML::Specification::ItemSimilarityRecommender_SimilarItems>::Merge(v21, (unint64_t *)Aligned);
      *v19++ = Aligned;
      ++v20;
      --v17;
    }
    while (v17);
  }
  return result;
}

void sub_19EB6C404(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C407C6D6C37);
  _Unwind_Resume(a1);
}

unint64_t *google::protobuf::internal::GenericTypeHandler<CoreML::Specification::ItemSimilarityRecommender_SimilarItems>::Merge(const CoreML::Specification::ItemSimilarityRecommender_SimilarItems *a1, unint64_t *a2)
{
  return CoreML::Specification::ItemSimilarityRecommender_SimilarItems::MergeFrom(a2, a1);
}

unint64_t *CoreML::Specification::ItemSimilarityRecommender_SimilarItems::MergeFrom(unint64_t *this, const CoreML::Specification::ItemSimilarityRecommender_SimilarItems *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    uint64_t v30 = *((void *)a2 + 4);
    this = (unint64_t *)google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 2), v5);
    int v29 = this;
    uint64_t v6 = *(int *)v3[4];
    uint64_t v7 = *((int *)v3 + 6);
    int v8 = v6 - v7;
    if ((int)v6 - (int)v7 >= v5) {
      uint64_t v9 = v5;
    }
    else {
      uint64_t v9 = v8;
    }
    if ((int)v9 >= 1)
    {
      uint64_t v10 = (std::string **)this;
      unint64_t v11 = (CoreML::Specification::ItemSimilarityRecommender_ConnectedItem **)(v30 + 8);
      do
      {
        uint64_t v13 = *v11++;
        uint64_t v12 = v13;
        uint64_t v14 = *v10++;
        this = (unint64_t *)google::protobuf::internal::GenericTypeHandler<CoreML::Specification::ItemSimilarityRecommender_ConnectedItem>::Merge(v12, v14);
        --v9;
      }
      while (v9);
    }
    if (v8 < v5)
    {
      int v15 = (google::protobuf::Arena *)v3[2];
      int v16 = v7 + v5 - v6;
      uint64_t v17 = 8 * v6 - 8 * v7;
      uint64_t v18 = (google::protobuf::Arena ***)((char *)v29 + v17);
      BOOL v19 = (CoreML::Specification::ItemSimilarityRecommender_ConnectedItem **)(v17 + v30 + 8);
      do
      {
        uint64_t v20 = *v19;
        if (!v15) {
          operator new();
        }
        CoreML::Specification::ItemSimilarityRecommender_ConnectedItem::ItemSimilarityRecommender_ConnectedItem((CoreML::Specification::ItemSimilarityRecommender_ConnectedItem *)Aligned);
        uint64_t v22 = google::protobuf::Arena::AllocateAligned(v15, 0, 24);
        *uint64_t v22 = (google::protobuf::Arena *)Aligned;
        v22[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::ItemSimilarityRecommender_ConnectedItem>;
        uint64_t v23 = (unint64_t *)((char *)v15 + 32);
        do
          unint64_t v24 = __ldxr(v23);
        while (__stxr((unint64_t)v22, v23));
        v22[2] = (google::protobuf::Arena *)v24;
        this = (unint64_t *)google::protobuf::internal::GenericTypeHandler<CoreML::Specification::ItemSimilarityRecommender_ConnectedItem>::Merge(v20, (std::string *)Aligned);
        *v18++ = Aligned;
        ++v19;
        --v16;
      }
      while (v16);
    }
    int v25 = *((_DWORD *)v3 + 6) + v5;
    *((_DWORD *)v3 + 6) = v25;
    uint64_t v26 = (int *)v3[4];
    if (*v26 < v25) {
      int *v26 = v25;
    }
  }
  unint64_t v27 = *((void *)a2 + 5);
  if (v27) {
    v3[5] = v27;
  }
  double v28 = *((double *)a2 + 6);
  if (v28 != 0.0) {
    *((double *)v3 + 6) = v28;
  }
  return this;
}

void sub_19EB6C600(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x1081C40B7564605);
  _Unwind_Resume(a1);
}

std::string *google::protobuf::internal::GenericTypeHandler<CoreML::Specification::ItemSimilarityRecommender_ConnectedItem>::Merge(CoreML::Specification::ItemSimilarityRecommender_ConnectedItem *a1, std::string *this)
{
  return CoreML::Specification::ItemSimilarityRecommender_ConnectedItem::MergeFrom(this, a1);
}

uint64_t CoreML::Specification::ItemSimilarityRecommender::IsInitialized(CoreML::Specification::ItemSimilarityRecommender *this)
{
  return 1;
}

uint64_t CoreML::Specification::ItemSimilarityRecommender::Clear(CoreML::Specification::ItemSimilarityRecommender *this)
{
  uint64_t v2 = *((unsigned int *)this + 6);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = 0;
    uint64_t v4 = *((void *)this + 4) + 8;
    do
    {
      uint64_t v5 = *(void *)(v4 + 8 * v3);
      uint64_t v6 = *(unsigned int *)(v5 + 24);
      if ((int)v6 >= 1)
      {
        uint64_t v7 = (uint64_t *)(*(void *)(v5 + 32) + 8);
        do
        {
          uint64_t v8 = *v7++;
          *(void *)(v8 + 16) = 0;
          *(void *)(v8 + 24) = 0;
          --v6;
        }
        while (v6);
        *(_DWORD *)(v5 + 24) = 0;
      }
      ++v3;
      *(void *)(v5 + 4CoreML::Specification::NonMaximumSuppression_PickTop::New(this, 0) = 0;
      *(void *)(v5 + 48) = 0;
    }
    while (v3 != v2);
    *((_DWORD *)this + 6) = 0;
  }
  uint64_t v9 = *((void *)this + 5);
  if ((long long *)v9 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v9 + 23) < 0)
    {
      **(unsigned char **)uint64_t v9 = 0;
      *(void *)(v9 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v9 = 0;
      *(unsigned char *)(v9 + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
    }
  }
  uint64_t v10 = *((void *)this + 6);
  if ((long long *)v10 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v10 + 23) < 0)
    {
      **(unsigned char **)uint64_t v10 = 0;
      *(void *)(v10 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v10 = 0;
      *(unsigned char *)(v10 + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
    }
  }
  uint64_t v11 = *((void *)this + 7);
  if ((long long *)v11 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v11 + 23) < 0)
    {
      **(unsigned char **)uint64_t v11 = 0;
      *(void *)(v11 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v11 = 0;
      *(unsigned char *)(v11 + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
    }
  }
  uint64_t v12 = *((void *)this + 8);
  if ((long long *)v12 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v12 + 23) < 0)
    {
      **(unsigned char **)uint64_t v12 = 0;
      *(void *)(v12 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v12 = 0;
      *(unsigned char *)(v12 + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
    }
  }
  uint64_t v13 = *((void *)this + 9);
  if ((long long *)v13 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v13 + 23) < 0)
    {
      **(unsigned char **)uint64_t v13 = 0;
      *(void *)(v13 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v13 = 0;
      *(unsigned char *)(v13 + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
    }
  }
  uint64_t v14 = *((void *)this + 10);
  if ((long long *)v14 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v14 + 23) < 0)
    {
      **(unsigned char **)uint64_t v14 = 0;
      *(void *)(v14 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v14 = 0;
      *(unsigned char *)(v14 + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
    }
  }
  uint64_t v15 = *((void *)this + 11);
  if (v15) {
    (*(void (**)(uint64_t))(*(void *)v15 + 8))(v15);
  }
  *((void *)this + 11) = 0;
  uint64_t result = *((void *)this + 12);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 12) = 0;
  return result;
}

void CoreML::Specification::ItemSimilarityRecommender::New(CoreML::Specification::ItemSimilarityRecommender *this, google::protobuf::Arena *a2)
{
}

void sub_19EB6C878(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C40BDA5CB28);
  _Unwind_Resume(a1);
}

CoreML::Specification::ItemSimilarityRecommender *CoreML::Specification::ItemSimilarityRecommender::ItemSimilarityRecommender(CoreML::Specification::ItemSimilarityRecommender *this)
{
  *(void *)this = &unk_1EF0D69D0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  if (this != (CoreML::Specification::ItemSimilarityRecommender *)&CoreML::Specification::_ItemSimilarityRecommender_default_instance_) {
    CoreML::Specification::protobuf_ItemSimilarityRecommender_2eproto::InitDefaults(this);
  }
  *((void *)this + 5) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 6) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 7) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 8) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 9) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 1CoreML::Specification::NonMaximumSuppression_PickTop::New(this, 0) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 11) = 0;
  *((void *)this + 12) = 0;
  *((_DWORD *)this + 26) = 0;
  return this;
}

void sub_19EB6C928(_Unwind_Exception *a1)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::NeuralNetworkPreprocessing>::TypeHandler>(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::ItemSimilarityRecommender>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::ItemSimilarityRecommender>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::ItemSimilarityRecommender>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::ItemSimilarityRecommender::New(CoreML::Specification::ItemSimilarityRecommender *this)
{
}

void *CoreML::Specification::ItemSimilarityRecommender::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.ItemSimilarityRecommender");
}

void CoreML::Specification::ItemSimilarityRecommender::~ItemSimilarityRecommender(CoreML::Specification::ItemSimilarityRecommender *this)
{
  CoreML::Specification::ItemSimilarityRecommender::~ItemSimilarityRecommender(this);

  JUMPOUT(0x19F3C1920);
}

{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(void *)this = &unk_1EF0D69D0;
  uint64_t v2 = *((void *)this + 5);
  if ((long long *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x19F3C1920](v2, 0x1012C40EC159624);
  }
  uint64_t v4 = *((void *)this + 6);
  if ((long long *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    MEMORY[0x19F3C1920](v4, 0x1012C40EC159624);
  }
  uint64_t v6 = *((void *)this + 7);
  if ((long long *)v6 != &google::protobuf::internal::fixed_address_empty_string && v6)
  {
    if (*(char *)(v6 + 23) < 0) {
      operator delete(*(void **)v6);
    }
    MEMORY[0x19F3C1920](v6, 0x1012C40EC159624);
  }
  uint64_t v7 = *((void *)this + 8);
  if ((long long *)v7 != &google::protobuf::internal::fixed_address_empty_string && v7)
  {
    if (*(char *)(v7 + 23) < 0) {
      operator delete(*(void **)v7);
    }
    MEMORY[0x19F3C1920](v7, 0x1012C40EC159624);
  }
  uint64_t v8 = *((void *)this + 9);
  if ((long long *)v8 != &google::protobuf::internal::fixed_address_empty_string && v8)
  {
    if (*(char *)(v8 + 23) < 0) {
      operator delete(*(void **)v8);
    }
    MEMORY[0x19F3C1920](v8, 0x1012C40EC159624);
  }
  uint64_t v9 = *((void *)this + 10);
  if ((long long *)v9 != &google::protobuf::internal::fixed_address_empty_string && v9)
  {
    if (*(char *)(v9 + 23) < 0) {
      operator delete(*(void **)v9);
    }
    MEMORY[0x19F3C1920](v9, 0x1012C40EC159624);
  }
  if (this != (CoreML::Specification::ItemSimilarityRecommender *)&CoreML::Specification::_ItemSimilarityRecommender_default_instance_)
  {
    uint64_t v10 = *((void *)this + 11);
    if (v10) {
      (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
    }
    uint64_t v11 = *((void *)this + 12);
    if (v11) {
      (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
    }
  }
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::NeuralNetworkPreprocessing>::TypeHandler>((void *)this + 2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::ItemSimilarityRecommender_SimilarItems::GetCachedSize(CoreML::Specification::ItemSimilarityRecommender_SimilarItems *this)
{
  return *((unsigned int *)this + 14);
}

uint64_t CoreML::Specification::ItemSimilarityRecommender_SimilarItems::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, google::protobuf::io::CodedOutputStream *a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  unint64_t v6 = *(void *)(this + 40);
  if (v6) {
    this = google::protobuf::internal::WireFormatLite::WriteUInt64(1, v6, a2, a4);
  }
  int v7 = *(_DWORD *)(v5 + 24);
  if (v7)
  {
    for (int i = 0; i != v7; ++i)
      this = google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)2, *(void *)(*(void *)(v5 + 32) + 8 * i + 8), a2, a4);
  }
  double v9 = *(double *)(v5 + 48);
  if (v9 != 0.0)
  {
    return google::protobuf::internal::WireFormatLite::WriteDouble(3, a2, v9, a3);
  }
  return this;
}

uint64_t CoreML::Specification::ItemSimilarityRecommender_SimilarItems::IsInitialized(CoreML::Specification::ItemSimilarityRecommender_SimilarItems *this)
{
  return 1;
}

uint64_t CoreML::Specification::ItemSimilarityRecommender_SimilarItems::Clear(uint64_t this)
{
  uint64_t v1 = *(unsigned int *)(this + 24);
  if ((int)v1 >= 1)
  {
    uint64_t v2 = (uint64_t *)(*(void *)(this + 32) + 8);
    do
    {
      uint64_t v3 = *v2++;
      *(void *)(v3 + 16) = 0;
      *(void *)(v3 + 24) = 0;
      --v1;
    }
    while (v1);
    *(_DWORD *)(this + 24) = 0;
  }
  *(void *)(this + 4CoreML::Specification::ItemSimilarityRecommender::New(this, 0) = 0;
  *(void *)(this + 48) = 0;
  return this;
}

void CoreML::Specification::ItemSimilarityRecommender_SimilarItems::New(CoreML::Specification::ItemSimilarityRecommender_SimilarItems *this, google::protobuf::Arena *a2)
{
}

void sub_19EB6CD7C(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C407C6D6C37);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::ItemSimilarityRecommender_SimilarItems>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::ItemSimilarityRecommender_SimilarItems>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::ItemSimilarityRecommender_SimilarItems>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::ItemSimilarityRecommender_SimilarItems::New(CoreML::Specification::ItemSimilarityRecommender_SimilarItems *this)
{
}

void *CoreML::Specification::ItemSimilarityRecommender_SimilarItems::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.ItemSimilarityRecommender.SimilarItems");
}

void CoreML::Specification::ItemSimilarityRecommender_SimilarItems::~ItemSimilarityRecommender_SimilarItems(CoreML::Specification::ItemSimilarityRecommender_SimilarItems *this)
{
  CoreML::Specification::ItemSimilarityRecommender_SimilarItems::~ItemSimilarityRecommender_SimilarItems(this);

  JUMPOUT(0x19F3C1920);
}

{
  *(void *)this = &unk_1EF0D9198;
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::NeuralNetworkPreprocessing>::TypeHandler>((void *)this + 2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

void CoreML::Specification::ItemSimilarityRecommender_ConnectedItem::New(CoreML::Specification::ItemSimilarityRecommender_ConnectedItem *this)
{
}

void *CoreML::Specification::ItemSimilarityRecommender_ConnectedItem::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.ItemSimilarityRecommender.ConnectedItem");
}

void CoreML::Specification::ItemSimilarityRecommender_ConnectedItem::~ItemSimilarityRecommender_ConnectedItem(CoreML::Specification::ItemSimilarityRecommender_ConnectedItem *this)
{
  *(void *)this = &unk_1EF0D92C8;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);

  JUMPOUT(0x19F3C1920);
}

{
  *(void *)this = &unk_1EF0D92C8;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

void CoreML::validate<(MLModelType)604>(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    uint64_t v4 = *(uint64_t **)(a2 + 16);
  }
  else {
    uint64_t v4 = &CoreML::Specification::_ModelDescription_default_instance_;
  }
  CoreML::Result::Result((CoreML::Result *)&v33);
  int v5 = *(_DWORD *)(a2 + 24);
  LODWORD(v27) = 0;
  CoreML::validateModelDescription((uint64_t)&v30, (uint64_t)v4, v5, (char *)&v27);
  int v6 = (int)v30;
  int v33 = v30;
  if (SHIBYTE(v35) < 0)
  {
    operator delete((void *)__p);
    int v6 = (int)v33;
  }
  long long __p = v31;
  uint64_t v35 = v32;
  if ((v6 & 0xFFFFFFEF) != 0) {
    goto LABEL_13;
  }
  int v7 = (unsigned int *)operator new(0xCuLL);
  double v28 = v7 + 3;
  int v29 = v7 + 3;
  *(void *)int v7 = 0x200000001;
  v7[2] = 5;
  unint64_t v27 = v7;
  CoreML::validateDescriptionsContainFeatureWithTypes<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>>((uint64_t)&v30, (uint64_t)(v4 + 2), 1, &v27);
  int v33 = v30;
  if (SHIBYTE(v35) < 0) {
    operator delete((void *)__p);
  }
  long long __p = v31;
  uint64_t v35 = v32;
  HIBYTE(v32) = 0;
  LOBYTE(v31) = 0;
  operator delete(v7);
  if ((v33 & 0xFFFFFFEF) != 0) {
    goto LABEL_13;
  }
  uint64_t v8 = (unsigned int *)operator new(0xCuLL);
  double v28 = v8 + 3;
  int v29 = v8 + 3;
  *(void *)uint64_t v8 = 0x200000001;
  v8[2] = 5;
  unint64_t v27 = v8;
  CoreML::validateDescriptionsContainFeatureWithTypes<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>>((uint64_t)&v30, (uint64_t)(v4 + 5), 1, &v27);
  int v33 = v30;
  if (SHIBYTE(v35) < 0) {
    operator delete((void *)__p);
  }
  long long __p = v31;
  uint64_t v35 = v32;
  HIBYTE(v32) = 0;
  LOBYTE(v31) = 0;
  operator delete(v8);
  if ((v33 & 0xFFFFFFEF) != 0) {
    goto LABEL_13;
  }
  uint64_t v10 = *(void *)(v4[4] + 8);
  uint64_t v11 = *(uint64_t **)(v10 + 32);
  if (!v11) {
    uint64_t v11 = &CoreML::Specification::_FeatureType_default_instance_;
  }
  int v12 = *((_DWORD *)v11 + 9);
  uint64_t v13 = *(uint64_t **)(*(void *)(v4[7] + 8) + 32);
  if (!v13) {
    uint64_t v13 = &CoreML::Specification::_FeatureType_default_instance_;
  }
  int v14 = *((_DWORD *)v13 + 9);
  if (v12 == 1)
  {
    if ((v14 - 1) >= 2)
    {
      std::string::basic_string[abi:ne180100]<0>(&v30, "Input type Int64 must output to Int64 or Double.");
      *(void *)a1 = 13;
      std::operator+<char>();
      goto LABEL_44;
    }
    goto LABEL_31;
  }
  if (v14 != v12)
  {
    std::string::basic_string[abi:ne180100]<0>(&v30, "Type of input feature does not match the output type feature.");
    *(void *)a1 = 13;
    std::operator+<char>();
    goto LABEL_44;
  }
  if (v12 != 5)
  {
LABEL_31:
    if (*(_DWORD *)(a2 + 44) == 604)
    {
      uint64_t v18 = *(uint64_t **)(a2 + 32);
    }
    else
    {
      inited = CoreML::Specification::protobuf_Scaler_2eproto::InitDefaults((CoreML::Specification::protobuf_Scaler_2eproto *)inited);
      uint64_t v18 = &CoreML::Specification::_Scaler_default_instance_;
    }
    if (*((_DWORD *)v18 + 4) >= 2u)
    {
      std::string::basic_string[abi:ne180100]<0>(&v30, "For a scalar imput type, specified shift value must be empty or a scalar.");
      *(void *)a1 = 13;
      std::operator+<char>();
      goto LABEL_44;
    }
    if (*(_DWORD *)(a2 + 44) == 604)
    {
      BOOL v19 = *(uint64_t **)(a2 + 32);
    }
    else
    {
      CoreML::Specification::protobuf_Scaler_2eproto::InitDefaults((CoreML::Specification::protobuf_Scaler_2eproto *)inited);
      BOOL v19 = &CoreML::Specification::_Scaler_default_instance_;
    }
    if (*((_DWORD *)v19 + 10) >= 2u)
    {
      std::string::basic_string[abi:ne180100]<0>(&v30, "For input type array, specified scale values must be empty or a scalar.");
      *(void *)a1 = 13;
      std::operator+<char>();
      goto LABEL_44;
    }
LABEL_13:
    *(void *)a1 = v33;
    *(_OWORD *)(a1 + 8) = __p;
    *(void *)(a1 + 24) = v35;
    long long __p = 0uLL;
    uint64_t v35 = 0;
    goto LABEL_14;
  }
  uint64_t v15 = v11[3];
  if (*(_DWORD *)(v15 + 16) == 1)
  {
    uint64_t v16 = v13[3];
    if (*(_DWORD *)(v16 + 16) == 1
      && *(void *)(*(void *)(v15 + 24) + 8) == *(void *)(*(void *)(v16 + 24) + 8))
    {
      if (*(_DWORD *)(a2 + 44) == 604)
      {
        uint64_t v17 = *(uint64_t **)(a2 + 32);
      }
      else
      {
        inited = CoreML::Specification::protobuf_Scaler_2eproto::InitDefaults((CoreML::Specification::protobuf_Scaler_2eproto *)inited);
        uint64_t v17 = &CoreML::Specification::_Scaler_default_instance_;
      }
      uint64_t v20 = *((int *)v17 + 4);
      if (v20 < 2) {
        goto LABEL_54;
      }
      uint64_t v21 = *(uint64_t **)(v10 + 32);
      if (!v21) {
        uint64_t v21 = &CoreML::Specification::_FeatureType_default_instance_;
      }
      if (*((_DWORD *)v21 + 9) == 5)
      {
        uint64_t v22 = (uint64_t *)v21[3];
      }
      else
      {
        inited = CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults((CoreML::Specification::protobuf_FeatureTypes_2eproto *)inited);
        uint64_t v22 = &CoreML::Specification::_ArrayFeatureType_default_instance_;
      }
      if (*(void *)(v22[3] + 8) == v20)
      {
LABEL_54:
        if (*(_DWORD *)(a2 + 44) == 604)
        {
          uint64_t v23 = *(uint64_t **)(a2 + 32);
        }
        else
        {
          inited = CoreML::Specification::protobuf_Scaler_2eproto::InitDefaults((CoreML::Specification::protobuf_Scaler_2eproto *)inited);
          uint64_t v23 = &CoreML::Specification::_Scaler_default_instance_;
        }
        uint64_t v24 = *((int *)v23 + 10);
        if (v24 < 2) {
          goto LABEL_13;
        }
        int v25 = *(uint64_t **)(v10 + 32);
        if (!v25) {
          int v25 = &CoreML::Specification::_FeatureType_default_instance_;
        }
        if (*((_DWORD *)v25 + 9) == 5)
        {
          uint64_t v26 = (uint64_t *)v25[3];
        }
        else
        {
          CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults((CoreML::Specification::protobuf_FeatureTypes_2eproto *)inited);
          uint64_t v26 = &CoreML::Specification::_ArrayFeatureType_default_instance_;
        }
        if (*(void *)(v26[3] + 8) == v24) {
          goto LABEL_13;
        }
        std::string::basic_string[abi:ne180100]<0>(&v30, "For input type array, specified scale values must be empty, a scalar, or a vector of the matching length.");
        *(void *)a1 = 13;
        std::operator+<char>();
      }
      else
      {
        std::string::basic_string[abi:ne180100]<0>(&v30, "For input type array, specified shift values must be empty, a scalar, or a vector of the matching length.");
        *(void *)a1 = 13;
        std::operator+<char>();
      }
    }
    else
    {
      std::string::basic_string[abi:ne180100]<0>(&v30, "Shape of output array does not match shape of input array.");
      *(void *)a1 = 13;
      std::operator+<char>();
    }
  }
  else
  {
    std::string::basic_string[abi:ne180100]<0>(&v30, "Only 1 dimensional arrays input features are supported by the scaler.");
    *(void *)a1 = 13;
    std::operator+<char>();
  }
LABEL_44:
  if (SHIBYTE(v31) < 0) {
    operator delete(v30);
  }
LABEL_14:
  if (SHIBYTE(v35) < 0) {
    operator delete((void *)__p);
  }
}

void sub_19EB6D4DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  _Unwind_Resume(exception_object);
}

uint64_t CoreML::Specification::FeatureVectorizer_InputColumn::GetCachedSize(CoreML::Specification::FeatureVectorizer_InputColumn *this)
{
  return *((unsigned int *)this + 8);
}

uint64_t CoreML::Specification::FeatureVectorizer_InputColumn::SerializeWithCachedSizes(CoreML::Specification::FeatureVectorizer_InputColumn *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t result = *((void *)this + 2);
  if (*(char *)(result + 23) < 0)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      goto LABEL_7;
    }
    uint64_t result = *(void *)result;
    goto LABEL_6;
  }
  LODWORD(v7) = *(unsigned __int8 *)(result + 23);
  if (*(unsigned char *)(result + 23))
  {
LABEL_6:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)result, v7, 1, (uint64_t)"CoreML.Specification.FeatureVectorizer.InputColumn.inputColumn");
    uint64_t result = google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(1u, *((void *)this + 2), a2);
  }
LABEL_7:
  unint64_t v8 = *((void *)this + 3);
  if (v8)
  {
    return google::protobuf::internal::WireFormatLite::WriteUInt64(2, v8, a2, a4);
  }
  return result;
}

uint64_t CoreML::Specification::FeatureVectorizer_InputColumn::ByteSizeLong(CoreML::Specification::FeatureVectorizer_InputColumn *this)
{
  uint64_t v1 = *((void *)this + 2);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 23);
  if (*(char *)(v1 + 23) < 0)
  {
    if (*(void *)(v1 + 8)) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v4 = 0;
    goto LABEL_8;
  }
  if (!*(unsigned char *)(v1 + 23)) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v3 = *(void *)(v1 + 8);
  if ((v2 & 0x80u) == 0) {
    uint64_t v3 = v2;
  }
  uint64_t v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  uint64_t v5 = *((void *)this + 3);
  if (v5) {
    v4 += ((9 * (__clz(v5 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  *((_DWORD *)this + 8) = v4;
  return v4;
}

uint64_t CoreML::Specification::FeatureVectorizer_InputColumn::MergePartialFromCodedStream(CoreML::Specification::FeatureVectorizer_InputColumn *this, char **a2, unsigned int a3)
{
  uint64_t v5 = (std::string **)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        int v6 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(v7) = 0;
LABEL_7:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v7);
          unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v8 & 0x100000000) == 0) {
            goto LABEL_23;
          }
          goto LABEL_8;
        }
        uint64_t v7 = *v6;
        if (*v6 < 1) {
          goto LABEL_7;
        }
        *a2 = v6 + 1;
        unint64_t v8 = v7 | 0x100000000;
        if ((v8 & 0x100000000) == 0) {
          goto LABEL_23;
        }
LABEL_8:
        if (v8 >> 3 != 2) {
          break;
        }
        if (v8 != 16) {
          goto LABEL_23;
        }
        int v14 = *a2;
        if (*a2 >= a2[1] || *v14 < 0)
        {
          *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
          if ((v16 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = *v14;
          *a2 = v14 + 1;
        }
      }
      if (v8 >> 3 != 1 || v8 != 10) {
        break;
      }
      if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
      }
      uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((unsigned __int8 **)a2, *v5);
      if (!result) {
        return result;
      }
      int v12 = (unsigned int *)*v5;
      if (SHIBYTE((*v5)->__r_.__value_.__r.__words[2]) < 0)
      {
        int v12 = *(unsigned int **)v12;
        std::string::size_type size = (*v5)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v5)->__r_.__value_.__r.__words[2]);
      }
      if (!google::protobuf::internal::WireFormatLite::VerifyUtf8String(v12, size, 0, (uint64_t)"CoreML.Specification.FeatureVectorizer.InputColumn.inputColumn"))return 0; {
    }
      }
LABEL_23:
    if (!v8 || (v8 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t CoreML::Specification::FeatureVectorizer_InputColumn::IsInitialized(CoreML::Specification::FeatureVectorizer_InputColumn *this)
{
  return 1;
}

uint64_t CoreML::Specification::FeatureVectorizer_InputColumn::Clear(uint64_t this)
{
  uint64_t v1 = *(void *)(this + 16);
  if ((long long *)v1 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)uint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v1 = 0;
      *(unsigned char *)(v1 + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
    }
  }
  *(void *)(this + 24) = 0;
  return this;
}

void CoreML::Specification::FeatureVectorizer_InputColumn::New(CoreML::Specification::FeatureVectorizer_InputColumn *this, google::protobuf::Arena *a2)
{
}

void sub_19EB6D8B0(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C4056DF9CA5);
  _Unwind_Resume(a1);
}

CoreML::Specification::FeatureVectorizer_InputColumn *CoreML::Specification::FeatureVectorizer_InputColumn::FeatureVectorizer_InputColumn(CoreML::Specification::FeatureVectorizer_InputColumn *this)
{
  *(void *)this = &unk_1EF0D7E98;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::FeatureVectorizer_InputColumn *)&CoreML::Specification::_FeatureVectorizer_InputColumn_default_instance_) {
    CoreML::Specification::protobuf_FeatureVectorizer_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  return this;
}

void sub_19EB6D940(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::FeatureVectorizer_InputColumn>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::FeatureVectorizer_InputColumn>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::FeatureVectorizer_InputColumn>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

uint64_t CoreML::Specification::FeatureVectorizer::GetCachedSize(CoreML::Specification::FeatureVectorizer *this)
{
  return *((unsigned int *)this + 10);
}

uint64_t CoreML::Specification::FeatureVectorizer::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  int v4 = *(_DWORD *)(this + 24);
  if (v4)
  {
    uint64_t v6 = this;
    for (int i = 0; i != v4; ++i)
      this = google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)1, *(void *)(*(void *)(v6 + 32) + 8 * i + 8), a2, a4);
  }
  return this;
}

uint64_t CoreML::Specification::FeatureVectorizer::ByteSizeLong(CoreML::Specification::FeatureVectorizer *this)
{
  int v2 = *((_DWORD *)this + 6);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = *((unsigned int *)this + 6);
    do
    {
      uint64_t v5 = CoreML::Specification::FeatureVectorizer_InputColumn::ByteSizeLong(*(CoreML::Specification::FeatureVectorizer_InputColumn **)(*((void *)this + 4) + 8 * v3 + 8));
      v4 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  *((_DWORD *)this + 1CoreML::Specification::ItemSimilarityRecommender_ConnectedItem::New(this, 0) = v4;
  return v4;
}

uint64_t CoreML::Specification::FeatureVectorizer::MergePartialFromCodedStream(CoreML::Specification::FeatureVectorizer *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (CoreML::Specification::FeatureVectorizer *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      uint64_t v6 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      if (v8 != 10 || (v8 & 0xFFFFFFF8) != 8) {
        break;
      }
      int v12 = (int *)*((void *)this + 4);
      if (!v12)
      {
        int v13 = *((_DWORD *)this + 6);
        int v14 = *((_DWORD *)this + 7);
LABEL_23:
        if (v13 <= v14)
        {
          google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(v5, v14 - v13 + 1);
          int v12 = (int *)*((void *)this + 4);
        }
        int v14 = *v12;
        goto LABEL_26;
      }
      int v13 = *((_DWORD *)this + 6);
      int v14 = *v12;
      if (v13 < *v12)
      {
        *((_DWORD *)this + 6) = v13 + 1;
        Aligned = *(google::protobuf::Arena ***)&v12[2 * v13 + 2];
        goto LABEL_31;
      }
      if (v14 == *((_DWORD *)this + 7)) {
        goto LABEL_23;
      }
LABEL_26:
      *int v12 = v14 + 1;
      char v16 = *(google::protobuf::Arena **)v5;
      if (!*(void *)v5) {
        operator new();
      }
      CoreML::Specification::FeatureVectorizer_InputColumn::FeatureVectorizer_InputColumn((CoreML::Specification::FeatureVectorizer_InputColumn *)Aligned);
      uint64_t v17 = google::protobuf::Arena::AllocateAligned(v16, 0, 24);
      *uint64_t v17 = (google::protobuf::Arena *)Aligned;
      v17[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::FeatureVectorizer_InputColumn>;
      uint64_t v18 = (unint64_t *)((char *)v16 + 32);
      do
        unint64_t v19 = __ldxr(v18);
      while (__stxr((unint64_t)v17, v18));
      v17[2] = (google::protobuf::Arena *)v19;
      uint64_t v20 = *((void *)this + 4);
      uint64_t v21 = *((int *)this + 6);
      *((_DWORD *)this + 6) = v21 + 1;
      *(void *)(v20 + 8 * v21 + 8) = Aligned;
LABEL_31:
      uint64_t v22 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v22 < 0)
      {
        int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (VarintSizeAsIntFallback < 0) {
          return 0;
        }
      }
      else
      {
        int VarintSizeAsIntFallback = *v22;
        *(void *)a2 = v22 + 1;
      }
      int v24 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      int v26 = *((_DWORD *)a2 + 13);
      BOOL v27 = __OFSUB__(v26--, 1);
      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v26;
      if (v26 < 0 == v27)
      {
        int v28 = v24;
        uint64_t result = CoreML::Specification::FeatureVectorizer_InputColumn::MergePartialFromCodedStream((CoreML::Specification::FeatureVectorizer_InputColumn *)Aligned, (char **)a2, v25);
        if (!result) {
          return result;
        }
        if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v28)) {
          continue;
        }
      }
      return 0;
    }
    if (!v8 || (v8 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_19EB6DD04(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C4056DF9CA5);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<CoreML::Specification::FeatureVectorizer_InputColumn>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

unint64_t *CoreML::Specification::FeatureVectorizer::MergeFrom(unint64_t *this, const CoreML::Specification::FeatureVectorizer *a2)
{
  int v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    uint64_t v28 = *((void *)a2 + 4);
    this = (unint64_t *)google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 2), v5);
    uint64_t v6 = this;
    uint64_t v7 = *(int *)v3[4];
    uint64_t v8 = *((int *)v3 + 6);
    int v9 = v7 - v8;
    if ((int)v7 - (int)v8 >= v5) {
      uint64_t v10 = v5;
    }
    else {
      uint64_t v10 = v9;
    }
    if ((int)v10 >= 1)
    {
      uint64_t v11 = (CoreML::Specification::MILSpec::Value_BlobFileValue **)(v28 + 8);
      int v12 = (std::string **)this;
      do
      {
        int v14 = *v11++;
        int v13 = v14;
        uint64_t v15 = *v12++;
        this = (unint64_t *)google::protobuf::internal::GenericTypeHandler<CoreML::Specification::FeatureVectorizer_InputColumn>::Merge(v13, v15);
        --v10;
      }
      while (v10);
    }
    if (v9 < v5)
    {
      char v16 = (google::protobuf::Arena *)v3[2];
      int v17 = v8 + v5 - v7;
      uint64_t v18 = 8 * v7 - 8 * v8;
      unint64_t v19 = (google::protobuf::Arena ***)((char *)v6 + v18);
      uint64_t v20 = (CoreML::Specification::MILSpec::Value_BlobFileValue **)(v18 + v28 + 8);
      do
      {
        uint64_t v21 = *v20;
        if (!v16) {
          operator new();
        }
        CoreML::Specification::FeatureVectorizer_InputColumn::FeatureVectorizer_InputColumn((CoreML::Specification::FeatureVectorizer_InputColumn *)Aligned);
        uint64_t v23 = google::protobuf::Arena::AllocateAligned(v16, 0, 24);
        uint64_t *v23 = (google::protobuf::Arena *)Aligned;
        v23[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::FeatureVectorizer_InputColumn>;
        int v24 = (unint64_t *)((char *)v16 + 32);
        do
          unint64_t v25 = __ldxr(v24);
        while (__stxr((unint64_t)v23, v24));
        v23[2] = (google::protobuf::Arena *)v25;
        this = (unint64_t *)google::protobuf::internal::GenericTypeHandler<CoreML::Specification::FeatureVectorizer_InputColumn>::Merge(v21, (std::string *)Aligned);
        *v19++ = Aligned;
        ++v20;
        --v17;
      }
      while (v17);
    }
    int v26 = *((_DWORD *)v3 + 6) + v5;
    *((_DWORD *)v3 + 6) = v26;
    BOOL v27 = (int *)v3[4];
    if (*v27 < v26) {
      *BOOL v27 = v26;
    }
  }
  return this;
}

void sub_19EB6DEFC(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C4056DF9CA5);
  _Unwind_Resume(a1);
}

std::string *google::protobuf::internal::GenericTypeHandler<CoreML::Specification::FeatureVectorizer_InputColumn>::Merge(CoreML::Specification::MILSpec::Value_BlobFileValue *a1, std::string *this)
{
  return CoreML::Specification::MILSpec::Value_BlobFileValue::MergeFrom(this, a1);
}

uint64_t CoreML::Specification::FeatureVectorizer::IsInitialized(CoreML::Specification::FeatureVectorizer *this)
{
  return 1;
}

uint64_t CoreML::Specification::FeatureVectorizer::Clear(uint64_t this)
{
  uint64_t v1 = *(unsigned int *)(this + 24);
  if ((int)v1 >= 1)
  {
    uint64_t v2 = *(void *)(this + 32) + 8;
    do
    {
      uint64_t v3 = *(void *)v2;
      uint64_t v4 = *(void *)(*(void *)v2 + 16);
      if ((long long *)v4 != &google::protobuf::internal::fixed_address_empty_string)
      {
        if (*(char *)(v4 + 23) < 0)
        {
          **(unsigned char **)uint64_t v4 = 0;
          *(void *)(v4 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v4 = 0;
          *(unsigned char *)(v4 + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
        }
      }
      *(void *)(v3 + 24) = 0;
      v2 += 8;
      --v1;
    }
    while (v1);
    *(_DWORD *)(this + 24) = 0;
  }
  return this;
}

void CoreML::Specification::FeatureVectorizer::New(CoreML::Specification::FeatureVectorizer *this, google::protobuf::Arena *a2)
{
}

void sub_19EB6DFF0(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

CoreML::Specification::FeatureVectorizer *CoreML::Specification::FeatureVectorizer::FeatureVectorizer(CoreML::Specification::FeatureVectorizer *this)
{
  *(void *)this = &unk_1EF0D2620;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  if (this != (CoreML::Specification::FeatureVectorizer *)&CoreML::Specification::_FeatureVectorizer_default_instance_) {
    CoreML::Specification::protobuf_FeatureVectorizer_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 1CoreML::Specification::ItemSimilarityRecommender_ConnectedItem::New(this, 0) = 0;
  return this;
}

void sub_19EB6E088(_Unwind_Exception *a1)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::NeuralNetworkPreprocessing>::TypeHandler>(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::FeatureVectorizer>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::FeatureVectorizer>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::FeatureVectorizer>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::FeatureVectorizer::New(CoreML::Specification::FeatureVectorizer *this)
{
}

void *CoreML::Specification::FeatureVectorizer::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.FeatureVectorizer");
}

void CoreML::Specification::FeatureVectorizer::~FeatureVectorizer(CoreML::Specification::FeatureVectorizer *this)
{
  CoreML::Specification::FeatureVectorizer::~FeatureVectorizer(this);

  JUMPOUT(0x19F3C1920);
}

{
  *(void *)this = &unk_1EF0D2620;
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::NeuralNetworkPreprocessing>::TypeHandler>((void *)this + 2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

void CoreML::Specification::FeatureVectorizer_InputColumn::New(CoreML::Specification::FeatureVectorizer_InputColumn *this)
{
}

void *CoreML::Specification::FeatureVectorizer_InputColumn::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.FeatureVectorizer.InputColumn");
}

void CoreML::Specification::FeatureVectorizer_InputColumn::~FeatureVectorizer_InputColumn(CoreML::Specification::FeatureVectorizer_InputColumn *this)
{
  *(void *)this = &unk_1EF0D7E98;
  google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(*((void *)this + 2));
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);

  JUMPOUT(0x19F3C1920);
}

{
  *(void *)this = &unk_1EF0D7E98;
  google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(*((void *)this + 2));
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

void CoreML::validate<(MLModelType)603>(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    uint64_t v4 = *(uint64_t **)(a2 + 16);
  }
  else {
    uint64_t v4 = &CoreML::Specification::_ModelDescription_default_instance_;
  }
  CoreML::Result::Result((CoreML::Result *)&v17);
  int v5 = *(_DWORD *)(a2 + 24);
  LODWORD(v11) = 0;
  CoreML::validateModelDescription((uint64_t)&v14, (uint64_t)v4, v5, (char *)&v11);
  int v6 = (int)v14;
  int v17 = v14;
  if (SHIBYTE(v19) < 0)
  {
    operator delete((void *)__p);
    int v6 = (int)v17;
  }
  long long __p = v15;
  uint64_t v19 = v16;
  if ((v6 & 0xFFFFFFEF) != 0) {
    goto LABEL_17;
  }
  uint64_t v7 = (unsigned int *)operator new(4uLL);
  *uint64_t v7 = 6;
  int v12 = v7 + 1;
  int v13 = v7 + 1;
  uint64_t v11 = v7;
  CoreML::validateDescriptionsContainFeatureWithTypes<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>>((uint64_t)&v14, (uint64_t)(v4 + 2), 1, &v11);
  int v17 = v14;
  if (SHIBYTE(v19) < 0) {
    operator delete((void *)__p);
  }
  long long __p = v15;
  uint64_t v19 = v16;
  HIBYTE(v16) = 0;
  LOBYTE(v15) = 0;
  operator delete(v7);
  if ((v17 & 0xFFFFFFEF) != 0) {
    goto LABEL_17;
  }
  uint64_t v8 = (unsigned int *)operator new(4uLL);
  *uint64_t v8 = 6;
  int v12 = v8 + 1;
  int v13 = v8 + 1;
  uint64_t v11 = v8;
  CoreML::validateDescriptionsContainFeatureWithTypes<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>>((uint64_t)&v14, (uint64_t)(v4 + 5), 1, &v11);
  int v17 = v14;
  if (SHIBYTE(v19) < 0) {
    operator delete((void *)__p);
  }
  long long __p = v15;
  uint64_t v19 = v16;
  HIBYTE(v16) = 0;
  LOBYTE(v15) = 0;
  operator delete(v8);
  if ((v17 & 0xFFFFFFEF) != 0
    || (*(_DWORD *)(a2 + 44) != 603
      ? (CoreML::Specification::protobuf_DictVectorizer_2eproto::InitDefaults(v9),
         uint64_t v10 = &CoreML::Specification::_DictVectorizer_default_instance_)
      : (uint64_t v10 = *(uint64_t **)(a2 + 32)),
        *((_DWORD *)v10 + 7)))
  {
LABEL_17:
    *(void *)a1 = v17;
    *(_OWORD *)(a1 + 8) = __p;
    *(void *)(a1 + 24) = v19;
  }
  else
  {
    std::string::basic_string[abi:ne180100]<0>(&v14, "DictVectorizerValidator parameter not set");
    *(void *)a1 = 13;
    std::operator+<char>();
    if (SHIBYTE(v15) < 0) {
      operator delete(v14);
    }
    if (SHIBYTE(v19) < 0) {
      operator delete((void *)__p);
    }
  }
}

void sub_19EB6E4DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  _Unwind_Resume(exception_object);
}

uint64_t CoreML::Specification::CoreMLModels::WordTagger::GetCachedSize(CoreML::Specification::CoreMLModels::WordTagger *this)
{
  return *((unsigned int *)this + 20);
}

uint64_t CoreML::Specification::CoreMLModels::WordTagger::SerializeWithCachedSizes(CoreML::Specification::CoreMLModels::WordTagger *this, google::protobuf::io::CodedOutputStream *a2, unsigned int a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v6 = *((unsigned int *)this + 16);
  if (v6) {
    google::protobuf::internal::WireFormatLite::WriteUInt32(v6, a2, a3, a4);
  }
  uint64_t v7 = (unsigned int *)*((void *)this + 2);
  if (*((char *)v7 + 23) < 0)
  {
    uint64_t v8 = *((void *)v7 + 1);
    if (!v8) {
      goto LABEL_9;
    }
    uint64_t v7 = *(unsigned int **)v7;
    goto LABEL_8;
  }
  LODWORD(v8) = *((unsigned __int8 *)v7 + 23);
  if (*((unsigned char *)v7 + 23))
  {
LABEL_8:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v7, v8, 1, (uint64_t)"CoreML.Specification.CoreMLModels.WordTagger.language");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0xAu, *((void *)this + 2), a2);
  }
LABEL_9:
  int v9 = (unsigned int *)*((void *)this + 3);
  if (*((char *)v9 + 23) < 0)
  {
    uint64_t v10 = *((void *)v9 + 1);
    if (!v10) {
      goto LABEL_15;
    }
    int v9 = *(unsigned int **)v9;
    goto LABEL_14;
  }
  LODWORD(v1CoreML::Specification::FeatureVectorizer_InputColumn::New(this, 0) = *((unsigned __int8 *)v9 + 23);
  if (*((unsigned char *)v9 + 23))
  {
LABEL_14:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v9, v10, 1, (uint64_t)"CoreML.Specification.CoreMLModels.WordTagger.tokensOutputFeatureName");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0x14u, *((void *)this + 3), a2);
  }
LABEL_15:
  uint64_t v11 = (unsigned int *)*((void *)this + 4);
  if (*((char *)v11 + 23) < 0)
  {
    uint64_t v12 = *((void *)v11 + 1);
    if (!v12) {
      goto LABEL_21;
    }
    uint64_t v11 = *(unsigned int **)v11;
    goto LABEL_20;
  }
  LODWORD(v12) = *((unsigned __int8 *)v11 + 23);
  if (*((unsigned char *)v11 + 23))
  {
LABEL_20:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v11, v12, 1, (uint64_t)"CoreML.Specification.CoreMLModels.WordTagger.tokenTagsOutputFeatureName");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0x15u, *((void *)this + 4), a2);
  }
LABEL_21:
  int v13 = (unsigned int *)*((void *)this + 5);
  if (*((char *)v13 + 23) < 0)
  {
    uint64_t v14 = *((void *)v13 + 1);
    if (!v14) {
      goto LABEL_27;
    }
    int v13 = *(unsigned int **)v13;
    goto LABEL_26;
  }
  LODWORD(v14) = *((unsigned __int8 *)v13 + 23);
  if (*((unsigned char *)v13 + 23))
  {
LABEL_26:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v13, v14, 1, (uint64_t)"CoreML.Specification.CoreMLModels.WordTagger.tokenLocationsOutputFeatureName");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0x16u, *((void *)this + 5), a2);
  }
LABEL_27:
  uint64_t result = *((void *)this + 6);
  if (*(char *)(result + 23) < 0)
  {
    uint64_t v16 = *(void *)(result + 8);
    if (!v16) {
      goto LABEL_33;
    }
    uint64_t result = *(void *)result;
    goto LABEL_32;
  }
  LODWORD(v16) = *(unsigned __int8 *)(result + 23);
  if (*(unsigned char *)(result + 23))
  {
LABEL_32:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)result, v16, 1, (uint64_t)"CoreML.Specification.CoreMLModels.WordTagger.tokenLengthsOutputFeatureName");
    uint64_t result = google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0x17u, *((void *)this + 6), a2);
  }
LABEL_33:
  uint64_t v17 = *((void *)this + 7);
  if ((*(char *)(v17 + 23) & 0x80000000) == 0)
  {
    if (!*(unsigned char *)(v17 + 23)) {
      goto LABEL_36;
    }
    goto LABEL_35;
  }
  if (*(void *)(v17 + 8)) {
LABEL_35:
  }
    uint64_t result = google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(0x64u, v17, a2);
LABEL_36:
  if (*((_DWORD *)this + 21) == 200)
  {
    uint64_t v18 = *((void *)this + 9);
    return google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)0xC8, v18, a2, a4);
  }
  return result;
}

uint64_t CoreML::Specification::CoreMLModels::WordTagger::ByteSizeLong(CoreML::Specification::CoreMLModels::WordTagger *this)
{
  uint64_t v2 = *((void *)this + 2);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
  if (*(char *)(v2 + 23) < 0)
  {
    if (*(void *)(v2 + 8)) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v5 = 0;
    goto LABEL_8;
  }
  if (!*(unsigned char *)(v2 + 23)) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v4 = *(void *)(v2 + 8);
  if ((v3 & 0x80u) == 0) {
    uint64_t v4 = v3;
  }
  uint64_t v5 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  uint64_t v6 = *((void *)this + 3);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
  if (*(char *)(v6 + 23) < 0)
  {
    if (!*(void *)(v6 + 8)) {
      goto LABEL_13;
    }
  }
  else if (!*(unsigned char *)(v6 + 23))
  {
    goto LABEL_13;
  }
  uint64_t v8 = *(void *)(v6 + 8);
  if ((v7 & 0x80u) == 0) {
    uint64_t v8 = v7;
  }
  v5 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_13:
  uint64_t v9 = *((void *)this + 4);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
  if (*(char *)(v9 + 23) < 0)
  {
    if (!*(void *)(v9 + 8)) {
      goto LABEL_18;
    }
  }
  else if (!*(unsigned char *)(v9 + 23))
  {
    goto LABEL_18;
  }
  uint64_t v11 = *(void *)(v9 + 8);
  if ((v10 & 0x80u) == 0) {
    uint64_t v11 = v10;
  }
  v5 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_18:
  uint64_t v12 = *((void *)this + 5);
  uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
  if (*(char *)(v12 + 23) < 0)
  {
    if (!*(void *)(v12 + 8)) {
      goto LABEL_23;
    }
  }
  else if (!*(unsigned char *)(v12 + 23))
  {
    goto LABEL_23;
  }
  uint64_t v14 = *(void *)(v12 + 8);
  if ((v13 & 0x80u) == 0) {
    uint64_t v14 = v13;
  }
  v5 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_23:
  uint64_t v15 = *((void *)this + 6);
  uint64_t v16 = *(unsigned __int8 *)(v15 + 23);
  if (*(char *)(v15 + 23) < 0)
  {
    if (!*(void *)(v15 + 8)) {
      goto LABEL_28;
    }
  }
  else if (!*(unsigned char *)(v15 + 23))
  {
    goto LABEL_28;
  }
  uint64_t v17 = *(void *)(v15 + 8);
  if ((v16 & 0x80u) == 0) {
    uint64_t v17 = v16;
  }
  v5 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_28:
  uint64_t v18 = *((void *)this + 7);
  uint64_t v19 = *(unsigned __int8 *)(v18 + 23);
  if (*(char *)(v18 + 23) < 0)
  {
    if (!*(void *)(v18 + 8)) {
      goto LABEL_33;
    }
  }
  else if (!*(unsigned char *)(v18 + 23))
  {
    goto LABEL_33;
  }
  uint64_t v20 = *(void *)(v18 + 8);
  if ((v19 & 0x80u) == 0) {
    uint64_t v20 = v19;
  }
  v5 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_33:
  int v21 = *((_DWORD *)this + 16);
  if (v21) {
    v5 += ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  if (*((_DWORD *)this + 21) == 200)
  {
    uint64_t v22 = CoreML::Specification::StringVector::ByteSizeLong(*((CoreML::Specification::StringVector **)this + 9));
    v5 += v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
  *((_DWORD *)this + 2CoreML::Specification::FeatureVectorizer_InputColumn::New(this, 0) = v5;
  return v5;
}

uint64_t CoreML::Specification::CoreMLModels::WordTagger::MergePartialFromCodedStream(CoreML::Specification::CoreMLModels::WordTagger *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v4 = this;
  uint64_t v5 = (std::string **)((char *)this + 56);
  uint64_t v6 = (std::string **)((char *)this + 48);
  uint64_t v7 = (std::string **)((char *)this + 40);
  uint64_t v8 = (std::string **)((char *)this + 32);
  uint64_t v9 = (std::string **)((char *)this + 24);
  uint64_t v10 = (std::string **)((char *)this + 16);
  uint64_t v11 = &google::protobuf::internal::fixed_address_empty_string;
  while (1)
  {
LABEL_2:
    uint64_t v12 = *(unsigned __int8 **)a2;
    unint64_t v13 = *((void *)a2 + 1);
    if (*(void *)a2 >= v13)
    {
      LODWORD(v15) = 0;
    }
    else
    {
      uint64_t v14 = v12 + 1;
      uint64_t v15 = *v12;
      if ((char)*v12 >= 1)
      {
        *(void *)a2 = v14;
        unint64_t v16 = v15 | 0x100000000;
        if ((v16 & 0x100000000) == 0) {
          goto LABEL_9;
        }
        goto LABEL_17;
      }
      if ((unint64_t)v14 < v13)
      {
        int v17 = *v14;
        if ((v15 & ~v17) >= 0x80)
        {
          *(void *)a2 = v12 + 2;
          unint64_t v16 = (v15 + (v17 << 7) - 128) | 0x100000000;
          goto LABEL_17;
        }
      }
    }
    unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v15);
    unint64_t v16 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
    if ((v16 & 0x100000000) == 0) {
      goto LABEL_9;
    }
LABEL_17:
    unsigned int v20 = v16 >> 3;
    if (v16 >> 3 > 0x13) {
      break;
    }
    if (v20 == 1)
    {
      if (v16 != 8) {
        goto LABEL_9;
      }
      unint64_t v25 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        int v26 = 0;
        goto LABEL_87;
      }
      int v26 = *v25;
      if (*v25 < 0)
      {
LABEL_87:
        uint64_t Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v26);
        *((_DWORD *)v4 + 16) = Varint32Fallback;
        if (Varint32Fallback < 0) {
          return 0;
        }
      }
      else
      {
        *((_DWORD *)v4 + 16) = v26;
        *(void *)a2 = v25 + 1;
      }
    }
    else
    {
      if (v20 != 10 || v16 != 82) {
        goto LABEL_9;
      }
      if (*v10 == (std::string *)v11) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
      }
      uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((unsigned __int8 **)a2, *v10);
      if (!result) {
        return result;
      }
      uint64_t v22 = *v10;
      if (SHIBYTE((*v10)->__r_.__value_.__r.__words[2]) < 0)
      {
        uint64_t v22 = (std::string *)v22->__r_.__value_.__r.__words[0];
        std::string::size_type size = (*v10)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v10)->__r_.__value_.__r.__words[2]);
      }
      BOOL v42 = "CoreML.Specification.CoreMLModels.WordTagger.language";
LABEL_84:
      if (!google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)v22, size, 0, (uint64_t)v42)) {
        return 0;
      }
    }
  }
  switch(v20)
  {
    case 0x14u:
      if (v16 != 162) {
        goto LABEL_9;
      }
      if (*v9 == (std::string *)v11) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
      }
      uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((unsigned __int8 **)a2, *v9);
      if (!result) {
        return result;
      }
      uint64_t v22 = *v9;
      if (SHIBYTE((*v9)->__r_.__value_.__r.__words[2]) < 0)
      {
        uint64_t v22 = (std::string *)v22->__r_.__value_.__r.__words[0];
        std::string::size_type size = (*v9)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v9)->__r_.__value_.__r.__words[2]);
      }
      BOOL v42 = "CoreML.Specification.CoreMLModels.WordTagger.tokensOutputFeatureName";
      goto LABEL_84;
    case 0x15u:
      if (v16 != 170) {
        goto LABEL_9;
      }
      if (*v8 == (std::string *)v11) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
      }
      uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((unsigned __int8 **)a2, *v8);
      if (!result) {
        return result;
      }
      uint64_t v22 = *v8;
      if (SHIBYTE((*v8)->__r_.__value_.__r.__words[2]) < 0)
      {
        uint64_t v22 = (std::string *)v22->__r_.__value_.__r.__words[0];
        std::string::size_type size = (*v8)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v8)->__r_.__value_.__r.__words[2]);
      }
      BOOL v42 = "CoreML.Specification.CoreMLModels.WordTagger.tokenTagsOutputFeatureName";
      goto LABEL_84;
    case 0x16u:
      if (v16 != 178) {
        goto LABEL_9;
      }
      if (*v7 == (std::string *)v11) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
      }
      uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((unsigned __int8 **)a2, *v7);
      if (!result) {
        return result;
      }
      uint64_t v22 = *v7;
      if (SHIBYTE((*v7)->__r_.__value_.__r.__words[2]) < 0)
      {
        uint64_t v22 = (std::string *)v22->__r_.__value_.__r.__words[0];
        std::string::size_type size = (*v7)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v7)->__r_.__value_.__r.__words[2]);
      }
      BOOL v42 = "CoreML.Specification.CoreMLModels.WordTagger.tokenLocationsOutputFeatureName";
      goto LABEL_84;
    case 0x17u:
      if (v16 != 186) {
        goto LABEL_9;
      }
      if (*v6 == (std::string *)v11) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
      }
      uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((unsigned __int8 **)a2, *v6);
      if (!result) {
        return result;
      }
      uint64_t v22 = *v6;
      if (SHIBYTE((*v6)->__r_.__value_.__r.__words[2]) < 0)
      {
        uint64_t v22 = (std::string *)v22->__r_.__value_.__r.__words[0];
        std::string::size_type size = (*v6)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v6)->__r_.__value_.__r.__words[2]);
      }
      BOOL v42 = "CoreML.Specification.CoreMLModels.WordTagger.tokenLengthsOutputFeatureName";
      goto LABEL_84;
    default:
      if (v20 != 100)
      {
        if (v20 != 200 || v16 != 66) {
          goto LABEL_9;
        }
        if (*((_DWORD *)v4 + 21) != 200)
        {
          *((_DWORD *)v4 + 21) = 200;
          operator new();
        }
        int v24 = (CoreML::Specification::StringVector *)*((void *)v4 + 9);
        BOOL v27 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v27 < 0)
        {
          int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0) {
            return 0;
          }
        }
        else
        {
          int VarintSizeAsIntFallback = *v27;
          *(void *)a2 = v27 + 1;
        }
        int v29 = v11;
        uint64_t v30 = v10;
        long long v31 = v9;
        uint64_t v32 = v8;
        int v33 = v7;
        BOOL v34 = v6;
        uint64_t v35 = v5;
        int v36 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        int v38 = *((_DWORD *)a2 + 13);
        BOOL v39 = __OFSUB__(v38--, 1);
        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v38;
        if (v38 < 0 != v39) {
          return 0;
        }
        int v40 = v36;
        uint64_t result = CoreML::Specification::StringVector::MergePartialFromCodedStream(v24, (char **)a2, v37);
        if (!result) {
          return result;
        }
        BOOL v41 = google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v40);
        uint64_t v5 = v35;
        uint64_t v6 = v34;
        uint64_t v7 = v33;
        uint64_t v8 = v32;
        uint64_t v9 = v31;
        uint64_t v10 = v30;
        uint64_t v11 = v29;
        uint64_t v4 = this;
        if (!v41) {
          return 0;
        }
        goto LABEL_2;
      }
      if (v16 == 34)
      {
        if (*v5 == (std::string *)v11) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
        }
        if ((google::protobuf::internal::WireFormatLite::ReadBytes((unsigned __int8 **)a2, *v5) & 1) == 0) {
          return 0;
        }
        goto LABEL_2;
      }
LABEL_9:
      if (v16) {
        BOOL v18 = (v16 & 7) == 4;
      }
      else {
        BOOL v18 = 1;
      }
      if (!v18)
      {
        if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v16, a3) & 1) == 0)return 0; {
        goto LABEL_2;
        }
      }
      return 1;
  }
}

void sub_19EB6EE84(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::CoreMLModels::WordTagger::MergeFrom(std::string *this, const CoreML::Specification::CoreMLModels::WordTagger *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  uint64_t v5 = *((void *)a2 + 2);
  if (*(char *)(v5 + 23) < 0)
  {
    if (!*(void *)(v5 + 8)) {
      goto LABEL_11;
    }
  }
  else if (!*(unsigned char *)(v5 + 23))
  {
    goto LABEL_11;
  }
  this = (std::string *)&v3->__r_.__value_.__r.__words[2];
  uint64_t v6 = (long long *)v3->__r_.__value_.__r.__words[2];
  if (v6 != (long long *)v5)
  {
    if (v6 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
    }
    this = std::string::operator=((std::string *)v3->__r_.__value_.__r.__words[2], (const std::string *)v5);
  }
LABEL_11:
  uint64_t v7 = *((void *)a2 + 3);
  if (*(char *)(v7 + 23) < 0)
  {
    if (!*(void *)(v7 + 8)) {
      goto LABEL_19;
    }
  }
  else if (!*(unsigned char *)(v7 + 23))
  {
    goto LABEL_19;
  }
  this = v3 + 1;
  int data = (long long *)v3[1].__r_.__value_.__l.__data_;
  if (data != (long long *)v7)
  {
    if (data == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
    }
    this = std::string::operator=((std::string *)v3[1].__r_.__value_.__l.__data_, (const std::string *)v7);
  }
LABEL_19:
  uint64_t v9 = *((void *)a2 + 4);
  if (*(char *)(v9 + 23) < 0)
  {
    if (!*(void *)(v9 + 8)) {
      goto LABEL_27;
    }
  }
  else if (!*(unsigned char *)(v9 + 23))
  {
    goto LABEL_27;
  }
  this = (std::string *)((char *)v3 + 32);
  std::string::size_type size = (long long *)v3[1].__r_.__value_.__l.__size_;
  if (size != (long long *)v9)
  {
    if (size == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
    }
    this = std::string::operator=((std::string *)v3[1].__r_.__value_.__l.__size_, (const std::string *)v9);
  }
LABEL_27:
  uint64_t v11 = *((void *)a2 + 5);
  if (*(char *)(v11 + 23) < 0)
  {
    if (!*(void *)(v11 + 8)) {
      goto LABEL_35;
    }
  }
  else if (!*(unsigned char *)(v11 + 23))
  {
    goto LABEL_35;
  }
  this = (std::string *)((char *)v3 + 40);
  uint64_t v12 = (long long *)v3[1].__r_.__value_.__r.__words[2];
  if (v12 != (long long *)v11)
  {
    if (v12 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
    }
    this = std::string::operator=((std::string *)v3[1].__r_.__value_.__r.__words[2], (const std::string *)v11);
  }
LABEL_35:
  uint64_t v13 = *((void *)a2 + 6);
  if (*(char *)(v13 + 23) < 0)
  {
    if (!*(void *)(v13 + 8)) {
      goto LABEL_43;
    }
  }
  else if (!*(unsigned char *)(v13 + 23))
  {
    goto LABEL_43;
  }
  this = v3 + 2;
  uint64_t v14 = (long long *)v3[2].__r_.__value_.__l.__data_;
  if (v14 != (long long *)v13)
  {
    if (v14 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
    }
    this = std::string::operator=((std::string *)v3[2].__r_.__value_.__l.__data_, (const std::string *)v13);
  }
LABEL_43:
  uint64_t v15 = *((void *)a2 + 7);
  if (*(char *)(v15 + 23) < 0)
  {
    if (!*(void *)(v15 + 8)) {
      goto LABEL_51;
    }
  }
  else if (!*(unsigned char *)(v15 + 23))
  {
    goto LABEL_51;
  }
  this = (std::string *)((char *)v3 + 56);
  unint64_t v16 = (long long *)v3[2].__r_.__value_.__l.__size_;
  if (v16 != (long long *)v15)
  {
    if (v16 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
    }
    this = std::string::operator=((std::string *)v3[2].__r_.__value_.__l.__size_, (const std::string *)v15);
  }
LABEL_51:
  int v17 = *((_DWORD *)a2 + 16);
  if (v17) {
    LODWORD(v3[2].__r_.__value_.__r.__words[2]) = v17;
  }
  if (*((_DWORD *)a2 + 21) == 200)
  {
    if (HIDWORD(v3[3].__r_.__value_.__r.__words[1]) != 200)
    {
      HIDWORD(v3[3].__r_.__value_.__r.__words[1]) = 200;
      operator new();
    }
    BOOL v18 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedStrings *)*((void *)a2 + 9);
    uint64_t v19 = (std::string *)v3[3].__r_.__value_.__l.__data_;
    return CoreML::Specification::MILSpec::TensorValue_RepeatedStrings::MergeFrom(v19, v18);
  }
  return this;
}

void sub_19EB6F178(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::CoreMLModels::WordTagger::IsInitialized(CoreML::Specification::CoreMLModels::WordTagger *this)
{
  return 1;
}

uint64_t CoreML::Specification::CoreMLModels::WordTagger::Clear(uint64_t this)
{
  uint64_t v1 = this;
  uint64_t v2 = *(void *)(this + 16);
  if ((long long *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v2 = 0;
      *(unsigned char *)(v2 + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
    }
  }
  uint64_t v3 = *(void *)(this + 24);
  if ((long long *)v3 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)uint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v3 = 0;
      *(unsigned char *)(v3 + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
    }
  }
  uint64_t v4 = *(void *)(this + 32);
  if ((long long *)v4 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)uint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v4 = 0;
      *(unsigned char *)(v4 + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
    }
  }
  uint64_t v5 = *(void *)(this + 40);
  if ((long long *)v5 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)uint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v5 = 0;
      *(unsigned char *)(v5 + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
    }
  }
  uint64_t v6 = *(void *)(this + 48);
  if ((long long *)v6 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)uint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v6 = 0;
      *(unsigned char *)(v6 + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
    }
  }
  uint64_t v7 = *(void *)(this + 56);
  if ((long long *)v7 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v7 + 23) < 0)
    {
      **(unsigned char **)uint64_t v7 = 0;
      *(void *)(v7 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v7 = 0;
      *(unsigned char *)(v7 + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
    }
  }
  *(_DWORD *)(this + 64) = 0;
  if (*(_DWORD *)(this + 84) == 200)
  {
    this = *(void *)(this + 72);
    if (this) {
      this = (*(uint64_t (**)(uint64_t))(*(void *)this + 8))(this);
    }
  }
  *(_DWORD *)(v1 + 84) = 0;
  return this;
}

void CoreML::Specification::CoreMLModels::WordTagger::New(CoreML::Specification::CoreMLModels::WordTagger *this, google::protobuf::Arena *a2)
{
}

void sub_19EB6F368(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C403AEF19A0);
  _Unwind_Resume(a1);
}

CoreML::Specification::CoreMLModels::WordTagger *CoreML::Specification::CoreMLModels::WordTagger::WordTagger(CoreML::Specification::CoreMLModels::WordTagger *this)
{
  *(void *)this = &unk_1EF0CEEE8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::CoreMLModels::WordTagger *)&CoreML::Specification::CoreMLModels::_WordTagger_default_instance_) {
    CoreML::Specification::CoreMLModels::protobuf_WordTagger_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 4) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 5) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 6) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 7) = &google::protobuf::internal::fixed_address_empty_string;
  *((_DWORD *)this + 16) = 0;
  *((void *)this + 1CoreML::Specification::FeatureVectorizer_InputColumn::New(this, 0) = 0;
  return this;
}

void sub_19EB6F404(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::CoreMLModels::WordTagger>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::CoreMLModels::WordTagger>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::CoreMLModels::WordTagger>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::CoreMLModels::WordTagger::New(CoreML::Specification::CoreMLModels::WordTagger *this)
{
}

void *CoreML::Specification::CoreMLModels::WordTagger::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.CoreMLModels.WordTagger");
}

void CoreML::Specification::CoreMLModels::WordTagger::~WordTagger(CoreML::Specification::CoreMLModels::WordTagger *this)
{
  CoreML::Specification::CoreMLModels::WordTagger::~WordTagger(this);

  JUMPOUT(0x19F3C1920);
}

{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;

  *(void *)this = &unk_1EF0CEEE8;
  uint64_t v2 = *((void *)this + 2);
  if ((long long *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x19F3C1920](v2, 0x1012C40EC159624);
  }
  uint64_t v4 = *((void *)this + 3);
  if ((long long *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    MEMORY[0x19F3C1920](v4, 0x1012C40EC159624);
  }
  uint64_t v6 = *((void *)this + 4);
  if ((long long *)v6 != &google::protobuf::internal::fixed_address_empty_string && v6)
  {
    if (*(char *)(v6 + 23) < 0) {
      operator delete(*(void **)v6);
    }
    MEMORY[0x19F3C1920](v6, 0x1012C40EC159624);
  }
  uint64_t v7 = *((void *)this + 5);
  if ((long long *)v7 != &google::protobuf::internal::fixed_address_empty_string && v7)
  {
    if (*(char *)(v7 + 23) < 0) {
      operator delete(*(void **)v7);
    }
    MEMORY[0x19F3C1920](v7, 0x1012C40EC159624);
  }
  uint64_t v8 = *((void *)this + 6);
  if ((long long *)v8 != &google::protobuf::internal::fixed_address_empty_string && v8)
  {
    if (*(char *)(v8 + 23) < 0) {
      operator delete(*(void **)v8);
    }
    MEMORY[0x19F3C1920](v8, 0x1012C40EC159624);
  }
  uint64_t v9 = *((void *)this + 7);
  if ((long long *)v9 != &google::protobuf::internal::fixed_address_empty_string && v9)
  {
    if (*(char *)(v9 + 23) < 0) {
      operator delete(*(void **)v9);
    }
    MEMORY[0x19F3C1920](v9, 0x1012C40EC159624);
  }
  uint64_t v10 = *((_DWORD *)this + 21);
  if (v10)
  {
    if (v10 == 200)
    {
      uint64_t v11 = *((void *)this + 9);
      if (v11) {
        (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
      }
    }
    *((_DWORD *)this + 21) = 0;
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo::GetCachedSize(CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo *this)
{
  return *((unsigned int *)this + 8);
}

uint64_t CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, google::protobuf::io::CodedOutputStream *a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  unint64_t v6 = *(void *)(this + 16);
  if (v6) {
    this = google::protobuf::internal::WireFormatLite::WriteUInt64(1, v6, a2, a4);
  }
  double v7 = *(double *)(v5 + 24);
  if (v7 != 0.0)
  {
    return google::protobuf::internal::WireFormatLite::WriteDouble(2, a2, v7, a3);
  }
  return this;
}

unint64_t CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo::ByteSizeLong(CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo *this)
{
  uint64_t v1 = *((void *)this + 2);
  unint64_t v2 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1) {
    unint64_t v3 = v2 + 1;
  }
  else {
    unint64_t v3 = 0;
  }
  if (*((double *)this + 3) != 0.0) {
    v3 += 9;
  }
  *((_DWORD *)this + 8) = v3;
  return v3;
}

BOOL CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo::MergePartialFromCodedStream(CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(v6) = 0;
LABEL_6:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
          unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_20;
          }
          goto LABEL_7;
        }
        uint64_t v6 = *v5;
        if (*v5 < 1) {
          goto LABEL_6;
        }
        *a2 = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_20;
        }
LABEL_7:
        if (v7 >> 3 != 2) {
          break;
        }
        if (v7 != 17) {
          goto LABEL_20;
        }
        unint64_t v16 = 0;
        uint64_t v11 = (unint64_t *)*a2;
        if ((int)(*((_DWORD *)a2 + 2) - *a2) < 8)
        {
          BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v16);
          if (!result) {
            return result;
          }
          unint64_t v12 = v16;
        }
        else
        {
          unint64_t v12 = *v11;
          *a2 = (char *)(v11 + 1);
        }
        *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v12;
      }
      if (v7 >> 3 != 1 || v7 != 8) {
        break;
      }
      uint64_t v10 = *a2;
      if (*a2 >= a2[1] || *v10 < 0)
      {
        *((void *)this + 2) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v14 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        *((void *)this + 2) = *v10;
        *a2 = v10 + 1;
      }
    }
LABEL_20:
    if (v7) {
      BOOL v13 = (v7 & 7) == 4;
    }
    else {
      BOOL v13 = 1;
    }
    if (v13) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

uint64_t CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo::IsInitialized(CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo *this)
{
  return 1;
}

uint64_t CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo::Clear(uint64_t this)
{
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  return this;
}

void CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo::New(CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo *this, google::protobuf::Arena *a2)
{
}

void sub_19EB6F944(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x1081C40B7564605);
  _Unwind_Resume(a1);
}

CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo *CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo::TreeEnsembleParameters_TreeNode_EvaluationInfo(CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo *this)
{
  *(void *)this = &unk_1EF0D9490;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo *)&CoreML::Specification::_TreeEnsembleParameters_TreeNode_EvaluationInfo_default_instance_) {
    CoreML::Specification::protobuf_TreeEnsemble_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  return this;
}

void sub_19EB6F9CC(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    unint64_t v3 = result;
    BOOL result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *BOOL result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

uint64_t CoreML::Specification::TreeEnsembleRegressor::GetCachedSize(CoreML::Specification::TreeEnsembleRegressor *this)
{
  return *((unsigned int *)this + 7);
}

uint64_t *CoreML::Specification::TreeEnsembleRegressor::SerializeWithCachedSizes(uint64_t *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  unint64_t v5 = this;
  if (this != &CoreML::Specification::_TreeEnsembleRegressor_default_instance_)
  {
    uint64_t v6 = this[2];
    if (v6) {
      this = (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
    }
  }
  signed int v7 = *((_DWORD *)v5 + 6);
  if (v7)
  {
    return (uint64_t *)google::protobuf::internal::WireFormatLite::WriteEnum(2, v7, a2, a4);
  }
  return this;
}

CoreML::Specification::TreeEnsembleParameters *CoreML::Specification::TreeEnsembleRegressor::ByteSizeLong(CoreML::Specification::TreeEnsembleRegressor *this)
{
  if (this == (CoreML::Specification::TreeEnsembleRegressor *)&CoreML::Specification::_TreeEnsembleRegressor_default_instance_)
  {
    BOOL result = 0;
  }
  else
  {
    BOOL result = (CoreML::Specification::TreeEnsembleParameters *)*((void *)this + 2);
    if (result)
    {
      uint64_t v3 = CoreML::Specification::TreeEnsembleParameters::ByteSizeLong(result);
      BOOL result = (CoreML::Specification::TreeEnsembleParameters *)(v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1);
    }
  }
  int v4 = *((_DWORD *)this + 6);
  if (v4)
  {
    if (v4 < 0) {
      uint64_t v5 = 11;
    }
    else {
      uint64_t v5 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    BOOL result = (CoreML::Specification::TreeEnsembleParameters *)((char *)result + v5);
  }
  *((_DWORD *)this + 7) = result;
  return result;
}

uint64_t CoreML::Specification::TreeEnsembleParameters::ByteSizeLong(CoreML::Specification::TreeEnsembleParameters *this)
{
  int v2 = *((_DWORD *)this + 6);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = *((unsigned int *)this + 6);
    do
    {
      uint64_t v5 = CoreML::Specification::TreeEnsembleParameters_TreeNode::ByteSizeLong(*(CoreML::Specification::TreeEnsembleParameters_TreeNode **)(*((void *)this + 4) + 8 * v3 + 8));
      v4 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t v6 = *((unsigned int *)this + 10);
  uint64_t v7 = 8 * v6;
  if (v6)
  {
    uint64_t v8 = 11;
    uint64_t v9 = ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((int)v7 >= 0) {
      uint64_t v8 = v9;
    }
    v4 += v8;
  }
  *((_DWORD *)this + 14) = v7;
  uint64_t v10 = v4 + v7;
  uint64_t v11 = *((void *)this + 8);
  unint64_t v12 = v10 + ((9 * (__clz(v11 | 1) ^ 0x3F) + 73) >> 6);
  if (v11) {
    uint64_t result = v12 + 1;
  }
  else {
    uint64_t result = v10;
  }
  *((_DWORD *)this + 18) = result;
  return result;
}

uint64_t CoreML::Specification::TreeEnsembleParameters_TreeNode::ByteSizeLong(CoreML::Specification::TreeEnsembleParameters_TreeNode *this)
{
  uint64_t v1 = *((unsigned int *)this + 6);
  uint64_t v2 = 2 * v1;
  if (v1)
  {
    int v3 = 0;
    uint64_t v4 = *((void *)this + 4);
    do
    {
      uint64_t v5 = *(void *)(v4 + 8 * v3 + 8);
      uint64_t v6 = *(void *)(v5 + 16);
      unint64_t v7 = (9 * (__clz(v6 | 1) ^ 0x3F) + 73) >> 6;
      if (v6) {
        unint64_t v8 = v7 + 1;
      }
      else {
        unint64_t v8 = 0;
      }
      if (*(double *)(v5 + 24) != 0.0) {
        v8 += 9;
      }
      *(_DWORD *)(v5 + 32) = v8;
      v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while (v1 != v3);
  }
  uint64_t v9 = *((void *)this + 5);
  unint64_t v10 = v2 + ((9 * (__clz(v9 | 1) ^ 0x3F) + 73) >> 6);
  if (v9) {
    uint64_t v2 = v10 + 1;
  }
  uint64_t v11 = *((void *)this + 6);
  unint64_t v12 = v2 + ((9 * (__clz(v11 | 1) ^ 0x3F) + 73) >> 6);
  if (v11) {
    uint64_t v2 = v12 + 1;
  }
  int v13 = *((_DWORD *)this + 14);
  uint64_t v14 = 11;
  uint64_t v15 = ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v13 >= 0) {
    uint64_t v14 = v15;
  }
  uint64_t v16 = v14 + v2;
  if (v13) {
    uint64_t v2 = v16;
  }
  if (*((unsigned char *)this + 60)) {
    v2 += 2;
  }
  uint64_t v17 = *((void *)this + 8);
  unint64_t v18 = v2 + ((9 * (__clz(v17 | 1) ^ 0x3F) + 73) >> 6);
  if (v17) {
    uint64_t v2 = v18 + 1;
  }
  if (*((double *)this + 9) != 0.0) {
    v2 += 9;
  }
  uint64_t v19 = *((void *)this + 10);
  uint64_t v20 = *((void *)this + 11);
  unint64_t v21 = v2 + ((9 * (__clz(v19 | 1) ^ 0x3F) + 73) >> 6);
  if (v19) {
    uint64_t v2 = v21 + 1;
  }
  unint64_t v22 = v2 + ((9 * (__clz(v20 | 1) ^ 0x3F) + 73) >> 6);
  if (v20) {
    uint64_t v2 = v22 + 1;
  }
  if (*((double *)this + 12) != 0.0) {
    v2 += 10;
  }
  *((_DWORD *)this + 26) = v2;
  return v2;
}

BOOL CoreML::Specification::TreeEnsembleRegressor::MergePartialFromCodedStream(CoreML::Specification::TreeEnsembleRegressor *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = *(char **)a2;
        if (*(void *)a2 < *((void *)a2 + 1)) {
          break;
        }
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) != 0) {
          goto LABEL_7;
        }
LABEL_22:
        if (v7) {
          BOOL v15 = (v7 & 7) == 4;
        }
        else {
          BOOL v15 = 1;
        }
        if (v15) {
          return 1;
        }
        if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)return 0; {
      }
        }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *(void *)a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        goto LABEL_22;
      }
LABEL_7:
      if (v7 >> 3 != 2) {
        break;
      }
      if (v7 != 16) {
        goto LABEL_22;
      }
      int v13 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        int v14 = 0;
      }
      else
      {
        int v14 = *v13;
        if ((*v13 & 0x80000000) == 0)
        {
          *(void *)a2 = v13 + 1;
          goto LABEL_35;
        }
      }
      uint64_t Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v14);
      int v14 = Varint32Fallback;
      if (Varint32Fallback < 0) {
        return 0;
      }
LABEL_35:
      *((_DWORD *)this + 6) = v14;
    }
    if (v7 >> 3 != 1 || v7 != 10) {
      goto LABEL_22;
    }
    unint64_t v10 = (CoreML::Specification::TreeEnsembleParameters *)*((void *)this + 2);
    if (!v10) {
      operator new();
    }
    uint64_t v11 = *(char **)a2;
    if (*(void *)a2 >= *((void *)a2 + 1) || *v11 < 0)
    {
      int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
      if (VarintSizeAsIntFallback < 0) {
        return 0;
      }
    }
    else
    {
      int VarintSizeAsIntFallback = *v11;
      *(void *)a2 = v11 + 1;
    }
    int v16 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
    int v18 = *((_DWORD *)a2 + 13);
    BOOL v19 = __OFSUB__(v18--, 1);
    *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v18;
    if (v18 < 0 != v19) {
      break;
    }
    int v20 = v16;
    BOOL result = CoreML::Specification::TreeEnsembleParameters::MergePartialFromCodedStream(v10, a2, v17);
    if (!result) {
      return result;
    }
  }
  while (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v20));
  return 0;
}

void sub_19EB6FFBC(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C40CFA7A0FDLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::TreeEnsembleParameters *CoreML::Specification::TreeEnsembleParameters::TreeEnsembleParameters(CoreML::Specification::TreeEnsembleParameters *this)
{
  *(_OWORD *)((char *)this + 8) = 0u;
  *(void *)this = &unk_1EF0D5AF8;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 4CoreML::Specification::CoreMLModels::WordTagger::New(this, 0) = 0u;
  if (this != (CoreML::Specification::TreeEnsembleParameters *)&CoreML::Specification::_TreeEnsembleParameters_default_instance_) {
    CoreML::Specification::protobuf_TreeEnsemble_2eproto::InitDefaults(this);
  }
  *((void *)this + 8) = 0;
  *((_DWORD *)this + 18) = 0;
  return this;
}

void sub_19EB7005C(_Unwind_Exception *a1)
{
  uint64_t v5 = *(void **)(v2 + 48);
  if (v5)
  {
    if (!*v5) {
      operator delete(v5);
    }
  }
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::NeuralNetworkPreprocessing>::TypeHandler>(v3);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::TreeEnsembleParameters::MergePartialFromCodedStream(CoreML::Specification::TreeEnsembleParameters *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 40);
  uint64_t v6 = (CoreML::Specification::TreeEnsembleParameters *)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          while (1)
          {
            unint64_t v7 = *(char **)a2;
            if (*(void *)a2 < *((void *)a2 + 1)) {
              break;
            }
            LODWORD(v8) = 0;
LABEL_7:
            unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v8);
            unint64_t v9 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
            if ((v9 & 0x100000000) != 0) {
              goto LABEL_8;
            }
LABEL_27:
            if (v9) {
              BOOL v19 = (v9 & 7) == 4;
            }
            else {
              BOOL v19 = 1;
            }
            if (v19) {
              return 1;
            }
            if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v9, a3) & 1) == 0)return 0; {
          }
            }
          uint64_t v8 = *v7;
          if (*v7 < 1) {
            goto LABEL_7;
          }
          *(void *)a2 = v7 + 1;
          unint64_t v9 = v8 | 0x100000000;
          if ((v9 & 0x100000000) == 0) {
            goto LABEL_27;
          }
LABEL_8:
          unsigned int v11 = v9 >> 3;
          if (v9 >> 3 == 3) {
            break;
          }
          if (v11 == 2)
          {
            if (v9 != 16) {
              goto LABEL_27;
            }
            int v18 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v18 < 0)
            {
              *((void *)this + 8) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v26 & 1) == 0) {
                return 0;
              }
            }
            else
            {
              *((void *)this + 8) = *v18;
              *(void *)a2 = v18 + 1;
            }
          }
          else
          {
            if (v11 != 1 || v9 != 10) {
              goto LABEL_27;
            }
            int v13 = google::protobuf::internal::RepeatedPtrFieldBase::Add<google::protobuf::RepeatedPtrField<CoreML::Specification::TreeEnsembleParameters_TreeNode>::TypeHandler>(v6);
            int v14 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v14 < 0)
            {
              int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (VarintSizeAsIntFallback < 0) {
                return 0;
              }
            }
            else
            {
              int VarintSizeAsIntFallback = *v14;
              *(void *)a2 = v14 + 1;
            }
            int v20 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
            int v22 = *((_DWORD *)a2 + 13);
            BOOL v23 = __OFSUB__(v22--, 1);
            *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v22;
            if (v22 < 0 != v23) {
              return 0;
            }
            int v24 = v20;
            BOOL result = CoreML::Specification::TreeEnsembleParameters_TreeNode::MergePartialFromCodedStream((CoreML::Specification::TreeEnsembleParameters_TreeNode *)v13, a2, v21);
            if (!result) {
              return result;
            }
            if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v24)) {
              return 0;
            }
          }
        }
        if (v9 != 25) {
          break;
        }
        if (!google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<double,(google::protobuf::internal::WireFormatLite::FieldType)1>(26, (unint64_t **)a2, (uint64_t)v5))return 0; {
      }
        }
      if (v9 != 26) {
        goto LABEL_27;
      }
      int v16 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v16 < 0)
      {
        unsigned int v17 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if ((v17 & 0x80000000) != 0) {
          return 0;
        }
      }
      else
      {
        unsigned int v17 = *v16;
        *(void *)a2 = v16 + 1;
      }
      if ((v17 & 7) != 0) {
        return 0;
      }
      int v27 = *((_DWORD *)a2 + 12);
      int v28 = v27 == 0x7FFFFFFF
          ? -1
          : v27 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
      int v29 = *((_DWORD *)a2 + 10);
      int v30 = v29 == 0x7FFFFFFF
          ? -1
          : v29 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
      signed int v31 = *v5;
      unsigned int v32 = v17 >> 3;
      int v33 = v30 >= v28 ? v28 : v30;
      int v34 = v28 == -1 ? v30 : v33;
      if (v34 >= (uint64_t)v17) {
        break;
      }
      if (v17 >= 8)
      {
        if (v32 <= 1) {
          int v35 = 1;
        }
        else {
          int v35 = v17 >> 3;
        }
        do
        {
          unint64_t v43 = 0;
          int v36 = *(unint64_t **)a2;
          if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) < 8)
          {
            BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v43);
            if (!result) {
              return result;
            }
            unint64_t v37 = v43;
            signed int v31 = *v5;
          }
          else
          {
            unint64_t v37 = *v36;
            *(void *)a2 = v36 + 1;
          }
          if (v31 == *((_DWORD *)this + 11))
          {
            google::protobuf::RepeatedField<double>::Reserve(v5, v31 + 1);
            signed int v31 = *v5;
          }
          uint64_t v38 = *((void *)this + 6) + 8 * v31;
          *((_DWORD *)this + 1CoreML::Specification::CoreMLModels::WordTagger::New(this, 0) = v31 + 1;
          *(void *)(v38 + 8) = v37;
          ++v31;
          --v35;
        }
        while (v35);
      }
    }
    signed int v39 = v31 + v32;
    if (v17 > 7)
    {
      google::protobuf::RepeatedField<double>::Reserve(v5, v31 + v32);
      uint64_t v40 = *((void *)this + 6);
      uint64_t v41 = 8 * v39 - 8 * *((int *)this + 10);
      if (v41 >= 1) {
        bzero((void *)(v40 + 8 + 8 * *((int *)this + 10)), 8 * (((unint64_t)v41 >> 3) - ((unint64_t)v41 > 7)) + 8);
      }
    }
    else
    {
      uint64_t v40 = *((void *)this + 6);
    }
    *uint64_t v5 = v39;
    uint64_t v42 = v40 + 8;
    if (!v40) {
      uint64_t v42 = 0;
    }
  }
  while (google::protobuf::io::CodedInputStream::ReadRaw(a2, (char *)(v42 + 8 * v31), v17));
  if ((int)*v5 >= 1)
  {
    BOOL result = 0;
    *uint64_t v5 = v31;
    return result;
  }
  return 0;
}

google::protobuf::Arena **google::protobuf::internal::RepeatedPtrFieldBase::Add<google::protobuf::RepeatedPtrField<CoreML::Specification::TreeEnsembleParameters_TreeNode>::TypeHandler>(google::protobuf::internal::RepeatedPtrFieldBase *this)
{
  uint64_t v2 = (int *)*((void *)this + 2);
  if (!v2)
  {
    int v3 = *((_DWORD *)this + 2);
    int v4 = *((_DWORD *)this + 3);
LABEL_6:
    if (v3 <= v4)
    {
      google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(this, v4 - v3 + 1);
      uint64_t v2 = (int *)*((void *)this + 2);
    }
    int v4 = *v2;
    goto LABEL_9;
  }
  int v3 = *((_DWORD *)this + 2);
  int v4 = *v2;
  if (v3 < *v2)
  {
    *((_DWORD *)this + 2) = v3 + 1;
    return *(google::protobuf::Arena ***)&v2[2 * v3 + 2];
  }
  if (v4 == *((_DWORD *)this + 3)) {
    goto LABEL_6;
  }
LABEL_9:
  *uint64_t v2 = v4 + 1;
  uint64_t v6 = *(google::protobuf::Arena **)this;
  if (!*(void *)this) {
    operator new();
  }
  CoreML::Specification::TreeEnsembleParameters_TreeNode::TreeEnsembleParameters_TreeNode((CoreML::Specification::TreeEnsembleParameters_TreeNode *)Aligned);
  unint64_t v7 = google::protobuf::Arena::AllocateAligned(v6, 0, 24);
  *unint64_t v7 = (google::protobuf::Arena *)Aligned;
  v7[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::TreeEnsembleParameters_TreeNode>;
  uint64_t v8 = (unint64_t *)((char *)v6 + 32);
  do
    unint64_t v9 = __ldxr(v8);
  while (__stxr((unint64_t)v7, v8));
  v7[2] = (google::protobuf::Arena *)v9;
  uint64_t v10 = *((void *)this + 2);
  uint64_t v11 = *((int *)this + 2);
  *((_DWORD *)this + 2) = v11 + 1;
  *(void *)(v10 + 8 * v11 + 8) = Aligned;
  return Aligned;
}

void sub_19EB705A4(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C40FA1F30E5);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::TreeEnsembleParameters_TreeNode::MergePartialFromCodedStream(CoreML::Specification::TreeEnsembleParameters_TreeNode *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (CoreML::Specification::TreeEnsembleParameters_TreeNode *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      uint64_t v6 = *(unsigned __int8 **)a2;
      unint64_t v7 = *((void *)a2 + 1);
      if (*(void *)a2 >= v7)
      {
        LODWORD(v9) = 0;
        goto LABEL_16;
      }
      uint64_t v8 = v6 + 1;
      uint64_t v9 = *v6;
      if ((char)*v6 >= 1) {
        break;
      }
      if ((unint64_t)v8 < v7)
      {
        int v11 = *v8;
        if ((v9 & ~v11) >= 0x80)
        {
          *(void *)a2 = v6 + 2;
          unint64_t v10 = (v9 + (v11 << 7) - 128) | 0x100000000;
          goto LABEL_17;
        }
      }
LABEL_16:
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v9);
      unint64_t v10 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
      if ((v10 & 0x100000000) == 0) {
        goto LABEL_9;
      }
LABEL_17:
      switch(v10 >> 3)
      {
        case 1u:
          if (v10 != 8) {
            goto LABEL_9;
          }
          int v14 = *(char **)a2;
          if (*(void *)a2 < *((void *)a2 + 1) && (*v14 & 0x80000000) == 0)
          {
            *((void *)this + 5) = *v14;
            goto LABEL_51;
          }
          *((void *)this + 5) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v26 & 1) == 0) {
            return 0;
          }
          continue;
        case 2u:
          if (v10 != 16) {
            goto LABEL_9;
          }
          int v14 = *(char **)a2;
          if (*(void *)a2 < *((void *)a2 + 1) && (*v14 & 0x80000000) == 0)
          {
            *((void *)this + 6) = *v14;
            goto LABEL_51;
          }
          *((void *)this + 6) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v27 & 1) == 0) {
            return 0;
          }
          continue;
        case 3u:
          if (v10 != 24) {
            goto LABEL_9;
          }
          unsigned int v17 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1))
          {
            int v18 = 0;
          }
          else
          {
            int v18 = *v17;
            if ((*v17 & 0x80000000) == 0)
            {
              *(void *)a2 = v17 + 1;
              goto LABEL_79;
            }
          }
          uint64_t Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v18);
          int v18 = Varint32Fallback;
          if (Varint32Fallback < 0) {
            return 0;
          }
LABEL_79:
          *((_DWORD *)this + 14) = v18;
          break;
        case 4u:
        case 5u:
        case 6u:
        case 7u:
        case 8u:
        case 9u:
        case 0xFu:
        case 0x10u:
        case 0x11u:
        case 0x12u:
        case 0x13u:
          goto LABEL_9;
        case 0xAu:
          if (v10 != 80) {
            goto LABEL_9;
          }
          int v14 = *(char **)a2;
          if (*(void *)a2 < *((void *)a2 + 1) && (*v14 & 0x80000000) == 0)
          {
            *((void *)this + 8) = *v14;
            goto LABEL_51;
          }
          *((void *)this + 8) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v28 & 1) == 0) {
            return 0;
          }
          continue;
        case 0xBu:
          if (v10 != 89) {
            goto LABEL_9;
          }
          unint64_t v39 = 0;
          BOOL v19 = *(unint64_t **)a2;
          if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) < 8)
          {
            BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v39);
            if (!result) {
              return result;
            }
            unint64_t v20 = v39;
          }
          else
          {
            unint64_t v20 = *v19;
            *(void *)a2 = v19 + 1;
          }
          *((void *)this + 9) = v20;
          continue;
        case 0xCu:
          if (v10 != 96) {
            goto LABEL_9;
          }
          int v14 = *(char **)a2;
          if (*(void *)a2 < *((void *)a2 + 1) && (*v14 & 0x80000000) == 0)
          {
            *((void *)this + 1CoreML::Specification::CoreMLModels::WordTagger::New(this, 0) = *v14;
            goto LABEL_51;
          }
          *((void *)this + 1CoreML::Specification::CoreMLModels::WordTagger::New(this, 0) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v29 & 1) == 0) {
            return 0;
          }
          continue;
        case 0xDu:
          if (v10 != 104) {
            goto LABEL_9;
          }
          int v14 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v14 < 0)
          {
            *((void *)this + 11) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v30 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            *((void *)this + 11) = *v14;
LABEL_51:
            *(void *)a2 = v14 + 1;
          }
          continue;
        case 0xEu:
          if (v10 != 112) {
            goto LABEL_9;
          }
          unsigned int v21 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v21 < 0)
          {
            unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v31 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            unint64_t Varint64Fallback = *v21;
            *(void *)a2 = v21 + 1;
          }
          *((unsigned char *)this + 6CoreML::Specification::CoreMLModels::WordTagger::New(this, 0) = Varint64Fallback != 0;
          continue;
        case 0x14u:
          if (v10 != 162) {
            goto LABEL_9;
          }
          BOOL v23 = google::protobuf::internal::RepeatedPtrFieldBase::Add<google::protobuf::RepeatedPtrField<CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo>::TypeHandler>(v5);
          int v24 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v24 < 0)
          {
            int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            int VarintSizeAsIntFallback = *v24;
            *(void *)a2 = v24 + 1;
          }
          int v32 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          int v34 = *((_DWORD *)a2 + 13);
          BOOL v35 = __OFSUB__(v34--, 1);
          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v34;
          if (v34 < 0 != v35) {
            return 0;
          }
          int v36 = v32;
          BOOL result = CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo::MergePartialFromCodedStream((CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo *)v23, (char **)a2, v33);
          if (!result) {
            return result;
          }
          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v36)) {
            return 0;
          }
          continue;
        default:
          if (v10 >> 3 != 30 || v10 != 241) {
            goto LABEL_9;
          }
          unint64_t v39 = 0;
          BOOL v15 = *(unint64_t **)a2;
          if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) < 8)
          {
            BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v39);
            if (!result) {
              return result;
            }
            unint64_t v16 = v39;
          }
          else
          {
            unint64_t v16 = *v15;
            *(void *)a2 = v15 + 1;
          }
          *((void *)this + 12) = v16;
          continue;
      }
    }
    *(void *)a2 = v8;
    unint64_t v10 = v9 | 0x100000000;
    if ((v10 & 0x100000000) != 0) {
      goto LABEL_17;
    }
LABEL_9:
    if (!v10 || (v10 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v10, a3) & 1) == 0) {
      return 0;
    }
  }
}

google::protobuf::Arena **google::protobuf::internal::RepeatedPtrFieldBase::Add<google::protobuf::RepeatedPtrField<CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo>::TypeHandler>(google::protobuf::internal::RepeatedPtrFieldBase *this)
{
  uint64_t v2 = (int *)*((void *)this + 2);
  if (!v2)
  {
    int v3 = *((_DWORD *)this + 2);
    int v4 = *((_DWORD *)this + 3);
LABEL_6:
    if (v3 <= v4)
    {
      google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(this, v4 - v3 + 1);
      uint64_t v2 = (int *)*((void *)this + 2);
    }
    int v4 = *v2;
    goto LABEL_9;
  }
  int v3 = *((_DWORD *)this + 2);
  int v4 = *v2;
  if (v3 < *v2)
  {
    *((_DWORD *)this + 2) = v3 + 1;
    return *(google::protobuf::Arena ***)&v2[2 * v3 + 2];
  }
  if (v4 == *((_DWORD *)this + 3)) {
    goto LABEL_6;
  }
LABEL_9:
  *uint64_t v2 = v4 + 1;
  uint64_t v6 = *(google::protobuf::Arena **)this;
  if (!*(void *)this) {
    operator new();
  }
  CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo::TreeEnsembleParameters_TreeNode_EvaluationInfo((CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo *)Aligned);
  unint64_t v7 = google::protobuf::Arena::AllocateAligned(v6, 0, 24);
  *unint64_t v7 = (google::protobuf::Arena *)Aligned;
  v7[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo>;
  uint64_t v8 = (unint64_t *)((char *)v6 + 32);
  do
    unint64_t v9 = __ldxr(v8);
  while (__stxr((unint64_t)v7, v8));
  v7[2] = (google::protobuf::Arena *)v9;
  uint64_t v10 = *((void *)this + 2);
  uint64_t v11 = *((int *)this + 2);
  *((_DWORD *)this + 2) = v11 + 1;
  *(void *)(v10 + 8 * v11 + 8) = Aligned;
  return Aligned;
}

void sub_19EB70B74(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x1081C40B7564605);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

CoreML::Specification::TreeEnsembleParameters_TreeNode *CoreML::Specification::TreeEnsembleParameters_TreeNode::TreeEnsembleParameters_TreeNode(CoreML::Specification::TreeEnsembleParameters_TreeNode *this)
{
  *(void *)this = &unk_1EF0D8650;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  if (this != (CoreML::Specification::TreeEnsembleParameters_TreeNode *)&CoreML::Specification::_TreeEnsembleParameters_TreeNode_default_instance_) {
    CoreML::Specification::protobuf_TreeEnsemble_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 26) = 0;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 4CoreML::Specification::CoreMLModels::WordTagger::New(this, 0) = 0u;
  return this;
}

void sub_19EB70C44(_Unwind_Exception *a1)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::NeuralNetworkPreprocessing>::TypeHandler>(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<CoreML::Specification::TreeEnsembleParameters_TreeNode>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

std::string *CoreML::Specification::TreeEnsembleRegressor::MergeFrom(std::string *this, const CoreML::Specification::TreeEnsembleRegressor *a2)
{
  int v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  uint64_t v5 = *((void *)a2 + 2);
  if (a2 != (const CoreML::Specification::TreeEnsembleRegressor *)&CoreML::Specification::_TreeEnsembleRegressor_default_instance_
    && v5 != 0)
  {
    unint64_t v7 = (unint64_t *)v3->__r_.__value_.__r.__words[2];
    if (!v7) {
      operator new();
    }
    if (v5) {
      uint64_t v8 = (const CoreML::Specification::TreeEnsembleParameters *)*((void *)a2 + 2);
    }
    else {
      uint64_t v8 = (const CoreML::Specification::TreeEnsembleParameters *)&CoreML::Specification::_TreeEnsembleParameters_default_instance_;
    }
    this = (std::string *)CoreML::Specification::TreeEnsembleParameters::MergeFrom(v7, v8);
  }
  int v9 = *((_DWORD *)a2 + 6);
  if (v9) {
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v9;
  }
  return this;
}

void sub_19EB70D38(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C40CFA7A0FDLL);
  _Unwind_Resume(a1);
}

unint64_t *CoreML::Specification::TreeEnsembleParameters::MergeFrom(unint64_t *this, const CoreML::Specification::TreeEnsembleParameters *a2)
{
  int v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    uint64_t v30 = *((void *)a2 + 4);
    this = (unint64_t *)google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 2), v5);
    char v29 = this;
    uint64_t v6 = *(int *)v3[4];
    uint64_t v7 = *((int *)v3 + 6);
    int v8 = v6 - v7;
    if ((int)v6 - (int)v7 >= v5) {
      uint64_t v9 = v5;
    }
    else {
      uint64_t v9 = v8;
    }
    if ((int)v9 >= 1)
    {
      uint64_t v10 = (unint64_t **)this;
      uint64_t v11 = (const CoreML::Specification::TreeEnsembleParameters_TreeNode **)(v30 + 8);
      do
      {
        int v13 = *v11++;
        unint64_t v12 = v13;
        int v14 = *v10++;
        this = google::protobuf::internal::GenericTypeHandler<CoreML::Specification::TreeEnsembleParameters_TreeNode>::Merge(v12, v14);
        --v9;
      }
      while (v9);
    }
    if (v8 < v5)
    {
      BOOL v15 = (google::protobuf::Arena *)v3[2];
      int v16 = v7 + v5 - v6;
      uint64_t v17 = 8 * v6 - 8 * v7;
      int v18 = (google::protobuf::Arena ***)((char *)v29 + v17);
      BOOL v19 = (const CoreML::Specification::TreeEnsembleParameters_TreeNode **)(v17 + v30 + 8);
      do
      {
        unint64_t v20 = *v19;
        if (!v15) {
          operator new();
        }
        CoreML::Specification::TreeEnsembleParameters_TreeNode::TreeEnsembleParameters_TreeNode((CoreML::Specification::TreeEnsembleParameters_TreeNode *)Aligned);
        int v22 = google::protobuf::Arena::AllocateAligned(v15, 0, 24);
        *int v22 = (google::protobuf::Arena *)Aligned;
        v22[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::TreeEnsembleParameters_TreeNode>;
        BOOL v23 = (unint64_t *)((char *)v15 + 32);
        do
          unint64_t v24 = __ldxr(v23);
        while (__stxr((unint64_t)v22, v23));
        v22[2] = (google::protobuf::Arena *)v24;
        this = google::protobuf::internal::GenericTypeHandler<CoreML::Specification::TreeEnsembleParameters_TreeNode>::Merge(v20, (unint64_t *)Aligned);
        *v18++ = Aligned;
        ++v19;
        --v16;
      }
      while (v16);
    }
    int v25 = *((_DWORD *)v3 + 6) + v5;
    *((_DWORD *)v3 + 6) = v25;
    char v26 = (int *)v3[4];
    if (*v26 < v25) {
      int *v26 = v25;
    }
  }
  int v27 = *((_DWORD *)a2 + 10);
  if (v27)
  {
    google::protobuf::RepeatedField<double>::Reserve((unsigned int *)v3 + 10, *((_DWORD *)v3 + 10) + v27);
    this = (unint64_t *)memcpy((void *)(v3[6] + 8 * *((int *)v3 + 10) + 8), (const void *)(*((void *)a2 + 6) + 8), 8 * *((int *)a2 + 10));
    *((_DWORD *)v3 + 10) += *((_DWORD *)a2 + 10);
  }
  unint64_t v28 = *((void *)a2 + 8);
  if (v28) {
    v3[8] = v28;
  }
  return this;
}

void sub_19EB70F64(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C40FA1F30E5);
  _Unwind_Resume(a1);
}

unint64_t *google::protobuf::internal::GenericTypeHandler<CoreML::Specification::TreeEnsembleParameters_TreeNode>::Merge(const CoreML::Specification::TreeEnsembleParameters_TreeNode *a1, unint64_t *a2)
{
  return CoreML::Specification::TreeEnsembleParameters_TreeNode::MergeFrom(a2, a1);
}

unint64_t *CoreML::Specification::TreeEnsembleParameters_TreeNode::MergeFrom(unint64_t *this, const CoreML::Specification::TreeEnsembleParameters_TreeNode *a2)
{
  int v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    uint64_t v36 = *((void *)a2 + 4);
    this = (unint64_t *)google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 2), v5);
    BOOL v35 = this;
    uint64_t v6 = *(int *)v3[4];
    uint64_t v7 = *((int *)v3 + 6);
    int v8 = v6 - v7;
    if ((int)v6 - (int)v7 >= v5) {
      uint64_t v9 = v5;
    }
    else {
      uint64_t v9 = v8;
    }
    if ((int)v9 >= 1)
    {
      uint64_t v10 = (std::string **)this;
      uint64_t v11 = (CoreML::Specification::ItemSimilarityRecommender_ConnectedItem **)(v36 + 8);
      do
      {
        int v13 = *v11++;
        unint64_t v12 = v13;
        int v14 = *v10++;
        this = (unint64_t *)google::protobuf::internal::GenericTypeHandler<CoreML::Specification::ItemSimilarityRecommender_ConnectedItem>::Merge(v12, v14);
        --v9;
      }
      while (v9);
    }
    if (v8 < v5)
    {
      BOOL v15 = (google::protobuf::Arena *)v3[2];
      int v16 = v7 + v5 - v6;
      uint64_t v17 = 8 * v6 - 8 * v7;
      int v18 = (google::protobuf::Arena ***)((char *)v35 + v17);
      BOOL v19 = (CoreML::Specification::ItemSimilarityRecommender_ConnectedItem **)(v17 + v36 + 8);
      do
      {
        unint64_t v20 = *v19;
        if (!v15) {
          operator new();
        }
        CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo::TreeEnsembleParameters_TreeNode_EvaluationInfo((CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo *)Aligned);
        int v22 = google::protobuf::Arena::AllocateAligned(v15, 0, 24);
        *int v22 = (google::protobuf::Arena *)Aligned;
        v22[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo>;
        BOOL v23 = (unint64_t *)((char *)v15 + 32);
        do
          unint64_t v24 = __ldxr(v23);
        while (__stxr((unint64_t)v22, v23));
        v22[2] = (google::protobuf::Arena *)v24;
        this = (unint64_t *)google::protobuf::internal::GenericTypeHandler<CoreML::Specification::ItemSimilarityRecommender_ConnectedItem>::Merge(v20, (std::string *)Aligned);
        *v18++ = Aligned;
        ++v19;
        --v16;
      }
      while (v16);
    }
    int v25 = *((_DWORD *)v3 + 6) + v5;
    *((_DWORD *)v3 + 6) = v25;
    char v26 = (int *)v3[4];
    if (*v26 < v25) {
      int *v26 = v25;
    }
  }
  unint64_t v27 = *((void *)a2 + 5);
  if (v27) {
    v3[5] = v27;
  }
  unint64_t v28 = *((void *)a2 + 6);
  if (v28) {
    v3[6] = v28;
  }
  int v29 = *((_DWORD *)a2 + 14);
  if (v29) {
    *((_DWORD *)v3 + 14) = v29;
  }
  if (*((unsigned char *)a2 + 60)) {
    *((unsigned char *)v3 + 6CoreML::Specification::CoreMLModels::WordTagger::New(this, 0) = 1;
  }
  unint64_t v30 = *((void *)a2 + 8);
  if (v30) {
    v3[8] = v30;
  }
  double v31 = *((double *)a2 + 9);
  if (v31 != 0.0) {
    *((double *)v3 + 9) = v31;
  }
  unint64_t v32 = *((void *)a2 + 10);
  if (v32) {
    v3[10] = v32;
  }
  unint64_t v33 = *((void *)a2 + 11);
  if (v33) {
    v3[11] = v33;
  }
  double v34 = *((double *)a2 + 12);
  if (v34 != 0.0) {
    *((double *)v3 + 12) = v34;
  }
  return this;
}

void sub_19EB711BC(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x1081C40B7564605);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::TreeEnsembleRegressor::IsInitialized(CoreML::Specification::TreeEnsembleRegressor *this)
{
  return 1;
}

uint64_t CoreML::Specification::TreeEnsembleRegressor::Clear(CoreML::Specification::TreeEnsembleRegressor *this)
{
  uint64_t result = *((void *)this + 2);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return result;
}

void CoreML::Specification::TreeEnsembleRegressor::New(CoreML::Specification::TreeEnsembleRegressor *this, google::protobuf::Arena *a2)
{
}

void sub_19EB71290(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C406A65A86DLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::TreeEnsembleRegressor *CoreML::Specification::TreeEnsembleRegressor::TreeEnsembleRegressor(CoreML::Specification::TreeEnsembleRegressor *this)
{
  *(void *)this = &unk_1EF0D50E0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::TreeEnsembleRegressor *)&CoreML::Specification::_TreeEnsembleRegressor_default_instance_) {
    CoreML::Specification::protobuf_TreeEnsemble_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  return this;
}

void sub_19EB71314(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::TreeEnsembleRegressor>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    int v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::TreeEnsembleRegressor>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::TreeEnsembleRegressor>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::TreeEnsembleRegressor::New(CoreML::Specification::TreeEnsembleRegressor *this)
{
}

void *CoreML::Specification::TreeEnsembleRegressor::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.TreeEnsembleRegressor");
}

void CoreML::Specification::TreeEnsembleRegressor::~TreeEnsembleRegressor(CoreML::Specification::TreeEnsembleRegressor *this)
{
  CoreML::Specification::TreeEnsembleRegressor::~TreeEnsembleRegressor(this);

  JUMPOUT(0x19F3C1920);
}

{
  uint64_t v2;

  *(void *)this = &unk_1EF0D50E0;
  if (this != (CoreML::Specification::TreeEnsembleRegressor *)&CoreML::Specification::_TreeEnsembleRegressor_default_instance_)
  {
    uint64_t v2 = *((void *)this + 2);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::TreeEnsembleClassifier::GetCachedSize(CoreML::Specification::TreeEnsembleClassifier *this)
{
  return *((unsigned int *)this + 10);
}

uint64_t *CoreML::Specification::TreeEnsembleClassifier::SerializeWithCachedSizes(uint64_t *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  unint64_t v5 = this;
  if (this != &CoreML::Specification::_TreeEnsembleClassifier_default_instance_)
  {
    uint64_t v6 = this[2];
    if (v6) {
      this = (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
    }
  }
  signed int v7 = *((_DWORD *)v5 + 6);
  if (v7) {
    this = (uint64_t *)google::protobuf::internal::WireFormatLite::WriteEnum(2, v7, a2, a4);
  }
  int v8 = *((_DWORD *)v5 + 11);
  if (v8 == 100)
  {
    this = (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)0x64, v5[4], a2, a4);
    int v8 = *((_DWORD *)v5 + 11);
  }
  if (v8 == 101)
  {
    uint64_t v9 = v5[4];
    return (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)0x65, v9, a2, a4);
  }
  return this;
}

uint64_t CoreML::Specification::TreeEnsembleClassifier::ByteSizeLong(CoreML::Specification::TreeEnsembleClassifier *this)
{
  if (this == (CoreML::Specification::TreeEnsembleClassifier *)&CoreML::Specification::_TreeEnsembleClassifier_default_instance_
    || (uint64_t v2 = (CoreML::Specification::TreeEnsembleParameters *)*((void *)this + 2)) == 0)
  {
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v3 = CoreML::Specification::TreeEnsembleParameters::ByteSizeLong(v2);
    uint64_t v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  int v5 = *((_DWORD *)this + 6);
  if (v5)
  {
    if (v5 < 0) {
      uint64_t v6 = 11;
    }
    else {
      uint64_t v6 = ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v4 += v6;
  }
  int v7 = *((_DWORD *)this + 11);
  if (v7 == 101)
  {
    uint64_t v8 = CoreML::Specification::Int64Vector::ByteSizeLong(*((CoreML::Specification::Int64Vector **)this + 4));
    goto LABEL_14;
  }
  if (v7 == 100)
  {
    uint64_t v8 = CoreML::Specification::StringVector::ByteSizeLong(*((CoreML::Specification::StringVector **)this + 4));
LABEL_14:
    v4 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
  *((_DWORD *)this + 1CoreML::Specification::TreeEnsembleRegressor::New(this, 0) = v4;
  return v4;
}

uint64_t CoreML::Specification::TreeEnsembleClassifier::MergePartialFromCodedStream(CoreML::Specification::TreeEnsembleClassifier *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      int v5 = *(unsigned __int8 **)a2;
      unint64_t v6 = *((void *)a2 + 1);
      if (*(void *)a2 >= v6)
      {
        LODWORD(v8) = 0;
      }
      else
      {
        int v7 = v5 + 1;
        uint64_t v8 = *v5;
        if ((char)*v5 >= 1)
        {
          *(void *)a2 = v7;
          unint64_t v9 = v8 | 0x100000000;
          if ((v9 & 0x100000000) == 0) {
            goto LABEL_55;
          }
          goto LABEL_8;
        }
        if ((unint64_t)v7 < v6)
        {
          int v10 = *v7;
          if ((v8 & ~v10) >= 0x80)
          {
            *(void *)a2 = v5 + 2;
            unint64_t v9 = (v8 + (v10 << 7) - 128) | 0x100000000;
            goto LABEL_8;
          }
        }
      }
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v8);
      unint64_t v9 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
      if ((v9 & 0x100000000) == 0) {
        goto LABEL_55;
      }
LABEL_8:
      unsigned int v11 = v9 >> 3;
      if (v9 >> 3 > 0x63) {
        break;
      }
      if (v11 == 1)
      {
        if (v9 == 10)
        {
          int v16 = (CoreML::Specification::TreeEnsembleParameters *)*((void *)this + 2);
          if (!v16) {
            operator new();
          }
          uint64_t v17 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v17 < 0)
          {
            int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            int VarintSizeAsIntFallback = *v17;
            *(void *)a2 = v17 + 1;
          }
          int v24 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          int v26 = *((_DWORD *)a2 + 13);
          BOOL v27 = __OFSUB__(v26--, 1);
          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v26;
          if (v26 < 0 != v27) {
            return 0;
          }
          int v28 = v24;
          uint64_t result = CoreML::Specification::TreeEnsembleParameters::MergePartialFromCodedStream(v16, a2, v25);
          if (!result) {
            return result;
          }
          goto LABEL_51;
        }
LABEL_55:
        if (v9) {
          BOOL v37 = (v9 & 7) == 4;
        }
        else {
          BOOL v37 = 1;
        }
        if (v37) {
          return 1;
        }
        if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v9, a3) & 1) == 0)return 0; {
      }
        }
      else
      {
        if (v11 != 2 || v9 != 16) {
          goto LABEL_55;
        }
        int v13 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1))
        {
          int v14 = 0;
        }
        else
        {
          int v14 = *v13;
          if ((*v13 & 0x80000000) == 0)
          {
            *(void *)a2 = v13 + 1;
            goto LABEL_63;
          }
        }
        uint64_t Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v14);
        int v14 = Varint32Fallback;
        if (Varint32Fallback < 0) {
          return 0;
        }
LABEL_63:
        *((_DWORD *)this + 6) = v14;
      }
    }
    if (v11 == 100) {
      break;
    }
    if (v11 != 101 || v9 != 42) {
      goto LABEL_55;
    }
    if (*((_DWORD *)this + 11) != 101)
    {
      CoreML::Specification::TreeEnsembleClassifier::clear_ClassLabels((uint64_t)this);
      *((_DWORD *)this + 11) = 101;
      operator new();
    }
    BOOL v15 = (CoreML::Specification::Int64Vector *)*((void *)this + 4);
    unint64_t v20 = *(char **)a2;
    if (*(void *)a2 >= *((void *)a2 + 1) || *v20 < 0)
    {
      int v21 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
      if (v21 < 0) {
        return 0;
      }
    }
    else
    {
      int v21 = *v20;
      *(void *)a2 = v20 + 1;
    }
    int v30 = google::protobuf::io::CodedInputStream::PushLimit(a2, v21);
    int v32 = *((_DWORD *)a2 + 13);
    BOOL v27 = __OFSUB__(v32--, 1);
    *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v32;
    if (v32 < 0 != v27) {
      return 0;
    }
    int v28 = v30;
    uint64_t result = CoreML::Specification::Int64Vector::MergePartialFromCodedStream(v15, a2, v31);
    if (!result) {
      return result;
    }
LABEL_51:
    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v28)) {
      return 0;
    }
  }
  if (v9 != 34) {
    goto LABEL_55;
  }
  if (*((_DWORD *)this + 11) != 100)
  {
    CoreML::Specification::TreeEnsembleClassifier::clear_ClassLabels((uint64_t)this);
    *((_DWORD *)this + 11) = 100;
    operator new();
  }
  BOOL v19 = (CoreML::Specification::StringVector *)*((void *)this + 4);
  int v22 = *(char **)a2;
  if (*(void *)a2 >= *((void *)a2 + 1) || *v22 < 0)
  {
    int v23 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
    if (v23 < 0) {
      return 0;
    }
  }
  else
  {
    int v23 = *v22;
    *(void *)a2 = v22 + 1;
  }
  int v33 = google::protobuf::io::CodedInputStream::PushLimit(a2, v23);
  int v35 = *((_DWORD *)a2 + 13);
  BOOL v27 = __OFSUB__(v35--, 1);
  *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v35;
  if (v35 < 0 == v27)
  {
    int v28 = v33;
    uint64_t result = CoreML::Specification::StringVector::MergePartialFromCodedStream(v19, (char **)a2, v34);
    if (!result) {
      return result;
    }
    goto LABEL_51;
  }
  return 0;
}

void sub_19EB719A8(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C40CFA7A0FDLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::TreeEnsembleClassifier::clear_ClassLabels(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 44);
  if (v2 == 101 || v2 == 100)
  {
    this = *(void *)(this + 32);
    if (this) {
      this = (*(uint64_t (**)(uint64_t))(*(void *)this + 8))(this);
    }
  }
  *(_DWORD *)(v1 + 44) = 0;
  return this;
}

std::string *CoreML::Specification::TreeEnsembleClassifier::MergeFrom(std::string *this, const CoreML::Specification::TreeEnsembleClassifier *a2)
{
  uint64_t v3 = (uint64_t)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  uint64_t v5 = *((void *)a2 + 2);
  if (a2 != (const CoreML::Specification::TreeEnsembleClassifier *)&CoreML::Specification::_TreeEnsembleClassifier_default_instance_
    && v5 != 0)
  {
    int v7 = *(unint64_t **)(v3 + 16);
    if (!v7) {
      operator new();
    }
    if (v5) {
      uint64_t v8 = (const CoreML::Specification::TreeEnsembleParameters *)*((void *)a2 + 2);
    }
    else {
      uint64_t v8 = (const CoreML::Specification::TreeEnsembleParameters *)&CoreML::Specification::_TreeEnsembleParameters_default_instance_;
    }
    this = (std::string *)CoreML::Specification::TreeEnsembleParameters::MergeFrom(v7, v8);
  }
  int v9 = *((_DWORD *)a2 + 6);
  if (v9) {
    *(_DWORD *)(v3 + 24) = v9;
  }
  int v10 = *((_DWORD *)a2 + 11);
  if (v10 == 101)
  {
    if (*(_DWORD *)(v3 + 44) != 101)
    {
      CoreML::Specification::TreeEnsembleClassifier::clear_ClassLabels(v3);
      *(_DWORD *)(v3 + 44) = 101;
      operator new();
    }
    unint64_t v12 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts *)*((void *)a2 + 4);
    int v14 = *(unint64_t **)(v3 + 32);
    return (std::string *)CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts::MergeFrom(v14, v12);
  }
  else if (v10 == 100)
  {
    if (*(_DWORD *)(v3 + 44) != 100)
    {
      CoreML::Specification::TreeEnsembleClassifier::clear_ClassLabels(v3);
      *(_DWORD *)(v3 + 44) = 100;
      operator new();
    }
    unsigned int v11 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedStrings *)*((void *)a2 + 4);
    int v13 = *(std::string **)(v3 + 32);
    return CoreML::Specification::MILSpec::TensorValue_RepeatedStrings::MergeFrom(v13, v11);
  }
  return this;
}

void sub_19EB71C34(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::TreeEnsembleClassifier::IsInitialized(CoreML::Specification::TreeEnsembleClassifier *this)
{
  return 1;
}

uint64_t CoreML::Specification::TreeEnsembleClassifier::Clear(CoreML::Specification::TreeEnsembleClassifier *this)
{
  uint64_t v2 = *((void *)this + 2);
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;

  return CoreML::Specification::TreeEnsembleClassifier::clear_ClassLabels((uint64_t)this);
}

void CoreML::Specification::TreeEnsembleClassifier::New(CoreML::Specification::TreeEnsembleClassifier *this, google::protobuf::Arena *a2)
{
}

void sub_19EB71D44(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C403B3CA634);
  _Unwind_Resume(a1);
}

CoreML::Specification::TreeEnsembleClassifier *CoreML::Specification::TreeEnsembleClassifier::TreeEnsembleClassifier(CoreML::Specification::TreeEnsembleClassifier *this)
{
  *(void *)this = &unk_1EF0D5A60;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::TreeEnsembleClassifier *)&CoreML::Specification::_TreeEnsembleClassifier_default_instance_) {
    CoreML::Specification::protobuf_TreeEnsemble_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 6) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 5) = 0;
  return this;
}

void sub_19EB71DD0(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::TreeEnsembleClassifier>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::TreeEnsembleClassifier>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::TreeEnsembleClassifier>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::TreeEnsembleClassifier::New(CoreML::Specification::TreeEnsembleClassifier *this)
{
}

void *CoreML::Specification::TreeEnsembleClassifier::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.TreeEnsembleClassifier");
}

void CoreML::Specification::TreeEnsembleClassifier::~TreeEnsembleClassifier(CoreML::Specification::TreeEnsembleClassifier *this)
{
  CoreML::Specification::TreeEnsembleClassifier::~TreeEnsembleClassifier(this);

  JUMPOUT(0x19F3C1920);
}

{
  uint64_t v2;

  *(void *)this = &unk_1EF0D5A60;
  if (this != (CoreML::Specification::TreeEnsembleClassifier *)&CoreML::Specification::_TreeEnsembleClassifier_default_instance_)
  {
    uint64_t v2 = *((void *)this + 2);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  if (*((_DWORD *)this + 11)) {
    CoreML::Specification::TreeEnsembleClassifier::clear_ClassLabels((uint64_t)this);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::TreeEnsembleParameters::GetCachedSize(CoreML::Specification::TreeEnsembleParameters *this)
{
  return *((unsigned int *)this + 18);
}

uint64_t CoreML::Specification::TreeEnsembleParameters::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
      this = google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)1, *(void *)(*(void *)(v5 + 32) + 8 * i + 8), a2, a4);
  }
  unint64_t v8 = *(void *)(v5 + 64);
  if (v8) {
    this = google::protobuf::internal::WireFormatLite::WriteUInt64(2, v8, a2, a4);
  }
  if (*(int *)(v5 + 40) >= 1)
  {
    if (*((int *)a2 + 4) < 5)
    {
      __src[0] = 26;
      google::protobuf::io::CodedOutputStream::WriteRaw(a2, __src, 1);
      int v9 = *((_DWORD *)a2 + 4);
    }
    else
    {
      *(unsigned char *)(*((void *)a2 + 1))++ = 26;
      int v9 = *((_DWORD *)a2 + 4) - 1;
      *((_DWORD *)a2 + 4) = v9;
    }
    unsigned int v10 = *(_DWORD *)(v5 + 56);
    if (v9 < 5)
    {
      google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v10);
    }
    else
    {
      uint64_t v11 = *((void *)a2 + 1);
      if (v10 < 0x80)
      {
        unsigned int v13 = *(_DWORD *)(v5 + 56);
        unint64_t v12 = (unsigned char *)*((void *)a2 + 1);
      }
      else
      {
        unint64_t v12 = (unsigned char *)*((void *)a2 + 1);
        do
        {
          *v12++ = v10 | 0x80;
          unsigned int v13 = v10 >> 7;
          unsigned int v14 = v10 >> 14;
          v10 >>= 7;
        }
        while (v14);
      }
      *unint64_t v12 = v13;
      int v15 = v12 - v11 + 1;
      *((void *)a2 + 1) += v15;
      *((_DWORD *)a2 + 4) -= v15;
    }
    uint64_t v16 = *(void *)(v5 + 48);
    if (v16) {
      uint64_t v17 = (char *)(v16 + 8);
    }
    else {
      uint64_t v17 = 0;
    }
    int v18 = 8 * *(_DWORD *)(v5 + 40);
    return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v17, v18);
  }
  return this;
}

uint64_t CoreML::Specification::TreeEnsembleParameters::IsInitialized(CoreML::Specification::TreeEnsembleParameters *this)
{
  return 1;
}

uint64_t CoreML::Specification::TreeEnsembleParameters::Clear(uint64_t this)
{
  uint64_t v1 = *(unsigned int *)(this + 24);
  if ((int)v1 >= 1)
  {
    uint64_t v2 = 0;
    uint64_t v3 = *(void *)(this + 32) + 8;
    do
    {
      uint64_t v4 = *(void *)(v3 + 8 * v2);
      uint64_t v5 = *(unsigned int *)(v4 + 24);
      if ((int)v5 >= 1)
      {
        int v6 = (uint64_t *)(*(void *)(v4 + 32) + 8);
        do
        {
          uint64_t v7 = *v6++;
          *(void *)(v7 + 16) = 0;
          *(void *)(v7 + 24) = 0;
          --v5;
        }
        while (v5);
        *(_DWORD *)(v4 + 24) = 0;
      }
      ++v2;
      *(_OWORD *)(v4 + 88) = 0uLL;
      *(_OWORD *)(v4 + 72) = 0uLL;
      *(_OWORD *)(v4 + 56) = 0uLL;
      *(_OWORD *)(v4 + 4CoreML::Specification::TreeEnsembleClassifier::New(this, 0) = 0uLL;
    }
    while (v2 != v1);
    *(_DWORD *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 4CoreML::Specification::TreeEnsembleClassifier::New(this, 0) = 0;
  *(void *)(this + 64) = 0;
  return this;
}

void CoreML::Specification::TreeEnsembleParameters::New(CoreML::Specification::TreeEnsembleParameters *this, google::protobuf::Arena *a2)
{
}

void sub_19EB721B8(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C40CFA7A0FDLL);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::TreeEnsembleParameters>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::TreeEnsembleParameters>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::TreeEnsembleParameters>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::TreeEnsembleParameters::New(CoreML::Specification::TreeEnsembleParameters *this)
{
}

void *CoreML::Specification::TreeEnsembleParameters::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.TreeEnsembleParameters");
}

void CoreML::Specification::TreeEnsembleParameters::~TreeEnsembleParameters(CoreML::Specification::TreeEnsembleParameters *this)
{
  CoreML::Specification::TreeEnsembleParameters::~TreeEnsembleParameters(this);

  JUMPOUT(0x19F3C1920);
}

{
  void *v2;

  *(void *)this = &unk_1EF0D5AF8;
  uint64_t v2 = (void *)*((void *)this + 6);
  if (v2 && !*v2) {
    operator delete(v2);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::NeuralNetworkPreprocessing>::TypeHandler>((void *)this + 2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::TreeEnsembleParameters_TreeNode::GetCachedSize(CoreML::Specification::TreeEnsembleParameters_TreeNode *this)
{
  return *((unsigned int *)this + 26);
}

uint64_t CoreML::Specification::TreeEnsembleParameters_TreeNode::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, google::protobuf::io::CodedOutputStream *a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  unint64_t v6 = *(void *)(this + 40);
  if (v6) {
    this = google::protobuf::internal::WireFormatLite::WriteUInt64(1, v6, a2, a4);
  }
  unint64_t v7 = *(void *)(v5 + 48);
  if (v7) {
    this = google::protobuf::internal::WireFormatLite::WriteUInt64(2, v7, a2, a4);
  }
  signed int v8 = *(_DWORD *)(v5 + 56);
  if (v8) {
    this = google::protobuf::internal::WireFormatLite::WriteEnum(3, v8, a2, a4);
  }
  unint64_t v9 = *(void *)(v5 + 64);
  if (v9) {
    this = google::protobuf::internal::WireFormatLite::WriteUInt64(10, v9, a2, a4);
  }
  double v10 = *(double *)(v5 + 72);
  if (v10 != 0.0) {
    this = google::protobuf::internal::WireFormatLite::WriteDouble(11, a2, v10, a3);
  }
  unint64_t v11 = *(void *)(v5 + 80);
  if (v11) {
    this = google::protobuf::internal::WireFormatLite::WriteUInt64(12, v11, a2, a4);
  }
  unint64_t v12 = *(void *)(v5 + 88);
  if (v12) {
    this = google::protobuf::internal::WireFormatLite::WriteUInt64(13, v12, a2, a4);
  }
  if (*(unsigned char *)(v5 + 60)) {
    this = google::protobuf::internal::WireFormatLite::WriteBool(14, 1u, a2, a4);
  }
  int v13 = *(_DWORD *)(v5 + 24);
  if (v13)
  {
    for (int i = 0; i != v13; ++i)
      this = google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)0x14, *(void *)(*(void *)(v5 + 32) + 8 * i + 8), a2, a4);
  }
  double v15 = *(double *)(v5 + 96);
  if (v15 != 0.0)
  {
    return google::protobuf::internal::WireFormatLite::WriteDouble(30, a2, v15, a3);
  }
  return this;
}

uint64_t CoreML::Specification::TreeEnsembleParameters_TreeNode::IsInitialized(CoreML::Specification::TreeEnsembleParameters_TreeNode *this)
{
  return 1;
}

double CoreML::Specification::TreeEnsembleParameters_TreeNode::Clear(CoreML::Specification::TreeEnsembleParameters_TreeNode *this)
{
  uint64_t v1 = *((unsigned int *)this + 6);
  if ((int)v1 >= 1)
  {
    uint64_t v2 = (uint64_t *)(*((void *)this + 4) + 8);
    do
    {
      uint64_t v3 = *v2++;
      *(void *)(v3 + 16) = 0;
      *(void *)(v3 + 24) = 0;
      --v1;
    }
    while (v1);
    *((_DWORD *)this + 6) = 0;
  }
  double result = 0.0;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 4CoreML::Specification::TreeEnsembleParameters::New(this, 0) = 0u;
  return result;
}

void CoreML::Specification::TreeEnsembleParameters_TreeNode::New(CoreML::Specification::TreeEnsembleParameters_TreeNode *this, google::protobuf::Arena *a2)
{
}

void sub_19EB72500(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C40FA1F30E5);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::TreeEnsembleParameters_TreeNode>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    double result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *double result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::TreeEnsembleParameters_TreeNode>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::TreeEnsembleParameters_TreeNode>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::TreeEnsembleParameters_TreeNode::New(CoreML::Specification::TreeEnsembleParameters_TreeNode *this)
{
}

void *CoreML::Specification::TreeEnsembleParameters_TreeNode::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.TreeEnsembleParameters.TreeNode");
}

void CoreML::Specification::TreeEnsembleParameters_TreeNode::~TreeEnsembleParameters_TreeNode(CoreML::Specification::TreeEnsembleParameters_TreeNode *this)
{
  CoreML::Specification::TreeEnsembleParameters_TreeNode::~TreeEnsembleParameters_TreeNode(this);

  JUMPOUT(0x19F3C1920);
}

{
  *(void *)this = &unk_1EF0D8650;
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::NeuralNetworkPreprocessing>::TypeHandler>((void *)this + 2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

void CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo::New(CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo *this)
{
}

void *CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.TreeEnsembleParameters.TreeNode.EvaluationInfo");
}

void CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo::~TreeEnsembleParameters_TreeNode_EvaluationInfo(CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo *this)
{
  *(void *)this = &unk_1EF0D9490;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);

  JUMPOUT(0x19F3C1920);
}

{
  *(void *)this = &unk_1EF0D9490;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

CoreML::Specification::FeatureType **CoreML::FeatureType::FeatureType(CoreML::Specification::FeatureType **a1, int a2)
{
  uint64_t v4 = operator new(0x40uLL);
  v4[1] = 0;
  v4[2] = 0;
  void *v4 = &unk_1EF0DD650;
  unint64_t v5 = CoreML::Specification::FeatureType::FeatureType((CoreML::Specification::FeatureType *)(v4 + 3));
  *a1 = v5;
  a1[1] = (CoreML::Specification::FeatureType *)v4;
  switch(a2)
  {
    case 1:
      if (*((_DWORD *)v4 + 15) != 1)
      {
        CoreML::Specification::FeatureType::clear_Type((uint64_t)v5);
        *((_DWORD *)v4 + 15) = 1;
        operator new();
      }
      return result;
    case 2:
      if (*((_DWORD *)v4 + 15) != 2)
      {
        CoreML::Specification::FeatureType::clear_Type((uint64_t)v5);
        *((_DWORD *)v4 + 15) = 2;
        operator new();
      }
      return result;
    case 3:
      if (*((_DWORD *)v4 + 15) != 3)
      {
        CoreML::Specification::FeatureType::clear_Type((uint64_t)v5);
        *((_DWORD *)v4 + 15) = 3;
        operator new();
      }
      return result;
    case 4:
      if (*((_DWORD *)v4 + 15) != 4)
      {
        CoreML::Specification::FeatureType::clear_Type((uint64_t)v5);
        *((_DWORD *)v4 + 15) = 4;
        operator new();
      }
      return result;
    case 5:
      if (*((_DWORD *)v4 + 15) != 5)
      {
        CoreML::Specification::FeatureType::clear_Type((uint64_t)v5);
        *((_DWORD *)v4 + 15) = 5;
        operator new();
      }
      return result;
    case 6:
      if (*((_DWORD *)v4 + 15) != 6)
      {
        CoreML::Specification::FeatureType::clear_Type((uint64_t)v5);
        *((_DWORD *)v4 + 15) = 6;
        operator new();
      }
      return result;
    default:
      return a1;
  }
  return a1;
}

void sub_19EB72908(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v2, 0x10A1C406A65A86DLL);
  uint64_t v4 = *(std::__shared_weak_count **)(v1 + 8);
  if (v4) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v4);
  }
  _Unwind_Resume(a1);
}

uint64_t std::__shared_ptr_emplace<CoreML::Specification::FeatureType>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void std::__shared_ptr_emplace<CoreML::Specification::FeatureType>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1EF0DD650;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x19F3C1920);
}

void std::__shared_ptr_emplace<CoreML::Specification::FeatureType>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1EF0DD650;
  std::__shared_weak_count::~__shared_weak_count(this);
}

CoreML::FeatureType *CoreML::FeatureType::FeatureType(CoreML::FeatureType *this, const CoreML::Specification::FeatureType *a2)
{
  uint64_t v4 = operator new(0x40uLL);
  v4[1] = 0;
  v4[2] = 0;
  void *v4 = &unk_1EF0DD650;
  *(void *)this = CoreML::Specification::FeatureType::FeatureType((CoreML::Specification::FeatureType *)(v4 + 3), a2);
  *((void *)this + 1) = v4;
  return this;
}

void sub_19EB72ABC(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

uint64_t CoreML::FeatureType::toString(std::string *this, uint64_t a2)
{
  std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream[abi:ne180100]((uint64_t)v72);
  uint64_t v4 = *(int *)(*(void *)a2 + 36);
  std::string::basic_string[abi:ne180100]<0>(&__p, off_1E59A54C0[v4]);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = __p.__r_.__value_.__l.__size_;
  }
  inited = (CoreML::Specification::protobuf_FeatureTypes_2eproto *)std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v73, (uint64_t)p_p, size);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  signed int v8 = (void *)MEMORY[0x1E4FBA408];
  switch((int)v4)
  {
    case 4:
      if (*(_DWORD *)(*(void *)a2 + 36) == 4)
      {
        unint64_t v9 = *(uint64_t **)(*(void *)a2 + 24);
      }
      else
      {
        CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults(inited);
        unint64_t v9 = &CoreML::Specification::_ImageFeatureType_default_instance_;
      }
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v73, (uint64_t)" (", 2);
      int v14 = *((_DWORD *)v9 + 8);
      if (v14 <= 19)
      {
        if (v14 != 0x80000000 && v14)
        {
          double v15 = "Grayscale";
          goto LABEL_123;
        }
LABEL_122:
        double v15 = "Invalid";
        goto LABEL_123;
      }
      if (v14 > 39)
      {
        if (v14 == 40)
        {
          double v15 = "Grayscale16Half";
          goto LABEL_123;
        }
        goto LABEL_122;
      }
      if (v14 == 20) {
        double v15 = "RGB";
      }
      else {
        double v15 = "BGR";
      }
LABEL_123:
      std::string::basic_string[abi:ne180100]<0>(&__p, v15);
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v44 = &__p;
      }
      else {
        uint64_t v44 = (std::string *)__p.__r_.__value_.__r.__words[0];
      }
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type v45 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type v45 = __p.__r_.__value_.__l.__size_;
      }
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v73, (uint64_t)v44, v45);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      memset(&__p, 0, sizeof(__p));
      uint64_t v46 = v9[2];
      if (v46 < 1 || v9[3] < 1)
      {
        int v51 = *((_DWORD *)v9 + 13);
        if (v51 == 31)
        {
          unint64_t v55 = *(uint64_t **)(v9[5] + 16);
          if (!v55) {
            unint64_t v55 = &CoreML::Specification::_SizeRange_default_instance_;
          }
          uint64_t v56 = v55[2];
          unint64_t v57 = (CoreML::Specification::protobuf_FeatureTypes_2eproto *)operator new(8uLL);
          unint64_t v47 = v57;
          *(void *)unint64_t v57 = v56;
          __p.__r_.__value_.__r.__words[0] = (std::string::size_type)v57;
          __p.__r_.__value_.__l.__size_ = (std::string::size_type)v57 + 8;
          __p.__r_.__value_.__r.__words[2] = (std::string::size_type)v57 + 8;
          if (*((_DWORD *)v9 + 13) == 31)
          {
            uint64_t v58 = (uint64_t *)v9[5];
          }
          else
          {
            CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults(v57);
            uint64_t v58 = &CoreML::Specification::_ImageFeatureType_ImageSizeRange_default_instance_;
          }
          uint64_t v60 = (uint64_t *)v58[3];
          if (!v60) {
            uint64_t v60 = &CoreML::Specification::_SizeRange_default_instance_;
          }
          uint64_t v48 = v60[2];
          unsigned int v49 = std::__allocate_at_least[abi:ne180100]<std::allocator<_KDInterval>>(2uLL);
        }
        else
        {
          if (v51 != 21)
          {
            BOOL v19 = 0;
            goto LABEL_158;
          }
          uint64_t v52 = *(void *)(*(void *)(*(void *)(v9[5] + 32) + 8) + 16);
          uint64_t v53 = (CoreML::Specification::protobuf_FeatureTypes_2eproto *)operator new(8uLL);
          unint64_t v47 = v53;
          *(void *)uint64_t v53 = v52;
          __p.__r_.__value_.__r.__words[0] = (std::string::size_type)v53;
          __p.__r_.__value_.__l.__size_ = (std::string::size_type)v53 + 8;
          __p.__r_.__value_.__r.__words[2] = (std::string::size_type)v53 + 8;
          if (*((_DWORD *)v9 + 13) == 21)
          {
            unint64_t v54 = (uint64_t *)v9[5];
          }
          else
          {
            CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults(v53);
            unint64_t v54 = &CoreML::Specification::_ImageFeatureType_EnumeratedImageSizes_default_instance_;
          }
          uint64_t v48 = *(void *)(*(void *)(v54[4] + 8) + 24);
          unsigned int v49 = std::__allocate_at_least[abi:ne180100]<std::allocator<_KDInterval>>(2uLL);
        }
      }
      else
      {
        unint64_t v47 = operator new(8uLL);
        *unint64_t v47 = v46;
        __p.__r_.__value_.__l.__size_ = (std::string::size_type)(v47 + 1);
        __p.__r_.__value_.__r.__words[2] = (std::string::size_type)(v47 + 1);
        __p.__r_.__value_.__r.__words[0] = (std::string::size_type)v47;
        uint64_t v48 = v9[3];
        unsigned int v49 = std::__allocate_at_least[abi:ne180100]<std::allocator<_KDInterval>>(2uLL);
      }
      unint64_t v61 = v49;
      v49[1] = v48;
      std::string::size_type v62 = (std::string::size_type)(v49 + 2);
      *unsigned int v49 = *v47;
      __p.__r_.__value_.__r.__words[0] = (std::string::size_type)v49;
      __p.__r_.__value_.__r.__words[2] = (std::string::size_type)&v49[v50];
      operator delete(v47);
      __p.__r_.__value_.__l.__size_ = v62;
      BOOL v19 = v61;
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v73, (uint64_t)" ", 1);
      CoreML::dimensionsToString((uint64_t)&v69, &__p);
      if ((v71 & 0x80u) == 0) {
        unint64_t v63 = &v69;
      }
      else {
        unint64_t v63 = v69;
      }
      if ((v71 & 0x80u) == 0) {
        uint64_t v64 = v71;
      }
      else {
        uint64_t v64 = v70;
      }
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v73, (uint64_t)v63, v64);
      if ((char)v71 < 0) {
        operator delete(v69);
      }
LABEL_158:
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v73, (uint64_t)")", 1);
      if (v19)
      {
        __p.__r_.__value_.__l.__size_ = (std::string::size_type)v19;
        goto LABEL_160;
      }
LABEL_161:
      std::stringbuf::str();
      if (*(unsigned char *)(*(void *)a2 + 16)) {
        uint64_t v65 = "?";
      }
      else {
        uint64_t v65 = (const std::string::value_type *)&unk_19EC86ACE;
      }
      std::string::size_type v66 = std::string::append(&__p, v65);
      *this = *v66;
      v66->__r_.__value_.__l.__size_ = 0;
      v66->__r_.__value_.__r.__words[2] = 0;
      v66->__r_.__value_.__r.__words[0] = 0;
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      v72[0] = *v8;
      uint64_t v67 = v8[9];
      *(void *)((char *)v72 + *(void *)(v72[0] - 24)) = v8[8];
      v73[0] = v67;
      v73[1] = MEMORY[0x1E4FBA470] + 16;
      if (v74 < 0) {
        operator delete((void *)v73[9]);
      }
      std::streambuf::~streambuf();
      std::iostream::~basic_iostream();
      return MEMORY[0x19F3C1850](&v75);
    case 5:
      if (*(_DWORD *)(*(void *)a2 + 36) == 5)
      {
        double v10 = *(int **)(*(void *)a2 + 24);
      }
      else
      {
        CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults(inited);
        double v10 = (int *)&CoreML::Specification::_ArrayFeatureType_default_instance_;
      }
      uint64_t v16 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v73, (uint64_t)" (", 2);
      CoreML::dataTypeToString(&__p, v10[9]);
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v17 = &__p;
      }
      else {
        uint64_t v17 = (std::string *)__p.__r_.__value_.__r.__words[0];
      }
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type v18 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type v18 = __p.__r_.__value_.__l.__size_;
      }
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v16, (uint64_t)v17, v18);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      CoreML::defaultShapeOf((unint64_t)&__p, (const CoreML::Specification::ArrayFeatureType *)v10);
      BOOL v19 = (void *)__p.__r_.__value_.__r.__words[0];
      if (__p.__r_.__value_.__l.__size_ != __p.__r_.__value_.__r.__words[0])
      {
        std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v73, (uint64_t)" ", 1);
        CoreML::dimensionsToString((uint64_t)&v69, &__p);
        unint64_t v20 = (v71 & 0x80u) == 0 ? &v69 : (void **)v69;
        uint64_t v21 = (v71 & 0x80u) == 0 ? v71 : v70;
        std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v73, (uint64_t)v20, v21);
        if ((char)v71 < 0) {
          operator delete(v69);
        }
      }
      goto LABEL_88;
    case 6:
      if (*(_DWORD *)(*(void *)a2 + 36) == 6)
      {
        unint64_t v11 = *(uint64_t **)(*(void *)a2 + 24);
      }
      else
      {
        CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults(inited);
        unint64_t v11 = &CoreML::Specification::_DictionaryFeatureType_default_instance_;
      }
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v73, (uint64_t)" (", 2);
      std::string::basic_string[abi:ne180100]<0>(&__p, off_1E59A5508[*((int *)v11 + 7)]);
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        int v22 = &__p;
      }
      else {
        int v22 = (std::string *)__p.__r_.__value_.__r.__words[0];
      }
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type v23 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type v23 = __p.__r_.__value_.__l.__size_;
      }
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v73, (uint64_t)v22, v23);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v73, (uint64_t)" → ", 5);
      std::string::basic_string[abi:ne180100]<0>(&__p, "Double");
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        int v24 = &__p;
      }
      else {
        int v24 = (std::string *)__p.__r_.__value_.__r.__words[0];
      }
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type v25 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type v25 = __p.__r_.__value_.__l.__size_;
      }
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v73, (uint64_t)v24, v25);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v73, (uint64_t)")", 1);
      goto LABEL_161;
    case 7:
      if (*(_DWORD *)(*(void *)a2 + 36) == 7)
      {
        unint64_t v12 = *(uint64_t **)(*(void *)a2 + 24);
      }
      else
      {
        CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults(inited);
        unint64_t v12 = &CoreML::Specification::_SequenceFeatureType_default_instance_;
      }
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v73, (uint64_t)" (", 2);
      int v26 = *((_DWORD *)v12 + 9);
      if (v26)
      {
        if (v26 == 1) {
          BOOL v27 = "Int64";
        }
        else {
          BOOL v27 = "String";
        }
      }
      else
      {
        BOOL v27 = "Invalid";
      }
      std::string::basic_string[abi:ne180100]<0>(&__p, v27);
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        unsigned int v34 = &__p;
      }
      else {
        unsigned int v34 = (std::string *)__p.__r_.__value_.__r.__words[0];
      }
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type v35 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type v35 = __p.__r_.__value_.__l.__size_;
      }
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v73, (uint64_t)v34, v35);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      uint64_t v36 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v73, (uint64_t)" ", 1);
      BOOL v37 = (uint64_t *)v12[2];
      if (!v37) {
        BOOL v37 = &CoreML::Specification::_SizeRange_default_instance_;
      }
      uint64_t v38 = v37[2];
      uint64_t v39 = v37[3];
      std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream[abi:ne180100]((uint64_t)&__p);
      if (v38 == v39) {
        goto LABEL_108;
      }
      if (v39 < 0)
      {
        double v59 = (void *)std::ostream::operator<<();
        std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v59, (uint64_t)"...", 3);
      }
      else
      {
        uint64_t v40 = (void *)std::ostream::operator<<();
        std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v40, (uint64_t)"...", 3);
LABEL_108:
        std::ostream::operator<<();
      }
      std::stringbuf::str();
      __p.__r_.__value_.__r.__words[0] = *v8;
      std::string::size_type v41 = v8[9];
      *(std::string::size_type *)((char *)__p.__r_.__value_.__r.__words
                                + *(void *)(__p.__r_.__value_.__r.__words[0] - 24)) = v8[8];
      __p.__r_.__value_.__r.__words[2] = v41;
      uint64_t v77 = MEMORY[0x1E4FBA470] + 16;
      if (v79 < 0) {
        operator delete(v78);
      }
      std::streambuf::~streambuf();
      std::iostream::~basic_iostream();
      MEMORY[0x19F3C1850](&v80);
      if ((v71 & 0x80u) == 0) {
        uint64_t v42 = &v69;
      }
      else {
        uint64_t v42 = v69;
      }
      if ((v71 & 0x80u) == 0) {
        uint64_t v43 = v71;
      }
      else {
        uint64_t v43 = v70;
      }
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v36, (uint64_t)v42, v43);
      if ((char)v71 < 0) {
        operator delete(v69);
      }
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v73, (uint64_t)")", 1);
      goto LABEL_161;
    case 8:
      if (*(_DWORD *)(*(void *)a2 + 36) == 8)
      {
        int v13 = *(uint64_t **)(*(void *)a2 + 24);
      }
      else
      {
        inited = (CoreML::Specification::protobuf_FeatureTypes_2eproto *)CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults(inited);
        int v13 = &CoreML::Specification::_StateFeatureType_default_instance_;
      }
      if (*((_DWORD *)v13 + 7) == 1)
      {
        int v28 = (int *)v13[2];
      }
      else
      {
        CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults(inited);
        int v28 = (int *)&CoreML::Specification::_ArrayFeatureType_default_instance_;
      }
      int v29 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v73, (uint64_t)" (", 2);
      CoreML::dataTypeToString(&__p, v28[9]);
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        int v30 = &__p;
      }
      else {
        int v30 = (std::string *)__p.__r_.__value_.__r.__words[0];
      }
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type v31 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type v31 = __p.__r_.__value_.__l.__size_;
      }
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v29, (uint64_t)v30, v31);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      CoreML::defaultShapeOf((unint64_t)&__p, (const CoreML::Specification::ArrayFeatureType *)v28);
      BOOL v19 = (void *)__p.__r_.__value_.__r.__words[0];
      if (__p.__r_.__value_.__l.__size_ != __p.__r_.__value_.__r.__words[0])
      {
        std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v73, (uint64_t)" ", 1);
        CoreML::dimensionsToString((uint64_t)&v69, &__p);
        int v32 = (v71 & 0x80u) == 0 ? &v69 : (void **)v69;
        uint64_t v33 = (v71 & 0x80u) == 0 ? v71 : v70;
        std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v73, (uint64_t)v32, v33);
        if ((char)v71 < 0) {
          operator delete(v69);
        }
      }
LABEL_88:
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v73, (uint64_t)")", 1);
      if (v19) {
LABEL_160:
      }
        operator delete(v19);
      goto LABEL_161;
    default:
      goto LABEL_161;
  }
}

void sub_19EB73584(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,int a53,__int16 a54,char a55,char a56)
{
}

void *CoreML::dataTypeToString(void *a1, int a2)
{
  if (a2 <= 65567)
  {
    if (a2 != 0x80000000 && a2)
    {
      uint64_t v2 = "Float16";
      return std::string::basic_string[abi:ne180100]<0>(a1, v2);
    }
LABEL_12:
    uint64_t v2 = "Invalid";
    return std::string::basic_string[abi:ne180100]<0>(a1, v2);
  }
  if (a2 > 131103)
  {
    if (a2 == 131104)
    {
      uint64_t v2 = "Int32";
      return std::string::basic_string[abi:ne180100]<0>(a1, v2);
    }
    goto LABEL_12;
  }
  if (a2 == 65568) {
    uint64_t v2 = "Float32";
  }
  else {
    uint64_t v2 = "Double";
  }
  return std::string::basic_string[abi:ne180100]<0>(a1, v2);
}

void CoreML::defaultShapeOf(unint64_t this, const CoreML::Specification::ArrayFeatureType *a2)
{
  uint64_t v3 = (void *)this;
  *(void *)this = 0;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  if (*((int *)a2 + 4) < 1)
  {
    int v16 = *((_DWORD *)a2 + 15);
    if (v16 == 21)
    {
      int v30 = 0;
      std::string::size_type v31 = 0;
      int v32 = 0;
      for (uint64_t i = 0; ; ++i)
      {
        if (v16 == 21)
        {
          unsigned int v34 = (uint64_t *)*((void *)a2 + 5);
        }
        else
        {
          this = (unint64_t)CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults((CoreML::Specification::protobuf_FeatureTypes_2eproto *)this);
          unsigned int v34 = &CoreML::Specification::_ArrayFeatureType_EnumeratedShapes_default_instance_;
        }
        if (i >= *(int *)(*(void *)(v34[4] + 8) + 16)) {
          break;
        }
        if (*((_DWORD *)a2 + 15) == 21)
        {
          std::string::size_type v35 = (uint64_t *)*((void *)a2 + 5);
        }
        else
        {
          this = (unint64_t)CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults((CoreML::Specification::protobuf_FeatureTypes_2eproto *)this);
          std::string::size_type v35 = &CoreML::Specification::_ArrayFeatureType_EnumeratedShapes_default_instance_;
        }
        uint64_t v36 = *(void *)(*(void *)(*(void *)(v35[4] + 8) + 24) + 8 * i + 8);
        if (v32 >= v31)
        {
          uint64_t v38 = (v32 - v30) >> 3;
          unint64_t v39 = v38 + 1;
          if ((unint64_t)(v38 + 1) >> 61) {
            std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__throw_length_error[abi:ne180100]();
          }
          if ((v31 - v30) >> 2 > v39) {
            unint64_t v39 = (v31 - v30) >> 2;
          }
          if ((unint64_t)(v31 - v30) >= 0x7FFFFFFFFFFFFFF8) {
            this = 0x1FFFFFFFFFFFFFFFLL;
          }
          else {
            this = v39;
          }
          if (this) {
            this = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<_KDInterval>>(this);
          }
          else {
            uint64_t v40 = 0;
          }
          std::string::size_type v41 = (char *)(this + 8 * v38);
          *(void *)std::string::size_type v41 = v36;
          BOOL v37 = v41 + 8;
          while (v32 != v30)
          {
            uint64_t v42 = *((void *)v32 - 1);
            v32 -= 8;
            *((void *)v41 - 1) = v42;
            v41 -= 8;
          }
          std::string::size_type v31 = (char *)(this + 8 * v40);
          *uint64_t v3 = v41;
          v3[1] = v37;
          v3[2] = v31;
          if (v30) {
            operator delete(v30);
          }
          int v30 = v41;
        }
        else
        {
          *(void *)int v32 = v36;
          BOOL v37 = v32 + 8;
        }
        v3[1] = v37;
        int v16 = *((_DWORD *)a2 + 15);
        int v32 = v37;
      }
    }
    else if (v16 == 31)
    {
      uint64_t v17 = 0;
      std::string::size_type v18 = 0;
      BOOL v19 = 0;
      for (uint64_t j = 0; ; ++j)
      {
        if (v16 == 31)
        {
          uint64_t v21 = (uint64_t *)*((void *)a2 + 5);
        }
        else
        {
          this = (unint64_t)CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults((CoreML::Specification::protobuf_FeatureTypes_2eproto *)this);
          uint64_t v21 = &CoreML::Specification::_ArrayFeatureType_ShapeRange_default_instance_;
        }
        if (j >= *((int *)v21 + 6)) {
          break;
        }
        if (*((_DWORD *)a2 + 15) == 31)
        {
          int v22 = (uint64_t *)*((void *)a2 + 5);
        }
        else
        {
          this = (unint64_t)CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults((CoreML::Specification::protobuf_FeatureTypes_2eproto *)this);
          int v22 = &CoreML::Specification::_ArrayFeatureType_ShapeRange_default_instance_;
        }
        uint64_t v23 = *(void *)(*(void *)(v22[4] + 8 * j + 8) + 16);
        if (v19 >= v18)
        {
          uint64_t v25 = (v19 - v17) >> 3;
          unint64_t v26 = v25 + 1;
          if ((unint64_t)(v25 + 1) >> 61) {
            std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__throw_length_error[abi:ne180100]();
          }
          if ((v18 - v17) >> 2 > v26) {
            unint64_t v26 = (v18 - v17) >> 2;
          }
          if ((unint64_t)(v18 - v17) >= 0x7FFFFFFFFFFFFFF8) {
            this = 0x1FFFFFFFFFFFFFFFLL;
          }
          else {
            this = v26;
          }
          if (this) {
            this = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<_KDInterval>>(this);
          }
          else {
            uint64_t v27 = 0;
          }
          int v28 = (char *)(this + 8 * v25);
          *(void *)int v28 = v23;
          int v24 = v28 + 8;
          while (v19 != v17)
          {
            uint64_t v29 = *((void *)v19 - 1);
            v19 -= 8;
            *((void *)v28 - 1) = v29;
            v28 -= 8;
          }
          std::string::size_type v18 = (char *)(this + 8 * v27);
          *uint64_t v3 = v28;
          v3[1] = v24;
          v3[2] = v18;
          if (v17) {
            operator delete(v17);
          }
          uint64_t v17 = v28;
        }
        else
        {
          *(void *)BOOL v19 = v23;
          int v24 = v19 + 8;
        }
        v3[1] = v24;
        int v16 = *((_DWORD *)a2 + 15);
        BOOL v19 = v24;
      }
    }
  }
  else
  {
    uint64_t v4 = 0;
    unint64_t v5 = 0;
    unint64_t v6 = 0;
    uint64_t v7 = 0;
    do
    {
      uint64_t v8 = *(void *)(*((void *)a2 + 3) + 8 * v7 + 8);
      if ((unint64_t)v6 >= v5)
      {
        uint64_t v10 = (v6 - v4) >> 3;
        unint64_t v11 = v10 + 1;
        if ((unint64_t)(v10 + 1) >> 61) {
          std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__throw_length_error[abi:ne180100]();
        }
        if ((uint64_t)(v5 - (void)v4) >> 2 > v11) {
          unint64_t v11 = (uint64_t)(v5 - (void)v4) >> 2;
        }
        if (v5 - (unint64_t)v4 >= 0x7FFFFFFFFFFFFFF8) {
          unint64_t v12 = 0x1FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v12 = v11;
        }
        if (v12) {
          unint64_t v12 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<_KDInterval>>(v12);
        }
        else {
          uint64_t v13 = 0;
        }
        int v14 = (char *)(v12 + 8 * v10);
        *(void *)int v14 = v8;
        unint64_t v9 = v14 + 8;
        while (v6 != v4)
        {
          uint64_t v15 = *((void *)v6 - 1);
          v6 -= 8;
          *((void *)v14 - 1) = v15;
          v14 -= 8;
        }
        unint64_t v5 = v12 + 8 * v13;
        *uint64_t v3 = v14;
        v3[1] = v9;
        v3[2] = v5;
        if (v4) {
          operator delete(v4);
        }
        uint64_t v4 = v14;
      }
      else
      {
        *(void *)unint64_t v6 = v8;
        unint64_t v9 = v6 + 8;
      }
      v3[1] = v9;
      ++v7;
      unint64_t v6 = v9;
    }
    while (v7 < *((int *)a2 + 4));
  }
}

void sub_19EB73AC8(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t CoreML::dimensionsToString(uint64_t a1, void *a2)
{
  std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream[abi:ne180100]((uint64_t)v11);
  std::string::basic_string[abi:ne180100]<0>(__p, " × ");
  if (a2[1] != *a2)
  {
    unint64_t v3 = 0;
    do
    {
      std::ostream::operator<<();
      unint64_t v4 = (uint64_t)(a2[1] - *a2) >> 3;
      if (v3 < v4 - 1)
      {
        if ((v10 & 0x80u) == 0) {
          unint64_t v5 = __p;
        }
        else {
          unint64_t v5 = (void **)__p[0];
        }
        if ((v10 & 0x80u) == 0) {
          uint64_t v6 = v10;
        }
        else {
          uint64_t v6 = (uint64_t)__p[1];
        }
        std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v12, (uint64_t)v5, v6);
        unint64_t v4 = (uint64_t)(a2[1] - *a2) >> 3;
      }
      ++v3;
    }
    while (v3 < v4);
  }
  std::stringbuf::str();
  if ((char)v10 < 0) {
    operator delete(__p[0]);
  }
  v11[0] = *MEMORY[0x1E4FBA408];
  uint64_t v7 = *(void *)(MEMORY[0x1E4FBA408] + 72);
  *(void *)((char *)v11 + *(void *)(v11[0] - 24)) = *(void *)(MEMORY[0x1E4FBA408] + 64);
  v12[0] = v7;
  v12[1] = MEMORY[0x1E4FBA470] + 16;
  if (v13 < 0) {
    operator delete((void *)v12[9]);
  }
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  return MEMORY[0x19F3C1850](&v14);
}

void sub_19EB73CFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::~basic_stringstream((uint64_t)&a15);
  _Unwind_Resume(a1);
}

void CoreML::FeatureType::allocateCopy(CoreML::FeatureType *this)
{
}

void sub_19EB73D74(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C40B6FDD44FLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::DictVectorizer::GetCachedSize(CoreML::Specification::DictVectorizer *this)
{
  return *((unsigned int *)this + 6);
}

uint64_t CoreML::Specification::DictVectorizer::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 28);
  if (v6 == 1)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 16), a2, a4);
    int v6 = *(_DWORD *)(v5 + 28);
  }
  if (v6 == 2)
  {
    uint64_t v7 = *(void *)(v5 + 16);
    return google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  }
  return this;
}

uint64_t CoreML::Specification::DictVectorizer::ByteSizeLong(CoreML::Specification::DictVectorizer *this)
{
  int v2 = *((_DWORD *)this + 7);
  if (v2 == 2)
  {
    uint64_t v3 = CoreML::Specification::Int64Vector::ByteSizeLong(*((CoreML::Specification::Int64Vector **)this + 2));
  }
  else
  {
    if (v2 != 1)
    {
      uint64_t result = 0;
      goto LABEL_7;
    }
    uint64_t v3 = CoreML::Specification::StringVector::ByteSizeLong(*((CoreML::Specification::StringVector **)this + 2));
  }
  uint64_t result = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_7:
  *((_DWORD *)this + 6) = result;
  return result;
}

uint64_t CoreML::Specification::DictVectorizer::MergePartialFromCodedStream(CoreML::Specification::DictVectorizer *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_18;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *(void *)a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        goto LABEL_18;
      }
LABEL_7:
      if (v7 >> 3 != 2) {
        break;
      }
      if (v7 != 18) {
        goto LABEL_18;
      }
      if (*((_DWORD *)this + 7) != 2)
      {
        CoreML::Specification::MILSpec::Dimension::clear_dimension((uint64_t)this);
        *((_DWORD *)this + 7) = 2;
        operator new();
      }
      unint64_t v11 = (CoreML::Specification::Int64Vector *)*((void *)this + 2);
      uint64_t v15 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v15 < 0)
      {
        int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (VarintSizeAsIntFallback < 0) {
          return 0;
        }
      }
      else
      {
        int VarintSizeAsIntFallback = *v15;
        *(void *)a2 = v15 + 1;
      }
      int v23 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      int v25 = *((_DWORD *)a2 + 13);
      BOOL v20 = __OFSUB__(v25--, 1);
      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v25;
      if (v25 < 0 != v20) {
        return 0;
      }
      int v21 = v23;
      uint64_t result = CoreML::Specification::Int64Vector::MergePartialFromCodedStream(v11, a2, v24);
      if (!result) {
        return result;
      }
LABEL_39:
      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v21)) {
        return 0;
      }
    }
    if (v7 >> 3 == 1 && v7 == 10)
    {
      if (*((_DWORD *)this + 7) != 1)
      {
        CoreML::Specification::MILSpec::Dimension::clear_dimension((uint64_t)this);
        *((_DWORD *)this + 7) = 1;
        operator new();
      }
      unsigned __int8 v10 = (CoreML::Specification::StringVector *)*((void *)this + 2);
      char v13 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v13 < 0)
      {
        int v14 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v14 < 0) {
          return 0;
        }
      }
      else
      {
        int v14 = *v13;
        *(void *)a2 = v13 + 1;
      }
      int v17 = google::protobuf::io::CodedInputStream::PushLimit(a2, v14);
      int v19 = *((_DWORD *)a2 + 13);
      BOOL v20 = __OFSUB__(v19--, 1);
      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v19;
      if (v19 < 0 != v20) {
        return 0;
      }
      int v21 = v17;
      uint64_t result = CoreML::Specification::StringVector::MergePartialFromCodedStream(v10, (char **)a2, v18);
      if (!result) {
        return result;
      }
      goto LABEL_39;
    }
LABEL_18:
    if (!v7 || (v7 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_19EB740C8(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::DictVectorizer::MergeFrom(std::string *this, const CoreML::Specification::DictVectorizer *a2)
{
  uint64_t v3 = (uint64_t)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 7);
  if (v5 == 2)
  {
    if (*(_DWORD *)(v3 + 28) != 2)
    {
      CoreML::Specification::MILSpec::Dimension::clear_dimension(v3);
      *(_DWORD *)(v3 + 28) = 2;
      operator new();
    }
    unint64_t v7 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts *)*((void *)a2 + 2);
    unint64_t v9 = *(unint64_t **)(v3 + 16);
    return (std::string *)CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts::MergeFrom(v9, v7);
  }
  else if (v5 == 1)
  {
    if (*(_DWORD *)(v3 + 28) != 1)
    {
      CoreML::Specification::MILSpec::Dimension::clear_dimension(v3);
      *(_DWORD *)(v3 + 28) = 1;
      operator new();
    }
    uint64_t v6 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedStrings *)*((void *)a2 + 2);
    uint64_t v8 = *(std::string **)(v3 + 16);
    return CoreML::Specification::MILSpec::TensorValue_RepeatedStrings::MergeFrom(v8, v6);
  }
  return this;
}

void sub_19EB74270(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::DictVectorizer::IsInitialized(CoreML::Specification::DictVectorizer *this)
{
  return 1;
}

void CoreML::Specification::DictVectorizer::New(CoreML::Specification::DictVectorizer *this, google::protobuf::Arena *a2)
{
}

void sub_19EB74308(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C406A65A86DLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::DictVectorizer *CoreML::Specification::DictVectorizer::DictVectorizer(CoreML::Specification::DictVectorizer *this)
{
  *(void *)this = &unk_1EF0D01E8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::DictVectorizer *)&CoreML::Specification::_DictVectorizer_default_instance_) {
    CoreML::Specification::protobuf_DictVectorizer_2eproto::InitDefaults(this);
  }
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  return this;
}

void sub_19EB7438C(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::DictVectorizer>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::DictVectorizer>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::DictVectorizer>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::DictVectorizer::New(CoreML::Specification::DictVectorizer *this)
{
}

void *CoreML::Specification::DictVectorizer::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.DictVectorizer");
}

void CoreML::Specification::DictVectorizer::~DictVectorizer(CoreML::Specification::DictVectorizer *this)
{
  CoreML::Specification::DictVectorizer::~DictVectorizer(this);

  JUMPOUT(0x19F3C1920);
}

{
  *(void *)this = &unk_1EF0D01E8;
  if (*((_DWORD *)this + 7)) {
    CoreML::Specification::MILSpec::Dimension::clear_dimension((uint64_t)this);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::NeuralNetwork::GetCachedSize(CoreML::Specification::NeuralNetwork *this)
{
  return *((unsigned int *)this + 20);
}

uint64_t CoreML::Specification::NeuralNetwork::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
      this = google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)1, *(void *)(*(void *)(v5 + 32) + 8 * i + 8), a2, a4);
  }
  int v8 = *(_DWORD *)(v5 + 48);
  if (v8)
  {
    for (int j = 0; j != v8; ++j)
      this = google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)2, *(void *)(*(void *)(v5 + 56) + 8 * j + 8), a2, a4);
  }
  signed int v10 = *(_DWORD *)(v5 + 72);
  if (v10) {
    this = google::protobuf::internal::WireFormatLite::WriteEnum(5, v10, a2, a4);
  }
  signed int v11 = *(_DWORD *)(v5 + 76);
  if (v11) {
    this = google::protobuf::internal::WireFormatLite::WriteEnum(6, v11, a2, a4);
  }
  if ((uint64_t *)v5 != &CoreML::Specification::_NeuralNetwork_default_instance_)
  {
    uint64_t v12 = *(void *)(v5 + 64);
    if (v12)
    {
      return google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)0xA, v12, a2, a4);
    }
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetwork::ByteSizeLong(CoreML::Specification::NeuralNetwork *this)
{
  int v2 = *((_DWORD *)this + 6);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = *((unsigned int *)this + 6);
    do
    {
      uint64_t v5 = CoreML::Specification::NeuralNetworkLayer::ByteSizeLong(*(CoreML::Specification::NeuralNetworkLayer **)(*((void *)this + 4) + 8 * v3 + 8));
      v4 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t v6 = *((unsigned int *)this + 12);
  uint64_t v7 = v4 + v6;
  if (v6)
  {
    int v8 = 0;
    do
    {
      uint64_t v9 = CoreML::Specification::NeuralNetworkPreprocessing::ByteSizeLong(*(CoreML::Specification::NeuralNetworkPreprocessing **)(*((void *)this + 7) + 8 * v8 + 8));
      v7 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      ++v8;
    }
    while (v6 != v8);
  }
  if (this != (CoreML::Specification::NeuralNetwork *)&CoreML::Specification::_NeuralNetwork_default_instance_)
  {
    signed int v10 = (CoreML::Specification::NetworkUpdateParameters *)*((void *)this + 8);
    if (v10)
    {
      uint64_t v11 = CoreML::Specification::NetworkUpdateParameters::ByteSizeLong(v10);
      v7 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v12 = 11;
  int v13 = *((_DWORD *)this + 18);
  int v14 = *((_DWORD *)this + 19);
  uint64_t v15 = ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v13 >= 0) {
    uint64_t v12 = v15;
  }
  uint64_t v16 = v12 + v7;
  if (!v13) {
    uint64_t v16 = v7;
  }
  uint64_t v17 = 11;
  uint64_t v18 = ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v14 >= 0) {
    uint64_t v17 = v18;
  }
  uint64_t v19 = v17 + v16;
  if (v14) {
    uint64_t result = v19;
  }
  else {
    uint64_t result = v16;
  }
  *((_DWORD *)this + 2CoreML::Specification::DictVectorizer::New(this, 0) = result;
  return result;
}

uint64_t CoreML::Specification::NeuralNetworkLayer::ByteSizeLong(CoreML::Specification::NeuralNetworkLayer *this)
{
  uint64_t v2 = *((unsigned int *)this + 6);
  if ((int)v2 < 1)
  {
    uint64_t v4 = *((unsigned int *)this + 6);
  }
  else
  {
    int v3 = (uint64_t *)(*((void *)this + 4) + 8);
    uint64_t v4 = *((unsigned int *)this + 6);
    do
    {
      uint64_t v5 = *v3++;
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v7 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        uint64_t v7 = v6;
      }
      v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      --v2;
    }
    while (v2);
  }
  uint64_t v8 = *((unsigned int *)this + 12);
  uint64_t v9 = v4 + v8;
  if ((int)v8 >= 1)
  {
    signed int v10 = (uint64_t *)(*((void *)this + 7) + 8);
    do
    {
      uint64_t v11 = *v10++;
      uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
      uint64_t v13 = *(void *)(v11 + 8);
      if ((v12 & 0x80u) == 0) {
        uint64_t v13 = v12;
      }
      v9 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6);
      --v8;
    }
    while (v8);
  }
  uint64_t v14 = *((unsigned int *)this + 18);
  uint64_t v15 = v9 + v14;
  if (v14)
  {
    int v16 = 0;
    do
    {
      uint64_t v17 = CoreML::Specification::Tensor::ByteSizeLong(*(CoreML::Specification::Tensor **)(*((void *)this + 10)
                                                                                          + 8 * v16
                                                                                          + 8));
      v15 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6);
      ++v16;
    }
    while (v14 != v16);
  }
  uint64_t v18 = *((unsigned int *)this + 24);
  uint64_t v19 = v15 + v18;
  if (v18)
  {
    int v20 = 0;
    do
    {
      uint64_t v21 = CoreML::Specification::Tensor::ByteSizeLong(*(CoreML::Specification::Tensor **)(*((void *)this + 13)
                                                                                          + 8 * v20
                                                                                          + 8));
      v19 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6);
      ++v20;
    }
    while (v18 != v20);
  }
  uint64_t v22 = *((void *)this + 14);
  uint64_t v23 = *(unsigned __int8 *)(v22 + 23);
  if (*(char *)(v22 + 23) < 0)
  {
    if (!*(void *)(v22 + 8)) {
      goto LABEL_24;
    }
  }
  else if (!*(unsigned char *)(v22 + 23))
  {
    goto LABEL_24;
  }
  uint64_t v24 = *(void *)(v22 + 8);
  if ((v23 & 0x80u) == 0) {
    uint64_t v24 = v23;
  }
  v19 += v24 + ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_24:
  if (*((unsigned char *)this + 120)) {
    v19 += 2;
  }
  int v25 = *((_DWORD *)this + 35);
  if (v25 <= 879)
  {
    if (v25 > 604)
    {
      if (v25 <= 759)
      {
        if (v25 > 684)
        {
          if (v25 > 729)
          {
            if (v25 <= 739)
            {
              if (v25 != 730 && v25 != 735) {
                goto LABEL_370;
              }
            }
            else if (v25 != 740 && v25 != 750 && v25 != 755)
            {
              goto LABEL_370;
            }
          }
          else if (v25 <= 709)
          {
            if (v25 != 685 && v25 != 700) {
              goto LABEL_370;
            }
          }
          else if (v25 != 710 && v25 != 715 && v25 != 720)
          {
            goto LABEL_370;
          }
          goto LABEL_331;
        }
        if (v25 <= 639)
        {
          if (v25 <= 619)
          {
            if (v25 == 605)
            {
              uint64_t v26 = CoreML::Specification::BranchLayerParams::ByteSizeLong(*((CoreML::Specification::BranchLayerParams **)this
                                                                           + 16));
              goto LABEL_368;
            }
            if (v25 == 615)
            {
              uint64_t v26 = CoreML::Specification::LoopLayerParams::ByteSizeLong(*((CoreML::Specification::LoopLayerParams **)this
                                                                         + 16));
              goto LABEL_368;
            }
            goto LABEL_370;
          }
          if (v25 == 620 || v25 == 625) {
            goto LABEL_331;
          }
          if (v25 != 635) {
            goto LABEL_370;
          }
          uint64_t v27 = *((void *)this + 16);
          uint64_t v28 = 5;
          if (*(float *)(v27 + 16) == 0.0) {
            uint64_t v28 = 0;
          }
          if (*(float *)(v27 + 20) != 0.0) {
            v28 += 5;
          }
          if (*(float *)(v27 + 24) != 0.0) {
            v28 += 5;
          }
          *(_DWORD *)(v27 + 28) = v28;
          goto LABEL_281;
        }
        if (v25 > 664)
        {
          if (v25 != 665 && v25 != 670 && v25 != 680) {
            goto LABEL_370;
          }
          goto LABEL_331;
        }
        if (v25 != 640 && v25 != 660) {
          goto LABEL_370;
        }
LABEL_275:
        uint64_t v35 = *((void *)this + 16);
        uint64_t v28 = 5;
        if (*(float *)(v35 + 16) == 0.0) {
          uint64_t v28 = 0;
        }
        uint64_t v38 = v28 + 5;
        BOOL v39 = *(float *)(v35 + 20) == 0.0;
LABEL_278:
        if (!v39) {
          uint64_t v28 = v38;
        }
        goto LABEL_280;
      }
      if (v25 > 824)
      {
        if (v25 <= 849)
        {
          switch(v25)
          {
            case 825:
            case 827:
            case 830:
            case 832:
              goto LABEL_86;
            case 826:
            case 828:
            case 829:
            case 831:
              goto LABEL_370;
            default:
              if (v25 == 840 || v25 == 845) {
                goto LABEL_331;
              }
              break;
          }
          goto LABEL_370;
        }
        if (v25 <= 864)
        {
          if (v25 != 850 && v25 != 855) {
            goto LABEL_370;
          }
        }
        else if (v25 != 865 && v25 != 870 && v25 != 875)
        {
          goto LABEL_370;
        }
        goto LABEL_331;
      }
      if (v25 <= 789)
      {
        if (v25 > 774)
        {
          if (v25 != 775 && v25 != 780) {
            goto LABEL_370;
          }
        }
        else if (v25 != 760 && v25 != 770)
        {
          goto LABEL_370;
        }
        goto LABEL_331;
      }
      if (v25 > 814)
      {
        if (v25 != 815 && v25 != 820) {
          goto LABEL_370;
        }
        goto LABEL_86;
      }
      if (v25 == 790) {
        goto LABEL_331;
      }
      if (v25 != 795) {
        goto LABEL_370;
      }
      goto LABEL_211;
    }
    if (v25 <= 249)
    {
      if (v25 <= 189)
      {
        if (v25 <= 159)
        {
          if (v25 <= 129)
          {
            if (v25 == 100)
            {
              uint64_t v26 = CoreML::Specification::ConvolutionLayerParams::ByteSizeLong(*((CoreML::Specification::ConvolutionLayerParams **)this
                                                                                + 16));
              goto LABEL_368;
            }
            if (v25 == 120)
            {
              uint64_t v26 = CoreML::Specification::PoolingLayerParams::ByteSizeLong(*((CoreML::Specification::PoolingLayerParams **)this
                                                                            + 16));
              goto LABEL_368;
            }
          }
          else
          {
            switch(v25)
            {
              case 130:
                uint64_t v26 = CoreML::Specification::ActivationParams::ByteSizeLong(*((CoreML::Specification::ActivationParams **)this
                                                                            + 16));
                goto LABEL_368;
              case 140:
                uint64_t v26 = CoreML::Specification::InnerProductLayerParams::ByteSizeLong(*((CoreML::Specification::InnerProductLayerParams **)this
                                                                                   + 16));
                goto LABEL_368;
              case 150:
                uint64_t v26 = CoreML::Specification::EmbeddingLayerParams::ByteSizeLong(*((CoreML::Specification::EmbeddingLayerParams **)this
                                                                                + 16));
LABEL_368:
                uint64_t v42 = v19 + v26 + ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6);
                goto LABEL_369;
            }
          }
          goto LABEL_370;
        }
        if (v25 > 169)
        {
          if (v25 != 170)
          {
            if (v25 != 175)
            {
              if (v25 == 180)
              {
                uint64_t v26 = CoreML::Specification::LRNLayerParams::ByteSizeLong(*((CoreML::Specification::LRNLayerParams **)this
                                                                          + 16));
                goto LABEL_368;
              }
              goto LABEL_370;
            }
            goto LABEL_331;
          }
          goto LABEL_86;
        }
        if (v25 == 160)
        {
          uint64_t v26 = CoreML::Specification::BatchnormLayerParams::ByteSizeLong(*((CoreML::Specification::BatchnormLayerParams **)this
                                                                          + 16));
          goto LABEL_368;
        }
        if (v25 != 165) {
          goto LABEL_370;
        }
        uint64_t v35 = *((void *)this + 16);
        uint64_t v28 = 2 * *(unsigned __int8 *)(v35 + 16);
        if (*(unsigned char *)(v35 + 17)) {
          v28 += 2;
        }
        uint64_t v38 = v28 + 5;
        BOOL v39 = *(float *)(v35 + 20) == 0.0;
        goto LABEL_278;
      }
      if (v25 <= 219)
      {
        if (v25 <= 209)
        {
          if (v25 == 190)
          {
            uint64_t v26 = CoreML::Specification::CropLayerParams::ByteSizeLong(*((CoreML::Specification::CropLayerParams **)this
                                                                       + 16));
            goto LABEL_368;
          }
          if (v25 == 200)
          {
            uint64_t v26 = (uint64_t)CoreML::Specification::PaddingLayerParams::ByteSizeLong(*((CoreML::Specification::PaddingLayerParams **)this
                                                                                   + 16));
            goto LABEL_368;
          }
        }
        else
        {
          switch(v25)
          {
            case 210:
              uint64_t v26 = CoreML::Specification::UpsampleLayerParams::ByteSizeLong(*((CoreML::Specification::UpsampleLayerParams **)this
                                                                             + 16));
              goto LABEL_368;
            case 211:
              uint64_t v26 = CoreML::Specification::ResizeBilinearLayerParams::ByteSizeLong(*((CoreML::Specification::ResizeBilinearLayerParams **)this
                                                                                   + 16));
              goto LABEL_368;
            case 212:
              uint64_t v26 = CoreML::Specification::CropResizeLayerParams::ByteSizeLong(*((CoreML::Specification::CropResizeLayerParams **)this
                                                                               + 16));
              goto LABEL_368;
          }
        }
        goto LABEL_370;
      }
      if (v25 <= 230)
      {
        if (v25 == 220)
        {
          uint64_t v26 = CoreML::Specification::UnaryFunctionLayerParams::ByteSizeLong(*((CoreML::Specification::UnaryFunctionLayerParams **)this
                                                                              + 16));
          goto LABEL_368;
        }
        if (v25 != 230) {
          goto LABEL_370;
        }
      }
      else if (v25 != 231)
      {
        if (v25 != 240)
        {
          if (v25 == 245)
          {
            uint64_t v26 = CoreML::Specification::ScaleLayerParams::ByteSizeLong(*((CoreML::Specification::ScaleLayerParams **)this
                                                                        + 16));
            goto LABEL_368;
          }
          goto LABEL_370;
        }
        goto LABEL_331;
      }
      goto LABEL_86;
    }
    if (v25 <= 329)
    {
      if (v25 <= 289)
      {
        if (v25 <= 260)
        {
          if (v25 == 250)
          {
            uint64_t v26 = CoreML::Specification::BiasLayerParams::ByteSizeLong(*((CoreML::Specification::BiasLayerParams **)this
                                                                       + 16));
            goto LABEL_368;
          }
          if (v25 != 260) {
            goto LABEL_370;
          }
          goto LABEL_331;
        }
        if (v25 != 261)
        {
          if (v25 != 270)
          {
            if (v25 == 280)
            {
              uint64_t v26 = CoreML::Specification::ReduceLayerParams::ByteSizeLong(*((CoreML::Specification::ReduceLayerParams **)this
                                                                           + 16));
              goto LABEL_368;
            }
            goto LABEL_370;
          }
          uint64_t v40 = *((void *)this + 16);
          uint64_t v41 = *(unsigned __int8 *)(v40 + 16);
          *(_DWORD *)(v40 + 2CoreML::Specification::DictVectorizer::New(this, 0) = 2 * v41;
          uint64_t v31 = v19 + 2 * v41;
LABEL_282:
          uint64_t v19 = v31 + 3;
          goto LABEL_370;
        }
        goto LABEL_331;
      }
      if (v25 <= 300)
      {
        if (v25 == 290)
        {
          uint64_t v26 = CoreML::Specification::LoadConstantLayerParams::ByteSizeLong(*((CoreML::Specification::LoadConstantLayerParams **)this
                                                                             + 16));
          goto LABEL_368;
        }
        if (v25 == 300)
        {
          uint64_t v26 = CoreML::Specification::ReshapeLayerParams::ByteSizeLong(*((CoreML::Specification::ReshapeLayerParams **)this
                                                                        + 16));
          goto LABEL_368;
        }
        goto LABEL_370;
      }
      if (v25 != 301)
      {
        if (v25 == 310)
        {
          uint64_t v26 = CoreML::Specification::PermuteLayerParams::ByteSizeLong(*((CoreML::Specification::PermuteLayerParams **)this
                                                                        + 16));
          goto LABEL_368;
        }
        if (v25 != 320) {
          goto LABEL_370;
        }
        uint64_t v30 = *((void *)this + 16);
        uint64_t v28 = 3;
        if (!*(unsigned char *)(v30 + 16)) {
          uint64_t v28 = 0;
        }
        goto LABEL_216;
      }
LABEL_211:
      uint64_t v30 = *((void *)this + 16);
      int v32 = *(_DWORD *)(v30 + 16);
      uint64_t v33 = 11;
      uint64_t v34 = ((9 * (__clz(v32 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v32 >= 0) {
        uint64_t v33 = v34;
      }
      if (v32) {
        uint64_t v28 = v33;
      }
      else {
        uint64_t v28 = 0;
      }
      goto LABEL_216;
    }
    if (v25 > 409)
    {
      if (v25 <= 429)
      {
        if (v25 == 410)
        {
          uint64_t v26 = CoreML::Specification::GRULayerParams::ByteSizeLong(*((CoreML::Specification::GRULayerParams **)this + 16));
          goto LABEL_368;
        }
        if (v25 == 420)
        {
          uint64_t v26 = CoreML::Specification::UniDirectionalLSTMLayerParams::ByteSizeLong(*((CoreML::Specification::UniDirectionalLSTMLayerParams **)this
                                                                                   + 16));
          goto LABEL_368;
        }
        goto LABEL_370;
      }
      if (v25 == 430)
      {
        uint64_t v26 = CoreML::Specification::BiDirectionalLSTMLayerParams::ByteSizeLong(*((CoreML::Specification::BiDirectionalLSTMLayerParams **)this
                                                                                + 16));
        goto LABEL_368;
      }
      if (v25 == 500)
      {
        uint64_t v26 = CoreML::Specification::CustomLayerParams::ByteSizeLong(*((CoreML::Specification::CustomLayerParams **)this
                                                                     + 16));
        goto LABEL_368;
      }
      if (v25 != 600) {
        goto LABEL_370;
      }
      goto LABEL_331;
    }
    if (v25 > 344)
    {
      switch(v25)
      {
        case 345:
          uint64_t v26 = CoreML::Specification::ReorganizeDataLayerParams::ByteSizeLong(*((CoreML::Specification::ReorganizeDataLayerParams **)this
                                                                               + 16));
          goto LABEL_368;
        case 350:
          uint64_t v26 = CoreML::Specification::SliceLayerParams::ByteSizeLong(*((CoreML::Specification::SliceLayerParams **)this
                                                                      + 16));
          goto LABEL_368;
        case 400:
          uint64_t v26 = CoreML::Specification::SimpleRecurrentLayerParams::ByteSizeLong(*((CoreML::Specification::SimpleRecurrentLayerParams **)this
                                                                                + 16));
          goto LABEL_368;
      }
      goto LABEL_370;
    }
    if (v25 != 330 && v25 != 340) {
      goto LABEL_370;
    }
LABEL_253:
    uint64_t v35 = *((void *)this + 16);
    uint64_t v36 = *(void *)(v35 + 16);
    unint64_t v37 = (9 * (__clz(v36 | 1) ^ 0x3F) + 73) >> 6;
    if (v36) {
      uint64_t v28 = v37 + 1;
    }
    else {
      uint64_t v28 = 0;
    }
LABEL_280:
    *(_DWORD *)(v35 + 24) = v28;
    goto LABEL_281;
  }
  if (v25 <= 1139)
  {
    if (v25 > 994)
    {
      if (v25 > 1079)
      {
        if (v25 <= 1109)
        {
          if (v25 <= 1089)
          {
            if (v25 != 1080)
            {
              if (v25 == 1085)
              {
                uint64_t v26 = CoreML::Specification::FillStaticLayerParams::ByteSizeLong(*((CoreML::Specification::FillStaticLayerParams **)this
                                                                                 + 16));
                goto LABEL_368;
              }
              goto LABEL_370;
            }
            goto LABEL_86;
          }
          if (v25 == 1090)
          {
LABEL_86:
            uint64_t v30 = *((void *)this + 16);
            uint64_t v28 = 5;
            if (*(float *)(v30 + 16) == 0.0) {
              uint64_t v28 = 0;
            }
LABEL_216:
            *(_DWORD *)(v30 + 2CoreML::Specification::DictVectorizer::New(this, 0) = v28;
LABEL_281:
            uint64_t v31 = v19 + v28;
            goto LABEL_282;
          }
          if (v25 != 1100)
          {
            if (v25 == 1105)
            {
              uint64_t v26 = CoreML::Specification::BroadcastToStaticLayerParams::ByteSizeLong(*((CoreML::Specification::BroadcastToStaticLayerParams **)this
                                                                                      + 16));
              goto LABEL_368;
            }
            goto LABEL_370;
          }
LABEL_331:
          *(_DWORD *)(*((void *)this + 16) + 16) = 0;
          v19 += 3;
          goto LABEL_370;
        }
        if (v25 <= 1124)
        {
          if (v25 != 1110)
          {
            if (v25 == 1120)
            {
              uint64_t v26 = CoreML::Specification::SqueezeLayerParams::ByteSizeLong(*((CoreML::Specification::SqueezeLayerParams **)this
                                                                            + 16));
              goto LABEL_368;
            }
            goto LABEL_370;
          }
          goto LABEL_331;
        }
        if (v25 == 1125)
        {
          uint64_t v26 = CoreML::Specification::ExpandDimsLayerParams::ByteSizeLong(*((CoreML::Specification::ExpandDimsLayerParams **)this
                                                                           + 16));
          goto LABEL_368;
        }
        if (v25 != 1130)
        {
          if (v25 != 1135) {
            goto LABEL_370;
          }
          goto LABEL_331;
        }
        goto LABEL_253;
      }
      if (v25 > 1024)
      {
        if (v25 > 1044)
        {
          if (v25 == 1045)
          {
            uint64_t v26 = CoreML::Specification::BatchedMatMulLayerParams::ByteSizeLong(*((CoreML::Specification::BatchedMatMulLayerParams **)this
                                                                                + 16));
            goto LABEL_368;
          }
          if (v25 != 1065)
          {
            if (v25 == 1070)
            {
              uint64_t v26 = CoreML::Specification::LoadConstantNDLayerParams::ByteSizeLong(*((CoreML::Specification::LoadConstantNDLayerParams **)this
                                                                                   + 16));
              goto LABEL_368;
            }
            goto LABEL_370;
          }
          goto LABEL_331;
        }
        if (v25 != 1025)
        {
          if (v25 == 1040)
          {
            uint64_t v26 = CoreML::Specification::EmbeddingNDLayerParams::ByteSizeLong(*((CoreML::Specification::EmbeddingNDLayerParams **)this
                                                                              + 16));
            goto LABEL_368;
          }
          goto LABEL_370;
        }
      }
      else
      {
        if (v25 <= 1004)
        {
          if (v25 == 995)
          {
            uint64_t v26 = CoreML::Specification::SliceStaticLayerParams::ByteSizeLong(*((CoreML::Specification::SliceStaticLayerParams **)this
                                                                              + 16));
            goto LABEL_368;
          }
          if (v25 == 1000)
          {
            uint64_t v26 = CoreML::Specification::SliceDynamicLayerParams::ByteSizeLong(*((CoreML::Specification::SliceDynamicLayerParams **)this
                                                                               + 16));
            goto LABEL_368;
          }
          goto LABEL_370;
        }
        if (v25 == 1005)
        {
          uint64_t v26 = CoreML::Specification::SlidingWindowsLayerParams::ByteSizeLong(*((CoreML::Specification::SlidingWindowsLayerParams **)this
                                                                               + 16));
          goto LABEL_368;
        }
        if (v25 == 1015)
        {
          uint64_t v26 = CoreML::Specification::TopKLayerParams::ByteSizeLong(*((CoreML::Specification::TopKLayerParams **)this
                                                                     + 16));
          goto LABEL_368;
        }
        if (v25 != 1020) {
          goto LABEL_370;
        }
      }
      goto LABEL_82;
    }
    if (v25 <= 939)
    {
      if (v25 <= 904)
      {
        if (v25 <= 889)
        {
          if (v25 != 880 && v25 != 885) {
            goto LABEL_370;
          }
        }
        else if (v25 != 890 && v25 != 895 && v25 != 900)
        {
          goto LABEL_370;
        }
        goto LABEL_331;
      }
      if (v25 <= 924)
      {
        if (v25 != 905)
        {
          if (v25 == 920)
          {
            uint64_t v26 = CoreML::Specification::TileLayerParams::ByteSizeLong(*((CoreML::Specification::TileLayerParams **)this
                                                                       + 16));
            goto LABEL_368;
          }
          goto LABEL_370;
        }
        goto LABEL_331;
      }
      if (v25 != 925 && v25 != 930)
      {
        if (v25 == 935)
        {
          uint64_t v26 = CoreML::Specification::ScatterLayerParams::ByteSizeLong(*((CoreML::Specification::ScatterLayerParams **)this
                                                                        + 16));
          goto LABEL_368;
        }
        goto LABEL_370;
      }
      goto LABEL_253;
    }
    if (v25 <= 959)
    {
      switch(v25)
      {
        case 945:
          goto LABEL_211;
        case 946:
        case 947:
        case 948:
        case 949:
        case 951:
        case 953:
          goto LABEL_370;
        case 950:
        case 952:
          goto LABEL_253;
        case 954:
          uint64_t v26 = CoreML::Specification::ScatterAlongAxisLayerParams::ByteSizeLong(*((CoreML::Specification::ScatterAlongAxisLayerParams **)this
                                                                                 + 16));
          goto LABEL_368;
        default:
          if (v25 == 940) {
            goto LABEL_331;
          }
          break;
      }
      goto LABEL_370;
    }
    if (v25 > 974)
    {
      if (v25 == 975)
      {
        uint64_t v26 = CoreML::Specification::SplitNDLayerParams::ByteSizeLong(*((CoreML::Specification::SplitNDLayerParams **)this
                                                                      + 16));
        goto LABEL_368;
      }
      if (v25 != 980)
      {
        if (v25 == 985)
        {
          uint64_t v26 = CoreML::Specification::TransposeLayerParams::ByteSizeLong(*((CoreML::Specification::TransposeLayerParams **)this
                                                                          + 16));
          goto LABEL_368;
        }
        goto LABEL_370;
      }
LABEL_82:
      unint64_t v29 = google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual<CoreML::Specification::ConcatNDLayerParams>(*((void *)this + 16));
      goto LABEL_365;
    }
    if (v25 != 960)
    {
      if (v25 == 965)
      {
        uint64_t v26 = CoreML::Specification::ReverseSeqLayerParams::ByteSizeLong(*((CoreML::Specification::ReverseSeqLayerParams **)this
                                                                         + 16));
        goto LABEL_368;
      }
      goto LABEL_370;
    }
    unint64_t v29 = google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual<CoreML::Specification::ReverseLayerParams>(*((unsigned int **)this + 16));
LABEL_365:
    uint64_t v42 = v19 + v29;
LABEL_369:
    uint64_t v19 = v42 + 2;
    goto LABEL_370;
  }
  if (v25 <= 1274)
  {
    if (v25 <= 1199)
    {
      if (v25 > 1169)
      {
        if (v25 <= 1179)
        {
          if (v25 == 1170)
          {
            uint64_t v26 = CoreML::Specification::RandomNormalLikeLayerParams::ByteSizeLong(*((CoreML::Specification::RandomNormalLikeLayerParams **)this
                                                                                   + 16));
            goto LABEL_368;
          }
          if (v25 == 1175)
          {
            uint64_t v26 = CoreML::Specification::RandomNormalStaticLayerParams::ByteSizeLong(*((CoreML::Specification::RandomNormalStaticLayerParams **)this
                                                                                     + 16));
            goto LABEL_368;
          }
        }
        else
        {
          switch(v25)
          {
            case 1180:
              uint64_t v26 = CoreML::Specification::RandomNormalDynamicLayerParams::ByteSizeLong(*((CoreML::Specification::RandomNormalDynamicLayerParams **)this
                                                                                        + 16));
              goto LABEL_368;
            case 1190:
              uint64_t v26 = CoreML::Specification::RandomUniformLikeLayerParams::ByteSizeLong(*((CoreML::Specification::RandomUniformLikeLayerParams **)this
                                                                                      + 16));
              goto LABEL_368;
            case 1195:
              uint64_t v26 = CoreML::Specification::RandomUniformStaticLayerParams::ByteSizeLong(*((CoreML::Specification::RandomUniformStaticLayerParams **)this
                                                                                        + 16));
              goto LABEL_368;
          }
        }
        goto LABEL_370;
      }
      if (v25 > 1149)
      {
        if (v25 == 1150)
        {
          uint64_t v26 = CoreML::Specification::RankPreservingReshapeLayerParams::ByteSizeLong(*((CoreML::Specification::RankPreservingReshapeLayerParams **)this
                                                                                      + 16));
          goto LABEL_368;
        }
        if (v25 == 1155)
        {
          uint64_t v26 = CoreML::Specification::ConstantPaddingLayerParams::ByteSizeLong(*((CoreML::Specification::ConstantPaddingLayerParams **)this
                                                                                + 16));
          goto LABEL_368;
        }
        goto LABEL_370;
      }
      if (v25 == 1140)
      {
        uint64_t v26 = CoreML::Specification::ReshapeStaticLayerParams::ByteSizeLong(*((CoreML::Specification::ReshapeStaticLayerParams **)this
                                                                            + 16));
        goto LABEL_368;
      }
      if (v25 != 1145) {
        goto LABEL_370;
      }
      goto LABEL_331;
    }
    if (v25 > 1249)
    {
      if (v25 <= 1259)
      {
        if (v25 == 1250)
        {
          uint64_t v26 = CoreML::Specification::ReduceL1LayerParams::ByteSizeLong(*((CoreML::Specification::ReduceL1LayerParams **)this
                                                                         + 16));
          goto LABEL_368;
        }
        if (v25 == 1255)
        {
          uint64_t v26 = CoreML::Specification::ReduceL2LayerParams::ByteSizeLong(*((CoreML::Specification::ReduceL2LayerParams **)this
                                                                         + 16));
          goto LABEL_368;
        }
      }
      else
      {
        switch(v25)
        {
          case 1260:
            uint64_t v26 = CoreML::Specification::ReduceMaxLayerParams::ByteSizeLong(*((CoreML::Specification::ReduceMaxLayerParams **)this
                                                                            + 16));
            goto LABEL_368;
          case 1265:
            uint64_t v26 = CoreML::Specification::ReduceMinLayerParams::ByteSizeLong(*((CoreML::Specification::ReduceMinLayerParams **)this
                                                                            + 16));
            goto LABEL_368;
          case 1270:
            uint64_t v26 = CoreML::Specification::ReduceSumLayerParams::ByteSizeLong(*((CoreML::Specification::ReduceSumLayerParams **)this
                                                                            + 16));
            goto LABEL_368;
        }
      }
      goto LABEL_370;
    }
    if (v25 <= 1214)
    {
      if (v25 == 1200)
      {
        uint64_t v26 = CoreML::Specification::RandomUniformDynamicLayerParams::ByteSizeLong(*((CoreML::Specification::RandomUniformDynamicLayerParams **)this
                                                                                   + 16));
        goto LABEL_368;
      }
      if (v25 != 1210) {
        goto LABEL_370;
      }
    }
    else
    {
      if (v25 == 1215)
      {
        uint64_t v26 = CoreML::Specification::RandomBernoulliStaticLayerParams::ByteSizeLong(*((CoreML::Specification::RandomBernoulliStaticLayerParams **)this
                                                                                    + 16));
        goto LABEL_368;
      }
      if (v25 != 1220)
      {
        if (v25 == 1230)
        {
          uint64_t v26 = CoreML::Specification::CategoricalDistributionLayerParams::ByteSizeLong(*((CoreML::Specification::CategoricalDistributionLayerParams **)this
                                                                                        + 16));
          goto LABEL_368;
        }
        goto LABEL_370;
      }
    }
    unint64_t v29 = google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual<CoreML::Specification::RandomBernoulliLikeLayerParams>(*((void *)this + 16));
    goto LABEL_365;
  }
  if (v25 > 1349)
  {
    if (v25 <= 1454)
    {
      switch(v25)
      {
        case 1350:
          uint64_t v26 = CoreML::Specification::LayerNormalizationLayerParams::ByteSizeLong(*((CoreML::Specification::LayerNormalizationLayerParams **)this
                                                                                   + 16));
          goto LABEL_368;
        case 1400:
          uint64_t v26 = CoreML::Specification::NonMaximumSuppressionLayerParams::ByteSizeLong(*((CoreML::Specification::NonMaximumSuppressionLayerParams **)this
                                                                                      + 16));
          goto LABEL_368;
        case 1450:
          uint64_t v26 = CoreML::Specification::OneHotLayerParams::ByteSizeLong(*((CoreML::Specification::OneHotLayerParams **)this
                                                                       + 16));
          goto LABEL_368;
      }
    }
    else
    {
      switch(v25)
      {
        case 1455:
          uint64_t v31 = v19
              + CoreML::Specification::CumSumLayerParams::ByteSizeLong(*((CoreML::Specification::CumSumLayerParams **)this
                                                                       + 16));
          goto LABEL_282;
        case 1460:
          goto LABEL_275;
        case 1461:
          goto LABEL_82;
        case 1465:
          uint64_t v26 = CoreML::Specification::Pooling3DLayerParams::ByteSizeLong(*((CoreML::Specification::Pooling3DLayerParams **)this
                                                                          + 16));
          goto LABEL_368;
        case 1466:
          goto LABEL_211;
        case 1470:
          uint64_t v26 = CoreML::Specification::SliceBySizeLayerParams::ByteSizeLong(*((CoreML::Specification::SliceBySizeLayerParams **)this
                                                                            + 16));
          goto LABEL_368;
        case 1471:
          uint64_t v26 = CoreML::Specification::Convolution3DLayerParams::ByteSizeLong(*((CoreML::Specification::Convolution3DLayerParams **)this
                                                                              + 16));
          goto LABEL_368;
        default:
          goto LABEL_370;
      }
    }
    goto LABEL_370;
  }
  if (v25 > 1312)
  {
    if (v25 <= 1319)
    {
      if (v25 != 1313)
      {
        if (v25 == 1315)
        {
          uint64_t v26 = CoreML::Specification::MatrixBandPartLayerParams::ByteSizeLong(*((CoreML::Specification::MatrixBandPartLayerParams **)this
                                                                               + 16));
          goto LABEL_368;
        }
        goto LABEL_370;
      }
      goto LABEL_331;
    }
    if (v25 != 1320 && v25 != 1325)
    {
      if (v25 != 1330) {
        goto LABEL_370;
      }
      goto LABEL_331;
    }
    goto LABEL_253;
  }
  if (v25 <= 1284)
  {
    if (v25 == 1275)
    {
      uint64_t v26 = CoreML::Specification::ReduceProdLayerParams::ByteSizeLong(*((CoreML::Specification::ReduceProdLayerParams **)this
                                                                       + 16));
      goto LABEL_368;
    }
    if (v25 == 1280)
    {
      uint64_t v26 = CoreML::Specification::ReduceMeanLayerParams::ByteSizeLong(*((CoreML::Specification::ReduceMeanLayerParams **)this
                                                                       + 16));
      goto LABEL_368;
    }
  }
  else
  {
    switch(v25)
    {
      case 1285:
        uint64_t v26 = CoreML::Specification::ReduceLogSumLayerParams::ByteSizeLong(*((CoreML::Specification::ReduceLogSumLayerParams **)this
                                                                           + 16));
        goto LABEL_368;
      case 1290:
        uint64_t v26 = CoreML::Specification::ReduceSumSquareLayerParams::ByteSizeLong(*((CoreML::Specification::ReduceSumSquareLayerParams **)this
                                                                              + 16));
        goto LABEL_368;
      case 1295:
        uint64_t v26 = CoreML::Specification::ReduceLogSumExpLayerParams::ByteSizeLong(*((CoreML::Specification::ReduceLogSumExpLayerParams **)this
                                                                              + 16));
        goto LABEL_368;
    }
  }
LABEL_370:
  *((_DWORD *)this + 34) = v19;
  return v19;
}

uint64_t CoreML::Specification::NeuralNetworkPreprocessing::ByteSizeLong(CoreML::Specification::NeuralNetworkPreprocessing *this)
{
  uint64_t v1 = *((void *)this + 2);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 23);
  if (*(char *)(v1 + 23) < 0)
  {
    if (*(void *)(v1 + 8)) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v4 = 0;
    goto LABEL_8;
  }
  if (!*(unsigned char *)(v1 + 23)) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v3 = *(void *)(v1 + 8);
  if ((v2 & 0x80u) == 0) {
    uint64_t v3 = v2;
  }
  uint64_t v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  int v5 = *((_DWORD *)this + 9);
  if (v5 == 11)
  {
    signed int v10 = (unsigned int *)*((void *)this + 3);
    uint64_t v11 = v10[4];
    uint64_t v12 = 4 * v11;
    if (v11)
    {
      if ((v12 & 0x80000000) != 0) {
        uint64_t v13 = 11;
      }
      else {
        uint64_t v13 = ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
    }
    else
    {
      uint64_t v13 = 0;
    }
    uint64_t v14 = v13 + v12;
    v10[8] = v12;
    v10[9] = v14;
    uint64_t v8 = (9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6;
    uint64_t v9 = v4 + v14;
LABEL_27:
    uint64_t v4 = v9 + v8 + 1;
    goto LABEL_28;
  }
  if (v5 == 10)
  {
    uint64_t v6 = *((void *)this + 3);
    uint64_t v7 = 6;
    if (*(float *)(v6 + 16) == 0.0) {
      uint64_t v7 = 0;
    }
    if (*(float *)(v6 + 20) != 0.0) {
      v7 += 5;
    }
    if (*(float *)(v6 + 24) != 0.0) {
      v7 += 6;
    }
    if (*(float *)(v6 + 28) != 0.0) {
      v7 += 6;
    }
    if (*(float *)(v6 + 32) != 0.0) {
      v7 += 6;
    }
    *(_DWORD *)(v6 + 36) = v7;
    uint64_t v8 = (9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6;
    uint64_t v9 = v4 + v7;
    goto LABEL_27;
  }
LABEL_28:
  *((_DWORD *)this + 8) = v4;
  return v4;
}

uint64_t CoreML::Specification::NetworkUpdateParameters::ByteSizeLong(CoreML::Specification::NetworkUpdateParameters *this)
{
  int v2 = *((_DWORD *)this + 6);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = *((unsigned int *)this + 6);
    do
    {
      uint64_t v5 = CoreML::Specification::LossLayer::ByteSizeLong(*(CoreML::Specification::LossLayer **)(*((void *)this + 4)
                                                                                               + 8 * v3
                                                                                               + 8));
      v4 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  if (this != (CoreML::Specification::NetworkUpdateParameters *)&CoreML::Specification::_NetworkUpdateParameters_default_instance_)
  {
    uint64_t v6 = (CoreML::Specification::Optimizer *)*((void *)this + 5);
    if (v6)
    {
      uint64_t v7 = CoreML::Specification::Optimizer::ByteSizeLong(v6);
      v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    uint64_t v8 = (CoreML::Specification::Int64Parameter *)*((void *)this + 6);
    if (v8)
    {
      unint64_t v9 = CoreML::Specification::Int64Parameter::ByteSizeLong(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    uint64_t v10 = *((void *)this + 7);
    if (v10)
    {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 16);
      *(_DWORD *)(v10 + 2CoreML::Specification::DictVectorizer::New(this, 0) = 2 * v11;
      v4 += 2 * v11 + 2;
    }
    uint64_t v12 = (CoreML::Specification::Int64Parameter *)*((void *)this + 8);
    if (v12)
    {
      unint64_t v13 = CoreML::Specification::Int64Parameter::ByteSizeLong(v12);
      v4 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
  }
  *((_DWORD *)this + 18) = v4;
  return v4;
}

uint64_t CoreML::Specification::LossLayer::ByteSizeLong(CoreML::Specification::LossLayer *this)
{
  uint64_t v2 = *((void *)this + 2);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
  if (*(char *)(v2 + 23) < 0)
  {
    if (*(void *)(v2 + 8)) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v5 = 0;
    goto LABEL_8;
  }
  if (!*(unsigned char *)(v2 + 23)) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v4 = *(void *)(v2 + 8);
  if ((v3 & 0x80u) == 0) {
    uint64_t v4 = v3;
  }
  uint64_t v5 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  int v6 = *((_DWORD *)this + 9);
  if (v6 == 11)
  {
    uint64_t v7 = CoreML::Specification::MeanSquaredErrorLossLayer::ByteSizeLong(*((CoreML::Specification::MeanSquaredErrorLossLayer **)this
                                                                        + 3));
    goto LABEL_12;
  }
  if (v6 == 10)
  {
    uint64_t v7 = CoreML::Specification::CategoricalCrossEntropyLossLayer::ByteSizeLong(*((CoreML::Specification::CategoricalCrossEntropyLossLayer **)this
                                                                               + 3));
LABEL_12:
    v5 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  *((_DWORD *)this + 8) = v5;
  return v5;
}

uint64_t CoreML::Specification::Optimizer::ByteSizeLong(CoreML::Specification::Optimizer *this)
{
  int v2 = *((_DWORD *)this + 7);
  if (v2 == 11)
  {
    uint64_t v3 = CoreML::Specification::AdamOptimizer::ByteSizeLong(*((CoreML::Specification::AdamOptimizer **)this + 2));
  }
  else
  {
    if (v2 != 10)
    {
      uint64_t result = 0;
      goto LABEL_7;
    }
    uint64_t v3 = CoreML::Specification::SGDOptimizer::ByteSizeLong(*((CoreML::Specification::SGDOptimizer **)this + 2));
  }
  uint64_t result = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_7:
  *((_DWORD *)this + 6) = result;
  return result;
}

uint64_t CoreML::Specification::SGDOptimizer::ByteSizeLong(CoreML::Specification::SGDOptimizer *this)
{
  if (this == (CoreML::Specification::SGDOptimizer *)&CoreML::Specification::_SGDOptimizer_default_instance_)
  {
    uint64_t v4 = 0;
  }
  else
  {
    int v2 = (CoreML::Specification::DoubleParameter *)*((void *)this + 2);
    if (v2)
    {
      uint64_t v3 = CoreML::Specification::DoubleParameter::ByteSizeLong(v2);
      uint64_t v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v5 = (CoreML::Specification::Int64Parameter *)*((void *)this + 3);
    if (v5)
    {
      unint64_t v6 = CoreML::Specification::Int64Parameter::ByteSizeLong(v5);
      v4 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    uint64_t v7 = (CoreML::Specification::DoubleParameter *)*((void *)this + 4);
    if (v7)
    {
      uint64_t v8 = CoreML::Specification::DoubleParameter::ByteSizeLong(v7);
      v4 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  *((_DWORD *)this + 1CoreML::Specification::DictVectorizer::New(this, 0) = v4;
  return v4;
}

uint64_t CoreML::Specification::AdamOptimizer::ByteSizeLong(CoreML::Specification::AdamOptimizer *this)
{
  if (this == (CoreML::Specification::AdamOptimizer *)&CoreML::Specification::_AdamOptimizer_default_instance_)
  {
    uint64_t v4 = 0;
  }
  else
  {
    int v2 = (CoreML::Specification::DoubleParameter *)*((void *)this + 2);
    if (v2)
    {
      uint64_t v3 = CoreML::Specification::DoubleParameter::ByteSizeLong(v2);
      uint64_t v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v5 = (CoreML::Specification::Int64Parameter *)*((void *)this + 3);
    if (v5)
    {
      unint64_t v6 = CoreML::Specification::Int64Parameter::ByteSizeLong(v5);
      v4 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    uint64_t v7 = (CoreML::Specification::DoubleParameter *)*((void *)this + 4);
    if (v7)
    {
      uint64_t v8 = CoreML::Specification::DoubleParameter::ByteSizeLong(v7);
      v4 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    unint64_t v9 = (CoreML::Specification::DoubleParameter *)*((void *)this + 5);
    if (v9)
    {
      uint64_t v10 = CoreML::Specification::DoubleParameter::ByteSizeLong(v9);
      v4 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    uint64_t v11 = (CoreML::Specification::DoubleParameter *)*((void *)this + 6);
    if (v11)
    {
      uint64_t v12 = CoreML::Specification::DoubleParameter::ByteSizeLong(v11);
      v4 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  *((_DWORD *)this + 14) = v4;
  return v4;
}

uint64_t CoreML::Specification::CategoricalCrossEntropyLossLayer::ByteSizeLong(CoreML::Specification::CategoricalCrossEntropyLossLayer *this)
{
  uint64_t v1 = *((void *)this + 2);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 23);
  if (*(char *)(v1 + 23) < 0)
  {
    if (*(void *)(v1 + 8)) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v4 = 0;
    goto LABEL_8;
  }
  if (!*(unsigned char *)(v1 + 23)) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v3 = *(void *)(v1 + 8);
  if ((v2 & 0x80u) == 0) {
    uint64_t v3 = v2;
  }
  uint64_t v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  uint64_t v5 = *((void *)this + 3);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
  if (*(char *)(v5 + 23) < 0)
  {
    if (!*(void *)(v5 + 8)) {
      goto LABEL_13;
    }
  }
  else if (!*(unsigned char *)(v5 + 23))
  {
    goto LABEL_13;
  }
  uint64_t v7 = *(void *)(v5 + 8);
  if ((v6 & 0x80u) == 0) {
    uint64_t v7 = v6;
  }
  v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_13:
  *((_DWORD *)this + 8) = v4;
  return v4;
}

uint64_t CoreML::Specification::MeanSquaredErrorLossLayer::ByteSizeLong(CoreML::Specification::MeanSquaredErrorLossLayer *this)
{
  uint64_t v1 = *((void *)this + 2);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 23);
  if (*(char *)(v1 + 23) < 0)
  {
    if (*(void *)(v1 + 8)) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v4 = 0;
    goto LABEL_8;
  }
  if (!*(unsigned char *)(v1 + 23)) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v3 = *(void *)(v1 + 8);
  if ((v2 & 0x80u) == 0) {
    uint64_t v3 = v2;
  }
  uint64_t v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  uint64_t v5 = *((void *)this + 3);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
  if (*(char *)(v5 + 23) < 0)
  {
    if (!*(void *)(v5 + 8)) {
      goto LABEL_13;
    }
  }
  else if (!*(unsigned char *)(v5 + 23))
  {
    goto LABEL_13;
  }
  uint64_t v7 = *(void *)(v5 + 8);
  if ((v6 & 0x80u) == 0) {
    uint64_t v7 = v6;
  }
  v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_13:
  *((_DWORD *)this + 8) = v4;
  return v4;
}

uint64_t CoreML::Specification::Tensor::ByteSizeLong(CoreML::Specification::Tensor *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  uint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  *((_DWORD *)this + 8) = v2;
  uint64_t v6 = v5 + v2;
  int v7 = *((_DWORD *)this + 9);
  if (v7) {
    v6 += ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  *((_DWORD *)this + 1CoreML::Specification::DictVectorizer::New(this, 0) = v6;
  return v6;
}

uint64_t CoreML::Specification::ConvolutionLayerParams::ByteSizeLong(CoreML::Specification::ConvolutionLayerParams *this)
{
  uint64_t v2 = *((unsigned int *)this + 4);
  if ((int)v2 < 1)
  {
    uint64_t v3 = 0;
LABEL_8:
    uint64_t v7 = 0;
    goto LABEL_11;
  }
  uint64_t v3 = 0;
  uint64_t v4 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v5 = *v4++;
    v3 += (9 * (__clz(v5 | 1) ^ 0x3F) + 73) >> 6;
    --v2;
  }
  while (v2);
  if (!v3) {
    goto LABEL_8;
  }
  if ((v3 & 0x80000000) != 0) {
    uint64_t v6 = 10;
  }
  else {
    uint64_t v6 = (9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6;
  }
  uint64_t v7 = v6 + 2;
LABEL_11:
  *((_DWORD *)this + 8) = v3;
  uint64_t v8 = v7 + v3;
  uint64_t v9 = *((unsigned int *)this + 10);
  if ((int)v9 < 1)
  {
    uint64_t v10 = 0;
  }
  else
  {
    uint64_t v10 = 0;
    uint64_t v11 = (uint64_t *)(*((void *)this + 6) + 8);
    do
    {
      uint64_t v12 = *v11++;
      v10 += (9 * (__clz(v12 | 1) ^ 0x3F) + 73) >> 6;
      --v9;
    }
    while (v9);
    if (v10)
    {
      if ((v10 & 0x80000000) != 0) {
        uint64_t v13 = 10;
      }
      else {
        uint64_t v13 = (9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6;
      }
      v8 += v13 + 2;
    }
  }
  *((_DWORD *)this + 14) = v10;
  uint64_t v14 = v8 + v10;
  uint64_t v15 = *((unsigned int *)this + 16);
  if ((int)v15 < 1)
  {
    uint64_t v16 = 0;
  }
  else
  {
    uint64_t v16 = 0;
    uint64_t v17 = (uint64_t *)(*((void *)this + 9) + 8);
    do
    {
      uint64_t v18 = *v17++;
      v16 += (9 * (__clz(v18 | 1) ^ 0x3F) + 73) >> 6;
      --v15;
    }
    while (v15);
    if (v16)
    {
      if ((v16 & 0x80000000) != 0) {
        uint64_t v19 = 12;
      }
      else {
        uint64_t v19 = ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 2;
      }
      v14 += v19;
    }
  }
  *((_DWORD *)this + 2CoreML::Specification::DictVectorizer::New(this, 0) = v16;
  uint64_t v20 = v14 + v16;
  uint64_t v21 = *((unsigned int *)this + 22);
  if ((int)v21 < 1)
  {
    uint64_t v22 = 0;
  }
  else
  {
    uint64_t v22 = 0;
    uint64_t v23 = (uint64_t *)(*((void *)this + 12) + 8);
    do
    {
      uint64_t v24 = *v23++;
      v22 += (9 * (__clz(v24 | 1) ^ 0x3F) + 73) >> 6;
      --v21;
    }
    while (v21);
    if (v22)
    {
      if ((v22 & 0x80000000) != 0) {
        uint64_t v25 = 12;
      }
      else {
        uint64_t v25 = ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 2;
      }
      v20 += v25;
    }
  }
  *((_DWORD *)this + 26) = v22;
  uint64_t v26 = v20 + v22;
  if (this != (CoreML::Specification::ConvolutionLayerParams *)&CoreML::Specification::_ConvolutionLayerParams_default_instance_)
  {
    uint64_t v27 = (CoreML::Specification::WeightParams *)*((void *)this + 14);
    if (v27)
    {
      uint64_t v28 = CoreML::Specification::WeightParams::ByteSizeLong(v27);
      v26 += v28 + ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    unint64_t v29 = (CoreML::Specification::WeightParams *)*((void *)this + 15);
    if (v29)
    {
      uint64_t v30 = CoreML::Specification::WeightParams::ByteSizeLong(v29);
      v26 += v30 + ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
  }
  uint64_t v31 = *((void *)this + 16);
  if (v31) {
    v26 += ((9 * (__clz(v31 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  uint64_t v32 = *((void *)this + 17);
  if (v32) {
    v26 += ((9 * (__clz(v32 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  uint64_t v33 = *((void *)this + 18);
  if (v33) {
    v26 += ((9 * (__clz(v33 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  if (*((unsigned char *)this + 152)) {
    uint64_t v34 = v26 + 3;
  }
  else {
    uint64_t v34 = v26;
  }
  if (*((unsigned char *)this + 153)) {
    uint64_t v35 = v34 + 3;
  }
  else {
    uint64_t v35 = v34;
  }
  int v36 = *((_DWORD *)this + 43);
  if (v36 == 51)
  {
    uint64_t v38 = *((void *)this + 20);
    int v39 = *(_DWORD *)(v38 + 16);
    if (v39)
    {
      if (v39 < 0) {
        uint64_t v40 = 11;
      }
      else {
        uint64_t v40 = ((9 * (__clz(v39 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
    }
    else
    {
      uint64_t v40 = 0;
    }
    *(_DWORD *)(v38 + 2CoreML::Specification::DictVectorizer::New(this, 0) = v40;
    v35 += v40 + 3;
  }
  else if (v36 == 50)
  {
    unint64_t v37 = CoreML::Specification::ValidPadding::ByteSizeLong(*((CoreML::Specification::ValidPadding **)this + 20));
    v35 += (uint64_t)v37 + ((9 * (__clz(v37 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
  *((_DWORD *)this + 42) = v35;
  return v35;
}

uint64_t CoreML::Specification::PoolingLayerParams::ByteSizeLong(CoreML::Specification::PoolingLayerParams *this)
{
  uint64_t v2 = *((unsigned int *)this + 4);
  if ((int)v2 < 1)
  {
    uint64_t v3 = 0;
LABEL_9:
    uint64_t v6 = 0;
    goto LABEL_10;
  }
  uint64_t v3 = 0;
  uint64_t v4 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v5 = *v4++;
    v3 += (9 * (__clz(v5 | 1) ^ 0x3F) + 73) >> 6;
    --v2;
  }
  while (v2);
  if (!v3) {
    goto LABEL_9;
  }
  uint64_t v6 = 11;
  uint64_t v7 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((int)v3 >= 0) {
    uint64_t v6 = v7;
  }
LABEL_10:
  *((_DWORD *)this + 8) = v3;
  uint64_t v8 = v6 + v3;
  uint64_t v9 = *((unsigned int *)this + 10);
  if ((int)v9 < 1)
  {
    uint64_t v10 = 0;
  }
  else
  {
    uint64_t v10 = 0;
    uint64_t v11 = (uint64_t *)(*((void *)this + 6) + 8);
    do
    {
      uint64_t v12 = *v11++;
      v10 += (9 * (__clz(v12 | 1) ^ 0x3F) + 73) >> 6;
      --v9;
    }
    while (v9);
    if (v10)
    {
      if ((v10 & 0x80000000) != 0) {
        uint64_t v13 = 12;
      }
      else {
        uint64_t v13 = ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 2;
      }
      v8 += v13;
    }
  }
  *((_DWORD *)this + 14) = v10;
  uint64_t v14 = v8 + v10;
  int v15 = *((_DWORD *)this + 15);
  if (v15)
  {
    if (v15 < 0) {
      uint64_t v16 = 11;
    }
    else {
      uint64_t v16 = ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v14 += v16;
  }
  if (*((unsigned char *)this + 64)) {
    v14 += 3;
  }
  if (*((unsigned char *)this + 65)) {
    uint64_t v17 = v14 + 3;
  }
  else {
    uint64_t v17 = v14;
  }
  int v18 = *((_DWORD *)this + 21);
  switch(v18)
  {
    case 32:
      uint64_t v19 = (CoreML::Specification::BorderAmounts *)CoreML::Specification::PoolingLayerParams_ValidCompletePadding::ByteSizeLong(*((CoreML::Specification::PoolingLayerParams_ValidCompletePadding **)this + 9));
      goto LABEL_34;
    case 31:
      uint64_t v20 = *((void *)this + 9);
      int v21 = *(_DWORD *)(v20 + 16);
      if (v21)
      {
        if (v21 < 0) {
          uint64_t v22 = 11;
        }
        else {
          uint64_t v22 = ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1;
        }
      }
      else
      {
        uint64_t v22 = 0;
      }
      *(_DWORD *)(v20 + 2CoreML::Specification::DictVectorizer::New(this, 0) = v22;
      v17 += v22 + 3;
      break;
    case 30:
      uint64_t v19 = CoreML::Specification::ValidPadding::ByteSizeLong(*((CoreML::Specification::ValidPadding **)this + 9));
LABEL_34:
      v17 += (uint64_t)v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 2;
      break;
  }
  *((_DWORD *)this + 2CoreML::Specification::DictVectorizer::New(this, 0) = v17;
  return v17;
}

uint64_t CoreML::Specification::ActivationParams::ByteSizeLong(CoreML::Specification::ActivationParams *this)
{
  uint64_t result = 0;
  int v3 = *((_DWORD *)this + 7);
  if (v3 <= 30)
  {
    if (v3 <= 19)
    {
      switch(v3)
      {
        case 5:
          uint64_t v10 = *((void *)this + 2);
          uint64_t v11 = 5;
          if (*(float *)(v10 + 16) == 0.0) {
            uint64_t v11 = 0;
          }
          if (*(float *)(v10 + 20) != 0.0) {
            v11 += 5;
          }
          *(_DWORD *)(v10 + 24) = v11;
          uint64_t result = v11 + 2;
          break;
        case 10:
          *(_DWORD *)(*((void *)this + 2) + 16) = 0;
          uint64_t result = 2;
          break;
        case 15:
          uint64_t v4 = *((void *)this + 2);
          uint64_t v5 = 5;
          if (*(float *)(v4 + 16) == 0.0) {
            uint64_t v5 = 0;
          }
          *(_DWORD *)(v4 + 2CoreML::Specification::DictVectorizer::New(this, 0) = v5;
          uint64_t result = v5 | 2;
          break;
      }
      goto LABEL_42;
    }
    if (v3 == 20)
    {
LABEL_30:
      uint64_t v9 = *((void *)this + 2);
      uint64_t v7 = 5;
      if (*(float *)(v9 + 16) == 0.0) {
        uint64_t v7 = 0;
      }
      *(_DWORD *)(v9 + 2CoreML::Specification::DictVectorizer::New(this, 0) = v7;
LABEL_33:
      uint64_t result = v7 + 3;
      goto LABEL_42;
    }
    if (v3 == 25)
    {
      uint64_t v8 = CoreML::Specification::ActivationPReLU::ByteSizeLong(*((CoreML::Specification::ActivationPReLU **)this + 2));
      goto LABEL_41;
    }
    if (v3 != 30) {
      goto LABEL_42;
    }
    goto LABEL_29;
  }
  if (v3 <= 49)
  {
    if (v3 != 31)
    {
      if (v3 == 40) {
        goto LABEL_29;
      }
      if (v3 != 41) {
        goto LABEL_42;
      }
    }
    uint64_t v6 = *((void *)this + 2);
    uint64_t v7 = 5;
    if (*(float *)(v6 + 16) == 0.0) {
      uint64_t v7 = 0;
    }
    if (*(float *)(v6 + 20) != 0.0) {
      v7 += 5;
    }
    *(_DWORD *)(v6 + 24) = v7;
    goto LABEL_33;
  }
  if (v3 <= 69)
  {
    if (v3 != 50)
    {
      if (v3 != 60) {
        goto LABEL_42;
      }
      goto LABEL_29;
    }
    goto LABEL_30;
  }
  if (v3 == 70)
  {
LABEL_29:
    *(_DWORD *)(*((void *)this + 2) + 16) = 0;
    uint64_t result = 3;
    goto LABEL_42;
  }
  if (v3 == 71)
  {
    uint64_t v8 = (CoreML::Specification::WeightParams *)CoreML::Specification::ActivationParametricSoftplus::ByteSizeLong(*((CoreML::Specification::ActivationParametricSoftplus **)this + 2));
LABEL_41:
    uint64_t result = (uint64_t)v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_42:
  *((_DWORD *)this + 6) = result;
  return result;
}

uint64_t CoreML::Specification::InnerProductLayerParams::ByteSizeLong(CoreML::Specification::InnerProductLayerParams *this)
{
  if (this == (CoreML::Specification::InnerProductLayerParams *)&CoreML::Specification::_InnerProductLayerParams_default_instance_)
  {
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v2 = (CoreML::Specification::WeightParams *)*((void *)this + 2);
    if (v2)
    {
      uint64_t v3 = CoreML::Specification::WeightParams::ByteSizeLong(v2);
      uint64_t v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v5 = (CoreML::Specification::WeightParams *)*((void *)this + 3);
    if (v5)
    {
      uint64_t v6 = CoreML::Specification::WeightParams::ByteSizeLong(v5);
      v4 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
  }
  uint64_t v7 = *((void *)this + 4);
  if (v7) {
    v4 += ((9 * (__clz(v7 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  uint64_t v8 = *((void *)this + 5);
  if (v8) {
    v4 += ((9 * (__clz(v8 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  if (*((unsigned char *)this + 48)) {
    uint64_t v9 = v4 + 2;
  }
  else {
    uint64_t v9 = v4;
  }
  if (*((unsigned char *)this + 49)) {
    uint64_t result = v9 + 3;
  }
  else {
    uint64_t result = v9;
  }
  *((_DWORD *)this + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = result;
  return result;
}

uint64_t CoreML::Specification::EmbeddingLayerParams::ByteSizeLong(CoreML::Specification::EmbeddingLayerParams *this)
{
  if (this == (CoreML::Specification::EmbeddingLayerParams *)&CoreML::Specification::_EmbeddingLayerParams_default_instance_)
  {
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v2 = (CoreML::Specification::WeightParams *)*((void *)this + 2);
    if (v2)
    {
      uint64_t v3 = CoreML::Specification::WeightParams::ByteSizeLong(v2);
      uint64_t v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v5 = (CoreML::Specification::WeightParams *)*((void *)this + 3);
    if (v5)
    {
      uint64_t v6 = CoreML::Specification::WeightParams::ByteSizeLong(v5);
      v4 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
  }
  uint64_t v7 = *((void *)this + 4);
  if (v7) {
    v4 += ((9 * (__clz(v7 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  uint64_t v8 = *((void *)this + 5);
  if (v8) {
    v4 += ((9 * (__clz(v8 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  if (*((unsigned char *)this + 48)) {
    uint64_t result = v4 + 2;
  }
  else {
    uint64_t result = v4;
  }
  *((_DWORD *)this + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = result;
  return result;
}

uint64_t CoreML::Specification::BatchnormLayerParams::ByteSizeLong(CoreML::Specification::BatchnormLayerParams *this)
{
  if (this == (CoreML::Specification::BatchnormLayerParams *)&CoreML::Specification::_BatchnormLayerParams_default_instance_)
  {
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v2 = (CoreML::Specification::WeightParams *)*((void *)this + 2);
    if (v2)
    {
      uint64_t v3 = CoreML::Specification::WeightParams::ByteSizeLong(v2);
      uint64_t v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v5 = (CoreML::Specification::WeightParams *)*((void *)this + 3);
    if (v5)
    {
      uint64_t v6 = CoreML::Specification::WeightParams::ByteSizeLong(v5);
      v4 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    uint64_t v7 = (CoreML::Specification::WeightParams *)*((void *)this + 4);
    if (v7)
    {
      uint64_t v8 = CoreML::Specification::WeightParams::ByteSizeLong(v7);
      v4 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    uint64_t v9 = (CoreML::Specification::WeightParams *)*((void *)this + 5);
    if (v9)
    {
      uint64_t v10 = CoreML::Specification::WeightParams::ByteSizeLong(v9);
      v4 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
  }
  uint64_t v11 = *((void *)this + 6);
  if (v11) {
    v4 += ((9 * (__clz(v11 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  if (*((unsigned char *)this + 56)) {
    uint64_t v12 = v4 + 2;
  }
  else {
    uint64_t v12 = v4;
  }
  if (*((unsigned char *)this + 57)) {
    v12 += 2;
  }
  if (*((float *)this + 15) == 0.0) {
    uint64_t result = v12;
  }
  else {
    uint64_t result = v12 + 5;
  }
  *((_DWORD *)this + 16) = result;
  return result;
}

uint64_t CoreML::Specification::LRNLayerParams::ByteSizeLong(CoreML::Specification::LRNLayerParams *this)
{
  uint64_t v1 = 5;
  if (*((float *)this + 4) == 0.0) {
    uint64_t v1 = 0;
  }
  if (*((float *)this + 5) != 0.0) {
    v1 += 5;
  }
  uint64_t v2 = *((void *)this + 3);
  unint64_t v3 = v1 + ((9 * (__clz(v2 | 1) ^ 0x3F) + 73) >> 6);
  if (v2) {
    uint64_t v1 = v3 + 1;
  }
  if (*((float *)this + 8) != 0.0) {
    v1 += 5;
  }
  *((_DWORD *)this + 9) = v1;
  return v1;
}

uint64_t CoreML::Specification::CropLayerParams::ByteSizeLong(CoreML::Specification::CropLayerParams *this)
{
  uint64_t v2 = *((unsigned int *)this + 4);
  if ((int)v2 < 1)
  {
    uint64_t v3 = 0;
LABEL_8:
    uint64_t v6 = 0;
    goto LABEL_10;
  }
  uint64_t v3 = 0;
  uint64_t v4 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v5 = *v4++;
    v3 += (9 * (__clz(v5 | 1) ^ 0x3F) + 73) >> 6;
    --v2;
  }
  while (v2);
  if (!v3) {
    goto LABEL_8;
  }
  if ((v3 & 0x80000000) != 0) {
    uint64_t v6 = 11;
  }
  else {
    uint64_t v6 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  *((_DWORD *)this + 8) = v3;
  uint64_t v7 = v6 + v3;
  if (this != (CoreML::Specification::CropLayerParams *)&CoreML::Specification::_CropLayerParams_default_instance_)
  {
    uint64_t v8 = (CoreML::Specification::BorderAmounts *)*((void *)this + 5);
    if (v8)
    {
      uint64_t v9 = CoreML::Specification::BorderAmounts::ByteSizeLong(v8);
      v7 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  *((_DWORD *)this + 12) = v7;
  return v7;
}

CoreML::Specification::BorderAmounts *CoreML::Specification::PaddingLayerParams::ByteSizeLong(CoreML::Specification::PaddingLayerParams *this)
{
  if (this == (CoreML::Specification::PaddingLayerParams *)&CoreML::Specification::_PaddingLayerParams_default_instance_)
  {
    uint64_t result = 0;
  }
  else
  {
    uint64_t result = (CoreML::Specification::BorderAmounts *)*((void *)this + 2);
    if (result)
    {
      uint64_t v3 = CoreML::Specification::BorderAmounts::ByteSizeLong(result);
      uint64_t result = (CoreML::Specification::BorderAmounts *)(v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1);
    }
  }
  int v4 = *((_DWORD *)this + 9);
  if (v4 == 3 || v4 == 2)
  {
    *(_DWORD *)(*((void *)this + 3) + 16) = 0;
    uint64_t result = (CoreML::Specification::BorderAmounts *)((char *)result + 2);
  }
  else if (v4 == 1)
  {
    uint64_t v5 = *((void *)this + 3);
    uint64_t v6 = 5;
    if (*(float *)(v5 + 16) == 0.0) {
      uint64_t v6 = 0;
    }
    *(_DWORD *)(v5 + 2CoreML::Specification::DictVectorizer::New(this, 0) = v6;
    uint64_t result = (CoreML::Specification::BorderAmounts *)((char *)result + v6 + 2);
  }
  *((_DWORD *)this + 8) = result;
  return result;
}

uint64_t CoreML::Specification::UpsampleLayerParams::ByteSizeLong(CoreML::Specification::UpsampleLayerParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  uint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  *((_DWORD *)this + 8) = v2;
  uint64_t v6 = v5 + v2;
  uint64_t v7 = *((unsigned int *)this + 10);
  uint64_t v8 = 4 * v7;
  if (v7)
  {
    if ((v8 & 0x80000000) != 0) {
      uint64_t v9 = 11;
    }
    else {
      uint64_t v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v6 += v9;
  }
  *((_DWORD *)this + 14) = v8;
  uint64_t v10 = v6 + v8;
  int v11 = *((_DWORD *)this + 15);
  if (v11)
  {
    if (v11 < 0) {
      uint64_t v12 = 11;
    }
    else {
      uint64_t v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v10 += v12;
  }
  int v13 = *((_DWORD *)this + 16);
  if (v13)
  {
    if (v13 < 0) {
      uint64_t v14 = 11;
    }
    else {
      uint64_t v14 = ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v10 += v14;
  }
  *((_DWORD *)this + 17) = v10;
  return v10;
}

uint64_t CoreML::Specification::ResizeBilinearLayerParams::ByteSizeLong(CoreML::Specification::ResizeBilinearLayerParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_9;
  }
  uint64_t v2 = 0;
  uint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_9:
  *((_DWORD *)this + 8) = v2;
  uint64_t v6 = v5 + v2;
  if (this != (CoreML::Specification::ResizeBilinearLayerParams *)&CoreML::Specification::_ResizeBilinearLayerParams_default_instance_)
  {
    uint64_t v7 = *((void *)this + 5);
    if (v7)
    {
      int v8 = *(_DWORD *)(v7 + 16);
      if (v8)
      {
        if (v8 < 0) {
          uint64_t v9 = 11;
        }
        else {
          uint64_t v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
        }
      }
      else
      {
        uint64_t v9 = 0;
      }
      *(_DWORD *)(v7 + 2CoreML::Specification::DictVectorizer::New(this, 0) = v9;
      v6 += v9 + 2;
    }
  }
  *((_DWORD *)this + 12) = v6;
  return v6;
}

uint64_t CoreML::Specification::CropResizeLayerParams::ByteSizeLong(CoreML::Specification::CropResizeLayerParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_9;
  }
  uint64_t v2 = 0;
  uint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_9:
  *((_DWORD *)this + 8) = v2;
  uint64_t v6 = v5 + v2;
  if (this != (CoreML::Specification::CropResizeLayerParams *)&CoreML::Specification::_CropResizeLayerParams_default_instance_)
  {
    uint64_t v7 = *((void *)this + 5);
    if (v7)
    {
      int v8 = *(_DWORD *)(v7 + 16);
      if (v8)
      {
        if (v8 < 0) {
          uint64_t v9 = 11;
        }
        else {
          uint64_t v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
        }
      }
      else
      {
        uint64_t v9 = 0;
      }
      *(_DWORD *)(v7 + 2CoreML::Specification::DictVectorizer::New(this, 0) = v9;
      v6 += v9 + 2;
    }
    uint64_t v10 = *((void *)this + 6);
    if (v10)
    {
      int v11 = *(_DWORD *)(v10 + 16);
      if (v11)
      {
        if (v11 < 0) {
          uint64_t v12 = 11;
        }
        else {
          uint64_t v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
        }
      }
      else
      {
        uint64_t v12 = 0;
      }
      *(_DWORD *)(v10 + 2CoreML::Specification::DictVectorizer::New(this, 0) = v12;
      v6 += v12 + 2;
    }
  }
  if (*((unsigned char *)this + 56)) {
    v6 += 2;
  }
  if (*((float *)this + 15) != 0.0) {
    v6 += 5;
  }
  *((_DWORD *)this + 16) = v6;
  return v6;
}

uint64_t CoreML::Specification::UnaryFunctionLayerParams::ByteSizeLong(CoreML::Specification::UnaryFunctionLayerParams *this)
{
  int v1 = *((_DWORD *)this + 4);
  if (v1)
  {
    uint64_t v2 = ((9 * (__clz(v1 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v1 >= 0) {
      uint64_t v3 = v2;
    }
    else {
      uint64_t v3 = 11;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  if (*((float *)this + 5) != 0.0) {
    v3 += 5;
  }
  if (*((float *)this + 6) != 0.0) {
    v3 += 5;
  }
  if (*((float *)this + 7) != 0.0) {
    v3 += 5;
  }
  if (*((float *)this + 8) != 0.0) {
    v3 += 5;
  }
  *((_DWORD *)this + 9) = v3;
  return v3;
}

uint64_t CoreML::Specification::ScaleLayerParams::ByteSizeLong(CoreML::Specification::ScaleLayerParams *this)
{
  uint64_t v2 = *((unsigned int *)this + 4);
  if ((int)v2 < 1)
  {
    uint64_t v3 = 0;
LABEL_9:
    uint64_t v6 = 0;
    goto LABEL_10;
  }
  uint64_t v3 = 0;
  uint64_t v4 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v5 = *v4++;
    v3 += (9 * (__clz(v5 | 1) ^ 0x3F) + 73) >> 6;
    --v2;
  }
  while (v2);
  if (!v3) {
    goto LABEL_9;
  }
  uint64_t v6 = 11;
  uint64_t v7 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((int)v3 >= 0) {
    uint64_t v6 = v7;
  }
LABEL_10:
  *((_DWORD *)this + 8) = v3;
  uint64_t v8 = v6 + v3;
  uint64_t v9 = *((unsigned int *)this + 10);
  if ((int)v9 < 1)
  {
    uint64_t v10 = 0;
  }
  else
  {
    uint64_t v10 = 0;
    int v11 = (uint64_t *)(*((void *)this + 6) + 8);
    do
    {
      uint64_t v12 = *v11++;
      v10 += (9 * (__clz(v12 | 1) ^ 0x3F) + 73) >> 6;
      --v9;
    }
    while (v9);
    if (v10)
    {
      if ((v10 & 0x80000000) != 0) {
        uint64_t v13 = 11;
      }
      else {
        uint64_t v13 = ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v8 += v13;
    }
  }
  *((_DWORD *)this + 14) = v10;
  uint64_t v14 = v8 + v10;
  if (this != (CoreML::Specification::ScaleLayerParams *)&CoreML::Specification::_ScaleLayerParams_default_instance_)
  {
    int v15 = (CoreML::Specification::WeightParams *)*((void *)this + 8);
    if (v15)
    {
      uint64_t v16 = CoreML::Specification::WeightParams::ByteSizeLong(v15);
      v14 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    uint64_t v17 = (CoreML::Specification::WeightParams *)*((void *)this + 9);
    if (v17)
    {
      uint64_t v18 = CoreML::Specification::WeightParams::ByteSizeLong(v17);
      v14 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  if (*((unsigned char *)this + 80)) {
    uint64_t result = v14 + 2;
  }
  else {
    uint64_t result = v14;
  }
  *((_DWORD *)this + 21) = result;
  return result;
}

uint64_t CoreML::Specification::BiasLayerParams::ByteSizeLong(CoreML::Specification::BiasLayerParams *this)
{
  uint64_t v2 = *((unsigned int *)this + 4);
  if ((int)v2 < 1)
  {
    uint64_t v3 = 0;
LABEL_8:
    uint64_t v6 = 0;
    goto LABEL_10;
  }
  uint64_t v3 = 0;
  uint64_t v4 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v5 = *v4++;
    v3 += (9 * (__clz(v5 | 1) ^ 0x3F) + 73) >> 6;
    --v2;
  }
  while (v2);
  if (!v3) {
    goto LABEL_8;
  }
  if ((v3 & 0x80000000) != 0) {
    uint64_t v6 = 11;
  }
  else {
    uint64_t v6 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  *((_DWORD *)this + 8) = v3;
  uint64_t v7 = v6 + v3;
  if (this != (CoreML::Specification::BiasLayerParams *)&CoreML::Specification::_BiasLayerParams_default_instance_)
  {
    uint64_t v8 = (CoreML::Specification::WeightParams *)*((void *)this + 5);
    if (v8)
    {
      uint64_t v9 = CoreML::Specification::WeightParams::ByteSizeLong(v8);
      v7 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  *((_DWORD *)this + 12) = v7;
  return v7;
}

uint64_t CoreML::Specification::ReduceLayerParams::ByteSizeLong(CoreML::Specification::ReduceLayerParams *this)
{
  int v1 = *((_DWORD *)this + 4);
  uint64_t v2 = 11;
  uint64_t v3 = ((9 * (__clz(v1 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v1 >= 0) {
    uint64_t v2 = v3;
  }
  if (v1) {
    uint64_t v4 = v2;
  }
  else {
    uint64_t v4 = 0;
  }
  if (*((float *)this + 5) != 0.0) {
    v4 += 5;
  }
  int v5 = *((_DWORD *)this + 6);
  uint64_t v6 = 11;
  uint64_t v7 = ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v5 >= 0) {
    uint64_t v6 = v7;
  }
  uint64_t v8 = v6 + v4;
  if (v5) {
    uint64_t v4 = v8;
  }
  *((_DWORD *)this + 7) = v4;
  return v4;
}

uint64_t CoreML::Specification::LoadConstantLayerParams::ByteSizeLong(CoreML::Specification::LoadConstantLayerParams *this)
{
  uint64_t v2 = *((unsigned int *)this + 4);
  if ((int)v2 < 1)
  {
    uint64_t v3 = 0;
LABEL_8:
    uint64_t v6 = 0;
    goto LABEL_10;
  }
  uint64_t v3 = 0;
  uint64_t v4 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v5 = *v4++;
    v3 += (9 * (__clz(v5 | 1) ^ 0x3F) + 73) >> 6;
    --v2;
  }
  while (v2);
  if (!v3) {
    goto LABEL_8;
  }
  if ((v3 & 0x80000000) != 0) {
    uint64_t v6 = 11;
  }
  else {
    uint64_t v6 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  *((_DWORD *)this + 8) = v3;
  uint64_t v7 = v6 + v3;
  if (this != (CoreML::Specification::LoadConstantLayerParams *)&CoreML::Specification::_LoadConstantLayerParams_default_instance_)
  {
    uint64_t v8 = (CoreML::Specification::WeightParams *)*((void *)this + 5);
    if (v8)
    {
      uint64_t v9 = CoreML::Specification::WeightParams::ByteSizeLong(v8);
      v7 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  *((_DWORD *)this + 12) = v7;
  return v7;
}

uint64_t CoreML::Specification::ReshapeLayerParams::ByteSizeLong(CoreML::Specification::ReshapeLayerParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  uint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  *((_DWORD *)this + 8) = v2;
  uint64_t v6 = v5 + v2;
  int v7 = *((_DWORD *)this + 9);
  if (v7)
  {
    if (v7 < 0) {
      uint64_t v8 = 11;
    }
    else {
      uint64_t v8 = ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v6 += v8;
  }
  *((_DWORD *)this + 1CoreML::Specification::DictVectorizer::New(this, 0) = v6;
  return v6;
}

uint64_t CoreML::Specification::PermuteLayerParams::ByteSizeLong(CoreML::Specification::PermuteLayerParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  uint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  uint64_t v6 = v5 + v2;
  *((_DWORD *)this + 8) = v2;
  *((_DWORD *)this + 9) = v6;
  return v6;
}

unint64_t CoreML::Specification::ReorganizeDataLayerParams::ByteSizeLong(CoreML::Specification::ReorganizeDataLayerParams *this)
{
  uint64_t v1 = *((void *)this + 2);
  unint64_t v2 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1) {
    unint64_t v3 = v2 + 1;
  }
  else {
    unint64_t v3 = 0;
  }
  int v4 = *((_DWORD *)this + 6);
  if (v4)
  {
    if (v4 < 0) {
      uint64_t v5 = 11;
    }
    else {
      uint64_t v5 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v5;
  }
  *((_DWORD *)this + 7) = v3;
  return v3;
}

unint64_t CoreML::Specification::SliceLayerParams::ByteSizeLong(CoreML::Specification::SliceLayerParams *this)
{
  uint64_t v1 = *((void *)this + 2);
  uint64_t v2 = *((void *)this + 3);
  unint64_t v3 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1) {
    unint64_t v4 = v3 + 1;
  }
  else {
    unint64_t v4 = 0;
  }
  unint64_t v5 = v4 + ((9 * (__clz(v2 | 1) ^ 0x3F) + 73) >> 6);
  if (v2) {
    unint64_t v4 = v5 + 1;
  }
  uint64_t v6 = *((void *)this + 4);
  unint64_t v7 = v4 + ((9 * (__clz(v6 | 1) ^ 0x3F) + 73) >> 6);
  if (v6) {
    unint64_t v4 = v7 + 1;
  }
  int v8 = *((_DWORD *)this + 10);
  if (v8)
  {
    if (v8 < 0) {
      uint64_t v9 = 11;
    }
    else {
      uint64_t v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v4 += v9;
  }
  *((_DWORD *)this + 11) = v4;
  return v4;
}

uint64_t CoreML::Specification::SimpleRecurrentLayerParams::ByteSizeLong(CoreML::Specification::SimpleRecurrentLayerParams *this)
{
  if (this == (CoreML::Specification::SimpleRecurrentLayerParams *)&CoreML::Specification::_SimpleRecurrentLayerParams_default_instance_)
  {
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v2 = (CoreML::Specification::ActivationParams *)*((void *)this + 2);
    if (v2)
    {
      uint64_t v3 = CoreML::Specification::ActivationParams::ByteSizeLong(v2);
      uint64_t v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      uint64_t v4 = 0;
    }
    unint64_t v5 = (CoreML::Specification::WeightParams *)*((void *)this + 3);
    if (v5)
    {
      uint64_t v6 = CoreML::Specification::WeightParams::ByteSizeLong(v5);
      v4 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    unint64_t v7 = (CoreML::Specification::WeightParams *)*((void *)this + 4);
    if (v7)
    {
      uint64_t v8 = CoreML::Specification::WeightParams::ByteSizeLong(v7);
      v4 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    uint64_t v9 = (CoreML::Specification::WeightParams *)*((void *)this + 5);
    if (v9)
    {
      uint64_t v10 = CoreML::Specification::WeightParams::ByteSizeLong(v9);
      v4 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
  }
  uint64_t v11 = *((void *)this + 6);
  if (v11) {
    v4 += ((9 * (__clz(v11 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  uint64_t v12 = *((void *)this + 7);
  if (v12) {
    v4 += ((9 * (__clz(v12 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  if (*((unsigned char *)this + 64)) {
    uint64_t v13 = v4 + 2;
  }
  else {
    uint64_t v13 = v4;
  }
  if (*((unsigned char *)this + 65)) {
    v13 += 3;
  }
  if (*((unsigned char *)this + 66)) {
    uint64_t result = v13 + 3;
  }
  else {
    uint64_t result = v13;
  }
  *((_DWORD *)this + 17) = result;
  return result;
}

uint64_t CoreML::Specification::GRULayerParams::ByteSizeLong(CoreML::Specification::GRULayerParams *this)
{
  int v2 = *((_DWORD *)this + 6);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = *((unsigned int *)this + 6);
    do
    {
      uint64_t v5 = CoreML::Specification::ActivationParams::ByteSizeLong(*(CoreML::Specification::ActivationParams **)(*((void *)this + 4) + 8 * v3 + 8));
      v4 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  if (this != (CoreML::Specification::GRULayerParams *)&CoreML::Specification::_GRULayerParams_default_instance_)
  {
    uint64_t v6 = (CoreML::Specification::WeightParams *)*((void *)this + 5);
    if (v6)
    {
      uint64_t v7 = CoreML::Specification::WeightParams::ByteSizeLong(v6);
      v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    uint64_t v8 = (CoreML::Specification::WeightParams *)*((void *)this + 6);
    if (v8)
    {
      uint64_t v9 = CoreML::Specification::WeightParams::ByteSizeLong(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    uint64_t v10 = (CoreML::Specification::WeightParams *)*((void *)this + 7);
    if (v10)
    {
      uint64_t v11 = CoreML::Specification::WeightParams::ByteSizeLong(v10);
      v4 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    uint64_t v12 = (CoreML::Specification::WeightParams *)*((void *)this + 8);
    if (v12)
    {
      uint64_t v13 = CoreML::Specification::WeightParams::ByteSizeLong(v12);
      v4 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    uint64_t v14 = (CoreML::Specification::WeightParams *)*((void *)this + 9);
    if (v14)
    {
      uint64_t v15 = CoreML::Specification::WeightParams::ByteSizeLong(v14);
      v4 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    uint64_t v16 = (CoreML::Specification::WeightParams *)*((void *)this + 10);
    if (v16)
    {
      uint64_t v17 = CoreML::Specification::WeightParams::ByteSizeLong(v16);
      v4 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    uint64_t v18 = (CoreML::Specification::WeightParams *)*((void *)this + 11);
    if (v18)
    {
      uint64_t v19 = CoreML::Specification::WeightParams::ByteSizeLong(v18);
      v4 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    uint64_t v20 = (CoreML::Specification::WeightParams *)*((void *)this + 12);
    if (v20)
    {
      uint64_t v21 = CoreML::Specification::WeightParams::ByteSizeLong(v20);
      v4 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    uint64_t v22 = (CoreML::Specification::WeightParams *)*((void *)this + 13);
    if (v22)
    {
      uint64_t v23 = CoreML::Specification::WeightParams::ByteSizeLong(v22);
      v4 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
  }
  uint64_t v24 = *((void *)this + 14);
  if (v24) {
    v4 += ((9 * (__clz(v24 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  uint64_t v25 = *((void *)this + 15);
  if (v25) {
    v4 += ((9 * (__clz(v25 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  if (*((unsigned char *)this + 128)) {
    uint64_t v26 = v4 + 2;
  }
  else {
    uint64_t v26 = v4;
  }
  if (*((unsigned char *)this + 129)) {
    v26 += 3;
  }
  if (*((unsigned char *)this + 130)) {
    uint64_t result = v26 + 3;
  }
  else {
    uint64_t result = v26;
  }
  *((_DWORD *)this + 3google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = result;
  return result;
}

uint64_t CoreML::Specification::UniDirectionalLSTMLayerParams::ByteSizeLong(CoreML::Specification::UniDirectionalLSTMLayerParams *this)
{
  int v2 = *((_DWORD *)this + 6);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = *((unsigned int *)this + 6);
    do
    {
      uint64_t v5 = CoreML::Specification::ActivationParams::ByteSizeLong(*(CoreML::Specification::ActivationParams **)(*((void *)this + 4) + 8 * v3 + 8));
      v4 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  if (this != (CoreML::Specification::UniDirectionalLSTMLayerParams *)&CoreML::Specification::_UniDirectionalLSTMLayerParams_default_instance_)
  {
    uint64_t v6 = (CoreML::Specification::LSTMParams *)*((void *)this + 5);
    if (v6)
    {
      uint64_t v7 = CoreML::Specification::LSTMParams::ByteSizeLong(v6);
      v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    uint64_t v8 = (CoreML::Specification::LSTMWeightParams *)*((void *)this + 6);
    if (v8)
    {
      uint64_t v9 = CoreML::Specification::LSTMWeightParams::ByteSizeLong(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
  }
  uint64_t v10 = *((void *)this + 7);
  if (v10) {
    v4 += ((9 * (__clz(v10 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  uint64_t v11 = *((void *)this + 8);
  if (v11) {
    v4 += ((9 * (__clz(v11 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  if (*((unsigned char *)this + 72)) {
    uint64_t result = v4 + 3;
  }
  else {
    uint64_t result = v4;
  }
  *((_DWORD *)this + 19) = result;
  return result;
}

uint64_t CoreML::Specification::BiDirectionalLSTMLayerParams::ByteSizeLong(CoreML::Specification::BiDirectionalLSTMLayerParams *this)
{
  int v2 = *((_DWORD *)this + 6);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = *((unsigned int *)this + 6);
    do
    {
      uint64_t v5 = CoreML::Specification::ActivationParams::ByteSizeLong(*(CoreML::Specification::ActivationParams **)(*((void *)this + 4) + 8 * v3 + 8));
      v4 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t v6 = *((unsigned int *)this + 12);
  uint64_t v7 = v4 + v6;
  if (v6)
  {
    int v8 = 0;
    do
    {
      uint64_t v9 = CoreML::Specification::ActivationParams::ByteSizeLong(*(CoreML::Specification::ActivationParams **)(*((void *)this + 7) + 8 * v8 + 8));
      v7 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      ++v8;
    }
    while (v6 != v8);
  }
  uint64_t v10 = *((unsigned int *)this + 18);
  uint64_t v11 = v7 + 2 * v10;
  if (v10)
  {
    int v12 = 0;
    do
    {
      uint64_t v13 = CoreML::Specification::LSTMWeightParams::ByteSizeLong(*(CoreML::Specification::LSTMWeightParams **)(*((void *)this + 10) + 8 * v12 + 8));
      v11 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6);
      ++v12;
    }
    while (v10 != v12);
  }
  if (this != (CoreML::Specification::BiDirectionalLSTMLayerParams *)&CoreML::Specification::_BiDirectionalLSTMLayerParams_default_instance_)
  {
    uint64_t v14 = (CoreML::Specification::LSTMParams *)*((void *)this + 11);
    if (v14)
    {
      uint64_t v15 = CoreML::Specification::LSTMParams::ByteSizeLong(v14);
      v11 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v16 = *((void *)this + 12);
  uint64_t v17 = *((void *)this + 13);
  BOOL v18 = v16 == 0;
  unint64_t v19 = v11 + ((9 * (__clz(v16 | 1) ^ 0x3F) + 73) >> 6);
  if (v18) {
    uint64_t v20 = v11;
  }
  else {
    uint64_t v20 = v19 + 1;
  }
  unint64_t v21 = v20 + ((9 * (__clz(v17 | 1) ^ 0x3F) + 73) >> 6);
  if (v17) {
    uint64_t result = v21 + 1;
  }
  else {
    uint64_t result = v20;
  }
  *((_DWORD *)this + 28) = result;
  return result;
}

uint64_t CoreML::Specification::CustomLayerParams::ByteSizeLong(CoreML::Specification::CustomLayerParams *this)
{
  uint64_t v2 = *((unsigned int *)this + 6);
  uint64_t v3 = 2 * v2;
  if (v2)
  {
    int v4 = 0;
    do
    {
      uint64_t v5 = CoreML::Specification::WeightParams::ByteSizeLong(*(CoreML::Specification::WeightParams **)(*((void *)this + 4) + 8 * v4 + 8));
      v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6);
      ++v4;
    }
    while (v2 != v4);
  }
  uint64_t v6 = (uint64_t *)*((void *)this + 8);
  uint64_t v7 = *v6;
  google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>::begin(v19, v6);
  int v8 = 0;
  uint64_t v9 = 2 * v7 + v3;
  while (v19[0])
  {
    uint64_t v10 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Wrap(*((google::protobuf::Arena **)v19[0] + 3), (google::protobuf::Arena *)(*((void *)v19[0] + 3) + 24), *((google::protobuf::Arena **)this + 5));
    if (v8 != v10)
    {
      if (v8) {
        (*((void (**)(google::protobuf::Arena **))*v8 + 1))(v8);
      }
      int v8 = v10;
    }
    uint64_t v11 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::ByteSizeLong(v8);
    v9 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6);
    google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>::KeyValuePair const>::operator++(v19);
  }
  if (v8) {
    (*((void (**)(google::protobuf::Arena **))*v8 + 1))(v8);
  }
  uint64_t v12 = *((void *)this + 9);
  uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
  if (*(char *)(v12 + 23) < 0)
  {
    if (!*(void *)(v12 + 8)) {
      goto LABEL_18;
    }
  }
  else if (!*(unsigned char *)(v12 + 23))
  {
    goto LABEL_18;
  }
  uint64_t v14 = *(void *)(v12 + 8);
  if ((v13 & 0x80u) == 0) {
    uint64_t v14 = v13;
  }
  v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_18:
  uint64_t v15 = *((void *)this + 10);
  uint64_t v16 = *(unsigned __int8 *)(v15 + 23);
  if (*(char *)(v15 + 23) < 0)
  {
    if (!*(void *)(v15 + 8)) {
      goto LABEL_23;
    }
  }
  else if (!*(unsigned char *)(v15 + 23))
  {
    goto LABEL_23;
  }
  uint64_t v17 = *(void *)(v15 + 8);
  if ((v16 & 0x80u) == 0) {
    uint64_t v17 = v16;
  }
  v9 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_23:
  *((_DWORD *)this + 22) = v9;
  return v9;
}

void sub_19EB77E04(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t CoreML::Specification::BranchLayerParams::ByteSizeLong(CoreML::Specification::BranchLayerParams *this)
{
  if (this == (CoreML::Specification::BranchLayerParams *)&CoreML::Specification::_BranchLayerParams_default_instance_)
  {
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v2 = (CoreML::Specification::NeuralNetwork *)*((void *)this + 2);
    if (v2)
    {
      uint64_t v3 = CoreML::Specification::NeuralNetwork::ByteSizeLong(v2);
      uint64_t v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v5 = (CoreML::Specification::NeuralNetwork *)*((void *)this + 3);
    if (v5)
    {
      uint64_t v6 = CoreML::Specification::NeuralNetwork::ByteSizeLong(v5);
      v4 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  *((_DWORD *)this + 8) = v4;
  return v4;
}

uint64_t CoreML::Specification::LoopLayerParams::ByteSizeLong(CoreML::Specification::LoopLayerParams *this)
{
  uint64_t v2 = *((void *)this + 2);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
  if (*(char *)(v2 + 23) < 0)
  {
    if (*(void *)(v2 + 8)) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v5 = 0;
    goto LABEL_8;
  }
  if (!*(unsigned char *)(v2 + 23)) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v4 = *(void *)(v2 + 8);
  if ((v3 & 0x80u) == 0) {
    uint64_t v4 = v3;
  }
  uint64_t v5 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  if (this != (CoreML::Specification::LoopLayerParams *)&CoreML::Specification::_LoopLayerParams_default_instance_)
  {
    uint64_t v6 = (CoreML::Specification::NeuralNetwork *)*((void *)this + 3);
    if (v6)
    {
      uint64_t v7 = CoreML::Specification::NeuralNetwork::ByteSizeLong(v6);
      v5 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    int v8 = (CoreML::Specification::NeuralNetwork *)*((void *)this + 4);
    if (v8)
    {
      uint64_t v9 = CoreML::Specification::NeuralNetwork::ByteSizeLong(v8);
      v5 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v10 = *((void *)this + 5);
  if (v10) {
    v5 += ((9 * (__clz(v10 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  *((_DWORD *)this + 12) = v5;
  return v5;
}

uint64_t CoreML::Specification::TileLayerParams::ByteSizeLong(CoreML::Specification::TileLayerParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  uint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  uint64_t v6 = v5 + v2;
  *((_DWORD *)this + 8) = v2;
  *((_DWORD *)this + 9) = v6;
  return v6;
}

unint64_t CoreML::Specification::ScatterLayerParams::ByteSizeLong(CoreML::Specification::ScatterLayerParams *this)
{
  uint64_t v1 = *((void *)this + 2);
  unint64_t v2 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1) {
    unint64_t v3 = v2 + 1;
  }
  else {
    unint64_t v3 = 0;
  }
  int v4 = *((_DWORD *)this + 6);
  if (v4)
  {
    if (v4 < 0) {
      uint64_t v5 = 11;
    }
    else {
      uint64_t v5 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v5;
  }
  *((_DWORD *)this + 7) = v3;
  return v3;
}

unint64_t CoreML::Specification::ScatterAlongAxisLayerParams::ByteSizeLong(CoreML::Specification::ScatterAlongAxisLayerParams *this)
{
  uint64_t v1 = *((void *)this + 2);
  unint64_t v2 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1) {
    unint64_t v3 = v2 + 1;
  }
  else {
    unint64_t v3 = 0;
  }
  int v4 = *((_DWORD *)this + 6);
  if (v4)
  {
    if (v4 < 0) {
      uint64_t v5 = 11;
    }
    else {
      uint64_t v5 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v5;
  }
  *((_DWORD *)this + 7) = v3;
  return v3;
}

uint64_t google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual<CoreML::Specification::ReverseLayerParams>(unsigned int *a1)
{
  uint64_t v1 = a1[4];
  if (v1)
  {
    if ((v1 & 0x80000000) != 0) {
      uint64_t v2 = 11;
    }
    else {
      uint64_t v2 = ((9 * (__clz(v1 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v3 = v2 + v1;
  a1[8] = v1;
  a1[9] = v3;
  return v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6);
}

unint64_t CoreML::Specification::ReverseSeqLayerParams::ByteSizeLong(CoreML::Specification::ReverseSeqLayerParams *this)
{
  uint64_t v1 = *((void *)this + 2);
  uint64_t v2 = *((void *)this + 3);
  unint64_t v3 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1) {
    unint64_t v4 = v3 + 1;
  }
  else {
    unint64_t v4 = 0;
  }
  unint64_t v5 = v4 + ((9 * (__clz(v2 | 1) ^ 0x3F) + 73) >> 6);
  if (v2) {
    unint64_t v4 = v5 + 1;
  }
  *((_DWORD *)this + 8) = v4;
  return v4;
}

uint64_t CoreML::Specification::SplitNDLayerParams::ByteSizeLong(CoreML::Specification::SplitNDLayerParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  unint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  *((_DWORD *)this + 8) = v2;
  uint64_t v6 = v5 + v2;
  uint64_t v7 = *((void *)this + 5);
  if (v7) {
    v6 += ((9 * (__clz(v7 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  uint64_t v8 = *((void *)this + 6);
  if (v8) {
    v6 += ((9 * (__clz(v8 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  *((_DWORD *)this + 14) = v6;
  return v6;
}

unint64_t google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual<CoreML::Specification::ConcatNDLayerParams>(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  unint64_t v2 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1) {
    unint64_t v3 = v2 + 1;
  }
  else {
    unint64_t v3 = 0;
  }
  if (*(unsigned char *)(a1 + 24)) {
    v3 += 2;
  }
  *(_DWORD *)(a1 + 28) = v3;
  return v3 + 1;
}

uint64_t CoreML::Specification::TransposeLayerParams::ByteSizeLong(CoreML::Specification::TransposeLayerParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  unint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  uint64_t v6 = v5 + v2;
  *((_DWORD *)this + 8) = v2;
  *((_DWORD *)this + 9) = v6;
  return v6;
}

uint64_t CoreML::Specification::SliceStaticLayerParams::ByteSizeLong(CoreML::Specification::SliceStaticLayerParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_9:
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  unint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_9;
  }
  uint64_t v5 = 11;
  uint64_t v6 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((int)v2 >= 0) {
    uint64_t v5 = v6;
  }
LABEL_10:
  *((_DWORD *)this + 8) = v2;
  uint64_t v7 = v5 + v2;
  uint64_t v8 = *((unsigned int *)this + 10);
  if (v8)
  {
    if ((v8 & 0x80000000) != 0) {
      uint64_t v9 = 11;
    }
    else {
      uint64_t v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v7 += v9;
  }
  *((_DWORD *)this + 14) = v8;
  uint64_t v10 = v7 + v8;
  uint64_t v11 = *((unsigned int *)this + 16);
  if ((int)v11 < 1)
  {
    uint64_t v12 = 0;
  }
  else
  {
    uint64_t v12 = 0;
    uint64_t v13 = (uint64_t *)(*((void *)this + 9) + 8);
    do
    {
      uint64_t v14 = *v13++;
      v12 += (9 * (__clz(v14 | 1) ^ 0x3F) + 73) >> 6;
      --v11;
    }
    while (v11);
    if (v12)
    {
      if ((v12 & 0x80000000) != 0) {
        uint64_t v15 = 11;
      }
      else {
        uint64_t v15 = ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v10 += v15;
    }
  }
  *((_DWORD *)this + 2CoreML::Specification::DictVectorizer::New(this, 0) = v12;
  uint64_t v16 = v10 + v12;
  uint64_t v17 = *((unsigned int *)this + 22);
  if (v17)
  {
    uint64_t v18 = 11;
    uint64_t v19 = ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((int)v17 >= 0) {
      uint64_t v18 = v19;
    }
    v16 += v18;
  }
  *((_DWORD *)this + 26) = v17;
  uint64_t v20 = v16 + v17;
  uint64_t v21 = *((unsigned int *)this + 28);
  if ((int)v21 < 1)
  {
    uint64_t v22 = 0;
  }
  else
  {
    uint64_t v22 = 0;
    uint64_t v23 = (uint64_t *)(*((void *)this + 15) + 8);
    do
    {
      uint64_t v24 = *v23++;
      v22 += (9 * (__clz(v24 | 1) ^ 0x3F) + 73) >> 6;
      --v21;
    }
    while (v21);
    if (v22)
    {
      if ((v22 & 0x80000000) != 0) {
        uint64_t v25 = 11;
      }
      else {
        uint64_t v25 = ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v20 += v25;
    }
  }
  *((_DWORD *)this + 32) = v22;
  uint64_t v26 = v20 + v22;
  uint64_t v27 = *((unsigned int *)this + 34);
  if (v27)
  {
    if ((v27 & 0x80000000) != 0) {
      uint64_t v28 = 11;
    }
    else {
      uint64_t v28 = ((9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v26 += v28;
  }
  uint64_t v29 = v26 + v27;
  *((_DWORD *)this + 38) = v27;
  *((_DWORD *)this + 39) = v29;
  return v29;
}

uint64_t CoreML::Specification::SliceDynamicLayerParams::ByteSizeLong(CoreML::Specification::SliceDynamicLayerParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if (v1)
  {
    uint64_t v2 = 11;
    uint64_t v3 = ((9 * (__clz(v1 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((int)v1 >= 0) {
      uint64_t v2 = v3;
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *((_DWORD *)this + 8) = v1;
  uint64_t v4 = v2 + v1;
  uint64_t v5 = *((unsigned int *)this + 10);
  if ((int)v5 < 1)
  {
    uint64_t v6 = 0;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v7 = (uint64_t *)(*((void *)this + 6) + 8);
    do
    {
      uint64_t v8 = *v7++;
      v6 += (9 * (__clz(v8 | 1) ^ 0x3F) + 73) >> 6;
      --v5;
    }
    while (v5);
    if (v6)
    {
      if ((v6 & 0x80000000) != 0) {
        uint64_t v9 = 11;
      }
      else {
        uint64_t v9 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v4 += v9;
    }
  }
  *((_DWORD *)this + 14) = v6;
  uint64_t v10 = v4 + v6;
  uint64_t v11 = *((unsigned int *)this + 16);
  if (v11)
  {
    uint64_t v12 = 11;
    uint64_t v13 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((int)v11 >= 0) {
      uint64_t v12 = v13;
    }
    v10 += v12;
  }
  *((_DWORD *)this + 2CoreML::Specification::DictVectorizer::New(this, 0) = v11;
  uint64_t v14 = v10 + v11;
  uint64_t v15 = *((unsigned int *)this + 22);
  if ((int)v15 < 1)
  {
    uint64_t v16 = 0;
  }
  else
  {
    uint64_t v16 = 0;
    uint64_t v17 = (uint64_t *)(*((void *)this + 12) + 8);
    do
    {
      uint64_t v18 = *v17++;
      v16 += (9 * (__clz(v18 | 1) ^ 0x3F) + 73) >> 6;
      --v15;
    }
    while (v15);
    if (v16)
    {
      if ((v16 & 0x80000000) != 0) {
        uint64_t v19 = 11;
      }
      else {
        uint64_t v19 = ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v14 += v19;
    }
  }
  *((_DWORD *)this + 26) = v16;
  uint64_t v20 = v14 + v16;
  uint64_t v21 = *((unsigned int *)this + 28);
  if (v21)
  {
    if ((v21 & 0x80000000) != 0) {
      uint64_t v22 = 11;
    }
    else {
      uint64_t v22 = ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v20 += v22;
  }
  uint64_t v23 = v20 + v21;
  *((_DWORD *)this + 32) = v21;
  *((_DWORD *)this + 3google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v23;
  return v23;
}

unint64_t CoreML::Specification::SlidingWindowsLayerParams::ByteSizeLong(CoreML::Specification::SlidingWindowsLayerParams *this)
{
  uint64_t v1 = *((void *)this + 2);
  uint64_t v2 = *((void *)this + 3);
  unint64_t v3 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1) {
    unint64_t v4 = v3 + 1;
  }
  else {
    unint64_t v4 = 0;
  }
  unint64_t v5 = v4 + ((9 * (__clz(v2 | 1) ^ 0x3F) + 73) >> 6);
  if (v2) {
    unint64_t v4 = v5 + 1;
  }
  uint64_t v6 = *((void *)this + 4);
  unint64_t v7 = v4 + ((9 * (__clz(v6 | 1) ^ 0x3F) + 73) >> 6);
  if (v6) {
    unint64_t v4 = v7 + 1;
  }
  *((_DWORD *)this + 1CoreML::Specification::DictVectorizer::New(this, 0) = v4;
  return v4;
}

unint64_t CoreML::Specification::TopKLayerParams::ByteSizeLong(CoreML::Specification::TopKLayerParams *this)
{
  uint64_t v1 = *((void *)this + 2);
  uint64_t v2 = *((void *)this + 3);
  unint64_t v3 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1) {
    unint64_t v4 = v3 + 1;
  }
  else {
    unint64_t v4 = 0;
  }
  unint64_t v5 = v4 + ((9 * (__clz(v2 | 1) ^ 0x3F) + 73) >> 6);
  if (v2) {
    unint64_t v4 = v5 + 1;
  }
  if (*((unsigned char *)this + 32)) {
    v4 += 2;
  }
  *((_DWORD *)this + 9) = v4;
  return v4;
}

uint64_t CoreML::Specification::EmbeddingNDLayerParams::ByteSizeLong(CoreML::Specification::EmbeddingNDLayerParams *this)
{
  if (this == (CoreML::Specification::EmbeddingNDLayerParams *)&CoreML::Specification::_EmbeddingNDLayerParams_default_instance_)
  {
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v2 = (CoreML::Specification::WeightParams *)*((void *)this + 2);
    if (v2)
    {
      uint64_t v3 = CoreML::Specification::WeightParams::ByteSizeLong(v2);
      uint64_t v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    else
    {
      uint64_t v4 = 0;
    }
    unint64_t v5 = (CoreML::Specification::WeightParams *)*((void *)this + 3);
    if (v5)
    {
      uint64_t v6 = CoreML::Specification::WeightParams::ByteSizeLong(v5);
      v4 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
  }
  uint64_t v7 = *((void *)this + 4);
  if (v7) {
    v4 += ((9 * (__clz(v7 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  uint64_t v8 = *((void *)this + 5);
  if (v8) {
    v4 += ((9 * (__clz(v8 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  if (*((unsigned char *)this + 48)) {
    uint64_t result = v4 + 2;
  }
  else {
    uint64_t result = v4;
  }
  *((_DWORD *)this + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = result;
  return result;
}

uint64_t CoreML::Specification::BatchedMatMulLayerParams::ByteSizeLong(CoreML::Specification::BatchedMatMulLayerParams *this)
{
  if (this == (CoreML::Specification::BatchedMatMulLayerParams *)&CoreML::Specification::_BatchedMatMulLayerParams_default_instance_)
  {
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v2 = (CoreML::Specification::WeightParams *)*((void *)this + 2);
    if (v2)
    {
      uint64_t v3 = CoreML::Specification::WeightParams::ByteSizeLong(v2);
      uint64_t v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      uint64_t v4 = 0;
    }
    unint64_t v5 = (CoreML::Specification::WeightParams *)*((void *)this + 3);
    if (v5)
    {
      uint64_t v6 = CoreML::Specification::WeightParams::ByteSizeLong(v5);
      v4 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v7 = *((void *)this + 4);
  if (v7) {
    v4 += ((9 * (__clz(v7 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  uint64_t v8 = *((void *)this + 5);
  if (v8) {
    v4 += ((9 * (__clz(v8 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  if (*((unsigned char *)this + 48)) {
    uint64_t v9 = v4 + 2;
  }
  else {
    uint64_t v9 = v4;
  }
  if (*((unsigned char *)this + 49)) {
    v9 += 2;
  }
  if (*((unsigned char *)this + 50)) {
    v9 += 2;
  }
  if (*((unsigned char *)this + 51)) {
    uint64_t result = v9 + 2;
  }
  else {
    uint64_t result = v9;
  }
  *((_DWORD *)this + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = result;
  return result;
}

uint64_t CoreML::Specification::LoadConstantNDLayerParams::ByteSizeLong(CoreML::Specification::LoadConstantNDLayerParams *this)
{
  uint64_t v2 = *((unsigned int *)this + 4);
  if ((int)v2 < 1)
  {
    uint64_t v3 = 0;
LABEL_8:
    uint64_t v6 = 0;
    goto LABEL_10;
  }
  uint64_t v3 = 0;
  uint64_t v4 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v5 = *v4++;
    v3 += (9 * (__clz(v5 | 1) ^ 0x3F) + 73) >> 6;
    --v2;
  }
  while (v2);
  if (!v3) {
    goto LABEL_8;
  }
  if ((v3 & 0x80000000) != 0) {
    uint64_t v6 = 11;
  }
  else {
    uint64_t v6 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  *((_DWORD *)this + 8) = v3;
  uint64_t v7 = v6 + v3;
  if (this != (CoreML::Specification::LoadConstantNDLayerParams *)&CoreML::Specification::_LoadConstantNDLayerParams_default_instance_)
  {
    uint64_t v8 = (CoreML::Specification::WeightParams *)*((void *)this + 5);
    if (v8)
    {
      uint64_t v9 = CoreML::Specification::WeightParams::ByteSizeLong(v8);
      v7 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  *((_DWORD *)this + 12) = v7;
  return v7;
}

uint64_t CoreML::Specification::FillStaticLayerParams::ByteSizeLong(CoreML::Specification::FillStaticLayerParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  uint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  *((_DWORD *)this + 8) = v2;
  uint64_t v6 = v5 + v2;
  if (*((float *)this + 9) != 0.0) {
    v6 += 5;
  }
  *((_DWORD *)this + 1CoreML::Specification::DictVectorizer::New(this, 0) = v6;
  return v6;
}

uint64_t CoreML::Specification::BroadcastToStaticLayerParams::ByteSizeLong(CoreML::Specification::BroadcastToStaticLayerParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  uint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  uint64_t v6 = v5 + v2;
  *((_DWORD *)this + 8) = v2;
  *((_DWORD *)this + 9) = v6;
  return v6;
}

uint64_t CoreML::Specification::SqueezeLayerParams::ByteSizeLong(CoreML::Specification::SqueezeLayerParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  uint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  *((_DWORD *)this + 8) = v2;
  uint64_t v6 = v5 + v2;
  if (*((unsigned char *)this + 36)) {
    v6 += 2;
  }
  *((_DWORD *)this + 1CoreML::Specification::DictVectorizer::New(this, 0) = v6;
  return v6;
}

uint64_t CoreML::Specification::ExpandDimsLayerParams::ByteSizeLong(CoreML::Specification::ExpandDimsLayerParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  uint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  uint64_t v6 = v5 + v2;
  *((_DWORD *)this + 8) = v2;
  *((_DWORD *)this + 9) = v6;
  return v6;
}

uint64_t CoreML::Specification::ReshapeStaticLayerParams::ByteSizeLong(CoreML::Specification::ReshapeStaticLayerParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  uint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  uint64_t v6 = v5 + v2;
  *((_DWORD *)this + 8) = v2;
  *((_DWORD *)this + 9) = v6;
  return v6;
}

uint64_t CoreML::Specification::RankPreservingReshapeLayerParams::ByteSizeLong(CoreML::Specification::RankPreservingReshapeLayerParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  uint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  uint64_t v6 = v5 + v2;
  *((_DWORD *)this + 8) = v2;
  *((_DWORD *)this + 9) = v6;
  return v6;
}

uint64_t CoreML::Specification::ConstantPaddingLayerParams::ByteSizeLong(CoreML::Specification::ConstantPaddingLayerParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  uint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  *((_DWORD *)this + 8) = v2;
  uint64_t v6 = v5 + v2;
  if (*((float *)this + 9) != 0.0) {
    v6 += 5;
  }
  if (*((unsigned char *)this + 40)) {
    v6 += 2;
  }
  *((_DWORD *)this + 11) = v6;
  return v6;
}

unint64_t CoreML::Specification::RandomNormalLikeLayerParams::ByteSizeLong(CoreML::Specification::RandomNormalLikeLayerParams *this)
{
  uint64_t v1 = *((void *)this + 2);
  unint64_t v2 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1) {
    unint64_t v3 = v2 + 1;
  }
  else {
    unint64_t v3 = 0;
  }
  if (*((float *)this + 6) != 0.0) {
    v3 += 5;
  }
  if (*((float *)this + 7) != 0.0) {
    v3 += 5;
  }
  *((_DWORD *)this + 8) = v3;
  return v3;
}

uint64_t CoreML::Specification::RandomNormalStaticLayerParams::ByteSizeLong(CoreML::Specification::RandomNormalStaticLayerParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  unint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  uint64_t v6 = v5 + v2;
  uint64_t v7 = *((void *)this + 5);
  BOOL v8 = v7 == 0;
  uint64_t v9 = v6 + ((9 * (__clz(v7 | 1) ^ 0x3F) + 73) >> 6);
  if (!v8) {
    uint64_t v6 = v9 + 1;
  }
  float v10 = *((float *)this + 12);
  float v11 = *((float *)this + 13);
  *((_DWORD *)this + 8) = v2;
  uint64_t v12 = v6 + 5;
  if (v10 == 0.0) {
    uint64_t v12 = v6;
  }
  if (v11 != 0.0) {
    v12 += 5;
  }
  *((_DWORD *)this + 14) = v12;
  return v12;
}

unint64_t CoreML::Specification::RandomNormalDynamicLayerParams::ByteSizeLong(CoreML::Specification::RandomNormalDynamicLayerParams *this)
{
  uint64_t v1 = *((void *)this + 2);
  unint64_t v2 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1) {
    unint64_t v3 = v2 + 1;
  }
  else {
    unint64_t v3 = 0;
  }
  if (*((float *)this + 6) != 0.0) {
    v3 += 5;
  }
  if (*((float *)this + 7) != 0.0) {
    v3 += 5;
  }
  *((_DWORD *)this + 8) = v3;
  return v3;
}

unint64_t CoreML::Specification::RandomUniformLikeLayerParams::ByteSizeLong(CoreML::Specification::RandomUniformLikeLayerParams *this)
{
  uint64_t v1 = *((void *)this + 2);
  unint64_t v2 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1) {
    unint64_t v3 = v2 + 1;
  }
  else {
    unint64_t v3 = 0;
  }
  if (*((float *)this + 6) != 0.0) {
    v3 += 5;
  }
  if (*((float *)this + 7) != 0.0) {
    v3 += 5;
  }
  *((_DWORD *)this + 8) = v3;
  return v3;
}

uint64_t CoreML::Specification::RandomUniformStaticLayerParams::ByteSizeLong(CoreML::Specification::RandomUniformStaticLayerParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  unint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  uint64_t v6 = v5 + v2;
  uint64_t v7 = *((void *)this + 5);
  BOOL v8 = v7 == 0;
  uint64_t v9 = v6 + ((9 * (__clz(v7 | 1) ^ 0x3F) + 73) >> 6);
  if (!v8) {
    uint64_t v6 = v9 + 1;
  }
  float v10 = *((float *)this + 12);
  float v11 = *((float *)this + 13);
  *((_DWORD *)this + 8) = v2;
  uint64_t v12 = v6 + 5;
  if (v10 == 0.0) {
    uint64_t v12 = v6;
  }
  if (v11 != 0.0) {
    v12 += 5;
  }
  *((_DWORD *)this + 14) = v12;
  return v12;
}

unint64_t CoreML::Specification::RandomUniformDynamicLayerParams::ByteSizeLong(CoreML::Specification::RandomUniformDynamicLayerParams *this)
{
  uint64_t v1 = *((void *)this + 2);
  unint64_t v2 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1) {
    unint64_t v3 = v2 + 1;
  }
  else {
    unint64_t v3 = 0;
  }
  if (*((float *)this + 6) != 0.0) {
    v3 += 5;
  }
  if (*((float *)this + 7) != 0.0) {
    v3 += 5;
  }
  *((_DWORD *)this + 8) = v3;
  return v3;
}

unint64_t google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual<CoreML::Specification::RandomBernoulliLikeLayerParams>(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  unint64_t v2 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1) {
    unint64_t v3 = v2 + 1;
  }
  else {
    unint64_t v3 = 0;
  }
  if (*(float *)(a1 + 24) != 0.0) {
    v3 += 5;
  }
  *(_DWORD *)(a1 + 28) = v3;
  return v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6);
}

uint64_t CoreML::Specification::RandomBernoulliStaticLayerParams::ByteSizeLong(CoreML::Specification::RandomBernoulliStaticLayerParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  unint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  *((_DWORD *)this + 8) = v2;
  uint64_t v6 = v5 + v2;
  uint64_t v7 = *((void *)this + 5);
  uint64_t v8 = v6 + ((9 * (__clz(v7 | 1) ^ 0x3F) + 73) >> 6);
  if (v7) {
    uint64_t v6 = v8 + 1;
  }
  if (*((float *)this + 12) != 0.0) {
    v6 += 5;
  }
  *((_DWORD *)this + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v6;
  return v6;
}

unint64_t CoreML::Specification::CategoricalDistributionLayerParams::ByteSizeLong(CoreML::Specification::CategoricalDistributionLayerParams *this)
{
  uint64_t v1 = *((void *)this + 2);
  uint64_t v2 = *((void *)this + 3);
  unint64_t v3 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1) {
    unint64_t v4 = v3 + 1;
  }
  else {
    unint64_t v4 = 0;
  }
  unint64_t v5 = v4 + ((9 * (__clz(v2 | 1) ^ 0x3F) + 73) >> 6);
  if (v2) {
    unint64_t v4 = v5 + 1;
  }
  if (*((unsigned char *)this + 32)) {
    v4 += 2;
  }
  if (*((float *)this + 9) != 0.0) {
    v4 += 5;
  }
  if (*((float *)this + 10) != 0.0) {
    v4 += 5;
  }
  *((_DWORD *)this + 11) = v4;
  return v4;
}

uint64_t CoreML::Specification::ReduceL1LayerParams::ByteSizeLong(CoreML::Specification::ReduceL1LayerParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  unint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  *((_DWORD *)this + 8) = v2;
  uint64_t v6 = v5 + v2;
  if (*((unsigned char *)this + 36)) {
    v6 += 2;
  }
  if (*((unsigned char *)this + 37)) {
    v6 += 2;
  }
  *((_DWORD *)this + 1CoreML::Specification::DictVectorizer::New(this, 0) = v6;
  return v6;
}

uint64_t CoreML::Specification::ReduceL2LayerParams::ByteSizeLong(CoreML::Specification::ReduceL2LayerParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  unint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  *((_DWORD *)this + 8) = v2;
  uint64_t v6 = v5 + v2;
  if (*((unsigned char *)this + 36)) {
    v6 += 2;
  }
  if (*((unsigned char *)this + 37)) {
    v6 += 2;
  }
  *((_DWORD *)this + 1CoreML::Specification::DictVectorizer::New(this, 0) = v6;
  return v6;
}

uint64_t CoreML::Specification::ReduceMaxLayerParams::ByteSizeLong(CoreML::Specification::ReduceMaxLayerParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  unint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  *((_DWORD *)this + 8) = v2;
  uint64_t v6 = v5 + v2;
  if (*((unsigned char *)this + 36)) {
    v6 += 2;
  }
  if (*((unsigned char *)this + 37)) {
    v6 += 2;
  }
  *((_DWORD *)this + 1CoreML::Specification::DictVectorizer::New(this, 0) = v6;
  return v6;
}

uint64_t CoreML::Specification::ReduceMinLayerParams::ByteSizeLong(CoreML::Specification::ReduceMinLayerParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  unint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  *((_DWORD *)this + 8) = v2;
  uint64_t v6 = v5 + v2;
  if (*((unsigned char *)this + 36)) {
    v6 += 2;
  }
  if (*((unsigned char *)this + 37)) {
    v6 += 2;
  }
  *((_DWORD *)this + 1CoreML::Specification::DictVectorizer::New(this, 0) = v6;
  return v6;
}

uint64_t CoreML::Specification::ReduceSumLayerParams::ByteSizeLong(CoreML::Specification::ReduceSumLayerParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  unint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  *((_DWORD *)this + 8) = v2;
  uint64_t v6 = v5 + v2;
  if (*((unsigned char *)this + 36)) {
    v6 += 2;
  }
  if (*((unsigned char *)this + 37)) {
    v6 += 2;
  }
  *((_DWORD *)this + 1CoreML::Specification::DictVectorizer::New(this, 0) = v6;
  return v6;
}

uint64_t CoreML::Specification::ReduceProdLayerParams::ByteSizeLong(CoreML::Specification::ReduceProdLayerParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  unint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  *((_DWORD *)this + 8) = v2;
  uint64_t v6 = v5 + v2;
  if (*((unsigned char *)this + 36)) {
    v6 += 2;
  }
  if (*((unsigned char *)this + 37)) {
    v6 += 2;
  }
  *((_DWORD *)this + 1CoreML::Specification::DictVectorizer::New(this, 0) = v6;
  return v6;
}

uint64_t CoreML::Specification::ReduceMeanLayerParams::ByteSizeLong(CoreML::Specification::ReduceMeanLayerParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  unint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  *((_DWORD *)this + 8) = v2;
  uint64_t v6 = v5 + v2;
  if (*((unsigned char *)this + 36)) {
    v6 += 2;
  }
  if (*((unsigned char *)this + 37)) {
    v6 += 2;
  }
  *((_DWORD *)this + 1CoreML::Specification::DictVectorizer::New(this, 0) = v6;
  return v6;
}

uint64_t CoreML::Specification::ReduceLogSumLayerParams::ByteSizeLong(CoreML::Specification::ReduceLogSumLayerParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  unint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  *((_DWORD *)this + 8) = v2;
  uint64_t v6 = v5 + v2;
  if (*((unsigned char *)this + 36)) {
    v6 += 2;
  }
  if (*((unsigned char *)this + 37)) {
    v6 += 2;
  }
  *((_DWORD *)this + 1CoreML::Specification::DictVectorizer::New(this, 0) = v6;
  return v6;
}

uint64_t CoreML::Specification::ReduceSumSquareLayerParams::ByteSizeLong(CoreML::Specification::ReduceSumSquareLayerParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  unint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  *((_DWORD *)this + 8) = v2;
  uint64_t v6 = v5 + v2;
  if (*((unsigned char *)this + 36)) {
    v6 += 2;
  }
  if (*((unsigned char *)this + 37)) {
    v6 += 2;
  }
  *((_DWORD *)this + 1CoreML::Specification::DictVectorizer::New(this, 0) = v6;
  return v6;
}

uint64_t CoreML::Specification::ReduceLogSumExpLayerParams::ByteSizeLong(CoreML::Specification::ReduceLogSumExpLayerParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  unint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  *((_DWORD *)this + 8) = v2;
  uint64_t v6 = v5 + v2;
  if (*((unsigned char *)this + 36)) {
    v6 += 2;
  }
  if (*((unsigned char *)this + 37)) {
    v6 += 2;
  }
  *((_DWORD *)this + 1CoreML::Specification::DictVectorizer::New(this, 0) = v6;
  return v6;
}

unint64_t CoreML::Specification::MatrixBandPartLayerParams::ByteSizeLong(CoreML::Specification::MatrixBandPartLayerParams *this)
{
  uint64_t v1 = *((void *)this + 2);
  uint64_t v2 = *((void *)this + 3);
  unint64_t v3 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1) {
    unint64_t v4 = v3 + 1;
  }
  else {
    unint64_t v4 = 0;
  }
  unint64_t v5 = v4 + ((9 * (__clz(v2 | 1) ^ 0x3F) + 73) >> 6);
  if (v2) {
    unint64_t v4 = v5 + 1;
  }
  *((_DWORD *)this + 8) = v4;
  return v4;
}

uint64_t CoreML::Specification::LayerNormalizationLayerParams::ByteSizeLong(CoreML::Specification::LayerNormalizationLayerParams *this)
{
  uint64_t v2 = *((unsigned int *)this + 4);
  if ((int)v2 < 1)
  {
    uint64_t v3 = 0;
LABEL_8:
    uint64_t v6 = 0;
    goto LABEL_10;
  }
  uint64_t v3 = 0;
  unint64_t v4 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v5 = *v4++;
    v3 += (9 * (__clz(v5 | 1) ^ 0x3F) + 73) >> 6;
    --v2;
  }
  while (v2);
  if (!v3) {
    goto LABEL_8;
  }
  if ((v3 & 0x80000000) != 0) {
    uint64_t v6 = 11;
  }
  else {
    uint64_t v6 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  *((_DWORD *)this + 8) = v3;
  uint64_t v7 = v6 + v3;
  if (this != (CoreML::Specification::LayerNormalizationLayerParams *)&CoreML::Specification::_LayerNormalizationLayerParams_default_instance_)
  {
    uint64_t v8 = (CoreML::Specification::WeightParams *)*((void *)this + 5);
    if (v8)
    {
      uint64_t v9 = CoreML::Specification::WeightParams::ByteSizeLong(v8);
      v7 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    float v10 = (CoreML::Specification::WeightParams *)*((void *)this + 6);
    if (v10)
    {
      uint64_t v11 = CoreML::Specification::WeightParams::ByteSizeLong(v10);
      v7 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  if (*((float *)this + 14) == 0.0) {
    uint64_t result = v7;
  }
  else {
    uint64_t result = v7 + 5;
  }
  *((_DWORD *)this + 15) = result;
  return result;
}

uint64_t CoreML::Specification::NonMaximumSuppressionLayerParams::ByteSizeLong(CoreML::Specification::NonMaximumSuppressionLayerParams *this)
{
  uint64_t v1 = 5;
  if (*((float *)this + 4) == 0.0) {
    uint64_t v1 = 0;
  }
  if (*((float *)this + 5) != 0.0) {
    v1 += 5;
  }
  uint64_t v2 = *((void *)this + 3);
  unint64_t v3 = v1 + ((9 * (__clz(v2 | 1) ^ 0x3F) + 73) >> 6);
  if (v2) {
    uint64_t v1 = v3 + 1;
  }
  if (*((unsigned char *)this + 32)) {
    v1 += 2;
  }
  *((_DWORD *)this + 9) = v1;
  return v1;
}

unint64_t CoreML::Specification::OneHotLayerParams::ByteSizeLong(CoreML::Specification::OneHotLayerParams *this)
{
  uint64_t v1 = *((void *)this + 2);
  uint64_t v2 = *((void *)this + 3);
  unint64_t v3 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1) {
    unint64_t v4 = v3 + 1;
  }
  else {
    unint64_t v4 = 0;
  }
  unint64_t v5 = v4 + ((9 * (__clz(v2 | 1) ^ 0x3F) + 73) >> 6);
  if (v2) {
    unint64_t v4 = v5 + 1;
  }
  if (*((float *)this + 8) != 0.0) {
    v4 += 5;
  }
  if (*((float *)this + 9) != 0.0) {
    v4 += 5;
  }
  *((_DWORD *)this + 1CoreML::Specification::DictVectorizer::New(this, 0) = v4;
  return v4;
}

unint64_t CoreML::Specification::CumSumLayerParams::ByteSizeLong(CoreML::Specification::CumSumLayerParams *this)
{
  uint64_t v1 = *((void *)this + 2);
  unint64_t v2 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1) {
    unint64_t v3 = v2 + 1;
  }
  else {
    unint64_t v3 = 0;
  }
  if (*((unsigned char *)this + 24)) {
    v3 += 2;
  }
  if (*((unsigned char *)this + 25)) {
    v3 += 2;
  }
  *((_DWORD *)this + 7) = v3;
  return v3;
}

uint64_t CoreML::Specification::Pooling3DLayerParams::ByteSizeLong(CoreML::Specification::Pooling3DLayerParams *this)
{
  int v1 = *((_DWORD *)this + 4);
  if (v1)
  {
    if (v1 < 0) {
      uint64_t v2 = 10;
    }
    else {
      uint64_t v2 = (9 * (__clz(v1 | 1) ^ 0x1F) + 73) >> 6;
    }
    uint64_t v3 = v2 + 1;
  }
  else
  {
    uint64_t v3 = 0;
  }
  int v4 = *((_DWORD *)this + 5);
  if (v4)
  {
    if (v4 < 0) {
      uint64_t v5 = 10;
    }
    else {
      uint64_t v5 = (9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6;
    }
    v3 += v5 + 1;
  }
  int v6 = *((_DWORD *)this + 6);
  if (v6)
  {
    if (v6 < 0) {
      uint64_t v7 = 10;
    }
    else {
      uint64_t v7 = (9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6;
    }
    v3 += v7 + 1;
  }
  int v8 = *((_DWORD *)this + 7);
  if (v8)
  {
    if (v8 < 0) {
      uint64_t v9 = 10;
    }
    else {
      uint64_t v9 = (9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6;
    }
    v3 += v9 + 1;
  }
  int v10 = *((_DWORD *)this + 8);
  if (v10)
  {
    if (v10 < 0) {
      uint64_t v11 = 10;
    }
    else {
      uint64_t v11 = (9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6;
    }
    v3 += v11 + 1;
  }
  int v12 = *((_DWORD *)this + 9);
  if (v12)
  {
    if (v12 < 0) {
      uint64_t v13 = 10;
    }
    else {
      uint64_t v13 = (9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6;
    }
    v3 += v13 + 1;
  }
  int v14 = *((_DWORD *)this + 10);
  if (v14)
  {
    if (v14 < 0) {
      uint64_t v15 = 11;
    }
    else {
      uint64_t v15 = ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v15;
  }
  int v16 = *((_DWORD *)this + 11);
  if (v16)
  {
    if (v16 < 0) {
      uint64_t v17 = 11;
    }
    else {
      uint64_t v17 = ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v17;
  }
  int v18 = *((_DWORD *)this + 12);
  if (v18)
  {
    if (v18 < 0) {
      uint64_t v19 = 11;
    }
    else {
      uint64_t v19 = ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v19;
  }
  int v20 = *((_DWORD *)this + 13);
  if (v20)
  {
    if (v20 < 0) {
      uint64_t v21 = 11;
    }
    else {
      uint64_t v21 = ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v21;
  }
  int v22 = *((_DWORD *)this + 14);
  if (v22)
  {
    if (v22 < 0) {
      uint64_t v23 = 11;
    }
    else {
      uint64_t v23 = ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v23;
  }
  int v24 = *((_DWORD *)this + 15);
  if (v24)
  {
    if (v24 < 0) {
      uint64_t v25 = 11;
    }
    else {
      uint64_t v25 = ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v25;
  }
  int v26 = *((_DWORD *)this + 16);
  if (v26)
  {
    if (v26 < 0) {
      uint64_t v27 = 11;
    }
    else {
      uint64_t v27 = ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v27;
  }
  if (*((unsigned char *)this + 68)) {
    v3 += 2;
  }
  int v28 = *((_DWORD *)this + 18);
  if (v28)
  {
    if (v28 < 0) {
      uint64_t v29 = 11;
    }
    else {
      uint64_t v29 = ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v29;
  }
  *((_DWORD *)this + 19) = v3;
  return v3;
}

unint64_t CoreML::Specification::SliceBySizeLayerParams::ByteSizeLong(CoreML::Specification::SliceBySizeLayerParams *this)
{
  uint64_t v1 = *((void *)this + 2);
  uint64_t v2 = *((void *)this + 3);
  unint64_t v3 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1) {
    unint64_t v4 = v3 + 1;
  }
  else {
    unint64_t v4 = 0;
  }
  unint64_t v5 = v4 + ((9 * (__clz(v2 | 1) ^ 0x3F) + 73) >> 6);
  if (v2) {
    unint64_t v4 = v5 + 1;
  }
  *((_DWORD *)this + 8) = v4;
  return v4;
}

uint64_t CoreML::Specification::Convolution3DLayerParams::ByteSizeLong(CoreML::Specification::Convolution3DLayerParams *this)
{
  uint64_t v2 = *((unsigned int *)this + 4);
  if ((int)v2 < 1)
  {
    uint64_t v3 = 0;
LABEL_8:
    uint64_t v7 = 0;
    goto LABEL_11;
  }
  uint64_t v3 = 0;
  unint64_t v4 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v5 = *v4++;
    v3 += (9 * (__clz(v5 | 1) ^ 0x3F) + 73) >> 6;
    --v2;
  }
  while (v2);
  if (!v3) {
    goto LABEL_8;
  }
  if ((v3 & 0x80000000) != 0) {
    uint64_t v6 = 10;
  }
  else {
    uint64_t v6 = (9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6;
  }
  uint64_t v7 = v6 + 2;
LABEL_11:
  *((_DWORD *)this + 8) = v3;
  uint64_t v8 = v7 + v3;
  if (this != (CoreML::Specification::Convolution3DLayerParams *)&CoreML::Specification::_Convolution3DLayerParams_default_instance_)
  {
    uint64_t v9 = (CoreML::Specification::WeightParams *)*((void *)this + 5);
    if (v9)
    {
      uint64_t v10 = CoreML::Specification::WeightParams::ByteSizeLong(v9);
      v8 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    uint64_t v11 = (CoreML::Specification::WeightParams *)*((void *)this + 6);
    if (v11)
    {
      uint64_t v12 = CoreML::Specification::WeightParams::ByteSizeLong(v11);
      v8 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
  }
  int v13 = *((_DWORD *)this + 14);
  if (v13)
  {
    if (v13 < 0) {
      uint64_t v14 = 10;
    }
    else {
      uint64_t v14 = (9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6;
    }
    v8 += v14 + 1;
  }
  int v15 = *((_DWORD *)this + 15);
  if (v15)
  {
    if (v15 < 0) {
      uint64_t v16 = 10;
    }
    else {
      uint64_t v16 = (9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6;
    }
    v8 += v16 + 1;
  }
  int v17 = *((_DWORD *)this + 16);
  if (v17)
  {
    if (v17 < 0) {
      uint64_t v18 = 10;
    }
    else {
      uint64_t v18 = (9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6;
    }
    v8 += v18 + 1;
  }
  int v19 = *((_DWORD *)this + 17);
  if (v19)
  {
    if (v19 < 0) {
      uint64_t v20 = 10;
    }
    else {
      uint64_t v20 = (9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6;
    }
    v8 += v20 + 2;
  }
  int v21 = *((_DWORD *)this + 18);
  if (v21)
  {
    if (v21 < 0) {
      uint64_t v22 = 10;
    }
    else {
      uint64_t v22 = (9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6;
    }
    v8 += v22 + 2;
  }
  int v23 = *((_DWORD *)this + 19);
  if (v23)
  {
    if (v23 < 0) {
      uint64_t v24 = 10;
    }
    else {
      uint64_t v24 = (9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6;
    }
    v8 += v24 + 2;
  }
  int v25 = *((_DWORD *)this + 20);
  if (v25)
  {
    if (v25 < 0) {
      uint64_t v26 = 10;
    }
    else {
      uint64_t v26 = (9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6;
    }
    v8 += v26 + 2;
  }
  int v27 = *((_DWORD *)this + 21);
  if (v27)
  {
    if (v27 < 0) {
      uint64_t v28 = 10;
    }
    else {
      uint64_t v28 = (9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6;
    }
    v8 += v28 + 2;
  }
  int v29 = *((_DWORD *)this + 22);
  if (v29)
  {
    if (v29 < 0) {
      uint64_t v30 = 10;
    }
    else {
      uint64_t v30 = (9 * (__clz(v29 | 1) ^ 0x1F) + 73) >> 6;
    }
    v8 += v30 + 2;
  }
  int v31 = *((_DWORD *)this + 23);
  if (v31)
  {
    if (v31 < 0) {
      uint64_t v32 = 10;
    }
    else {
      uint64_t v32 = (9 * (__clz(v31 | 1) ^ 0x1F) + 73) >> 6;
    }
    v8 += v32 + 2;
  }
  int v33 = *((_DWORD *)this + 24);
  if (v33)
  {
    if (v33 < 0) {
      uint64_t v34 = 10;
    }
    else {
      uint64_t v34 = (9 * (__clz(v33 | 1) ^ 0x1F) + 73) >> 6;
    }
    v8 += v34 + 2;
  }
  int v35 = *((_DWORD *)this + 25);
  if (v35)
  {
    if (v35 < 0) {
      uint64_t v36 = 12;
    }
    else {
      uint64_t v36 = ((9 * (__clz(v35 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    v8 += v36;
  }
  if (*((unsigned char *)this + 104)) {
    uint64_t v37 = v8 + 3;
  }
  else {
    uint64_t v37 = v8;
  }
  if (*((unsigned char *)this + 105)) {
    uint64_t result = v37 + 3;
  }
  else {
    uint64_t result = v37;
  }
  int v39 = *((_DWORD *)this + 27);
  if (v39)
  {
    if (v39 < 0) {
      uint64_t v40 = 12;
    }
    else {
      uint64_t v40 = ((9 * (__clz(v39 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    result += v40;
  }
  int v41 = *((_DWORD *)this + 28);
  if (v41)
  {
    if (v41 < 0) {
      uint64_t v42 = 12;
    }
    else {
      uint64_t v42 = ((9 * (__clz(v41 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    result += v42;
  }
  int v43 = *((_DWORD *)this + 29);
  if (v43)
  {
    if (v43 < 0) {
      uint64_t v44 = 12;
    }
    else {
      uint64_t v44 = ((9 * (__clz(v43 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    result += v44;
  }
  int v45 = *((_DWORD *)this + 30);
  if (v45)
  {
    if (v45 < 0) {
      uint64_t v46 = 12;
    }
    else {
      uint64_t v46 = ((9 * (__clz(v45 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    result += v46;
  }
  int v47 = *((_DWORD *)this + 31);
  if (v47)
  {
    if (v47 < 0) {
      uint64_t v48 = 12;
    }
    else {
      uint64_t v48 = ((9 * (__clz(v47 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    result += v48;
  }
  int v49 = *((_DWORD *)this + 32);
  if (v49)
  {
    if (v49 < 0) {
      uint64_t v50 = 12;
    }
    else {
      uint64_t v50 = ((9 * (__clz(v49 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    result += v50;
  }
  int v51 = *((_DWORD *)this + 33);
  if (v51)
  {
    if (v51 < 0) {
      uint64_t v52 = 12;
    }
    else {
      uint64_t v52 = ((9 * (__clz(v51 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    result += v52;
  }
  *((_DWORD *)this + 34) = result;
  return result;
}

uint64_t CoreML::Specification::WeightParams::ByteSizeLong(CoreML::Specification::WeightParams *this)
{
  uint64_t v2 = *((unsigned int *)this + 4);
  uint64_t v3 = 4 * v2;
  if (v2)
  {
    if ((v3 & 0x80000000) != 0) {
      uint64_t v4 = 11;
    }
    else {
      uint64_t v4 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v4 = 0;
  }
  *((_DWORD *)this + 8) = v3;
  uint64_t v5 = *((void *)this + 5);
  if (*(char *)(v5 + 23) < 0) {
    uint64_t v6 = *(void *)(v5 + 8);
  }
  else {
    uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
  }
  uint64_t v7 = v4 + v3;
  if (v6)
  {
    if (*(char *)(v5 + 23) >= 0) {
      uint64_t v8 = *(unsigned __int8 *)(v5 + 23);
    }
    else {
      uint64_t v8 = *(void *)(v5 + 8);
    }
    v7 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v9 = *((void *)this + 6);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
  if (*(char *)(v9 + 23) < 0)
  {
    if (!*(void *)(v9 + 8)) {
      goto LABEL_19;
    }
  }
  else if (!*(unsigned char *)(v9 + 23))
  {
    goto LABEL_19;
  }
  uint64_t v11 = *(void *)(v9 + 8);
  if ((v10 & 0x80u) == 0) {
    uint64_t v11 = v10;
  }
  v7 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_19:
  uint64_t v12 = *((void *)this + 7);
  uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
  if (*(char *)(v12 + 23) < 0)
  {
    if (!*(void *)(v12 + 8)) {
      goto LABEL_24;
    }
  }
  else if (!*(unsigned char *)(v12 + 23))
  {
    goto LABEL_24;
  }
  uint64_t v14 = *(void *)(v12 + 8);
  if ((v13 & 0x80u) == 0) {
    uint64_t v14 = v13;
  }
  v7 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_24:
  if (this != (CoreML::Specification::WeightParams *)&CoreML::Specification::_WeightParams_default_instance_)
  {
    int v15 = (CoreML::Specification::QuantizationParams *)*((void *)this + 8);
    if (v15)
    {
      uint64_t v16 = CoreML::Specification::QuantizationParams::ByteSizeLong(v15);
      v7 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
  }
  if (*((unsigned char *)this + 72)) {
    uint64_t result = v7 + 3;
  }
  else {
    uint64_t result = v7;
  }
  *((_DWORD *)this + 19) = result;
  return result;
}

uint64_t CoreML::Specification::QuantizationParams::ByteSizeLong(CoreML::Specification::QuantizationParams *this)
{
  uint64_t v2 = *((void *)this + 2);
  unint64_t v3 = (9 * (__clz(v2 | 1) ^ 0x3F) + 73) >> 6;
  if (v2) {
    uint64_t v4 = v3 + 1;
  }
  else {
    uint64_t v4 = 0;
  }
  int v5 = *((_DWORD *)this + 9);
  if (v5 == 102)
  {
    uint64_t v9 = (unsigned int *)*((void *)this + 3);
    uint64_t v10 = v9[4];
    uint64_t v11 = 4 * v10;
    if (v10)
    {
      if ((v11 & 0x80000000) != 0) {
        uint64_t v12 = 11;
      }
      else {
        uint64_t v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
    }
    else
    {
      uint64_t v12 = 0;
    }
    uint64_t v13 = v12 + v11;
    v9[8] = v11;
    v9[9] = v13;
    uint64_t v7 = (9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6;
    uint64_t v8 = v4 + v13;
    goto LABEL_13;
  }
  if (v5 == 101)
  {
    uint64_t v6 = CoreML::Specification::LinearQuantizationParams::ByteSizeLong(*((CoreML::Specification::LinearQuantizationParams **)this
                                                                       + 3));
    uint64_t v7 = (9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6;
    uint64_t v8 = v4 + v6;
LABEL_13:
    uint64_t v4 = v8 + v7 + 2;
  }
  *((_DWORD *)this + 8) = v4;
  return v4;
}

uint64_t CoreML::Specification::LinearQuantizationParams::ByteSizeLong(CoreML::Specification::LinearQuantizationParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  uint64_t v2 = 4 * v1;
  if (v1)
  {
    if ((v2 & 0x80000000) != 0) {
      uint64_t v3 = 11;
    }
    else {
      uint64_t v3 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  *((_DWORD *)this + 8) = v2;
  uint64_t v4 = v3 + v2;
  uint64_t v5 = *((unsigned int *)this + 10);
  uint64_t v6 = 4 * v5;
  if (v5)
  {
    if ((v6 & 0x80000000) != 0) {
      uint64_t v7 = 11;
    }
    else {
      uint64_t v7 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v4 += v7;
  }
  uint64_t v8 = v4 + v6;
  *((_DWORD *)this + 14) = v6;
  *((_DWORD *)this + 15) = v8;
  return v8;
}

google::protobuf::Arena **google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Wrap(google::protobuf::Arena *a1, google::protobuf::Arena *a2, google::protobuf::Arena *a3)
{
  if (!a3) {
    operator new();
  }
  result[1] = 0;
  result[2] = (google::protobuf::Arena *)&google::protobuf::internal::fixed_address_empty_string;
  result[3] = 0;
  result[4] = a3;
  *uint64_t result = (google::protobuf::Arena *)&unk_1EF0DB580;
  result[6] = a1;
  result[7] = a2;
  *((_DWORD *)result + 1CoreML::Specification::DictVectorizer::New(this, 0) = 3;
  return result;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::ByteSizeLong(_DWORD *a1)
{
  int v2 = a1[10];
  if (v2)
  {
    uint64_t v7 = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 136))(a1);
    int v8 = *(unsigned __int8 *)(v7 + 23);
    if ((v8 & 0x80u) != 0) {
      int v8 = *(_DWORD *)(v7 + 8);
    }
    uint64_t v3 = (int)(v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6)) + 1;
    if ((a1[10] & 2) != 0) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v6 = 0;
    return v6 + v3;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) == 0) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v4 = (CoreML::Specification::CustomLayerParams_CustomLayerParamValue *)(*(uint64_t (**)(_DWORD *))(*(void *)a1 + 144))(a1);
  uint64_t v5 = CoreML::Specification::CustomLayerParams_CustomLayerParamValue::ByteSizeLong(v4);
  uint64_t v6 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  return v6 + v3;
}

uint64_t CoreML::Specification::CustomLayerParams_CustomLayerParamValue::ByteSizeLong(CoreML::Specification::CustomLayerParams_CustomLayerParamValue *this)
{
  int v1 = *((_DWORD *)this + 7);
  if (v1 <= 29)
  {
    if (v1 == 10)
    {
      uint64_t v3 = 9;
      goto LABEL_19;
    }
    if (v1 != 20)
    {
      uint64_t v3 = 0;
      goto LABEL_19;
    }
    uint64_t v4 = *((void *)this + 2);
    uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v6 = *(void *)(v4 + 8);
    if ((v5 & 0x80u) == 0) {
      uint64_t v6 = v5;
    }
    unint64_t v7 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
    goto LABEL_15;
  }
  if (v1 == 30)
  {
    int v8 = *((_DWORD *)this + 4);
    if (v8 < 0) {
      uint64_t v3 = 12;
    }
    else {
      uint64_t v3 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    goto LABEL_19;
  }
  if (v1 == 40)
  {
    unint64_t v7 = (9 * (__clz(*((void *)this + 2) | 1) ^ 0x3F) + 73) >> 6;
LABEL_15:
    uint64_t v3 = v7 + 2;
    goto LABEL_19;
  }
  BOOL v2 = v1 == 50;
  uint64_t v3 = 3;
  if (!v2) {
    uint64_t v3 = 0;
  }
LABEL_19:
  *((_DWORD *)this + 6) = v3;
  return v3;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::MapEntryWrapper::value(uint64_t a1)
{
  return *(void *)(a1 + 56);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::MapEntryWrapper::key(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::InternalSerializeWithCachedSizesToArray(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  uint64_t v6 = (const void **)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 136))(a1);
  *a3 = 10;
  unint64_t v7 = google::protobuf::io::CodedOutputStream::WriteStringWithSizeToArray(v6, a3 + 1);
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 144))(a1);
  *unint64_t v7 = 18;
  uint64_t v9 = v7 + 1;
  unsigned int v10 = (*(uint64_t (**)(uint64_t))(*(void *)v8 + 120))(v8);
  if (v10 < 0x80)
  {
    LOBYTE(v11) = v10;
  }
  else
  {
    do
    {
      *v9++ = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      unsigned int v12 = v10 >> 14;
      v10 >>= 7;
    }
    while (v12);
  }
  *uint64_t v9 = v11;
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, unsigned char *))(*(void *)v8 + 128);

  return v13(v8, a2, v9 + 1);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::GetCachedSize(_DWORD *a1)
{
  int v2 = a1[10];
  if (v2)
  {
    uint64_t v6 = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 136))(a1);
    int v7 = *(unsigned __int8 *)(v6 + 23);
    if ((v7 & 0x80u) != 0) {
      int v7 = *(_DWORD *)(v6 + 8);
    }
    unsigned int v3 = v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((a1[10] & 2) != 0) {
      goto LABEL_3;
    }
LABEL_7:
    unsigned int v5 = 0;
    return v5 + v3;
  }
  unsigned int v3 = 0;
  if ((v2 & 2) == 0) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v4 = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 144))(a1);
  unsigned int v5 = *(_DWORD *)(v4 + 24) + ((9 * (__clz(*(_DWORD *)(v4 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
  return v5 + v3;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::SerializeWithCachedSizes(uint64_t a1, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 136))(a1);
  google::protobuf::internal::WireFormatLite::WriteString(1u, v4, a2);
  unsigned int v5 = (google::protobuf::internal::WireFormatLite *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 144))(a1);

  return google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(v5, a2, v6, v7);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::MergePartialFromCodedStream(uint64_t a1, google::protobuf::io::CodedInputStream *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        unsigned int v5 = *(char **)this;
        if (*(void *)this >= *((void *)this + 1))
        {
          LODWORD(TagFallback) = 0;
        }
        else
        {
          unint64_t TagFallback = *v5;
          if ((*v5 & 0x80000000) == 0)
          {
            *(void *)this = v5 + 1;
            goto LABEL_6;
          }
        }
        unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(this, TagFallback);
LABEL_6:
        if (TagFallback != 10) {
          break;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        int v7 = *(long long **)(a1 + 16);
        if (v7 == &google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstance();
        }
        uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((unsigned __int8 **)this, (std::string *)v7);
        if (!result) {
          return result;
        }
        int v9 = *(_DWORD *)(a1 + 40) | 1;
        *(_DWORD *)(a1 + 4CoreML::Specification::DictVectorizer::New(this, 0) = v9;
        unsigned int v10 = *(char **)this;
        if (*(void *)this < *((void *)this + 1) && *v10 == 18)
        {
          *(void *)this = v10 + 1;
          goto LABEL_19;
        }
      }
      if (TagFallback != 18) {
        break;
      }
      int v9 = *(_DWORD *)(a1 + 40);
LABEL_19:
      *(_DWORD *)(a1 + 4CoreML::Specification::DictVectorizer::New(this, 0) = v9 | 2;
      Aligned = *(google::protobuf::Arena ***)(a1 + 24);
      if (!Aligned)
      {
        unsigned int v12 = *(google::protobuf::Arena **)(a1 + 32);
        if (!v12) {
          operator new();
        }
        CoreML::Specification::CustomLayerParams_CustomLayerParamValue::CustomLayerParams_CustomLayerParamValue((CoreML::Specification::CustomLayerParams_CustomLayerParamValue *)Aligned);
        uint64_t v13 = google::protobuf::Arena::AllocateAligned(v12, 0, 24);
        *uint64_t v13 = (google::protobuf::Arena *)Aligned;
        v13[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::CustomLayerParams_CustomLayerParamValue>;
        uint64_t v14 = (unint64_t *)((char *)v12 + 32);
        do
          unint64_t v15 = __ldxr(v14);
        while (__stxr((unint64_t)v13, v14));
        v13[2] = (google::protobuf::Arena *)v15;
        *(void *)(a1 + 24) = Aligned;
      }
      uint64_t v16 = *(char **)this;
      if (*(void *)this >= *((void *)this + 1) || *v16 < 0)
      {
        int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(this);
        if (VarintSizeAsIntFallback < 0) {
          return 0;
        }
      }
      else
      {
        int VarintSizeAsIntFallback = *v16;
        *(void *)this = v16 + 1;
      }
      int v18 = google::protobuf::io::CodedInputStream::PushLimit(this, VarintSizeAsIntFallback);
      int v20 = *((_DWORD *)this + 13);
      BOOL v21 = __OFSUB__(v20--, 1);
      *((_DWORD *)this + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v20;
      if (v20 < 0 != v21) {
        return 0;
      }
      int v22 = v18;
      uint64_t result = CoreML::Specification::CustomLayerParams_CustomLayerParamValue::MergePartialFromCodedStream((CoreML::Specification::CustomLayerParams_CustomLayerParamValue *)Aligned, this, v19);
      if (!result) {
        return result;
      }
      uint64_t result = google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(this, v22);
      if (!result) {
        return result;
      }
      *(_DWORD *)(a1 + 40) |= 2u;
      if (*(void *)this == *((void *)this + 1)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(this, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

void sub_19EB7AFA4(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A3C40EED1C14FLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::CustomLayerParams_CustomLayerParamValue *CoreML::Specification::CustomLayerParams_CustomLayerParamValue::CustomLayerParams_CustomLayerParamValue(CoreML::Specification::CustomLayerParams_CustomLayerParamValue *this)
{
  *(void *)this = &unk_1EF0D9230;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::CustomLayerParams_CustomLayerParamValue *)&CoreML::Specification::_CustomLayerParams_CustomLayerParamValue_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  return this;
}

void sub_19EB7B028(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::CustomLayerParams_CustomLayerParamValue::MergePartialFromCodedStream(CoreML::Specification::CustomLayerParams_CustomLayerParamValue *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  unsigned int v5 = (std::string **)((char *)this + 16);
  do
  {
    while (1)
    {
      uint64_t v6 = *(unsigned __int8 **)a2;
      unint64_t v7 = *((void *)a2 + 1);
      if (*(void *)a2 >= v7)
      {
        LODWORD(v9) = 0;
      }
      else
      {
        uint64_t v8 = v6 + 1;
        uint64_t v9 = *v6;
        if ((char)*v6 >= 1)
        {
          *(void *)a2 = v8;
          unint64_t v10 = v9 | 0x100000000;
          if ((v10 & 0x100000000) == 0) {
            goto LABEL_9;
          }
          goto LABEL_17;
        }
        if ((unint64_t)v8 < v7)
        {
          int v11 = *v8;
          if ((v9 & ~v11) >= 0x80)
          {
            *(void *)a2 = v6 + 2;
            unint64_t v10 = (v9 + (v11 << 7) - 128) | 0x100000000;
            goto LABEL_17;
          }
        }
      }
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v9);
      unint64_t v10 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
      if ((v10 & 0x100000000) == 0) {
        goto LABEL_9;
      }
LABEL_17:
      unsigned int v14 = v10 >> 3;
      if (v10 >> 3 <= 0x1D) {
        break;
      }
      if (v14 == 30)
      {
        if (v10 != 240) {
          goto LABEL_9;
        }
        CoreML::Specification::CustomLayerParams_CustomLayerParamValue::clear_value((uint64_t)this);
        int v17 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1))
        {
          int v18 = 0;
        }
        else
        {
          int v18 = *v17;
          if ((*v17 & 0x80000000) == 0)
          {
            *(void *)a2 = v17 + 1;
LABEL_63:
            *(_DWORD *)unsigned int v5 = v18;
            goto LABEL_64;
          }
        }
        uint64_t Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v18);
        int v18 = Varint32Fallback;
        if (Varint32Fallback < 0) {
          return 0;
        }
        goto LABEL_63;
      }
      if (v14 == 40)
      {
        if (v10 != 64) {
          goto LABEL_9;
        }
        CoreML::Specification::CustomLayerParams_CustomLayerParamValue::clear_value((uint64_t)this);
        unsigned int v19 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v19 < 0)
        {
          unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v29 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t Varint64Fallback = *v19;
          *(void *)a2 = v19 + 1;
        }
        *unsigned int v5 = (std::string *)Varint64Fallback;
LABEL_64:
        *((_DWORD *)this + 7) = v14;
      }
      else
      {
        if (v14 == 50 && v10 == 144)
        {
          CoreML::Specification::CustomLayerParams_CustomLayerParamValue::clear_value((uint64_t)this);
          unint64_t v15 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v15 < 0)
          {
            unint64_t v16 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v28 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            unint64_t v16 = *v15;
            *(void *)a2 = v15 + 1;
          }
          *(unsigned char *)unsigned int v5 = v16 != 0;
          goto LABEL_64;
        }
LABEL_9:
        if (v10) {
          BOOL v12 = (v10 & 7) == 4;
        }
        else {
          BOOL v12 = 1;
        }
        if (v12) {
          return 1;
        }
        if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v10, a3) & 1) == 0)return 0; {
      }
        }
    }
    if (v14 == 10)
    {
      if (v10 == 81)
      {
        CoreML::Specification::CustomLayerParams_CustomLayerParamValue::clear_value((uint64_t)this);
        unint64_t v31 = 0;
        BOOL v21 = *(unint64_t **)a2;
        if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) < 8)
        {
          uint64_t result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v31);
          if (!result) {
            return result;
          }
          unint64_t v22 = v31;
        }
        else
        {
          unint64_t v22 = *v21;
          *(void *)a2 = v21 + 1;
        }
        *unsigned int v5 = (std::string *)v22;
        goto LABEL_64;
      }
      goto LABEL_9;
    }
    if (v14 != 20 || v10 != 162) {
      goto LABEL_9;
    }
    if (*((_DWORD *)this + 7) != 20)
    {
      CoreML::Specification::CustomLayerParams_CustomLayerParamValue::clear_value((uint64_t)this);
      *((_DWORD *)this + 7) = 20;
      *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
LABEL_44:
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
    }
    if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_44;
    }
    uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((unsigned __int8 **)a2, *v5);
    if (!result) {
      return result;
    }
    int v24 = *((_DWORD *)this + 7);
    int v25 = (std::string *)&google::protobuf::internal::fixed_address_empty_string;
    if (v24 == 20) {
      int v25 = *v5;
    }
    if (SHIBYTE(v25->__r_.__value_.__r.__words[2]) < 0) {
      int v25 = (std::string *)v25->__r_.__value_.__r.__words[0];
    }
    uint64_t v26 = (std::string *)&google::protobuf::internal::fixed_address_empty_string;
    if (v24 == 20) {
      uint64_t v26 = *v5;
    }
    if (SHIBYTE(v26->__r_.__value_.__r.__words[2]) < 0) {
      std::string::size_type size = v26->__r_.__value_.__l.__size_;
    }
    else {
      LODWORD(size) = HIBYTE(v26->__r_.__value_.__r.__words[2]);
    }
  }
  while (google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)v25, size, 0, (uint64_t)"CoreML.Specification.CustomLayerParams.CustomLayerParamValue.stringValue"));
  return 0;
}

uint64_t CoreML::Specification::CustomLayerParams_CustomLayerParamValue::clear_value(uint64_t this)
{
  uint64_t v1 = this;
  if (*(_DWORD *)(this + 28) == 20)
  {
    uint64_t v2 = *(void *)(this + 16);
    if ((long long *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
    {
      if (*(char *)(v2 + 23) < 0) {
        operator delete(*(void **)v2);
      }
      this = MEMORY[0x19F3C1920](v2, 0x1012C40EC159624);
    }
  }
  *(_DWORD *)(v1 + 28) = 0;
  return this;
}

uint64_t google::protobuf::internal::arena_destruct_object<CoreML::Specification::CustomLayerParams_CustomLayerParamValue>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

uint64_t CoreML::Specification::AdamOptimizer::GetCachedSize(CoreML::Specification::AdamOptimizer *this)
{
  return *((unsigned int *)this + 14);
}

uint64_t *CoreML::Specification::AdamOptimizer::SerializeWithCachedSizes(uint64_t *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  if (this != &CoreML::Specification::_AdamOptimizer_default_instance_)
  {
    unsigned int v5 = this;
    uint64_t v6 = this[2];
    if (v6) {
      this = (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
    }
    uint64_t v7 = v5[3];
    if (v7) {
      this = (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
    }
    uint64_t v8 = v5[4];
    if (v8) {
      this = (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)3, v8, a2, a4);
    }
    uint64_t v9 = v5[5];
    if (v9) {
      this = (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)4, v9, a2, a4);
    }
    uint64_t v10 = v5[6];
    if (v10)
    {
      return (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)5, v10, a2, a4);
    }
  }
  return this;
}

uint64_t CoreML::Specification::AdamOptimizer::MergePartialFromCodedStream(CoreML::Specification::AdamOptimizer *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      unsigned int v5 = *(char **)a2;
      if (*(void *)a2 < *((void *)a2 + 1)) {
        break;
      }
      LODWORD(v6) = 0;
LABEL_6:
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v6);
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) == 0) {
        goto LABEL_29;
      }
LABEL_7:
      switch(v7 >> 3)
      {
        case 1u:
          if (v7 != 10) {
            goto LABEL_29;
          }
          uint64_t v9 = (CoreML::Specification::DoubleParameter *)*((void *)this + 2);
          if (!v9) {
            operator new();
          }
          goto LABEL_26;
        case 2u:
          if (v7 != 18) {
            goto LABEL_29;
          }
          uint64_t v10 = (CoreML::Specification::Int64Parameter *)*((void *)this + 3);
          if (!v10) {
            operator new();
          }
          int v11 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v11 < 0)
          {
            int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            int VarintSizeAsIntFallback = *v11;
            *(void *)a2 = v11 + 1;
          }
          int v22 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          int v24 = *((_DWORD *)a2 + 13);
          BOOL v19 = __OFSUB__(v24--, 1);
          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v24;
          if (v24 < 0 != v19) {
            return 0;
          }
          int v20 = v22;
          uint64_t result = CoreML::Specification::Int64Parameter::MergePartialFromCodedStream(v10, a2, v23);
          if (!result) {
            return result;
          }
LABEL_38:
          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v20)) {
            return 0;
          }
          break;
        case 3u:
          if (v7 != 26) {
            goto LABEL_29;
          }
          uint64_t v9 = (CoreML::Specification::DoubleParameter *)*((void *)this + 4);
          if (!v9) {
            operator new();
          }
          goto LABEL_26;
        case 4u:
          if (v7 != 34) {
            goto LABEL_29;
          }
          uint64_t v9 = (CoreML::Specification::DoubleParameter *)*((void *)this + 5);
          if (!v9) {
            operator new();
          }
          goto LABEL_26;
        case 5u:
          if (v7 != 42) {
            goto LABEL_29;
          }
          uint64_t v9 = (CoreML::Specification::DoubleParameter *)*((void *)this + 6);
          if (!v9) {
            operator new();
          }
LABEL_26:
          uint64_t v13 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v13 < 0)
          {
            int v14 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v14 < 0) {
              return 0;
            }
          }
          else
          {
            int v14 = *v13;
            *(void *)a2 = v13 + 1;
          }
          int v16 = google::protobuf::io::CodedInputStream::PushLimit(a2, v14);
          int v18 = *((_DWORD *)a2 + 13);
          BOOL v19 = __OFSUB__(v18--, 1);
          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v18;
          if (v18 < 0 != v19) {
            return 0;
          }
          int v20 = v16;
          uint64_t result = CoreML::Specification::DoubleParameter::MergePartialFromCodedStream(v9, a2, v17);
          if (result) {
            goto LABEL_38;
          }
          return result;
        default:
          goto LABEL_29;
      }
    }
    uint64_t v6 = *v5;
    if (*v5 < 1) {
      goto LABEL_6;
    }
    *(void *)a2 = v5 + 1;
    unint64_t v7 = v6 | 0x100000000;
    if ((v7 & 0x100000000) != 0) {
      goto LABEL_7;
    }
LABEL_29:
    if (!v7 || (v7 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_19EB7B79C(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::AdamOptimizer::MergeFrom(std::string *this, const CoreML::Specification::AdamOptimizer *a2)
{
  unsigned int v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  if (a2 != (const CoreML::Specification::AdamOptimizer *)&CoreML::Specification::_AdamOptimizer_default_instance_)
  {
    if (*((void *)a2 + 2))
    {
      unsigned int v5 = (std::string *)v3->__r_.__value_.__r.__words[2];
      if (!v5) {
        operator new();
      }
      this = CoreML::Specification::DoubleParameter::MergeFrom(v5, *((const CoreML::Specification::DoubleParameter **)a2 + 2));
    }
    if (*((void *)a2 + 3))
    {
      int data = (std::string *)v3[1].__r_.__value_.__l.__data_;
      if (!data) {
        operator new();
      }
      this = CoreML::Specification::Int64Parameter::MergeFrom(data, *((const CoreML::Specification::Int64Parameter **)a2 + 3));
    }
    if (*((void *)a2 + 4))
    {
      std::string::size_type size = (std::string *)v3[1].__r_.__value_.__l.__size_;
      if (!size) {
        operator new();
      }
      this = CoreML::Specification::DoubleParameter::MergeFrom(size, *((const CoreML::Specification::DoubleParameter **)a2 + 4));
    }
    if (*((void *)a2 + 5))
    {
      uint64_t v8 = (std::string *)v3[1].__r_.__value_.__r.__words[2];
      if (!v8) {
        operator new();
      }
      this = CoreML::Specification::DoubleParameter::MergeFrom(v8, *((const CoreML::Specification::DoubleParameter **)a2 + 5));
    }
    if (*((void *)a2 + 6))
    {
      if (!v3[2].__r_.__value_.__r.__words[0]) {
        operator new();
      }
      uint64_t v9 = (const CoreML::Specification::DoubleParameter *)*((void *)a2 + 6);
      uint64_t v10 = (std::string *)v3[2].__r_.__value_.__l.__data_;
      return CoreML::Specification::DoubleParameter::MergeFrom(v10, v9);
    }
  }
  return this;
}

void sub_19EB7B9CC(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::AdamOptimizer::IsInitialized(CoreML::Specification::AdamOptimizer *this)
{
  return 1;
}

uint64_t CoreML::Specification::AdamOptimizer::Clear(CoreML::Specification::AdamOptimizer *this)
{
  uint64_t v2 = *((void *)this + 2);
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  *((void *)this + 2) = 0;
  uint64_t v3 = *((void *)this + 3);
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  uint64_t v4 = *((void *)this + 4);
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
  }
  *((void *)this + 4) = 0;
  uint64_t v5 = *((void *)this + 5);
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
  }
  *((void *)this + 5) = 0;
  uint64_t result = *((void *)this + 6);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 6) = 0;
  return result;
}

void CoreML::Specification::AdamOptimizer::New(CoreML::Specification::AdamOptimizer *this, google::protobuf::Arena *a2)
{
}

void sub_19EB7BB6C(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C406AB77EA5);
  _Unwind_Resume(a1);
}

CoreML::Specification::AdamOptimizer *CoreML::Specification::AdamOptimizer::AdamOptimizer(CoreML::Specification::AdamOptimizer *this)
{
  *(void *)this = &unk_1EF0CFB60;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::AdamOptimizer *)&CoreML::Specification::_AdamOptimizer_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *(_OWORD *)((char *)this + 44) = 0u;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  return this;
}

void sub_19EB7BBF8(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::AdamOptimizer>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::AdamOptimizer>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::AdamOptimizer>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::AdamOptimizer::New(CoreML::Specification::AdamOptimizer *this)
{
}

void *CoreML::Specification::AdamOptimizer::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.AdamOptimizer");
}

void CoreML::Specification::AdamOptimizer::~AdamOptimizer(CoreML::Specification::AdamOptimizer *this)
{
  CoreML::Specification::AdamOptimizer::~AdamOptimizer(this);

  JUMPOUT(0x19F3C1920);
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(void *)this = &unk_1EF0CFB60;
  if (this != (CoreML::Specification::AdamOptimizer *)&CoreML::Specification::_AdamOptimizer_default_instance_)
  {
    uint64_t v2 = *((void *)this + 2);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 3);
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = *((void *)this + 4);
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    unint64_t v5 = *((void *)this + 5);
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    }
    uint64_t v6 = *((void *)this + 6);
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::SGDOptimizer::GetCachedSize(CoreML::Specification::SGDOptimizer *this)
{
  return *((unsigned int *)this + 10);
}

uint64_t *CoreML::Specification::SGDOptimizer::SerializeWithCachedSizes(uint64_t *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  if (this != &CoreML::Specification::_SGDOptimizer_default_instance_)
  {
    unint64_t v5 = this;
    uint64_t v6 = this[2];
    if (v6) {
      this = (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
    }
    uint64_t v7 = v5[3];
    if (v7) {
      this = (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
    }
    uint64_t v8 = v5[4];
    if (v8)
    {
      return (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)3, v8, a2, a4);
    }
  }
  return this;
}

uint64_t CoreML::Specification::SGDOptimizer::MergePartialFromCodedStream(CoreML::Specification::SGDOptimizer *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      unint64_t v5 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_28;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *(void *)a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        goto LABEL_28;
      }
LABEL_7:
      unsigned int v9 = v7 >> 3;
      if (v7 >> 3 == 3)
      {
        if (v7 != 26) {
          goto LABEL_28;
        }
        int v11 = (CoreML::Specification::DoubleParameter *)*((void *)this + 4);
        if (!v11) {
          operator new();
        }
        goto LABEL_19;
      }
      if (v9 != 2) {
        break;
      }
      if (v7 != 18) {
        goto LABEL_28;
      }
      int v14 = (CoreML::Specification::Int64Parameter *)*((void *)this + 3);
      if (!v14) {
        operator new();
      }
      unint64_t v15 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v15 < 0)
      {
        int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (VarintSizeAsIntFallback < 0) {
          return 0;
        }
      }
      else
      {
        int VarintSizeAsIntFallback = *v15;
        *(void *)a2 = v15 + 1;
      }
      int v24 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      int v26 = *((_DWORD *)a2 + 13);
      BOOL v21 = __OFSUB__(v26--, 1);
      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v26;
      if (v26 < 0 != v21) {
        return 0;
      }
      int v22 = v24;
      uint64_t result = CoreML::Specification::Int64Parameter::MergePartialFromCodedStream(v14, a2, v25);
      if (!result) {
        return result;
      }
LABEL_41:
      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v22)) {
        return 0;
      }
    }
    if (v9 == 1 && v7 == 10)
    {
      int v11 = (CoreML::Specification::DoubleParameter *)*((void *)this + 2);
      if (!v11) {
        operator new();
      }
LABEL_19:
      BOOL v12 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v12 < 0)
      {
        int v13 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v13 < 0) {
          return 0;
        }
      }
      else
      {
        int v13 = *v12;
        *(void *)a2 = v12 + 1;
      }
      int v18 = google::protobuf::io::CodedInputStream::PushLimit(a2, v13);
      int v20 = *((_DWORD *)a2 + 13);
      BOOL v21 = __OFSUB__(v20--, 1);
      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v20;
      if (v20 < 0 != v21) {
        return 0;
      }
      int v22 = v18;
      uint64_t result = CoreML::Specification::DoubleParameter::MergePartialFromCodedStream(v11, a2, v19);
      if (!result) {
        return result;
      }
      goto LABEL_41;
    }
LABEL_28:
    if (!v7 || (v7 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_19EB7C0F0(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::SGDOptimizer::MergeFrom(std::string *this, const CoreML::Specification::SGDOptimizer *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  if (a2 != (const CoreML::Specification::SGDOptimizer *)&CoreML::Specification::_SGDOptimizer_default_instance_)
  {
    if (*((void *)a2 + 2))
    {
      unint64_t v5 = (std::string *)v3->__r_.__value_.__r.__words[2];
      if (!v5) {
        operator new();
      }
      this = CoreML::Specification::DoubleParameter::MergeFrom(v5, *((const CoreML::Specification::DoubleParameter **)a2 + 2));
    }
    if (*((void *)a2 + 3))
    {
      int data = (std::string *)v3[1].__r_.__value_.__l.__data_;
      if (!data) {
        operator new();
      }
      this = CoreML::Specification::Int64Parameter::MergeFrom(data, *((const CoreML::Specification::Int64Parameter **)a2 + 3));
    }
    if (*((void *)a2 + 4))
    {
      if (!v3[1].__r_.__value_.__l.__size_) {
        operator new();
      }
      unint64_t v7 = (const CoreML::Specification::DoubleParameter *)*((void *)a2 + 4);
      std::string::size_type size = (std::string *)v3[1].__r_.__value_.__l.__size_;
      return CoreML::Specification::DoubleParameter::MergeFrom(size, v7);
    }
  }
  return this;
}

void sub_19EB7C274(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::SGDOptimizer::IsInitialized(CoreML::Specification::SGDOptimizer *this)
{
  return 1;
}

uint64_t CoreML::Specification::SGDOptimizer::Clear(CoreML::Specification::SGDOptimizer *this)
{
  uint64_t v2 = *((void *)this + 2);
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  *((void *)this + 2) = 0;
  uint64_t v3 = *((void *)this + 3);
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  uint64_t result = *((void *)this + 4);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 4) = 0;
  return result;
}

void CoreML::Specification::SGDOptimizer::New(CoreML::Specification::SGDOptimizer *this, google::protobuf::Arena *a2)
{
}

void sub_19EB7C3AC(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C400A278675);
  _Unwind_Resume(a1);
}

CoreML::Specification::SGDOptimizer *CoreML::Specification::SGDOptimizer::SGDOptimizer(CoreML::Specification::SGDOptimizer *this)
{
  *(void *)this = &unk_1EF0CF738;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::SGDOptimizer *)&CoreML::Specification::_SGDOptimizer_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  *((_DWORD *)this + 1CoreML::Specification::AdamOptimizer::New(this, 0) = 0;
  *((void *)this + 4) = 0;
  return this;
}

void sub_19EB7C438(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::SGDOptimizer>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::SGDOptimizer>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::SGDOptimizer>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::SGDOptimizer::New(CoreML::Specification::SGDOptimizer *this)
{
}

void *CoreML::Specification::SGDOptimizer::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.SGDOptimizer");
}

void CoreML::Specification::SGDOptimizer::~SGDOptimizer(CoreML::Specification::SGDOptimizer *this)
{
  CoreML::Specification::SGDOptimizer::~SGDOptimizer(this);

  JUMPOUT(0x19F3C1920);
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(void *)this = &unk_1EF0CF738;
  if (this != (CoreML::Specification::SGDOptimizer *)&CoreML::Specification::_SGDOptimizer_default_instance_)
  {
    uint64_t v2 = *((void *)this + 2);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 3);
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = *((void *)this + 4);
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::Optimizer::GetCachedSize(CoreML::Specification::Optimizer *this)
{
  return *((unsigned int *)this + 6);
}

uint64_t CoreML::Specification::Optimizer::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 28);
  if (v6 == 10)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)0xA, *(void *)(this + 16), a2, a4);
    int v6 = *(_DWORD *)(v5 + 28);
  }
  if (v6 == 11)
  {
    uint64_t v7 = *(void *)(v5 + 16);
    return google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)0xB, v7, a2, a4);
  }
  return this;
}

uint64_t CoreML::Specification::Optimizer::MergePartialFromCodedStream(CoreML::Specification::Optimizer *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = *(char **)a2;
      if (*(void *)a2 < *((void *)a2 + 1)) {
        break;
      }
      LODWORD(v6) = 0;
LABEL_6:
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v6);
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) == 0) {
        goto LABEL_15;
      }
LABEL_7:
      if (v7 >> 3 == 11)
      {
        if (v7 != 90) {
          goto LABEL_15;
        }
        if (*((_DWORD *)this + 7) != 11)
        {
          CoreML::Specification::Optimizer::clear_OptimizerType((uint64_t)this);
          *((_DWORD *)this + 7) = 11;
          operator new();
        }
        uint64_t v10 = (CoreML::Specification::AdamOptimizer *)*((void *)this + 2);
        int v14 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v14 < 0)
        {
          int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0) {
            return 0;
          }
        }
        else
        {
          int VarintSizeAsIntFallback = *v14;
          *(void *)a2 = v14 + 1;
        }
        int v22 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        int v24 = *((_DWORD *)a2 + 13);
        BOOL v19 = __OFSUB__(v24--, 1);
        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v24;
        if (v24 < 0 != v19) {
          return 0;
        }
        int v20 = v22;
        uint64_t result = CoreML::Specification::AdamOptimizer::MergePartialFromCodedStream(v10, a2, v23);
        if (!result) {
          return result;
        }
      }
      else
      {
        if (v7 >> 3 != 10 || v7 != 82) {
          goto LABEL_15;
        }
        if (*((_DWORD *)this + 7) != 10)
        {
          CoreML::Specification::Optimizer::clear_OptimizerType((uint64_t)this);
          *((_DWORD *)this + 7) = 10;
          operator new();
        }
        unsigned int v9 = (CoreML::Specification::SGDOptimizer *)*((void *)this + 2);
        BOOL v12 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v12 < 0)
        {
          int v13 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v13 < 0) {
            return 0;
          }
        }
        else
        {
          int v13 = *v12;
          *(void *)a2 = v12 + 1;
        }
        int v16 = google::protobuf::io::CodedInputStream::PushLimit(a2, v13);
        int v18 = *((_DWORD *)a2 + 13);
        BOOL v19 = __OFSUB__(v18--, 1);
        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v18;
        if (v18 < 0 != v19) {
          return 0;
        }
        int v20 = v16;
        uint64_t result = CoreML::Specification::SGDOptimizer::MergePartialFromCodedStream(v9, a2, v17);
        if (!result) {
          return result;
        }
      }
      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v20)) {
        return 0;
      }
    }
    uint64_t v6 = *v5;
    if (*v5 < 1) {
      goto LABEL_6;
    }
    *(void *)a2 = v5 + 1;
    unint64_t v7 = v6 | 0x100000000;
    if ((v7 & 0x100000000) != 0) {
      goto LABEL_7;
    }
LABEL_15:
    if (!v7 || (v7 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_19EB7C8C4(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C406AB77EA5);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::Optimizer::clear_OptimizerType(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 28);
  if (v2 == 11 || v2 == 10)
  {
    this = *(void *)(this + 16);
    if (this) {
      this = (*(uint64_t (**)(uint64_t))(*(void *)this + 8))(this);
    }
  }
  *(_DWORD *)(v1 + 28) = 0;
  return this;
}

std::string *CoreML::Specification::Optimizer::MergeFrom(std::string *this, const CoreML::Specification::Optimizer *a2)
{
  uint64_t v3 = (uint64_t)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 7);
  if (v5 == 11)
  {
    if (*(_DWORD *)(v3 + 28) != 11)
    {
      CoreML::Specification::Optimizer::clear_OptimizerType(v3);
      *(_DWORD *)(v3 + 28) = 11;
      operator new();
    }
    unint64_t v7 = (const CoreML::Specification::AdamOptimizer *)*((void *)a2 + 2);
    unsigned int v9 = *(std::string **)(v3 + 16);
    return CoreML::Specification::AdamOptimizer::MergeFrom(v9, v7);
  }
  else if (v5 == 10)
  {
    if (*(_DWORD *)(v3 + 28) != 10)
    {
      CoreML::Specification::Optimizer::clear_OptimizerType(v3);
      *(_DWORD *)(v3 + 28) = 10;
      operator new();
    }
    uint64_t v6 = (const CoreML::Specification::SGDOptimizer *)*((void *)a2 + 2);
    uint64_t v8 = *(std::string **)(v3 + 16);
    return CoreML::Specification::SGDOptimizer::MergeFrom(v8, v6);
  }
  return this;
}

void sub_19EB7CAD0(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C406AB77EA5);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::Optimizer::IsInitialized(CoreML::Specification::Optimizer *this)
{
  return 1;
}

void CoreML::Specification::Optimizer::New(CoreML::Specification::Optimizer *this, google::protobuf::Arena *a2)
{
}

void sub_19EB7CB68(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C406A65A86DLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::Optimizer *CoreML::Specification::Optimizer::Optimizer(CoreML::Specification::Optimizer *this)
{
  *(void *)this = &unk_1EF0DAD80;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::Optimizer *)&CoreML::Specification::_Optimizer_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  return this;
}

void sub_19EB7CBEC(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::Optimizer>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::Optimizer>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::Optimizer>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::Optimizer::New(CoreML::Specification::Optimizer *this)
{
}

void *CoreML::Specification::Optimizer::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.Optimizer");
}

void CoreML::Specification::Optimizer::~Optimizer(CoreML::Specification::Optimizer *this)
{
  CoreML::Specification::Optimizer::~Optimizer(this);

  JUMPOUT(0x19F3C1920);
}

{
  *(void *)this = &unk_1EF0DAD80;
  if (*((_DWORD *)this + 7)) {
    CoreML::Specification::Optimizer::clear_OptimizerType((uint64_t)this);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::MeanSquaredErrorLossLayer::GetCachedSize(CoreML::Specification::MeanSquaredErrorLossLayer *this)
{
  return *((unsigned int *)this + 8);
}

uint64_t CoreML::Specification::MeanSquaredErrorLossLayer::SerializeWithCachedSizes(CoreML::Specification::MeanSquaredErrorLossLayer *this, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v4 = (unsigned int *)*((void *)this + 2);
  if (*((char *)v4 + 23) < 0)
  {
    uint64_t v5 = *((void *)v4 + 1);
    if (!v5) {
      goto LABEL_7;
    }
    uint64_t v4 = *(unsigned int **)v4;
    goto LABEL_6;
  }
  LODWORD(v5) = *((unsigned __int8 *)v4 + 23);
  if (*((unsigned char *)v4 + 23))
  {
LABEL_6:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v4, v5, 1, (uint64_t)"CoreML.Specification.MeanSquaredErrorLossLayer.input");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(1u, *((void *)this + 2), a2);
  }
LABEL_7:
  uint64_t result = *((void *)this + 3);
  if (*(char *)(result + 23) < 0)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      return result;
    }
    uint64_t result = *(void *)result;
  }
  else
  {
    LODWORD(v7) = *(unsigned __int8 *)(result + 23);
    if (!*(unsigned char *)(result + 23)) {
      return result;
    }
  }
  google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)result, v7, 1, (uint64_t)"CoreML.Specification.MeanSquaredErrorLossLayer.target");
  uint64_t v8 = *((void *)this + 3);

  return google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(2u, v8, a2);
}

uint64_t CoreML::Specification::MeanSquaredErrorLossLayer::MergePartialFromCodedStream(CoreML::Specification::MeanSquaredErrorLossLayer *this, char **a2, unsigned int a3)
{
  uint64_t v4 = (std::string **)((char *)this + 24);
  uint64_t v5 = (std::string **)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      uint64_t v6 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          goto LABEL_25;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        goto LABEL_25;
      }
LABEL_8:
      if (v8 >> 3 != 2) {
        break;
      }
      if (v8 != 18) {
        goto LABEL_25;
      }
      if (*v4 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
      }
      uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((unsigned __int8 **)a2, *v4);
      if (!result) {
        return result;
      }
      BOOL v12 = *v4;
      if (SHIBYTE((*v4)->__r_.__value_.__r.__words[2]) < 0)
      {
        BOOL v12 = (std::string *)v12->__r_.__value_.__r.__words[0];
        std::string::size_type size = (*v4)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v4)->__r_.__value_.__r.__words[2]);
      }
      unint64_t v15 = "CoreML.Specification.MeanSquaredErrorLossLayer.target";
LABEL_35:
      if (!google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)v12, size, 0, (uint64_t)v15)) {
        return 0;
      }
    }
    if (v8 >> 3 == 1 && v8 == 10)
    {
      if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
      }
      uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((unsigned __int8 **)a2, *v5);
      if (!result) {
        return result;
      }
      BOOL v12 = *v5;
      if (SHIBYTE((*v5)->__r_.__value_.__r.__words[2]) < 0)
      {
        BOOL v12 = (std::string *)v12->__r_.__value_.__r.__words[0];
        std::string::size_type size = (*v5)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v5)->__r_.__value_.__r.__words[2]);
      }
      unint64_t v15 = "CoreML.Specification.MeanSquaredErrorLossLayer.input";
      goto LABEL_35;
    }
LABEL_25:
    if (!v8 || (v8 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t CoreML::Specification::MeanSquaredErrorLossLayer::IsInitialized(CoreML::Specification::MeanSquaredErrorLossLayer *this)
{
  return 1;
}

uint64_t CoreML::Specification::MeanSquaredErrorLossLayer::Clear(uint64_t this)
{
  uint64_t v1 = *(void *)(this + 16);
  if ((long long *)v1 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)uint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v1 = 0;
      *(unsigned char *)(v1 + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
    }
  }
  uint64_t v2 = *(void *)(this + 24);
  if ((long long *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v2 = 0;
      *(unsigned char *)(v2 + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
    }
  }
  return this;
}

void CoreML::Specification::MeanSquaredErrorLossLayer::New(CoreML::Specification::MeanSquaredErrorLossLayer *this, google::protobuf::Arena *a2)
{
}

void sub_19EB7D05C(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C40C9A46F13);
  _Unwind_Resume(a1);
}

CoreML::Specification::MeanSquaredErrorLossLayer *CoreML::Specification::MeanSquaredErrorLossLayer::MeanSquaredErrorLossLayer(CoreML::Specification::MeanSquaredErrorLossLayer *this)
{
  *(void *)this = &unk_1EF0D6B98;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::MeanSquaredErrorLossLayer *)&CoreML::Specification::_MeanSquaredErrorLossLayer_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  *((_DWORD *)this + 8) = 0;
  return this;
}

void sub_19EB7D0EC(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::MeanSquaredErrorLossLayer>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::MeanSquaredErrorLossLayer>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::MeanSquaredErrorLossLayer>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::MeanSquaredErrorLossLayer::New(CoreML::Specification::MeanSquaredErrorLossLayer *this)
{
}

void *CoreML::Specification::MeanSquaredErrorLossLayer::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.MeanSquaredErrorLossLayer");
}

void CoreML::Specification::MeanSquaredErrorLossLayer::~MeanSquaredErrorLossLayer(CoreML::Specification::MeanSquaredErrorLossLayer *this)
{
  *(void *)this = &unk_1EF0D6B98;
  uint64_t v1 = (uint64_t *)((char *)this + 8);
  CoreML::Specification::SerializedModel::SharedDtor((uint64_t)this);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);

  JUMPOUT(0x19F3C1920);
}

{
  uint64_t *v1;

  *(void *)this = &unk_1EF0D6B98;
  uint64_t v1 = (uint64_t *)((char *)this + 8);
  CoreML::Specification::SerializedModel::SharedDtor((uint64_t)this);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
}

uint64_t CoreML::Specification::CategoricalCrossEntropyLossLayer::GetCachedSize(CoreML::Specification::CategoricalCrossEntropyLossLayer *this)
{
  return *((unsigned int *)this + 8);
}

uint64_t CoreML::Specification::CategoricalCrossEntropyLossLayer::SerializeWithCachedSizes(CoreML::Specification::CategoricalCrossEntropyLossLayer *this, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v4 = (unsigned int *)*((void *)this + 2);
  if (*((char *)v4 + 23) < 0)
  {
    uint64_t v5 = *((void *)v4 + 1);
    if (!v5) {
      goto LABEL_7;
    }
    uint64_t v4 = *(unsigned int **)v4;
    goto LABEL_6;
  }
  LODWORD(v5) = *((unsigned __int8 *)v4 + 23);
  if (*((unsigned char *)v4 + 23))
  {
LABEL_6:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v4, v5, 1, (uint64_t)"CoreML.Specification.CategoricalCrossEntropyLossLayer.input");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(1u, *((void *)this + 2), a2);
  }
LABEL_7:
  uint64_t result = *((void *)this + 3);
  if (*(char *)(result + 23) < 0)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      return result;
    }
    uint64_t result = *(void *)result;
  }
  else
  {
    LODWORD(v7) = *(unsigned __int8 *)(result + 23);
    if (!*(unsigned char *)(result + 23)) {
      return result;
    }
  }
  google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)result, v7, 1, (uint64_t)"CoreML.Specification.CategoricalCrossEntropyLossLayer.target");
  uint64_t v8 = *((void *)this + 3);

  return google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(2u, v8, a2);
}

uint64_t CoreML::Specification::CategoricalCrossEntropyLossLayer::MergePartialFromCodedStream(CoreML::Specification::CategoricalCrossEntropyLossLayer *this, char **a2, unsigned int a3)
{
  uint64_t v4 = (std::string **)((char *)this + 24);
  uint64_t v5 = (std::string **)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      uint64_t v6 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          goto LABEL_25;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        goto LABEL_25;
      }
LABEL_8:
      if (v8 >> 3 != 2) {
        break;
      }
      if (v8 != 18) {
        goto LABEL_25;
      }
      if (*v4 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
      }
      uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((unsigned __int8 **)a2, *v4);
      if (!result) {
        return result;
      }
      BOOL v12 = *v4;
      if (SHIBYTE((*v4)->__r_.__value_.__r.__words[2]) < 0)
      {
        BOOL v12 = (std::string *)v12->__r_.__value_.__r.__words[0];
        std::string::size_type size = (*v4)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v4)->__r_.__value_.__r.__words[2]);
      }
      unint64_t v15 = "CoreML.Specification.CategoricalCrossEntropyLossLayer.target";
LABEL_35:
      if (!google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)v12, size, 0, (uint64_t)v15)) {
        return 0;
      }
    }
    if (v8 >> 3 == 1 && v8 == 10)
    {
      if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
      }
      uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((unsigned __int8 **)a2, *v5);
      if (!result) {
        return result;
      }
      BOOL v12 = *v5;
      if (SHIBYTE((*v5)->__r_.__value_.__r.__words[2]) < 0)
      {
        BOOL v12 = (std::string *)v12->__r_.__value_.__r.__words[0];
        std::string::size_type size = (*v5)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v5)->__r_.__value_.__r.__words[2]);
      }
      unint64_t v15 = "CoreML.Specification.CategoricalCrossEntropyLossLayer.input";
      goto LABEL_35;
    }
LABEL_25:
    if (!v8 || (v8 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t CoreML::Specification::CategoricalCrossEntropyLossLayer::IsInitialized(CoreML::Specification::CategoricalCrossEntropyLossLayer *this)
{
  return 1;
}

uint64_t CoreML::Specification::CategoricalCrossEntropyLossLayer::Clear(uint64_t this)
{
  uint64_t v1 = *(void *)(this + 16);
  if ((long long *)v1 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)uint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v1 = 0;
      *(unsigned char *)(v1 + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
    }
  }
  uint64_t v2 = *(void *)(this + 24);
  if ((long long *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v2 = 0;
      *(unsigned char *)(v2 + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
    }
  }
  return this;
}

void CoreML::Specification::CategoricalCrossEntropyLossLayer::New(CoreML::Specification::CategoricalCrossEntropyLossLayer *this, google::protobuf::Arena *a2)
{
}

void sub_19EB7D584(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C40C9A46F13);
  _Unwind_Resume(a1);
}

CoreML::Specification::CategoricalCrossEntropyLossLayer *CoreML::Specification::CategoricalCrossEntropyLossLayer::CategoricalCrossEntropyLossLayer(CoreML::Specification::CategoricalCrossEntropyLossLayer *this)
{
  *(void *)this = &unk_1EF0D8780;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::CategoricalCrossEntropyLossLayer *)&CoreML::Specification::_CategoricalCrossEntropyLossLayer_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  *((_DWORD *)this + 8) = 0;
  return this;
}

void sub_19EB7D614(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::CategoricalCrossEntropyLossLayer>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::CategoricalCrossEntropyLossLayer>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::CategoricalCrossEntropyLossLayer>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::CategoricalCrossEntropyLossLayer::New(CoreML::Specification::CategoricalCrossEntropyLossLayer *this)
{
}

void *CoreML::Specification::CategoricalCrossEntropyLossLayer::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.CategoricalCrossEntropyLossLayer");
}

void CoreML::Specification::CategoricalCrossEntropyLossLayer::~CategoricalCrossEntropyLossLayer(CoreML::Specification::CategoricalCrossEntropyLossLayer *this)
{
  *(void *)this = &unk_1EF0D8780;
  uint64_t v1 = (uint64_t *)((char *)this + 8);
  CoreML::Specification::SerializedModel::SharedDtor((uint64_t)this);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);

  JUMPOUT(0x19F3C1920);
}

{
  uint64_t *v1;

  *(void *)this = &unk_1EF0D8780;
  uint64_t v1 = (uint64_t *)((char *)this + 8);
  CoreML::Specification::SerializedModel::SharedDtor((uint64_t)this);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
}

uint64_t CoreML::Specification::LossLayer::GetCachedSize(CoreML::Specification::LossLayer *this)
{
  return *((unsigned int *)this + 8);
}

uint64_t CoreML::Specification::LossLayer::SerializeWithCachedSizes(CoreML::Specification::LossLayer *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t result = *((void *)this + 2);
  if (*(char *)(result + 23) < 0)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      goto LABEL_7;
    }
    uint64_t result = *(void *)result;
    goto LABEL_6;
  }
  LODWORD(v7) = *(unsigned __int8 *)(result + 23);
  if (*(unsigned char *)(result + 23))
  {
LABEL_6:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)result, v7, 1, (uint64_t)"CoreML.Specification.LossLayer.name");
    uint64_t result = google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(1u, *((void *)this + 2), a2);
  }
LABEL_7:
  int v8 = *((_DWORD *)this + 9);
  if (v8 == 10)
  {
    uint64_t result = google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)0xA, *((void *)this + 3), a2, a4);
    int v8 = *((_DWORD *)this + 9);
  }
  if (v8 == 11)
  {
    uint64_t v9 = *((void *)this + 3);
    return google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)0xB, v9, a2, a4);
  }
  return result;
}

uint64_t CoreML::Specification::LossLayer::MergePartialFromCodedStream(CoreML::Specification::LossLayer *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  unint64_t v5 = (std::string **)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v6 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1))
        {
          LODWORD(v7) = 0;
LABEL_7:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
          unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v8 & 0x100000000) == 0) {
            goto LABEL_26;
          }
          goto LABEL_8;
        }
        uint64_t v7 = *v6;
        if (*v6 < 1) {
          goto LABEL_7;
        }
        *(void *)a2 = v6 + 1;
        unint64_t v8 = v7 | 0x100000000;
        if ((v8 & 0x100000000) == 0) {
          goto LABEL_26;
        }
LABEL_8:
        unsigned int v10 = v8 >> 3;
        if (v8 >> 3 == 11)
        {
          if (v8 != 90) {
            goto LABEL_26;
          }
          if (*((_DWORD *)this + 9) != 11)
          {
            CoreML::Specification::Int64Parameter::clear_AllowedValues((uint64_t)this);
            *((_DWORD *)this + 9) = 11;
            operator new();
          }
          unint64_t v15 = (CoreML::Specification::MeanSquaredErrorLossLayer *)*((void *)this + 3);
          int v18 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v18 < 0)
          {
            int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            int VarintSizeAsIntFallback = *v18;
            *(void *)a2 = v18 + 1;
          }
          int v22 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          int v24 = *((_DWORD *)a2 + 13);
          BOOL v25 = __OFSUB__(v24--, 1);
          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v24;
          if (v24 < 0 != v25) {
            return 0;
          }
          int v26 = v22;
          uint64_t result = CoreML::Specification::MeanSquaredErrorLossLayer::MergePartialFromCodedStream(v15, (char **)a2, v23);
          if (!result) {
            return result;
          }
          goto LABEL_47;
        }
        if (v10 != 10) {
          break;
        }
        if (v8 != 82) {
          goto LABEL_26;
        }
        if (*((_DWORD *)this + 9) != 10)
        {
          CoreML::Specification::Int64Parameter::clear_AllowedValues((uint64_t)this);
          *((_DWORD *)this + 9) = 10;
          operator new();
        }
        int v16 = (CoreML::Specification::CategoricalCrossEntropyLossLayer *)*((void *)this + 3);
        int v20 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v20 < 0)
        {
          int v21 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v21 < 0) {
            return 0;
          }
        }
        else
        {
          int v21 = *v20;
          *(void *)a2 = v20 + 1;
        }
        int v27 = google::protobuf::io::CodedInputStream::PushLimit(a2, v21);
        int v29 = *((_DWORD *)a2 + 13);
        BOOL v25 = __OFSUB__(v29--, 1);
        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v29;
        if (v29 < 0 != v25) {
          return 0;
        }
        int v26 = v27;
        uint64_t result = CoreML::Specification::CategoricalCrossEntropyLossLayer::MergePartialFromCodedStream(v16, (char **)a2, v28);
        if (!result) {
          return result;
        }
LABEL_47:
        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v26)) {
          return 0;
        }
      }
      if (v10 != 1 || v8 != 10) {
        break;
      }
      if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
      }
      uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((unsigned __int8 **)a2, *v5);
      if (!result) {
        return result;
      }
      int v13 = (unsigned int *)*v5;
      if (SHIBYTE((*v5)->__r_.__value_.__r.__words[2]) < 0)
      {
        int v13 = *(unsigned int **)v13;
        std::string::size_type size = (*v5)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v5)->__r_.__value_.__r.__words[2]);
      }
      if (!google::protobuf::internal::WireFormatLite::VerifyUtf8String(v13, size, 0, (uint64_t)"CoreML.Specification.LossLayer.name"))return 0; {
    }
      }
LABEL_26:
    if (!v8 || (v8 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_19EB7DB14(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C40C9A46F13);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::LossLayer::MergeFrom(std::string *this, const CoreML::Specification::LossLayer *a2)
{
  uint64_t v3 = (uint64_t)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  uint64_t v5 = *((void *)a2 + 2);
  if (*(char *)(v5 + 23) < 0)
  {
    if (!*(void *)(v5 + 8)) {
      goto LABEL_11;
    }
  }
  else if (!*(unsigned char *)(v5 + 23))
  {
    goto LABEL_11;
  }
  this = (std::string *)(v3 + 16);
  uint64_t v6 = *(long long **)(v3 + 16);
  if (v6 != (long long *)v5)
  {
    if (v6 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
    }
    this = std::string::operator=(*(std::string **)(v3 + 16), (const std::string *)v5);
  }
LABEL_11:
  int v7 = *((_DWORD *)a2 + 9);
  if (v7 == 11)
  {
    if (*(_DWORD *)(v3 + 36) != 11)
    {
      CoreML::Specification::Int64Parameter::clear_AllowedValues(v3);
      *(_DWORD *)(v3 + 36) = 11;
      operator new();
    }
    unint64_t v8 = (const CoreML::Specification::SerializedModel *)*((void *)a2 + 3);
    uint64_t v9 = *(std::string **)(v3 + 24);
    return CoreML::Specification::SerializedModel::MergeFrom(v9, v8);
  }
  if (v7 == 10)
  {
    if (*(_DWORD *)(v3 + 36) != 10)
    {
      CoreML::Specification::Int64Parameter::clear_AllowedValues(v3);
      *(_DWORD *)(v3 + 36) = 10;
      operator new();
    }
    unint64_t v8 = (const CoreML::Specification::SerializedModel *)*((void *)a2 + 3);
    uint64_t v9 = *(std::string **)(v3 + 24);
    return CoreML::Specification::SerializedModel::MergeFrom(v9, v8);
  }
  return this;
}

void sub_19EB7DCFC(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C40C9A46F13);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::LossLayer::IsInitialized(CoreML::Specification::LossLayer *this)
{
  return 1;
}

uint64_t CoreML::Specification::LossLayer::Clear(uint64_t this)
{
  uint64_t v1 = *(void *)(this + 16);
  if ((long long *)v1 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)uint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v1 = 0;
      *(unsigned char *)(v1 + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
    }
  }
  return CoreML::Specification::Int64Parameter::clear_AllowedValues(this);
}

void CoreML::Specification::LossLayer::New(CoreML::Specification::LossLayer *this, google::protobuf::Arena *a2)
{
}

void sub_19EB7DDB8(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C40EE95837BLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::LossLayer *CoreML::Specification::LossLayer::LossLayer(CoreML::Specification::LossLayer *this)
{
  *(void *)this = &unk_1EF0DACE8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::LossLayer *)&CoreML::Specification::_LossLayer_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 4) = 0;
  return this;
}

void sub_19EB7DE48(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::LossLayer>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::LossLayer>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::LossLayer>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::LossLayer::New(CoreML::Specification::LossLayer *this)
{
}

void *CoreML::Specification::LossLayer::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.LossLayer");
}

void CoreML::Specification::LossLayer::~LossLayer(CoreML::Specification::LossLayer *this)
{
  CoreML::Specification::LossLayer::~LossLayer(this);

  JUMPOUT(0x19F3C1920);
}

{
  uint64_t v2;

  *(void *)this = &unk_1EF0DACE8;
  uint64_t v2 = *((void *)this + 2);
  if ((long long *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x19F3C1920](v2, 0x1012C40EC159624);
  }
  if (*((_DWORD *)this + 9)) {
    CoreML::Specification::Int64Parameter::clear_AllowedValues((uint64_t)this);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::NetworkUpdateParameters::GetCachedSize(CoreML::Specification::NetworkUpdateParameters *this)
{
  return *((unsigned int *)this + 18);
}

uint64_t CoreML::Specification::NetworkUpdateParameters::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  unint64_t v5 = (uint64_t *)this;
  int v6 = *(_DWORD *)(this + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
      this = google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)1, *(void *)(v5[4] + 8 * i + 8), a2, a4);
  }
  if (v5 != &CoreML::Specification::_NetworkUpdateParameters_default_instance_)
  {
    uint64_t v8 = v5[5];
    if (v8) {
      this = google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
    }
    uint64_t v9 = v5[6];
    if (v9) {
      this = google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)3, v9, a2, a4);
    }
    uint64_t v10 = v5[7];
    if (v10) {
      this = google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)0xA, v10, a2, a4);
    }
    uint64_t v11 = v5[8];
    if (v11)
    {
      return google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)0x14, v11, a2, a4);
    }
  }
  return this;
}

uint64_t CoreML::Specification::NetworkUpdateParameters::MergePartialFromCodedStream(CoreML::Specification::NetworkUpdateParameters *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  unint64_t v5 = (CoreML::Specification::NetworkUpdateParameters *)((char *)this + 16);
  while (1)
  {
LABEL_2:
    int v6 = *(unsigned __int8 **)a2;
    unint64_t v7 = *((void *)a2 + 1);
    if (*(void *)a2 >= v7)
    {
      LODWORD(v9) = 0;
      goto LABEL_67;
    }
    uint64_t v8 = v6 + 1;
    uint64_t v9 = *v6;
    if ((char)*v6 >= 1)
    {
      *(void *)a2 = v8;
      unint64_t v10 = v9 | 0x100000000;
      if ((v10 & 0x100000000) != 0) {
        goto LABEL_9;
      }
      goto LABEL_68;
    }
    if ((unint64_t)v8 < v7)
    {
      int v11 = *v8;
      if ((v9 & ~v11) >= 0x80) {
        break;
      }
    }
LABEL_67:
    unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v9);
    unint64_t v10 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
    if ((v10 & 0x100000000) != 0) {
      goto LABEL_9;
    }
LABEL_68:
    if (v10) {
      BOOL v49 = (v10 & 7) == 4;
    }
    else {
      BOOL v49 = 1;
    }
    if (v49) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v10, a3) & 1) == 0) {
      goto LABEL_73;
    }
  }
  *(void *)a2 = v6 + 2;
  unint64_t v10 = (v9 + (v11 << 7) - 128) | 0x100000000;
LABEL_9:
  switch(v10 >> 3)
  {
    case 1u:
      if (v10 != 10) {
        goto LABEL_68;
      }
      BOOL v12 = (int *)*((void *)this + 4);
      if (!v12)
      {
        int v13 = *((_DWORD *)this + 6);
        int v14 = *((_DWORD *)this + 7);
LABEL_50:
        if (v13 <= v14)
        {
          google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(v5, v14 - v13 + 1);
          BOOL v12 = (int *)*((void *)this + 4);
        }
        int v14 = *v12;
        goto LABEL_53;
      }
      int v13 = *((_DWORD *)this + 6);
      int v14 = *v12;
      if (v13 < *v12)
      {
        *((_DWORD *)this + 6) = v13 + 1;
        Aligned = *(google::protobuf::Arena ***)&v12[2 * v13 + 2];
        goto LABEL_58;
      }
      if (v14 == *((_DWORD *)this + 7)) {
        goto LABEL_50;
      }
LABEL_53:
      *BOOL v12 = v14 + 1;
      uint64_t v37 = *(google::protobuf::Arena **)v5;
      if (!*(void *)v5) {
        operator new();
      }
      CoreML::Specification::LossLayer::LossLayer((CoreML::Specification::LossLayer *)Aligned);
      uint64_t v38 = google::protobuf::Arena::AllocateAligned(v37, 0, 24);
      *uint64_t v38 = (google::protobuf::Arena *)Aligned;
      v38[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::LossLayer>;
      int v39 = (unint64_t *)((char *)v37 + 32);
      do
        unint64_t v40 = __ldxr(v39);
      while (__stxr((unint64_t)v38, v39));
      v38[2] = (google::protobuf::Arena *)v40;
      uint64_t v41 = *((void *)this + 4);
      uint64_t v42 = *((int *)this + 6);
      *((_DWORD *)this + 6) = v42 + 1;
      *(void *)(v41 + 8 * v42 + 8) = Aligned;
LABEL_58:
      int v43 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v43 < 0)
      {
        int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (VarintSizeAsIntFallback < 0) {
          goto LABEL_73;
        }
      }
      else
      {
        int VarintSizeAsIntFallback = *v43;
        *(void *)a2 = v43 + 1;
      }
      int v45 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      int v47 = *((_DWORD *)a2 + 13);
      BOOL v28 = __OFSUB__(v47--, 1);
      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v47;
      if (v47 < 0 == v28)
      {
        int v29 = v45;
        uint64_t result = CoreML::Specification::LossLayer::MergePartialFromCodedStream((CoreML::Specification::LossLayer *)Aligned, a2, v46);
        if (!result) {
          return result;
        }
LABEL_64:
        if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v29)) {
          goto LABEL_2;
        }
      }
LABEL_73:
      uint64_t result = 0;
      break;
    case 2u:
      if (v10 != 18) {
        goto LABEL_68;
      }
      unsigned int v17 = (CoreML::Specification::Optimizer *)*((void *)this + 5);
      if (!v17) {
        operator new();
      }
      int v18 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v18 < 0)
      {
        int v19 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v19 < 0) {
          goto LABEL_73;
        }
      }
      else
      {
        int v19 = *v18;
        *(void *)a2 = v18 + 1;
      }
      int v31 = google::protobuf::io::CodedInputStream::PushLimit(a2, v19);
      int v33 = *((_DWORD *)a2 + 13);
      BOOL v28 = __OFSUB__(v33--, 1);
      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v33;
      if (v33 < 0 != v28) {
        goto LABEL_73;
      }
      int v29 = v31;
      uint64_t result = CoreML::Specification::Optimizer::MergePartialFromCodedStream(v17, a2, v32);
      if (!result) {
        return result;
      }
      goto LABEL_64;
    case 3u:
      if (v10 != 26) {
        goto LABEL_68;
      }
      int v16 = (CoreML::Specification::Int64Parameter *)*((void *)this + 6);
      if (!v16) {
        operator new();
      }
      goto LABEL_27;
    case 4u:
    case 5u:
    case 6u:
    case 7u:
    case 8u:
    case 9u:
      goto LABEL_68;
    case 0xAu:
      if (v10 != 82) {
        goto LABEL_68;
      }
      int v22 = (CoreML::Specification::BoolParameter *)*((void *)this + 7);
      if (!v22) {
        operator new();
      }
      unsigned int v23 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v23 < 0)
      {
        int v24 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v24 < 0) {
          goto LABEL_73;
        }
      }
      else
      {
        int v24 = *v23;
        *(void *)a2 = v23 + 1;
      }
      int v34 = google::protobuf::io::CodedInputStream::PushLimit(a2, v24);
      int v36 = *((_DWORD *)a2 + 13);
      BOOL v28 = __OFSUB__(v36--, 1);
      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v36;
      if (v36 < 0 != v28) {
        goto LABEL_73;
      }
      int v29 = v34;
      uint64_t result = CoreML::Specification::BoolParameter::MergePartialFromCodedStream(v22, (char **)a2, v35);
      if (!result) {
        return result;
      }
      goto LABEL_64;
    default:
      if (v10 >> 3 != 20 || v10 != 162) {
        goto LABEL_68;
      }
      int v16 = (CoreML::Specification::Int64Parameter *)*((void *)this + 8);
      if (!v16) {
        operator new();
      }
LABEL_27:
      int v20 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v20 < 0)
      {
        int v21 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v21 < 0) {
          goto LABEL_73;
        }
      }
      else
      {
        int v21 = *v20;
        *(void *)a2 = v20 + 1;
      }
      int v25 = google::protobuf::io::CodedInputStream::PushLimit(a2, v21);
      int v27 = *((_DWORD *)a2 + 13);
      BOOL v28 = __OFSUB__(v27--, 1);
      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v27;
      if (v27 < 0 != v28) {
        goto LABEL_73;
      }
      int v29 = v25;
      uint64_t result = CoreML::Specification::Int64Parameter::MergePartialFromCodedStream(v16, a2, v26);
      if (!result) {
        return result;
      }
      goto LABEL_64;
  }
  return result;
}

void sub_19EB7E570(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C40EE95837BLL);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<CoreML::Specification::LossLayer>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

std::string *CoreML::Specification::NetworkUpdateParameters::MergeFrom(std::string *this, const CoreML::Specification::NetworkUpdateParameters *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  unsigned int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    int v6 = (CoreML::Specification::LossLayer **)(*((void *)a2 + 4) + 8);
    unint64_t v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)&v3->__r_.__value_.__r.__words[2], *((_DWORD *)a2 + 6));
    this = google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<CoreML::Specification::LossLayer>::TypeHandler>((std::string *)&v3->__r_.__value_.__r.__words[2], (std::string **)v7, v6, v5, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    signed int v8 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v5;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v8;
    std::string::size_type size = (signed int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v8) {
      *std::string::size_type size = v8;
    }
  }
  if (a2 != (const CoreML::Specification::NetworkUpdateParameters *)&CoreML::Specification::_NetworkUpdateParameters_default_instance_)
  {
    if (*((void *)a2 + 5))
    {
      unint64_t v10 = (std::string *)v3[1].__r_.__value_.__r.__words[2];
      if (!v10) {
        operator new();
      }
      this = CoreML::Specification::Optimizer::MergeFrom(v10, *((const CoreML::Specification::Optimizer **)a2 + 5));
    }
    if (*((void *)a2 + 6))
    {
      int data = (std::string *)v3[2].__r_.__value_.__l.__data_;
      if (!data) {
        operator new();
      }
      this = CoreML::Specification::Int64Parameter::MergeFrom(data, *((const CoreML::Specification::Int64Parameter **)a2 + 6));
    }
    if (*((void *)a2 + 7))
    {
      std::string::size_type v12 = v3[2].__r_.__value_.__l.__size_;
      if (!v12) {
        operator new();
      }
      uint64_t v13 = *((void *)a2 + 7);
      uint64_t v14 = *(void *)(v13 + 8);
      if (v14) {
        this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)(v12 + 8), v14 & 0xFFFFFFFFFFFFFFFELL);
      }
      if (*(unsigned char *)(v13 + 16)) {
        *(unsigned char *)(v12 + 16) = 1;
      }
    }
    if (*((void *)a2 + 8))
    {
      if (!v3[2].__r_.__value_.__r.__words[2]) {
        operator new();
      }
      unint64_t v15 = (const CoreML::Specification::Int64Parameter *)*((void *)a2 + 8);
      int v16 = (std::string *)v3[2].__r_.__value_.__r.__words[2];
      return CoreML::Specification::Int64Parameter::MergeFrom(v16, v15);
    }
  }
  return this;
}

void sub_19EB7E85C(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

std::string *google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<CoreML::Specification::LossLayer>::TypeHandler>(std::string *result, std::string **a2, CoreML::Specification::LossLayer **a3, unsigned int a4, unsigned int a5)
{
  uint64_t v9 = (google::protobuf::Arena **)result;
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    int v11 = a3;
    std::string::size_type v12 = a2;
    do
    {
      uint64_t v14 = *v11++;
      uint64_t v13 = v14;
      unint64_t v15 = *v12++;
      uint64_t result = google::protobuf::internal::GenericTypeHandler<CoreML::Specification::LossLayer>::Merge(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    int v18 = *v9;
    int v19 = (google::protobuf::Arena ***)&a2[a5];
    int v20 = &a3[a5];
    do
    {
      int v21 = *v20;
      if (!v18) {
        operator new();
      }
      CoreML::Specification::LossLayer::LossLayer((CoreML::Specification::LossLayer *)Aligned);
      unsigned int v23 = google::protobuf::Arena::AllocateAligned(v18, 0, 24);
      char *v23 = (google::protobuf::Arena *)Aligned;
      v23[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::LossLayer>;
      int v24 = (unint64_t *)((char *)v18 + 32);
      do
        unint64_t v25 = __ldxr(v24);
      while (__stxr((unint64_t)v23, v24));
      v23[2] = (google::protobuf::Arena *)v25;
      uint64_t result = google::protobuf::internal::GenericTypeHandler<CoreML::Specification::LossLayer>::Merge(v21, (std::string *)Aligned);
      *v19++ = Aligned;
      ++v20;
      --v17;
    }
    while (v17);
  }
  return result;
}

void sub_19EB7E9D8(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C40EE95837BLL);
  _Unwind_Resume(a1);
}

std::string *google::protobuf::internal::GenericTypeHandler<CoreML::Specification::LossLayer>::Merge(CoreML::Specification::LossLayer *a1, std::string *this)
{
  return CoreML::Specification::LossLayer::MergeFrom(this, a1);
}

uint64_t CoreML::Specification::NetworkUpdateParameters::IsInitialized(CoreML::Specification::NetworkUpdateParameters *this)
{
  return 1;
}

uint64_t CoreML::Specification::NetworkUpdateParameters::Clear(CoreML::Specification::NetworkUpdateParameters *this)
{
  uint64_t v2 = *((unsigned int *)this + 6);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*((void *)this + 4) + 8);
    do
    {
      uint64_t v4 = *v3++;
      CoreML::Specification::LossLayer::Clear(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)this + 6) = 0;
  }
  uint64_t v5 = *((void *)this + 5);
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
  }
  *((void *)this + 5) = 0;
  uint64_t v6 = *((void *)this + 6);
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
  }
  *((void *)this + 6) = 0;
  uint64_t v7 = *((void *)this + 7);
  if (v7) {
    (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
  }
  *((void *)this + 7) = 0;
  uint64_t result = *((void *)this + 8);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 8) = 0;
  return result;
}

void CoreML::Specification::NetworkUpdateParameters::New(CoreML::Specification::NetworkUpdateParameters *this, google::protobuf::Arena *a2)
{
}

void sub_19EB7EB78(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C40A49539A5);
  _Unwind_Resume(a1);
}

CoreML::Specification::NetworkUpdateParameters *CoreML::Specification::NetworkUpdateParameters::NetworkUpdateParameters(CoreML::Specification::NetworkUpdateParameters *this)
{
  *(void *)this = &unk_1EF0D5F20;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  if (this != (CoreML::Specification::NetworkUpdateParameters *)&CoreML::Specification::_NetworkUpdateParameters_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 18) = 0;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 4CoreML::Specification::LossLayer::New(this, 0) = 0u;
  return this;
}

void sub_19EB7EC1C(_Unwind_Exception *a1)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::NeuralNetworkPreprocessing>::TypeHandler>(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::NetworkUpdateParameters>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::NetworkUpdateParameters>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::NetworkUpdateParameters>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::NetworkUpdateParameters::New(CoreML::Specification::NetworkUpdateParameters *this)
{
}

void *CoreML::Specification::NetworkUpdateParameters::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.NetworkUpdateParameters");
}

void CoreML::Specification::NetworkUpdateParameters::~NetworkUpdateParameters(CoreML::Specification::NetworkUpdateParameters *this)
{
  CoreML::Specification::NetworkUpdateParameters::~NetworkUpdateParameters(this);

  JUMPOUT(0x19F3C1920);
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(void *)this = &unk_1EF0D5F20;
  if (this != (CoreML::Specification::NetworkUpdateParameters *)&CoreML::Specification::_NetworkUpdateParameters_default_instance_)
  {
    uint64_t v2 = *((void *)this + 5);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 6);
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = *((void *)this + 7);
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    unint64_t v5 = *((void *)this + 8);
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    }
  }
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::NeuralNetworkPreprocessing>::TypeHandler>((void *)this + 2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::NeuralNetworkRegressor::GetCachedSize(CoreML::Specification::NeuralNetworkRegressor *this)
{
  return *((unsigned int *)this + 20);
}

uint64_t CoreML::Specification::NeuralNetworkRegressor::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
      this = google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)1, *(void *)(*(void *)(v5 + 32) + 8 * i + 8), a2, a4);
  }
  int v8 = *(_DWORD *)(v5 + 48);
  if (v8)
  {
    for (int j = 0; j != v8; ++j)
      this = google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)2, *(void *)(*(void *)(v5 + 56) + 8 * j + 8), a2, a4);
  }
  signed int v10 = *(_DWORD *)(v5 + 72);
  if (v10) {
    this = google::protobuf::internal::WireFormatLite::WriteEnum(5, v10, a2, a4);
  }
  signed int v11 = *(_DWORD *)(v5 + 76);
  if (v11) {
    this = google::protobuf::internal::WireFormatLite::WriteEnum(6, v11, a2, a4);
  }
  if ((uint64_t *)v5 != &CoreML::Specification::_NeuralNetworkRegressor_default_instance_)
  {
    uint64_t v12 = *(void *)(v5 + 64);
    if (v12)
    {
      return google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)0xA, v12, a2, a4);
    }
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetworkRegressor::ByteSizeLong(CoreML::Specification::NeuralNetworkRegressor *this)
{
  int v2 = *((_DWORD *)this + 6);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = *((unsigned int *)this + 6);
    do
    {
      uint64_t v5 = CoreML::Specification::NeuralNetworkLayer::ByteSizeLong(*(CoreML::Specification::NeuralNetworkLayer **)(*((void *)this + 4) + 8 * v3 + 8));
      v4 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t v6 = *((unsigned int *)this + 12);
  uint64_t v7 = v4 + v6;
  if (v6)
  {
    int v8 = 0;
    do
    {
      uint64_t v9 = CoreML::Specification::NeuralNetworkPreprocessing::ByteSizeLong(*(CoreML::Specification::NeuralNetworkPreprocessing **)(*((void *)this + 7) + 8 * v8 + 8));
      v7 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      ++v8;
    }
    while (v6 != v8);
  }
  if (this != (CoreML::Specification::NeuralNetworkRegressor *)&CoreML::Specification::_NeuralNetworkRegressor_default_instance_)
  {
    signed int v10 = (CoreML::Specification::NetworkUpdateParameters *)*((void *)this + 8);
    if (v10)
    {
      uint64_t v11 = CoreML::Specification::NetworkUpdateParameters::ByteSizeLong(v10);
      v7 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v12 = 11;
  int v13 = *((_DWORD *)this + 18);
  int v14 = *((_DWORD *)this + 19);
  uint64_t v15 = ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v13 >= 0) {
    uint64_t v12 = v15;
  }
  uint64_t v16 = v12 + v7;
  if (!v13) {
    uint64_t v16 = v7;
  }
  uint64_t v17 = 11;
  uint64_t v18 = ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v14 >= 0) {
    uint64_t v17 = v18;
  }
  uint64_t v19 = v17 + v16;
  if (v14) {
    uint64_t result = v19;
  }
  else {
    uint64_t result = v16;
  }
  *((_DWORD *)this + 2CoreML::Specification::NetworkUpdateParameters::New(this, 0) = result;
  return result;
}

uint64_t CoreML::Specification::NeuralNetworkRegressor::MergePartialFromCodedStream(CoreML::Specification::NeuralNetworkRegressor *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (CoreML::Specification::NeuralNetworkRegressor *)((char *)this + 40);
  uint64_t v6 = (CoreML::Specification::NeuralNetworkRegressor *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      uint64_t v7 = *(char **)a2;
      if (*(void *)a2 < *((void *)a2 + 1)) {
        break;
      }
      LODWORD(v8) = 0;
LABEL_7:
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v8);
      unint64_t v9 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v9 & 0x100000000) == 0) {
        goto LABEL_8;
      }
LABEL_14:
      switch(v9 >> 3)
      {
        case 1u:
          if (v9 != 10) {
            goto LABEL_8;
          }
          uint64_t v12 = google::protobuf::internal::RepeatedPtrFieldBase::Add<google::protobuf::RepeatedPtrField<CoreML::Specification::NeuralNetworkLayer>::TypeHandler>(v6);
          int v13 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v13 < 0)
          {
            int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            int VarintSizeAsIntFallback = *v13;
            *(void *)a2 = v13 + 1;
          }
          int v25 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          int v27 = *((_DWORD *)a2 + 13);
          BOOL v28 = __OFSUB__(v27--, 1);
          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v27;
          if (v27 < 0 != v28) {
            return 0;
          }
          int v29 = v25;
          uint64_t result = CoreML::Specification::NeuralNetworkLayer::MergePartialFromCodedStream((CoreML::Specification::NeuralNetworkLayer *)v12, a2, v26);
          if (!result) {
            return result;
          }
          goto LABEL_48;
        case 2u:
          if (v9 != 18) {
            goto LABEL_8;
          }
          uint64_t v15 = google::protobuf::internal::RepeatedPtrFieldBase::Add<google::protobuf::RepeatedPtrField<CoreML::Specification::NeuralNetworkPreprocessing>::TypeHandler>(v5);
          uint64_t v16 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v16 < 0)
          {
            int v17 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v17 < 0) {
              return 0;
            }
          }
          else
          {
            int v17 = *v16;
            *(void *)a2 = v16 + 1;
          }
          int v31 = google::protobuf::io::CodedInputStream::PushLimit(a2, v17);
          int v33 = *((_DWORD *)a2 + 13);
          BOOL v28 = __OFSUB__(v33--, 1);
          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v33;
          if (v33 < 0 != v28) {
            return 0;
          }
          int v29 = v31;
          uint64_t result = CoreML::Specification::NeuralNetworkPreprocessing::MergePartialFromCodedStream((CoreML::Specification::NeuralNetworkPreprocessing *)v15, a2, v32);
          if (!result) {
            return result;
          }
          goto LABEL_48;
        case 5u:
          if (v9 != 40) {
            goto LABEL_8;
          }
          uint64_t v18 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1))
          {
            int v19 = 0;
          }
          else
          {
            int v19 = *v18;
            if ((*v18 & 0x80000000) == 0)
            {
              *(void *)a2 = v18 + 1;
              goto LABEL_52;
            }
          }
          uint64_t Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v19);
          int v19 = Varint32Fallback;
          if (Varint32Fallback < 0) {
            return 0;
          }
LABEL_52:
          *((_DWORD *)this + 18) = v19;
          continue;
        case 6u:
          if (v9 != 48) {
            goto LABEL_8;
          }
          int v20 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1))
          {
            int v21 = 0;
          }
          else
          {
            int v21 = *v20;
            if ((*v20 & 0x80000000) == 0)
            {
              *(void *)a2 = v20 + 1;
              goto LABEL_55;
            }
          }
          uint64_t v38 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v21);
          int v21 = v38;
          if (v38 < 0) {
            return 0;
          }
LABEL_55:
          *((_DWORD *)this + 19) = v21;
          break;
        case 0xAu:
          if (v9 != 82) {
            goto LABEL_8;
          }
          int v22 = (CoreML::Specification::NetworkUpdateParameters *)*((void *)this + 8);
          if (!v22) {
            operator new();
          }
          unsigned int v23 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v23 < 0)
          {
            int v24 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v24 < 0) {
              return 0;
            }
          }
          else
          {
            int v24 = *v23;
            *(void *)a2 = v23 + 1;
          }
          int v34 = google::protobuf::io::CodedInputStream::PushLimit(a2, v24);
          int v36 = *((_DWORD *)a2 + 13);
          BOOL v28 = __OFSUB__(v36--, 1);
          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v36;
          if (v36 < 0 != v28) {
            return 0;
          }
          int v29 = v34;
          uint64_t result = CoreML::Specification::NetworkUpdateParameters::MergePartialFromCodedStream(v22, a2, v35);
          if (!result) {
            return result;
          }
LABEL_48:
          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v29)) {
            return 0;
          }
          continue;
        default:
          goto LABEL_8;
      }
    }
    uint64_t v8 = *v7;
    if (*v7 < 1) {
      goto LABEL_7;
    }
    *(void *)a2 = v7 + 1;
    unint64_t v9 = v8 | 0x100000000;
    if ((v9 & 0x100000000) != 0) {
      goto LABEL_14;
    }
LABEL_8:
    if (!v9 || (v9 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v9, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_19EB7F3C8(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C40A49539A5);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::internal::RepeatedPtrFieldBase::Add<google::protobuf::RepeatedPtrField<CoreML::Specification::NeuralNetworkLayer>::TypeHandler>(google::protobuf::internal::RepeatedPtrFieldBase *this)
{
  int v2 = (int *)*((void *)this + 2);
  if (!v2)
  {
    int v3 = *((_DWORD *)this + 2);
    int v4 = *((_DWORD *)this + 3);
LABEL_6:
    if (v3 <= v4)
    {
      google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(this, v4 - v3 + 1);
      int v2 = (int *)*((void *)this + 2);
    }
    int v4 = *v2;
    goto LABEL_9;
  }
  int v3 = *((_DWORD *)this + 2);
  int v4 = *v2;
  if (v3 < *v2)
  {
    *((_DWORD *)this + 2) = v3 + 1;
    return *(google::protobuf::Arena ***)&v2[2 * v3 + 2];
  }
  if (v4 == *((_DWORD *)this + 3)) {
    goto LABEL_6;
  }
LABEL_9:
  *int v2 = v4 + 1;
  uint64_t v6 = *(google::protobuf::Arena **)this;
  if (!*(void *)this) {
    operator new();
  }
  CoreML::Specification::NeuralNetworkLayer::NeuralNetworkLayer((CoreML::Specification::NeuralNetworkLayer *)Aligned);
  uint64_t v7 = google::protobuf::Arena::AllocateAligned(v6, 0, 24);
  *uint64_t v7 = (google::protobuf::Arena *)Aligned;
  v7[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::NeuralNetworkLayer>;
  uint64_t v8 = (unint64_t *)((char *)v6 + 32);
  do
    unint64_t v9 = __ldxr(v8);
  while (__stxr((unint64_t)v7, v8));
  v7[2] = (google::protobuf::Arena *)v9;
  uint64_t v10 = *((void *)this + 2);
  uint64_t v11 = *((int *)this + 2);
  *((_DWORD *)this + 2) = v11 + 1;
  *(void *)(v10 + 8 * v11 + 8) = Aligned;
  return Aligned;
}

void sub_19EB7F540(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C40665201BALL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::MergePartialFromCodedStream(CoreML::Specification::NeuralNetworkLayer *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (_DWORD *)((char *)this + 140);
  uint64_t v6 = (CoreML::Specification::CategoricalDistributionLayerParams **)((char *)this + 128);
  uint64_t v7 = (CoreML::Specification::NeuralNetworkLayer *)((char *)this + 88);
  uint64_t v8 = (CoreML::Specification::NeuralNetworkLayer *)((char *)this + 64);
  v1111 = (CoreML::Specification::NeuralNetworkLayer *)((char *)this + 40);
  unint64_t v9 = (CoreML::Specification::NeuralNetworkLayer *)((char *)this + 16);
  uint64_t v10 = (std::string **)((char *)this + 112);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          while (1)
          {
            while (1)
            {
              while (1)
              {
LABEL_2:
                uint64_t v11 = *(unsigned __int8 **)a2;
                unint64_t v12 = *((void *)a2 + 1);
                if (*(void *)a2 >= v12)
                {
                  LODWORD(v14) = 0;
                }
                else
                {
                  int v13 = v11 + 1;
                  uint64_t v14 = *v11;
                  if ((char)*v11 >= 1)
                  {
                    *(void *)a2 = v13;
                    unint64_t v15 = v14 | 0x100000000;
                    if ((v15 & 0x100000000) == 0) {
                      goto LABEL_9;
                    }
                    goto LABEL_17;
                  }
                  if ((unint64_t)v13 < v12)
                  {
                    int v16 = *v13;
                    if ((v14 & ~v16) >= 0x80)
                    {
                      *(void *)a2 = v11 + 2;
                      unint64_t v15 = (v14 + (v16 << 7) - 128) | 0x100000000;
                      goto LABEL_17;
                    }
                  }
                }
                unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v14);
                unint64_t v15 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
                if ((v15 & 0x100000000) == 0) {
                  goto LABEL_9;
                }
LABEL_17:
                unsigned int v19 = v15 >> 3;
                if (v15 >> 3 <= 0x360) {
                  break;
                }
                if (v15 >> 3 > 0x469)
                {
                  if (v15 >> 3 <= 0x4F5)
                  {
                    if (v15 >> 3 > 0x4AA)
                    {
                      if (v15 >> 3 > 0x4CD)
                      {
                        if (v15 >> 3 <= 0x4E6)
                        {
                          if (v19 == 1230)
                          {
                            if (v15 != 114) {
                              goto LABEL_9;
                            }
                            if (*v5 != 1230)
                            {
                              CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                              *((_DWORD *)this + 35) = 1230;
                              operator new();
                            }
                            int v230 = *v6;
                            v448 = *(char **)a2;
                            if (*(void *)a2 >= *((void *)a2 + 1) || *v448 < 0)
                            {
                              int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                              if (VarintSizeAsIntFallback < 0) {
                                return 0;
                              }
                            }
                            else
                            {
                              int VarintSizeAsIntFallback = *v448;
                              *(void *)a2 = v448 + 1;
                            }
                            int v1051 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
                            int v1053 = *((_DWORD *)a2 + 13);
                            BOOL v244 = __OFSUB__(v1053--, 1);
                            *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v1053;
                            if (v1053 < 0 != v244) {
                              return 0;
                            }
                            int v1054 = v1051;
                            uint64_t result = CoreML::Specification::CategoricalDistributionLayerParams::MergePartialFromCodedStream(v230, (char **)a2, v1052);
                            if (!result) {
                              return result;
                            }
                            if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1054)) {
                              return 0;
                            }
                          }
                          else
                          {
                            if (v19 != 1250 || v15 != 18) {
                              goto LABEL_9;
                            }
                            if (*v5 != 1250)
                            {
                              CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                              *((_DWORD *)this + 35) = 1250;
                              operator new();
                            }
                            size_t v95 = *v6;
                            v340 = *(char **)a2;
                            if (*(void *)a2 >= *((void *)a2 + 1) || *v340 < 0)
                            {
                              int v341 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                              if (v341 < 0) {
                                return 0;
                              }
                            }
                            else
                            {
                              int v341 = *v340;
                              *(void *)a2 = v340 + 1;
                            }
                            int v840 = google::protobuf::io::CodedInputStream::PushLimit(a2, v341);
                            int v842 = *((_DWORD *)a2 + 13);
                            BOOL v244 = __OFSUB__(v842--, 1);
                            *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v842;
                            if (v842 < 0 != v244) {
                              return 0;
                            }
                            int v843 = v840;
                            uint64_t result = CoreML::Specification::ReduceL1LayerParams::MergePartialFromCodedStream(v95, a2, v841);
                            if (!result) {
                              return result;
                            }
                            if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v843)) {
                              return 0;
                            }
                          }
                        }
                        else if (v19 == 1255)
                        {
                          if (v15 != 58) {
                            goto LABEL_9;
                          }
                          if (*v5 != 1255)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 1255;
                            operator new();
                          }
                          std::string v188 = *v6;
                          v400 = *(char **)a2;
                          if (*(void *)a2 >= *((void *)a2 + 1) || *v400 < 0)
                          {
                            int v401 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v401 < 0) {
                              return 0;
                            }
                          }
                          else
                          {
                            int v401 = *v400;
                            *(void *)a2 = v400 + 1;
                          }
                          int v957 = google::protobuf::io::CodedInputStream::PushLimit(a2, v401);
                          int v959 = *((_DWORD *)a2 + 13);
                          BOOL v244 = __OFSUB__(v959--, 1);
                          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v959;
                          if (v959 < 0 != v244) {
                            return 0;
                          }
                          int v960 = v957;
                          uint64_t result = CoreML::Specification::ReduceL2LayerParams::MergePartialFromCodedStream(v188, a2, v958);
                          if (!result) {
                            return result;
                          }
                          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v960)) {
                            return 0;
                          }
                        }
                        else if (v19 == 1260)
                        {
                          if (v15 != 98) {
                            goto LABEL_9;
                          }
                          if (*v5 != 1260)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 1260;
                            operator new();
                          }
                          std::string v189 = *v6;
                          v402 = *(char **)a2;
                          if (*(void *)a2 >= *((void *)a2 + 1) || *v402 < 0)
                          {
                            int v403 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v403 < 0) {
                              return 0;
                            }
                          }
                          else
                          {
                            int v403 = *v402;
                            *(void *)a2 = v402 + 1;
                          }
                          int v961 = google::protobuf::io::CodedInputStream::PushLimit(a2, v403);
                          int v963 = *((_DWORD *)a2 + 13);
                          BOOL v244 = __OFSUB__(v963--, 1);
                          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v963;
                          if (v963 < 0 != v244) {
                            return 0;
                          }
                          int v964 = v961;
                          uint64_t result = CoreML::Specification::ReduceMaxLayerParams::MergePartialFromCodedStream(v189, a2, v962);
                          if (!result) {
                            return result;
                          }
                          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v964)) {
                            return 0;
                          }
                        }
                        else
                        {
                          if (v19 != 1265 || v15 != 138) {
                            goto LABEL_9;
                          }
                          if (*v5 != 1265)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 1265;
                            operator new();
                          }
                          uint64_t v56 = *v6;
                          uint64_t v302 = *(char **)a2;
                          if (*(void *)a2 >= *((void *)a2 + 1) || *v302 < 0)
                          {
                            int v303 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v303 < 0) {
                              return 0;
                            }
                          }
                          else
                          {
                            int v303 = *v302;
                            *(void *)a2 = v302 + 1;
                          }
                          int v766 = google::protobuf::io::CodedInputStream::PushLimit(a2, v303);
                          int v768 = *((_DWORD *)a2 + 13);
                          BOOL v244 = __OFSUB__(v768--, 1);
                          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v768;
                          if (v768 < 0 != v244) {
                            return 0;
                          }
                          int v769 = v766;
                          uint64_t result = CoreML::Specification::ReduceMinLayerParams::MergePartialFromCodedStream(v56, a2, v767);
                          if (!result) {
                            return result;
                          }
                          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v769)) {
                            return 0;
                          }
                        }
                      }
                      else if (v15 >> 3 <= 0x4B9)
                      {
                        if (v19 == 1195)
                        {
                          if (v15 != 90) {
                            goto LABEL_9;
                          }
                          if (*v5 != 1195)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 1195;
                            operator new();
                          }
                          v214 = *v6;
                          v428 = *(char **)a2;
                          if (*(void *)a2 >= *((void *)a2 + 1) || *v428 < 0)
                          {
                            int v429 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v429 < 0) {
                              return 0;
                            }
                          }
                          else
                          {
                            int v429 = *v428;
                            *(void *)a2 = v428 + 1;
                          }
                          int v1012 = google::protobuf::io::CodedInputStream::PushLimit(a2, v429);
                          int v1014 = *((_DWORD *)a2 + 13);
                          BOOL v244 = __OFSUB__(v1014--, 1);
                          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v1014;
                          if (v1014 < 0 != v244) {
                            return 0;
                          }
                          int v1015 = v1012;
                          uint64_t result = CoreML::Specification::RandomUniformStaticLayerParams::MergePartialFromCodedStream(v214, a2, v1013);
                          if (!result) {
                            return result;
                          }
                          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1015)) {
                            return 0;
                          }
                        }
                        else
                        {
                          if (v19 != 1200 || v15 != 130) {
                            goto LABEL_9;
                          }
                          if (*v5 != 1200)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 1200;
                            operator new();
                          }
                          size_t v78 = *v6;
                          v322 = *(char **)a2;
                          if (*(void *)a2 >= *((void *)a2 + 1) || *v322 < 0)
                          {
                            int v323 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v323 < 0) {
                              return 0;
                            }
                          }
                          else
                          {
                            int v323 = *v322;
                            *(void *)a2 = v322 + 1;
                          }
                          int v805 = google::protobuf::io::CodedInputStream::PushLimit(a2, v323);
                          int v807 = *((_DWORD *)a2 + 13);
                          BOOL v244 = __OFSUB__(v807--, 1);
                          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v807;
                          if (v807 < 0 != v244) {
                            return 0;
                          }
                          int v808 = v805;
                          uint64_t result = CoreML::Specification::RandomUniformDynamicLayerParams::MergePartialFromCodedStream(v78, (char **)a2, v806);
                          if (!result) {
                            return result;
                          }
                          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v808)) {
                            return 0;
                          }
                        }
                      }
                      else if (v19 == 1210)
                      {
                        if (v15 != 210) {
                          goto LABEL_9;
                        }
                        if (*v5 != 1210)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1210;
                          operator new();
                        }
                        long long v152 = *v6;
                        v368 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v368 < 0)
                        {
                          int v369 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v369 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v369 = *v368;
                          *(void *)a2 = v368 + 1;
                        }
                        int v895 = google::protobuf::io::CodedInputStream::PushLimit(a2, v369);
                        int v897 = *((_DWORD *)a2 + 13);
                        BOOL v244 = __OFSUB__(v897--, 1);
                        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v897;
                        if (v897 < 0 != v244) {
                          return 0;
                        }
                        int v898 = v895;
                        uint64_t result = CoreML::Specification::RandomBernoulliLikeLayerParams::MergePartialFromCodedStream(v152, (char **)a2, v896);
                        if (!result) {
                          return result;
                        }
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v898)) {
                          return 0;
                        }
                      }
                      else if (v19 == 1215)
                      {
                        if (v15 != 250) {
                          goto LABEL_9;
                        }
                        if (*v5 != 1215)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1215;
                          operator new();
                        }
                        unint64_t v153 = *v6;
                        v370 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v370 < 0)
                        {
                          int v371 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v371 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v371 = *v370;
                          *(void *)a2 = v370 + 1;
                        }
                        int v899 = google::protobuf::io::CodedInputStream::PushLimit(a2, v371);
                        int v901 = *((_DWORD *)a2 + 13);
                        BOOL v244 = __OFSUB__(v901--, 1);
                        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v901;
                        if (v901 < 0 != v244) {
                          return 0;
                        }
                        int v902 = v899;
                        uint64_t result = CoreML::Specification::RandomBernoulliStaticLayerParams::MergePartialFromCodedStream(v153, a2, v900);
                        if (!result) {
                          return result;
                        }
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v902)) {
                          return 0;
                        }
                      }
                      else
                      {
                        if (v19 != 1220 || v15 != 34) {
                          goto LABEL_9;
                        }
                        if (*v5 != 1220)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1220;
                          operator new();
                        }
                        uint64_t v41 = *v6;
                        std::string::size_type v280 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v280 < 0)
                        {
                          int v281 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v281 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v281 = *v280;
                          *(void *)a2 = v280 + 1;
                        }
                        int v723 = google::protobuf::io::CodedInputStream::PushLimit(a2, v281);
                        int v725 = *((_DWORD *)a2 + 13);
                        BOOL v244 = __OFSUB__(v725--, 1);
                        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v725;
                        if (v725 < 0 != v244) {
                          return 0;
                        }
                        int v726 = v723;
                        uint64_t result = CoreML::Specification::RandomBernoulliDynamicLayerParams::MergePartialFromCodedStream(v41, (char **)a2, v724);
                        if (!result) {
                          return result;
                        }
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v726)) {
                          return 0;
                        }
                      }
                    }
                    else if (v15 >> 3 > 0x482)
                    {
                      if (v15 >> 3 <= 0x496)
                      {
                        if (v19 == 1155)
                        {
                          if (v15 != 26) {
                            goto LABEL_9;
                          }
                          if (*v5 != 1155)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 1155;
                            operator new();
                          }
                          v223 = *v6;
                          v438 = *(char **)a2;
                          if (*(void *)a2 >= *((void *)a2 + 1) || *v438 < 0)
                          {
                            int v439 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v439 < 0) {
                              return 0;
                            }
                          }
                          else
                          {
                            int v439 = *v438;
                            *(void *)a2 = v438 + 1;
                          }
                          int v1031 = google::protobuf::io::CodedInputStream::PushLimit(a2, v439);
                          int v1033 = *((_DWORD *)a2 + 13);
                          BOOL v244 = __OFSUB__(v1033--, 1);
                          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v1033;
                          if (v1033 < 0 != v244) {
                            return 0;
                          }
                          int v1034 = v1031;
                          uint64_t result = CoreML::Specification::ConstantPaddingLayerParams::MergePartialFromCodedStream(v223, a2, v1032);
                          if (!result) {
                            return result;
                          }
                          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1034)) {
                            return 0;
                          }
                        }
                        else
                        {
                          if (v19 != 1170 || v15 != 146) {
                            goto LABEL_9;
                          }
                          if (*v5 != 1170)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 1170;
                            operator new();
                          }
                          unint64_t v88 = *v6;
                          v330 = *(char **)a2;
                          if (*(void *)a2 >= *((void *)a2 + 1) || *v330 < 0)
                          {
                            int v331 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v331 < 0) {
                              return 0;
                            }
                          }
                          else
                          {
                            int v331 = *v330;
                            *(void *)a2 = v330 + 1;
                          }
                          int v820 = google::protobuf::io::CodedInputStream::PushLimit(a2, v331);
                          int v822 = *((_DWORD *)a2 + 13);
                          BOOL v244 = __OFSUB__(v822--, 1);
                          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v822;
                          if (v822 < 0 != v244) {
                            return 0;
                          }
                          int v823 = v820;
                          uint64_t result = CoreML::Specification::RandomNormalLikeLayerParams::MergePartialFromCodedStream(v88, (char **)a2, v821);
                          if (!result) {
                            return result;
                          }
                          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v823)) {
                            return 0;
                          }
                        }
                      }
                      else if (v19 == 1175)
                      {
                        if (v15 != 186) {
                          goto LABEL_9;
                        }
                        if (*v5 != 1175)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1175;
                          operator new();
                        }
                        v173 = *v6;
                        v382 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v382 < 0)
                        {
                          int v383 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v383 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v383 = *v382;
                          *(void *)a2 = v382 + 1;
                        }
                        int v921 = google::protobuf::io::CodedInputStream::PushLimit(a2, v383);
                        int v923 = *((_DWORD *)a2 + 13);
                        BOOL v244 = __OFSUB__(v923--, 1);
                        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v923;
                        if (v923 < 0 != v244) {
                          return 0;
                        }
                        int v924 = v921;
                        uint64_t result = CoreML::Specification::RandomNormalStaticLayerParams::MergePartialFromCodedStream(v173, a2, v922);
                        if (!result) {
                          return result;
                        }
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v924)) {
                          return 0;
                        }
                      }
                      else if (v19 == 1180)
                      {
                        if (v15 != 226) {
                          goto LABEL_9;
                        }
                        if (*v5 != 1180)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1180;
                          operator new();
                        }
                        v174 = *v6;
                        v384 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v384 < 0)
                        {
                          int v385 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v385 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v385 = *v384;
                          *(void *)a2 = v384 + 1;
                        }
                        int v925 = google::protobuf::io::CodedInputStream::PushLimit(a2, v385);
                        int v927 = *((_DWORD *)a2 + 13);
                        BOOL v244 = __OFSUB__(v927--, 1);
                        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v927;
                        if (v927 < 0 != v244) {
                          return 0;
                        }
                        int v928 = v925;
                        uint64_t result = CoreML::Specification::RandomNormalDynamicLayerParams::MergePartialFromCodedStream(v174, (char **)a2, v926);
                        if (!result) {
                          return result;
                        }
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v928)) {
                          return 0;
                        }
                      }
                      else
                      {
                        if (v19 != 1190 || v15 != 50) {
                          goto LABEL_9;
                        }
                        if (*v5 != 1190)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1190;
                          operator new();
                        }
                        uint64_t v50 = *v6;
                        v290 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v290 < 0)
                        {
                          int v291 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v291 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v291 = *v290;
                          *(void *)a2 = v290 + 1;
                        }
                        int v742 = google::protobuf::io::CodedInputStream::PushLimit(a2, v291);
                        int v744 = *((_DWORD *)a2 + 13);
                        BOOL v244 = __OFSUB__(v744--, 1);
                        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v744;
                        if (v744 < 0 != v244) {
                          return 0;
                        }
                        int v745 = v742;
                        uint64_t result = CoreML::Specification::RandomUniformLikeLayerParams::MergePartialFromCodedStream(v50, (char **)a2, v743);
                        if (!result) {
                          return result;
                        }
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v745)) {
                          return 0;
                        }
                      }
                    }
                    else if (v15 >> 3 <= 0x473)
                    {
                      if (v19 == 1130)
                      {
                        if (v15 != 82) {
                          goto LABEL_9;
                        }
                        if (*v5 != 1130)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1130;
                          operator new();
                        }
                        v207 = *v6;
                        v418 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v418 < 0)
                        {
                          int v419 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v419 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v419 = *v418;
                          *(void *)a2 = v418 + 1;
                        }
                        int v993 = google::protobuf::io::CodedInputStream::PushLimit(a2, v419);
                        int v995 = *((_DWORD *)a2 + 13);
                        BOOL v244 = __OFSUB__(v995--, 1);
                        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v995;
                        if (v995 < 0 != v244) {
                          return 0;
                        }
                        int v996 = v993;
                        uint64_t result = CoreML::Specification::FlattenTo2DLayerParams::MergePartialFromCodedStream(v207, (char **)a2, v994);
                        if (!result) {
                          return result;
                        }
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v996)) {
                          return 0;
                        }
                      }
                      else
                      {
                        if (v19 != 1135 || v15 != 122) {
                          goto LABEL_9;
                        }
                        if (*v5 != 1135)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1135;
                          operator new();
                        }
                        uint64_t v70 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v70 < 0)
                        {
                          int v71 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v71 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v71 = *v70;
                          *(void *)a2 = v70 + 1;
                        }
                        v556 = (CoreML::Specification::ReshapeLikeLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v71);
                        int v558 = *((_DWORD *)a2 + 13);
                        BOOL v244 = __OFSUB__(v558--, 1);
                        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v558;
                        if (v558 < 0 != v244) {
                          return 0;
                        }
                        int v559 = (int)v556;
                        uint64_t result = CoreML::Specification::ReshapeLikeLayerParams::MergePartialFromCodedStream(v556, (char **)a2, v557);
                        if (!result) {
                          return result;
                        }
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v559)) {
                          return 0;
                        }
                      }
                    }
                    else if (v19 == 1140)
                    {
                      if (v15 != 162) {
                        goto LABEL_9;
                      }
                      if (*v5 != 1140)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 1140;
                        operator new();
                      }
                      long long v138 = *v6;
                      v348 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v348 < 0)
                      {
                        int v349 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v349 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v349 = *v348;
                        *(void *)a2 = v348 + 1;
                      }
                      int v856 = google::protobuf::io::CodedInputStream::PushLimit(a2, v349);
                      int v858 = *((_DWORD *)a2 + 13);
                      BOOL v244 = __OFSUB__(v858--, 1);
                      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v858;
                      if (v858 < 0 != v244) {
                        return 0;
                      }
                      int v859 = v856;
                      uint64_t result = CoreML::Specification::ReshapeStaticLayerParams::MergePartialFromCodedStream(v138, a2, v857);
                      if (!result) {
                        return result;
                      }
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v859)) {
                        return 0;
                      }
                    }
                    else if (v19 == 1145)
                    {
                      if (v15 != 202) {
                        goto LABEL_9;
                      }
                      if (*v5 != 1145)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 1145;
                        operator new();
                      }
                      v139 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v139 < 0)
                      {
                        int v140 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v140 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v140 = *v139;
                        *(void *)a2 = v139 + 1;
                      }
                      v608 = (CoreML::Specification::ReshapeDynamicLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v140);
                      int v610 = *((_DWORD *)a2 + 13);
                      BOOL v244 = __OFSUB__(v610--, 1);
                      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v610;
                      if (v610 < 0 != v244) {
                        return 0;
                      }
                      int v611 = (int)v608;
                      uint64_t result = CoreML::Specification::ReshapeDynamicLayerParams::MergePartialFromCodedStream(v608, (char **)a2, v609);
                      if (!result) {
                        return result;
                      }
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v611)) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (v19 != 1150 || v15 != 242) {
                        goto LABEL_9;
                      }
                      if (*v5 != 1150)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 1150;
                        operator new();
                      }
                      unsigned int v32 = *v6;
                      long long v270 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v270 < 0)
                      {
                        int v271 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v271 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v271 = *v270;
                        *(void *)a2 = v270 + 1;
                      }
                      int v703 = google::protobuf::io::CodedInputStream::PushLimit(a2, v271);
                      int v705 = *((_DWORD *)a2 + 13);
                      BOOL v244 = __OFSUB__(v705--, 1);
                      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v705;
                      if (v705 < 0 != v244) {
                        return 0;
                      }
                      int v706 = v703;
                      uint64_t result = CoreML::Specification::RankPreservingReshapeLayerParams::MergePartialFromCodedStream(v32, a2, v704);
                      if (!result) {
                        return result;
                      }
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v706)) {
                        return 0;
                      }
                    }
                  }
                  else if (v15 >> 3 <= 0x531)
                  {
                    if (v15 >> 3 > 0x50E)
                    {
                      if (v15 >> 3 <= 0x522)
                      {
                        if (v19 == 1295)
                        {
                          if (v15 != 122) {
                            goto LABEL_9;
                          }
                          if (*v5 != 1295)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 1295;
                            operator new();
                          }
                          v226 = *v6;
                          v444 = *(char **)a2;
                          if (*(void *)a2 >= *((void *)a2 + 1) || *v444 < 0)
                          {
                            int v445 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v445 < 0) {
                              return 0;
                            }
                          }
                          else
                          {
                            int v445 = *v444;
                            *(void *)a2 = v444 + 1;
                          }
                          int v1043 = google::protobuf::io::CodedInputStream::PushLimit(a2, v445);
                          int v1045 = *((_DWORD *)a2 + 13);
                          BOOL v244 = __OFSUB__(v1045--, 1);
                          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v1045;
                          if (v1045 < 0 != v244) {
                            return 0;
                          }
                          int v1046 = v1043;
                          uint64_t result = CoreML::Specification::ReduceLogSumExpLayerParams::MergePartialFromCodedStream(v226, a2, v1044);
                          if (!result) {
                            return result;
                          }
                          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1046)) {
                            return 0;
                          }
                        }
                        else
                        {
                          if (v19 != 1313 || v15 != 10) {
                            goto LABEL_9;
                          }
                          if (*v5 != 1313)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 1313;
                            operator new();
                          }
                          std::string::size_type v91 = *(char **)a2;
                          if (*(void *)a2 >= *((void *)a2 + 1) || *v91 < 0)
                          {
                            int v92 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v92 < 0) {
                              return 0;
                            }
                          }
                          else
                          {
                            int v92 = *v91;
                            *(void *)a2 = v91 + 1;
                          }
                          v572 = (CoreML::Specification::WhereNonZeroLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v92);
                          int v574 = *((_DWORD *)a2 + 13);
                          BOOL v244 = __OFSUB__(v574--, 1);
                          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v574;
                          if (v574 < 0 != v244) {
                            return 0;
                          }
                          int v575 = (int)v572;
                          uint64_t result = CoreML::Specification::WhereNonZeroLayerParams::MergePartialFromCodedStream(v572, (char **)a2, v573);
                          if (!result) {
                            return result;
                          }
                          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v575)) {
                            return 0;
                          }
                        }
                      }
                      else if (v19 == 1315)
                      {
                        if (v15 != 26) {
                          goto LABEL_9;
                        }
                        if (*v5 != 1315)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1315;
                          operator new();
                        }
                        int v181 = *v6;
                        v390 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v390 < 0)
                        {
                          int v391 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v391 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v391 = *v390;
                          *(void *)a2 = v390 + 1;
                        }
                        int v937 = google::protobuf::io::CodedInputStream::PushLimit(a2, v391);
                        int v939 = *((_DWORD *)a2 + 13);
                        BOOL v244 = __OFSUB__(v939--, 1);
                        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v939;
                        if (v939 < 0 != v244) {
                          return 0;
                        }
                        int v940 = v937;
                        uint64_t result = CoreML::Specification::MatrixBandPartLayerParams::MergePartialFromCodedStream(v181, (char **)a2, v938);
                        if (!result) {
                          return result;
                        }
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v940)) {
                          return 0;
                        }
                      }
                      else if (v19 == 1320)
                      {
                        if (v15 != 66) {
                          goto LABEL_9;
                        }
                        if (*v5 != 1320)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1320;
                          operator new();
                        }
                        std::string::size_type v182 = *v6;
                        v392 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v392 < 0)
                        {
                          int v393 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v393 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v393 = *v392;
                          *(void *)a2 = v392 + 1;
                        }
                        int v941 = google::protobuf::io::CodedInputStream::PushLimit(a2, v393);
                        int v943 = *((_DWORD *)a2 + 13);
                        BOOL v244 = __OFSUB__(v943--, 1);
                        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v943;
                        if (v943 < 0 != v244) {
                          return 0;
                        }
                        int v944 = v941;
                        uint64_t result = CoreML::Specification::LowerTriangularLayerParams::MergePartialFromCodedStream(v182, (char **)a2, v942);
                        if (!result) {
                          return result;
                        }
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v944)) {
                          return 0;
                        }
                      }
                      else
                      {
                        if (v19 != 1325 || v15 != 106) {
                          goto LABEL_9;
                        }
                        if (*v5 != 1325)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1325;
                          operator new();
                        }
                        uint64_t v53 = *v6;
                        v296 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v296 < 0)
                        {
                          int v297 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v297 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v297 = *v296;
                          *(void *)a2 = v296 + 1;
                        }
                        int v754 = google::protobuf::io::CodedInputStream::PushLimit(a2, v297);
                        int v756 = *((_DWORD *)a2 + 13);
                        BOOL v244 = __OFSUB__(v756--, 1);
                        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v756;
                        if (v756 < 0 != v244) {
                          return 0;
                        }
                        int v757 = v754;
                        uint64_t result = CoreML::Specification::UpperTriangularLayerParams::MergePartialFromCodedStream(v53, (char **)a2, v755);
                        if (!result) {
                          return result;
                        }
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v757)) {
                          return 0;
                        }
                      }
                    }
                    else if (v15 >> 3 <= 0x4FF)
                    {
                      if (v19 == 1270)
                      {
                        if (v15 != 178) {
                          goto LABEL_9;
                        }
                        if (*v5 != 1270)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1270;
                          operator new();
                        }
                        int64_t v210 = *v6;
                        v424 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v424 < 0)
                        {
                          int v425 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v425 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v425 = *v424;
                          *(void *)a2 = v424 + 1;
                        }
                        int v1004 = google::protobuf::io::CodedInputStream::PushLimit(a2, v425);
                        int v1006 = *((_DWORD *)a2 + 13);
                        BOOL v244 = __OFSUB__(v1006--, 1);
                        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v1006;
                        if (v1006 < 0 != v244) {
                          return 0;
                        }
                        int v1007 = v1004;
                        uint64_t result = CoreML::Specification::ReduceSumLayerParams::MergePartialFromCodedStream(v210, a2, v1005);
                        if (!result) {
                          return result;
                        }
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1007)) {
                          return 0;
                        }
                      }
                      else
                      {
                        if (v19 != 1275 || v15 != 218) {
                          goto LABEL_9;
                        }
                        if (*v5 != 1275)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1275;
                          operator new();
                        }
                        char v74 = *v6;
                        v316 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v316 < 0)
                        {
                          int v317 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v317 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v317 = *v316;
                          *(void *)a2 = v316 + 1;
                        }
                        int v793 = google::protobuf::io::CodedInputStream::PushLimit(a2, v317);
                        int v795 = *((_DWORD *)a2 + 13);
                        BOOL v244 = __OFSUB__(v795--, 1);
                        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v795;
                        if (v795 < 0 != v244) {
                          return 0;
                        }
                        int v796 = v793;
                        uint64_t result = CoreML::Specification::ReduceProdLayerParams::MergePartialFromCodedStream(v74, a2, v794);
                        if (!result) {
                          return result;
                        }
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v796)) {
                          return 0;
                        }
                      }
                    }
                    else if (v19 == 1280)
                    {
                      if (v15 != 2) {
                        goto LABEL_9;
                      }
                      if (*v5 != 1280)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 1280;
                        operator new();
                      }
                      long long v146 = *v6;
                      v356 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v356 < 0)
                      {
                        int v357 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v357 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v357 = *v356;
                        *(void *)a2 = v356 + 1;
                      }
                      int v871 = google::protobuf::io::CodedInputStream::PushLimit(a2, v357);
                      int v873 = *((_DWORD *)a2 + 13);
                      BOOL v244 = __OFSUB__(v873--, 1);
                      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v873;
                      if (v873 < 0 != v244) {
                        return 0;
                      }
                      int v874 = v871;
                      uint64_t result = CoreML::Specification::ReduceMeanLayerParams::MergePartialFromCodedStream(v146, a2, v872);
                      if (!result) {
                        return result;
                      }
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v874)) {
                        return 0;
                      }
                    }
                    else if (v19 == 1285)
                    {
                      if (v15 != 42) {
                        goto LABEL_9;
                      }
                      if (*v5 != 1285)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 1285;
                        operator new();
                      }
                      uint64_t v147 = *v6;
                      v358 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v358 < 0)
                      {
                        int v359 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v359 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v359 = *v358;
                        *(void *)a2 = v358 + 1;
                      }
                      int v875 = google::protobuf::io::CodedInputStream::PushLimit(a2, v359);
                      int v877 = *((_DWORD *)a2 + 13);
                      BOOL v244 = __OFSUB__(v877--, 1);
                      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v877;
                      if (v877 < 0 != v244) {
                        return 0;
                      }
                      int v878 = v875;
                      uint64_t result = CoreML::Specification::ReduceLogSumLayerParams::MergePartialFromCodedStream(v147, a2, v876);
                      if (!result) {
                        return result;
                      }
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v878)) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (v19 != 1290 || v15 != 82) {
                        goto LABEL_9;
                      }
                      if (*v5 != 1290)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 1290;
                        operator new();
                      }
                      uint64_t v37 = *v6;
                      v274 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v274 < 0)
                      {
                        int v275 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v275 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v275 = *v274;
                        *(void *)a2 = v274 + 1;
                      }
                      int v711 = google::protobuf::io::CodedInputStream::PushLimit(a2, v275);
                      int v713 = *((_DWORD *)a2 + 13);
                      BOOL v244 = __OFSUB__(v713--, 1);
                      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v713;
                      if (v713 < 0 != v244) {
                        return 0;
                      }
                      int v714 = v711;
                      uint64_t result = CoreML::Specification::ReduceSumSquareLayerParams::MergePartialFromCodedStream(v37, a2, v712);
                      if (!result) {
                        return result;
                      }
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v714)) {
                        return 0;
                      }
                    }
                  }
                  else
                  {
                    if (v15 >> 3 > 0x5A9)
                    {
                      switch(v19)
                      {
                        case 0x5AFu:
                          if (v15 != 122) {
                            goto LABEL_9;
                          }
                          if (*v5 != 1455)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 1455;
                            operator new();
                          }
                          int v27 = *v6;
                          v466 = *(char **)a2;
                          if (*(void *)a2 >= *((void *)a2 + 1) || *v466 < 0)
                          {
                            int v467 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v467 < 0) {
                              return 0;
                            }
                          }
                          else
                          {
                            int v467 = *v466;
                            *(void *)a2 = v466 + 1;
                          }
                          int v1063 = google::protobuf::io::CodedInputStream::PushLimit(a2, v467);
                          int v1065 = *((_DWORD *)a2 + 13);
                          BOOL v244 = __OFSUB__(v1065--, 1);
                          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v1065;
                          if (v1065 < 0 != v244) {
                            return 0;
                          }
                          int v1066 = v1063;
                          uint64_t result = CoreML::Specification::CumSumLayerParams::MergePartialFromCodedStream(v27, (char **)a2, v1064);
                          if (!result) {
                            return result;
                          }
                          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1066)) {
                            return 0;
                          }
                          continue;
                        case 0x5B0u:
                        case 0x5B1u:
                        case 0x5B2u:
                        case 0x5B3u:
                        case 0x5B6u:
                        case 0x5B7u:
                        case 0x5B8u:
                        case 0x5BBu:
                        case 0x5BCu:
                        case 0x5BDu:
                          goto LABEL_9;
                        case 0x5B4u:
                          if (v15 != 162) {
                            goto LABEL_9;
                          }
                          if (*v5 != 1460)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 1460;
                            operator new();
                          }
                          std::string v235 = *v6;
                          v468 = *(char **)a2;
                          if (*(void *)a2 >= *((void *)a2 + 1) || *v468 < 0)
                          {
                            int v469 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v469 < 0) {
                              return 0;
                            }
                          }
                          else
                          {
                            int v469 = *v468;
                            *(void *)a2 = v468 + 1;
                          }
                          int v1067 = google::protobuf::io::CodedInputStream::PushLimit(a2, v469);
                          int v1069 = *((_DWORD *)a2 + 13);
                          BOOL v244 = __OFSUB__(v1069--, 1);
                          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v1069;
                          if (v1069 < 0 != v244) {
                            return 0;
                          }
                          int v1070 = v1067;
                          uint64_t result = CoreML::Specification::ClampedReLULayerParams::MergePartialFromCodedStream(v235, (char **)a2, v1068);
                          if (!result) {
                            return result;
                          }
                          if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1070)) {
                            continue;
                          }
                          return 0;
                        case 0x5B5u:
                          if (v15 != 170) {
                            goto LABEL_9;
                          }
                          if (*v5 != 1461)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 1461;
                            operator new();
                          }
                          int v236 = *v6;
                          v470 = *(char **)a2;
                          if (*(void *)a2 >= *((void *)a2 + 1) || *v470 < 0)
                          {
                            int v471 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v471 < 0) {
                              return 0;
                            }
                          }
                          else
                          {
                            int v471 = *v470;
                            *(void *)a2 = v470 + 1;
                          }
                          int v1071 = google::protobuf::io::CodedInputStream::PushLimit(a2, v471);
                          int v1073 = *((_DWORD *)a2 + 13);
                          BOOL v244 = __OFSUB__(v1073--, 1);
                          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v1073;
                          if (v1073 < 0 != v244) {
                            return 0;
                          }
                          int v1074 = v1071;
                          uint64_t result = CoreML::Specification::ArgSortLayerParams::MergePartialFromCodedStream(v236, (char **)a2, v1072);
                          if (!result) {
                            return result;
                          }
                          if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1074)) {
                            continue;
                          }
                          return 0;
                        case 0x5B9u:
                          if (v15 != 202) {
                            goto LABEL_9;
                          }
                          if (*v5 != 1465)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 1465;
                            operator new();
                          }
                          uint64_t v237 = *v6;
                          v472 = *(char **)a2;
                          if (*(void *)a2 >= *((void *)a2 + 1) || *v472 < 0)
                          {
                            int v473 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v473 < 0) {
                              return 0;
                            }
                          }
                          else
                          {
                            int v473 = *v472;
                            *(void *)a2 = v472 + 1;
                          }
                          int v1075 = google::protobuf::io::CodedInputStream::PushLimit(a2, v473);
                          int v1077 = *((_DWORD *)a2 + 13);
                          BOOL v244 = __OFSUB__(v1077--, 1);
                          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v1077;
                          if (v1077 < 0 != v244) {
                            return 0;
                          }
                          int v1078 = v1075;
                          uint64_t result = CoreML::Specification::Pooling3DLayerParams::MergePartialFromCodedStream(v237, (char **)a2, v1076);
                          if (!result) {
                            return result;
                          }
                          if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1078)) {
                            continue;
                          }
                          return 0;
                        case 0x5BAu:
                          if (v15 != 210) {
                            goto LABEL_9;
                          }
                          if (*v5 != 1466)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 1466;
                            operator new();
                          }
                          std::string v238 = *v6;
                          v474 = *(char **)a2;
                          if (*(void *)a2 >= *((void *)a2 + 1) || *v474 < 0)
                          {
                            int v475 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v475 < 0) {
                              return 0;
                            }
                          }
                          else
                          {
                            int v475 = *v474;
                            *(void *)a2 = v474 + 1;
                          }
                          int v1079 = google::protobuf::io::CodedInputStream::PushLimit(a2, v475);
                          int v1081 = *((_DWORD *)a2 + 13);
                          BOOL v244 = __OFSUB__(v1081--, 1);
                          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v1081;
                          if (v1081 < 0 != v244) {
                            return 0;
                          }
                          int v1082 = v1079;
                          uint64_t result = CoreML::Specification::GlobalPooling3DLayerParams::MergePartialFromCodedStream(v238, (char **)a2, v1080);
                          if (!result) {
                            return result;
                          }
                          if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1082)) {
                            continue;
                          }
                          return 0;
                        case 0x5BEu:
                          if (v15 != 242) {
                            goto LABEL_9;
                          }
                          if (*v5 != 1470)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 1470;
                            operator new();
                          }
                          uint64_t v239 = *v6;
                          v476 = *(char **)a2;
                          if (*(void *)a2 >= *((void *)a2 + 1) || *v476 < 0)
                          {
                            int v477 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v477 < 0) {
                              return 0;
                            }
                          }
                          else
                          {
                            int v477 = *v476;
                            *(void *)a2 = v476 + 1;
                          }
                          int v1083 = google::protobuf::io::CodedInputStream::PushLimit(a2, v477);
                          int v1085 = *((_DWORD *)a2 + 13);
                          BOOL v244 = __OFSUB__(v1085--, 1);
                          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v1085;
                          if (v1085 < 0 != v244) {
                            return 0;
                          }
                          int v1086 = v1083;
                          uint64_t result = CoreML::Specification::SliceBySizeLayerParams::MergePartialFromCodedStream(v239, (char **)a2, v1084);
                          if (!result) {
                            return result;
                          }
                          if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1086)) {
                            continue;
                          }
                          return 0;
                        case 0x5BFu:
                          if (v15 != 250) {
                            goto LABEL_9;
                          }
                          if (*v5 != 1471)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 1471;
                            operator new();
                          }
                          long long v240 = *v6;
                          v478 = *(char **)a2;
                          if (*(void *)a2 >= *((void *)a2 + 1) || *v478 < 0)
                          {
                            int v479 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v479 < 0) {
                              return 0;
                            }
                          }
                          else
                          {
                            int v479 = *v478;
                            *(void *)a2 = v478 + 1;
                          }
                          int v1087 = google::protobuf::io::CodedInputStream::PushLimit(a2, v479);
                          int v1089 = *((_DWORD *)a2 + 13);
                          BOOL v244 = __OFSUB__(v1089--, 1);
                          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v1089;
                          if (v1089 < 0 != v244) {
                            return 0;
                          }
                          int v1090 = v1087;
                          uint64_t result = CoreML::Specification::Convolution3DLayerParams::MergePartialFromCodedStream(v240, a2, v1088);
                          if (!result) {
                            return result;
                          }
                          if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1090)) {
                            continue;
                          }
                          return 0;
                        default:
                          if (v19 != 1450 || v15 != 82) {
                            goto LABEL_9;
                          }
                          if (*v5 != 1450)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 1450;
                            operator new();
                          }
                          uint64_t v234 = *v6;
                          v480 = *(char **)a2;
                          if (*(void *)a2 >= *((void *)a2 + 1) || *v480 < 0)
                          {
                            int v481 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v481 < 0) {
                              return 0;
                            }
                          }
                          else
                          {
                            int v481 = *v480;
                            *(void *)a2 = v480 + 1;
                          }
                          int v1091 = google::protobuf::io::CodedInputStream::PushLimit(a2, v481);
                          int v1093 = *((_DWORD *)a2 + 13);
                          BOOL v244 = __OFSUB__(v1093--, 1);
                          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v1093;
                          if (v1093 < 0 != v244) {
                            return 0;
                          }
                          int v1094 = v1091;
                          uint64_t result = CoreML::Specification::OneHotLayerParams::MergePartialFromCodedStream(v234, (char **)a2, v1092);
                          if (!result) {
                            return result;
                          }
                          if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1094)) {
                            continue;
                          }
                          return 0;
                      }
                    }
                    if (v19 == 1330)
                    {
                      if (v15 != 146) {
                        goto LABEL_9;
                      }
                      if (*v5 != 1330)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 1330;
                        operator new();
                      }
                      uint64_t v98 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v98 < 0)
                      {
                        int v99 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v99 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v99 = *v98;
                        *(void *)a2 = v98 + 1;
                      }
                      v450 = (CoreML::Specification::WhereBroadcastableLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v99);
                      int v452 = *((_DWORD *)a2 + 13);
                      BOOL v244 = __OFSUB__(v452--, 1);
                      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v452;
                      if (v452 < 0 != v244) {
                        return 0;
                      }
                      int v453 = (int)v450;
                      uint64_t result = CoreML::Specification::WhereBroadcastableLayerParams::MergePartialFromCodedStream(v450, (char **)a2, v451);
                      if (!result) {
                        return result;
                      }
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v453)) {
                        return 0;
                      }
                    }
                    else if (v19 == 1350)
                    {
                      if (v15 != 50) {
                        goto LABEL_9;
                      }
                      if (*v5 != 1350)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 1350;
                        operator new();
                      }
                      uint64_t v100 = *v6;
                      v248 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v248 < 0)
                      {
                        int v249 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v249 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v249 = *v248;
                        *(void *)a2 = v248 + 1;
                      }
                      int v458 = google::protobuf::io::CodedInputStream::PushLimit(a2, v249);
                      int v460 = *((_DWORD *)a2 + 13);
                      BOOL v244 = __OFSUB__(v460--, 1);
                      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v460;
                      if (v460 < 0 != v244) {
                        return 0;
                      }
                      int v461 = v458;
                      uint64_t result = CoreML::Specification::LayerNormalizationLayerParams::MergePartialFromCodedStream(v100, a2, v459);
                      if (!result) {
                        return result;
                      }
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v461)) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (v19 != 1400 || v15 != 194) {
                        goto LABEL_9;
                      }
                      if (*v5 != 1400)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 1400;
                        operator new();
                      }
                      unint64_t v57 = *v6;
                      std::vector<std::string>::size_type v246 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v246 < 0)
                      {
                        int v247 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v247 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v247 = *v246;
                        *(void *)a2 = v246 + 1;
                      }
                      int v454 = google::protobuf::io::CodedInputStream::PushLimit(a2, v247);
                      int v456 = *((_DWORD *)a2 + 13);
                      BOOL v244 = __OFSUB__(v456--, 1);
                      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v456;
                      if (v456 < 0 != v244) {
                        return 0;
                      }
                      int v457 = v454;
                      uint64_t result = CoreML::Specification::NonMaximumSuppressionLayerParams::MergePartialFromCodedStream(v57, (char **)a2, v455);
                      if (!result) {
                        return result;
                      }
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v457)) {
                        return 0;
                      }
                    }
                  }
                }
                else if (v15 >> 3 > 0x3D3)
                {
                  if (v15 >> 3 > 0x428)
                  {
                    if (v15 >> 3 > 0x44B)
                    {
                      if (v15 >> 3 <= 0x455)
                      {
                        if (v19 == 1100)
                        {
                          if (v15 != 98) {
                            goto LABEL_9;
                          }
                          if (*v5 != 1100)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 1100;
                            operator new();
                          }
                          unint64_t v228 = *(char **)a2;
                          if (*(void *)a2 >= *((void *)a2 + 1) || *v228 < 0)
                          {
                            int v229 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v229 < 0) {
                              return 0;
                            }
                          }
                          else
                          {
                            int v229 = *v228;
                            *(void *)a2 = v228 + 1;
                          }
                          v687 = (CoreML::Specification::BroadcastToLikeLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v229);
                          int v689 = *((_DWORD *)a2 + 13);
                          BOOL v244 = __OFSUB__(v689--, 1);
                          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v689;
                          if (v689 < 0 != v244) {
                            return 0;
                          }
                          int v690 = (int)v687;
                          uint64_t result = CoreML::Specification::BroadcastToLikeLayerParams::MergePartialFromCodedStream(v687, (char **)a2, v688);
                          if (!result) {
                            return result;
                          }
                          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v690)) {
                            return 0;
                          }
                        }
                        else
                        {
                          if (v19 != 1105 || v15 != 138) {
                            goto LABEL_9;
                          }
                          if (*v5 != 1105)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 1105;
                            operator new();
                          }
                          uint64_t v94 = *v6;
                          v338 = *(char **)a2;
                          if (*(void *)a2 >= *((void *)a2 + 1) || *v338 < 0)
                          {
                            int v339 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v339 < 0) {
                              return 0;
                            }
                          }
                          else
                          {
                            int v339 = *v338;
                            *(void *)a2 = v338 + 1;
                          }
                          int v836 = google::protobuf::io::CodedInputStream::PushLimit(a2, v339);
                          int v838 = *((_DWORD *)a2 + 13);
                          BOOL v244 = __OFSUB__(v838--, 1);
                          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v838;
                          if (v838 < 0 != v244) {
                            return 0;
                          }
                          int v839 = v836;
                          uint64_t result = CoreML::Specification::BroadcastToStaticLayerParams::MergePartialFromCodedStream(v94, a2, v837);
                          if (!result) {
                            return result;
                          }
                          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v839)) {
                            return 0;
                          }
                        }
                      }
                      else if (v19 == 1110)
                      {
                        if (v15 != 178) {
                          goto LABEL_9;
                        }
                        if (*v5 != 1110)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1110;
                          operator new();
                        }
                        std::string v185 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v185 < 0)
                        {
                          int v186 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v186 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v186 = *v185;
                          *(void *)a2 = v185 + 1;
                        }
                        v651 = (CoreML::Specification::BroadcastToDynamicLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v186);
                        int v653 = *((_DWORD *)a2 + 13);
                        BOOL v244 = __OFSUB__(v653--, 1);
                        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v653;
                        if (v653 < 0 != v244) {
                          return 0;
                        }
                        int v654 = (int)v651;
                        uint64_t result = CoreML::Specification::BroadcastToDynamicLayerParams::MergePartialFromCodedStream(v651, (char **)a2, v652);
                        if (!result) {
                          return result;
                        }
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v654)) {
                          return 0;
                        }
                      }
                      else if (v19 == 1120)
                      {
                        if (v15 != 2) {
                          goto LABEL_9;
                        }
                        if (*v5 != 1120)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1120;
                          operator new();
                        }
                        std::string v187 = *v6;
                        v398 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v398 < 0)
                        {
                          int v399 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v399 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v399 = *v398;
                          *(void *)a2 = v398 + 1;
                        }
                        int v953 = google::protobuf::io::CodedInputStream::PushLimit(a2, v399);
                        int v955 = *((_DWORD *)a2 + 13);
                        BOOL v244 = __OFSUB__(v955--, 1);
                        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v955;
                        if (v955 < 0 != v244) {
                          return 0;
                        }
                        int v956 = v953;
                        uint64_t result = CoreML::Specification::SqueezeLayerParams::MergePartialFromCodedStream(v187, a2, v954);
                        if (!result) {
                          return result;
                        }
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v956)) {
                          return 0;
                        }
                      }
                      else
                      {
                        if (v19 != 1125 || v15 != 42) {
                          goto LABEL_9;
                        }
                        if (*v5 != 1125)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1125;
                          operator new();
                        }
                        unint64_t v55 = *v6;
                        v300 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v300 < 0)
                        {
                          int v301 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v301 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v301 = *v300;
                          *(void *)a2 = v300 + 1;
                        }
                        int v762 = google::protobuf::io::CodedInputStream::PushLimit(a2, v301);
                        int v764 = *((_DWORD *)a2 + 13);
                        BOOL v244 = __OFSUB__(v764--, 1);
                        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v764;
                        if (v764 < 0 != v244) {
                          return 0;
                        }
                        int v765 = v762;
                        uint64_t result = CoreML::Specification::ExpandDimsLayerParams::MergePartialFromCodedStream(v55, a2, v763);
                        if (!result) {
                          return result;
                        }
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v765)) {
                          return 0;
                        }
                      }
                    }
                    else if (v15 >> 3 <= 0x437)
                    {
                      if (v19 == 1065)
                      {
                        if (v15 != 74) {
                          goto LABEL_9;
                        }
                        if (*v5 != 1065)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1065;
                          operator new();
                        }
                        uint64_t v212 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v212 < 0)
                        {
                          int v213 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v213 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v213 = *v212;
                          *(void *)a2 = v212 + 1;
                        }
                        v675 = (CoreML::Specification::GetShapeLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v213);
                        int v677 = *((_DWORD *)a2 + 13);
                        BOOL v244 = __OFSUB__(v677--, 1);
                        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v677;
                        if (v677 < 0 != v244) {
                          return 0;
                        }
                        int v678 = (int)v675;
                        uint64_t result = CoreML::Specification::GetShapeLayerParams::MergePartialFromCodedStream(v675, (char **)a2, v676);
                        if (!result) {
                          return result;
                        }
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v678)) {
                          return 0;
                        }
                      }
                      else
                      {
                        if (v19 != 1070 || v15 != 114) {
                          goto LABEL_9;
                        }
                        if (*v5 != 1070)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1070;
                          operator new();
                        }
                        unint64_t v76 = *v6;
                        v320 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v320 < 0)
                        {
                          int v321 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v321 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v321 = *v320;
                          *(void *)a2 = v320 + 1;
                        }
                        int v801 = google::protobuf::io::CodedInputStream::PushLimit(a2, v321);
                        int v803 = *((_DWORD *)a2 + 13);
                        BOOL v244 = __OFSUB__(v803--, 1);
                        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v803;
                        if (v803 < 0 != v244) {
                          return 0;
                        }
                        int v804 = v801;
                        uint64_t result = CoreML::Specification::LoadConstantNDLayerParams::MergePartialFromCodedStream(v76, a2, v802);
                        if (!result) {
                          return result;
                        }
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v804)) {
                          return 0;
                        }
                      }
                    }
                    else if (v19 == 1080)
                    {
                      if (v15 != 194) {
                        goto LABEL_9;
                      }
                      if (*v5 != 1080)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 1080;
                        operator new();
                      }
                      long long v150 = *v6;
                      v364 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v364 < 0)
                      {
                        int v365 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v365 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v365 = *v364;
                        *(void *)a2 = v364 + 1;
                      }
                      int v887 = google::protobuf::io::CodedInputStream::PushLimit(a2, v365);
                      int v889 = *((_DWORD *)a2 + 13);
                      BOOL v244 = __OFSUB__(v889--, 1);
                      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v889;
                      if (v889 < 0 != v244) {
                        return 0;
                      }
                      int v890 = v887;
                      uint64_t result = CoreML::Specification::FillLikeLayerParams::MergePartialFromCodedStream(v150, (char **)a2, v888);
                      if (!result) {
                        return result;
                      }
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v890)) {
                        return 0;
                      }
                    }
                    else if (v19 == 1085)
                    {
                      if (v15 != 234) {
                        goto LABEL_9;
                      }
                      if (*v5 != 1085)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 1085;
                        operator new();
                      }
                      unint64_t v151 = *v6;
                      v366 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v366 < 0)
                      {
                        int v367 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v367 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v367 = *v366;
                        *(void *)a2 = v366 + 1;
                      }
                      int v891 = google::protobuf::io::CodedInputStream::PushLimit(a2, v367);
                      int v893 = *((_DWORD *)a2 + 13);
                      BOOL v244 = __OFSUB__(v893--, 1);
                      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v893;
                      if (v893 < 0 != v244) {
                        return 0;
                      }
                      int v894 = v891;
                      uint64_t result = CoreML::Specification::FillStaticLayerParams::MergePartialFromCodedStream(v151, a2, v892);
                      if (!result) {
                        return result;
                      }
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v894)) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (v19 != 1090 || v15 != 18) {
                        goto LABEL_9;
                      }
                      if (*v5 != 1090)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 1090;
                        operator new();
                      }
                      int v39 = *v6;
                      uint64_t v278 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v278 < 0)
                      {
                        int v279 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v279 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v279 = *v278;
                        *(void *)a2 = v278 + 1;
                      }
                      int v719 = google::protobuf::io::CodedInputStream::PushLimit(a2, v279);
                      int v721 = *((_DWORD *)a2 + 13);
                      BOOL v244 = __OFSUB__(v721--, 1);
                      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v721;
                      if (v721 < 0 != v244) {
                        return 0;
                      }
                      int v722 = v719;
                      uint64_t result = CoreML::Specification::FillDynamicLayerParams::MergePartialFromCodedStream(v39, (char **)a2, v720);
                      if (!result) {
                        return result;
                      }
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v722)) {
                        return 0;
                      }
                    }
                  }
                  else if (v15 >> 3 > 0x3F6)
                  {
                    if (v15 >> 3 <= 0x400)
                    {
                      if (v19 == 1015)
                      {
                        if (v15 != 186) {
                          goto LABEL_9;
                        }
                        if (*v5 != 1015)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1015;
                          operator new();
                        }
                        uint64_t v220 = *v6;
                        v436 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v436 < 0)
                        {
                          int v437 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v437 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v437 = *v436;
                          *(void *)a2 = v436 + 1;
                        }
                        int v1027 = google::protobuf::io::CodedInputStream::PushLimit(a2, v437);
                        int v1029 = *((_DWORD *)a2 + 13);
                        BOOL v244 = __OFSUB__(v1029--, 1);
                        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v1029;
                        if (v1029 < 0 != v244) {
                          return 0;
                        }
                        int v1030 = v1027;
                        uint64_t result = CoreML::Specification::TopKLayerParams::MergePartialFromCodedStream(v220, (char **)a2, v1028);
                        if (!result) {
                          return result;
                        }
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1030)) {
                          return 0;
                        }
                      }
                      else
                      {
                        if (v19 != 1020 || v15 != 226) {
                          goto LABEL_9;
                        }
                        if (*v5 != 1020)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1020;
                          operator new();
                        }
                        uint64_t v85 = *v6;
                        v328 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v328 < 0)
                        {
                          int v329 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v329 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v329 = *v328;
                          *(void *)a2 = v328 + 1;
                        }
                        int v816 = google::protobuf::io::CodedInputStream::PushLimit(a2, v329);
                        int v818 = *((_DWORD *)a2 + 13);
                        BOOL v244 = __OFSUB__(v818--, 1);
                        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v818;
                        if (v818 < 0 != v244) {
                          return 0;
                        }
                        int v819 = v816;
                        uint64_t result = CoreML::Specification::ArgMinLayerParams::MergePartialFromCodedStream(v85, (char **)a2, v817);
                        if (!result) {
                          return result;
                        }
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v819)) {
                          return 0;
                        }
                      }
                    }
                    else if (v19 == 1025)
                    {
                      if (v15 != 10) {
                        goto LABEL_9;
                      }
                      if (*v5 != 1025)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 1025;
                        operator new();
                      }
                      v167 = *v6;
                      v378 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v378 < 0)
                      {
                        int v379 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v379 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v379 = *v378;
                        *(void *)a2 = v378 + 1;
                      }
                      int v913 = google::protobuf::io::CodedInputStream::PushLimit(a2, v379);
                      int v915 = *((_DWORD *)a2 + 13);
                      BOOL v244 = __OFSUB__(v915--, 1);
                      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v915;
                      if (v915 < 0 != v244) {
                        return 0;
                      }
                      int v916 = v913;
                      uint64_t result = CoreML::Specification::ArgMaxLayerParams::MergePartialFromCodedStream(v167, (char **)a2, v914);
                      if (!result) {
                        return result;
                      }
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v916)) {
                        return 0;
                      }
                    }
                    else if (v19 == 1040)
                    {
                      if (v15 != 130) {
                        goto LABEL_9;
                      }
                      if (*v5 != 1040)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 1040;
                        operator new();
                      }
                      v168 = *v6;
                      v380 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v380 < 0)
                      {
                        int v381 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v381 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v381 = *v380;
                        *(void *)a2 = v380 + 1;
                      }
                      int v917 = google::protobuf::io::CodedInputStream::PushLimit(a2, v381);
                      int v919 = *((_DWORD *)a2 + 13);
                      BOOL v244 = __OFSUB__(v919--, 1);
                      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v919;
                      if (v919 < 0 != v244) {
                        return 0;
                      }
                      int v920 = v917;
                      uint64_t result = CoreML::Specification::EmbeddingNDLayerParams::MergePartialFromCodedStream(v168, a2, v918);
                      if (!result) {
                        return result;
                      }
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v920)) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (v19 != 1045 || v15 != 170) {
                        goto LABEL_9;
                      }
                      if (*v5 != 1045)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 1045;
                        operator new();
                      }
                      uint64_t v48 = *v6;
                      uint64_t v286 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v286 < 0)
                      {
                        int v287 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v287 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v287 = *v286;
                        *(void *)a2 = v286 + 1;
                      }
                      int v734 = google::protobuf::io::CodedInputStream::PushLimit(a2, v287);
                      int v736 = *((_DWORD *)a2 + 13);
                      BOOL v244 = __OFSUB__(v736--, 1);
                      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v736;
                      if (v736 < 0 != v244) {
                        return 0;
                      }
                      int v737 = v734;
                      uint64_t result = CoreML::Specification::BatchedMatMulLayerParams::MergePartialFromCodedStream(v48, a2, v735);
                      if (!result) {
                        return result;
                      }
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v737)) {
                        return 0;
                      }
                    }
                  }
                  else if (v15 >> 3 <= 0x3E2)
                  {
                    if (v19 == 980)
                    {
                      if (v15 != 162) {
                        goto LABEL_9;
                      }
                      if (*v5 != 980)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 980;
                        operator new();
                      }
                      int64_t v204 = *v6;
                      v416 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v416 < 0)
                      {
                        int v417 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v417 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v417 = *v416;
                        *(void *)a2 = v416 + 1;
                      }
                      int v989 = google::protobuf::io::CodedInputStream::PushLimit(a2, v417);
                      int v991 = *((_DWORD *)a2 + 13);
                      BOOL v244 = __OFSUB__(v991--, 1);
                      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v991;
                      if (v991 < 0 != v244) {
                        return 0;
                      }
                      int v992 = v989;
                      uint64_t result = CoreML::Specification::ConcatNDLayerParams::MergePartialFromCodedStream(v204, (char **)a2, v990);
                      if (!result) {
                        return result;
                      }
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v992)) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (v19 != 985 || v15 != 202) {
                        goto LABEL_9;
                      }
                      if (*v5 != 985)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 985;
                        operator new();
                      }
                      uint64_t v67 = *v6;
                      v310 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v310 < 0)
                      {
                        int v311 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v311 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v311 = *v310;
                        *(void *)a2 = v310 + 1;
                      }
                      int v782 = google::protobuf::io::CodedInputStream::PushLimit(a2, v311);
                      int v784 = *((_DWORD *)a2 + 13);
                      BOOL v244 = __OFSUB__(v784--, 1);
                      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v784;
                      if (v784 < 0 != v244) {
                        return 0;
                      }
                      int v785 = v782;
                      uint64_t result = CoreML::Specification::TransposeLayerParams::MergePartialFromCodedStream(v67, a2, v783);
                      if (!result) {
                        return result;
                      }
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v785)) {
                        return 0;
                      }
                    }
                  }
                  else if (v19 == 995)
                  {
                    if (v15 != 26) {
                      goto LABEL_9;
                    }
                    if (*v5 != 995)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 995;
                      operator new();
                    }
                    long long v132 = *v6;
                    v344 = *(char **)a2;
                    if (*(void *)a2 >= *((void *)a2 + 1) || *v344 < 0)
                    {
                      int v345 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v345 < 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      int v345 = *v344;
                      *(void *)a2 = v344 + 1;
                    }
                    int v848 = google::protobuf::io::CodedInputStream::PushLimit(a2, v345);
                    int v850 = *((_DWORD *)a2 + 13);
                    BOOL v244 = __OFSUB__(v850--, 1);
                    *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v850;
                    if (v850 < 0 != v244) {
                      return 0;
                    }
                    int v851 = v848;
                    uint64_t result = CoreML::Specification::SliceStaticLayerParams::MergePartialFromCodedStream(v132, a2, v849);
                    if (!result) {
                      return result;
                    }
                    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v851)) {
                      return 0;
                    }
                  }
                  else if (v19 == 1000)
                  {
                    if (v15 != 66) {
                      goto LABEL_9;
                    }
                    if (*v5 != 1000)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 1000;
                      operator new();
                    }
                    uint64_t v133 = *v6;
                    v346 = *(char **)a2;
                    if (*(void *)a2 >= *((void *)a2 + 1) || *v346 < 0)
                    {
                      int v347 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v347 < 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      int v347 = *v346;
                      *(void *)a2 = v346 + 1;
                    }
                    int v852 = google::protobuf::io::CodedInputStream::PushLimit(a2, v347);
                    int v854 = *((_DWORD *)a2 + 13);
                    BOOL v244 = __OFSUB__(v854--, 1);
                    *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v854;
                    if (v854 < 0 != v244) {
                      return 0;
                    }
                    int v855 = v852;
                    uint64_t result = CoreML::Specification::SliceDynamicLayerParams::MergePartialFromCodedStream(v133, a2, v853);
                    if (!result) {
                      return result;
                    }
                    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v855)) {
                      return 0;
                    }
                  }
                  else
                  {
                    if (v19 != 1005 || v15 != 106) {
                      goto LABEL_9;
                    }
                    if (*v5 != 1005)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 1005;
                      operator new();
                    }
                    int v29 = *v6;
                    v268 = *(char **)a2;
                    if (*(void *)a2 >= *((void *)a2 + 1) || *v268 < 0)
                    {
                      int v269 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v269 < 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      int v269 = *v268;
                      *(void *)a2 = v268 + 1;
                    }
                    int v699 = google::protobuf::io::CodedInputStream::PushLimit(a2, v269);
                    int v701 = *((_DWORD *)a2 + 13);
                    BOOL v244 = __OFSUB__(v701--, 1);
                    *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v701;
                    if (v701 < 0 != v244) {
                      return 0;
                    }
                    int v702 = v699;
                    uint64_t result = CoreML::Specification::SlidingWindowsLayerParams::MergePartialFromCodedStream(v29, (char **)a2, v700);
                    if (!result) {
                      return result;
                    }
                    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v702)) {
                      return 0;
                    }
                  }
                }
                else if (v15 >> 3 > 0x3A1)
                {
                  if (v15 >> 3 <= 0x3B0)
                  {
                    if (v19 == 930)
                    {
                      if (v15 != 18) {
                        goto LABEL_9;
                      }
                      if (*v5 != 930)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 930;
                        operator new();
                      }
                      std::string::size_type v192 = *v6;
                      v404 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v404 < 0)
                      {
                        int v405 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v405 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v405 = *v404;
                        *(void *)a2 = v404 + 1;
                      }
                      int v965 = google::protobuf::io::CodedInputStream::PushLimit(a2, v405);
                      int v967 = *((_DWORD *)a2 + 13);
                      BOOL v244 = __OFSUB__(v967--, 1);
                      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v967;
                      if (v967 < 0 != v244) {
                        return 0;
                      }
                      int v968 = v965;
                      uint64_t result = CoreML::Specification::GatherLayerParams::MergePartialFromCodedStream(v192, (char **)a2, v966);
                      if (!result) {
                        return result;
                      }
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v968)) {
                        return 0;
                      }
                    }
                    else if (v19 == 935)
                    {
                      if (v15 != 58) {
                        goto LABEL_9;
                      }
                      if (*v5 != 935)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 935;
                        operator new();
                      }
                      long long v193 = *v6;
                      v406 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v406 < 0)
                      {
                        int v407 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v407 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v407 = *v406;
                        *(void *)a2 = v406 + 1;
                      }
                      int v969 = google::protobuf::io::CodedInputStream::PushLimit(a2, v407);
                      int v971 = *((_DWORD *)a2 + 13);
                      BOOL v244 = __OFSUB__(v971--, 1);
                      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v971;
                      if (v971 < 0 != v244) {
                        return 0;
                      }
                      int v972 = v969;
                      uint64_t result = CoreML::Specification::ScatterLayerParams::MergePartialFromCodedStream(v193, (char **)a2, v970);
                      if (!result) {
                        return result;
                      }
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v972)) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (v19 != 940 || v15 != 98) {
                        goto LABEL_9;
                      }
                      if (*v5 != 940)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 940;
                        operator new();
                      }
                      uint64_t v60 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v60 < 0)
                      {
                        int v61 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v61 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v61 = *v60;
                        *(void *)a2 = v60 + 1;
                      }
                      v544 = (CoreML::Specification::GatherNDLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v61);
                      int v546 = *((_DWORD *)a2 + 13);
                      BOOL v244 = __OFSUB__(v546--, 1);
                      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v546;
                      if (v546 < 0 != v244) {
                        return 0;
                      }
                      int v547 = (int)v544;
                      uint64_t result = CoreML::Specification::GatherNDLayerParams::MergePartialFromCodedStream(v544, (char **)a2, v545);
                      if (!result) {
                        return result;
                      }
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v547)) {
                        return 0;
                      }
                    }
                  }
                  else
                  {
                    if (v15 >> 3 <= 0x3BF)
                    {
                      switch(v19)
                      {
                        case 0x3B1u:
                          if (v15 != 138) {
                            goto LABEL_9;
                          }
                          if (*v5 != 945)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 945;
                            operator new();
                          }
                          int v34 = *v6;
                          int v258 = *(char **)a2;
                          if (*(void *)a2 >= *((void *)a2 + 1) || *v258 < 0)
                          {
                            int v259 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v259 < 0) {
                              return 0;
                            }
                          }
                          else
                          {
                            int v259 = *v258;
                            *(void *)a2 = v258 + 1;
                          }
                          int v499 = google::protobuf::io::CodedInputStream::PushLimit(a2, v259);
                          int v501 = *((_DWORD *)a2 + 13);
                          BOOL v244 = __OFSUB__(v501--, 1);
                          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v501;
                          if (v501 < 0 != v244) {
                            return 0;
                          }
                          int v502 = v499;
                          uint64_t result = CoreML::Specification::ScatterNDLayerParams::MergePartialFromCodedStream(v34, (char **)a2, v500);
                          if (!result) {
                            return result;
                          }
                          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v502)) {
                            return 0;
                          }
                          continue;
                        case 0x3B6u:
                          if (v15 != 178) {
                            goto LABEL_9;
                          }
                          if (*v5 != 950)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 950;
                            operator new();
                          }
                          uint64_t v118 = *v6;
                          v260 = *(char **)a2;
                          if (*(void *)a2 >= *((void *)a2 + 1) || *v260 < 0)
                          {
                            int v261 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v261 < 0) {
                              return 0;
                            }
                          }
                          else
                          {
                            int v261 = *v260;
                            *(void *)a2 = v260 + 1;
                          }
                          int v503 = google::protobuf::io::CodedInputStream::PushLimit(a2, v261);
                          int v505 = *((_DWORD *)a2 + 13);
                          BOOL v244 = __OFSUB__(v505--, 1);
                          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v505;
                          if (v505 < 0 != v244) {
                            return 0;
                          }
                          int v506 = v503;
                          uint64_t result = CoreML::Specification::SoftmaxNDLayerParams::MergePartialFromCodedStream(v118, (char **)a2, v504);
                          if (!result) {
                            return result;
                          }
                          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v506)) {
                            return 0;
                          }
                          continue;
                        case 0x3B8u:
                          if (v15 != 194) {
                            goto LABEL_9;
                          }
                          if (*v5 != 952)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 952;
                            operator new();
                          }
                          char v119 = *v6;
                          int64_t v262 = *(char **)a2;
                          if (*(void *)a2 >= *((void *)a2 + 1) || *v262 < 0)
                          {
                            int v263 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v263 < 0) {
                              return 0;
                            }
                          }
                          else
                          {
                            int v263 = *v262;
                            *(void *)a2 = v262 + 1;
                          }
                          int v507 = google::protobuf::io::CodedInputStream::PushLimit(a2, v263);
                          int v509 = *((_DWORD *)a2 + 13);
                          BOOL v244 = __OFSUB__(v509--, 1);
                          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v509;
                          if (v509 < 0 != v244) {
                            return 0;
                          }
                          int v510 = v507;
                          uint64_t result = CoreML::Specification::GatherAlongAxisLayerParams::MergePartialFromCodedStream(v119, (char **)a2, v508);
                          if (!result) {
                            return result;
                          }
                          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v510)) {
                            return 0;
                          }
                          continue;
                        case 0x3BAu:
                          if (v15 != 210) {
                            goto LABEL_9;
                          }
                          if (*v5 != 954)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 954;
                            operator new();
                          }
                          int v120 = *v6;
                          int64_t v264 = *(char **)a2;
                          if (*(void *)a2 >= *((void *)a2 + 1) || *v264 < 0)
                          {
                            int v265 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v265 < 0) {
                              return 0;
                            }
                          }
                          else
                          {
                            int v265 = *v264;
                            *(void *)a2 = v264 + 1;
                          }
                          int v511 = google::protobuf::io::CodedInputStream::PushLimit(a2, v265);
                          int v513 = *((_DWORD *)a2 + 13);
                          BOOL v244 = __OFSUB__(v513--, 1);
                          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v513;
                          if (v513 < 0 != v244) {
                            return 0;
                          }
                          int v514 = v511;
                          uint64_t result = CoreML::Specification::ScatterAlongAxisLayerParams::MergePartialFromCodedStream(v120, (char **)a2, v512);
                          if (!result) {
                            return result;
                          }
                          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v514)) {
                            return 0;
                          }
                          continue;
                        default:
                          goto LABEL_9;
                      }
                    }
                    if (v19 == 960)
                    {
                      if (v15 != 2) {
                        goto LABEL_9;
                      }
                      if (*v5 != 960)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 960;
                        operator new();
                      }
                      v201 = *v6;
                      v410 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v410 < 0)
                      {
                        int v411 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v411 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v411 = *v410;
                        *(void *)a2 = v410 + 1;
                      }
                      int v977 = google::protobuf::io::CodedInputStream::PushLimit(a2, v411);
                      int v979 = *((_DWORD *)a2 + 13);
                      BOOL v244 = __OFSUB__(v979--, 1);
                      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v979;
                      if (v979 < 0 != v244) {
                        return 0;
                      }
                      int v980 = v977;
                      uint64_t result = CoreML::Specification::ReverseLayerParams::MergePartialFromCodedStream(v201, a2, v978);
                      if (!result) {
                        return result;
                      }
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v980)) {
                        return 0;
                      }
                    }
                    else if (v19 == 965)
                    {
                      if (v15 != 42) {
                        goto LABEL_9;
                      }
                      if (*v5 != 965)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 965;
                        operator new();
                      }
                      long long v202 = *v6;
                      v412 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v412 < 0)
                      {
                        int v413 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v413 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v413 = *v412;
                        *(void *)a2 = v412 + 1;
                      }
                      int v981 = google::protobuf::io::CodedInputStream::PushLimit(a2, v413);
                      int v983 = *((_DWORD *)a2 + 13);
                      BOOL v244 = __OFSUB__(v983--, 1);
                      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v983;
                      if (v983 < 0 != v244) {
                        return 0;
                      }
                      int v984 = v981;
                      uint64_t result = CoreML::Specification::ReverseSeqLayerParams::MergePartialFromCodedStream(v202, (char **)a2, v982);
                      if (!result) {
                        return result;
                      }
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v984)) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (v19 != 975 || v15 != 122) {
                        goto LABEL_9;
                      }
                      if (*v5 != 975)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 975;
                        operator new();
                      }
                      uint64_t v65 = *v6;
                      v306 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v306 < 0)
                      {
                        int v307 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v307 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v307 = *v306;
                        *(void *)a2 = v306 + 1;
                      }
                      int v774 = google::protobuf::io::CodedInputStream::PushLimit(a2, v307);
                      int v776 = *((_DWORD *)a2 + 13);
                      BOOL v244 = __OFSUB__(v776--, 1);
                      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v776;
                      if (v776 < 0 != v244) {
                        return 0;
                      }
                      int v777 = v774;
                      uint64_t result = CoreML::Specification::SplitNDLayerParams::MergePartialFromCodedStream(v65, a2, v775);
                      if (!result) {
                        return result;
                      }
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v777)) {
                        return 0;
                      }
                    }
                  }
                }
                else if (v15 >> 3 <= 0x379)
                {
                  if (v15 >> 3 <= 0x36A)
                  {
                    if (v19 == 865)
                    {
                      if (v15 != 10) {
                        goto LABEL_9;
                      }
                      if (*v5 != 865)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 865;
                        operator new();
                      }
                      uint64_t v216 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v216 < 0)
                      {
                        int v217 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v217 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v217 = *v216;
                        *(void *)a2 = v216 + 1;
                      }
                      v679 = (CoreML::Specification::ModBroadcastableLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v217);
                      int v681 = *((_DWORD *)a2 + 13);
                      BOOL v244 = __OFSUB__(v681--, 1);
                      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v681;
                      if (v681 < 0 != v244) {
                        return 0;
                      }
                      int v682 = (int)v679;
                      uint64_t result = CoreML::Specification::ModBroadcastableLayerParams::MergePartialFromCodedStream(v679, (char **)a2, v680);
                      if (!result) {
                        return result;
                      }
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v682)) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (v19 != 870 || v15 != 50) {
                        goto LABEL_9;
                      }
                      if (*v5 != 870)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 870;
                        operator new();
                      }
                      uint64_t v80 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v80 < 0)
                      {
                        int v81 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v81 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v81 = *v80;
                        *(void *)a2 = v80 + 1;
                      }
                      v560 = (CoreML::Specification::MinBroadcastableLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v81);
                      int v562 = *((_DWORD *)a2 + 13);
                      BOOL v244 = __OFSUB__(v562--, 1);
                      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v562;
                      if (v562 < 0 != v244) {
                        return 0;
                      }
                      int v563 = (int)v560;
                      uint64_t result = CoreML::Specification::MinBroadcastableLayerParams::MergePartialFromCodedStream(v560, (char **)a2, v561);
                      if (!result) {
                        return result;
                      }
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v563)) {
                        return 0;
                      }
                    }
                  }
                  else if (v19 == 875)
                  {
                    if (v15 != 90) {
                      goto LABEL_9;
                    }
                    if (*v5 != 875)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 875;
                      operator new();
                    }
                    unint64_t v156 = *(char **)a2;
                    if (*(void *)a2 >= *((void *)a2 + 1) || *v156 < 0)
                    {
                      int v157 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v157 < 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      int v157 = *v156;
                      *(void *)a2 = v156 + 1;
                    }
                    v615 = (CoreML::Specification::MaxBroadcastableLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v157);
                    int v617 = *((_DWORD *)a2 + 13);
                    BOOL v244 = __OFSUB__(v617--, 1);
                    *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v617;
                    if (v617 < 0 != v244) {
                      return 0;
                    }
                    int v618 = (int)v615;
                    uint64_t result = CoreML::Specification::MaxBroadcastableLayerParams::MergePartialFromCodedStream(v615, (char **)a2, v616);
                    if (!result) {
                      return result;
                    }
                    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v618)) {
                      return 0;
                    }
                  }
                  else if (v19 == 880)
                  {
                    if (v15 != 130) {
                      goto LABEL_9;
                    }
                    if (*v5 != 880)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 880;
                      operator new();
                    }
                    uint64_t v158 = *(char **)a2;
                    if (*(void *)a2 >= *((void *)a2 + 1) || *v158 < 0)
                    {
                      int v159 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v159 < 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      int v159 = *v158;
                      *(void *)a2 = v158 + 1;
                    }
                    v619 = (CoreML::Specification::AddBroadcastableLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v159);
                    int v621 = *((_DWORD *)a2 + 13);
                    BOOL v244 = __OFSUB__(v621--, 1);
                    *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v621;
                    if (v621 < 0 != v244) {
                      return 0;
                    }
                    int v622 = (int)v619;
                    uint64_t result = CoreML::Specification::AddBroadcastableLayerParams::MergePartialFromCodedStream(v619, (char **)a2, v620);
                    if (!result) {
                      return result;
                    }
                    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v622)) {
                      return 0;
                    }
                  }
                  else
                  {
                    if (v19 != 885 || v15 != 170) {
                      goto LABEL_9;
                    }
                    if (*v5 != 885)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 885;
                      operator new();
                    }
                    int v43 = *(char **)a2;
                    if (*(void *)a2 >= *((void *)a2 + 1) || *v43 < 0)
                    {
                      int v44 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v44 < 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      int v44 = *v43;
                      *(void *)a2 = v43 + 1;
                    }
                    v532 = (CoreML::Specification::PowBroadcastableLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v44);
                    int v534 = *((_DWORD *)a2 + 13);
                    BOOL v244 = __OFSUB__(v534--, 1);
                    *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v534;
                    if (v534 < 0 != v244) {
                      return 0;
                    }
                    int v535 = (int)v532;
                    uint64_t result = CoreML::Specification::PowBroadcastableLayerParams::MergePartialFromCodedStream(v532, (char **)a2, v533);
                    if (!result) {
                      return result;
                    }
                    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v535)) {
                      return 0;
                    }
                  }
                }
                else if (v15 >> 3 > 0x388)
                {
                  if (v19 == 905)
                  {
                    if (v15 != 74) {
                      goto LABEL_9;
                    }
                    if (*v5 != 905)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 905;
                      operator new();
                    }
                    v194 = *(char **)a2;
                    if (*(void *)a2 >= *((void *)a2 + 1) || *v194 < 0)
                    {
                      int v195 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v195 < 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      int v195 = *v194;
                      *(void *)a2 = v194 + 1;
                    }
                    v659 = (CoreML::Specification::SubtractBroadcastableLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v195);
                    int v661 = *((_DWORD *)a2 + 13);
                    BOOL v244 = __OFSUB__(v661--, 1);
                    *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v661;
                    if (v661 < 0 != v244) {
                      return 0;
                    }
                    int v662 = (int)v659;
                    uint64_t result = CoreML::Specification::SubtractBroadcastableLayerParams::MergePartialFromCodedStream(v659, (char **)a2, v660);
                    if (!result) {
                      return result;
                    }
                    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v662)) {
                      return 0;
                    }
                  }
                  else if (v19 == 920)
                  {
                    if (v15 != 194) {
                      goto LABEL_9;
                    }
                    if (*v5 != 920)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 920;
                      operator new();
                    }
                    std::string::size_type v196 = *v6;
                    v408 = *(char **)a2;
                    if (*(void *)a2 >= *((void *)a2 + 1) || *v408 < 0)
                    {
                      int v409 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v409 < 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      int v409 = *v408;
                      *(void *)a2 = v408 + 1;
                    }
                    int v973 = google::protobuf::io::CodedInputStream::PushLimit(a2, v409);
                    int v975 = *((_DWORD *)a2 + 13);
                    BOOL v244 = __OFSUB__(v975--, 1);
                    *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v975;
                    if (v975 < 0 != v244) {
                      return 0;
                    }
                    int v976 = v973;
                    uint64_t result = CoreML::Specification::TileLayerParams::MergePartialFromCodedStream(v196, a2, v974);
                    if (!result) {
                      return result;
                    }
                    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v976)) {
                      return 0;
                    }
                  }
                  else
                  {
                    if (v19 != 925 || v15 != 234) {
                      goto LABEL_9;
                    }
                    if (*v5 != 925)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 925;
                      operator new();
                    }
                    std::string::size_type v62 = *v6;
                    v304 = *(char **)a2;
                    if (*(void *)a2 >= *((void *)a2 + 1) || *v304 < 0)
                    {
                      int v305 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v305 < 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      int v305 = *v304;
                      *(void *)a2 = v304 + 1;
                    }
                    int v770 = google::protobuf::io::CodedInputStream::PushLimit(a2, v305);
                    int v772 = *((_DWORD *)a2 + 13);
                    BOOL v244 = __OFSUB__(v772--, 1);
                    *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v772;
                    if (v772 < 0 != v244) {
                      return 0;
                    }
                    int v773 = v770;
                    uint64_t result = CoreML::Specification::StackLayerParams::MergePartialFromCodedStream(v62, (char **)a2, v771);
                    if (!result) {
                      return result;
                    }
                    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v773)) {
                      return 0;
                    }
                  }
                }
                else if (v19 == 890)
                {
                  if (v15 != 210) {
                    goto LABEL_9;
                  }
                  if (*v5 != 890)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 890;
                    operator new();
                  }
                  v121 = *(char **)a2;
                  if (*(void *)a2 >= *((void *)a2 + 1) || *v121 < 0)
                  {
                    int v122 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v122 < 0) {
                      return 0;
                    }
                  }
                  else
                  {
                    int v122 = *v121;
                    *(void *)a2 = v121 + 1;
                  }
                  v580 = (CoreML::Specification::DivideBroadcastableLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v122);
                  int v582 = *((_DWORD *)a2 + 13);
                  BOOL v244 = __OFSUB__(v582--, 1);
                  *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v582;
                  if (v582 < 0 != v244) {
                    return 0;
                  }
                  int v583 = (int)v580;
                  uint64_t result = CoreML::Specification::DivideBroadcastableLayerParams::MergePartialFromCodedStream(v580, (char **)a2, v581);
                  if (!result) {
                    return result;
                  }
                  if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v583)) {
                    return 0;
                  }
                }
                else if (v19 == 895)
                {
                  if (v15 != 250) {
                    goto LABEL_9;
                  }
                  if (*v5 != 895)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 895;
                    operator new();
                  }
                  signed int v123 = *(char **)a2;
                  if (*(void *)a2 >= *((void *)a2 + 1) || *v123 < 0)
                  {
                    int v124 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v124 < 0) {
                      return 0;
                    }
                  }
                  else
                  {
                    int v124 = *v123;
                    *(void *)a2 = v123 + 1;
                  }
                  v584 = (CoreML::Specification::FloorDivBroadcastableLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v124);
                  int v586 = *((_DWORD *)a2 + 13);
                  BOOL v244 = __OFSUB__(v586--, 1);
                  *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v586;
                  if (v586 < 0 != v244) {
                    return 0;
                  }
                  int v587 = (int)v584;
                  uint64_t result = CoreML::Specification::FloorDivBroadcastableLayerParams::MergePartialFromCodedStream(v584, (char **)a2, v585);
                  if (!result) {
                    return result;
                  }
                  if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v587)) {
                    return 0;
                  }
                }
                else
                {
                  if (v19 != 900 || v15 != 34) {
                    goto LABEL_9;
                  }
                  if (*v5 != 900)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 900;
                    operator new();
                  }
                  unsigned int v23 = *(char **)a2;
                  if (*(void *)a2 >= *((void *)a2 + 1) || *v23 < 0)
                  {
                    int v24 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v24 < 0) {
                      return 0;
                    }
                  }
                  else
                  {
                    int v24 = *v23;
                    *(void *)a2 = v23 + 1;
                  }
                  v516 = (CoreML::Specification::MultiplyBroadcastableLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v24);
                  int v518 = *((_DWORD *)a2 + 13);
                  BOOL v244 = __OFSUB__(v518--, 1);
                  *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v518;
                  if (v518 < 0 != v244) {
                    return 0;
                  }
                  int v519 = (int)v516;
                  uint64_t result = CoreML::Specification::MultiplyBroadcastableLayerParams::MergePartialFromCodedStream(v516, (char **)a2, v517);
                  if (!result) {
                    return result;
                  }
                  if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v519)) {
                    return 0;
                  }
                }
              }
              if (v15 >> 3 <= 0x199) {
                break;
              }
              if (v15 >> 3 > 0x2DE)
              {
                if (v15 >> 3 > 0x32E)
                {
                  if (v15 >> 3 > 0x347)
                  {
                    if (v15 >> 3 > 0x351)
                    {
                      if (v19 == 850)
                      {
                        if (v15 != 146) {
                          goto LABEL_9;
                        }
                        if (*v5 != 850)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 850;
                          operator new();
                        }
                        int v231 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v231 < 0)
                        {
                          int v232 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v232 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v232 = *v231;
                          *(void *)a2 = v231 + 1;
                        }
                        v691 = (CoreML::Specification::LogicalNotLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v232);
                        int v693 = *((_DWORD *)a2 + 13);
                        BOOL v244 = __OFSUB__(v693--, 1);
                        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v693;
                        if (v693 < 0 != v244) {
                          return 0;
                        }
                        int v694 = (int)v691;
                        uint64_t result = CoreML::Specification::LogicalNotLayerParams::MergePartialFromCodedStream(v691, (char **)a2, v692);
                        if (!result) {
                          return result;
                        }
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v694)) {
                          return 0;
                        }
                      }
                      else
                      {
                        if (v19 != 855 || v15 != 186) {
                          goto LABEL_9;
                        }
                        if (*v5 != 855)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 855;
                          operator new();
                        }
                        unint64_t v96 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v96 < 0)
                        {
                          int v97 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v97 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v97 = *v96;
                          *(void *)a2 = v96 + 1;
                        }
                        v576 = (CoreML::Specification::LogicalAndLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v97);
                        int v578 = *((_DWORD *)a2 + 13);
                        BOOL v244 = __OFSUB__(v578--, 1);
                        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v578;
                        if (v578 < 0 != v244) {
                          return 0;
                        }
                        int v579 = (int)v576;
                        uint64_t result = CoreML::Specification::LogicalAndLayerParams::MergePartialFromCodedStream(v576, (char **)a2, v577);
                        if (!result) {
                          return result;
                        }
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v579)) {
                          return 0;
                        }
                      }
                    }
                    else if (v19 == 840)
                    {
                      if (v15 != 66) {
                        goto LABEL_9;
                      }
                      if (*v5 != 840)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 840;
                        operator new();
                      }
                      uint64_t v190 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v190 < 0)
                      {
                        int v191 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v191 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v191 = *v190;
                        *(void *)a2 = v190 + 1;
                      }
                      v655 = (CoreML::Specification::LogicalOrLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v191);
                      int v657 = *((_DWORD *)a2 + 13);
                      BOOL v244 = __OFSUB__(v657--, 1);
                      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v657;
                      if (v657 < 0 != v244) {
                        return 0;
                      }
                      int v658 = (int)v655;
                      uint64_t result = CoreML::Specification::LogicalOrLayerParams::MergePartialFromCodedStream(v655, (char **)a2, v656);
                      if (!result) {
                        return result;
                      }
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v658)) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (v19 != 845 || v15 != 106) {
                        goto LABEL_9;
                      }
                      if (*v5 != 845)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 845;
                        operator new();
                      }
                      uint64_t v58 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v58 < 0)
                      {
                        int v59 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v59 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v59 = *v58;
                        *(void *)a2 = v58 + 1;
                      }
                      v540 = (CoreML::Specification::LogicalXorLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v59);
                      int v542 = *((_DWORD *)a2 + 13);
                      BOOL v244 = __OFSUB__(v542--, 1);
                      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v542;
                      if (v542 < 0 != v244) {
                        return 0;
                      }
                      int v543 = (int)v540;
                      uint64_t result = CoreML::Specification::LogicalXorLayerParams::MergePartialFromCodedStream(v540, (char **)a2, v541);
                      if (!result) {
                        return result;
                      }
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v543)) {
                        return 0;
                      }
                    }
                  }
                  else
                  {
                    switch(v19)
                    {
                      case 0x339u:
                        if (v15 != 202) {
                          goto LABEL_9;
                        }
                        if (*v5 != 825)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 825;
                          operator new();
                        }
                        unint64_t v40 = *v6;
                        uint64_t v250 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v250 < 0)
                        {
                          int v251 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v251 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v251 = *v250;
                          *(void *)a2 = v250 + 1;
                        }
                        int v482 = google::protobuf::io::CodedInputStream::PushLimit(a2, v251);
                        int v484 = *((_DWORD *)a2 + 13);
                        BOOL v244 = __OFSUB__(v484--, 1);
                        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v484;
                        if (v484 < 0 != v244) {
                          return 0;
                        }
                        int v485 = v482;
                        uint64_t result = CoreML::Specification::LessThanLayerParams::MergePartialFromCodedStream(v40, (char **)a2, v483);
                        if (!result) {
                          return result;
                        }
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v485)) {
                          return 0;
                        }
                        goto LABEL_2;
                      case 0x33Au:
                      case 0x33Cu:
                      case 0x33Du:
                      case 0x33Fu:
                        goto LABEL_9;
                      case 0x33Bu:
                        if (v15 != 218) {
                          goto LABEL_9;
                        }
                        if (*v5 != 827)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 827;
                          operator new();
                        }
                        uint64_t v101 = *v6;
                        uint64_t v252 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v252 < 0)
                        {
                          int v253 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v253 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v253 = *v252;
                          *(void *)a2 = v252 + 1;
                        }
                        int v486 = google::protobuf::io::CodedInputStream::PushLimit(a2, v253);
                        int v488 = *((_DWORD *)a2 + 13);
                        BOOL v244 = __OFSUB__(v488--, 1);
                        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v488;
                        if (v488 < 0 != v244) {
                          return 0;
                        }
                        int v489 = v486;
                        uint64_t result = CoreML::Specification::LessEqualLayerParams::MergePartialFromCodedStream(v101, (char **)a2, v487);
                        if (!result) {
                          return result;
                        }
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v489)) {
                          return 0;
                        }
                        goto LABEL_2;
                      case 0x33Eu:
                        if (v15 != 242) {
                          goto LABEL_9;
                        }
                        if (*v5 != 830)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 830;
                          operator new();
                        }
                        uint64_t v102 = *v6;
                        uint64_t v254 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v254 < 0)
                        {
                          int v255 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v255 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v255 = *v254;
                          *(void *)a2 = v254 + 1;
                        }
                        int v490 = google::protobuf::io::CodedInputStream::PushLimit(a2, v255);
                        int v492 = *((_DWORD *)a2 + 13);
                        BOOL v244 = __OFSUB__(v492--, 1);
                        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v492;
                        if (v492 < 0 != v244) {
                          return 0;
                        }
                        int v493 = v490;
                        uint64_t result = CoreML::Specification::GreaterThanLayerParams::MergePartialFromCodedStream(v102, (char **)a2, v491);
                        if (!result) {
                          return result;
                        }
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v493)) {
                          return 0;
                        }
                        goto LABEL_2;
                      case 0x340u:
                        if (v15 != 2) {
                          goto LABEL_9;
                        }
                        if (*v5 != 832)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 832;
                          operator new();
                        }
                        int64_t v103 = *v6;
                        uint64_t v256 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v256 < 0)
                        {
                          int v257 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v257 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v257 = *v256;
                          *(void *)a2 = v256 + 1;
                        }
                        int v494 = google::protobuf::io::CodedInputStream::PushLimit(a2, v257);
                        int v496 = *((_DWORD *)a2 + 13);
                        BOOL v244 = __OFSUB__(v496--, 1);
                        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v496;
                        if (v496 < 0 != v244) {
                          return 0;
                        }
                        int v497 = v494;
                        uint64_t result = CoreML::Specification::GreaterEqualLayerParams::MergePartialFromCodedStream(v103, (char **)a2, v495);
                        if (!result) {
                          return result;
                        }
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v497)) {
                          return 0;
                        }
                        goto LABEL_2;
                      default:
                        if (v19 == 815)
                        {
                          if (v15 != 122) {
                            goto LABEL_9;
                          }
                          if (*v5 != 815)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 815;
                            operator new();
                          }
                          int v233 = *v6;
                          v464 = *(char **)a2;
                          if (*(void *)a2 >= *((void *)a2 + 1) || *v464 < 0)
                          {
                            int v465 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v465 < 0) {
                              return 0;
                            }
                          }
                          else
                          {
                            int v465 = *v464;
                            *(void *)a2 = v464 + 1;
                          }
                          int v1059 = google::protobuf::io::CodedInputStream::PushLimit(a2, v465);
                          int v1061 = *((_DWORD *)a2 + 13);
                          BOOL v244 = __OFSUB__(v1061--, 1);
                          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v1061;
                          if (v1061 < 0 != v244) {
                            return 0;
                          }
                          int v1062 = v1059;
                          uint64_t result = CoreML::Specification::EqualLayerParams::MergePartialFromCodedStream(v233, (char **)a2, v1060);
                          if (!result) {
                            return result;
                          }
                          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1062)) {
                            return 0;
                          }
                        }
                        else
                        {
                          if (v19 != 820 || v15 != 162) {
                            goto LABEL_9;
                          }
                          if (*v5 != 820)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 820;
                            operator new();
                          }
                          uint64_t v77 = *v6;
                          v462 = *(char **)a2;
                          if (*(void *)a2 >= *((void *)a2 + 1) || *v462 < 0)
                          {
                            int v463 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v463 < 0) {
                              return 0;
                            }
                          }
                          else
                          {
                            int v463 = *v462;
                            *(void *)a2 = v462 + 1;
                          }
                          int v1055 = google::protobuf::io::CodedInputStream::PushLimit(a2, v463);
                          int v1057 = *((_DWORD *)a2 + 13);
                          BOOL v244 = __OFSUB__(v1057--, 1);
                          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v1057;
                          if (v1057 < 0 != v244) {
                            return 0;
                          }
                          int v1058 = v1055;
                          uint64_t result = CoreML::Specification::NotEqualLayerParams::MergePartialFromCodedStream(v77, (char **)a2, v1056);
                          if (!result) {
                            return result;
                          }
                          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1058)) {
                            return 0;
                          }
                        }
                        break;
                    }
                  }
                }
                else if (v15 >> 3 > 0x301)
                {
                  if (v15 >> 3 <= 0x30B)
                  {
                    if (v19 == 770)
                    {
                      if (v15 != 18) {
                        goto LABEL_9;
                      }
                      if (*v5 != 770)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 770;
                        operator new();
                      }
                      unint64_t v221 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v221 < 0)
                      {
                        int v222 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v222 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v222 = *v221;
                        *(void *)a2 = v221 + 1;
                      }
                      v683 = (CoreML::Specification::AsinhLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v222);
                      int v685 = *((_DWORD *)a2 + 13);
                      BOOL v244 = __OFSUB__(v685--, 1);
                      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v685;
                      if (v685 < 0 != v244) {
                        return 0;
                      }
                      int v686 = (int)v683;
                      uint64_t result = CoreML::Specification::AsinhLayerParams::MergePartialFromCodedStream(v683, (char **)a2, v684);
                      if (!result) {
                        return result;
                      }
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v686)) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (v19 != 775 || v15 != 58) {
                        goto LABEL_9;
                      }
                      if (*v5 != 775)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 775;
                        operator new();
                      }
                      unint64_t v86 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v86 < 0)
                      {
                        int v87 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v87 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v87 = *v86;
                        *(void *)a2 = v86 + 1;
                      }
                      v568 = (CoreML::Specification::AcoshLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v87);
                      int v570 = *((_DWORD *)a2 + 13);
                      BOOL v244 = __OFSUB__(v570--, 1);
                      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v570;
                      if (v570 < 0 != v244) {
                        return 0;
                      }
                      int v571 = (int)v568;
                      uint64_t result = CoreML::Specification::AcoshLayerParams::MergePartialFromCodedStream(v568, (char **)a2, v569);
                      if (!result) {
                        return result;
                      }
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v571)) {
                        return 0;
                      }
                    }
                  }
                  else if (v19 == 780)
                  {
                    if (v15 != 98) {
                      goto LABEL_9;
                    }
                    if (*v5 != 780)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 780;
                      operator new();
                    }
                    long long v169 = *(char **)a2;
                    if (*(void *)a2 >= *((void *)a2 + 1) || *v169 < 0)
                    {
                      int v170 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v170 < 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      int v170 = *v169;
                      *(void *)a2 = v169 + 1;
                    }
                    v635 = (CoreML::Specification::AtanhLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v170);
                    int v637 = *((_DWORD *)a2 + 13);
                    BOOL v244 = __OFSUB__(v637--, 1);
                    *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v637;
                    if (v637 < 0 != v244) {
                      return 0;
                    }
                    int v638 = (int)v635;
                    uint64_t result = CoreML::Specification::AtanhLayerParams::MergePartialFromCodedStream(v635, (char **)a2, v636);
                    if (!result) {
                      return result;
                    }
                    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v638)) {
                      return 0;
                    }
                  }
                  else if (v19 == 790)
                  {
                    if (v15 != 178) {
                      goto LABEL_9;
                    }
                    if (*v5 != 790)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 790;
                      operator new();
                    }
                    long long v171 = *(char **)a2;
                    if (*(void *)a2 >= *((void *)a2 + 1) || *v171 < 0)
                    {
                      int v172 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v172 < 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      int v172 = *v171;
                      *(void *)a2 = v171 + 1;
                    }
                    v639 = (CoreML::Specification::ErfLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v172);
                    int v641 = *((_DWORD *)a2 + 13);
                    BOOL v244 = __OFSUB__(v641--, 1);
                    *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v641;
                    if (v641 < 0 != v244) {
                      return 0;
                    }
                    int v642 = (int)v639;
                    uint64_t result = CoreML::Specification::ErfLayerParams::MergePartialFromCodedStream(v639, (char **)a2, v640);
                    if (!result) {
                      return result;
                    }
                    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v642)) {
                      return 0;
                    }
                  }
                  else
                  {
                    if (v19 != 795 || v15 != 218) {
                      goto LABEL_9;
                    }
                    if (*v5 != 795)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 795;
                      operator new();
                    }
                    BOOL v49 = *v6;
                    v288 = *(char **)a2;
                    if (*(void *)a2 >= *((void *)a2 + 1) || *v288 < 0)
                    {
                      int v289 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v289 < 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      int v289 = *v288;
                      *(void *)a2 = v288 + 1;
                    }
                    int v738 = google::protobuf::io::CodedInputStream::PushLimit(a2, v289);
                    int v740 = *((_DWORD *)a2 + 13);
                    BOOL v244 = __OFSUB__(v740--, 1);
                    *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v740;
                    if (v740 < 0 != v244) {
                      return 0;
                    }
                    int v741 = v738;
                    uint64_t result = CoreML::Specification::GeluLayerParams::MergePartialFromCodedStream(v49, (char **)a2, v739);
                    if (!result) {
                      return result;
                    }
                    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v741)) {
                      return 0;
                    }
                  }
                }
                else if (v15 >> 3 <= 0x2ED)
                {
                  if (v19 == 735)
                  {
                    if (v15 != 250) {
                      goto LABEL_9;
                    }
                    if (*v5 != 735)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 735;
                      operator new();
                    }
                    v205 = *(char **)a2;
                    if (*(void *)a2 >= *((void *)a2 + 1) || *v205 < 0)
                    {
                      int v206 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v206 < 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      int v206 = *v205;
                      *(void *)a2 = v205 + 1;
                    }
                    v671 = (CoreML::Specification::AcosLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v206);
                    int v673 = *((_DWORD *)a2 + 13);
                    BOOL v244 = __OFSUB__(v673--, 1);
                    *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v673;
                    if (v673 < 0 != v244) {
                      return 0;
                    }
                    int v674 = (int)v671;
                    uint64_t result = CoreML::Specification::AcosLayerParams::MergePartialFromCodedStream(v671, (char **)a2, v672);
                    if (!result) {
                      return result;
                    }
                    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v674)) {
                      return 0;
                    }
                  }
                  else
                  {
                    if (v19 != 740 || v15 != 34) {
                      goto LABEL_9;
                    }
                    if (*v5 != 740)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 740;
                      operator new();
                    }
                    uint64_t v68 = *(char **)a2;
                    if (*(void *)a2 >= *((void *)a2 + 1) || *v68 < 0)
                    {
                      int v69 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v69 < 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      int v69 = *v68;
                      *(void *)a2 = v68 + 1;
                    }
                    v552 = (CoreML::Specification::AtanLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v69);
                    int v554 = *((_DWORD *)a2 + 13);
                    BOOL v244 = __OFSUB__(v554--, 1);
                    *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v554;
                    if (v554 < 0 != v244) {
                      return 0;
                    }
                    int v555 = (int)v552;
                    uint64_t result = CoreML::Specification::AtanLayerParams::MergePartialFromCodedStream(v552, (char **)a2, v553);
                    if (!result) {
                      return result;
                    }
                    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v555)) {
                      return 0;
                    }
                  }
                }
                else if (v19 == 750)
                {
                  if (v15 != 114) {
                    goto LABEL_9;
                  }
                  if (*v5 != 750)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 750;
                    operator new();
                  }
                  long long v134 = *(char **)a2;
                  if (*(void *)a2 >= *((void *)a2 + 1) || *v134 < 0)
                  {
                    int v135 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v135 < 0) {
                      return 0;
                    }
                  }
                  else
                  {
                    int v135 = *v134;
                    *(void *)a2 = v134 + 1;
                  }
                  v600 = (CoreML::Specification::SinhLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v135);
                  int v602 = *((_DWORD *)a2 + 13);
                  BOOL v244 = __OFSUB__(v602--, 1);
                  *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v602;
                  if (v602 < 0 != v244) {
                    return 0;
                  }
                  int v603 = (int)v600;
                  uint64_t result = CoreML::Specification::SinhLayerParams::MergePartialFromCodedStream(v600, (char **)a2, v601);
                  if (!result) {
                    return result;
                  }
                  if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v603)) {
                    return 0;
                  }
                }
                else if (v19 == 755)
                {
                  if (v15 != 154) {
                    goto LABEL_9;
                  }
                  if (*v5 != 755)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 755;
                    operator new();
                  }
                  uint64_t v136 = *(char **)a2;
                  if (*(void *)a2 >= *((void *)a2 + 1) || *v136 < 0)
                  {
                    int v137 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v137 < 0) {
                      return 0;
                    }
                  }
                  else
                  {
                    int v137 = *v136;
                    *(void *)a2 = v136 + 1;
                  }
                  v604 = (CoreML::Specification::CoshLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v137);
                  int v606 = *((_DWORD *)a2 + 13);
                  BOOL v244 = __OFSUB__(v606--, 1);
                  *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v606;
                  if (v606 < 0 != v244) {
                    return 0;
                  }
                  int v607 = (int)v604;
                  uint64_t result = CoreML::Specification::CoshLayerParams::MergePartialFromCodedStream(v604, (char **)a2, v605);
                  if (!result) {
                    return result;
                  }
                  if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v607)) {
                    return 0;
                  }
                }
                else
                {
                  if (v19 != 760 || v15 != 194) {
                    goto LABEL_9;
                  }
                  if (*v5 != 760)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 760;
                    operator new();
                  }
                  uint64_t v30 = *(char **)a2;
                  if (*(void *)a2 >= *((void *)a2 + 1) || *v30 < 0)
                  {
                    int v31 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v31 < 0) {
                      return 0;
                    }
                  }
                  else
                  {
                    int v31 = *v30;
                    *(void *)a2 = v30 + 1;
                  }
                  v524 = (CoreML::Specification::TanhLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v31);
                  int v526 = *((_DWORD *)a2 + 13);
                  BOOL v244 = __OFSUB__(v526--, 1);
                  *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v526;
                  if (v526 < 0 != v244) {
                    return 0;
                  }
                  int v527 = (int)v524;
                  uint64_t result = CoreML::Specification::TanhLayerParams::MergePartialFromCodedStream(v524, (char **)a2, v525);
                  if (!result) {
                    return result;
                  }
                  if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v527)) {
                    return 0;
                  }
                }
              }
              else if (v15 >> 3 <= 0x27F)
              {
                if (v15 >> 3 > 0x25C)
                {
                  if (v15 >> 3 <= 0x26B)
                  {
                    if (v19 == 605)
                    {
                      if (v15 != 234) {
                        goto LABEL_9;
                      }
                      if (*v5 != 605)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 605;
                        operator new();
                      }
                      v225 = *v6;
                      v442 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v442 < 0)
                      {
                        int v443 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v443 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v443 = *v442;
                        *(void *)a2 = v442 + 1;
                      }
                      int v1039 = google::protobuf::io::CodedInputStream::PushLimit(a2, v443);
                      int v1041 = *((_DWORD *)a2 + 13);
                      BOOL v244 = __OFSUB__(v1041--, 1);
                      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v1041;
                      if (v1041 < 0 != v244) {
                        return 0;
                      }
                      int v1042 = v1039;
                      uint64_t result = CoreML::Specification::BranchLayerParams::MergePartialFromCodedStream(v225, a2, v1040);
                      if (!result) {
                        return result;
                      }
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1042)) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (v19 != 615 || v15 != 58) {
                        goto LABEL_9;
                      }
                      if (*v5 != 615)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 615;
                        operator new();
                      }
                      uint64_t v90 = *v6;
                      v334 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v334 < 0)
                      {
                        int v335 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v335 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v335 = *v334;
                        *(void *)a2 = v334 + 1;
                      }
                      int v828 = google::protobuf::io::CodedInputStream::PushLimit(a2, v335);
                      int v830 = *((_DWORD *)a2 + 13);
                      BOOL v244 = __OFSUB__(v830--, 1);
                      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v830;
                      if (v830 < 0 != v244) {
                        return 0;
                      }
                      int v831 = v828;
                      uint64_t result = CoreML::Specification::LoopLayerParams::MergePartialFromCodedStream(v90, a2, v829);
                      if (!result) {
                        return result;
                      }
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v831)) {
                        return 0;
                      }
                    }
                  }
                  else if (v19 == 620)
                  {
                    if (v15 != 98) {
                      goto LABEL_9;
                    }
                    if (*v5 != 620)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 620;
                      operator new();
                    }
                    v177 = *(char **)a2;
                    if (*(void *)a2 >= *((void *)a2 + 1) || *v177 < 0)
                    {
                      int v178 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v178 < 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      int v178 = *v177;
                      *(void *)a2 = v177 + 1;
                    }
                    v643 = (CoreML::Specification::LoopBreakLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v178);
                    int v645 = *((_DWORD *)a2 + 13);
                    BOOL v244 = __OFSUB__(v645--, 1);
                    *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v645;
                    if (v645 < 0 != v244) {
                      return 0;
                    }
                    int v646 = (int)v643;
                    uint64_t result = CoreML::Specification::LoopBreakLayerParams::MergePartialFromCodedStream(v643, (char **)a2, v644);
                    if (!result) {
                      return result;
                    }
                    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v646)) {
                      return 0;
                    }
                  }
                  else if (v19 == 625)
                  {
                    if (v15 != 138) {
                      goto LABEL_9;
                    }
                    if (*v5 != 625)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 625;
                      operator new();
                    }
                    uint64_t v179 = *(char **)a2;
                    if (*(void *)a2 >= *((void *)a2 + 1) || *v179 < 0)
                    {
                      int v180 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v180 < 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      int v180 = *v179;
                      *(void *)a2 = v179 + 1;
                    }
                    v647 = (CoreML::Specification::LoopContinueLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v180);
                    int v649 = *((_DWORD *)a2 + 13);
                    BOOL v244 = __OFSUB__(v649--, 1);
                    *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v649;
                    if (v649 < 0 != v244) {
                      return 0;
                    }
                    int v650 = (int)v647;
                    uint64_t result = CoreML::Specification::LoopContinueLayerParams::MergePartialFromCodedStream(v647, (char **)a2, v648);
                    if (!result) {
                      return result;
                    }
                    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v650)) {
                      return 0;
                    }
                  }
                  else
                  {
                    if (v19 != 635 || v15 != 218) {
                      goto LABEL_9;
                    }
                    if (*v5 != 635)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 635;
                      operator new();
                    }
                    uint64_t v52 = *v6;
                    v294 = *(char **)a2;
                    if (*(void *)a2 >= *((void *)a2 + 1) || *v294 < 0)
                    {
                      int v295 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v295 < 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      int v295 = *v294;
                      *(void *)a2 = v294 + 1;
                    }
                    int v750 = google::protobuf::io::CodedInputStream::PushLimit(a2, v295);
                    int v752 = *((_DWORD *)a2 + 13);
                    BOOL v244 = __OFSUB__(v752--, 1);
                    *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v752;
                    if (v752 < 0 != v244) {
                      return 0;
                    }
                    int v753 = v750;
                    uint64_t result = CoreML::Specification::RangeStaticLayerParams::MergePartialFromCodedStream(v52, (char **)a2, v751);
                    if (!result) {
                      return result;
                    }
                    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v753)) {
                      return 0;
                    }
                  }
                }
                else if (v15 >> 3 <= 0x1AD)
                {
                  if (v19 == 410)
                  {
                    if (v15 != 210) {
                      goto LABEL_9;
                    }
                    if (*v5 != 410)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 410;
                      operator new();
                    }
                    uint64_t v209 = *v6;
                    v422 = *(char **)a2;
                    if (*(void *)a2 >= *((void *)a2 + 1) || *v422 < 0)
                    {
                      int v423 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v423 < 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      int v423 = *v422;
                      *(void *)a2 = v422 + 1;
                    }
                    int v1000 = google::protobuf::io::CodedInputStream::PushLimit(a2, v423);
                    int v1002 = *((_DWORD *)a2 + 13);
                    BOOL v244 = __OFSUB__(v1002--, 1);
                    *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v1002;
                    if (v1002 < 0 != v244) {
                      return 0;
                    }
                    int v1003 = v1000;
                    uint64_t result = CoreML::Specification::GRULayerParams::MergePartialFromCodedStream(v209, a2, v1001);
                    if (!result) {
                      return result;
                    }
                    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1003)) {
                      return 0;
                    }
                  }
                  else
                  {
                    if (v19 != 420 || v15 != 34) {
                      goto LABEL_9;
                    }
                    if (*v5 != 420)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 420;
                      operator new();
                    }
                    uint64_t v73 = *v6;
                    v314 = *(char **)a2;
                    if (*(void *)a2 >= *((void *)a2 + 1) || *v314 < 0)
                    {
                      int v315 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v315 < 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      int v315 = *v314;
                      *(void *)a2 = v314 + 1;
                    }
                    int v789 = google::protobuf::io::CodedInputStream::PushLimit(a2, v315);
                    int v791 = *((_DWORD *)a2 + 13);
                    BOOL v244 = __OFSUB__(v791--, 1);
                    *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v791;
                    if (v791 < 0 != v244) {
                      return 0;
                    }
                    int v792 = v789;
                    uint64_t result = CoreML::Specification::UniDirectionalLSTMLayerParams::MergePartialFromCodedStream(v73, a2, v790);
                    if (!result) {
                      return result;
                    }
                    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v792)) {
                      return 0;
                    }
                  }
                }
                else if (v19 == 430)
                {
                  if (v15 != 114) {
                    goto LABEL_9;
                  }
                  if (*v5 != 430)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 430;
                    operator new();
                  }
                  long long v144 = *v6;
                  v352 = *(char **)a2;
                  if (*(void *)a2 >= *((void *)a2 + 1) || *v352 < 0)
                  {
                    int v353 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v353 < 0) {
                      return 0;
                    }
                  }
                  else
                  {
                    int v353 = *v352;
                    *(void *)a2 = v352 + 1;
                  }
                  int v863 = google::protobuf::io::CodedInputStream::PushLimit(a2, v353);
                  int v865 = *((_DWORD *)a2 + 13);
                  BOOL v244 = __OFSUB__(v865--, 1);
                  *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v865;
                  if (v865 < 0 != v244) {
                    return 0;
                  }
                  int v866 = v863;
                  uint64_t result = CoreML::Specification::BiDirectionalLSTMLayerParams::MergePartialFromCodedStream(v144, a2, v864);
                  if (!result) {
                    return result;
                  }
                  if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v866)) {
                    return 0;
                  }
                }
                else if (v19 == 500)
                {
                  if (v15 != 162) {
                    goto LABEL_9;
                  }
                  if (*v5 != 500)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 500;
                    operator new();
                  }
                  uint64_t v145 = *v6;
                  v354 = *(char **)a2;
                  if (*(void *)a2 >= *((void *)a2 + 1) || *v354 < 0)
                  {
                    int v355 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v355 < 0) {
                      return 0;
                    }
                  }
                  else
                  {
                    int v355 = *v354;
                    *(void *)a2 = v354 + 1;
                  }
                  int v867 = google::protobuf::io::CodedInputStream::PushLimit(a2, v355);
                  int v869 = *((_DWORD *)a2 + 13);
                  BOOL v244 = __OFSUB__(v869--, 1);
                  *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v869;
                  if (v869 < 0 != v244) {
                    return 0;
                  }
                  int v870 = v867;
                  uint64_t result = CoreML::Specification::CustomLayerParams::MergePartialFromCodedStream(v145, a2, v868);
                  if (!result) {
                    return result;
                  }
                  if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v870)) {
                    return 0;
                  }
                }
                else
                {
                  if (v19 != 600 || v15 != 194) {
                    goto LABEL_9;
                  }
                  if (*v5 != 600)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 600;
                    operator new();
                  }
                  unsigned int v35 = *(char **)a2;
                  if (*(void *)a2 >= *((void *)a2 + 1) || *v35 < 0)
                  {
                    int v36 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v36 < 0) {
                      return 0;
                    }
                  }
                  else
                  {
                    int v36 = *v35;
                    *(void *)a2 = v35 + 1;
                  }
                  v528 = (CoreML::Specification::CopyLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v36);
                  int v530 = *((_DWORD *)a2 + 13);
                  BOOL v244 = __OFSUB__(v530--, 1);
                  *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v530;
                  if (v530 < 0 != v244) {
                    return 0;
                  }
                  int v531 = (int)v528;
                  uint64_t result = CoreML::Specification::CopyLayerParams::MergePartialFromCodedStream(v528, (char **)a2, v529);
                  if (!result) {
                    return result;
                  }
                  if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v531)) {
                    return 0;
                  }
                }
              }
              else if (v15 >> 3 <= 0x2AC)
              {
                if (v15 >> 3 <= 0x298)
                {
                  if (v19 == 640)
                  {
                    if (v15 != 2) {
                      goto LABEL_9;
                    }
                    if (*v5 != 640)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 640;
                      operator new();
                    }
                    uint64_t v218 = *v6;
                    v432 = *(char **)a2;
                    if (*(void *)a2 >= *((void *)a2 + 1) || *v432 < 0)
                    {
                      int v433 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v433 < 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      int v433 = *v432;
                      *(void *)a2 = v432 + 1;
                    }
                    int v1019 = google::protobuf::io::CodedInputStream::PushLimit(a2, v433);
                    int v1021 = *((_DWORD *)a2 + 13);
                    BOOL v244 = __OFSUB__(v1021--, 1);
                    *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v1021;
                    if (v1021 < 0 != v244) {
                      return 0;
                    }
                    int v1022 = v1019;
                    uint64_t result = CoreML::Specification::RangeDynamicLayerParams::MergePartialFromCodedStream(v218, (char **)a2, v1020);
                    if (!result) {
                      return result;
                    }
                    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1022)) {
                      return 0;
                    }
                  }
                  else
                  {
                    if (v19 != 660 || v15 != 162) {
                      goto LABEL_9;
                    }
                    if (*v5 != 660)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 660;
                      operator new();
                    }
                    std::string::size_type v82 = *v6;
                    v326 = *(char **)a2;
                    if (*(void *)a2 >= *((void *)a2 + 1) || *v326 < 0)
                    {
                      int v327 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v327 < 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      int v327 = *v326;
                      *(void *)a2 = v326 + 1;
                    }
                    int v812 = google::protobuf::io::CodedInputStream::PushLimit(a2, v327);
                    int v814 = *((_DWORD *)a2 + 13);
                    BOOL v244 = __OFSUB__(v814--, 1);
                    *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v814;
                    if (v814 < 0 != v244) {
                      return 0;
                    }
                    int v815 = v812;
                    uint64_t result = CoreML::Specification::ClipLayerParams::MergePartialFromCodedStream(v82, (char **)a2, v813);
                    if (!result) {
                      return result;
                    }
                    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v815)) {
                      return 0;
                    }
                  }
                }
                else if (v19 == 665)
                {
                  if (v15 != 202) {
                    goto LABEL_9;
                  }
                  if (*v5 != 665)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 665;
                    operator new();
                  }
                  BOOL v160 = *(char **)a2;
                  if (*(void *)a2 >= *((void *)a2 + 1) || *v160 < 0)
                  {
                    int v161 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v161 < 0) {
                      return 0;
                    }
                  }
                  else
                  {
                    int v161 = *v160;
                    *(void *)a2 = v160 + 1;
                  }
                  v623 = (CoreML::Specification::CeilLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v161);
                  int v625 = *((_DWORD *)a2 + 13);
                  BOOL v244 = __OFSUB__(v625--, 1);
                  *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v625;
                  if (v625 < 0 != v244) {
                    return 0;
                  }
                  int v626 = (int)v623;
                  uint64_t result = CoreML::Specification::CeilLayerParams::MergePartialFromCodedStream(v623, (char **)a2, v624);
                  if (!result) {
                    return result;
                  }
                  if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v626)) {
                    return 0;
                  }
                }
                else if (v19 == 670)
                {
                  if (v15 != 242) {
                    goto LABEL_9;
                  }
                  if (*v5 != 670)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 670;
                    operator new();
                  }
                  uint64_t v162 = *(char **)a2;
                  if (*(void *)a2 >= *((void *)a2 + 1) || *v162 < 0)
                  {
                    int v163 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v163 < 0) {
                      return 0;
                    }
                  }
                  else
                  {
                    int v163 = *v162;
                    *(void *)a2 = v162 + 1;
                  }
                  v627 = (CoreML::Specification::FloorLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v163);
                  int v629 = *((_DWORD *)a2 + 13);
                  BOOL v244 = __OFSUB__(v629--, 1);
                  *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v629;
                  if (v629 < 0 != v244) {
                    return 0;
                  }
                  int v630 = (int)v627;
                  uint64_t result = CoreML::Specification::FloorLayerParams::MergePartialFromCodedStream(v627, (char **)a2, v628);
                  if (!result) {
                    return result;
                  }
                  if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v630)) {
                    return 0;
                  }
                }
                else
                {
                  if (v19 != 680 || v15 != 66) {
                    goto LABEL_9;
                  }
                  if (*v5 != 680)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 680;
                    operator new();
                  }
                  int v45 = *(char **)a2;
                  if (*(void *)a2 >= *((void *)a2 + 1) || *v45 < 0)
                  {
                    int v46 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v46 < 0) {
                      return 0;
                    }
                  }
                  else
                  {
                    int v46 = *v45;
                    *(void *)a2 = v45 + 1;
                  }
                  v536 = (CoreML::Specification::SignLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v46);
                  int v538 = *((_DWORD *)a2 + 13);
                  BOOL v244 = __OFSUB__(v538--, 1);
                  *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v538;
                  if (v538 < 0 != v244) {
                    return 0;
                  }
                  int v539 = (int)v536;
                  uint64_t result = CoreML::Specification::SignLayerParams::MergePartialFromCodedStream(v536, (char **)a2, v537);
                  if (!result) {
                    return result;
                  }
                  if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v539)) {
                    return 0;
                  }
                }
              }
              else if (v15 >> 3 > 0x2CA)
              {
                if (v19 == 715)
                {
                  if (v15 != 90) {
                    goto LABEL_9;
                  }
                  if (*v5 != 715)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 715;
                    operator new();
                  }
                  uint64_t v197 = *(char **)a2;
                  if (*(void *)a2 >= *((void *)a2 + 1) || *v197 < 0)
                  {
                    int v198 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v198 < 0) {
                      return 0;
                    }
                  }
                  else
                  {
                    int v198 = *v197;
                    *(void *)a2 = v197 + 1;
                  }
                  v663 = (CoreML::Specification::CosLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v198);
                  int v665 = *((_DWORD *)a2 + 13);
                  BOOL v244 = __OFSUB__(v665--, 1);
                  *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v665;
                  if (v665 < 0 != v244) {
                    return 0;
                  }
                  int v666 = (int)v663;
                  uint64_t result = CoreML::Specification::CosLayerParams::MergePartialFromCodedStream(v663, (char **)a2, v664);
                  if (!result) {
                    return result;
                  }
                  if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v666)) {
                    return 0;
                  }
                }
                else if (v19 == 720)
                {
                  if (v15 != 130) {
                    goto LABEL_9;
                  }
                  if (*v5 != 720)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 720;
                    operator new();
                  }
                  v199 = *(char **)a2;
                  if (*(void *)a2 >= *((void *)a2 + 1) || *v199 < 0)
                  {
                    int v200 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v200 < 0) {
                      return 0;
                    }
                  }
                  else
                  {
                    int v200 = *v199;
                    *(void *)a2 = v199 + 1;
                  }
                  v667 = (CoreML::Specification::TanLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v200);
                  int v669 = *((_DWORD *)a2 + 13);
                  BOOL v244 = __OFSUB__(v669--, 1);
                  *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v669;
                  if (v669 < 0 != v244) {
                    return 0;
                  }
                  int v670 = (int)v667;
                  uint64_t result = CoreML::Specification::TanLayerParams::MergePartialFromCodedStream(v667, (char **)a2, v668);
                  if (!result) {
                    return result;
                  }
                  if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v670)) {
                    return 0;
                  }
                }
                else
                {
                  if (v19 != 730 || v15 != 210) {
                    goto LABEL_9;
                  }
                  if (*v5 != 730)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 730;
                    operator new();
                  }
                  unint64_t v63 = *(char **)a2;
                  if (*(void *)a2 >= *((void *)a2 + 1) || *v63 < 0)
                  {
                    int v64 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v64 < 0) {
                      return 0;
                    }
                  }
                  else
                  {
                    int v64 = *v63;
                    *(void *)a2 = v63 + 1;
                  }
                  v548 = (CoreML::Specification::AsinLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v64);
                  int v550 = *((_DWORD *)a2 + 13);
                  BOOL v244 = __OFSUB__(v550--, 1);
                  *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v550;
                  if (v550 < 0 != v244) {
                    return 0;
                  }
                  int v551 = (int)v548;
                  uint64_t result = CoreML::Specification::AsinLayerParams::MergePartialFromCodedStream(v548, (char **)a2, v549);
                  if (!result) {
                    return result;
                  }
                  if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v551)) {
                    return 0;
                  }
                }
              }
              else if (v19 == 685)
              {
                if (v15 != 106) {
                  goto LABEL_9;
                }
                if (*v5 != 685)
                {
                  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                  *((_DWORD *)this + 35) = 685;
                  operator new();
                }
                int v125 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1) || *v125 < 0)
                {
                  int v126 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                  if (v126 < 0) {
                    return 0;
                  }
                }
                else
                {
                  int v126 = *v125;
                  *(void *)a2 = v125 + 1;
                }
                v588 = (CoreML::Specification::RoundLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v126);
                int v590 = *((_DWORD *)a2 + 13);
                BOOL v244 = __OFSUB__(v590--, 1);
                *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v590;
                if (v590 < 0 != v244) {
                  return 0;
                }
                int v591 = (int)v588;
                uint64_t result = CoreML::Specification::RoundLayerParams::MergePartialFromCodedStream(v588, (char **)a2, v589);
                if (!result) {
                  return result;
                }
                if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v591)) {
                  return 0;
                }
              }
              else if (v19 == 700)
              {
                if (v15 != 226) {
                  goto LABEL_9;
                }
                if (*v5 != 700)
                {
                  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                  *((_DWORD *)this + 35) = 700;
                  operator new();
                }
                uint64_t v127 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1) || *v127 < 0)
                {
                  int v128 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                  if (v128 < 0) {
                    return 0;
                  }
                }
                else
                {
                  int v128 = *v127;
                  *(void *)a2 = v127 + 1;
                }
                v592 = (CoreML::Specification::Exp2LayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v128);
                int v594 = *((_DWORD *)a2 + 13);
                BOOL v244 = __OFSUB__(v594--, 1);
                *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v594;
                if (v594 < 0 != v244) {
                  return 0;
                }
                int v595 = (int)v592;
                uint64_t result = CoreML::Specification::Exp2LayerParams::MergePartialFromCodedStream(v592, (char **)a2, v593);
                if (!result) {
                  return result;
                }
                if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v595)) {
                  return 0;
                }
              }
              else
              {
                if (v19 != 710 || v15 != 50) {
                  goto LABEL_9;
                }
                if (*v5 != 710)
                {
                  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                  *((_DWORD *)this + 35) = 710;
                  operator new();
                }
                int v25 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1) || *v25 < 0)
                {
                  int v26 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                  if (v26 < 0) {
                    return 0;
                  }
                }
                else
                {
                  int v26 = *v25;
                  *(void *)a2 = v25 + 1;
                }
                v520 = (CoreML::Specification::SinLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v26);
                int v522 = *((_DWORD *)a2 + 13);
                BOOL v244 = __OFSUB__(v522--, 1);
                *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v522;
                if (v522 < 0 != v244) {
                  return 0;
                }
                int v523 = (int)v520;
                uint64_t result = CoreML::Specification::SinLayerParams::MergePartialFromCodedStream(v520, (char **)a2, v521);
                if (!result) {
                  return result;
                }
                if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v523)) {
                  return 0;
                }
              }
            }
            if (v15 >> 3 <= 0xDB) {
              break;
            }
            if (v15 >> 3 > 0x121)
            {
              if (v15 >> 3 > 0x149)
              {
                if (v15 >> 3 <= 0x158)
                {
                  if (v19 == 330)
                  {
                    if (v15 != 82) {
                      goto LABEL_9;
                    }
                    if (*v5 != 330)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 330;
                      operator new();
                    }
                    v227 = *v6;
                    v446 = *(char **)a2;
                    if (*(void *)a2 >= *((void *)a2 + 1) || *v446 < 0)
                    {
                      int v447 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v447 < 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      int v447 = *v446;
                      *(void *)a2 = v446 + 1;
                    }
                    int v1047 = google::protobuf::io::CodedInputStream::PushLimit(a2, v447);
                    int v1049 = *((_DWORD *)a2 + 13);
                    BOOL v244 = __OFSUB__(v1049--, 1);
                    *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v1049;
                    if (v1049 < 0 != v244) {
                      return 0;
                    }
                    int v1050 = v1047;
                    uint64_t result = CoreML::Specification::SplitLayerParams::MergePartialFromCodedStream(v227, (char **)a2, v1048);
                    if (!result) {
                      return result;
                    }
                    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1050)) {
                      return 0;
                    }
                  }
                  else
                  {
                    if (v19 != 340 || v15 != 162) {
                      goto LABEL_9;
                    }
                    if (*v5 != 340)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 340;
                      operator new();
                    }
                    std::string::size_type v93 = *v6;
                    v336 = *(char **)a2;
                    if (*(void *)a2 >= *((void *)a2 + 1) || *v336 < 0)
                    {
                      int v337 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v337 < 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      int v337 = *v336;
                      *(void *)a2 = v336 + 1;
                    }
                    int v832 = google::protobuf::io::CodedInputStream::PushLimit(a2, v337);
                    int v834 = *((_DWORD *)a2 + 13);
                    BOOL v244 = __OFSUB__(v834--, 1);
                    *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v834;
                    if (v834 < 0 != v244) {
                      return 0;
                    }
                    int v835 = v832;
                    uint64_t result = CoreML::Specification::SequenceRepeatLayerParams::MergePartialFromCodedStream(v93, (char **)a2, v833);
                    if (!result) {
                      return result;
                    }
                    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v835)) {
                      return 0;
                    }
                  }
                }
                else if (v19 == 345)
                {
                  if (v15 != 202) {
                    goto LABEL_9;
                  }
                  if (*v5 != 345)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 345;
                    operator new();
                  }
                  unint64_t v183 = *v6;
                  v394 = *(char **)a2;
                  if (*(void *)a2 >= *((void *)a2 + 1) || *v394 < 0)
                  {
                    int v395 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v395 < 0) {
                      return 0;
                    }
                  }
                  else
                  {
                    int v395 = *v394;
                    *(void *)a2 = v394 + 1;
                  }
                  int v945 = google::protobuf::io::CodedInputStream::PushLimit(a2, v395);
                  int v947 = *((_DWORD *)a2 + 13);
                  BOOL v244 = __OFSUB__(v947--, 1);
                  *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v947;
                  if (v947 < 0 != v244) {
                    return 0;
                  }
                  int v948 = v945;
                  uint64_t result = CoreML::Specification::ReorganizeDataLayerParams::MergePartialFromCodedStream(v183, (char **)a2, v946);
                  if (!result) {
                    return result;
                  }
                  if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v948)) {
                    return 0;
                  }
                }
                else if (v19 == 350)
                {
                  if (v15 != 242) {
                    goto LABEL_9;
                  }
                  if (*v5 != 350)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 350;
                    operator new();
                  }
                  std::string v184 = *v6;
                  v396 = *(char **)a2;
                  if (*(void *)a2 >= *((void *)a2 + 1) || *v396 < 0)
                  {
                    int v397 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v397 < 0) {
                      return 0;
                    }
                  }
                  else
                  {
                    int v397 = *v396;
                    *(void *)a2 = v396 + 1;
                  }
                  int v949 = google::protobuf::io::CodedInputStream::PushLimit(a2, v397);
                  int v951 = *((_DWORD *)a2 + 13);
                  BOOL v244 = __OFSUB__(v951--, 1);
                  *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v951;
                  if (v951 < 0 != v244) {
                    return 0;
                  }
                  int v952 = v949;
                  uint64_t result = CoreML::Specification::SliceLayerParams::MergePartialFromCodedStream(v184, (char **)a2, v950);
                  if (!result) {
                    return result;
                  }
                  if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v952)) {
                    return 0;
                  }
                }
                else
                {
                  if (v19 != 400 || v15 != 130) {
                    goto LABEL_9;
                  }
                  if (*v5 != 400)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 400;
                    operator new();
                  }
                  unint64_t v54 = *v6;
                  unint64_t v298 = *(char **)a2;
                  if (*(void *)a2 >= *((void *)a2 + 1) || *v298 < 0)
                  {
                    int v299 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v299 < 0) {
                      return 0;
                    }
                  }
                  else
                  {
                    int v299 = *v298;
                    *(void *)a2 = v298 + 1;
                  }
                  int v758 = google::protobuf::io::CodedInputStream::PushLimit(a2, v299);
                  int v760 = *((_DWORD *)a2 + 13);
                  BOOL v244 = __OFSUB__(v760--, 1);
                  *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v760;
                  if (v760 < 0 != v244) {
                    return 0;
                  }
                  int v761 = v758;
                  uint64_t result = CoreML::Specification::SimpleRecurrentLayerParams::MergePartialFromCodedStream(v54, a2, v759);
                  if (!result) {
                    return result;
                  }
                  if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v761)) {
                    return 0;
                  }
                }
              }
              else if (v15 >> 3 <= 0x12C)
              {
                if (v19 == 290)
                {
                  if (v15 != 18) {
                    goto LABEL_9;
                  }
                  if (*v5 != 290)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 290;
                    operator new();
                  }
                  uint64_t v211 = *v6;
                  v426 = *(char **)a2;
                  if (*(void *)a2 >= *((void *)a2 + 1) || *v426 < 0)
                  {
                    int v427 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v427 < 0) {
                      return 0;
                    }
                  }
                  else
                  {
                    int v427 = *v426;
                    *(void *)a2 = v426 + 1;
                  }
                  int v1008 = google::protobuf::io::CodedInputStream::PushLimit(a2, v427);
                  int v1010 = *((_DWORD *)a2 + 13);
                  BOOL v244 = __OFSUB__(v1010--, 1);
                  *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v1010;
                  if (v1010 < 0 != v244) {
                    return 0;
                  }
                  int v1011 = v1008;
                  uint64_t result = CoreML::Specification::LoadConstantLayerParams::MergePartialFromCodedStream(v211, a2, v1009);
                  if (!result) {
                    return result;
                  }
                  if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1011)) {
                    return 0;
                  }
                }
                else
                {
                  if (v19 != 300 || v15 != 98) {
                    goto LABEL_9;
                  }
                  if (*v5 != 300)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 300;
                    operator new();
                  }
                  uint64_t v75 = *v6;
                  v318 = *(char **)a2;
                  if (*(void *)a2 >= *((void *)a2 + 1) || *v318 < 0)
                  {
                    int v319 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v319 < 0) {
                      return 0;
                    }
                  }
                  else
                  {
                    int v319 = *v318;
                    *(void *)a2 = v318 + 1;
                  }
                  int v797 = google::protobuf::io::CodedInputStream::PushLimit(a2, v319);
                  int v799 = *((_DWORD *)a2 + 13);
                  BOOL v244 = __OFSUB__(v799--, 1);
                  *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v799;
                  if (v799 < 0 != v244) {
                    return 0;
                  }
                  int v800 = v797;
                  uint64_t result = CoreML::Specification::ReshapeLayerParams::MergePartialFromCodedStream(v75, a2, v798);
                  if (!result) {
                    return result;
                  }
                  if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v800)) {
                    return 0;
                  }
                }
              }
              else if (v19 == 301)
              {
                if (v15 != 106) {
                  goto LABEL_9;
                }
                if (*v5 != 301)
                {
                  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                  *((_DWORD *)this + 35) = 301;
                  operator new();
                }
                std::string::size_type v148 = *v6;
                v360 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1) || *v360 < 0)
                {
                  int v361 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                  if (v361 < 0) {
                    return 0;
                  }
                }
                else
                {
                  int v361 = *v360;
                  *(void *)a2 = v360 + 1;
                }
                int v879 = google::protobuf::io::CodedInputStream::PushLimit(a2, v361);
                int v881 = *((_DWORD *)a2 + 13);
                BOOL v244 = __OFSUB__(v881--, 1);
                *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v881;
                if (v881 < 0 != v244) {
                  return 0;
                }
                int v882 = v879;
                uint64_t result = CoreML::Specification::FlattenLayerParams::MergePartialFromCodedStream(v148, (char **)a2, v880);
                if (!result) {
                  return result;
                }
                if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v882)) {
                  return 0;
                }
              }
              else if (v19 == 310)
              {
                if (v15 != 178) {
                  goto LABEL_9;
                }
                if (*v5 != 310)
                {
                  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                  *((_DWORD *)this + 35) = 310;
                  operator new();
                }
                uint64_t v149 = *v6;
                v362 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1) || *v362 < 0)
                {
                  int v363 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                  if (v363 < 0) {
                    return 0;
                  }
                }
                else
                {
                  int v363 = *v362;
                  *(void *)a2 = v362 + 1;
                }
                int v883 = google::protobuf::io::CodedInputStream::PushLimit(a2, v363);
                int v885 = *((_DWORD *)a2 + 13);
                BOOL v244 = __OFSUB__(v885--, 1);
                *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v885;
                if (v885 < 0 != v244) {
                  return 0;
                }
                int v886 = v883;
                uint64_t result = CoreML::Specification::PermuteLayerParams::MergePartialFromCodedStream(v149, a2, v884);
                if (!result) {
                  return result;
                }
                if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v886)) {
                  return 0;
                }
              }
              else
              {
                if (v19 != 320 || v15 != 2) {
                  goto LABEL_9;
                }
                if (*v5 != 320)
                {
                  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                  *((_DWORD *)this + 35) = 320;
                  operator new();
                }
                uint64_t v38 = *v6;
                v276 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1) || *v276 < 0)
                {
                  int v277 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                  if (v277 < 0) {
                    return 0;
                  }
                }
                else
                {
                  int v277 = *v276;
                  *(void *)a2 = v276 + 1;
                }
                int v715 = google::protobuf::io::CodedInputStream::PushLimit(a2, v277);
                int v717 = *((_DWORD *)a2 + 13);
                BOOL v244 = __OFSUB__(v717--, 1);
                *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v717;
                if (v717 < 0 != v244) {
                  return 0;
                }
                int v718 = v715;
                uint64_t result = CoreML::Specification::ConcatLayerParams::MergePartialFromCodedStream(v38, a2, v716);
                if (!result) {
                  return result;
                }
                if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v718)) {
                  return 0;
                }
              }
            }
            else if (v15 >> 3 > 0xF9)
            {
              if (v15 >> 3 <= 0x104)
              {
                if (v19 == 250)
                {
                  if (v15 != 210) {
                    goto LABEL_9;
                  }
                  if (*v5 != 250)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 250;
                    operator new();
                  }
                  size_t v219 = *v6;
                  v434 = *(char **)a2;
                  if (*(void *)a2 >= *((void *)a2 + 1) || *v434 < 0)
                  {
                    int v435 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v435 < 0) {
                      return 0;
                    }
                  }
                  else
                  {
                    int v435 = *v434;
                    *(void *)a2 = v434 + 1;
                  }
                  int v1023 = google::protobuf::io::CodedInputStream::PushLimit(a2, v435);
                  int v1025 = *((_DWORD *)a2 + 13);
                  BOOL v244 = __OFSUB__(v1025--, 1);
                  *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v1025;
                  if (v1025 < 0 != v244) {
                    return 0;
                  }
                  int v1026 = v1023;
                  uint64_t result = CoreML::Specification::BiasLayerParams::MergePartialFromCodedStream(v219, a2, v1024);
                  if (!result) {
                    return result;
                  }
                  if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1026)) {
                    return 0;
                  }
                }
                else
                {
                  if (v19 != 260 || v15 != 34) {
                    goto LABEL_9;
                  }
                  if (*v5 != 260)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 260;
                    operator new();
                  }
                  uint64_t v83 = *(char **)a2;
                  if (*(void *)a2 >= *((void *)a2 + 1) || *v83 < 0)
                  {
                    int v84 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v84 < 0) {
                      return 0;
                    }
                  }
                  else
                  {
                    int v84 = *v83;
                    *(void *)a2 = v83 + 1;
                  }
                  v564 = (CoreML::Specification::MaxLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v84);
                  int v566 = *((_DWORD *)a2 + 13);
                  BOOL v244 = __OFSUB__(v566--, 1);
                  *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v566;
                  if (v566 < 0 != v244) {
                    return 0;
                  }
                  int v567 = (int)v564;
                  uint64_t result = CoreML::Specification::MaxLayerParams::MergePartialFromCodedStream(v564, (char **)a2, v565);
                  if (!result) {
                    return result;
                  }
                  if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v567)) {
                    return 0;
                  }
                }
              }
              else if (v19 == 261)
              {
                if (v15 != 42) {
                  goto LABEL_9;
                }
                if (*v5 != 261)
                {
                  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                  *((_DWORD *)this + 35) = 261;
                  operator new();
                }
                v164 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1) || *v164 < 0)
                {
                  int v165 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                  if (v165 < 0) {
                    return 0;
                  }
                }
                else
                {
                  int v165 = *v164;
                  *(void *)a2 = v164 + 1;
                }
                v631 = (CoreML::Specification::MinLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v165);
                int v633 = *((_DWORD *)a2 + 13);
                BOOL v244 = __OFSUB__(v633--, 1);
                *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v633;
                if (v633 < 0 != v244) {
                  return 0;
                }
                int v634 = (int)v631;
                uint64_t result = CoreML::Specification::MinLayerParams::MergePartialFromCodedStream(v631, (char **)a2, v632);
                if (!result) {
                  return result;
                }
                if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v634)) {
                  return 0;
                }
              }
              else if (v19 == 270)
              {
                if (v15 != 114) {
                  goto LABEL_9;
                }
                if (*v5 != 270)
                {
                  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                  *((_DWORD *)this + 35) = 270;
                  operator new();
                }
                v166 = *v6;
                v376 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1) || *v376 < 0)
                {
                  int v377 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                  if (v377 < 0) {
                    return 0;
                  }
                }
                else
                {
                  int v377 = *v376;
                  *(void *)a2 = v376 + 1;
                }
                int v909 = google::protobuf::io::CodedInputStream::PushLimit(a2, v377);
                int v911 = *((_DWORD *)a2 + 13);
                BOOL v244 = __OFSUB__(v911--, 1);
                *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v911;
                if (v911 < 0 != v244) {
                  return 0;
                }
                int v912 = v909;
                uint64_t result = CoreML::Specification::DotProductLayerParams::MergePartialFromCodedStream(v166, (char **)a2, v910);
                if (!result) {
                  return result;
                }
                if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v912)) {
                  return 0;
                }
              }
              else
              {
                if (v19 != 280 || v15 != 194) {
                  goto LABEL_9;
                }
                if (*v5 != 280)
                {
                  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                  *((_DWORD *)this + 35) = 280;
                  operator new();
                }
                int v47 = *v6;
                std::string v284 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1) || *v284 < 0)
                {
                  int v285 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                  if (v285 < 0) {
                    return 0;
                  }
                }
                else
                {
                  int v285 = *v284;
                  *(void *)a2 = v284 + 1;
                }
                int v730 = google::protobuf::io::CodedInputStream::PushLimit(a2, v285);
                int v732 = *((_DWORD *)a2 + 13);
                BOOL v244 = __OFSUB__(v732--, 1);
                *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v732;
                if (v732 < 0 != v244) {
                  return 0;
                }
                int v733 = v730;
                uint64_t result = CoreML::Specification::ReduceLayerParams::MergePartialFromCodedStream(v47, (char **)a2, v731);
                if (!result) {
                  return result;
                }
                if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v733)) {
                  return 0;
                }
              }
            }
            else if (v15 >> 3 <= 0xE6)
            {
              if (v19 == 220)
              {
                if (v15 != 226) {
                  goto LABEL_9;
                }
                if (*v5 != 220)
                {
                  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                  *((_DWORD *)this + 35) = 220;
                  operator new();
                }
                v203 = *v6;
                v414 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1) || *v414 < 0)
                {
                  int v415 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                  if (v415 < 0) {
                    return 0;
                  }
                }
                else
                {
                  int v415 = *v414;
                  *(void *)a2 = v414 + 1;
                }
                int v985 = google::protobuf::io::CodedInputStream::PushLimit(a2, v415);
                int v987 = *((_DWORD *)a2 + 13);
                BOOL v244 = __OFSUB__(v987--, 1);
                *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v987;
                if (v987 < 0 != v244) {
                  return 0;
                }
                int v988 = v985;
                uint64_t result = CoreML::Specification::UnaryFunctionLayerParams::MergePartialFromCodedStream(v203, (char **)a2, v986);
                if (!result) {
                  return result;
                }
                if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v988)) {
                  return 0;
                }
              }
              else
              {
                if (v19 != 230 || v15 != 50) {
                  goto LABEL_9;
                }
                if (*v5 != 230)
                {
                  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                  *((_DWORD *)this + 35) = 230;
                  operator new();
                }
                std::string::size_type v66 = *v6;
                char v308 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1) || *v308 < 0)
                {
                  int v309 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                  if (v309 < 0) {
                    return 0;
                  }
                }
                else
                {
                  int v309 = *v308;
                  *(void *)a2 = v308 + 1;
                }
                int v778 = google::protobuf::io::CodedInputStream::PushLimit(a2, v309);
                int v780 = *((_DWORD *)a2 + 13);
                BOOL v244 = __OFSUB__(v780--, 1);
                *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v780;
                if (v780 < 0 != v244) {
                  return 0;
                }
                int v781 = v778;
                uint64_t result = CoreML::Specification::AddLayerParams::MergePartialFromCodedStream(v66, (char **)a2, v779);
                if (!result) {
                  return result;
                }
                if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v781)) {
                  return 0;
                }
              }
            }
            else if (v19 == 231)
            {
              if (v15 != 58) {
                goto LABEL_9;
              }
              if (*v5 != 231)
              {
                CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                *((_DWORD *)this + 35) = 231;
                operator new();
              }
              signed int v129 = *v6;
              v342 = *(char **)a2;
              if (*(void *)a2 >= *((void *)a2 + 1) || *v342 < 0)
              {
                int v343 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                if (v343 < 0) {
                  return 0;
                }
              }
              else
              {
                int v343 = *v342;
                *(void *)a2 = v342 + 1;
              }
              int v844 = google::protobuf::io::CodedInputStream::PushLimit(a2, v343);
              int v846 = *((_DWORD *)a2 + 13);
              BOOL v244 = __OFSUB__(v846--, 1);
              *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v846;
              if (v846 < 0 != v244) {
                return 0;
              }
              int v847 = v844;
              uint64_t result = CoreML::Specification::MultiplyLayerParams::MergePartialFromCodedStream(v129, (char **)a2, v845);
              if (!result) {
                return result;
              }
              if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v847)) {
                return 0;
              }
            }
            else if (v19 == 240)
            {
              if (v15 != 130) {
                goto LABEL_9;
              }
              if (*v5 != 240)
              {
                CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                *((_DWORD *)this + 35) = 240;
                operator new();
              }
              uint64_t v130 = *(char **)a2;
              if (*(void *)a2 >= *((void *)a2 + 1) || *v130 < 0)
              {
                int v131 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                if (v131 < 0) {
                  return 0;
                }
              }
              else
              {
                int v131 = *v130;
                *(void *)a2 = v130 + 1;
              }
              v596 = (CoreML::Specification::AverageLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v131);
              int v598 = *((_DWORD *)a2 + 13);
              BOOL v244 = __OFSUB__(v598--, 1);
              *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v598;
              if (v598 < 0 != v244) {
                return 0;
              }
              int v599 = (int)v596;
              uint64_t result = CoreML::Specification::AverageLayerParams::MergePartialFromCodedStream(v596, (char **)a2, v597);
              if (!result) {
                return result;
              }
              if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v599)) {
                return 0;
              }
            }
            else
            {
              if (v19 != 245 || v15 != 170) {
                goto LABEL_9;
              }
              if (*v5 != 245)
              {
                CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                *((_DWORD *)this + 35) = 245;
                operator new();
              }
              BOOL v28 = *v6;
              v266 = *(char **)a2;
              if (*(void *)a2 >= *((void *)a2 + 1) || *v266 < 0)
              {
                int v267 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                if (v267 < 0) {
                  return 0;
                }
              }
              else
              {
                int v267 = *v266;
                *(void *)a2 = v266 + 1;
              }
              int v695 = google::protobuf::io::CodedInputStream::PushLimit(a2, v267);
              int v697 = *((_DWORD *)a2 + 13);
              BOOL v244 = __OFSUB__(v697--, 1);
              *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v697;
              if (v697 < 0 != v244) {
                return 0;
              }
              int v698 = v695;
              uint64_t result = CoreML::Specification::ScaleLayerParams::MergePartialFromCodedStream(v28, a2, v696);
              if (!result) {
                return result;
              }
              if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v698)) {
                return 0;
              }
            }
          }
          if (v15 >> 3 <= 0x9F) {
            break;
          }
          if (v15 >> 3 > 0xBD)
          {
            if (v15 >> 3 <= 0xD1)
            {
              if (v19 == 190)
              {
                if (v15 != 242) {
                  goto LABEL_9;
                }
                if (*v5 != 190)
                {
                  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                  *((_DWORD *)this + 35) = 190;
                  operator new();
                }
                uint64_t v224 = *v6;
                v440 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1) || *v440 < 0)
                {
                  int v441 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                  if (v441 < 0) {
                    return 0;
                  }
                }
                else
                {
                  int v441 = *v440;
                  *(void *)a2 = v440 + 1;
                }
                int v1035 = google::protobuf::io::CodedInputStream::PushLimit(a2, v441);
                int v1037 = *((_DWORD *)a2 + 13);
                BOOL v244 = __OFSUB__(v1037--, 1);
                *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v1037;
                if (v1037 < 0 != v244) {
                  return 0;
                }
                int v1038 = v1035;
                uint64_t result = CoreML::Specification::CropLayerParams::MergePartialFromCodedStream(v224, a2, v1036);
                if (!result) {
                  return result;
                }
                if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1038)) {
                  return 0;
                }
              }
              else
              {
                if (v19 != 200 || v15 != 66) {
                  goto LABEL_9;
                }
                if (*v5 != 200)
                {
                  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                  *((_DWORD *)this + 35) = 200;
                  operator new();
                }
                uint64_t v89 = *v6;
                v332 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1) || *v332 < 0)
                {
                  int v333 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                  if (v333 < 0) {
                    return 0;
                  }
                }
                else
                {
                  int v333 = *v332;
                  *(void *)a2 = v332 + 1;
                }
                int v824 = google::protobuf::io::CodedInputStream::PushLimit(a2, v333);
                int v826 = *((_DWORD *)a2 + 13);
                BOOL v244 = __OFSUB__(v826--, 1);
                *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v826;
                if (v826 < 0 != v244) {
                  return 0;
                }
                int v827 = v824;
                uint64_t result = CoreML::Specification::PaddingLayerParams::MergePartialFromCodedStream(v89, a2, v825);
                if (!result) {
                  return result;
                }
                if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v827)) {
                  return 0;
                }
              }
            }
            else if (v19 == 210)
            {
              if (v15 != 146) {
                goto LABEL_9;
              }
              if (*v5 != 210)
              {
                CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                *((_DWORD *)this + 35) = 210;
                operator new();
              }
              v175 = *v6;
              v386 = *(char **)a2;
              if (*(void *)a2 >= *((void *)a2 + 1) || *v386 < 0)
              {
                int v387 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                if (v387 < 0) {
                  return 0;
                }
              }
              else
              {
                int v387 = *v386;
                *(void *)a2 = v386 + 1;
              }
              int v929 = google::protobuf::io::CodedInputStream::PushLimit(a2, v387);
              int v931 = *((_DWORD *)a2 + 13);
              BOOL v244 = __OFSUB__(v931--, 1);
              *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v931;
              if (v931 < 0 != v244) {
                return 0;
              }
              int v932 = v929;
              uint64_t result = CoreML::Specification::UpsampleLayerParams::MergePartialFromCodedStream(v175, a2, v930);
              if (!result) {
                return result;
              }
              if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v932)) {
                return 0;
              }
            }
            else if (v19 == 211)
            {
              if (v15 != 154) {
                goto LABEL_9;
              }
              if (*v5 != 211)
              {
                CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                *((_DWORD *)this + 35) = 211;
                operator new();
              }
              v176 = *v6;
              v388 = *(char **)a2;
              if (*(void *)a2 >= *((void *)a2 + 1) || *v388 < 0)
              {
                int v389 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                if (v389 < 0) {
                  return 0;
                }
              }
              else
              {
                int v389 = *v388;
                *(void *)a2 = v388 + 1;
              }
              int v933 = google::protobuf::io::CodedInputStream::PushLimit(a2, v389);
              int v935 = *((_DWORD *)a2 + 13);
              BOOL v244 = __OFSUB__(v935--, 1);
              *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v935;
              if (v935 < 0 != v244) {
                return 0;
              }
              int v936 = v933;
              uint64_t result = CoreML::Specification::ResizeBilinearLayerParams::MergePartialFromCodedStream(v176, a2, v934);
              if (!result) {
                return result;
              }
              if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v936)) {
                return 0;
              }
            }
            else
            {
              if (v19 != 212 || v15 != 162) {
                goto LABEL_9;
              }
              if (*v5 != 212)
              {
                CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                *((_DWORD *)this + 35) = 212;
                operator new();
              }
              int v51 = *v6;
              char v292 = *(char **)a2;
              if (*(void *)a2 >= *((void *)a2 + 1) || *v292 < 0)
              {
                int v293 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                if (v293 < 0) {
                  return 0;
                }
              }
              else
              {
                int v293 = *v292;
                *(void *)a2 = v292 + 1;
              }
              int v746 = google::protobuf::io::CodedInputStream::PushLimit(a2, v293);
              int v748 = *((_DWORD *)a2 + 13);
              BOOL v244 = __OFSUB__(v748--, 1);
              *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v748;
              if (v748 < 0 != v244) {
                return 0;
              }
              int v749 = v746;
              uint64_t result = CoreML::Specification::CropResizeLayerParams::MergePartialFromCodedStream(v51, a2, v747);
              if (!result) {
                return result;
              }
              if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v749)) {
                return 0;
              }
            }
          }
          else
          {
            if (v15 >> 3 <= 0xA9)
            {
              if (v19 == 160)
              {
                if (v15 != 2) {
                  goto LABEL_9;
                }
                if (*v5 != 160)
                {
                  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                  *((_DWORD *)this + 35) = 160;
                  operator new();
                }
                long long v208 = *v6;
                v420 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1) || *v420 < 0)
                {
                  int v421 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                  if (v421 < 0) {
                    return 0;
                  }
                }
                else
                {
                  int v421 = *v420;
                  *(void *)a2 = v420 + 1;
                }
                int v997 = google::protobuf::io::CodedInputStream::PushLimit(a2, v421);
                int v999 = *((_DWORD *)a2 + 13);
                BOOL v244 = __OFSUB__(v999--, 1);
                *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v999;
                if (v999 < 0 != v244) {
                  return 0;
                }
                int v245 = v997;
                uint64_t result = CoreML::Specification::BatchnormLayerParams::MergePartialFromCodedStream(v208, a2, v998);
                if (!result) {
                  return result;
                }
              }
              else
              {
                if (v19 != 165 || v15 != 42) {
                  goto LABEL_9;
                }
                if (*v5 != 165)
                {
                  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                  *((_DWORD *)this + 35) = 165;
                  operator new();
                }
                std::vector<std::string>::size_type v72 = *v6;
                v312 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1) || *v312 < 0)
                {
                  int v313 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                  if (v313 < 0) {
                    return 0;
                  }
                }
                else
                {
                  int v313 = *v312;
                  *(void *)a2 = v312 + 1;
                }
                int v786 = google::protobuf::io::CodedInputStream::PushLimit(a2, v313);
                int v788 = *((_DWORD *)a2 + 13);
                BOOL v244 = __OFSUB__(v788--, 1);
                *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v788;
                if (v788 < 0 != v244) {
                  return 0;
                }
                int v245 = v786;
                uint64_t result = CoreML::Specification::MeanVarianceNormalizeLayerParams::MergePartialFromCodedStream(v72, (char **)a2, v787);
                if (!result) {
                  return result;
                }
              }
              goto LABEL_2002;
            }
            if (v19 == 170)
            {
              if (v15 != 82) {
                goto LABEL_9;
              }
              if (*v5 != 170)
              {
                CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                *((_DWORD *)this + 35) = 170;
                operator new();
              }
              uint64_t v141 = *v6;
              v350 = *(char **)a2;
              if (*(void *)a2 >= *((void *)a2 + 1) || *v350 < 0)
              {
                int v351 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                if (v351 < 0) {
                  return 0;
                }
              }
              else
              {
                int v351 = *v350;
                *(void *)a2 = v350 + 1;
              }
              int v860 = google::protobuf::io::CodedInputStream::PushLimit(a2, v351);
              int v862 = *((_DWORD *)a2 + 13);
              BOOL v244 = __OFSUB__(v862--, 1);
              *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v862;
              if (v862 < 0 != v244) {
                return 0;
              }
              int v245 = v860;
              uint64_t result = CoreML::Specification::L2NormalizeLayerParams::MergePartialFromCodedStream(v141, (char **)a2, v861);
              if (!result) {
                return result;
              }
              goto LABEL_2002;
            }
            if (v19 == 175)
            {
              if (v15 == 122)
              {
                if (*v5 != 175)
                {
                  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                  *((_DWORD *)this + 35) = 175;
                  operator new();
                }
                uint64_t v142 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1) || *v142 < 0)
                {
                  int v143 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                  if (v143 < 0) {
                    return 0;
                  }
                }
                else
                {
                  int v143 = *v142;
                  *(void *)a2 = v142 + 1;
                }
                v612 = (CoreML::Specification::SoftmaxLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v143);
                int v614 = *((_DWORD *)a2 + 13);
                BOOL v244 = __OFSUB__(v614--, 1);
                *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v614;
                if (v614 < 0 != v244) {
                  return 0;
                }
                int v245 = (int)v612;
                uint64_t result = CoreML::Specification::SoftmaxLayerParams::MergePartialFromCodedStream(v612, (char **)a2, v613);
                if (!result) {
                  return result;
                }
                goto LABEL_2002;
              }
              goto LABEL_9;
            }
            if (v19 != 180 || v15 != 162) {
              goto LABEL_9;
            }
            if (*v5 != 180)
            {
              CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
              *((_DWORD *)this + 35) = 180;
              operator new();
            }
            int v33 = *v6;
            v272 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v272 < 0)
            {
              int v273 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (v273 < 0) {
                return 0;
              }
            }
            else
            {
              int v273 = *v272;
              *(void *)a2 = v272 + 1;
            }
            int v707 = google::protobuf::io::CodedInputStream::PushLimit(a2, v273);
            int v709 = *((_DWORD *)a2 + 13);
            BOOL v244 = __OFSUB__(v709--, 1);
            *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v709;
            if (v709 < 0 != v244) {
              return 0;
            }
            int v710 = v707;
            uint64_t result = CoreML::Specification::LRNLayerParams::MergePartialFromCodedStream(v33, (char **)a2, v708);
            if (!result) {
              return result;
            }
            if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v710)) {
              return 0;
            }
          }
        }
        if (v15 >> 3 > 0x63) {
          break;
        }
        switch(v19)
        {
          case 1u:
            if (v15 != 10) {
              goto LABEL_9;
            }
            if (*v10 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
              google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
            }
            uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((unsigned __int8 **)a2, *v10);
            if (!result) {
              return result;
            }
            int v21 = *v10;
            if (SHIBYTE((*v10)->__r_.__value_.__r.__words[2]) < 0)
            {
              int v21 = (std::string *)v21->__r_.__value_.__r.__words[0];
              std::string::size_type size = (*v10)->__r_.__value_.__l.__size_;
            }
            else
            {
              LODWORD(size) = HIBYTE((*v10)->__r_.__value_.__r.__words[2]);
            }
            v515 = "CoreML.Specification.NeuralNetworkLayer.name";
            goto LABEL_2127;
          case 2u:
            if (v15 != 18) {
              goto LABEL_9;
            }
            uint64_t v104 = (int *)*((void *)this + 4);
            if (!v104)
            {
              int v106 = *((_DWORD *)this + 7);
LABEL_2100:
              int v1095 = *((_DWORD *)this + 6);
              if (v1095 <= v106)
              {
                google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(v9, v106 - v1095 + 1);
                uint64_t v104 = (int *)*((void *)this + 4);
              }
              int v106 = *v104;
              goto LABEL_2103;
            }
            uint64_t v105 = *((int *)this + 6);
            int v106 = *v104;
            if ((int)v105 < *v104)
            {
              *((_DWORD *)this + 6) = v105 + 1;
              Aligned = *(std::string **)&v104[2 * v105 + 2];
              goto LABEL_2116;
            }
            if (v106 == *((_DWORD *)this + 7)) {
              goto LABEL_2100;
            }
LABEL_2103:
            int *v104 = v106 + 1;
            v1096 = *(google::protobuf::Arena **)v9;
            if (!*(void *)v9) {
              operator new();
            }
            Aligned->__r_.__value_.__l.__size_ = 0;
            Aligned->__r_.__value_.__r.__words[2] = 0;
            Aligned->__r_.__value_.__r.__words[0] = 0;
            v1097 = google::protobuf::Arena::AllocateAligned(v1096, 0, 24);
            *v1097 = (google::protobuf::Arena *)Aligned;
            v1097[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<std::string>;
            v1098 = (unint64_t *)((char *)v1096 + 32);
            do
              unint64_t v1099 = __ldxr(v1098);
            while (__stxr((unint64_t)v1097, v1098));
            v1097[2] = (google::protobuf::Arena *)v1099;
            uint64_t v1105 = *((void *)this + 4);
            uint64_t v1106 = *((int *)this + 6);
            *((_DWORD *)this + 6) = v1106 + 1;
            *(void *)(v1105 + 8 * v1106 + 8) = Aligned;
LABEL_2116:
            uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((unsigned __int8 **)a2, Aligned);
            if (!result) {
              return result;
            }
            uint64_t v1107 = *((void *)this + 4);
            int v21 = *(std::string **)(v1107 + 8 * *((int *)this + 6));
            if (SHIBYTE(v21->__r_.__value_.__r.__words[2]) < 0)
            {
              int v21 = (std::string *)v21->__r_.__value_.__r.__words[0];
              std::string::size_type size = *(void *)(*(void *)(v1107 + 8 * *((int *)this + 6)) + 8);
            }
            else
            {
              LODWORD(size) = HIBYTE(v21->__r_.__value_.__r.__words[2]);
            }
            v515 = "CoreML.Specification.NeuralNetworkLayer.input";
            goto LABEL_2127;
          case 3u:
            if (v15 != 26) {
              goto LABEL_9;
            }
            std::string::size_type v108 = (int *)*((void *)this + 7);
            if (!v108)
            {
              int v110 = *((_DWORD *)this + 13);
LABEL_2108:
              int v1100 = *((_DWORD *)this + 12);
              if (v1100 <= v110)
              {
                google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(v1111, v110 - v1100 + 1);
                std::string::size_type v108 = (int *)*((void *)this + 7);
              }
              int v110 = *v108;
              goto LABEL_2111;
            }
            uint64_t v109 = *((int *)this + 12);
            int v110 = *v108;
            if ((int)v109 < *v108)
            {
              *((_DWORD *)this + 12) = v109 + 1;
              uint64_t v111 = *(std::string **)&v108[2 * v109 + 2];
              goto LABEL_2122;
            }
            if (v110 == *((_DWORD *)this + 13)) {
              goto LABEL_2108;
            }
LABEL_2111:
            *std::string::size_type v108 = v110 + 1;
            v1101 = *(google::protobuf::Arena **)v1111;
            if (!*(void *)v1111) {
              operator new();
            }
            v111->__r_.__value_.__l.__size_ = 0;
            v111->__r_.__value_.__r.__words[2] = 0;
            v111->__r_.__value_.__r.__words[0] = 0;
            v1102 = google::protobuf::Arena::AllocateAligned(v1101, 0, 24);
            *v1102 = (google::protobuf::Arena *)v111;
            v1102[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<std::string>;
            v1103 = (unint64_t *)((char *)v1101 + 32);
            do
              unint64_t v1104 = __ldxr(v1103);
            while (__stxr((unint64_t)v1102, v1103));
            v1102[2] = (google::protobuf::Arena *)v1104;
            uint64_t v1108 = *((void *)this + 7);
            uint64_t v1109 = *((int *)this + 12);
            *((_DWORD *)this + 12) = v1109 + 1;
            *(void *)(v1108 + 8 * v1109 + 8) = v111;
LABEL_2122:
            uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((unsigned __int8 **)a2, v111);
            if (!result) {
              return result;
            }
            uint64_t v1110 = *((void *)this + 7);
            int v21 = *(std::string **)(v1110 + 8 * *((int *)this + 12));
            if (SHIBYTE(v21->__r_.__value_.__r.__words[2]) < 0)
            {
              int v21 = (std::string *)v21->__r_.__value_.__r.__words[0];
              std::string::size_type size = *(void *)(*(void *)(v1110 + 8 * *((int *)this + 12)) + 8);
            }
            else
            {
              LODWORD(size) = HIBYTE(v21->__r_.__value_.__r.__words[2]);
            }
            v515 = "CoreML.Specification.NeuralNetworkLayer.output";
LABEL_2127:
            if (!google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)v21, size, 0, (uint64_t)v515))return 0; {
            break;
            }
          case 4u:
            if (v15 != 34) {
              goto LABEL_9;
            }
            uint64_t v112 = v8;
            goto LABEL_482;
          case 5u:
            if (v15 != 42) {
              goto LABEL_9;
            }
            uint64_t v112 = v7;
LABEL_482:
            uint64_t v113 = google::protobuf::internal::RepeatedPtrFieldBase::Add<google::protobuf::RepeatedPtrField<CoreML::Specification::Tensor>::TypeHandler>(v112);
            unint64_t v114 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v114 < 0)
            {
              int v115 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (v115 < 0) {
                return 0;
              }
            }
            else
            {
              int v115 = *v114;
              *(void *)a2 = v114 + 1;
            }
            int v241 = google::protobuf::io::CodedInputStream::PushLimit(a2, v115);
            int v243 = *((_DWORD *)a2 + 13);
            BOOL v244 = __OFSUB__(v243--, 1);
            *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v243;
            if (v243 < 0 != v244) {
              return 0;
            }
            int v245 = v241;
            uint64_t result = CoreML::Specification::Tensor::MergePartialFromCodedStream((CoreML::Specification::Tensor *)v113, a2, v242);
            if (!result) {
              return result;
            }
            goto LABEL_2002;
          case 0xAu:
            if (v15 != 80) {
              goto LABEL_9;
            }
            char v116 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v116 < 0)
            {
              unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v498 & 1) == 0) {
                return 0;
              }
            }
            else
            {
              unint64_t Varint64Fallback = *v116;
              *(void *)a2 = v116 + 1;
            }
            *((unsigned char *)this + 12CoreML::Specification::NetworkUpdateParameters::New(this, 0) = Varint64Fallback != 0;
            goto LABEL_2;
          default:
            goto LABEL_9;
        }
      }
      if (v15 >> 3 > 0x81) {
        break;
      }
      if (v19 == 100)
      {
        if (v15 != 34) {
          goto LABEL_9;
        }
        if (*v5 != 100)
        {
          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
          *((_DWORD *)this + 35) = 100;
          operator new();
        }
        uint64_t v215 = *v6;
        v430 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v430 < 0)
        {
          int v431 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v431 < 0) {
            return 0;
          }
        }
        else
        {
          int v431 = *v430;
          *(void *)a2 = v430 + 1;
        }
        int v1016 = google::protobuf::io::CodedInputStream::PushLimit(a2, v431);
        int v1018 = *((_DWORD *)a2 + 13);
        BOOL v244 = __OFSUB__(v1018--, 1);
        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v1018;
        if (v1018 < 0 != v244) {
          return 0;
        }
        int v245 = v1016;
        uint64_t result = CoreML::Specification::ConvolutionLayerParams::MergePartialFromCodedStream(v215, a2, v1017);
        if (!result) {
          return result;
        }
      }
      else
      {
        if (v19 != 120 || v15 != 194) {
          goto LABEL_9;
        }
        if (*v5 != 120)
        {
          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
          *((_DWORD *)this + 35) = 120;
          operator new();
        }
        char v79 = *v6;
        v324 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v324 < 0)
        {
          int v325 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v325 < 0) {
            return 0;
          }
        }
        else
        {
          int v325 = *v324;
          *(void *)a2 = v324 + 1;
        }
        int v809 = google::protobuf::io::CodedInputStream::PushLimit(a2, v325);
        int v811 = *((_DWORD *)a2 + 13);
        BOOL v244 = __OFSUB__(v811--, 1);
        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v811;
        if (v811 < 0 != v244) {
          return 0;
        }
        int v245 = v809;
        uint64_t result = CoreML::Specification::PoolingLayerParams::MergePartialFromCodedStream(v79, a2, v810);
        if (!result) {
          return result;
        }
      }
LABEL_2002:
      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v245)) {
        return 0;
      }
    }
    if (v19 == 130)
    {
      if (v15 != 18) {
        goto LABEL_9;
      }
      if (*v5 != 130)
      {
        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
        *((_DWORD *)this + 35) = 130;
        operator new();
      }
      std::string::size_type v154 = *v6;
      v372 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v372 < 0)
      {
        int v373 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v373 < 0) {
          return 0;
        }
      }
      else
      {
        int v373 = *v372;
        *(void *)a2 = v372 + 1;
      }
      int v903 = google::protobuf::io::CodedInputStream::PushLimit(a2, v373);
      int v905 = *((_DWORD *)a2 + 13);
      BOOL v244 = __OFSUB__(v905--, 1);
      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v905;
      if (v905 < 0 != v244) {
        return 0;
      }
      int v245 = v903;
      uint64_t result = CoreML::Specification::ActivationParams::MergePartialFromCodedStream(v154, a2, v904);
      if (!result) {
        return result;
      }
      goto LABEL_2002;
    }
    if (v19 == 140)
    {
      if (v15 != 98) {
        goto LABEL_9;
      }
      if (*v5 != 140)
      {
        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
        *((_DWORD *)this + 35) = 140;
        operator new();
      }
      unint64_t v155 = *v6;
      v374 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v374 < 0)
      {
        int v375 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v375 < 0) {
          return 0;
        }
      }
      else
      {
        int v375 = *v374;
        *(void *)a2 = v374 + 1;
      }
      int v906 = google::protobuf::io::CodedInputStream::PushLimit(a2, v375);
      int v908 = *((_DWORD *)a2 + 13);
      BOOL v244 = __OFSUB__(v908--, 1);
      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v908;
      if (v908 < 0 != v244) {
        return 0;
      }
      int v245 = v906;
      uint64_t result = CoreML::Specification::InnerProductLayerParams::MergePartialFromCodedStream(v155, a2, v907);
      if (!result) {
        return result;
      }
      goto LABEL_2002;
    }
    if (v19 == 150 && v15 == 178)
    {
      if (*v5 != 150)
      {
        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
        *((_DWORD *)this + 35) = 150;
        operator new();
      }
      uint64_t v42 = *v6;
      std::string::size_type v282 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v282 < 0)
      {
        int v283 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v283 < 0) {
          return 0;
        }
      }
      else
      {
        int v283 = *v282;
        *(void *)a2 = v282 + 1;
      }
      int v727 = google::protobuf::io::CodedInputStream::PushLimit(a2, v283);
      int v729 = *((_DWORD *)a2 + 13);
      BOOL v244 = __OFSUB__(v729--, 1);
      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v729;
      if (v729 < 0 != v244) {
        return 0;
      }
      int v245 = v727;
      uint64_t result = CoreML::Specification::EmbeddingLayerParams::MergePartialFromCodedStream(v42, a2, v728);
      if (!result) {
        return result;
      }
      goto LABEL_2002;
    }
LABEL_9:
    if (!v15 || (v15 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v15, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_19EB87A40(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x1081C40594C3D85);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::internal::RepeatedPtrFieldBase::Add<google::protobuf::RepeatedPtrField<CoreML::Specification::NeuralNetworkPreprocessing>::TypeHandler>(google::protobuf::internal::RepeatedPtrFieldBase *this)
{
  int v2 = (int *)*((void *)this + 2);
  if (!v2)
  {
    int v3 = *((_DWORD *)this + 2);
    int v4 = *((_DWORD *)this + 3);
LABEL_6:
    if (v3 <= v4)
    {
      google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(this, v4 - v3 + 1);
      int v2 = (int *)*((void *)this + 2);
    }
    int v4 = *v2;
    goto LABEL_9;
  }
  int v3 = *((_DWORD *)this + 2);
  int v4 = *v2;
  if (v3 < *v2)
  {
    *((_DWORD *)this + 2) = v3 + 1;
    return *(google::protobuf::Arena ***)&v2[2 * v3 + 2];
  }
  if (v4 == *((_DWORD *)this + 3)) {
    goto LABEL_6;
  }
LABEL_9:
  *int v2 = v4 + 1;
  uint64_t v6 = *(google::protobuf::Arena **)this;
  if (!*(void *)this) {
    operator new();
  }
  CoreML::Specification::NeuralNetworkPreprocessing::NeuralNetworkPreprocessing((CoreML::Specification::NeuralNetworkPreprocessing *)Aligned);
  uint64_t v7 = google::protobuf::Arena::AllocateAligned(v6, 0, 24);
  *uint64_t v7 = (google::protobuf::Arena *)Aligned;
  v7[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::NeuralNetworkPreprocessing>;
  uint64_t v8 = (unint64_t *)((char *)v6 + 32);
  do
    unint64_t v9 = __ldxr(v8);
  while (__stxr((unint64_t)v7, v8));
  v7[2] = (google::protobuf::Arena *)v9;
  uint64_t v10 = *((void *)this + 2);
  uint64_t v11 = *((int *)this + 2);
  *((_DWORD *)this + 2) = v11 + 1;
  *(void *)(v10 + 8 * v11 + 8) = Aligned;
  return Aligned;
}

void sub_19EB88180(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C40EE95837BLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkPreprocessing::MergePartialFromCodedStream(CoreML::Specification::NeuralNetworkPreprocessing *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (std::string **)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v6 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1))
        {
          LODWORD(v7) = 0;
LABEL_7:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
          unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v8 & 0x100000000) == 0) {
            goto LABEL_26;
          }
          goto LABEL_8;
        }
        uint64_t v7 = *v6;
        if (*v6 < 1) {
          goto LABEL_7;
        }
        *(void *)a2 = v6 + 1;
        unint64_t v8 = v7 | 0x100000000;
        if ((v8 & 0x100000000) == 0) {
          goto LABEL_26;
        }
LABEL_8:
        unsigned int v10 = v8 >> 3;
        if (v8 >> 3 == 11)
        {
          if (v8 != 90) {
            goto LABEL_26;
          }
          if (*((_DWORD *)this + 9) != 11)
          {
            CoreML::Specification::Int64Parameter::clear_AllowedValues((uint64_t)this);
            *((_DWORD *)this + 9) = 11;
            operator new();
          }
          unint64_t v15 = (CoreML::Specification::NeuralNetworkMeanImage *)*((void *)this + 3);
          uint64_t v18 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v18 < 0)
          {
            int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            int VarintSizeAsIntFallback = *v18;
            *(void *)a2 = v18 + 1;
          }
          int v22 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          int v24 = *((_DWORD *)a2 + 13);
          BOOL v25 = __OFSUB__(v24--, 1);
          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v24;
          if (v24 < 0 != v25) {
            return 0;
          }
          int v26 = v22;
          uint64_t result = CoreML::Specification::NeuralNetworkMeanImage::MergePartialFromCodedStream(v15, (char **)a2, v23);
          if (!result) {
            return result;
          }
          goto LABEL_47;
        }
        if (v10 != 10) {
          break;
        }
        if (v8 != 82) {
          goto LABEL_26;
        }
        if (*((_DWORD *)this + 9) != 10)
        {
          CoreML::Specification::Int64Parameter::clear_AllowedValues((uint64_t)this);
          *((_DWORD *)this + 9) = 10;
          operator new();
        }
        int v16 = (CoreML::Specification::NeuralNetworkImageScaler *)*((void *)this + 3);
        int v20 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v20 < 0)
        {
          int v21 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v21 < 0) {
            return 0;
          }
        }
        else
        {
          int v21 = *v20;
          *(void *)a2 = v20 + 1;
        }
        int v27 = google::protobuf::io::CodedInputStream::PushLimit(a2, v21);
        int v29 = *((_DWORD *)a2 + 13);
        BOOL v25 = __OFSUB__(v29--, 1);
        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v29;
        if (v29 < 0 != v25) {
          return 0;
        }
        int v26 = v27;
        uint64_t result = CoreML::Specification::NeuralNetworkImageScaler::MergePartialFromCodedStream(v16, a2, v28);
        if (!result) {
          return result;
        }
LABEL_47:
        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v26)) {
          return 0;
        }
      }
      if (v10 != 1 || v8 != 10) {
        break;
      }
      if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
      }
      uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((unsigned __int8 **)a2, *v5);
      if (!result) {
        return result;
      }
      int v13 = (unsigned int *)*v5;
      if (SHIBYTE((*v5)->__r_.__value_.__r.__words[2]) < 0)
      {
        int v13 = *(unsigned int **)v13;
        std::string::size_type size = (*v5)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v5)->__r_.__value_.__r.__words[2]);
      }
      if (!google::protobuf::internal::WireFormatLite::VerifyUtf8String(v13, size, 0, (uint64_t)"CoreML.Specification.NeuralNetworkPreprocessing.featureName"))return 0; {
    }
      }
LABEL_26:
    if (!v8 || (v8 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_19EB88470(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x1081C40825B58B5);
  _Unwind_Resume(a1);
}

CoreML::Specification::NeuralNetworkImageScaler *CoreML::Specification::NeuralNetworkImageScaler::NeuralNetworkImageScaler(CoreML::Specification::NeuralNetworkImageScaler *this)
{
  *(void *)this = &unk_1EF0D6640;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::NeuralNetworkImageScaler *)&CoreML::Specification::_NeuralNetworkImageScaler_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  *((void *)this + 4) = 0;
  return this;
}

void sub_19EB88514(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::NeuralNetworkImageScaler::MergePartialFromCodedStream(CoreML::Specification::NeuralNetworkImageScaler *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v5 = *(unsigned __int8 **)a2;
          unint64_t v6 = *((void *)a2 + 1);
          if (*(void *)a2 >= v6)
          {
            LODWORD(v8) = 0;
          }
          else
          {
            uint64_t v7 = v5 + 1;
            uint64_t v8 = *v5;
            if ((char)*v5 >= 1)
            {
              *(void *)a2 = v7;
              unint64_t v9 = v8 | 0x100000000;
              if ((v9 & 0x100000000) == 0) {
                goto LABEL_8;
              }
              goto LABEL_19;
            }
            if ((unint64_t)v7 < v6)
            {
              int v10 = *v7;
              if ((v8 & ~v10) >= 0x80)
              {
                *(void *)a2 = v5 + 2;
                unint64_t v9 = (v8 + (v10 << 7) - 128) | 0x100000000;
                goto LABEL_19;
              }
            }
          }
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v8);
          unint64_t v9 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
          if ((v9 & 0x100000000) == 0) {
            goto LABEL_8;
          }
LABEL_19:
          unsigned int v14 = v9 >> 3;
          if (v9 >> 3 <= 0x14) {
            break;
          }
          if (v14 == 21)
          {
            if (v9 != 173) {
              goto LABEL_8;
            }
            unsigned int v25 = 0;
            unsigned int v19 = *(unsigned int **)a2;
            if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) < 4)
            {
              BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v25);
              if (!result) {
                return result;
              }
              unsigned int v20 = v25;
            }
            else
            {
              unsigned int v20 = *v19;
              *(void *)a2 = v19 + 1;
            }
            *((_DWORD *)this + 7) = v20;
          }
          else if (v14 == 22)
          {
            if (v9 != 181) {
              goto LABEL_8;
            }
            unsigned int v25 = 0;
            int v21 = *(unsigned int **)a2;
            if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) < 4)
            {
              BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v25);
              if (!result) {
                return result;
              }
              unsigned int v22 = v25;
            }
            else
            {
              unsigned int v22 = *v21;
              *(void *)a2 = v21 + 1;
            }
            *((_DWORD *)this + 8) = v22;
          }
          else
          {
            if (v14 != 30 || v9 != 245) {
              goto LABEL_8;
            }
            unsigned int v25 = 0;
            unint64_t v15 = *(unsigned int **)a2;
            if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) < 4)
            {
              BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v25);
              if (!result) {
                return result;
              }
              unsigned int v16 = v25;
            }
            else
            {
              unsigned int v16 = *v15;
              *(void *)a2 = v15 + 1;
            }
            *((_DWORD *)this + 4) = v16;
          }
        }
        if (v14 == 10) {
          break;
        }
        if (v14 != 20 || v9 != 165) {
          goto LABEL_8;
        }
        unsigned int v25 = 0;
        int v17 = *(unsigned int **)a2;
        if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) < 4)
        {
          BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v25);
          if (!result) {
            return result;
          }
          unsigned int v18 = v25;
        }
        else
        {
          unsigned int v18 = *v17;
          *(void *)a2 = v17 + 1;
        }
        *((_DWORD *)this + 6) = v18;
      }
      if (v9 != 85) {
        break;
      }
      unsigned int v25 = 0;
      unsigned int v23 = *(unsigned int **)a2;
      if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) < 4)
      {
        BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v25);
        if (!result) {
          return result;
        }
        unsigned int v24 = v25;
      }
      else
      {
        unsigned int v24 = *v23;
        *(void *)a2 = v23 + 1;
      }
      *((_DWORD *)this + 5) = v24;
    }
LABEL_8:
    if (v9) {
      BOOL v11 = (v9 & 7) == 4;
    }
    else {
      BOOL v11 = 1;
    }
    BOOL result = v11;
    if (v11) {
      return result;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v9, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::NeuralNetworkMeanImage *CoreML::Specification::NeuralNetworkMeanImage::NeuralNetworkMeanImage(CoreML::Specification::NeuralNetworkMeanImage *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1EF0D5638;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::NeuralNetworkMeanImage *)&CoreML::Specification::_NeuralNetworkMeanImage_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 9) = 0;
  return this;
}

void sub_19EB88828(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::NeuralNetworkMeanImage::MergePartialFromCodedStream(CoreML::Specification::NeuralNetworkMeanImage *this, char **a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          unint64_t v6 = *a2;
          if (*a2 < a2[1]) {
            break;
          }
          LODWORD(v7) = 0;
LABEL_7:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v7);
          unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v8 & 0x100000000) != 0) {
            goto LABEL_8;
          }
LABEL_14:
          if (v8) {
            BOOL v12 = (v8 & 7) == 4;
          }
          else {
            BOOL v12 = 1;
          }
          if (v12) {
            return 1;
          }
          if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)return 0; {
        }
          }
        uint64_t v7 = *v6;
        if (*v6 < 1) {
          goto LABEL_7;
        }
        *a2 = v6 + 1;
        unint64_t v8 = v7 | 0x100000000;
        if ((v8 & 0x100000000) == 0) {
          goto LABEL_14;
        }
LABEL_8:
        if ((v8 & 0xFFFFFFF8) != 8) {
          goto LABEL_14;
        }
        if (v8 != 13) {
          break;
        }
        if (!google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<float,(google::protobuf::internal::WireFormatLite::FieldType)2>(10, (unsigned int **)a2, (uint64_t)v5))return 0; {
      }
        }
      if (v8 != 10) {
        goto LABEL_14;
      }
      int v10 = *a2;
      if (*a2 >= a2[1] || *v10 < 0)
      {
        unsigned int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((google::protobuf::io::CodedInputStream *)a2);
        if ((VarintSizeAsIntFallback & 0x80000000) != 0) {
          return 0;
        }
      }
      else
      {
        unsigned int VarintSizeAsIntFallback = *v10;
        *a2 = v10 + 1;
      }
      if ((VarintSizeAsIntFallback & 3) != 0) {
        return 0;
      }
      int v13 = *((_DWORD *)a2 + 12);
      int v14 = v13 == 0x7FFFFFFF
          ? -1
          : v13 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
      int v15 = *((_DWORD *)a2 + 10);
      int v16 = v15 == 0x7FFFFFFF
          ? -1
          : v15 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
      signed int v17 = *v5;
      unsigned int v18 = VarintSizeAsIntFallback >> 2;
      int v19 = v16 >= v14 ? v14 : v16;
      int v20 = v14 == -1 ? v16 : v19;
      if (v20 >= (uint64_t)VarintSizeAsIntFallback) {
        break;
      }
      if (VarintSizeAsIntFallback >= 4)
      {
        if (v18 <= 1) {
          int v21 = 1;
        }
        else {
          int v21 = VarintSizeAsIntFallback >> 2;
        }
        do
        {
          unsigned int v30 = 0;
          unsigned int v22 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v30);
            if (!result) {
              return result;
            }
            unsigned int v23 = v30;
            signed int v17 = *v5;
          }
          else
          {
            unsigned int v23 = *v22;
            *a2 = (char *)(v22 + 1);
          }
          if (v17 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<float>::Reserve(v5, v17 + 1);
            signed int v17 = *v5;
          }
          uint64_t v24 = *((void *)this + 3) + 4 * v17;
          *((_DWORD *)this + 4) = v17 + 1;
          *(_DWORD *)(v24 + 8) = v23;
          ++v17;
          --v21;
        }
        while (v21);
      }
    }
    signed int v26 = v17 + v18;
    if (VarintSizeAsIntFallback > 3)
    {
      google::protobuf::RepeatedField<float>::Reserve(v5, v17 + v18);
      uint64_t v27 = *((void *)this + 3);
      uint64_t v28 = 4 * v26 - 4 * *((int *)this + 4);
      if (v28 >= 1) {
        bzero((void *)(v27 + 8 + 4 * *((int *)this + 4)), 4 * (((unint64_t)v28 >> 2) - ((unint64_t)v28 > 3)) + 4);
      }
    }
    else
    {
      uint64_t v27 = *((void *)this + 3);
    }
    *uint64_t v5 = v26;
    uint64_t v29 = v27 + 8;
    if (!v27) {
      uint64_t v29 = 0;
    }
  }
  while (google::protobuf::io::CodedInputStream::ReadRaw((google::protobuf::io::CodedInputStream *)a2, (char *)(v29 + 4 * v17), VarintSizeAsIntFallback));
  if ((int)*v5 >= 1)
  {
    BOOL result = 0;
    *uint64_t v5 = v17;
    return result;
  }
  return 0;
}

CoreML::Specification::NeuralNetworkPreprocessing *CoreML::Specification::NeuralNetworkPreprocessing::NeuralNetworkPreprocessing(CoreML::Specification::NeuralNetworkPreprocessing *this)
{
  *(void *)this = &unk_1EF0D72B8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::NeuralNetworkPreprocessing *)&CoreML::Specification::_NeuralNetworkPreprocessing_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 4) = 0;
  return this;
}

void sub_19EB88BB8(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::internal::RepeatedPtrFieldBase::Add<google::protobuf::RepeatedPtrField<CoreML::Specification::Tensor>::TypeHandler>(google::protobuf::internal::RepeatedPtrFieldBase *this)
{
  uint64_t v2 = (int *)*((void *)this + 2);
  if (!v2)
  {
    int v3 = *((_DWORD *)this + 2);
    int v4 = *((_DWORD *)this + 3);
LABEL_6:
    if (v3 <= v4)
    {
      google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(this, v4 - v3 + 1);
      uint64_t v2 = (int *)*((void *)this + 2);
    }
    int v4 = *v2;
    goto LABEL_9;
  }
  int v3 = *((_DWORD *)this + 2);
  int v4 = *v2;
  if (v3 < *v2)
  {
    *((_DWORD *)this + 2) = v3 + 1;
    return *(google::protobuf::Arena ***)&v2[2 * v3 + 2];
  }
  if (v4 == *((_DWORD *)this + 3)) {
    goto LABEL_6;
  }
LABEL_9:
  *uint64_t v2 = v4 + 1;
  unint64_t v6 = *(google::protobuf::Arena **)this;
  if (!*(void *)this) {
    operator new();
  }
  CoreML::Specification::Tensor::Tensor((CoreML::Specification::Tensor *)Aligned);
  uint64_t v7 = google::protobuf::Arena::AllocateAligned(v6, 0, 24);
  *uint64_t v7 = (google::protobuf::Arena *)Aligned;
  v7[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::Tensor>;
  unint64_t v8 = (unint64_t *)((char *)v6 + 32);
  do
    unint64_t v9 = __ldxr(v8);
  while (__stxr((unint64_t)v7, v8));
  v7[2] = (google::protobuf::Arena *)v9;
  uint64_t v10 = *((void *)this + 2);
  uint64_t v11 = *((int *)this + 2);
  *((_DWORD *)this + 2) = v11 + 1;
  *(void *)(v10 + 8 * v11 + 8) = Aligned;
  return Aligned;
}

void sub_19EB88CF8(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C40EA59D502);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::Tensor::MergePartialFromCodedStream(CoreML::Specification::Tensor *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        unint64_t v6 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1))
        {
          LODWORD(v7) = 0;
LABEL_7:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
          unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v8 & 0x100000000) == 0) {
            goto LABEL_13;
          }
          goto LABEL_8;
        }
        uint64_t v7 = *v6;
        if (*v6 < 1) {
          goto LABEL_7;
        }
        *(void *)a2 = v6 + 1;
        unint64_t v8 = v7 | 0x100000000;
        if ((v8 & 0x100000000) == 0) {
          goto LABEL_13;
        }
LABEL_8:
        if (v8 >> 3 != 2) {
          break;
        }
        if (v8 == 16)
        {
          if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(google::protobuf::internal::WireFormatLite::FieldType)3>(18, a2, (uint64_t)v5) & 1) == 0)return 0; {
        }
          }
        else
        {
          if (v8 != 18) {
            goto LABEL_13;
          }
          BOOL v12 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v12 < 0)
          {
            int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            int VarintSizeAsIntFallback = *v12;
            *(void *)a2 = v12 + 1;
          }
          int v16 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          while (1)
          {
            int v17 = *((_DWORD *)a2 + 10);
            uint64_t v18 = *((int *)a2 + 11);
            unint64_t v19 = *((void *)a2 + 1);
            int v20 = *((_DWORD *)a2 + 6);
            if (v17 == 0x7FFFFFFF) {
              break;
            }
            int v21 = *(char **)a2;
            if ((int)(v17 - v20 + v18 + v19 - *(void *)a2) < 1) {
              break;
            }
            if ((unint64_t)v21 >= v19 || *v21 < 0)
            {
              unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v24 & 1) == 0) {
                return 0;
              }
              unint64_t v22 = Varint64Fallback;
            }
            else
            {
              unint64_t v22 = *v21;
              *(void *)a2 = v21 + 1;
            }
            signed int v25 = *((_DWORD *)this + 4);
            if (v25 == *((_DWORD *)this + 5))
            {
              google::protobuf::RepeatedField<double>::Reserve(v5, v25 + 1);
              signed int v25 = *v5;
            }
            uint64_t v26 = *((void *)this + 3);
            *((_DWORD *)this + 4) = v25 + 1;
            *(void *)(v26 + 8 * v25 + 8) = v22;
          }
          *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v16;
          uint64_t v27 = v19 + v18;
          *((void *)a2 + 1) = v19 + v18;
          int v28 = *((_DWORD *)a2 + 12);
          if (v28 >= v16) {
            int v28 = v16;
          }
          BOOL v29 = __OFSUB__(v20, v28);
          int v30 = v20 - v28;
          if ((v30 < 0) ^ v29 | (v30 == 0)) {
            int v30 = 0;
          }
          else {
            *((void *)a2 + 1) = v27 - v30;
          }
          *((_DWORD *)a2 + 11) = v30;
          *((unsigned char *)a2 + 36) = 0;
        }
      }
      if (v8 >> 3 != 1 || v8 != 8) {
        break;
      }
      int v14 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        int v15 = 0;
        goto LABEL_48;
      }
      int v15 = *v14;
      if (*v14 < 0)
      {
LABEL_48:
        uint64_t Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v15);
        *((_DWORD *)this + 9) = Varint32Fallback;
        if (Varint32Fallback < 0) {
          return 0;
        }
      }
      else
      {
        *((_DWORD *)this + 9) = v15;
        *(void *)a2 = v14 + 1;
      }
    }
LABEL_13:
    if (!v8 || (v8 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0) {
      return 0;
    }
  }
}

uint64_t CoreML::Specification::NeuralNetworkLayer::clear_layer(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 140);
  if (v2 > 879)
  {
    if (v2 > 1139)
    {
      if (v2 <= 1274)
      {
        if (v2 <= 1199)
        {
          if (v2 <= 1169)
          {
            if (v2 > 1149)
            {
              if (v2 != 1150 && v2 != 1155) {
                goto LABEL_78;
              }
            }
            else if (v2 != 1140 && v2 != 1145)
            {
              goto LABEL_78;
            }
          }
          else if (v2 <= 1179)
          {
            if (v2 != 1170 && v2 != 1175) {
              goto LABEL_78;
            }
          }
          else if (v2 != 1180 && v2 != 1190 && v2 != 1195)
          {
            goto LABEL_78;
          }
        }
        else if (v2 > 1249)
        {
          if (v2 <= 1259)
          {
            if (v2 != 1250 && v2 != 1255) {
              goto LABEL_78;
            }
          }
          else if (v2 != 1260 && v2 != 1265 && v2 != 1270)
          {
            goto LABEL_78;
          }
        }
        else if (v2 <= 1214)
        {
          if (v2 != 1200 && v2 != 1210) {
            goto LABEL_78;
          }
        }
        else if (v2 != 1215 && v2 != 1220 && v2 != 1230)
        {
          goto LABEL_78;
        }
        goto LABEL_76;
      }
      if (v2 <= 1349)
      {
        if (v2 > 1312)
        {
          if (v2 <= 1319)
          {
            if (v2 != 1313 && v2 != 1315) {
              goto LABEL_78;
            }
          }
          else if (v2 != 1320 && v2 != 1325 && v2 != 1330)
          {
            goto LABEL_78;
          }
        }
        else if (v2 <= 1284)
        {
          if (v2 != 1275 && v2 != 1280) {
            goto LABEL_78;
          }
        }
        else if (v2 != 1285 && v2 != 1290 && v2 != 1295)
        {
          goto LABEL_78;
        }
        goto LABEL_76;
      }
      if (v2 <= 1454)
      {
        if (v2 != 1350 && v2 != 1400 && v2 != 1450) {
          goto LABEL_78;
        }
        goto LABEL_76;
      }
      switch(v2)
      {
        case 1455:
        case 1460:
        case 1461:
        case 1465:
        case 1466:
        case 1470:
        case 1471:
          goto LABEL_76;
        default:
          break;
      }
    }
    else
    {
      if (v2 > 994)
      {
        if (v2 > 1079)
        {
          if (v2 > 1109)
          {
            if (v2 <= 1124)
            {
              if (v2 != 1110 && v2 != 1120) {
                goto LABEL_78;
              }
            }
            else if (v2 != 1125 && v2 != 1130 && v2 != 1135)
            {
              goto LABEL_78;
            }
          }
          else if (v2 <= 1089)
          {
            if (v2 != 1080 && v2 != 1085) {
              goto LABEL_78;
            }
          }
          else if (v2 != 1090 && v2 != 1100 && v2 != 1105)
          {
            goto LABEL_78;
          }
        }
        else if (v2 > 1024)
        {
          if (v2 <= 1044)
          {
            if (v2 != 1025 && v2 != 1040) {
              goto LABEL_78;
            }
          }
          else if (v2 != 1045 && v2 != 1065 && v2 != 1070)
          {
            goto LABEL_78;
          }
        }
        else if (v2 <= 1004)
        {
          if (v2 != 995 && v2 != 1000) {
            goto LABEL_78;
          }
        }
        else if (v2 != 1005 && v2 != 1015 && v2 != 1020)
        {
          goto LABEL_78;
        }
        goto LABEL_76;
      }
      if (v2 <= 939)
      {
        if (v2 > 904)
        {
          if (v2 <= 924)
          {
            if (v2 != 905 && v2 != 920) {
              goto LABEL_78;
            }
          }
          else if (v2 != 925 && v2 != 930 && v2 != 935)
          {
            goto LABEL_78;
          }
        }
        else if (v2 <= 889)
        {
          if (v2 != 880 && v2 != 885) {
            goto LABEL_78;
          }
        }
        else if (v2 != 890 && v2 != 895 && v2 != 900)
        {
          goto LABEL_78;
        }
        goto LABEL_76;
      }
      if (v2 > 959)
      {
        if (v2 <= 974)
        {
          if (v2 != 960 && v2 != 965) {
            goto LABEL_78;
          }
        }
        else if (v2 != 975 && v2 != 980 && v2 != 985)
        {
          goto LABEL_78;
        }
        goto LABEL_76;
      }
      switch(v2)
      {
        case 945:
        case 950:
        case 952:
        case 954:
          goto LABEL_76;
        case 946:
        case 947:
        case 948:
        case 949:
        case 951:
        case 953:
          break;
        default:
          if (v2 == 940) {
            goto LABEL_76;
          }
          break;
      }
    }
  }
  else
  {
    if (v2 <= 604)
    {
      if (v2 > 249)
      {
        if (v2 > 329)
        {
          if (v2 > 409)
          {
            if (v2 <= 429)
            {
              if (v2 != 410 && v2 != 420) {
                goto LABEL_78;
              }
            }
            else if (v2 != 430 && v2 != 500 && v2 != 600)
            {
              goto LABEL_78;
            }
          }
          else if (v2 <= 344)
          {
            if (v2 != 330 && v2 != 340) {
              goto LABEL_78;
            }
          }
          else if (v2 != 345 && v2 != 350 && v2 != 400)
          {
            goto LABEL_78;
          }
        }
        else if (v2 > 289)
        {
          if (v2 <= 300)
          {
            if (v2 != 290 && v2 != 300) {
              goto LABEL_78;
            }
          }
          else if (v2 != 301 && v2 != 310 && v2 != 320)
          {
            goto LABEL_78;
          }
        }
        else if (v2 <= 260)
        {
          if (v2 != 250 && v2 != 260) {
            goto LABEL_78;
          }
        }
        else if (v2 != 261 && v2 != 270 && v2 != 280)
        {
          goto LABEL_78;
        }
      }
      else if (v2 > 189)
      {
        if (v2 > 219)
        {
          if (v2 <= 230)
          {
            if (v2 != 220 && v2 != 230) {
              goto LABEL_78;
            }
          }
          else if (v2 != 231 && v2 != 240 && v2 != 245)
          {
            goto LABEL_78;
          }
        }
        else if (v2 <= 209)
        {
          if (v2 != 190 && v2 != 200) {
            goto LABEL_78;
          }
        }
        else if (v2 != 210 && v2 != 211 && v2 != 212)
        {
          goto LABEL_78;
        }
      }
      else if (v2 > 159)
      {
        if (v2 <= 169)
        {
          if (v2 != 160 && v2 != 165) {
            goto LABEL_78;
          }
        }
        else if (v2 != 170 && v2 != 175 && v2 != 180)
        {
          goto LABEL_78;
        }
      }
      else if (v2 <= 129)
      {
        if (v2 != 100 && v2 != 120) {
          goto LABEL_78;
        }
      }
      else if (v2 != 130 && v2 != 140 && v2 != 150)
      {
        goto LABEL_78;
      }
LABEL_76:
      this = *(void *)(this + 128);
      if (this) {
        this = (*(uint64_t (**)(uint64_t))(*(void *)this + 8))(this);
      }
      goto LABEL_78;
    }
    if (v2 <= 759)
    {
      if (v2 > 684)
      {
        if (v2 > 729)
        {
          if (v2 <= 739)
          {
            if (v2 != 730 && v2 != 735) {
              goto LABEL_78;
            }
          }
          else if (v2 != 740 && v2 != 750 && v2 != 755)
          {
            goto LABEL_78;
          }
        }
        else if (v2 <= 709)
        {
          if (v2 != 685 && v2 != 700) {
            goto LABEL_78;
          }
        }
        else if (v2 != 710 && v2 != 715 && v2 != 720)
        {
          goto LABEL_78;
        }
      }
      else if (v2 > 639)
      {
        if (v2 <= 664)
        {
          if (v2 != 640 && v2 != 660) {
            goto LABEL_78;
          }
        }
        else if (v2 != 665 && v2 != 670 && v2 != 680)
        {
          goto LABEL_78;
        }
      }
      else if (v2 <= 619)
      {
        if (v2 != 605 && v2 != 615) {
          goto LABEL_78;
        }
      }
      else if (v2 != 620 && v2 != 625 && v2 != 635)
      {
        goto LABEL_78;
      }
      goto LABEL_76;
    }
    if (v2 <= 824)
    {
      if (v2 > 789)
      {
        if (v2 > 814)
        {
          if (v2 != 815 && v2 != 820) {
            goto LABEL_78;
          }
        }
        else if (v2 != 790 && v2 != 795)
        {
          goto LABEL_78;
        }
      }
      else if (v2 > 774)
      {
        if (v2 != 775 && v2 != 780) {
          goto LABEL_78;
        }
      }
      else if (v2 != 760 && v2 != 770)
      {
        goto LABEL_78;
      }
      goto LABEL_76;
    }
    if (v2 > 849)
    {
      if (v2 <= 864)
      {
        if (v2 != 850 && v2 != 855) {
          goto LABEL_78;
        }
      }
      else if (v2 != 865 && v2 != 870 && v2 != 875)
      {
        goto LABEL_78;
      }
      goto LABEL_76;
    }
    switch(v2)
    {
      case 825:
      case 827:
      case 830:
      case 832:
        goto LABEL_76;
      case 826:
      case 828:
      case 829:
      case 831:
        break;
      default:
        if (v2 == 840 || v2 == 845) {
          goto LABEL_76;
        }
        break;
    }
  }
LABEL_78:
  *(_DWORD *)(v1 + 14CoreML::Specification::NetworkUpdateParameters::New(this, 0) = 0;
  return this;
}

CoreML::Specification::ConvolutionLayerParams *CoreML::Specification::ConvolutionLayerParams::ConvolutionLayerParams(CoreML::Specification::ConvolutionLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1EF0D52A8;
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0;
  *((void *)this + 8) = 0;
  *((void *)this + 9) = 0;
  *((void *)this + 11) = 0;
  *((void *)this + 12) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::ConvolutionLayerParams *)&CoreML::Specification::_ConvolutionLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *(_OWORD *)((char *)this + 138) = 0u;
  *((_OWORD *)this + 7) = 0u;
  *((_OWORD *)this + 8) = 0u;
  *((void *)this + 21) = 0;
  return this;
}

void sub_19EB89894(_Unwind_Exception *a1)
{
  int v4 = (void *)v2[12];
  if (v4 && !*v4) {
    operator delete(v4);
  }
  uint64_t v5 = (void *)v2[9];
  if (v5 && !*v5) {
    operator delete(v5);
  }
  unint64_t v6 = (void *)v2[6];
  if (v6 && !*v6) {
    operator delete(v6);
  }
  uint64_t v7 = (void *)v2[3];
  if (v7)
  {
    if (!*v7) {
      operator delete(v7);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ConvolutionLayerParams::MergePartialFromCodedStream(CoreML::Specification::ConvolutionLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 88);
  unint64_t v6 = (unsigned int *)((char *)this + 64);
  uint64_t v7 = (unsigned int *)((char *)this + 40);
  unint64_t v8 = (unsigned int *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          unint64_t v9 = *(unsigned __int8 **)a2;
          unint64_t v10 = *((void *)a2 + 1);
          if (*(void *)a2 >= v10)
          {
            LODWORD(v12) = 0;
LABEL_16:
            unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v12);
            unint64_t v13 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
            if ((v13 & 0x100000000) == 0) {
              goto LABEL_9;
            }
            goto LABEL_17;
          }
          uint64_t v11 = v9 + 1;
          uint64_t v12 = *v9;
          if ((char)*v9 < 1)
          {
            if ((unint64_t)v11 < v10)
            {
              int v14 = *v11;
              if ((v12 & ~v14) >= 0x80)
              {
                *(void *)a2 = v9 + 2;
                unint64_t v13 = (v12 + (v14 << 7) - 128) | 0x100000000;
                goto LABEL_17;
              }
            }
            goto LABEL_16;
          }
          *(void *)a2 = v11;
          unint64_t v13 = v12 | 0x100000000;
          if ((v13 & 0x100000000) == 0) {
            goto LABEL_9;
          }
LABEL_17:
          unsigned int v17 = v13 >> 3;
          if (v13 >> 3 > 0x31) {
            break;
          }
          if (v13 >> 3 > 0x13)
          {
            if (v17 == 20)
            {
              if (v13 != 160)
              {
                if (v13 != 162) {
                  goto LABEL_9;
                }
                int v30 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1) || *v30 < 0)
                {
                  int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                  if (VarintSizeAsIntFallback < 0) {
                    return 0;
                  }
                }
                else
                {
                  int VarintSizeAsIntFallback = *v30;
                  *(void *)a2 = v30 + 1;
                }
                int v60 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
                while (1)
                {
                  int v78 = *((_DWORD *)a2 + 10);
                  uint64_t v62 = *((int *)a2 + 11);
                  unint64_t v63 = *((void *)a2 + 1);
                  int v64 = *((_DWORD *)a2 + 6);
                  if (v78 == 0x7FFFFFFF) {
                    break;
                  }
                  char v79 = *(char **)a2;
                  if ((int)(v78 - v64 + v62 + v63 - *(void *)a2) < 1) {
                    break;
                  }
                  if ((unint64_t)v79 >= v63 || *v79 < 0)
                  {
                    unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
                    if ((v82 & 1) == 0) {
                      return 0;
                    }
                    unint64_t v80 = Varint64Fallback;
                  }
                  else
                  {
                    unint64_t v80 = *v79;
                    *(void *)a2 = v79 + 1;
                  }
                  signed int v83 = *((_DWORD *)this + 4);
                  if (v83 == *((_DWORD *)this + 5))
                  {
                    google::protobuf::RepeatedField<double>::Reserve(v8, v83 + 1);
                    signed int v83 = *v8;
                  }
                  uint64_t v84 = *((void *)this + 3);
                  *((_DWORD *)this + 4) = v83 + 1;
                  *(void *)(v84 + 8 * v83 + 8) = v80;
                }
                goto LABEL_175;
              }
              unsigned int v42 = 162;
              int v43 = a2;
              uint64_t v44 = (uint64_t)v8;
              goto LABEL_98;
            }
            if (v17 == 30)
            {
              if (v13 != 240)
              {
                if (v13 != 242) {
                  goto LABEL_9;
                }
                unsigned int v32 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1) || *v32 < 0)
                {
                  int v33 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                  if (v33 < 0) {
                    return 0;
                  }
                }
                else
                {
                  int v33 = *v32;
                  *(void *)a2 = v32 + 1;
                }
                int v60 = google::protobuf::io::CodedInputStream::PushLimit(a2, v33);
                while (1)
                {
                  int v85 = *((_DWORD *)a2 + 10);
                  uint64_t v62 = *((int *)a2 + 11);
                  unint64_t v63 = *((void *)a2 + 1);
                  int v64 = *((_DWORD *)a2 + 6);
                  if (v85 == 0x7FFFFFFF) {
                    break;
                  }
                  unint64_t v86 = *(char **)a2;
                  if ((int)(v85 - v64 + v62 + v63 - *(void *)a2) < 1) {
                    break;
                  }
                  if ((unint64_t)v86 >= v63 || *v86 < 0)
                  {
                    unint64_t v88 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
                    if ((v89 & 1) == 0) {
                      return 0;
                    }
                    unint64_t v87 = v88;
                  }
                  else
                  {
                    unint64_t v87 = *v86;
                    *(void *)a2 = v86 + 1;
                  }
                  signed int v90 = *((_DWORD *)this + 10);
                  if (v90 == *((_DWORD *)this + 11))
                  {
                    google::protobuf::RepeatedField<double>::Reserve(v7, v90 + 1);
                    signed int v90 = *v7;
                  }
                  uint64_t v91 = *((void *)this + 6);
                  *((_DWORD *)this + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v90 + 1;
                  *(void *)(v91 + 8 * v90 + 8) = v87;
                }
                goto LABEL_175;
              }
              unsigned int v42 = 242;
              int v43 = a2;
              uint64_t v44 = (uint64_t)v7;
              goto LABEL_98;
            }
            if (v17 != 40) {
              goto LABEL_9;
            }
            if (v13 == 64)
            {
              unsigned int v42 = 322;
              int v43 = a2;
              uint64_t v44 = (uint64_t)v6;
              goto LABEL_98;
            }
            if (v13 != 66) {
              goto LABEL_9;
            }
            unint64_t v22 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v22 < 0)
            {
              int v23 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (v23 < 0) {
                return 0;
              }
            }
            else
            {
              int v23 = *v22;
              *(void *)a2 = v22 + 1;
            }
            int v60 = google::protobuf::io::CodedInputStream::PushLimit(a2, v23);
            while (1)
            {
              int v61 = *((_DWORD *)a2 + 10);
              uint64_t v62 = *((int *)a2 + 11);
              unint64_t v63 = *((void *)a2 + 1);
              int v64 = *((_DWORD *)a2 + 6);
              if (v61 == 0x7FFFFFFF) {
                break;
              }
              uint64_t v65 = *(char **)a2;
              if ((int)(v61 - v64 + v62 + v63 - *(void *)a2) < 1) {
                break;
              }
              if ((unint64_t)v65 >= v63 || *v65 < 0)
              {
                unint64_t v67 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
                if ((v68 & 1) == 0) {
                  return 0;
                }
                unint64_t v66 = v67;
              }
              else
              {
                unint64_t v66 = *v65;
                *(void *)a2 = v65 + 1;
              }
              signed int v69 = *((_DWORD *)this + 16);
              if (v69 == *((_DWORD *)this + 17))
              {
                google::protobuf::RepeatedField<double>::Reserve(v6, v69 + 1);
                signed int v69 = *v6;
              }
              uint64_t v70 = *((void *)this + 9);
              *((_DWORD *)this + 16) = v69 + 1;
              *(void *)(v70 + 8 * v69 + 8) = v66;
            }
LABEL_175:
            *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v60;
            uint64_t v92 = v63 + v62;
            *((void *)a2 + 1) = v63 + v62;
            int v93 = *((_DWORD *)a2 + 12);
            if (v93 >= v60) {
              int v93 = v60;
            }
            BOOL v39 = __OFSUB__(v64, v93);
            int v94 = v64 - v93;
            if ((v94 < 0) ^ v39 | (v94 == 0)) {
              int v94 = 0;
            }
            else {
              *((void *)a2 + 1) = v92 - v94;
            }
            *((_DWORD *)a2 + 11) = v94;
            *((unsigned char *)a2 + 36) = 0;
          }
          else if (v17 == 1)
          {
            if (v13 != 8) {
              goto LABEL_9;
            }
            unint64_t v19 = *(char **)a2;
            if (*(void *)a2 < *((void *)a2 + 1) && (*v19 & 0x80000000) == 0)
            {
              *((void *)this + 16) = *v19;
              goto LABEL_67;
            }
            *((void *)this + 16) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v52 & 1) == 0) {
              return 0;
            }
          }
          else if (v17 == 2)
          {
            if (v13 != 16) {
              goto LABEL_9;
            }
            unint64_t v19 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v19 < 0)
            {
              *((void *)this + 17) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v53 & 1) == 0) {
                return 0;
              }
            }
            else
            {
              *((void *)this + 17) = *v19;
LABEL_67:
              *(void *)a2 = v19 + 1;
            }
          }
          else
          {
            if (v17 != 10 || v13 != 80) {
              goto LABEL_9;
            }
            unint64_t v19 = *(char **)a2;
            if (*(void *)a2 < *((void *)a2 + 1) && (*v19 & 0x80000000) == 0)
            {
              *((void *)this + 18) = *v19;
              goto LABEL_67;
            }
            *((void *)this + 18) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v49 & 1) == 0) {
              return 0;
            }
          }
        }
        if (v13 >> 3 <= 0x45) {
          break;
        }
        if (v13 >> 3 > 0x5A)
        {
          if (v17 == 91)
          {
            if (v13 == 218)
            {
              uint64_t v18 = (CoreML::Specification::WeightParams *)*((void *)this + 15);
              if (!v18) {
                operator new();
              }
              goto LABEL_87;
            }
LABEL_9:
            if (v13) {
              BOOL v15 = (v13 & 7) == 4;
            }
            else {
              BOOL v15 = 1;
            }
            if (v15) {
              return 1;
            }
            if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v13, a3) & 1) == 0)return 0; {
          }
            }
          else
          {
            if (v17 != 100) {
              goto LABEL_9;
            }
            if (v13 != 32)
            {
              if (v13 != 34) {
                goto LABEL_9;
              }
              char v24 = *(char **)a2;
              if (*(void *)a2 >= *((void *)a2 + 1) || *v24 < 0)
              {
                int v25 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                if (v25 < 0) {
                  return 0;
                }
              }
              else
              {
                int v25 = *v24;
                *(void *)a2 = v24 + 1;
              }
              int v60 = google::protobuf::io::CodedInputStream::PushLimit(a2, v25);
              while (1)
              {
                int v71 = *((_DWORD *)a2 + 10);
                uint64_t v62 = *((int *)a2 + 11);
                unint64_t v63 = *((void *)a2 + 1);
                int v64 = *((_DWORD *)a2 + 6);
                if (v71 == 0x7FFFFFFF) {
                  break;
                }
                std::vector<std::string>::size_type v72 = *(char **)a2;
                if ((int)(v71 - v64 + v62 + v63 - *(void *)a2) < 1) {
                  break;
                }
                if ((unint64_t)v72 >= v63 || *v72 < 0)
                {
                  unint64_t v74 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
                  if ((v75 & 1) == 0) {
                    return 0;
                  }
                  unint64_t v73 = v74;
                }
                else
                {
                  unint64_t v73 = *v72;
                  *(void *)a2 = v72 + 1;
                }
                signed int v76 = *((_DWORD *)this + 22);
                if (v76 == *((_DWORD *)this + 23))
                {
                  google::protobuf::RepeatedField<double>::Reserve(v5, v76 + 1);
                  signed int v76 = *v5;
                }
                uint64_t v77 = *((void *)this + 12);
                *((_DWORD *)this + 22) = v76 + 1;
                *(void *)(v77 + 8 * v76 + 8) = v73;
              }
              goto LABEL_175;
            }
            unsigned int v42 = 802;
            int v43 = a2;
            uint64_t v44 = (uint64_t)v5;
LABEL_98:
            if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned long long,(google::protobuf::internal::WireFormatLite::FieldType)4>(v42, v43, v44) & 1) == 0)return 0; {
          }
            }
        }
        else
        {
          if (v17 != 70)
          {
            if (v17 == 90 && v13 == 210)
            {
              uint64_t v18 = (CoreML::Specification::WeightParams *)*((void *)this + 14);
              if (!v18) {
                operator new();
              }
LABEL_87:
              int v34 = *(char **)a2;
              if (*(void *)a2 >= *((void *)a2 + 1) || *v34 < 0)
              {
                int v35 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                if (v35 < 0) {
                  return 0;
                }
              }
              else
              {
                int v35 = *v34;
                *(void *)a2 = v34 + 1;
              }
              int v36 = google::protobuf::io::CodedInputStream::PushLimit(a2, v35);
              int v38 = *((_DWORD *)a2 + 13);
              BOOL v39 = __OFSUB__(v38--, 1);
              *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v38;
              if (v38 < 0 != v39) {
                return 0;
              }
              int v40 = v36;
              uint64_t result = CoreML::Specification::WeightParams::MergePartialFromCodedStream(v18, a2, v37);
              if (!result) {
                return result;
              }
              goto LABEL_125;
            }
            goto LABEL_9;
          }
          if (v13 != 48) {
            goto LABEL_9;
          }
          uint64_t v26 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v26 < 0)
          {
            unint64_t v27 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v51 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            unint64_t v27 = *v26;
            *(void *)a2 = v26 + 1;
          }
          *((unsigned char *)this + 15google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v27 != 0;
        }
      }
      if (v17 != 50) {
        break;
      }
      if (v13 != 146) {
        goto LABEL_9;
      }
      if (*((_DWORD *)this + 43) != 50)
      {
        CoreML::Specification::ConvolutionLayerParams::clear_ConvolutionPaddingType((uint64_t)this);
        *((_DWORD *)this + 4google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 50;
        operator new();
      }
      int v28 = (CoreML::Specification::ValidPadding *)*((void *)this + 20);
      int v45 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v45 < 0)
      {
        int v46 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v46 < 0) {
          return 0;
        }
      }
      else
      {
        int v46 = *v45;
        *(void *)a2 = v45 + 1;
      }
      int v54 = google::protobuf::io::CodedInputStream::PushLimit(a2, v46);
      int v56 = *((_DWORD *)a2 + 13);
      BOOL v39 = __OFSUB__(v56--, 1);
      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v56;
      if (v56 < 0 != v39) {
        return 0;
      }
      int v40 = v54;
      uint64_t result = CoreML::Specification::ValidPadding::MergePartialFromCodedStream(v28, a2, v55);
      if (!result) {
        return result;
      }
LABEL_125:
      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v40)) {
        return 0;
      }
    }
    if (v17 == 51) {
      break;
    }
    if (v17 != 60 || v13 != 224) {
      goto LABEL_9;
    }
    int v20 = *(char **)a2;
    if (*(void *)a2 >= *((void *)a2 + 1) || *v20 < 0)
    {
      unint64_t v21 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
      if ((v50 & 1) == 0) {
        return 0;
      }
    }
    else
    {
      unint64_t v21 = *v20;
      *(void *)a2 = v20 + 1;
    }
    *((unsigned char *)this + 152) = v21 != 0;
  }
  if (v13 != 154) {
    goto LABEL_9;
  }
  if (*((_DWORD *)this + 43) != 51)
  {
    CoreML::Specification::ConvolutionLayerParams::clear_ConvolutionPaddingType((uint64_t)this);
    *((_DWORD *)this + 4google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 51;
    operator new();
  }
  BOOL v29 = (CoreML::Specification::SamePadding *)*((void *)this + 20);
  int v47 = *(char **)a2;
  if (*(void *)a2 >= *((void *)a2 + 1) || *v47 < 0)
  {
    int v48 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
    if (v48 < 0) {
      return 0;
    }
  }
  else
  {
    int v48 = *v47;
    *(void *)a2 = v47 + 1;
  }
  int v57 = google::protobuf::io::CodedInputStream::PushLimit(a2, v48);
  int v59 = *((_DWORD *)a2 + 13);
  BOOL v39 = __OFSUB__(v59--, 1);
  *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v59;
  if (v59 < 0 == v39)
  {
    int v40 = v57;
    uint64_t result = CoreML::Specification::SamePadding::MergePartialFromCodedStream(v29, (char **)a2, v58);
    if (!result) {
      return result;
    }
    goto LABEL_125;
  }
  return 0;
}

void sub_19EB8A27C(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::PoolingLayerParams *CoreML::Specification::PoolingLayerParams::PoolingLayerParams(CoreML::Specification::PoolingLayerParams *this)
{
  *(void *)this = &unk_1EF0D3200;
  *((void *)this + 1) = 0;
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::PoolingLayerParams *)&CoreML::Specification::_PoolingLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_WORD *)this + 32) = 0;
  *((_DWORD *)this + 15) = 0;
  *((void *)this + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = 0;
  return this;
}

void sub_19EB8A34C(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 48);
  if (v4 && !*v4) {
    operator delete(v4);
  }
  uint64_t v5 = *(void **)(v2 + 24);
  if (v5)
  {
    if (!*v5) {
      operator delete(v5);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::PoolingLayerParams::MergePartialFromCodedStream(CoreML::Specification::PoolingLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 40);
  unint64_t v6 = (unsigned int *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      uint64_t v7 = *(unsigned __int8 **)a2;
      unint64_t v8 = *((void *)a2 + 1);
      if (*(void *)a2 >= v8)
      {
        LODWORD(v1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = 0;
LABEL_16:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v10);
        unint64_t v11 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
        if ((v11 & 0x100000000) == 0) {
          goto LABEL_9;
        }
        goto LABEL_17;
      }
      unint64_t v9 = v7 + 1;
      uint64_t v10 = *v7;
      if ((char)*v7 < 1)
      {
        if ((unint64_t)v9 < v8)
        {
          int v12 = *v9;
          if ((v10 & ~v12) >= 0x80)
          {
            *(void *)a2 = v7 + 2;
            unint64_t v11 = (v10 + (v12 << 7) - 128) | 0x100000000;
            goto LABEL_17;
          }
        }
        goto LABEL_16;
      }
      *(void *)a2 = v9;
      unint64_t v11 = v10 | 0x100000000;
      if ((v11 & 0x100000000) == 0) {
        goto LABEL_9;
      }
LABEL_17:
      unsigned int v15 = v11 >> 3;
      if (v11 >> 3 > 0x1E) {
        break;
      }
      if (v11 >> 3 > 0x13)
      {
        if (v15 == 20)
        {
          if (v11 == 160)
          {
            unsigned int v30 = 162;
            int v31 = a2;
            uint64_t v32 = (uint64_t)v5;
            goto LABEL_64;
          }
          if (v11 != 162) {
            goto LABEL_9;
          }
          uint64_t v26 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v26 < 0)
          {
            int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            int VarintSizeAsIntFallback = *v26;
            *(void *)a2 = v26 + 1;
          }
          int v53 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          while (1)
          {
            int v64 = *((_DWORD *)a2 + 10);
            uint64_t v55 = *((int *)a2 + 11);
            unint64_t v56 = *((void *)a2 + 1);
            int v57 = *((_DWORD *)a2 + 6);
            if (v64 == 0x7FFFFFFF) {
              break;
            }
            uint64_t v65 = *(char **)a2;
            if ((int)(v64 - v57 + v55 + v56 - *(void *)a2) < 1) {
              break;
            }
            if ((unint64_t)v65 >= v56 || *v65 < 0)
            {
              unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v68 & 1) == 0) {
                return 0;
              }
              unint64_t v66 = Varint64Fallback;
            }
            else
            {
              unint64_t v66 = *v65;
              *(void *)a2 = v65 + 1;
            }
            signed int v69 = *((_DWORD *)this + 10);
            if (v69 == *((_DWORD *)this + 11))
            {
              google::protobuf::RepeatedField<double>::Reserve(v5, v69 + 1);
              signed int v69 = *v5;
            }
            uint64_t v70 = *((void *)this + 6);
            *((_DWORD *)this + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v69 + 1;
            *(void *)(v70 + 8 * v69 + 8) = v66;
          }
LABEL_119:
          *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v53;
          uint64_t v71 = v56 + v55;
          *((void *)a2 + 1) = v56 + v55;
          int v72 = *((_DWORD *)a2 + 12);
          if (v72 >= v53) {
            int v72 = v53;
          }
          BOOL v44 = __OFSUB__(v57, v72);
          int v73 = v57 - v72;
          if ((v73 < 0) ^ v44 | (v73 == 0)) {
            int v73 = 0;
          }
          else {
            *((void *)a2 + 1) = v71 - v73;
          }
          *((_DWORD *)a2 + 11) = v73;
          *((unsigned char *)a2 + 36) = 0;
        }
        else
        {
          if (v15 != 30 || v11 != 242) {
            goto LABEL_9;
          }
          if (*((_DWORD *)this + 21) != 30)
          {
            CoreML::Specification::PoolingLayerParams::clear_PoolingPaddingType((uint64_t)this);
            *((_DWORD *)this + 21) = 30;
            operator new();
          }
          int v20 = (CoreML::Specification::ValidPadding *)*((void *)this + 9);
          int v35 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v35 < 0)
          {
            int v36 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v36 < 0) {
              return 0;
            }
          }
          else
          {
            int v36 = *v35;
            *(void *)a2 = v35 + 1;
          }
          int v47 = google::protobuf::io::CodedInputStream::PushLimit(a2, v36);
          int v49 = *((_DWORD *)a2 + 13);
          BOOL v44 = __OFSUB__(v49--, 1);
          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v49;
          if (v49 < 0 != v44) {
            return 0;
          }
          int v45 = v47;
          uint64_t result = CoreML::Specification::ValidPadding::MergePartialFromCodedStream(v20, a2, v48);
          if (!result) {
            return result;
          }
LABEL_93:
          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v45)) {
            return 0;
          }
        }
      }
      else if (v15 == 1)
      {
        if (v11 != 8) {
          goto LABEL_9;
        }
        int v23 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1))
        {
          int v24 = 0;
        }
        else
        {
          int v24 = *v23;
          if ((*v23 & 0x80000000) == 0)
          {
            *(void *)a2 = v23 + 1;
            goto LABEL_127;
          }
        }
        uint64_t Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v24);
        int v24 = Varint32Fallback;
        if (Varint32Fallback < 0) {
          return 0;
        }
LABEL_127:
        *((_DWORD *)this + 15) = v24;
      }
      else
      {
        if (v15 != 10) {
          goto LABEL_9;
        }
        if (v11 == 80)
        {
          unsigned int v30 = 82;
          int v31 = a2;
          uint64_t v32 = (uint64_t)v6;
LABEL_64:
          if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned long long,(google::protobuf::internal::WireFormatLite::FieldType)4>(v30, v31, v32) & 1) == 0)return 0; {
        }
          }
        else
        {
          if (v11 == 82)
          {
            int v16 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v16 < 0)
            {
              int v17 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (v17 < 0) {
                return 0;
              }
            }
            else
            {
              int v17 = *v16;
              *(void *)a2 = v16 + 1;
            }
            int v53 = google::protobuf::io::CodedInputStream::PushLimit(a2, v17);
            while (1)
            {
              int v54 = *((_DWORD *)a2 + 10);
              uint64_t v55 = *((int *)a2 + 11);
              unint64_t v56 = *((void *)a2 + 1);
              int v57 = *((_DWORD *)a2 + 6);
              if (v54 == 0x7FFFFFFF) {
                break;
              }
              unsigned int v58 = *(char **)a2;
              if ((int)(v54 - v57 + v55 + v56 - *(void *)a2) < 1) {
                break;
              }
              if ((unint64_t)v58 >= v56 || *v58 < 0)
              {
                unint64_t v60 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
                if ((v61 & 1) == 0) {
                  return 0;
                }
                unint64_t v59 = v60;
              }
              else
              {
                unint64_t v59 = *v58;
                *(void *)a2 = v58 + 1;
              }
              signed int v62 = *((_DWORD *)this + 4);
              if (v62 == *((_DWORD *)this + 5))
              {
                google::protobuf::RepeatedField<double>::Reserve(v6, v62 + 1);
                signed int v62 = *v6;
              }
              uint64_t v63 = *((void *)this + 3);
              *((_DWORD *)this + 4) = v62 + 1;
              *(void *)(v63 + 8 * v62 + 8) = v59;
            }
            goto LABEL_119;
          }
LABEL_9:
          if (v11) {
            BOOL v13 = (v11 & 7) == 4;
          }
          else {
            BOOL v13 = 1;
          }
          if (v13) {
            return 1;
          }
          if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v11, a3) & 1) == 0)return 0; {
        }
          }
      }
    }
    if (v11 >> 3 <= 0x31) {
      break;
    }
    if (v15 == 50)
    {
      if (v11 != 144) {
        goto LABEL_9;
      }
      int v28 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v28 < 0)
      {
        unint64_t v29 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
        if ((v40 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t v29 = *v28;
        *(void *)a2 = v28 + 1;
      }
      *((unsigned char *)this + 64) = v29 != 0;
    }
    else
    {
      if (v15 != 60 || v11 != 224) {
        goto LABEL_9;
      }
      unint64_t v21 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v21 < 0)
      {
        unint64_t v22 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
        if ((v39 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t v22 = *v21;
        *(void *)a2 = v21 + 1;
      }
      *((unsigned char *)this + 65) = v22 != 0;
    }
  }
  if (v15 != 31)
  {
    if (v15 != 32 || v11 != 2) {
      goto LABEL_9;
    }
    if (*((_DWORD *)this + 21) != 32)
    {
      CoreML::Specification::PoolingLayerParams::clear_PoolingPaddingType((uint64_t)this);
      *((_DWORD *)this + 21) = 32;
      operator new();
    }
    unint64_t v19 = (CoreML::Specification::PoolingLayerParams_ValidCompletePadding *)*((void *)this + 9);
    int v33 = *(char **)a2;
    if (*(void *)a2 >= *((void *)a2 + 1) || *v33 < 0)
    {
      int v34 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
      if (v34 < 0) {
        return 0;
      }
    }
    else
    {
      int v34 = *v33;
      *(void *)a2 = v33 + 1;
    }
    int v41 = google::protobuf::io::CodedInputStream::PushLimit(a2, v34);
    int v43 = *((_DWORD *)a2 + 13);
    BOOL v44 = __OFSUB__(v43--, 1);
    *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v43;
    if (v43 < 0 != v44) {
      return 0;
    }
    int v45 = v41;
    uint64_t result = CoreML::Specification::PoolingLayerParams_ValidCompletePadding::MergePartialFromCodedStream(v19, a2, v42);
    if (!result) {
      return result;
    }
    goto LABEL_93;
  }
  if (v11 != 250) {
    goto LABEL_9;
  }
  if (*((_DWORD *)this + 21) != 31)
  {
    CoreML::Specification::PoolingLayerParams::clear_PoolingPaddingType((uint64_t)this);
    *((_DWORD *)this + 21) = 31;
    operator new();
  }
  int v25 = (CoreML::Specification::SamePadding *)*((void *)this + 9);
  unsigned int v37 = *(char **)a2;
  if (*(void *)a2 >= *((void *)a2 + 1) || *v37 < 0)
  {
    int v38 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
    if (v38 < 0) {
      return 0;
    }
  }
  else
  {
    int v38 = *v37;
    *(void *)a2 = v37 + 1;
  }
  int v50 = google::protobuf::io::CodedInputStream::PushLimit(a2, v38);
  int v52 = *((_DWORD *)a2 + 13);
  BOOL v44 = __OFSUB__(v52--, 1);
  *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v52;
  if (v52 < 0 == v44)
  {
    int v45 = v50;
    uint64_t result = CoreML::Specification::SamePadding::MergePartialFromCodedStream(v25, (char **)a2, v51);
    if (!result) {
      return result;
    }
    goto LABEL_93;
  }
  return 0;
}

void sub_19EB8AA3C(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::ActivationParams *CoreML::Specification::ActivationParams::ActivationParams(CoreML::Specification::ActivationParams *this)
{
  *(void *)this = &unk_1EF0D1580;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::ActivationParams *)&CoreML::Specification::_ActivationParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  return this;
}

void sub_19EB8AAF0(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ActivationParams::MergePartialFromCodedStream(CoreML::Specification::ActivationParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = *(unsigned __int8 **)a2;
      unint64_t v6 = *((void *)a2 + 1);
      if (*(void *)a2 >= v6)
      {
        LODWORD(v8) = 0;
      }
      else
      {
        uint64_t v7 = v5 + 1;
        uint64_t v8 = *v5;
        if ((char)*v5 >= 1)
        {
          *(void *)a2 = v7;
          unint64_t v9 = v8 | 0x100000000;
          if ((v9 & 0x100000000) == 0) {
            goto LABEL_8;
          }
          goto LABEL_16;
        }
        if ((unint64_t)v7 < v6)
        {
          int v10 = *v7;
          if ((v8 & ~v10) >= 0x80)
          {
            *(void *)a2 = v5 + 2;
            unint64_t v9 = (v8 + (v10 << 7) - 128) | 0x100000000;
            goto LABEL_16;
          }
        }
      }
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v8);
      unint64_t v9 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
      if ((v9 & 0x100000000) == 0) {
        goto LABEL_8;
      }
LABEL_16:
      unsigned int v13 = v9 >> 3;
      if (v9 >> 3 <= 0x1E) {
        break;
      }
      if (v9 >> 3 <= 0x31)
      {
        if (v13 != 31)
        {
          if (v13 == 40)
          {
            if (v9 == 66)
            {
              if (*((_DWORD *)this + 7) != 40)
              {
                CoreML::Specification::ActivationParams::clear_NonlinearityType((uint64_t)this);
                *((_DWORD *)this + 7) = 40;
                operator new();
              }
              uint64_t v26 = *(char **)a2;
              if (*(void *)a2 >= *((void *)a2 + 1) || *v26 < 0)
              {
                int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                if (VarintSizeAsIntFallback < 0) {
                  return 0;
                }
              }
              else
              {
                int VarintSizeAsIntFallback = *v26;
                *(void *)a2 = v26 + 1;
              }
              unint64_t v60 = (CoreML::Specification::ActivationSigmoid *)google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
              int v62 = *((_DWORD *)a2 + 13);
              BOOL v51 = __OFSUB__(v62--, 1);
              *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v62;
              if (v62 < 0 != v51) {
                return 0;
              }
              int v52 = (int)v60;
              uint64_t result = CoreML::Specification::ActivationSigmoid::MergePartialFromCodedStream(v60, (char **)a2, v61);
              if (!result) {
                return result;
              }
              goto LABEL_138;
            }
            goto LABEL_8;
          }
          if (v13 != 41 || v9 != 74) {
            goto LABEL_8;
          }
          if (*((_DWORD *)this + 7) != 41)
          {
            CoreML::Specification::ActivationParams::clear_NonlinearityType((uint64_t)this);
            *((_DWORD *)this + 7) = 41;
            operator new();
          }
          int v17 = (CoreML::Specification::ActivationSigmoidHard *)*((void *)this + 2);
          int v34 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v34 < 0)
          {
            int v35 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v35 < 0) {
              return 0;
            }
          }
          else
          {
            int v35 = *v34;
            *(void *)a2 = v34 + 1;
          }
          int v72 = google::protobuf::io::CodedInputStream::PushLimit(a2, v35);
          int v74 = *((_DWORD *)a2 + 13);
          BOOL v51 = __OFSUB__(v74--, 1);
          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v74;
          if (v74 < 0 != v51) {
            return 0;
          }
          int v71 = v72;
          uint64_t result = CoreML::Specification::ActivationSigmoidHard::MergePartialFromCodedStream(v17, (char **)a2, v73);
          if (!result) {
            return result;
          }
          goto LABEL_170;
        }
        if (v9 == 250)
        {
          if (*((_DWORD *)this + 7) != 31)
          {
            CoreML::Specification::ActivationParams::clear_NonlinearityType((uint64_t)this);
            *((_DWORD *)this + 7) = 31;
            operator new();
          }
          int v25 = (CoreML::Specification::ActivationScaledTanh *)*((void *)this + 2);
          unsigned int v42 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v42 < 0)
          {
            int v43 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v43 < 0) {
              return 0;
            }
          }
          else
          {
            int v43 = *v42;
            *(void *)a2 = v42 + 1;
          }
          int v84 = google::protobuf::io::CodedInputStream::PushLimit(a2, v43);
          int v86 = *((_DWORD *)a2 + 13);
          BOOL v51 = __OFSUB__(v86--, 1);
          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v86;
          if (v86 < 0 != v51) {
            return 0;
          }
          int v71 = v84;
          uint64_t result = CoreML::Specification::ActivationScaledTanh::MergePartialFromCodedStream(v25, (char **)a2, v85);
          if (!result) {
            return result;
          }
          goto LABEL_170;
        }
        goto LABEL_8;
      }
      if (v9 >> 3 > 0x45)
      {
        if (v13 == 70)
        {
          if (v9 == 50)
          {
            if (*((_DWORD *)this + 7) != 70)
            {
              CoreML::Specification::ActivationParams::clear_NonlinearityType((uint64_t)this);
              *((_DWORD *)this + 7) = 70;
              operator new();
            }
            unsigned int v30 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v30 < 0)
            {
              int v31 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (v31 < 0) {
                return 0;
              }
            }
            else
            {
              int v31 = *v30;
              *(void *)a2 = v30 + 1;
            }
            uint64_t v63 = (CoreML::Specification::ActivationSoftplus *)google::protobuf::io::CodedInputStream::PushLimit(a2, v31);
            int v65 = *((_DWORD *)a2 + 13);
            BOOL v51 = __OFSUB__(v65--, 1);
            *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v65;
            if (v65 < 0 != v51) {
              return 0;
            }
            int v52 = (int)v63;
            uint64_t result = CoreML::Specification::ActivationSoftplus::MergePartialFromCodedStream(v63, (char **)a2, v64);
            if (!result) {
              return result;
            }
            goto LABEL_138;
          }
          goto LABEL_8;
        }
        if (v13 != 71 || v9 != 58) {
          goto LABEL_8;
        }
        if (*((_DWORD *)this + 7) != 71)
        {
          CoreML::Specification::ActivationParams::clear_NonlinearityType((uint64_t)this);
          *((_DWORD *)this + 7) = 71;
          operator new();
        }
        int v20 = (CoreML::Specification::ActivationParametricSoftplus *)*((void *)this + 2);
        int v36 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v36 < 0)
        {
          int v37 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v37 < 0) {
            return 0;
          }
        }
        else
        {
          int v37 = *v36;
          *(void *)a2 = v36 + 1;
        }
        int v75 = google::protobuf::io::CodedInputStream::PushLimit(a2, v37);
        int v77 = *((_DWORD *)a2 + 13);
        BOOL v51 = __OFSUB__(v77--, 1);
        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v77;
        if (v77 < 0 != v51) {
          return 0;
        }
        int v71 = v75;
        uint64_t result = CoreML::Specification::ActivationParametricSoftplus::MergePartialFromCodedStream(v20, a2, v76);
        if (!result) {
          return result;
        }
        goto LABEL_170;
      }
      if (v13 == 50)
      {
        if (v9 == 146)
        {
          if (*((_DWORD *)this + 7) != 50)
          {
            CoreML::Specification::ActivationParams::clear_NonlinearityType((uint64_t)this);
            *((_DWORD *)this + 7) = 50;
            operator new();
          }
          unint64_t v21 = (CoreML::Specification::ActivationELU *)*((void *)this + 2);
          int v38 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v38 < 0)
          {
            int v39 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v39 < 0) {
              return 0;
            }
          }
          else
          {
            int v39 = *v38;
            *(void *)a2 = v38 + 1;
          }
          int v78 = google::protobuf::io::CodedInputStream::PushLimit(a2, v39);
          int v80 = *((_DWORD *)a2 + 13);
          BOOL v51 = __OFSUB__(v80--, 1);
          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v80;
          if (v80 < 0 != v51) {
            return 0;
          }
          int v71 = v78;
          uint64_t result = CoreML::Specification::ActivationELU::MergePartialFromCodedStream(v21, (char **)a2, v79);
          if (!result) {
            return result;
          }
          goto LABEL_170;
        }
        goto LABEL_8;
      }
      if (v13 != 60 || v9 != 226) {
        goto LABEL_8;
      }
      if (*((_DWORD *)this + 7) != 60)
      {
        CoreML::Specification::ActivationParams::clear_NonlinearityType((uint64_t)this);
        *((_DWORD *)this + 7) = 60;
        operator new();
      }
      int v14 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v14 < 0)
      {
        int v15 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v15 < 0) {
          return 0;
        }
      }
      else
      {
        int v15 = *v14;
        *(void *)a2 = v14 + 1;
      }
      unsigned int v48 = (CoreML::Specification::ActivationSoftsign *)google::protobuf::io::CodedInputStream::PushLimit(a2, v15);
      int v50 = *((_DWORD *)a2 + 13);
      BOOL v51 = __OFSUB__(v50--, 1);
      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v50;
      if (v50 < 0 != v51) {
        return 0;
      }
      int v52 = (int)v48;
      uint64_t result = CoreML::Specification::ActivationSoftsign::MergePartialFromCodedStream(v48, (char **)a2, v49);
      if (!result) {
        return result;
      }
LABEL_138:
      unint64_t v66 = a2;
      int v67 = v52;
LABEL_171:
      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(v66, v67)) {
        return 0;
      }
    }
    if (v9 >> 3 > 0x13)
    {
      if (v13 == 20)
      {
        if (v9 == 162)
        {
          if (*((_DWORD *)this + 7) != 20)
          {
            CoreML::Specification::ActivationParams::clear_NonlinearityType((uint64_t)this);
            *((_DWORD *)this + 7) = 20;
            operator new();
          }
          int v28 = (CoreML::Specification::ActivationThresholdedReLU *)*((void *)this + 2);
          BOOL v44 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v44 < 0)
          {
            int v45 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v45 < 0) {
              return 0;
            }
          }
          else
          {
            int v45 = *v44;
            *(void *)a2 = v44 + 1;
          }
          int v87 = google::protobuf::io::CodedInputStream::PushLimit(a2, v45);
          int v89 = *((_DWORD *)a2 + 13);
          BOOL v51 = __OFSUB__(v89--, 1);
          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v89;
          if (v89 < 0 != v51) {
            return 0;
          }
          int v71 = v87;
          uint64_t result = CoreML::Specification::ActivationThresholdedReLU::MergePartialFromCodedStream(v28, (char **)a2, v88);
          if (!result) {
            return result;
          }
          goto LABEL_170;
        }
      }
      else if (v13 == 25)
      {
        if (v9 == 202)
        {
          if (*((_DWORD *)this + 7) != 25)
          {
            CoreML::Specification::ActivationParams::clear_NonlinearityType((uint64_t)this);
            *((_DWORD *)this + 7) = 25;
            operator new();
          }
          unint64_t v29 = (CoreML::Specification::ActivationPReLU *)*((void *)this + 2);
          int v46 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v46 < 0)
          {
            int v47 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v47 < 0) {
              return 0;
            }
          }
          else
          {
            int v47 = *v46;
            *(void *)a2 = v46 + 1;
          }
          int v90 = google::protobuf::io::CodedInputStream::PushLimit(a2, v47);
          int v92 = *((_DWORD *)a2 + 13);
          BOOL v51 = __OFSUB__(v92--, 1);
          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v92;
          if (v92 < 0 != v51) {
            return 0;
          }
          int v71 = v90;
          uint64_t result = CoreML::Specification::ActivationPReLU::MergePartialFromCodedStream(v29, a2, v91);
          if (!result) {
            return result;
          }
          goto LABEL_170;
        }
      }
      else if (v13 == 30 && v9 == 242)
      {
        if (*((_DWORD *)this + 7) != 30)
        {
          CoreML::Specification::ActivationParams::clear_NonlinearityType((uint64_t)this);
          *((_DWORD *)this + 7) = 30;
          operator new();
        }
        uint64_t v18 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v18 < 0)
        {
          int v19 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v19 < 0) {
            return 0;
          }
        }
        else
        {
          int v19 = *v18;
          *(void *)a2 = v18 + 1;
        }
        int v54 = (CoreML::Specification::ActivationTanh *)google::protobuf::io::CodedInputStream::PushLimit(a2, v19);
        int v56 = *((_DWORD *)a2 + 13);
        BOOL v51 = __OFSUB__(v56--, 1);
        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v56;
        if (v56 < 0 != v51) {
          return 0;
        }
        int v52 = (int)v54;
        uint64_t result = CoreML::Specification::ActivationTanh::MergePartialFromCodedStream(v54, (char **)a2, v55);
        if (!result) {
          return result;
        }
        goto LABEL_138;
      }
      goto LABEL_8;
    }
    if (v13 != 5)
    {
      if (v13 == 10)
      {
        if (v9 == 82)
        {
          if (*((_DWORD *)this + 7) != 10)
          {
            CoreML::Specification::ActivationParams::clear_NonlinearityType((uint64_t)this);
            *((_DWORD *)this + 7) = 10;
            operator new();
          }
          int v23 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v23 < 0)
          {
            int v24 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v24 < 0) {
              return 0;
            }
          }
          else
          {
            int v24 = *v23;
            *(void *)a2 = v23 + 1;
          }
          int v57 = (CoreML::Specification::ActivationReLU *)google::protobuf::io::CodedInputStream::PushLimit(a2, v24);
          int v59 = *((_DWORD *)a2 + 13);
          BOOL v51 = __OFSUB__(v59--, 1);
          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v59;
          if (v59 < 0 != v51) {
            return 0;
          }
          int v52 = (int)v57;
          uint64_t result = CoreML::Specification::ActivationReLU::MergePartialFromCodedStream(v57, (char **)a2, v58);
          if (!result) {
            return result;
          }
          goto LABEL_138;
        }
        goto LABEL_8;
      }
      if (v13 != 15 || v9 != 122) {
        goto LABEL_8;
      }
      if (*((_DWORD *)this + 7) != 15)
      {
        CoreML::Specification::ActivationParams::clear_NonlinearityType((uint64_t)this);
        *((_DWORD *)this + 7) = 15;
        operator new();
      }
      int v16 = (CoreML::Specification::ActivationLeakyReLU *)*((void *)this + 2);
      uint64_t v32 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v32 < 0)
      {
        int v33 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v33 < 0) {
          return 0;
        }
      }
      else
      {
        int v33 = *v32;
        *(void *)a2 = v32 + 1;
      }
      int v68 = google::protobuf::io::CodedInputStream::PushLimit(a2, v33);
      int v70 = *((_DWORD *)a2 + 13);
      BOOL v51 = __OFSUB__(v70--, 1);
      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v70;
      if (v70 < 0 != v51) {
        return 0;
      }
      int v71 = v68;
      uint64_t result = CoreML::Specification::ActivationLeakyReLU::MergePartialFromCodedStream(v16, (char **)a2, v69);
      if (!result) {
        return result;
      }
LABEL_170:
      unint64_t v66 = a2;
      int v67 = v71;
      goto LABEL_171;
    }
    if (v9 == 42)
    {
      if (*((_DWORD *)this + 7) != 5)
      {
        CoreML::Specification::ActivationParams::clear_NonlinearityType((uint64_t)this);
        *((_DWORD *)this + 7) = 5;
        operator new();
      }
      unint64_t v22 = (CoreML::Specification::ActivationLinear *)*((void *)this + 2);
      char v40 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v40 < 0)
      {
        int v41 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v41 < 0) {
          return 0;
        }
      }
      else
      {
        int v41 = *v40;
        *(void *)a2 = v40 + 1;
      }
      int v81 = google::protobuf::io::CodedInputStream::PushLimit(a2, v41);
      int v83 = *((_DWORD *)a2 + 13);
      BOOL v51 = __OFSUB__(v83--, 1);
      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v83;
      if (v83 < 0 != v51) {
        return 0;
      }
      int v71 = v81;
      uint64_t result = CoreML::Specification::ActivationLinear::MergePartialFromCodedStream(v22, (char **)a2, v82);
      if (!result) {
        return result;
      }
      goto LABEL_170;
    }
LABEL_8:
    if (!v9 || (v9 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v9, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_19EB8B5B8(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x1081C40E1DA5700);
  _Unwind_Resume(a1);
}

CoreML::Specification::InnerProductLayerParams *CoreML::Specification::InnerProductLayerParams::InnerProductLayerParams(CoreML::Specification::InnerProductLayerParams *this)
{
  *(void *)this = &unk_1EF0D5D58;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::InnerProductLayerParams *)&CoreML::Specification::_InnerProductLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_WORD *)this + 24) = 0;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *((_DWORD *)this + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  return this;
}

void sub_19EB8B6C0(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::InnerProductLayerParams::MergePartialFromCodedStream(CoreML::Specification::InnerProductLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = *(unsigned __int8 **)a2;
        unint64_t v6 = *((void *)a2 + 1);
        if (*(void *)a2 >= v6)
        {
          LODWORD(v8) = 0;
        }
        else
        {
          uint64_t v7 = v5 + 1;
          uint64_t v8 = *v5;
          if ((char)*v5 >= 1)
          {
            *(void *)a2 = v7;
            unint64_t v9 = v8 | 0x100000000;
            if ((v9 & 0x100000000) == 0) {
              goto LABEL_8;
            }
            goto LABEL_16;
          }
          if ((unint64_t)v7 < v6)
          {
            int v10 = *v7;
            if ((v8 & ~v10) >= 0x80)
            {
              *(void *)a2 = v5 + 2;
              unint64_t v9 = (v8 + (v10 << 7) - 128) | 0x100000000;
              goto LABEL_16;
            }
          }
        }
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v8);
        unint64_t v9 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
        if ((v9 & 0x100000000) == 0) {
          goto LABEL_8;
        }
LABEL_16:
        unsigned int v13 = v9 >> 3;
        if (v9 >> 3 > 0x13) {
          break;
        }
        if (v13 == 1)
        {
          if (v9 != 8) {
            goto LABEL_8;
          }
          uint64_t v18 = *(char **)a2;
          if (*(void *)a2 < *((void *)a2 + 1) && (*v18 & 0x80000000) == 0)
          {
            *((void *)this + 4) = *v18;
            goto LABEL_39;
          }
          *((void *)this + 4) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v30 & 1) == 0) {
            return 0;
          }
        }
        else if (v13 == 2)
        {
          if (v9 != 16) {
            goto LABEL_8;
          }
          uint64_t v18 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v18 < 0)
          {
            *((void *)this + 5) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v31 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            *((void *)this + 5) = *v18;
LABEL_39:
            *(void *)a2 = v18 + 1;
          }
        }
        else
        {
          if (v13 != 10 || v9 != 80) {
            goto LABEL_8;
          }
          int v14 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v14 < 0)
          {
            unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v28 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            unint64_t Varint64Fallback = *v14;
            *(void *)a2 = v14 + 1;
          }
          *((unsigned char *)this + 48) = Varint64Fallback != 0;
        }
      }
      if (v13 == 20) {
        break;
      }
      if (v13 == 21)
      {
        if (v9 != 170) {
          goto LABEL_8;
        }
        int v19 = (CoreML::Specification::WeightParams *)*((void *)this + 3);
        if (!v19) {
          operator new();
        }
LABEL_46:
        int v20 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v20 < 0)
        {
          int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0) {
            return 0;
          }
        }
        else
        {
          int VarintSizeAsIntFallback = *v20;
          *(void *)a2 = v20 + 1;
        }
        int v22 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        int v24 = *((_DWORD *)a2 + 13);
        BOOL v25 = __OFSUB__(v24--, 1);
        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v24;
        if (v24 < 0 != v25) {
          return 0;
        }
        int v26 = v22;
        BOOL result = CoreML::Specification::WeightParams::MergePartialFromCodedStream(v19, a2, v23);
        if (!result) {
          return result;
        }
        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v26)) {
          return 0;
        }
      }
      else
      {
        if (v13 != 22 || v9 != 176) {
          goto LABEL_8;
        }
        int v16 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v16 < 0)
        {
          unint64_t v17 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v29 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t v17 = *v16;
          *(void *)a2 = v16 + 1;
        }
        *((unsigned char *)this + 49) = v17 != 0;
      }
    }
    if (v9 == 162)
    {
      int v19 = (CoreML::Specification::WeightParams *)*((void *)this + 2);
      if (!v19) {
        operator new();
      }
      goto LABEL_46;
    }
LABEL_8:
    if (!v9 || (v9 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v9, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_19EB8B9FC(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::EmbeddingLayerParams *CoreML::Specification::EmbeddingLayerParams::EmbeddingLayerParams(CoreML::Specification::EmbeddingLayerParams *this)
{
  *(void *)this = &unk_1EF0D4040;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::EmbeddingLayerParams *)&CoreML::Specification::_EmbeddingLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((unsigned char *)this + 48) = 0;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *((_DWORD *)this + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  return this;
}

void sub_19EB8BA90(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::EmbeddingLayerParams::MergePartialFromCodedStream(CoreML::Specification::EmbeddingLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v5 = *(unsigned __int8 **)a2;
          unint64_t v6 = *((void *)a2 + 1);
          if (*(void *)a2 >= v6)
          {
            LODWORD(v8) = 0;
LABEL_51:
            unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v8);
            unint64_t v9 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
            if ((v9 & 0x100000000) == 0) {
              goto LABEL_52;
            }
            goto LABEL_8;
          }
          uint64_t v7 = v5 + 1;
          uint64_t v8 = *v5;
          if ((char)*v5 < 1)
          {
            if ((unint64_t)v7 < v6)
            {
              int v10 = *v7;
              if ((v8 & ~v10) >= 0x80)
              {
                *(void *)a2 = v5 + 2;
                unint64_t v9 = (v8 + (v10 << 7) - 128) | 0x100000000;
                goto LABEL_8;
              }
            }
            goto LABEL_51;
          }
          *(void *)a2 = v7;
          unint64_t v9 = v8 | 0x100000000;
          if ((v9 & 0x100000000) == 0) {
            goto LABEL_52;
          }
LABEL_8:
          unsigned int v11 = v9 >> 3;
          if (v9 >> 3 <= 9) {
            break;
          }
          if (v11 == 10)
          {
            if (v9 != 80) {
              goto LABEL_52;
            }
            int v15 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v15 < 0)
            {
              unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v26 & 1) == 0) {
                return 0;
              }
            }
            else
            {
              unint64_t Varint64Fallback = *v15;
              *(void *)a2 = v15 + 1;
            }
            *((unsigned char *)this + 48) = Varint64Fallback != 0;
          }
          else
          {
            if (v11 == 20)
            {
              if (v9 != 162) {
                goto LABEL_52;
              }
              int v12 = (CoreML::Specification::WeightParams *)*((void *)this + 2);
              if (!v12) {
                operator new();
              }
            }
            else
            {
              if (v11 != 21 || v9 != 170) {
                goto LABEL_52;
              }
              int v12 = (CoreML::Specification::WeightParams *)*((void *)this + 3);
              if (!v12) {
                operator new();
              }
            }
            unint64_t v17 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v17 < 0)
            {
              int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (VarintSizeAsIntFallback < 0) {
                return 0;
              }
            }
            else
            {
              int VarintSizeAsIntFallback = *v17;
              *(void *)a2 = v17 + 1;
            }
            int v19 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
            int v21 = *((_DWORD *)a2 + 13);
            BOOL v22 = __OFSUB__(v21--, 1);
            *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v21;
            if (v21 < 0 != v22) {
              return 0;
            }
            int v23 = v19;
            BOOL result = CoreML::Specification::WeightParams::MergePartialFromCodedStream(v12, a2, v20);
            if (!result) {
              return result;
            }
            if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v23)) {
              return 0;
            }
          }
        }
        if (v11 != 1) {
          break;
        }
        if (v9 != 8) {
          goto LABEL_52;
        }
        int v14 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v14 < 0)
        {
          *((void *)this + 4) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v27 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          *((void *)this + 4) = *v14;
LABEL_38:
          *(void *)a2 = v14 + 1;
        }
      }
      if (v11 != 2 || v9 != 16) {
        break;
      }
      int v14 = *(char **)a2;
      if (*(void *)a2 < *((void *)a2 + 1) && (*v14 & 0x80000000) == 0)
      {
        *((void *)this + 5) = *v14;
        goto LABEL_38;
      }
      *((void *)this + 5) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
      if ((v25 & 1) == 0) {
        return 0;
      }
    }
LABEL_52:
    if (!v9 || (v9 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v9, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_19EB8BD74(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::BatchnormLayerParams *CoreML::Specification::BatchnormLayerParams::BatchnormLayerParams(CoreML::Specification::BatchnormLayerParams *this)
{
  *(void *)this = &unk_1EF0D3FA8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::BatchnormLayerParams *)&CoreML::Specification::_BatchnormLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 16) = 0;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0u;
  *((_OWORD *)this + 1) = 0u;
  return this;
}

void sub_19EB8BE08(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::BatchnormLayerParams::MergePartialFromCodedStream(CoreML::Specification::BatchnormLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = *(unsigned __int8 **)a2;
      unint64_t v6 = *((void *)a2 + 1);
      if (*(void *)a2 >= v6)
      {
        LODWORD(v8) = 0;
        goto LABEL_15;
      }
      uint64_t v7 = v5 + 1;
      uint64_t v8 = *v5;
      if ((char)*v5 >= 1) {
        break;
      }
      if ((unint64_t)v7 < v6)
      {
        int v10 = *v7;
        if ((v8 & ~v10) >= 0x80)
        {
          *(void *)a2 = v5 + 2;
          unint64_t v9 = (v8 + (v10 << 7) - 128) | 0x100000000;
          goto LABEL_16;
        }
      }
LABEL_15:
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v8);
      unint64_t v9 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
      if ((v9 & 0x100000000) == 0) {
        goto LABEL_8;
      }
LABEL_16:
      switch(v9 >> 3)
      {
        case 1u:
          if (v9 != 8) {
            goto LABEL_8;
          }
          unsigned int v13 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v13 < 0)
          {
            *((void *)this + 6) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v29 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            *((void *)this + 6) = *v13;
            *(void *)a2 = v13 + 1;
          }
          continue;
        case 5u:
          if (v9 != 40) {
            goto LABEL_8;
          }
          int v14 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v14 < 0)
          {
            unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v30 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            unint64_t Varint64Fallback = *v14;
            *(void *)a2 = v14 + 1;
          }
          *((unsigned char *)this + 56) = Varint64Fallback != 0;
          continue;
        case 6u:
          if (v9 != 48) {
            goto LABEL_8;
          }
          int v16 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v16 < 0)
          {
            unint64_t v17 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v31 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            unint64_t v17 = *v16;
            *(void *)a2 = v16 + 1;
          }
          *((unsigned char *)this + 57) = v17 != 0;
          break;
        case 0xAu:
          if (v9 != 85) {
            goto LABEL_8;
          }
          unsigned int v32 = 0;
          uint64_t v18 = *(unsigned int **)a2;
          if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) < 4)
          {
            BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v32);
            if (!result) {
              return result;
            }
            unsigned int v19 = v32;
          }
          else
          {
            unsigned int v19 = *v18;
            *(void *)a2 = v18 + 1;
          }
          *((_DWORD *)this + 15) = v19;
          continue;
        case 0xFu:
          if (v9 != 122) {
            goto LABEL_8;
          }
          unsigned int v20 = (CoreML::Specification::WeightParams *)*((void *)this + 2);
          if (!v20) {
            operator new();
          }
          goto LABEL_45;
        case 0x10u:
          if (v9 != 130) {
            goto LABEL_8;
          }
          unsigned int v20 = (CoreML::Specification::WeightParams *)*((void *)this + 3);
          if (!v20) {
            operator new();
          }
          goto LABEL_45;
        case 0x11u:
          if (v9 != 138) {
            goto LABEL_8;
          }
          unsigned int v20 = (CoreML::Specification::WeightParams *)*((void *)this + 4);
          if (!v20) {
            operator new();
          }
          goto LABEL_45;
        case 0x12u:
          if (v9 != 146) {
            goto LABEL_8;
          }
          unsigned int v20 = (CoreML::Specification::WeightParams *)*((void *)this + 5);
          if (!v20) {
            operator new();
          }
LABEL_45:
          int v21 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v21 < 0)
          {
            int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            int VarintSizeAsIntFallback = *v21;
            *(void *)a2 = v21 + 1;
          }
          int v23 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          int v25 = *((_DWORD *)a2 + 13);
          BOOL v26 = __OFSUB__(v25--, 1);
          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v25;
          if (v25 < 0 != v26) {
            return 0;
          }
          int v27 = v23;
          BOOL result = CoreML::Specification::WeightParams::MergePartialFromCodedStream(v20, a2, v24);
          if (!result) {
            return result;
          }
          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v27)) {
            return 0;
          }
          continue;
        default:
          goto LABEL_8;
      }
    }
    *(void *)a2 = v7;
    unint64_t v9 = v8 | 0x100000000;
    if ((v9 & 0x100000000) != 0) {
      goto LABEL_16;
    }
LABEL_8:
    if (!v9 || (v9 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v9, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_19EB8C1C8(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::MeanVarianceNormalizeLayerParams *CoreML::Specification::MeanVarianceNormalizeLayerParams::MeanVarianceNormalizeLayerParams(CoreML::Specification::MeanVarianceNormalizeLayerParams *this)
{
  *(void *)this = &unk_1EF0D88B0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::MeanVarianceNormalizeLayerParams *)&CoreML::Specification::_MeanVarianceNormalizeLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return this;
}

void sub_19EB8C2A4(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::MeanVarianceNormalizeLayerParams::MergePartialFromCodedStream(CoreML::Specification::MeanVarianceNormalizeLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v5 = *a2;
          if (*a2 >= a2[1])
          {
            LODWORD(v6) = 0;
LABEL_6:
            unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
            unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
            if ((v7 & 0x100000000) == 0) {
              goto LABEL_25;
            }
            goto LABEL_7;
          }
          uint64_t v6 = *v5;
          if (*v5 < 1) {
            goto LABEL_6;
          }
          *a2 = v5 + 1;
          unint64_t v7 = v6 | 0x100000000;
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_25;
          }
LABEL_7:
          unsigned int v9 = v7 >> 3;
          if (v7 >> 3 != 3) {
            break;
          }
          if (v7 != 29) {
            goto LABEL_25;
          }
          unsigned int v21 = 0;
          unsigned int v13 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v21);
            if (!result) {
              return result;
            }
            unsigned int v14 = v21;
          }
          else
          {
            unsigned int v14 = *v13;
            *a2 = (char *)(v13 + 1);
          }
          *((_DWORD *)this + 5) = v14;
        }
        if (v9 != 2) {
          break;
        }
        if (v7 != 16) {
          goto LABEL_25;
        }
        int v15 = *a2;
        if (*a2 >= a2[1] || *v15 < 0)
        {
          unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
          if ((v19 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t Varint64Fallback = *v15;
          *a2 = v15 + 1;
        }
        *((unsigned char *)this + 17) = Varint64Fallback != 0;
      }
      if (v9 != 1 || v7 != 8) {
        break;
      }
      unsigned int v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        unint64_t v12 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v18 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t v12 = *v11;
        *a2 = v11 + 1;
      }
      *((unsigned char *)this + 16) = v12 != 0;
    }
LABEL_25:
    if (v7) {
      BOOL v17 = (v7 & 7) == 4;
    }
    else {
      BOOL v17 = 1;
    }
    if (v17) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::L2NormalizeLayerParams *CoreML::Specification::L2NormalizeLayerParams::L2NormalizeLayerParams(CoreML::Specification::L2NormalizeLayerParams *this)
{
  *(void *)this = &unk_1EF0D55A0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::L2NormalizeLayerParams *)&CoreML::Specification::_L2NormalizeLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  return this;
}

void sub_19EB8C4C0(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::L2NormalizeLayerParams::MergePartialFromCodedStream(CoreML::Specification::L2NormalizeLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 13 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      unsigned int v14 = 0;
      unint64_t v12 = (unsigned int *)*a2;
      if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
      {
        BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v14);
        if (!result) {
          return result;
        }
        unsigned int v13 = v14;
      }
      else
      {
        unsigned int v13 = *v12;
        *a2 = (char *)(v12 + 1);
      }
      *((_DWORD *)this + 4) = v13;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    BOOL result = v10;
    if (v10) {
      return result;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::SoftmaxLayerParams *CoreML::Specification::SoftmaxLayerParams::SoftmaxLayerParams(CoreML::Specification::SoftmaxLayerParams *this)
{
  *(void *)this = &unk_1EF0D34F8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::SoftmaxLayerParams *)&CoreML::Specification::_SoftmaxLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_19EB8C630(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::SoftmaxLayerParams::MergePartialFromCodedStream(CoreML::Specification::SoftmaxLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::LRNLayerParams *CoreML::Specification::LRNLayerParams::LRNLayerParams(CoreML::Specification::LRNLayerParams *this)
{
  *(void *)this = &unk_1EF0D0448;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::LRNLayerParams *)&CoreML::Specification::_LRNLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  *((void *)this + 4) = 0;
  return this;
}

void sub_19EB8C724(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::LRNLayerParams::MergePartialFromCodedStream(CoreML::Specification::LRNLayerParams *this, char **a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 < a2[1]) {
        break;
      }
      LODWORD(v6) = 0;
LABEL_6:
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) == 0) {
        goto LABEL_24;
      }
LABEL_7:
      switch(v7 >> 3)
      {
        case 1u:
          if (v7 != 13) {
            goto LABEL_24;
          }
          unsigned int v21 = 0;
          unsigned int v9 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v21);
            if (!result) {
              return result;
            }
            unsigned int v10 = v21;
          }
          else
          {
            unsigned int v10 = *v9;
            *a2 = (char *)(v9 + 1);
          }
          *((_DWORD *)this + 4) = v10;
          continue;
        case 2u:
          if (v7 != 21) {
            goto LABEL_24;
          }
          unsigned int v20 = 0;
          unsigned int v11 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v20);
            if (!result) {
              return result;
            }
            unsigned int v12 = v20;
          }
          else
          {
            unsigned int v12 = *v11;
            *a2 = (char *)(v11 + 1);
          }
          *((_DWORD *)this + 5) = v12;
          continue;
        case 3u:
          if (v7 != 24) {
            goto LABEL_24;
          }
          unsigned int v13 = *a2;
          if (*a2 >= a2[1] || *v13 < 0)
          {
            *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
            if ((v17 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = *v13;
            *a2 = v13 + 1;
          }
          break;
        case 4u:
          if (v7 != 37) {
            goto LABEL_24;
          }
          unsigned int v19 = 0;
          unsigned int v14 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v19);
            if (!result) {
              return result;
            }
            unsigned int v15 = v19;
          }
          else
          {
            unsigned int v15 = *v14;
            *a2 = (char *)(v14 + 1);
          }
          *((_DWORD *)this + 8) = v15;
          continue;
        default:
          goto LABEL_24;
      }
    }
    uint64_t v6 = *v5;
    if (*v5 < 1) {
      goto LABEL_6;
    }
    *a2 = v5 + 1;
    unint64_t v7 = v6 | 0x100000000;
    if ((v7 & 0x100000000) != 0) {
      goto LABEL_7;
    }
LABEL_24:
    if (!v7 || (v7 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)return 0; {
  }
    }
}

CoreML::Specification::CropLayerParams *CoreML::Specification::CropLayerParams::CropLayerParams(CoreML::Specification::CropLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1EF0D0C98;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::CropLayerParams *)&CoreML::Specification::_CropLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 5) = 0;
  *((_DWORD *)this + 12) = 0;
  return this;
}

void sub_19EB8C9C0(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::CropLayerParams::MergePartialFromCodedStream(CoreML::Specification::CropLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v6 = *(char **)a2;
        if (*(void *)a2 < *((void *)a2 + 1)) {
          break;
        }
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) != 0) {
          goto LABEL_8;
        }
LABEL_13:
        if (v8) {
          BOOL v11 = (v8 & 7) == 4;
        }
        else {
          BOOL v11 = 1;
        }
        if (v11) {
          return 1;
        }
        if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)return 0; {
      }
        }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        goto LABEL_13;
      }
LABEL_8:
      if (v8 >> 3 != 5) {
        break;
      }
      if (v8 == 40)
      {
        if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned long long,(google::protobuf::internal::WireFormatLite::FieldType)4>(0x2Au, a2, (uint64_t)v5) & 1) == 0)return 0; {
      }
        }
      else
      {
        if (v8 != 42) {
          goto LABEL_13;
        }
        unsigned int v12 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v12 < 0)
        {
          int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0) {
            return 0;
          }
        }
        else
        {
          int VarintSizeAsIntFallback = *v12;
          *(void *)a2 = v12 + 1;
        }
        int v23 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        while (1)
        {
          int v24 = *((_DWORD *)a2 + 10);
          uint64_t v25 = *((int *)a2 + 11);
          unint64_t v26 = *((void *)a2 + 1);
          int v27 = *((_DWORD *)a2 + 6);
          if (v24 == 0x7FFFFFFF) {
            break;
          }
          char v28 = *(char **)a2;
          if ((int)(v24 - v27 + v25 + v26 - *(void *)a2) < 1) {
            break;
          }
          if ((unint64_t)v28 >= v26 || *v28 < 0)
          {
            unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v31 & 1) == 0) {
              return 0;
            }
            unint64_t v29 = Varint64Fallback;
          }
          else
          {
            unint64_t v29 = *v28;
            *(void *)a2 = v28 + 1;
          }
          signed int v32 = *((_DWORD *)this + 4);
          if (v32 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<double>::Reserve(v5, v32 + 1);
            signed int v32 = *v5;
          }
          uint64_t v33 = *((void *)this + 3);
          *((_DWORD *)this + 4) = v32 + 1;
          *(void *)(v33 + 8 * v32 + 8) = v29;
        }
        *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v23;
        uint64_t v34 = v26 + v25;
        *((void *)a2 + 1) = v26 + v25;
        int v35 = *((_DWORD *)a2 + 12);
        if (v35 >= v23) {
          int v35 = v23;
        }
        BOOL v20 = __OFSUB__(v27, v35);
        int v36 = v27 - v35;
        if ((v36 < 0) ^ v20 | (v36 == 0)) {
          int v36 = 0;
        }
        else {
          *((void *)a2 + 1) = v34 - v36;
        }
        *((_DWORD *)a2 + 11) = v36;
        *((unsigned char *)a2 + 36) = 0;
      }
    }
    if (v8 >> 3 != 1 || v8 != 10) {
      goto LABEL_13;
    }
    unsigned int v14 = (CoreML::Specification::BorderAmounts *)*((void *)this + 5);
    if (!v14) {
      operator new();
    }
    unsigned int v15 = *(char **)a2;
    if (*(void *)a2 >= *((void *)a2 + 1) || *v15 < 0)
    {
      int v16 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
      if (v16 < 0) {
        return 0;
      }
    }
    else
    {
      int v16 = *v15;
      *(void *)a2 = v15 + 1;
    }
    int v17 = google::protobuf::io::CodedInputStream::PushLimit(a2, v16);
    int v19 = *((_DWORD *)a2 + 13);
    BOOL v20 = __OFSUB__(v19--, 1);
    *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v19;
    if (v19 < 0 != v20) {
      break;
    }
    int v21 = v17;
    uint64_t result = CoreML::Specification::BorderAmounts::MergePartialFromCodedStream(v14, a2, v18);
    if (!result) {
      return result;
    }
  }
  while (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v21));
  return 0;
}

void sub_19EB8CCA0(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

CoreML::Specification::PaddingLayerParams *CoreML::Specification::PaddingLayerParams::PaddingLayerParams(CoreML::Specification::PaddingLayerParams *this)
{
  *(void *)this = &unk_1EF0D3038;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::PaddingLayerParams *)&CoreML::Specification::_PaddingLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + 4) = 0;
  return this;
}

void sub_19EB8CD28(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::PaddingLayerParams::MergePartialFromCodedStream(CoreML::Specification::PaddingLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (2)
  {
    while (1)
    {
      uint64_t v5 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1)) {
        break;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *(void *)a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) != 0) {
        goto LABEL_7;
      }
LABEL_29:
      if (v7) {
        BOOL v17 = (v7 & 7) == 4;
      }
      else {
        BOOL v17 = 1;
      }
      if (v17) {
        return 1;
      }
      if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0) {
        goto LABEL_56;
      }
    }
    LODWORD(v6) = 0;
LABEL_6:
    unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v6);
    unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
    if ((v7 & 0x100000000) == 0) {
      goto LABEL_29;
    }
LABEL_7:
    switch(v7 >> 3)
    {
      case 1u:
        if (v7 != 10) {
          goto LABEL_29;
        }
        if (*((_DWORD *)this + 9) != 1)
        {
          CoreML::Specification::PaddingLayerParams::clear_PaddingType((uint64_t)this);
          *((_DWORD *)this + 9) = 1;
          operator new();
        }
        unsigned int v9 = (CoreML::Specification::PaddingLayerParams_PaddingConstant *)*((void *)this + 3);
        unsigned int v18 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v18 < 0)
        {
          int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0) {
            goto LABEL_56;
          }
        }
        else
        {
          int VarintSizeAsIntFallback = *v18;
          *(void *)a2 = v18 + 1;
        }
        int v35 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        int v37 = *((_DWORD *)a2 + 13);
        BOOL v23 = __OFSUB__(v37--, 1);
        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v37;
        if (v37 < 0 != v23) {
          goto LABEL_56;
        }
        int v34 = v35;
        uint64_t result = CoreML::Specification::PaddingLayerParams_PaddingConstant::MergePartialFromCodedStream(v9, (char **)a2, v36);
        if (!result) {
          return result;
        }
LABEL_54:
        unint64_t v29 = a2;
        int v30 = v34;
LABEL_55:
        if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(v29, v30)) {
          continue;
        }
LABEL_56:
        uint64_t result = 0;
        break;
      case 2u:
        if (v7 != 18) {
          goto LABEL_29;
        }
        if (*((_DWORD *)this + 9) != 2)
        {
          CoreML::Specification::PaddingLayerParams::clear_PaddingType((uint64_t)this);
          *((_DWORD *)this + 9) = 2;
          operator new();
        }
        unsigned int v10 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v10 < 0)
        {
          int v11 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v11 < 0) {
            goto LABEL_56;
          }
        }
        else
        {
          int v11 = *v10;
          *(void *)a2 = v10 + 1;
        }
        BOOL v20 = (CoreML::Specification::PaddingLayerParams_PaddingReflection *)google::protobuf::io::CodedInputStream::PushLimit(a2, v11);
        int v22 = *((_DWORD *)a2 + 13);
        BOOL v23 = __OFSUB__(v22--, 1);
        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v22;
        if (v22 < 0 != v23) {
          goto LABEL_56;
        }
        int v24 = (int)v20;
        uint64_t result = CoreML::Specification::PaddingLayerParams_PaddingReflection::MergePartialFromCodedStream(v20, (char **)a2, v21);
        if (!result) {
          return result;
        }
        goto LABEL_46;
      case 3u:
        if (v7 != 26) {
          goto LABEL_29;
        }
        if (*((_DWORD *)this + 9) != 3)
        {
          CoreML::Specification::PaddingLayerParams::clear_PaddingType((uint64_t)this);
          *((_DWORD *)this + 9) = 3;
          operator new();
        }
        unsigned int v12 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v12 < 0)
        {
          int v13 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v13 < 0) {
            goto LABEL_56;
          }
        }
        else
        {
          int v13 = *v12;
          *(void *)a2 = v12 + 1;
        }
        unint64_t v26 = (CoreML::Specification::PaddingLayerParams_PaddingReplication *)google::protobuf::io::CodedInputStream::PushLimit(a2, v13);
        int v28 = *((_DWORD *)a2 + 13);
        BOOL v23 = __OFSUB__(v28--, 1);
        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v28;
        if (v28 < 0 != v23) {
          goto LABEL_56;
        }
        int v24 = (int)v26;
        uint64_t result = CoreML::Specification::PaddingLayerParams_PaddingReplication::MergePartialFromCodedStream(v26, (char **)a2, v27);
        if (!result) {
          return result;
        }
LABEL_46:
        unint64_t v29 = a2;
        int v30 = v24;
        goto LABEL_55;
      case 0xAu:
        if (v7 != 82) {
          goto LABEL_29;
        }
        unsigned int v14 = (CoreML::Specification::BorderAmounts *)*((void *)this + 2);
        if (!v14) {
          operator new();
        }
        unsigned int v15 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v15 < 0)
        {
          int v16 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v16 < 0) {
            goto LABEL_56;
          }
        }
        else
        {
          int v16 = *v15;
          *(void *)a2 = v15 + 1;
        }
        int v31 = google::protobuf::io::CodedInputStream::PushLimit(a2, v16);
        int v33 = *((_DWORD *)a2 + 13);
        BOOL v23 = __OFSUB__(v33--, 1);
        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v33;
        if (v33 < 0 != v23) {
          goto LABEL_56;
        }
        int v34 = v31;
        uint64_t result = CoreML::Specification::BorderAmounts::MergePartialFromCodedStream(v14, a2, v32);
        if (!result) {
          return result;
        }
        goto LABEL_54;
      default:
        goto LABEL_29;
    }
    return result;
  }
}

void sub_19EB8D0E8(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

CoreML::Specification::UpsampleLayerParams *CoreML::Specification::UpsampleLayerParams::UpsampleLayerParams(CoreML::Specification::UpsampleLayerParams *this)
{
  *(void *)this = &unk_1EF0D3E78;
  *((void *)this + 1) = 0;
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::UpsampleLayerParams *)&CoreML::Specification::_UpsampleLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *(void *)((char *)this + 6CoreML::Specification::NetworkUpdateParameters::New(this, 0) = 0;
  *((_DWORD *)this + 17) = 0;
  return this;
}

void sub_19EB8D1DC(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 48);
  if (v4 && !*v4) {
    operator delete(v4);
  }
  uint64_t v5 = *(void **)(v2 + 24);
  if (v5)
  {
    if (!*v5) {
      operator delete(v5);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::UpsampleLayerParams::MergePartialFromCodedStream(CoreML::Specification::UpsampleLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 40);
  uint64_t v6 = (unsigned int *)((char *)this + 16);
  while (1)
  {
LABEL_2:
    unint64_t v7 = *(char **)a2;
    if (*(void *)a2 >= *((void *)a2 + 1))
    {
      LODWORD(v8) = 0;
      break;
    }
    uint64_t v8 = *v7;
    if (*v7 < 1) {
      break;
    }
    *(void *)a2 = v7 + 1;
    unint64_t v9 = v8 | 0x100000000;
    if ((v9 & 0x100000000) != 0) {
      goto LABEL_8;
    }
LABEL_27:
    if (v9) {
      BOOL v19 = (v9 & 7) == 4;
    }
    else {
      BOOL v19 = 1;
    }
    if (v19) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v9, a3) & 1) == 0) {
      return 0;
    }
  }
  unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v8);
  unint64_t v9 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
  if ((v9 & 0x100000000) == 0) {
    goto LABEL_27;
  }
LABEL_8:
  switch(v9 >> 3)
  {
    case 1u:
      if (v9 == 8)
      {
        if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned long long,(google::protobuf::internal::WireFormatLite::FieldType)4>(0xAu, a2, (uint64_t)v6) & 1) == 0)return 0; {
      }
        }
      else
      {
        if (v9 != 10) {
          goto LABEL_27;
        }
        int v11 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v11 < 0)
        {
          int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0) {
            return 0;
          }
        }
        else
        {
          int VarintSizeAsIntFallback = *v11;
          *(void *)a2 = v11 + 1;
        }
        int v20 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        while (1)
        {
          int v21 = *((_DWORD *)a2 + 10);
          uint64_t v22 = *((int *)a2 + 11);
          unint64_t v23 = *((void *)a2 + 1);
          int v24 = *((_DWORD *)a2 + 6);
          if (v21 == 0x7FFFFFFF) {
            break;
          }
          uint64_t v25 = *(char **)a2;
          if ((int)(v21 - v24 + v22 + v23 - *(void *)a2) < 1) {
            break;
          }
          if ((unint64_t)v25 >= v23 || *v25 < 0)
          {
            unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v28 & 1) == 0) {
              return 0;
            }
            unint64_t v26 = Varint64Fallback;
          }
          else
          {
            unint64_t v26 = *v25;
            *(void *)a2 = v25 + 1;
          }
          signed int v29 = *((_DWORD *)this + 4);
          if (v29 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<double>::Reserve(v6, v29 + 1);
            signed int v29 = *v6;
          }
          uint64_t v30 = *((void *)this + 3);
          *((_DWORD *)this + 4) = v29 + 1;
          *(void *)(v30 + 8 * v29 + 8) = v26;
        }
        *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v20;
        uint64_t v31 = v23 + v22;
        *((void *)a2 + 1) = v23 + v22;
        int v32 = *((_DWORD *)a2 + 12);
        if (v32 >= v20) {
          int v32 = v20;
        }
        BOOL v33 = __OFSUB__(v24, v32);
        int v34 = v24 - v32;
        if ((v34 < 0) ^ v33 | (v34 == 0)) {
          int v34 = 0;
        }
        else {
          *((void *)a2 + 1) = v31 - v34;
        }
        *((_DWORD *)a2 + 11) = v34;
        *((unsigned char *)a2 + 36) = 0;
      }
      goto LABEL_2;
    case 5u:
      if (v9 != 40) {
        goto LABEL_27;
      }
      int v13 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        int v14 = 0;
      }
      else
      {
        int v14 = *v13;
        if ((*v13 & 0x80000000) == 0)
        {
          *(void *)a2 = v13 + 1;
          goto LABEL_95;
        }
      }
      uint64_t Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v14);
      int v14 = Varint32Fallback;
      if (Varint32Fallback < 0) {
        return 0;
      }
LABEL_95:
      *((_DWORD *)this + 15) = v14;
      goto LABEL_2;
    case 6u:
      if (v9 != 48) {
        goto LABEL_27;
      }
      unsigned int v15 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        int v16 = 0;
      }
      else
      {
        int v16 = *v15;
        if ((*v15 & 0x80000000) == 0)
        {
          *(void *)a2 = v15 + 1;
          goto LABEL_92;
        }
      }
      uint64_t v52 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v16);
      int v16 = v52;
      if (v52 < 0) {
        return 0;
      }
LABEL_92:
      *((_DWORD *)this + 16) = v16;
      goto LABEL_2;
    case 7u:
      if (v9 == 61)
      {
        if (!google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<float,(google::protobuf::internal::WireFormatLite::FieldType)2>(58, (unsigned int **)a2, (uint64_t)v5))return 0; {
        goto LABEL_2;
        }
      }
      if (v9 != 58) {
        goto LABEL_27;
      }
      BOOL v17 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v17 < 0)
      {
        unsigned int v18 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if ((v18 & 0x80000000) != 0) {
          return 0;
        }
      }
      else
      {
        unsigned int v18 = *v17;
        *(void *)a2 = v17 + 1;
      }
      if ((v18 & 3) != 0) {
        return 0;
      }
      int v35 = *((_DWORD *)a2 + 12);
      if (v35 == 0x7FFFFFFF) {
        int v36 = -1;
      }
      else {
        int v36 = v35 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
      }
      int v37 = *((_DWORD *)a2 + 10);
      if (v37 == 0x7FFFFFFF) {
        int v38 = -1;
      }
      else {
        int v38 = v37 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
      }
      signed int v39 = *v5;
      unsigned int v40 = v18 >> 2;
      if (v38 >= v36) {
        int v41 = v36;
      }
      else {
        int v41 = v38;
      }
      if (v36 == -1) {
        int v42 = v38;
      }
      else {
        int v42 = v41;
      }
      if (v42 < (uint64_t)v18)
      {
        if (v18 >= 4)
        {
          if (v40 <= 1) {
            int v43 = 1;
          }
          else {
            int v43 = v18 >> 2;
          }
          do
          {
            unsigned int v54 = 0;
            BOOL v44 = *(unsigned int **)a2;
            if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) < 4)
            {
              BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v54);
              if (!result) {
                return result;
              }
              unsigned int v45 = v54;
              signed int v39 = *v5;
            }
            else
            {
              unsigned int v45 = *v44;
              *(void *)a2 = v44 + 1;
            }
            if (v39 == *((_DWORD *)this + 11))
            {
              google::protobuf::RepeatedField<float>::Reserve(v5, v39 + 1);
              signed int v39 = *v5;
            }
            uint64_t v46 = *((void *)this + 6) + 4 * v39;
            *((_DWORD *)this + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v39 + 1;
            *(_DWORD *)(v46 + 8) = v45;
            ++v39;
            --v43;
          }
          while (v43);
        }
        goto LABEL_2;
      }
      signed int v48 = v39 + v40;
      if (v18 > 3)
      {
        google::protobuf::RepeatedField<float>::Reserve(v5, v39 + v40);
        uint64_t v49 = *((void *)this + 6);
        uint64_t v50 = 4 * v48 - 4 * *((int *)this + 10);
        if (v50 >= 1) {
          bzero((void *)(v49 + 8 + 4 * *((int *)this + 10)), 4 * (((unint64_t)v50 >> 2) - ((unint64_t)v50 > 3)) + 4);
        }
      }
      else
      {
        uint64_t v49 = *((void *)this + 6);
      }
      *uint64_t v5 = v48;
      uint64_t v51 = v49 + 8;
      if (!v49) {
        uint64_t v51 = 0;
      }
      if (google::protobuf::io::CodedInputStream::ReadRaw(a2, (char *)(v51 + 4 * v39), v18)) {
        goto LABEL_2;
      }
      if ((int)*v5 < 1) {
        return 0;
      }
      BOOL result = 0;
      *uint64_t v5 = v39;
      return result;
    default:
      goto LABEL_27;
  }
}

CoreML::Specification::ResizeBilinearLayerParams *CoreML::Specification::ResizeBilinearLayerParams::ResizeBilinearLayerParams(CoreML::Specification::ResizeBilinearLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1EF0D6D60;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::ResizeBilinearLayerParams *)&CoreML::Specification::_ResizeBilinearLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 5) = 0;
  *((_DWORD *)this + 12) = 0;
  return this;
}

void sub_19EB8D7AC(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ResizeBilinearLayerParams::MergePartialFromCodedStream(CoreML::Specification::ResizeBilinearLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v6 = *(char **)a2;
        if (*(void *)a2 < *((void *)a2 + 1)) {
          break;
        }
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) != 0) {
          goto LABEL_8;
        }
LABEL_21:
        if (v8) {
          BOOL v15 = (v8 & 7) == 4;
        }
        else {
          BOOL v15 = 1;
        }
        if (v15) {
          return 1;
        }
        if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)return 0; {
      }
        }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        goto LABEL_21;
      }
LABEL_8:
      if (v8 >> 3 == 2) {
        break;
      }
      if (v8 >> 3 != 1) {
        goto LABEL_21;
      }
      if (v8 == 8)
      {
        if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned long long,(google::protobuf::internal::WireFormatLite::FieldType)4>(0xAu, a2, (uint64_t)v5) & 1) == 0)return 0; {
      }
        }
      else
      {
        if (v8 != 10) {
          goto LABEL_21;
        }
        unsigned int v10 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v10 < 0)
        {
          int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0) {
            return 0;
          }
        }
        else
        {
          int VarintSizeAsIntFallback = *v10;
          *(void *)a2 = v10 + 1;
        }
        int v22 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        while (1)
        {
          int v23 = *((_DWORD *)a2 + 10);
          uint64_t v24 = *((int *)a2 + 11);
          unint64_t v25 = *((void *)a2 + 1);
          int v26 = *((_DWORD *)a2 + 6);
          if (v23 == 0x7FFFFFFF) {
            break;
          }
          unsigned int v27 = *(char **)a2;
          if ((int)(v23 - v26 + v24 + v25 - *(void *)a2) < 1) {
            break;
          }
          if ((unint64_t)v27 >= v25 || *v27 < 0)
          {
            unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v30 & 1) == 0) {
              return 0;
            }
            unint64_t v28 = Varint64Fallback;
          }
          else
          {
            unint64_t v28 = *v27;
            *(void *)a2 = v27 + 1;
          }
          signed int v31 = *((_DWORD *)this + 4);
          if (v31 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<double>::Reserve(v5, v31 + 1);
            signed int v31 = *v5;
          }
          uint64_t v32 = *((void *)this + 3);
          *((_DWORD *)this + 4) = v31 + 1;
          *(void *)(v32 + 8 * v31 + 8) = v28;
        }
        *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v22;
        uint64_t v33 = v25 + v24;
        *((void *)a2 + 1) = v25 + v24;
        int v34 = *((_DWORD *)a2 + 12);
        if (v34 >= v22) {
          int v34 = v22;
        }
        BOOL v19 = __OFSUB__(v26, v34);
        int v35 = v26 - v34;
        if ((v35 < 0) ^ v19 | (v35 == 0)) {
          int v35 = 0;
        }
        else {
          *((void *)a2 + 1) = v33 - v35;
        }
        *((_DWORD *)a2 + 11) = v35;
        *((unsigned char *)a2 + 36) = 0;
      }
    }
    if (v8 != 18) {
      goto LABEL_21;
    }
    unsigned int v12 = (CoreML::Specification::SamplingMode *)*((void *)this + 5);
    if (!v12) {
      operator new();
    }
    int v13 = *(char **)a2;
    if (*(void *)a2 >= *((void *)a2 + 1) || *v13 < 0)
    {
      int v14 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
      if (v14 < 0) {
        return 0;
      }
    }
    else
    {
      int v14 = *v13;
      *(void *)a2 = v13 + 1;
    }
    int v16 = google::protobuf::io::CodedInputStream::PushLimit(a2, v14);
    int v18 = *((_DWORD *)a2 + 13);
    BOOL v19 = __OFSUB__(v18--, 1);
    *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v18;
    if (v18 < 0 != v19) {
      break;
    }
    int v20 = v16;
    uint64_t result = CoreML::Specification::SamplingMode::MergePartialFromCodedStream(v12, (char **)a2, v17);
    if (!result) {
      return result;
    }
  }
  while (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v20));
  return 0;
}

void sub_19EB8DA90(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::CropResizeLayerParams *CoreML::Specification::CropResizeLayerParams::CropResizeLayerParams(CoreML::Specification::CropResizeLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1EF0D4928;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::CropResizeLayerParams *)&CoreML::Specification::_CropResizeLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0;
  *((_DWORD *)this + 16) = 0;
  *((void *)this + 7) = 0;
  return this;
}

void sub_19EB8DB28(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::CropResizeLayerParams::MergePartialFromCodedStream(CoreML::Specification::CropResizeLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      uint64_t v6 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      switch(v8 >> 3)
      {
        case 1u:
          if (v8 == 8)
          {
            if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned long long,(google::protobuf::internal::WireFormatLite::FieldType)4>(0xAu, a2, (uint64_t)v5) & 1) == 0)return 0; {
          }
            }
          else
          {
            if (v8 != 10) {
              goto LABEL_34;
            }
            unsigned int v10 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v10 < 0)
            {
              int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (VarintSizeAsIntFallback < 0) {
                return 0;
              }
            }
            else
            {
              int VarintSizeAsIntFallback = *v10;
              *(void *)a2 = v10 + 1;
            }
            int v33 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
            while (1)
            {
              int v34 = *((_DWORD *)a2 + 10);
              uint64_t v35 = *((int *)a2 + 11);
              unint64_t v36 = *((void *)a2 + 1);
              int v37 = *((_DWORD *)a2 + 6);
              if (v34 == 0x7FFFFFFF) {
                break;
              }
              int v38 = *(char **)a2;
              if ((int)(v34 - v37 + v35 + v36 - *(void *)a2) < 1) {
                break;
              }
              if ((unint64_t)v38 >= v36 || *v38 < 0)
              {
                unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
                if ((v41 & 1) == 0) {
                  return 0;
                }
                unint64_t v39 = Varint64Fallback;
              }
              else
              {
                unint64_t v39 = *v38;
                *(void *)a2 = v38 + 1;
              }
              signed int v42 = *((_DWORD *)this + 4);
              if (v42 == *((_DWORD *)this + 5))
              {
                google::protobuf::RepeatedField<double>::Reserve(v5, v42 + 1);
                signed int v42 = *v5;
              }
              uint64_t v43 = *((void *)this + 3);
              *((_DWORD *)this + 4) = v42 + 1;
              *(void *)(v43 + 8 * v42 + 8) = v39;
            }
            *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v33;
            uint64_t v44 = v36 + v35;
            *((void *)a2 + 1) = v36 + v35;
            int v45 = *((_DWORD *)a2 + 12);
            if (v45 >= v33) {
              int v45 = v33;
            }
            BOOL v27 = __OFSUB__(v37, v45);
            int v46 = v37 - v45;
            if ((v46 < 0) ^ v27 | (v46 == 0)) {
              int v46 = 0;
            }
            else {
              *((void *)a2 + 1) = v44 - v46;
            }
            *((_DWORD *)a2 + 11) = v46;
            *((unsigned char *)a2 + 36) = 0;
          }
          break;
        case 2u:
          if (v8 != 16) {
            goto LABEL_34;
          }
          unsigned int v12 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v12 < 0)
          {
            unint64_t v13 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v23 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            unint64_t v13 = *v12;
            *(void *)a2 = v12 + 1;
          }
          *((unsigned char *)this + 56) = v13 != 0;
          continue;
        case 3u:
          if (v8 != 26) {
            goto LABEL_34;
          }
          int v14 = (CoreML::Specification::SamplingMode *)*((void *)this + 5);
          if (!v14) {
            operator new();
          }
          BOOL v15 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v15 < 0)
          {
            int v16 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v16 < 0) {
              return 0;
            }
          }
          else
          {
            int v16 = *v15;
            *(void *)a2 = v15 + 1;
          }
          int v24 = google::protobuf::io::CodedInputStream::PushLimit(a2, v16);
          int v26 = *((_DWORD *)a2 + 13);
          BOOL v27 = __OFSUB__(v26--, 1);
          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v26;
          if (v26 < 0 != v27) {
            return 0;
          }
          int v28 = v24;
          uint64_t result = CoreML::Specification::SamplingMode::MergePartialFromCodedStream(v14, (char **)a2, v25);
          if (!result) {
            return result;
          }
          goto LABEL_51;
        case 4u:
          if (v8 != 34) {
            goto LABEL_34;
          }
          unsigned int v17 = (CoreML::Specification::BoxCoordinatesMode *)*((void *)this + 6);
          if (!v17) {
            operator new();
          }
          int v18 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v18 < 0)
          {
            int v19 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v19 < 0) {
              return 0;
            }
          }
          else
          {
            int v19 = *v18;
            *(void *)a2 = v18 + 1;
          }
          int v30 = google::protobuf::io::CodedInputStream::PushLimit(a2, v19);
          int v32 = *((_DWORD *)a2 + 13);
          BOOL v27 = __OFSUB__(v32--, 1);
          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v32;
          if (v32 < 0 != v27) {
            return 0;
          }
          int v28 = v30;
          uint64_t result = CoreML::Specification::BoxCoordinatesMode::MergePartialFromCodedStream(v17, (char **)a2, v31);
          if (!result) {
            return result;
          }
LABEL_51:
          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v28)) {
            return 0;
          }
          continue;
        case 5u:
          if (v8 != 45) {
            goto LABEL_34;
          }
          unsigned int v47 = 0;
          int v20 = *(unsigned int **)a2;
          if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) < 4)
          {
            uint64_t result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v47);
            if (!result) {
              return result;
            }
            unsigned int v21 = v47;
          }
          else
          {
            unsigned int v21 = *v20;
            *(void *)a2 = v20 + 1;
          }
          *((_DWORD *)this + 15) = v21;
          continue;
        default:
          goto LABEL_34;
      }
    }
LABEL_34:
    if (!v8 || (v8 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_19EB8DF64(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::UnaryFunctionLayerParams *CoreML::Specification::UnaryFunctionLayerParams::UnaryFunctionLayerParams(CoreML::Specification::UnaryFunctionLayerParams *this)
{
  *(void *)this = &unk_1EF0D6808;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::UnaryFunctionLayerParams *)&CoreML::Specification::_UnaryFunctionLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  *((void *)this + 4) = 0;
  return this;
}

void sub_19EB8E004(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::UnaryFunctionLayerParams::MergePartialFromCodedStream(CoreML::Specification::UnaryFunctionLayerParams *this, char **a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 < a2[1]) {
        break;
      }
      LODWORD(v6) = 0;
LABEL_6:
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) == 0) {
        goto LABEL_28;
      }
LABEL_7:
      switch(v7 >> 3)
      {
        case 1u:
          if (v7 != 8) {
            goto LABEL_28;
          }
          unint64_t v9 = *a2;
          if (*a2 >= a2[1])
          {
            int v10 = 0;
          }
          else
          {
            int v10 = *v9;
            if ((*v9 & 0x80000000) == 0)
            {
              *a2 = v9 + 1;
              goto LABEL_36;
            }
          }
          uint64_t Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a2, v10);
          int v10 = Varint32Fallback;
          if (Varint32Fallback < 0) {
            return 0;
          }
LABEL_36:
          *((_DWORD *)this + 4) = v10;
          break;
        case 2u:
          if (v7 != 21) {
            goto LABEL_28;
          }
          unsigned int v22 = 0;
          int v11 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v22);
            if (!result) {
              return result;
            }
            unsigned int v12 = v22;
          }
          else
          {
            unsigned int v12 = *v11;
            *a2 = (char *)(v11 + 1);
          }
          *((_DWORD *)this + 5) = v12;
          continue;
        case 3u:
          if (v7 != 29) {
            goto LABEL_28;
          }
          unsigned int v22 = 0;
          unint64_t v13 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v22);
            if (!result) {
              return result;
            }
            unsigned int v14 = v22;
          }
          else
          {
            unsigned int v14 = *v13;
            *a2 = (char *)(v13 + 1);
          }
          *((_DWORD *)this + 6) = v14;
          continue;
        case 4u:
          if (v7 != 37) {
            goto LABEL_28;
          }
          unsigned int v22 = 0;
          BOOL v15 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v22);
            if (!result) {
              return result;
            }
            unsigned int v16 = v22;
          }
          else
          {
            unsigned int v16 = *v15;
            *a2 = (char *)(v15 + 1);
          }
          *((_DWORD *)this + 7) = v16;
          continue;
        case 5u:
          if (v7 != 45) {
            goto LABEL_28;
          }
          unsigned int v22 = 0;
          unsigned int v17 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v22);
            if (!result) {
              return result;
            }
            unsigned int v18 = v22;
          }
          else
          {
            unsigned int v18 = *v17;
            *a2 = (char *)(v17 + 1);
          }
          *((_DWORD *)this + 8) = v18;
          continue;
        default:
          goto LABEL_28;
      }
    }
    uint64_t v6 = *v5;
    if (*v5 < 1) {
      goto LABEL_6;
    }
    *a2 = v5 + 1;
    unint64_t v7 = v6 | 0x100000000;
    if ((v7 & 0x100000000) != 0) {
      goto LABEL_7;
    }
LABEL_28:
    if (!v7 || (v7 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)return 0; {
  }
    }
}

CoreML::Specification::AddLayerParams *CoreML::Specification::AddLayerParams::AddLayerParams(CoreML::Specification::AddLayerParams *this)
{
  *(void *)this = &unk_1EF0D00B8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::AddLayerParams *)&CoreML::Specification::_AddLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  return this;
}

void sub_19EB8E2E4(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::AddLayerParams::MergePartialFromCodedStream(CoreML::Specification::AddLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 13 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      unsigned int v14 = 0;
      unsigned int v12 = (unsigned int *)*a2;
      if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
      {
        BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v14);
        if (!result) {
          return result;
        }
        unsigned int v13 = v14;
      }
      else
      {
        unsigned int v13 = *v12;
        *a2 = (char *)(v12 + 1);
      }
      *((_DWORD *)this + 4) = v13;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    BOOL result = v10;
    if (v10) {
      return result;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::MultiplyLayerParams *CoreML::Specification::MultiplyLayerParams::MultiplyLayerParams(CoreML::Specification::MultiplyLayerParams *this)
{
  *(void *)this = &unk_1EF0D3B80;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::MultiplyLayerParams *)&CoreML::Specification::_MultiplyLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  return this;
}

void sub_19EB8E454(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::MultiplyLayerParams::MergePartialFromCodedStream(CoreML::Specification::MultiplyLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 13 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      unsigned int v14 = 0;
      unsigned int v12 = (unsigned int *)*a2;
      if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
      {
        BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v14);
        if (!result) {
          return result;
        }
        unsigned int v13 = v14;
      }
      else
      {
        unsigned int v13 = *v12;
        *a2 = (char *)(v12 + 1);
      }
      *((_DWORD *)this + 4) = v13;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    BOOL result = v10;
    if (v10) {
      return result;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::AverageLayerParams *CoreML::Specification::AverageLayerParams::AverageLayerParams(CoreML::Specification::AverageLayerParams *this)
{
  *(void *)this = &unk_1EF0D2CA8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::AverageLayerParams *)&CoreML::Specification::_AverageLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_19EB8E5C4(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::AverageLayerParams::MergePartialFromCodedStream(CoreML::Specification::AverageLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::ScaleLayerParams *CoreML::Specification::ScaleLayerParams::ScaleLayerParams(CoreML::Specification::ScaleLayerParams *this)
{
  *(void *)this = &unk_1EF0D1D38;
  *((void *)this + 1) = 0;
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::ScaleLayerParams *)&CoreML::Specification::_ScaleLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 8) = 0;
  *((void *)this + 9) = 0;
  *((unsigned char *)this + 8CoreML::Specification::NetworkUpdateParameters::New(this, 0) = 0;
  *((_DWORD *)this + 21) = 0;
  return this;
}

void sub_19EB8E6CC(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 48);
  if (v4 && !*v4) {
    operator delete(v4);
  }
  uint64_t v5 = *(void **)(v2 + 24);
  if (v5)
  {
    if (!*v5) {
      operator delete(v5);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::ScaleLayerParams::MergePartialFromCodedStream(CoreML::Specification::ScaleLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 40);
  BOOL v6 = (unsigned int *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      uint64_t v7 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v8) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v8);
        unint64_t v9 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v9 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v8 = *v7;
      if (*v7 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v7 + 1;
      unint64_t v9 = v8 | 0x100000000;
      if ((v9 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      switch(v9 >> 3)
      {
        case 1u:
          if (v9 == 8)
          {
            unsigned int v27 = 10;
            int v28 = a2;
            uint64_t v29 = (uint64_t)v6;
            goto LABEL_45;
          }
          if (v9 != 10) {
            goto LABEL_32;
          }
          int v11 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v11 < 0)
          {
            int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            int VarintSizeAsIntFallback = *v11;
            *(void *)a2 = v11 + 1;
          }
          int v31 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          while (1)
          {
            int v32 = *((_DWORD *)a2 + 10);
            uint64_t v33 = *((int *)a2 + 11);
            unint64_t v34 = *((void *)a2 + 1);
            int v35 = *((_DWORD *)a2 + 6);
            if (v32 == 0x7FFFFFFF) {
              break;
            }
            unint64_t v36 = *(char **)a2;
            if ((int)(v32 - v35 + v33 + v34 - *(void *)a2) < 1) {
              break;
            }
            if ((unint64_t)v36 >= v34 || *v36 < 0)
            {
              unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v39 & 1) == 0) {
                return 0;
              }
              unint64_t v37 = Varint64Fallback;
            }
            else
            {
              unint64_t v37 = *v36;
              *(void *)a2 = v36 + 1;
            }
            signed int v40 = *((_DWORD *)this + 4);
            if (v40 == *((_DWORD *)this + 5))
            {
              google::protobuf::RepeatedField<double>::Reserve(v6, v40 + 1);
              signed int v40 = *v6;
            }
            uint64_t v41 = *((void *)this + 3);
            *((_DWORD *)this + 4) = v40 + 1;
            *(void *)(v41 + 8 * v40 + 8) = v37;
          }
          goto LABEL_73;
        case 2u:
          if (v9 != 18) {
            goto LABEL_32;
          }
          unsigned int v13 = (CoreML::Specification::WeightParams *)*((void *)this + 8);
          if (!v13) {
            operator new();
          }
          goto LABEL_29;
        case 3u:
          if (v9 != 24) {
            goto LABEL_32;
          }
          unsigned int v14 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v14 < 0)
          {
            unint64_t v15 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v30 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            unint64_t v15 = *v14;
            *(void *)a2 = v14 + 1;
          }
          *((unsigned char *)this + 8CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v15 != 0;
          continue;
        case 4u:
          if (v9 == 32)
          {
            unsigned int v27 = 34;
            int v28 = a2;
            uint64_t v29 = (uint64_t)v5;
LABEL_45:
            if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned long long,(google::protobuf::internal::WireFormatLite::FieldType)4>(v27, v28, v29) & 1) == 0)return 0; {
          }
            }
          else
          {
            if (v9 != 34) {
              goto LABEL_32;
            }
            unsigned int v16 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v16 < 0)
            {
              int v17 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (v17 < 0) {
                return 0;
              }
            }
            else
            {
              int v17 = *v16;
              *(void *)a2 = v16 + 1;
            }
            int v31 = google::protobuf::io::CodedInputStream::PushLimit(a2, v17);
            while (1)
            {
              int v42 = *((_DWORD *)a2 + 10);
              uint64_t v33 = *((int *)a2 + 11);
              unint64_t v34 = *((void *)a2 + 1);
              int v35 = *((_DWORD *)a2 + 6);
              if (v42 == 0x7FFFFFFF) {
                break;
              }
              uint64_t v43 = *(char **)a2;
              if ((int)(v42 - v35 + v33 + v34 - *(void *)a2) < 1) {
                break;
              }
              if ((unint64_t)v43 >= v34 || *v43 < 0)
              {
                unint64_t v45 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
                if ((v46 & 1) == 0) {
                  return 0;
                }
                unint64_t v44 = v45;
              }
              else
              {
                unint64_t v44 = *v43;
                *(void *)a2 = v43 + 1;
              }
              signed int v47 = *((_DWORD *)this + 10);
              if (v47 == *((_DWORD *)this + 11))
              {
                google::protobuf::RepeatedField<double>::Reserve(v5, v47 + 1);
                signed int v47 = *v5;
              }
              uint64_t v48 = *((void *)this + 6);
              *((_DWORD *)this + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v47 + 1;
              *(void *)(v48 + 8 * v47 + 8) = v44;
            }
LABEL_73:
            *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v31;
            uint64_t v49 = v34 + v33;
            *((void *)a2 + 1) = v34 + v33;
            int v50 = *((_DWORD *)a2 + 12);
            if (v50 >= v31) {
              int v50 = v31;
            }
            BOOL v24 = __OFSUB__(v35, v50);
            int v51 = v35 - v50;
            if ((v51 < 0) ^ v24 | (v51 == 0)) {
              int v51 = 0;
            }
            else {
              *((void *)a2 + 1) = v49 - v51;
            }
            *((_DWORD *)a2 + 11) = v51;
            *((unsigned char *)a2 + 36) = 0;
          }
          break;
        case 5u:
          if (v9 != 42) {
            goto LABEL_32;
          }
          unsigned int v13 = (CoreML::Specification::WeightParams *)*((void *)this + 9);
          if (!v13) {
            operator new();
          }
LABEL_29:
          unsigned int v18 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v18 < 0)
          {
            int v19 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v19 < 0) {
              return 0;
            }
          }
          else
          {
            int v19 = *v18;
            *(void *)a2 = v18 + 1;
          }
          int v21 = google::protobuf::io::CodedInputStream::PushLimit(a2, v19);
          int v23 = *((_DWORD *)a2 + 13);
          BOOL v24 = __OFSUB__(v23--, 1);
          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v23;
          if (v23 < 0 != v24) {
            return 0;
          }
          int v25 = v21;
          BOOL result = CoreML::Specification::WeightParams::MergePartialFromCodedStream(v13, a2, v22);
          if (!result) {
            return result;
          }
          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v25)) {
            return 0;
          }
          continue;
        default:
          goto LABEL_32;
      }
    }
LABEL_32:
    if (!v9 || (v9 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v9, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_19EB8EB70(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::BiasLayerParams *CoreML::Specification::BiasLayerParams::BiasLayerParams(CoreML::Specification::BiasLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1EF0D09A0;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::BiasLayerParams *)&CoreML::Specification::_BiasLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 5) = 0;
  *((_DWORD *)this + 12) = 0;
  return this;
}

void sub_19EB8EC1C(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::BiasLayerParams::MergePartialFromCodedStream(CoreML::Specification::BiasLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        BOOL v6 = *(char **)a2;
        if (*(void *)a2 < *((void *)a2 + 1)) {
          break;
        }
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) != 0) {
          goto LABEL_8;
        }
LABEL_21:
        if (v8) {
          BOOL v15 = (v8 & 7) == 4;
        }
        else {
          BOOL v15 = 1;
        }
        if (v15) {
          return 1;
        }
        if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)return 0; {
      }
        }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        goto LABEL_21;
      }
LABEL_8:
      if (v8 >> 3 == 2) {
        break;
      }
      if (v8 >> 3 != 1) {
        goto LABEL_21;
      }
      if (v8 == 8)
      {
        if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned long long,(google::protobuf::internal::WireFormatLite::FieldType)4>(0xAu, a2, (uint64_t)v5) & 1) == 0)return 0; {
      }
        }
      else
      {
        if (v8 != 10) {
          goto LABEL_21;
        }
        BOOL v10 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v10 < 0)
        {
          int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0) {
            return 0;
          }
        }
        else
        {
          int VarintSizeAsIntFallback = *v10;
          *(void *)a2 = v10 + 1;
        }
        int v22 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        while (1)
        {
          int v23 = *((_DWORD *)a2 + 10);
          uint64_t v24 = *((int *)a2 + 11);
          unint64_t v25 = *((void *)a2 + 1);
          int v26 = *((_DWORD *)a2 + 6);
          if (v23 == 0x7FFFFFFF) {
            break;
          }
          unsigned int v27 = *(char **)a2;
          if ((int)(v23 - v26 + v24 + v25 - *(void *)a2) < 1) {
            break;
          }
          if ((unint64_t)v27 >= v25 || *v27 < 0)
          {
            unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v30 & 1) == 0) {
              return 0;
            }
            unint64_t v28 = Varint64Fallback;
          }
          else
          {
            unint64_t v28 = *v27;
            *(void *)a2 = v27 + 1;
          }
          signed int v31 = *((_DWORD *)this + 4);
          if (v31 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<double>::Reserve(v5, v31 + 1);
            signed int v31 = *v5;
          }
          uint64_t v32 = *((void *)this + 3);
          *((_DWORD *)this + 4) = v31 + 1;
          *(void *)(v32 + 8 * v31 + 8) = v28;
        }
        *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v22;
        uint64_t v33 = v25 + v24;
        *((void *)a2 + 1) = v25 + v24;
        int v34 = *((_DWORD *)a2 + 12);
        if (v34 >= v22) {
          int v34 = v22;
        }
        BOOL v19 = __OFSUB__(v26, v34);
        int v35 = v26 - v34;
        if ((v35 < 0) ^ v19 | (v35 == 0)) {
          int v35 = 0;
        }
        else {
          *((void *)a2 + 1) = v33 - v35;
        }
        *((_DWORD *)a2 + 11) = v35;
        *((unsigned char *)a2 + 36) = 0;
      }
    }
    if (v8 != 18) {
      goto LABEL_21;
    }
    unsigned int v12 = (CoreML::Specification::WeightParams *)*((void *)this + 5);
    if (!v12) {
      operator new();
    }
    unsigned int v13 = *(char **)a2;
    if (*(void *)a2 >= *((void *)a2 + 1) || *v13 < 0)
    {
      int v14 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
      if (v14 < 0) {
        return 0;
      }
    }
    else
    {
      int v14 = *v13;
      *(void *)a2 = v13 + 1;
    }
    int v16 = google::protobuf::io::CodedInputStream::PushLimit(a2, v14);
    int v18 = *((_DWORD *)a2 + 13);
    BOOL v19 = __OFSUB__(v18--, 1);
    *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v18;
    if (v18 < 0 != v19) {
      break;
    }
    int v20 = v16;
    BOOL result = CoreML::Specification::WeightParams::MergePartialFromCodedStream(v12, a2, v17);
    if (!result) {
      return result;
    }
  }
  while (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v20));
  return 0;
}

void sub_19EB8EF00(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::MaxLayerParams *CoreML::Specification::MaxLayerParams::MaxLayerParams(CoreML::Specification::MaxLayerParams *this)
{
  *(void *)this = &unk_1EF0D04E0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::MaxLayerParams *)&CoreML::Specification::_MaxLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_19EB8EF84(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::MaxLayerParams::MergePartialFromCodedStream(CoreML::Specification::MaxLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::MinLayerParams *CoreML::Specification::MinLayerParams::MinLayerParams(CoreML::Specification::MinLayerParams *this)
{
  *(void *)this = &unk_1EF0D0578;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::MinLayerParams *)&CoreML::Specification::_MinLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_19EB8F074(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::MinLayerParams::MergePartialFromCodedStream(CoreML::Specification::MinLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::DotProductLayerParams *CoreML::Specification::DotProductLayerParams::DotProductLayerParams(CoreML::Specification::DotProductLayerParams *this)
{
  *(void *)this = &unk_1EF0D4A58;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::DotProductLayerParams *)&CoreML::Specification::_DotProductLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((unsigned char *)this + 16) = 0;
  *((_DWORD *)this + 5) = 0;
  return this;
}

void sub_19EB8F168(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::DotProductLayerParams::MergePartialFromCodedStream(CoreML::Specification::DotProductLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      int v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v13 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t Varint64Fallback = *v11;
        *a2 = v11 + 1;
      }
      *((unsigned char *)this + 16) = Varint64Fallback != 0;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    if (v10) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ReduceLayerParams *CoreML::Specification::ReduceLayerParams::ReduceLayerParams(CoreML::Specification::ReduceLayerParams *this)
{
  *(void *)this = &unk_1EF0D2880;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::ReduceLayerParams *)&CoreML::Specification::_ReduceLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  return this;
}

void sub_19EB8F2D4(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::ReduceLayerParams::MergePartialFromCodedStream(CoreML::Specification::ReduceLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v5 = *a2;
          if (*a2 >= a2[1])
          {
            LODWORD(v6) = 0;
LABEL_6:
            unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
            unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
            if ((v7 & 0x100000000) == 0) {
              goto LABEL_25;
            }
            goto LABEL_7;
          }
          uint64_t v6 = *v5;
          if (*v5 < 1) {
            goto LABEL_6;
          }
          *a2 = v5 + 1;
          unint64_t v7 = v6 | 0x100000000;
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_25;
          }
LABEL_7:
          unsigned int v9 = v7 >> 3;
          if (v7 >> 3 != 3) {
            break;
          }
          if (v7 != 24) {
            goto LABEL_25;
          }
          char v13 = *a2;
          if (*a2 >= a2[1])
          {
            int v14 = 0;
          }
          else
          {
            int v14 = *v13;
            if ((*v13 & 0x80000000) == 0)
            {
              *a2 = v13 + 1;
              goto LABEL_36;
            }
          }
          uint64_t Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a2, v14);
          int v14 = Varint32Fallback;
          if (Varint32Fallback < 0) {
            return 0;
          }
LABEL_36:
          *((_DWORD *)this + 6) = v14;
        }
        if (v9 != 2) {
          break;
        }
        if (v7 != 21) {
          goto LABEL_25;
        }
        unsigned int v21 = 0;
        BOOL v15 = (unsigned int *)*a2;
        if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
        {
          BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v21);
          if (!result) {
            return result;
          }
          unsigned int v16 = v21;
        }
        else
        {
          unsigned int v16 = *v15;
          *a2 = (char *)(v15 + 1);
        }
        *((_DWORD *)this + 5) = v16;
      }
      if (v9 != 1 || v7 != 8) {
        break;
      }
      int v11 = *a2;
      if (*a2 >= a2[1])
      {
        int v12 = 0;
      }
      else
      {
        int v12 = *v11;
        if ((*v11 & 0x80000000) == 0)
        {
          *a2 = v11 + 1;
          goto LABEL_33;
        }
      }
      uint64_t v18 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a2, v12);
      int v12 = v18;
      if (v18 < 0) {
        return 0;
      }
LABEL_33:
      *((_DWORD *)this + 4) = v12;
    }
LABEL_25:
    if (v7) {
      BOOL v17 = (v7 & 7) == 4;
    }
    else {
      BOOL v17 = 1;
    }
    if (v17) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::LoadConstantLayerParams *CoreML::Specification::LoadConstantLayerParams::LoadConstantLayerParams(CoreML::Specification::LoadConstantLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1EF0D5DF0;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::LoadConstantLayerParams *)&CoreML::Specification::_LoadConstantLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 5) = 0;
  *((_DWORD *)this + 12) = 0;
  return this;
}

void sub_19EB8F500(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::LoadConstantLayerParams::MergePartialFromCodedStream(CoreML::Specification::LoadConstantLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v6 = *(char **)a2;
        if (*(void *)a2 < *((void *)a2 + 1)) {
          break;
        }
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) != 0) {
          goto LABEL_8;
        }
LABEL_21:
        if (v8) {
          BOOL v15 = (v8 & 7) == 4;
        }
        else {
          BOOL v15 = 1;
        }
        if (v15) {
          return 1;
        }
        if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)return 0; {
      }
        }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        goto LABEL_21;
      }
LABEL_8:
      if (v8 >> 3 == 2) {
        break;
      }
      if (v8 >> 3 != 1) {
        goto LABEL_21;
      }
      if (v8 == 8)
      {
        if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned long long,(google::protobuf::internal::WireFormatLite::FieldType)4>(0xAu, a2, (uint64_t)v5) & 1) == 0)return 0; {
      }
        }
      else
      {
        if (v8 != 10) {
          goto LABEL_21;
        }
        BOOL v10 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v10 < 0)
        {
          int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0) {
            return 0;
          }
        }
        else
        {
          int VarintSizeAsIntFallback = *v10;
          *(void *)a2 = v10 + 1;
        }
        int v22 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        while (1)
        {
          int v23 = *((_DWORD *)a2 + 10);
          uint64_t v24 = *((int *)a2 + 11);
          unint64_t v25 = *((void *)a2 + 1);
          int v26 = *((_DWORD *)a2 + 6);
          if (v23 == 0x7FFFFFFF) {
            break;
          }
          unsigned int v27 = *(char **)a2;
          if ((int)(v23 - v26 + v24 + v25 - *(void *)a2) < 1) {
            break;
          }
          if ((unint64_t)v27 >= v25 || *v27 < 0)
          {
            unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v30 & 1) == 0) {
              return 0;
            }
            unint64_t v28 = Varint64Fallback;
          }
          else
          {
            unint64_t v28 = *v27;
            *(void *)a2 = v27 + 1;
          }
          signed int v31 = *((_DWORD *)this + 4);
          if (v31 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<double>::Reserve(v5, v31 + 1);
            signed int v31 = *v5;
          }
          uint64_t v32 = *((void *)this + 3);
          *((_DWORD *)this + 4) = v31 + 1;
          *(void *)(v32 + 8 * v31 + 8) = v28;
        }
        *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v22;
        uint64_t v33 = v25 + v24;
        *((void *)a2 + 1) = v25 + v24;
        int v34 = *((_DWORD *)a2 + 12);
        if (v34 >= v22) {
          int v34 = v22;
        }
        BOOL v19 = __OFSUB__(v26, v34);
        int v35 = v26 - v34;
        if ((v35 < 0) ^ v19 | (v35 == 0)) {
          int v35 = 0;
        }
        else {
          *((void *)a2 + 1) = v33 - v35;
        }
        *((_DWORD *)a2 + 11) = v35;
        *((unsigned char *)a2 + 36) = 0;
      }
    }
    if (v8 != 18) {
      goto LABEL_21;
    }
    int v12 = (CoreML::Specification::WeightParams *)*((void *)this + 5);
    if (!v12) {
      operator new();
    }
    char v13 = *(char **)a2;
    if (*(void *)a2 >= *((void *)a2 + 1) || *v13 < 0)
    {
      int v14 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
      if (v14 < 0) {
        return 0;
      }
    }
    else
    {
      int v14 = *v13;
      *(void *)a2 = v13 + 1;
    }
    int v16 = google::protobuf::io::CodedInputStream::PushLimit(a2, v14);
    int v18 = *((_DWORD *)a2 + 13);
    BOOL v19 = __OFSUB__(v18--, 1);
    *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v18;
    if (v18 < 0 != v19) {
      break;
    }
    int v20 = v16;
    BOOL result = CoreML::Specification::WeightParams::MergePartialFromCodedStream(v12, a2, v17);
    if (!result) {
      return result;
    }
  }
  while (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v20));
  return 0;
}

void sub_19EB8F7E4(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::ReshapeLayerParams *CoreML::Specification::ReshapeLayerParams::ReshapeLayerParams(CoreML::Specification::ReshapeLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1EF0D3330;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::ReshapeLayerParams *)&CoreML::Specification::_ReshapeLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 9) = 0;
  *((_DWORD *)this + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = 0;
  return this;
}

void sub_19EB8F874(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ReshapeLayerParams::MergePartialFromCodedStream(CoreML::Specification::ReshapeLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      uint64_t v6 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      if (v8 >> 3 == 2)
      {
        if (v8 != 16) {
          break;
        }
        int v12 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1))
        {
          int v13 = 0;
        }
        else
        {
          int v13 = *v12;
          if ((*v12 & 0x80000000) == 0)
          {
            *(void *)a2 = v12 + 1;
            goto LABEL_47;
          }
        }
        uint64_t Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v13);
        int v13 = Varint32Fallback;
        if (Varint32Fallback < 0) {
          return 0;
        }
LABEL_47:
        *((_DWORD *)this + 9) = v13;
      }
      else
      {
        if (v8 >> 3 != 1) {
          break;
        }
        if (v8 == 8)
        {
          if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(google::protobuf::internal::WireFormatLite::FieldType)3>(10, a2, (uint64_t)v5) & 1) == 0)return 0; {
        }
          }
        else
        {
          if (v8 != 10) {
            break;
          }
          BOOL v10 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v10 < 0)
          {
            int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            int VarintSizeAsIntFallback = *v10;
            *(void *)a2 = v10 + 1;
          }
          int v15 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          while (1)
          {
            int v16 = *((_DWORD *)a2 + 10);
            uint64_t v17 = *((int *)a2 + 11);
            unint64_t v18 = *((void *)a2 + 1);
            int v19 = *((_DWORD *)a2 + 6);
            if (v16 == 0x7FFFFFFF) {
              break;
            }
            int v20 = *(char **)a2;
            if ((int)(v16 - v19 + v17 + v18 - *(void *)a2) < 1) {
              break;
            }
            if ((unint64_t)v20 >= v18 || *v20 < 0)
            {
              unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v23 & 1) == 0) {
                return 0;
              }
              unint64_t v21 = Varint64Fallback;
            }
            else
            {
              unint64_t v21 = *v20;
              *(void *)a2 = v20 + 1;
            }
            signed int v24 = *((_DWORD *)this + 4);
            if (v24 == *((_DWORD *)this + 5))
            {
              google::protobuf::RepeatedField<double>::Reserve(v5, v24 + 1);
              signed int v24 = *v5;
            }
            uint64_t v25 = *((void *)this + 3);
            *((_DWORD *)this + 4) = v24 + 1;
            *(void *)(v25 + 8 * v24 + 8) = v21;
          }
          *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v15;
          uint64_t v26 = v18 + v17;
          *((void *)a2 + 1) = v18 + v17;
          int v27 = *((_DWORD *)a2 + 12);
          if (v27 >= v15) {
            int v27 = v15;
          }
          BOOL v28 = __OFSUB__(v19, v27);
          int v29 = v19 - v27;
          if ((v29 < 0) ^ v28 | (v29 == 0)) {
            int v29 = 0;
          }
          else {
            *((void *)a2 + 1) = v26 - v29;
          }
          *((_DWORD *)a2 + 11) = v29;
          *((unsigned char *)a2 + 36) = 0;
        }
      }
    }
    if (v8) {
      BOOL v14 = (v8 & 7) == 4;
    }
    else {
      BOOL v14 = 1;
    }
    if (v14) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::FlattenLayerParams *CoreML::Specification::FlattenLayerParams::FlattenLayerParams(CoreML::Specification::FlattenLayerParams *this)
{
  *(void *)this = &unk_1EF0D2F08;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::FlattenLayerParams *)&CoreML::Specification::_FlattenLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  return this;
}

void sub_19EB8FB58(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::FlattenLayerParams::MergePartialFromCodedStream(CoreML::Specification::FlattenLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      int v11 = *a2;
      if (*a2 >= a2[1])
      {
        int v12 = 0;
      }
      else
      {
        int v12 = *v11;
        if ((*v11 & 0x80000000) == 0)
        {
          *a2 = v11 + 1;
          goto LABEL_22;
        }
      }
      uint64_t Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a2, v12);
      int v12 = Varint32Fallback;
      if (Varint32Fallback < 0) {
        return 0;
      }
LABEL_22:
      *((_DWORD *)this + 4) = v12;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    if (v10) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::PermuteLayerParams *CoreML::Specification::PermuteLayerParams::PermuteLayerParams(CoreML::Specification::PermuteLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1EF0D30D0;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::PermuteLayerParams *)&CoreML::Specification::_PermuteLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 9) = 0;
  return this;
}

void sub_19EB8FCD0(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::PermuteLayerParams::MergePartialFromCodedStream(CoreML::Specification::PermuteLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      uint64_t v6 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      if ((v8 & 0xFFFFFFF8) != 8) {
        break;
      }
      if (v8 == 8)
      {
        if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned long long,(google::protobuf::internal::WireFormatLite::FieldType)4>(0xAu, a2, (uint64_t)v5) & 1) == 0)return 0; {
      }
        }
      else
      {
        if (v8 != 10) {
          break;
        }
        BOOL v10 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v10 < 0)
        {
          int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0) {
            return 0;
          }
        }
        else
        {
          int VarintSizeAsIntFallback = *v10;
          *(void *)a2 = v10 + 1;
        }
        int v13 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        while (1)
        {
          int v14 = *((_DWORD *)a2 + 10);
          uint64_t v15 = *((int *)a2 + 11);
          unint64_t v16 = *((void *)a2 + 1);
          int v17 = *((_DWORD *)a2 + 6);
          if (v14 == 0x7FFFFFFF) {
            break;
          }
          unint64_t v18 = *(char **)a2;
          if ((int)(v14 - v17 + v15 + v16 - *(void *)a2) < 1) {
            break;
          }
          if ((unint64_t)v18 >= v16 || *v18 < 0)
          {
            unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v21 & 1) == 0) {
              return 0;
            }
            unint64_t v19 = Varint64Fallback;
          }
          else
          {
            unint64_t v19 = *v18;
            *(void *)a2 = v18 + 1;
          }
          signed int v22 = *((_DWORD *)this + 4);
          if (v22 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<double>::Reserve(v5, v22 + 1);
            signed int v22 = *v5;
          }
          uint64_t v23 = *((void *)this + 3);
          *((_DWORD *)this + 4) = v22 + 1;
          *(void *)(v23 + 8 * v22 + 8) = v19;
        }
        *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v13;
        uint64_t v24 = v16 + v15;
        *((void *)a2 + 1) = v16 + v15;
        int v25 = *((_DWORD *)a2 + 12);
        if (v25 >= v13) {
          int v25 = v13;
        }
        BOOL v26 = __OFSUB__(v17, v25);
        int v27 = v17 - v25;
        if ((v27 < 0) ^ v26 | (v27 == 0)) {
          int v27 = 0;
        }
        else {
          *((void *)a2 + 1) = v24 - v27;
        }
        *((_DWORD *)a2 + 11) = v27;
        *((unsigned char *)a2 + 36) = 0;
      }
    }
    if (v8) {
      BOOL v12 = (v8 & 7) == 4;
    }
    else {
      BOOL v12 = 1;
    }
    if (v12) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ConcatLayerParams *CoreML::Specification::ConcatLayerParams::ConcatLayerParams(CoreML::Specification::ConcatLayerParams *this)
{
  *(void *)this = &unk_1EF0D23C0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::ConcatLayerParams *)&CoreML::Specification::_ConcatLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((unsigned char *)this + 16) = 0;
  *((_DWORD *)this + 5) = 0;
  return this;
}

void sub_19EB8FF64(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ConcatLayerParams::MergePartialFromCodedStream(CoreML::Specification::ConcatLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = *(unsigned __int8 **)a2;
      unint64_t v6 = *((void *)a2 + 1);
      if (*(void *)a2 < v6) {
        break;
      }
      LODWORD(v8) = 0;
LABEL_16:
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v8);
      unint64_t v9 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
      if ((v9 & 0x100000000) == 0) {
        goto LABEL_17;
      }
LABEL_8:
      if (v9 != 32 || (v9 & 0xFFFFFFF8) != 0x320) {
        goto LABEL_17;
      }
      int v11 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v11 < 0)
      {
        unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
        if ((v13 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t Varint64Fallback = *v11;
        *(void *)a2 = v11 + 1;
      }
      *((unsigned char *)this + 16) = Varint64Fallback != 0;
    }
    uint64_t v7 = v5 + 1;
    uint64_t v8 = *v5;
    if ((char)*v5 < 1)
    {
      if ((unint64_t)v7 < v6)
      {
        int v10 = *v7;
        if ((v8 & ~v10) >= 0x80)
        {
          *(void *)a2 = v5 + 2;
          unint64_t v9 = (v8 + (v10 << 7) - 128) | 0x100000000;
          goto LABEL_8;
        }
      }
      goto LABEL_16;
    }
    *(void *)a2 = v7;
    unint64_t v9 = v8 | 0x100000000;
    if ((v9 & 0x100000000) != 0) {
      goto LABEL_8;
    }
LABEL_17:
    if (!v9 || (v9 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v9, a3) & 1) == 0) {
      return 0;
    }
  }
}

CoreML::Specification::SplitLayerParams *CoreML::Specification::SplitLayerParams::SplitLayerParams(CoreML::Specification::SplitLayerParams *this)
{
  *(void *)this = &unk_1EF0D1E68;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::SplitLayerParams *)&CoreML::Specification::_SplitLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return this;
}

void sub_19EB90110(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::SplitLayerParams::MergePartialFromCodedStream(CoreML::Specification::SplitLayerParams *this, char **a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      int v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        *((void *)this + 2) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v12 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        *((void *)this + 2) = *v11;
        *a2 = v11 + 1;
      }
    }
    if (!v7 || (v7 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)return 0; {
  }
    }
}

CoreML::Specification::SequenceRepeatLayerParams *CoreML::Specification::SequenceRepeatLayerParams::SequenceRepeatLayerParams(CoreML::Specification::SequenceRepeatLayerParams *this)
{
  *(void *)this = &unk_1EF0D6DF8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::SequenceRepeatLayerParams *)&CoreML::Specification::_SequenceRepeatLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return this;
}

void sub_19EB90278(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::SequenceRepeatLayerParams::MergePartialFromCodedStream(CoreML::Specification::SequenceRepeatLayerParams *this, char **a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      int v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        *((void *)this + 2) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v12 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        *((void *)this + 2) = *v11;
        *a2 = v11 + 1;
      }
    }
    if (!v7 || (v7 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)return 0; {
  }
    }
}

CoreML::Specification::ReorganizeDataLayerParams *CoreML::Specification::ReorganizeDataLayerParams::ReorganizeDataLayerParams(CoreML::Specification::ReorganizeDataLayerParams *this)
{
  *(void *)this = &unk_1EF0D6C30;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::ReorganizeDataLayerParams *)&CoreML::Specification::_ReorganizeDataLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  return this;
}

void sub_19EB903DC(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ReorganizeDataLayerParams::MergePartialFromCodedStream(CoreML::Specification::ReorganizeDataLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(v6) = 0;
LABEL_6:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
          unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_20;
          }
          goto LABEL_7;
        }
        uint64_t v6 = *v5;
        if (*v5 < 1) {
          goto LABEL_6;
        }
        *a2 = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_20;
        }
LABEL_7:
        if (v7 >> 3 != 2) {
          break;
        }
        if (v7 != 16) {
          goto LABEL_20;
        }
        char v12 = *a2;
        if (*a2 >= a2[1] || *v12 < 0)
        {
          *((void *)this + 2) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
          if ((v14 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          *((void *)this + 2) = *v12;
          *a2 = v12 + 1;
        }
      }
      if (v7 >> 3 != 1 || v7 != 8) {
        break;
      }
      int v10 = *a2;
      if (*a2 >= a2[1])
      {
        int v11 = 0;
      }
      else
      {
        int v11 = *v10;
        if ((*v10 & 0x80000000) == 0)
        {
          *a2 = v10 + 1;
          goto LABEL_30;
        }
      }
      uint64_t Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a2, v11);
      int v11 = Varint32Fallback;
      if (Varint32Fallback < 0) {
        return 0;
      }
LABEL_30:
      *((_DWORD *)this + 6) = v11;
    }
LABEL_20:
    if (v7) {
      BOOL v13 = (v7 & 7) == 4;
    }
    else {
      BOOL v13 = 1;
    }
    if (v13) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::SliceLayerParams *CoreML::Specification::SliceLayerParams::SliceLayerParams(CoreML::Specification::SliceLayerParams *this)
{
  *(void *)this = &unk_1EF0D1DD0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::SliceLayerParams *)&CoreML::Specification::_SliceLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  return this;
}

void sub_19EB9059C(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::SliceLayerParams::MergePartialFromCodedStream(CoreML::Specification::SliceLayerParams *this, char **a2, unsigned int a3)
{
  while (1)
  {
LABEL_1:
    uint64_t v5 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(v6) = 0;
      break;
    }
    uint64_t v6 = *v5;
    if (*v5 < 1) {
      break;
    }
    *a2 = v5 + 1;
    unint64_t v7 = v6 | 0x100000000;
    if ((v7 & 0x100000000) != 0) {
      goto LABEL_7;
    }
LABEL_24:
    if (v7) {
      BOOL v16 = (v7 & 7) == 4;
    }
    else {
      BOOL v16 = 1;
    }
    if (v16) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)return 0; {
  }
    }
  unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
  unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
  if ((v7 & 0x100000000) == 0) {
    goto LABEL_24;
  }
LABEL_7:
  switch(v7 >> 3)
  {
    case 1u:
      if (v7 != 8) {
        goto LABEL_24;
      }
      unint64_t v9 = *a2;
      if (*a2 >= a2[1] || *v9 < 0)
      {
        unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v17 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t Varint64Fallback = *v9;
        *a2 = v9 + 1;
      }
      *((void *)this + 2) = Varint64Fallback;
      goto LABEL_1;
    case 2u:
      if (v7 != 16) {
        goto LABEL_24;
      }
      int v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        unint64_t v12 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v18 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t v12 = *v11;
        *a2 = v11 + 1;
      }
      *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v12;
      goto LABEL_1;
    case 3u:
      if (v7 != 24) {
        goto LABEL_24;
      }
      BOOL v13 = *a2;
      if (*a2 >= a2[1] || *v13 < 0)
      {
        *((void *)this + 4) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v19 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        *((void *)this + 4) = *v13;
        *a2 = v13 + 1;
      }
      goto LABEL_1;
    case 4u:
      if (v7 != 32) {
        goto LABEL_24;
      }
      char v14 = *a2;
      if (*a2 >= a2[1])
      {
        int v15 = 0;
      }
      else
      {
        int v15 = *v14;
        if ((*v14 & 0x80000000) == 0)
        {
          *a2 = v14 + 1;
          goto LABEL_38;
        }
      }
      uint64_t Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a2, v15);
      int v15 = Varint32Fallback;
      if ((Varint32Fallback & 0x8000000000000000) == 0)
      {
LABEL_38:
        *((_DWORD *)this + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v15;
        goto LABEL_1;
      }
      return 0;
    default:
      goto LABEL_24;
  }
}

CoreML::Specification::SimpleRecurrentLayerParams *CoreML::Specification::SimpleRecurrentLayerParams::SimpleRecurrentLayerParams(CoreML::Specification::SimpleRecurrentLayerParams *this)
{
  *(void *)this = &unk_1EF0D7480;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::SimpleRecurrentLayerParams *)&CoreML::Specification::_SimpleRecurrentLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *(_DWORD *)((char *)this + 6google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0u;
  *((_OWORD *)this + 1) = 0u;
  *((_DWORD *)this + 17) = 0;
  return this;
}

void sub_19EB90820(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::SimpleRecurrentLayerParams::MergePartialFromCodedStream(CoreML::Specification::SimpleRecurrentLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v5 = *(unsigned __int8 **)a2;
          unint64_t v6 = *((void *)a2 + 1);
          if (*(void *)a2 >= v6)
          {
            LODWORD(v8) = 0;
          }
          else
          {
            unint64_t v7 = v5 + 1;
            uint64_t v8 = *v5;
            if ((char)*v5 >= 1)
            {
              *(void *)a2 = v7;
              unint64_t v9 = v8 | 0x100000000;
              if ((v9 & 0x100000000) == 0) {
                goto LABEL_8;
              }
              goto LABEL_16;
            }
            if ((unint64_t)v7 < v6)
            {
              int v10 = *v7;
              if ((v8 & ~v10) >= 0x80)
              {
                *(void *)a2 = v5 + 2;
                unint64_t v9 = (v8 + (v10 << 7) - 128) | 0x100000000;
                goto LABEL_16;
              }
            }
          }
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v8);
          unint64_t v9 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
          if ((v9 & 0x100000000) == 0) {
            goto LABEL_8;
          }
LABEL_16:
          unsigned int v13 = v9 >> 3;
          if (v9 >> 3 > 0x13) {
            break;
          }
          if (v9 >> 3 > 9)
          {
            if (v13 == 10)
            {
              if (v9 != 82) {
                goto LABEL_8;
              }
              int v25 = (CoreML::Specification::ActivationParams *)*((void *)this + 2);
              if (!v25) {
                operator new();
              }
              BOOL v26 = *(char **)a2;
              if (*(void *)a2 >= *((void *)a2 + 1) || *v26 < 0)
              {
                int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                if (VarintSizeAsIntFallback < 0) {
                  return 0;
                }
              }
              else
              {
                int VarintSizeAsIntFallback = *v26;
                *(void *)a2 = v26 + 1;
              }
              int v39 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
              int v41 = *((_DWORD *)a2 + 13);
              BOOL v31 = __OFSUB__(v41--, 1);
              *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v41;
              if (v41 < 0 != v31) {
                return 0;
              }
              int v32 = v39;
              uint64_t result = CoreML::Specification::ActivationParams::MergePartialFromCodedStream(v25, a2, v40);
              if (!result) {
                return result;
              }
LABEL_87:
              if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v32)) {
                return 0;
              }
            }
            else
            {
              if (v13 != 15 || v9 != 120) {
                goto LABEL_8;
              }
              char v19 = *(char **)a2;
              if (*(void *)a2 >= *((void *)a2 + 1) || *v19 < 0)
              {
                unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
                if ((v36 & 1) == 0) {
                  return 0;
                }
              }
              else
              {
                unint64_t Varint64Fallback = *v19;
                *(void *)a2 = v19 + 1;
              }
              *((unsigned char *)this + 64) = Varint64Fallback != 0;
            }
          }
          else if (v13 == 1)
          {
            if (v9 != 8) {
              goto LABEL_8;
            }
            char v17 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v17 < 0)
            {
              *((void *)this + 6) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v37 & 1) == 0) {
                return 0;
              }
            }
            else
            {
              *((void *)this + 6) = *v17;
LABEL_59:
              *(void *)a2 = v17 + 1;
            }
          }
          else
          {
            if (v13 != 2 || v9 != 16) {
              goto LABEL_8;
            }
            char v17 = *(char **)a2;
            if (*(void *)a2 < *((void *)a2 + 1) && (*v17 & 0x80000000) == 0)
            {
              *((void *)this + 7) = *v17;
              goto LABEL_59;
            }
            *((void *)this + 7) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v35 & 1) == 0) {
              return 0;
            }
          }
        }
        if (v9 >> 3 > 0x1E) {
          break;
        }
        if (v13 != 20)
        {
          if (v13 != 30 || v9 != 242) {
            goto LABEL_8;
          }
          char v18 = (CoreML::Specification::WeightParams *)*((void *)this + 3);
          if (!v18) {
            operator new();
          }
          goto LABEL_52;
        }
        if (v9 != 160) {
          goto LABEL_8;
        }
        uint64_t v23 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v23 < 0)
        {
          unint64_t v24 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v38 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t v24 = *v23;
          *(void *)a2 = v23 + 1;
        }
        *((unsigned char *)this + 65) = v24 != 0;
      }
      if (v13 == 31) {
        break;
      }
      if (v13 == 32)
      {
        if (v9 == 2)
        {
          char v18 = (CoreML::Specification::WeightParams *)*((void *)this + 5);
          if (!v18) {
            operator new();
          }
LABEL_52:
          char v21 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v21 < 0)
          {
            int v22 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v22 < 0) {
              return 0;
            }
          }
          else
          {
            int v22 = *v21;
            *(void *)a2 = v21 + 1;
          }
          int v28 = google::protobuf::io::CodedInputStream::PushLimit(a2, v22);
          int v30 = *((_DWORD *)a2 + 13);
          BOOL v31 = __OFSUB__(v30--, 1);
          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v30;
          if (v30 < 0 != v31) {
            return 0;
          }
          int v32 = v28;
          uint64_t result = CoreML::Specification::WeightParams::MergePartialFromCodedStream(v18, a2, v29);
          if (!result) {
            return result;
          }
          goto LABEL_87;
        }
        goto LABEL_8;
      }
      if (v13 != 100 || v9 != 32) {
        goto LABEL_8;
      }
      char v14 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v14 < 0)
      {
        unint64_t v15 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
        if ((v34 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t v15 = *v14;
        *(void *)a2 = v14 + 1;
      }
      *((unsigned char *)this + 66) = v15 != 0;
    }
    if (v9 == 250)
    {
      char v18 = (CoreML::Specification::WeightParams *)*((void *)this + 4);
      if (!v18) {
        operator new();
      }
      goto LABEL_52;
    }
LABEL_8:
    if (!v9 || (v9 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v9, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_19EB90CA4(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C406A65A86DLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::GRULayerParams *CoreML::Specification::GRULayerParams::GRULayerParams(CoreML::Specification::GRULayerParams *this)
{
  *(void *)this = &unk_1EF0D0318;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  if (this != (CoreML::Specification::GRULayerParams *)&CoreML::Specification::_GRULayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *(_OWORD *)((char *)this + 115) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 4CoreML::Specification::NetworkUpdateParameters::New(this, 0) = 0u;
  *((_DWORD *)this + 3google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  return this;
}

void sub_19EB90D74(_Unwind_Exception *a1)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::NeuralNetworkPreprocessing>::TypeHandler>(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::GRULayerParams::MergePartialFromCodedStream(CoreML::Specification::GRULayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (CoreML::Specification::GRULayerParams *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        unint64_t v6 = *(unsigned __int8 **)a2;
        unint64_t v7 = *((void *)a2 + 1);
        if (*(void *)a2 >= v7)
        {
          LODWORD(v9) = 0;
        }
        else
        {
          uint64_t v8 = v6 + 1;
          uint64_t v9 = *v6;
          if ((char)*v6 >= 1)
          {
            *(void *)a2 = v8;
            unint64_t v10 = v9 | 0x100000000;
            if ((v10 & 0x100000000) == 0) {
              goto LABEL_9;
            }
            goto LABEL_17;
          }
          if ((unint64_t)v8 < v7)
          {
            int v11 = *v8;
            if ((v9 & ~v11) >= 0x80)
            {
              *(void *)a2 = v6 + 2;
              unint64_t v10 = (v9 + (v11 << 7) - 128) | 0x100000000;
              goto LABEL_17;
            }
          }
        }
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v9);
        unint64_t v10 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
        if ((v10 & 0x100000000) == 0) {
          goto LABEL_9;
        }
LABEL_17:
        unsigned int v14 = v10 >> 3;
        if (v10 >> 3 > 0x1F) {
          break;
        }
        if (v10 >> 3 <= 0xE)
        {
          if (v14 == 1)
          {
            if (v10 != 8) {
              goto LABEL_9;
            }
            int v25 = *(char **)a2;
            if (*(void *)a2 < *((void *)a2 + 1) && (*v25 & 0x80000000) == 0)
            {
              *((void *)this + 14) = *v25;
              goto LABEL_79;
            }
            *((void *)this + 14) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v40 & 1) == 0) {
              return 0;
            }
          }
          else if (v14 == 2)
          {
            if (v10 != 16) {
              goto LABEL_9;
            }
            int v25 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v25 < 0)
            {
              *((void *)this + 15) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v41 & 1) == 0) {
                return 0;
              }
            }
            else
            {
              *((void *)this + 15) = *v25;
LABEL_79:
              *(void *)a2 = v25 + 1;
            }
          }
          else
          {
            if (v14 != 10 || v10 != 82) {
              goto LABEL_9;
            }
            char v18 = google::protobuf::internal::RepeatedPtrFieldBase::Add<google::protobuf::RepeatedPtrField<CoreML::Specification::ActivationParams>::TypeHandler>(v5);
            char v19 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v19 < 0)
            {
              int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (VarintSizeAsIntFallback < 0) {
                return 0;
              }
            }
            else
            {
              int VarintSizeAsIntFallback = *v19;
              *(void *)a2 = v19 + 1;
            }
            int v35 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
            int v37 = *((_DWORD *)a2 + 13);
            BOOL v31 = __OFSUB__(v37--, 1);
            *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v37;
            if (v37 < 0 != v31) {
              return 0;
            }
            int v32 = v35;
            uint64_t result = CoreML::Specification::ActivationParams::MergePartialFromCodedStream((CoreML::Specification::ActivationParams *)v18, a2, v36);
            if (!result) {
              return result;
            }
LABEL_95:
            if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v32)) {
              return 0;
            }
          }
        }
        else
        {
          if (v10 >> 3 > 0x1D)
          {
            if (v14 == 30)
            {
              if (v10 == 242)
              {
                unint64_t v15 = (CoreML::Specification::WeightParams *)*((void *)this + 5);
                if (!v15) {
                  operator new();
                }
                goto LABEL_89;
              }
            }
            else if (v14 == 31 && v10 == 250)
            {
              unint64_t v15 = (CoreML::Specification::WeightParams *)*((void *)this + 6);
              if (!v15) {
                operator new();
              }
              goto LABEL_89;
            }
            goto LABEL_9;
          }
          if (v14 == 15)
          {
            if (v10 != 120) {
              goto LABEL_9;
            }
            uint64_t v23 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v23 < 0)
            {
              unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v39 & 1) == 0) {
                return 0;
              }
            }
            else
            {
              unint64_t Varint64Fallback = *v23;
              *(void *)a2 = v23 + 1;
            }
            *((unsigned char *)this + 128) = Varint64Fallback != 0;
          }
          else
          {
            if (v14 != 20 || v10 != 160) {
              goto LABEL_9;
            }
            BOOL v16 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v16 < 0)
            {
              unint64_t v17 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v34 & 1) == 0) {
                return 0;
              }
            }
            else
            {
              unint64_t v17 = *v16;
              *(void *)a2 = v16 + 1;
            }
            *((unsigned char *)this + 129) = v17 != 0;
          }
        }
      }
      if (v10 >> 3 <= 0x45) {
        break;
      }
      if (v10 >> 3 <= 0x47)
      {
        if (v14 == 70)
        {
          if (v10 == 50)
          {
            unint64_t v15 = (CoreML::Specification::WeightParams *)*((void *)this + 11);
            if (!v15) {
              operator new();
            }
            goto LABEL_89;
          }
        }
        else if (v10 == 58)
        {
          unint64_t v15 = (CoreML::Specification::WeightParams *)*((void *)this + 12);
          if (!v15) {
            operator new();
          }
          goto LABEL_89;
        }
        goto LABEL_9;
      }
      if (v14 == 72)
      {
        if (v10 == 66)
        {
          unint64_t v15 = (CoreML::Specification::WeightParams *)*((void *)this + 13);
          if (!v15) {
            operator new();
          }
          goto LABEL_89;
        }
        goto LABEL_9;
      }
      if (v14 != 100 || v10 != 32) {
        goto LABEL_9;
      }
      char v21 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v21 < 0)
      {
        unint64_t v22 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
        if ((v38 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t v22 = *v21;
        *(void *)a2 = v21 + 1;
      }
      *((unsigned char *)this + 13CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v22 != 0;
    }
    if (v10 >> 3 > 0x32)
    {
      if (v14 == 51)
      {
        if (v10 == 154)
        {
          unint64_t v15 = (CoreML::Specification::WeightParams *)*((void *)this + 9);
          if (!v15) {
            operator new();
          }
          goto LABEL_89;
        }
      }
      else if (v14 == 52 && v10 == 162)
      {
        unint64_t v15 = (CoreML::Specification::WeightParams *)*((void *)this + 10);
        if (!v15) {
          operator new();
        }
        goto LABEL_89;
      }
    }
    else if (v14 == 32)
    {
      if (v10 == 2)
      {
        unint64_t v15 = (CoreML::Specification::WeightParams *)*((void *)this + 7);
        if (!v15) {
          operator new();
        }
        goto LABEL_89;
      }
    }
    else if (v14 == 50 && v10 == 146)
    {
      unint64_t v15 = (CoreML::Specification::WeightParams *)*((void *)this + 8);
      if (!v15) {
        operator new();
      }
LABEL_89:
      BOOL v26 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v26 < 0)
      {
        int v27 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v27 < 0) {
          return 0;
        }
      }
      else
      {
        int v27 = *v26;
        *(void *)a2 = v26 + 1;
      }
      int v28 = google::protobuf::io::CodedInputStream::PushLimit(a2, v27);
      int v30 = *((_DWORD *)a2 + 13);
      BOOL v31 = __OFSUB__(v30--, 1);
      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v30;
      if (v30 < 0 != v31) {
        return 0;
      }
      int v32 = v28;
      uint64_t result = CoreML::Specification::WeightParams::MergePartialFromCodedStream(v15, a2, v29);
      if (!result) {
        return result;
      }
      goto LABEL_95;
    }
LABEL_9:
    if (!v10 || (v10 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v10, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_19EB9139C(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::UniDirectionalLSTMLayerParams *CoreML::Specification::UniDirectionalLSTMLayerParams::UniDirectionalLSTMLayerParams(CoreML::Specification::UniDirectionalLSTMLayerParams *this)
{
  *(void *)this = &unk_1EF0D8190;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  if (this != (CoreML::Specification::UniDirectionalLSTMLayerParams *)&CoreML::Specification::_UniDirectionalLSTMLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((unsigned char *)this + 72) = 0;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 4CoreML::Specification::NetworkUpdateParameters::New(this, 0) = 0u;
  *((_DWORD *)this + 19) = 0;
  return this;
}

void sub_19EB91464(_Unwind_Exception *a1)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::NeuralNetworkPreprocessing>::TypeHandler>(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::UniDirectionalLSTMLayerParams::MergePartialFromCodedStream(CoreML::Specification::UniDirectionalLSTMLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (CoreML::Specification::UniDirectionalLSTMLayerParams *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          unint64_t v6 = *(unsigned __int8 **)a2;
          unint64_t v7 = *((void *)a2 + 1);
          if (*(void *)a2 >= v7)
          {
            LODWORD(v9) = 0;
          }
          else
          {
            uint64_t v8 = v6 + 1;
            uint64_t v9 = *v6;
            if ((char)*v6 >= 1)
            {
              *(void *)a2 = v8;
              unint64_t v10 = v9 | 0x100000000;
              if ((v10 & 0x100000000) == 0) {
                goto LABEL_9;
              }
              goto LABEL_17;
            }
            if ((unint64_t)v8 < v7)
            {
              int v11 = *v8;
              if ((v9 & ~v11) >= 0x80)
              {
                *(void *)a2 = v6 + 2;
                unint64_t v10 = (v9 + (v11 << 7) - 128) | 0x100000000;
                goto LABEL_17;
              }
            }
          }
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v9);
          unint64_t v10 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
          if ((v10 & 0x100000000) == 0) {
            goto LABEL_9;
          }
LABEL_17:
          unsigned int v14 = v10 >> 3;
          if (v10 >> 3 <= 0xE) {
            break;
          }
          if (v14 == 15)
          {
            if (v10 != 122) {
              goto LABEL_9;
            }
            char v21 = (CoreML::Specification::LSTMParams *)*((void *)this + 5);
            if (!v21) {
              operator new();
            }
            unint64_t v22 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v22 < 0)
            {
              int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (VarintSizeAsIntFallback < 0) {
                return 0;
              }
            }
            else
            {
              int VarintSizeAsIntFallback = *v22;
              *(void *)a2 = v22 + 1;
            }
            int v36 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
            int v38 = *((_DWORD *)a2 + 13);
            BOOL v30 = __OFSUB__(v38--, 1);
            *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v38;
            if (v38 < 0 != v30) {
              return 0;
            }
            int v31 = v36;
            uint64_t result = CoreML::Specification::LSTMParams::MergePartialFromCodedStream(v21, a2, v37);
            if (!result) {
              return result;
            }
            goto LABEL_70;
          }
          if (v14 == 20)
          {
            if (v10 != 162) {
              goto LABEL_9;
            }
            unint64_t v24 = (CoreML::Specification::LSTMWeightParams *)*((void *)this + 6);
            if (!v24) {
              operator new();
            }
            int v25 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v25 < 0)
            {
              int v26 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (v26 < 0) {
                return 0;
              }
            }
            else
            {
              int v26 = *v25;
              *(void *)a2 = v25 + 1;
            }
            int v39 = google::protobuf::io::CodedInputStream::PushLimit(a2, v26);
            int v41 = *((_DWORD *)a2 + 13);
            BOOL v30 = __OFSUB__(v41--, 1);
            *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v41;
            if (v41 < 0 != v30) {
              return 0;
            }
            int v31 = v39;
            uint64_t result = CoreML::Specification::LSTMWeightParams::MergePartialFromCodedStream(v24, a2, v40);
            if (!result) {
              return result;
            }
LABEL_70:
            if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v31)) {
              return 0;
            }
          }
          else
          {
            if (v14 != 100 || v10 != 32) {
              goto LABEL_9;
            }
            char v18 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v18 < 0)
            {
              unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v33 & 1) == 0) {
                return 0;
              }
            }
            else
            {
              unint64_t Varint64Fallback = *v18;
              *(void *)a2 = v18 + 1;
            }
            *((unsigned char *)this + 72) = Varint64Fallback != 0;
          }
        }
        if (v14 != 1) {
          break;
        }
        if (v10 != 8) {
          goto LABEL_9;
        }
        int v20 = *(char **)a2;
        if (*(void *)a2 < *((void *)a2 + 1) && (*v20 & 0x80000000) == 0)
        {
          *((void *)this + 7) = *v20;
          goto LABEL_40;
        }
        *((void *)this + 7) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
        if ((v34 & 1) == 0) {
          return 0;
        }
      }
      if (v14 != 2) {
        break;
      }
      if (v10 != 16) {
        goto LABEL_9;
      }
      int v20 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v20 < 0)
      {
        *((void *)this + 8) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
        if ((v35 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        *((void *)this + 8) = *v20;
LABEL_40:
        *(void *)a2 = v20 + 1;
      }
    }
    if (v14 == 10 && v10 == 82)
    {
      unint64_t v15 = google::protobuf::internal::RepeatedPtrFieldBase::Add<google::protobuf::RepeatedPtrField<CoreML::Specification::ActivationParams>::TypeHandler>(v5);
      BOOL v16 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v16 < 0)
      {
        int v17 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v17 < 0) {
          return 0;
        }
      }
      else
      {
        int v17 = *v16;
        *(void *)a2 = v16 + 1;
      }
      int v27 = google::protobuf::io::CodedInputStream::PushLimit(a2, v17);
      int v29 = *((_DWORD *)a2 + 13);
      BOOL v30 = __OFSUB__(v29--, 1);
      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v29;
      if (v29 < 0 != v30) {
        return 0;
      }
      int v31 = v27;
      uint64_t result = CoreML::Specification::ActivationParams::MergePartialFromCodedStream((CoreML::Specification::ActivationParams *)v15, a2, v28);
      if (!result) {
        return result;
      }
      goto LABEL_70;
    }
LABEL_9:
    if (!v10 || (v10 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v10, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_19EB91840(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C405455452ELL);
  _Unwind_Resume(a1);
}

CoreML::Specification::BiDirectionalLSTMLayerParams *CoreML::Specification::BiDirectionalLSTMLayerParams::BiDirectionalLSTMLayerParams(CoreML::Specification::BiDirectionalLSTMLayerParams *this)
{
  *(void *)this = &unk_1EF0D7C38;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 4CoreML::Specification::NetworkUpdateParameters::New(this, 0) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  if (this != (CoreML::Specification::BiDirectionalLSTMLayerParams *)&CoreML::Specification::_BiDirectionalLSTMLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 11) = 0;
  *((void *)this + 12) = 0;
  *((_DWORD *)this + 28) = 0;
  *((void *)this + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  return this;
}

void sub_19EB91918(_Unwind_Exception *a1)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::NeuralNetworkPreprocessing>::TypeHandler>(v4);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::NeuralNetworkPreprocessing>::TypeHandler>(v2);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::NeuralNetworkPreprocessing>::TypeHandler>(v3);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::BiDirectionalLSTMLayerParams::MergePartialFromCodedStream(CoreML::Specification::BiDirectionalLSTMLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (google::protobuf::Arena **)((char *)this + 64);
  unint64_t v6 = (CoreML::Specification::BiDirectionalLSTMLayerParams *)((char *)this + 40);
  unint64_t v7 = (CoreML::Specification::BiDirectionalLSTMLayerParams *)((char *)this + 16);
  uint64_t v8 = (unint64_t *)((char *)this + 104);
  uint64_t v9 = (unint64_t *)((char *)this + 96);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        unint64_t v10 = *(unsigned __int8 **)a2;
        unint64_t v11 = *((void *)a2 + 1);
        if (*(void *)a2 >= v11)
        {
          LODWORD(v1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
        }
        else
        {
          unint64_t v12 = v10 + 1;
          uint64_t v13 = *v10;
          if ((char)*v10 >= 1)
          {
            *(void *)a2 = v12;
            unint64_t v14 = v13 | 0x100000000;
            if ((v14 & 0x100000000) == 0) {
              goto LABEL_9;
            }
            goto LABEL_17;
          }
          if ((unint64_t)v12 < v11)
          {
            int v15 = *v12;
            if ((v13 & ~v15) >= 0x80)
            {
              *(void *)a2 = v10 + 2;
              unint64_t v14 = (v13 + (v15 << 7) - 128) | 0x100000000;
              goto LABEL_17;
            }
          }
        }
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v13);
        unint64_t v14 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
        if ((v14 & 0x100000000) == 0) {
          goto LABEL_9;
        }
LABEL_17:
        unsigned int v18 = v14 >> 3;
        if (v14 >> 3 > 0xA) {
          break;
        }
        if (v18 == 1)
        {
          if (v14 != 8) {
            goto LABEL_9;
          }
          unint64_t v24 = *(char **)a2;
          if (*(void *)a2 < *((void *)a2 + 1) && (*v24 & 0x80000000) == 0)
          {
            unint64_t v25 = *v24;
            int v26 = v9;
            goto LABEL_38;
          }
          *uint64_t v9 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v39 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          if (v18 != 2)
          {
            if (v18 == 10 && v14 == 82)
            {
              char v19 = v7;
              goto LABEL_41;
            }
            goto LABEL_9;
          }
          if (v14 != 16) {
            goto LABEL_9;
          }
          unint64_t v24 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v24 < 0)
          {
            *uint64_t v8 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v40 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            unint64_t v25 = *v24;
            int v26 = v8;
LABEL_38:
            unint64_t *v26 = v25;
            *(void *)a2 = v24 + 1;
          }
        }
      }
      if (v18 == 11) {
        break;
      }
      if (v18 != 15)
      {
        if (v18 != 20 || v14 != 162) {
          goto LABEL_9;
        }
        int v20 = (int *)*((void *)this + 10);
        if (v20)
        {
          int v21 = *((_DWORD *)this + 18);
          int v22 = *v20;
          if (v21 < *v20)
          {
            *((_DWORD *)this + 18) = v21 + 1;
            Aligned = *(google::protobuf::Arena ***)&v20[2 * v21 + 2];
LABEL_72:
            int v50 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v50 < 0)
            {
              int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (VarintSizeAsIntFallback < 0) {
                return 0;
              }
            }
            else
            {
              int VarintSizeAsIntFallback = *v50;
              *(void *)a2 = v50 + 1;
            }
            int v52 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
            int v54 = *((_DWORD *)a2 + 13);
            BOOL v36 = __OFSUB__(v54--, 1);
            *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v54;
            if (v54 < 0 != v36) {
              return 0;
            }
            int v37 = v52;
            uint64_t result = CoreML::Specification::LSTMWeightParams::MergePartialFromCodedStream((CoreML::Specification::LSTMWeightParams *)Aligned, a2, v53);
            if (!result) {
              return result;
            }
            goto LABEL_78;
          }
          if (v22 != *((_DWORD *)this + 19))
          {
LABEL_67:
            *int v20 = v22 + 1;
            unint64_t v44 = *v5;
            if (!*v5) {
              operator new();
            }
            CoreML::Specification::LSTMWeightParams::LSTMWeightParams((CoreML::Specification::LSTMWeightParams *)Aligned);
            unint64_t v45 = google::protobuf::Arena::AllocateAligned(v44, 0, 24);
            char *v45 = (google::protobuf::Arena *)Aligned;
            v45[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::LSTMWeightParams>;
            char v46 = (unint64_t *)((char *)v44 + 32);
            do
              unint64_t v47 = __ldxr(v46);
            while (__stxr((unint64_t)v45, v46));
            v45[2] = (google::protobuf::Arena *)v47;
            uint64_t v48 = *((void *)this + 10);
            uint64_t v49 = *((int *)this + 18);
            *((_DWORD *)this + 18) = v49 + 1;
            *(void *)(v48 + 8 * v49 + 8) = Aligned;
            goto LABEL_72;
          }
        }
        else
        {
          int v21 = *((_DWORD *)this + 18);
          int v22 = *((_DWORD *)this + 19);
        }
        if (v21 <= v22)
        {
          google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)v5, v22 - v21 + 1);
          int v20 = (int *)*((void *)this + 10);
        }
        int v22 = *v20;
        goto LABEL_67;
      }
      if (v14 != 122) {
        goto LABEL_9;
      }
      BOOL v30 = (CoreML::Specification::LSTMParams *)*((void *)this + 11);
      if (!v30) {
        operator new();
      }
      int v31 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v31 < 0)
      {
        int v32 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v32 < 0) {
          return 0;
        }
      }
      else
      {
        int v32 = *v31;
        *(void *)a2 = v31 + 1;
      }
      int v41 = google::protobuf::io::CodedInputStream::PushLimit(a2, v32);
      int v43 = *((_DWORD *)a2 + 13);
      BOOL v36 = __OFSUB__(v43--, 1);
      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v43;
      if (v43 < 0 != v36) {
        return 0;
      }
      int v37 = v41;
      uint64_t result = CoreML::Specification::LSTMParams::MergePartialFromCodedStream(v30, a2, v42);
      if (!result) {
        return result;
      }
LABEL_78:
      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v37)) {
        return 0;
      }
    }
    if (v14 == 90)
    {
      char v19 = v6;
LABEL_41:
      int v27 = google::protobuf::internal::RepeatedPtrFieldBase::Add<google::protobuf::RepeatedPtrField<CoreML::Specification::ActivationParams>::TypeHandler>(v19);
      unsigned int v28 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v28 < 0)
      {
        int v29 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v29 < 0) {
          return 0;
        }
      }
      else
      {
        int v29 = *v28;
        *(void *)a2 = v28 + 1;
      }
      int v33 = google::protobuf::io::CodedInputStream::PushLimit(a2, v29);
      int v35 = *((_DWORD *)a2 + 13);
      BOOL v36 = __OFSUB__(v35--, 1);
      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v35;
      if (v35 < 0 != v36) {
        return 0;
      }
      int v37 = v33;
      uint64_t result = CoreML::Specification::ActivationParams::MergePartialFromCodedStream((CoreML::Specification::ActivationParams *)v27, a2, v34);
      if (!result) {
        return result;
      }
      goto LABEL_78;
    }
LABEL_9:
    if (!v14 || (v14 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v14, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_19EB91DD0(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C405455452ELL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::CustomLayerParams::MergePartialFromCodedStream(CoreML::Specification::CustomLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (std::string **)((char *)this + 80);
  unint64_t v6 = (void *)((char *)this + 48);
  unsigned int v61 = (CoreML::Specification::CustomLayerParams *)((char *)this + 16);
  int v62 = (google::protobuf::Arena **)((char *)this + 40);
  unint64_t v7 = (std::string **)((char *)this + 72);
  while (1)
  {
    while (1)
    {
      uint64_t v8 = *(unsigned __int8 **)a2;
      unint64_t v9 = *((void *)a2 + 1);
      if (*(void *)a2 >= v9)
      {
        LODWORD(v11) = 0;
LABEL_110:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v11);
        unint64_t v12 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
        if ((v12 & 0x100000000) == 0) {
          goto LABEL_111;
        }
        goto LABEL_9;
      }
      unint64_t v10 = v8 + 1;
      uint64_t v11 = *v8;
      if ((char)*v8 >= 1) {
        break;
      }
      if ((unint64_t)v10 >= v9) {
        goto LABEL_110;
      }
      int v13 = *v10;
      if ((v11 & ~v13) < 0x80) {
        goto LABEL_110;
      }
      *(void *)a2 = v8 + 2;
      unint64_t v12 = (v11 + (v13 << 7) - 128) | 0x100000000;
LABEL_9:
      unsigned int v14 = v12 >> 3;
      if (v12 >> 3 > 0x1D)
      {
        if (v14 != 30)
        {
          if (v14 != 40 || v12 != 66) {
            goto LABEL_111;
          }
          if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
            google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
          }
          if (!google::protobuf::internal::WireFormatLite::ReadBytes((unsigned __int8 **)a2, *v5)) {
            return 0;
          }
          char v19 = *v5;
          if (SHIBYTE((*v5)->__r_.__value_.__r.__words[2]) < 0)
          {
            char v19 = (std::string *)v19->__r_.__value_.__r.__words[0];
            std::string::size_type size = (*v5)->__r_.__value_.__l.__size_;
          }
          else
          {
            LODWORD(size) = HIBYTE((*v5)->__r_.__value_.__r.__words[2]);
          }
          int v38 = "CoreML.Specification.CustomLayerParams.description";
          goto LABEL_64;
        }
        if (v12 != 242) {
          goto LABEL_111;
        }
        uint64_t v63 = v62;
        unsigned int v64 = v6;
        memset(&__p, 0, sizeof(__p));
        int v67 = 0;
        int v21 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v21 < 0)
        {
          int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0) {
            goto LABEL_108;
          }
        }
        else
        {
          int VarintSizeAsIntFallback = *v21;
          *(void *)a2 = v21 + 1;
        }
        int v23 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        int v24 = *((_DWORD *)a2 + 13);
        BOOL v25 = __OFSUB__(v24--, 1);
        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v24;
        if (v24 < 0 != v25) {
          goto LABEL_108;
        }
        int v26 = v23;
        int v27 = *(unsigned char **)a2;
        if (*(void *)a2 < *((void *)a2 + 1) && *v27 == 10)
        {
          *(void *)a2 = v27 + 1;
          if (!google::protobuf::internal::WireFormatLite::ReadBytes((unsigned __int8 **)a2, &__p)) {
            goto LABEL_108;
          }
          if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) >= 1 && **(unsigned char **)a2 == 18)
          {
            uint64_t v28 = *(void *)v64[2];
            unint64_t v66 = google::protobuf::Map<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue>::operator[]((uint64_t)v64, (uint64_t)&__p);
            if (v28 != *(void *)v64[2])
            {
              google::protobuf::io::CodedInputStream::Skip(a2, 1u);
              int v29 = (CoreML::Specification::CustomLayerParams_CustomLayerParamValue *)v66;
              BOOL v30 = *(char **)a2;
              if (*(void *)a2 >= *((void *)a2 + 1) || *v30 < 0)
              {
                int v31 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                if ((v31 & 0x80000000) == 0) {
                  goto LABEL_84;
                }
              }
              else
              {
                int v31 = *v30;
                *(void *)a2 = v30 + 1;
LABEL_84:
                int v51 = google::protobuf::io::CodedInputStream::PushLimit(a2, v31);
                int v53 = *((_DWORD *)a2 + 13);
                BOOL v25 = __OFSUB__(v53--, 1);
                *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v53;
                if (v53 < 0 == v25)
                {
                  int v54 = v51;
                  if (CoreML::Specification::CustomLayerParams_CustomLayerParamValue::MergePartialFromCodedStream(v29, a2, v52))
                  {
                    if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v54))
                    {
                      if (*(void *)a2 == *((void *)a2 + 1)
                        && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
                      {
                        *((_DWORD *)a2 + 8) = 0;
                        *((unsigned char *)a2 + 36) = 1;
                        goto LABEL_90;
                      }
                      int BeyondKeyValuePair = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::Map<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue>>::ReadBeyondKeyValuePair((uint64_t)&v63, (uint64_t)a2);
LABEL_89:
                      if (BeyondKeyValuePair)
                      {
LABEL_90:
                        if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v26))
                        {
                          if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                            p_p = (unsigned int *)&__p;
                          }
                          else {
                            p_p = (unsigned int *)__p.__r_.__value_.__r.__words[0];
                          }
                          if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                            int v56 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
                          }
                          else {
                            int v56 = __p.__r_.__value_.__r.__words[1];
                          }
                          BOOL v57 = google::protobuf::internal::WireFormatLite::VerifyUtf8String(p_p, v56, 0, (uint64_t)"CoreML.Specification.CustomLayerParams.ParametersEntry.key");
                          BOOL v36 = v57;
                          if (v57) {
                            int v37 = 0;
                          }
                          else {
                            int v37 = 6;
                          }
LABEL_100:
                          if (v67) {
                            (*((void (**)(google::protobuf::Arena **))*v67 + 1))(v67);
                          }
                          goto LABEL_102;
                        }
                      }
LABEL_108:
                      BOOL v36 = 0;
                      int v37 = 6;
                      goto LABEL_100;
                    }
                  }
                }
              }
              google::protobuf::Map<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue>::erase(v64, (unsigned __int8 *)&__p);
              goto LABEL_108;
            }
          }
        }
        else
        {
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
          memset(&__p, 0, sizeof(__p));
        }
        int v32 = google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::NewEntry(*v63);
        if (v67 != v32)
        {
          if (v67) {
            (*((void (**)(void))*v67 + 1))();
          }
          int v67 = v32;
        }
        int v33 = (long long *)v32[2];
        *((_DWORD *)v32 + 10) |= 1u;
        if (v33 == &google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstance();
        }
        std::string::operator=((std::string *)v33, &__p);
        int BeyondKeyValuePair = (*((uint64_t (**)(google::protobuf::Arena **, google::protobuf::io::CodedInputStream *))*v67
                              + 11))(v67, a2);
        if (BeyondKeyValuePair) {
          v35.n128_f64[0] = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::Map<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue>>::UseKeyAndValueFromEntry((uint64_t)&v63);
        }
        if (!(*((uint64_t (**)(google::protobuf::Arena **, __n128))*v67 + 5))(v67, v35)) {
          goto LABEL_89;
        }
        int v67 = 0;
        if (BeyondKeyValuePair) {
          goto LABEL_90;
        }
        BOOL v36 = 0;
        int v37 = 6;
LABEL_102:
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
        if (!v36 && v37) {
          return 0;
        }
      }
      else if (v14 == 10)
      {
        if (v12 != 82) {
          goto LABEL_111;
        }
        if (*v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
        }
        if (!google::protobuf::internal::WireFormatLite::ReadBytes((unsigned __int8 **)a2, *v7)) {
          return 0;
        }
        char v19 = *v7;
        if (SHIBYTE((*v7)->__r_.__value_.__r.__words[2]) < 0)
        {
          char v19 = (std::string *)v19->__r_.__value_.__r.__words[0];
          std::string::size_type size = (*v7)->__r_.__value_.__l.__size_;
        }
        else
        {
          LODWORD(size) = HIBYTE((*v7)->__r_.__value_.__r.__words[2]);
        }
        int v38 = "CoreML.Specification.CustomLayerParams.className";
LABEL_64:
        if (!google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)v19, size, 0, (uint64_t)v38)) {
          return 0;
        }
      }
      else
      {
        if (v14 != 20 || v12 != 162) {
          goto LABEL_111;
        }
        int v15 = (int *)*((void *)this + 4);
        if (!v15)
        {
          int v16 = *((_DWORD *)this + 6);
          int v17 = *((_DWORD *)this + 7);
          goto LABEL_67;
        }
        int v16 = *((_DWORD *)this + 6);
        int v17 = *v15;
        if (v16 >= *v15)
        {
          if (v17 == *((_DWORD *)this + 7))
          {
LABEL_67:
            if (v16 <= v17)
            {
              google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(v61, v17 - v16 + 1);
              int v15 = (int *)*((void *)this + 4);
            }
            int v17 = *v15;
          }
          *int v15 = v17 + 1;
          char v39 = *(google::protobuf::Arena **)v61;
          if (!*(void *)v61) {
            operator new();
          }
          CoreML::Specification::WeightParams::WeightParams((CoreML::Specification::WeightParams *)Aligned);
          char v40 = google::protobuf::Arena::AllocateAligned(v39, 0, 24);
          *char v40 = (google::protobuf::Arena *)Aligned;
          v40[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::WeightParams>;
          int v41 = (unint64_t *)((char *)v39 + 32);
          do
            unint64_t v42 = __ldxr(v41);
          while (__stxr((unint64_t)v40, v41));
          v40[2] = (google::protobuf::Arena *)v42;
          uint64_t v43 = *((void *)this + 4);
          uint64_t v44 = *((int *)this + 6);
          *((_DWORD *)this + 6) = v44 + 1;
          *(void *)(v43 + 8 * v44 + 8) = Aligned;
          goto LABEL_75;
        }
        *((_DWORD *)this + 6) = v16 + 1;
        Aligned = *(google::protobuf::Arena ***)&v15[2 * v16 + 2];
LABEL_75:
        unint64_t v45 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v45 < 0)
        {
          int v46 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v46 < 0) {
            return 0;
          }
        }
        else
        {
          int v46 = *v45;
          *(void *)a2 = v45 + 1;
        }
        int v47 = google::protobuf::io::CodedInputStream::PushLimit(a2, v46);
        int v49 = *((_DWORD *)a2 + 13);
        BOOL v25 = __OFSUB__(v49--, 1);
        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v49;
        if (v49 < 0 != v25) {
          return 0;
        }
        int v50 = v47;
        if (!CoreML::Specification::WeightParams::MergePartialFromCodedStream((CoreML::Specification::WeightParams *)Aligned, a2, v48)|| !google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v50))
        {
          return 0;
        }
      }
    }
    *(void *)a2 = v10;
    unint64_t v12 = v11 | 0x100000000;
    if ((v12 & 0x100000000) != 0) {
      goto LABEL_9;
    }
LABEL_111:
    if (!v12 || (v12 & 7) == 4) {
      return 1;
    }
    if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v12, a3))return 0; {
  }
    }
}

void sub_19EB9252C(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::CopyLayerParams *CoreML::Specification::CopyLayerParams::CopyLayerParams(CoreML::Specification::CopyLayerParams *this)
{
  *(void *)this = &unk_1EF0D0B68;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::CopyLayerParams *)&CoreML::Specification::_CopyLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_19EB925C0(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::CopyLayerParams::MergePartialFromCodedStream(CoreML::Specification::CopyLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::BranchLayerParams *CoreML::Specification::BranchLayerParams::BranchLayerParams(CoreML::Specification::BranchLayerParams *this)
{
  *(void *)this = &unk_1EF0D2328;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::BranchLayerParams *)&CoreML::Specification::_BranchLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  return this;
}

void sub_19EB926B4(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::BranchLayerParams::MergePartialFromCodedStream(CoreML::Specification::BranchLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_21;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *(void *)a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        goto LABEL_21;
      }
LABEL_7:
      if (v7 >> 3 != 2) {
        break;
      }
      if (v7 != 18) {
        goto LABEL_21;
      }
      unint64_t v10 = (CoreML::Specification::NeuralNetwork *)*((void *)this + 3);
      if (!v10) {
        operator new();
      }
LABEL_18:
      uint64_t v11 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v11 < 0)
      {
        int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (VarintSizeAsIntFallback < 0) {
          return 0;
        }
      }
      else
      {
        int VarintSizeAsIntFallback = *v11;
        *(void *)a2 = v11 + 1;
      }
      int v14 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      int v16 = *((_DWORD *)a2 + 13);
      BOOL v17 = __OFSUB__(v16--, 1);
      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v16;
      if (v16 < 0 == v17)
      {
        int v18 = v14;
        uint64_t result = CoreML::Specification::NeuralNetwork::MergePartialFromCodedStream(v10, a2, v15);
        if (!result) {
          return result;
        }
        if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v18)) {
          continue;
        }
      }
      return 0;
    }
    if (v7 >> 3 == 1 && v7 == 10)
    {
      unint64_t v10 = (CoreML::Specification::NeuralNetwork *)*((void *)this + 2);
      if (!v10) {
        operator new();
      }
      goto LABEL_18;
    }
LABEL_21:
    if (!v7 || (v7 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_19EB92868(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C40280AC348);
  _Unwind_Resume(a1);
}

CoreML::Specification::LoopLayerParams *CoreML::Specification::LoopLayerParams::LoopLayerParams(CoreML::Specification::LoopLayerParams *this)
{
  *(void *)this = &unk_1EF0D0F90;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::LoopLayerParams *)&CoreML::Specification::_LoopLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  *((void *)this + 4) = 0;
  *((void *)this + 5) = 0;
  *((_DWORD *)this + 12) = 0;
  return this;
}

void sub_19EB92900(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::LoopLayerParams::MergePartialFromCodedStream(CoreML::Specification::LoopLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (std::string **)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      uint64_t v6 = *(char **)a2;
      if (*(void *)a2 < *((void *)a2 + 1)) {
        break;
      }
      LODWORD(v7) = 0;
LABEL_7:
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
      unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v8 & 0x100000000) == 0) {
        goto LABEL_28;
      }
LABEL_8:
      switch(v8 >> 3)
      {
        case 1u:
          if (v8 != 8) {
            goto LABEL_28;
          }
          unint64_t v10 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v10 < 0)
          {
            *((void *)this + 5) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v23 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            *((void *)this + 5) = *v10;
            *(void *)a2 = v10 + 1;
          }
          break;
        case 2u:
          if (v8 != 18) {
            goto LABEL_28;
          }
          if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
            google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena();
          }
          uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((unsigned __int8 **)a2, *v5);
          if (!result) {
            return result;
          }
          unint64_t v12 = (unsigned int *)*v5;
          if (SHIBYTE((*v5)->__r_.__value_.__r.__words[2]) < 0)
          {
            unint64_t v12 = *(unsigned int **)v12;
            std::string::size_type size = (*v5)->__r_.__value_.__l.__size_;
          }
          else
          {
            LODWORD(size) = HIBYTE((*v5)->__r_.__value_.__r.__words[2]);
          }
          if (!google::protobuf::internal::WireFormatLite::VerifyUtf8String(v12, size, 0, (uint64_t)"CoreML.Specification.LoopLayerParams.conditionVar"))return 0; {
          continue;
          }
        case 3u:
          if (v8 != 26) {
            goto LABEL_28;
          }
          int v14 = (CoreML::Specification::NeuralNetwork *)*((void *)this + 3);
          if (!v14) {
            operator new();
          }
          goto LABEL_25;
        case 4u:
          if (v8 != 34) {
            goto LABEL_28;
          }
          int v14 = (CoreML::Specification::NeuralNetwork *)*((void *)this + 4);
          if (!v14) {
            operator new();
          }
LABEL_25:
          unsigned int v15 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v15 < 0)
          {
            int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            int VarintSizeAsIntFallback = *v15;
            *(void *)a2 = v15 + 1;
          }
          int v18 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          int v20 = *((_DWORD *)a2 + 13);
          BOOL v21 = __OFSUB__(v20--, 1);
          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v20;
          if (v20 < 0 != v21) {
            return 0;
          }
          int v22 = v18;
          uint64_t result = CoreML::Specification::NeuralNetwork::MergePartialFromCodedStream(v14, a2, v19);
          if (!result) {
            return result;
          }
          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v22)) {
            return 0;
          }
          continue;
        default:
          goto LABEL_28;
      }
    }
    uint64_t v7 = *v6;
    if (*v6 < 1) {
      goto LABEL_7;
    }
    *(void *)a2 = v6 + 1;
    unint64_t v8 = v7 | 0x100000000;
    if ((v8 & 0x100000000) != 0) {
      goto LABEL_8;
    }
LABEL_28:
    if (!v8 || (v8 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_19EB92BA0(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C40280AC348);
  _Unwind_Resume(a1);
}

CoreML::Specification::LoopBreakLayerParams *CoreML::Specification::LoopBreakLayerParams::LoopBreakLayerParams(CoreML::Specification::LoopBreakLayerParams *this)
{
  *(void *)this = &unk_1EF0D4208;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::LoopBreakLayerParams *)&CoreML::Specification::_LoopBreakLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_19EB92C38(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::LoopBreakLayerParams::MergePartialFromCodedStream(CoreML::Specification::LoopBreakLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::LoopContinueLayerParams *CoreML::Specification::LoopContinueLayerParams::LoopContinueLayerParams(CoreML::Specification::LoopContinueLayerParams *this)
{
  *(void *)this = &unk_1EF0D5E88;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::LoopContinueLayerParams *)&CoreML::Specification::_LoopContinueLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_19EB92D28(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::LoopContinueLayerParams::MergePartialFromCodedStream(CoreML::Specification::LoopContinueLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::RangeStaticLayerParams *CoreML::Specification::RangeStaticLayerParams::RangeStaticLayerParams(CoreML::Specification::RangeStaticLayerParams *this)
{
  *(void *)this = &unk_1EF0D5768;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::RangeStaticLayerParams *)&CoreML::Specification::_RangeStaticLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  return this;
}

void sub_19EB92E18(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::RangeStaticLayerParams::MergePartialFromCodedStream(CoreML::Specification::RangeStaticLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v5 = *a2;
          if (*a2 >= a2[1])
          {
            LODWORD(v6) = 0;
LABEL_6:
            unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
            unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
            if ((v7 & 0x100000000) == 0) {
              goto LABEL_25;
            }
            goto LABEL_7;
          }
          uint64_t v6 = *v5;
          if (*v5 < 1) {
            goto LABEL_6;
          }
          *a2 = v5 + 1;
          unint64_t v7 = v6 | 0x100000000;
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_25;
          }
LABEL_7:
          unsigned int v9 = v7 >> 3;
          if (v7 >> 3 != 3) {
            break;
          }
          if (v7 != 29) {
            goto LABEL_25;
          }
          unsigned int v19 = 0;
          int v13 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v19);
            if (!result) {
              return result;
            }
            unsigned int v14 = v19;
          }
          else
          {
            unsigned int v14 = *v13;
            *a2 = (char *)(v13 + 1);
          }
          *((_DWORD *)this + 6) = v14;
        }
        if (v9 != 2) {
          break;
        }
        if (v7 != 21) {
          goto LABEL_25;
        }
        unsigned int v20 = 0;
        unsigned int v15 = (unsigned int *)*a2;
        if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
        {
          BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v20);
          if (!result) {
            return result;
          }
          unsigned int v16 = v20;
        }
        else
        {
          unsigned int v16 = *v15;
          *a2 = (char *)(v15 + 1);
        }
        *((_DWORD *)this + 5) = v16;
      }
      if (v9 != 1 || v7 != 13) {
        break;
      }
      unsigned int v21 = 0;
      uint64_t v11 = (unsigned int *)*a2;
      if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
      {
        BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v21);
        if (!result) {
          return result;
        }
        unsigned int v12 = v21;
      }
      else
      {
        unsigned int v12 = *v11;
        *a2 = (char *)(v11 + 1);
      }
      *((_DWORD *)this + 4) = v12;
    }
LABEL_25:
    if (v7) {
      BOOL v17 = (v7 & 7) == 4;
    }
    else {
      BOOL v17 = 1;
    }
    BOOL result = v17;
    if (v17) {
      return result;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::RangeDynamicLayerParams *CoreML::Specification::RangeDynamicLayerParams::RangeDynamicLayerParams(CoreML::Specification::RangeDynamicLayerParams *this)
{
  *(void *)this = &unk_1EF0D6050;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::RangeDynamicLayerParams *)&CoreML::Specification::_RangeDynamicLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return this;
}

void sub_19EB93034(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::RangeDynamicLayerParams::MergePartialFromCodedStream(CoreML::Specification::RangeDynamicLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(v6) = 0;
LABEL_6:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
          unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_20;
          }
          goto LABEL_7;
        }
        uint64_t v6 = *v5;
        if (*v5 < 1) {
          goto LABEL_6;
        }
        *a2 = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_20;
        }
LABEL_7:
        if (v7 >> 3 != 3) {
          break;
        }
        if (v7 != 29) {
          goto LABEL_20;
        }
        unsigned int v16 = 0;
        unsigned int v12 = (unsigned int *)*a2;
        if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
        {
          BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v16);
          if (!result) {
            return result;
          }
          unsigned int v13 = v16;
        }
        else
        {
          unsigned int v13 = *v12;
          *a2 = (char *)(v12 + 1);
        }
        *((_DWORD *)this + 5) = v13;
      }
      if (v7 >> 3 != 2 || v7 != 21) {
        break;
      }
      unsigned int v17 = 0;
      unint64_t v10 = (unsigned int *)*a2;
      if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
      {
        BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v17);
        if (!result) {
          return result;
        }
        unsigned int v11 = v17;
      }
      else
      {
        unsigned int v11 = *v10;
        *a2 = (char *)(v10 + 1);
      }
      *((_DWORD *)this + 4) = v11;
    }
LABEL_20:
    if (v7) {
      BOOL v14 = (v7 & 7) == 4;
    }
    else {
      BOOL v14 = 1;
    }
    BOOL result = v14;
    if (v14) {
      return result;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ClipLayerParams *CoreML::Specification::ClipLayerParams::ClipLayerParams(CoreML::Specification::ClipLayerParams *this)
{
  *(void *)this = &unk_1EF0D0AD0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::ClipLayerParams *)&CoreML::Specification::_ClipLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return this;
}

void sub_19EB931FC(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::ClipLayerParams::MergePartialFromCodedStream(CoreML::Specification::ClipLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(v6) = 0;
LABEL_6:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
          unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_20;
          }
          goto LABEL_7;
        }
        uint64_t v6 = *v5;
        if (*v5 < 1) {
          goto LABEL_6;
        }
        *a2 = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_20;
        }
LABEL_7:
        if (v7 >> 3 != 2) {
          break;
        }
        if (v7 != 21) {
          goto LABEL_20;
        }
        unsigned int v16 = 0;
        unsigned int v12 = (unsigned int *)*a2;
        if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
        {
          BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v16);
          if (!result) {
            return result;
          }
          unsigned int v13 = v16;
        }
        else
        {
          unsigned int v13 = *v12;
          *a2 = (char *)(v12 + 1);
        }
        *((_DWORD *)this + 5) = v13;
      }
      if (v7 >> 3 != 1 || v7 != 13) {
        break;
      }
      unsigned int v17 = 0;
      unint64_t v10 = (unsigned int *)*a2;
      if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
      {
        BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v17);
        if (!result) {
          return result;
        }
        unsigned int v11 = v17;
      }
      else
      {
        unsigned int v11 = *v10;
        *a2 = (char *)(v10 + 1);
      }
      *((_DWORD *)this + 4) = v11;
    }
LABEL_20:
    if (v7) {
      BOOL v14 = (v7 & 7) == 4;
    }
    else {
      BOOL v14 = 1;
    }
    BOOL result = v14;
    if (v14) {
      return result;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::CeilLayerParams *CoreML::Specification::CeilLayerParams::CeilLayerParams(CoreML::Specification::CeilLayerParams *this)
{
  *(void *)this = &unk_1EF0D0A38;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::CeilLayerParams *)&CoreML::Specification::_CeilLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_19EB933C0(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::CeilLayerParams::MergePartialFromCodedStream(CoreML::Specification::CeilLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::FloorLayerParams *CoreML::Specification::FloorLayerParams::FloorLayerParams(CoreML::Specification::FloorLayerParams *this)
{
  *(void *)this = &unk_1EF0D1878;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::FloorLayerParams *)&CoreML::Specification::_FloorLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_19EB934B0(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::FloorLayerParams::MergePartialFromCodedStream(CoreML::Specification::FloorLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::SignLayerParams *CoreML::Specification::SignLayerParams::SignLayerParams(CoreML::Specification::SignLayerParams *this)
{
  *(void *)this = &unk_1EF0D10C0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::SignLayerParams *)&CoreML::Specification::_SignLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_19EB935A0(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::SignLayerParams::MergePartialFromCodedStream(CoreML::Specification::SignLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::RoundLayerParams *CoreML::Specification::RoundLayerParams::RoundLayerParams(CoreML::Specification::RoundLayerParams *this)
{
  *(void *)this = &unk_1EF0D1CA0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::RoundLayerParams *)&CoreML::Specification::_RoundLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_19EB93690(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::RoundLayerParams::MergePartialFromCodedStream(CoreML::Specification::RoundLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::Exp2LayerParams *CoreML::Specification::Exp2LayerParams::Exp2LayerParams(CoreML::Specification::Exp2LayerParams *this)
{
  *(void *)this = &unk_1EF0D0DC8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::Exp2LayerParams *)&CoreML::Specification::_Exp2LayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_19EB93780(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::Exp2LayerParams::MergePartialFromCodedStream(CoreML::Specification::Exp2LayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::SinLayerParams *CoreML::Specification::SinLayerParams::SinLayerParams(CoreML::Specification::SinLayerParams *this)
{
  *(void *)this = &unk_1EF0D0610;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::SinLayerParams *)&CoreML::Specification::_SinLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_19EB93870(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::SinLayerParams::MergePartialFromCodedStream(CoreML::Specification::SinLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::CosLayerParams *CoreML::Specification::CosLayerParams::CosLayerParams(CoreML::Specification::CosLayerParams *this)
{
  *(void *)this = &unk_1EF0D0150;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::CosLayerParams *)&CoreML::Specification::_CosLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_19EB93960(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::CosLayerParams::MergePartialFromCodedStream(CoreML::Specification::CosLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::TanLayerParams *CoreML::Specification::TanLayerParams::TanLayerParams(CoreML::Specification::TanLayerParams *this)
{
  *(void *)this = &unk_1EF0D06A8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::TanLayerParams *)&CoreML::Specification::_TanLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_19EB93A50(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::TanLayerParams::MergePartialFromCodedStream(CoreML::Specification::TanLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::AsinLayerParams *CoreML::Specification::AsinLayerParams::AsinLayerParams(CoreML::Specification::AsinLayerParams *this)
{
  *(void *)this = &unk_1EF0D0870;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::AsinLayerParams *)&CoreML::Specification::_AsinLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_19EB93B40(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::AsinLayerParams::MergePartialFromCodedStream(CoreML::Specification::AsinLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::AcosLayerParams *CoreML::Specification::AcosLayerParams::AcosLayerParams(CoreML::Specification::AcosLayerParams *this)
{
  *(void *)this = &unk_1EF0D0740;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::AcosLayerParams *)&CoreML::Specification::_AcosLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_19EB93C30(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::AcosLayerParams::MergePartialFromCodedStream(CoreML::Specification::AcosLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::AtanLayerParams *CoreML::Specification::AtanLayerParams::AtanLayerParams(CoreML::Specification::AtanLayerParams *this)
{
  *(void *)this = &unk_1EF0D0908;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::AtanLayerParams *)&CoreML::Specification::_AtanLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_19EB93D20(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::AtanLayerParams::MergePartialFromCodedStream(CoreML::Specification::AtanLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::SinhLayerParams *CoreML::Specification::SinhLayerParams::SinhLayerParams(CoreML::Specification::SinhLayerParams *this)
{
  *(void *)this = &unk_1EF0D1158;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::SinhLayerParams *)&CoreML::Specification::_SinhLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_19EB93E10(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::SinhLayerParams::MergePartialFromCodedStream(CoreML::Specification::SinhLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::CoshLayerParams *CoreML::Specification::CoshLayerParams::CoshLayerParams(CoreML::Specification::CoshLayerParams *this)
{
  *(void *)this = &unk_1EF0D0C00;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::CoshLayerParams *)&CoreML::Specification::_CoshLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_19EB93F00(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::CoshLayerParams::MergePartialFromCodedStream(CoreML::Specification::CoshLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::TanhLayerParams *CoreML::Specification::TanhLayerParams::TanhLayerParams(CoreML::Specification::TanhLayerParams *this)
{
  *(void *)this = &unk_1EF0D1288;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::TanhLayerParams *)&CoreML::Specification::_TanhLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_19EB93FF0(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::TanhLayerParams::MergePartialFromCodedStream(CoreML::Specification::TanhLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::AsinhLayerParams *CoreML::Specification::AsinhLayerParams::AsinhLayerParams(CoreML::Specification::AsinhLayerParams *this)
{
  *(void *)this = &unk_1EF0D16B0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::AsinhLayerParams *)&CoreML::Specification::_AsinhLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_19EB940E0(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::AsinhLayerParams::MergePartialFromCodedStream(CoreML::Specification::AsinhLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::AcoshLayerParams *CoreML::Specification::AcoshLayerParams::AcoshLayerParams(CoreML::Specification::AcoshLayerParams *this)
{
  *(void *)this = &unk_1EF0D1450;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::AcoshLayerParams *)&CoreML::Specification::_AcoshLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_19EB941D0(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::AcoshLayerParams::MergePartialFromCodedStream(CoreML::Specification::AcoshLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::AtanhLayerParams *CoreML::Specification::AtanhLayerParams::AtanhLayerParams(CoreML::Specification::AtanhLayerParams *this)
{
  *(void *)this = &unk_1EF0D1748;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::AtanhLayerParams *)&CoreML::Specification::_AtanhLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_19EB942C0(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::AtanhLayerParams::MergePartialFromCodedStream(CoreML::Specification::AtanhLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::ErfLayerParams *CoreML::Specification::ErfLayerParams::ErfLayerParams(CoreML::Specification::ErfLayerParams *this)
{
  *(void *)this = &unk_1EF0D0280;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::ErfLayerParams *)&CoreML::Specification::_ErfLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_19EB943B0(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ErfLayerParams::MergePartialFromCodedStream(CoreML::Specification::ErfLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::GeluLayerParams *CoreML::Specification::GeluLayerParams::GeluLayerParams(CoreML::Specification::GeluLayerParams *this)
{
  *(void *)this = &unk_1EF0D0E60;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::GeluLayerParams *)&CoreML::Specification::_GeluLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  return this;
}

void sub_19EB944A0(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::GeluLayerParams::MergePartialFromCodedStream(CoreML::Specification::GeluLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      unsigned int v11 = *a2;
      if (*a2 >= a2[1])
      {
        int v12 = 0;
      }
      else
      {
        int v12 = *v11;
        if ((*v11 & 0x80000000) == 0)
        {
          *a2 = v11 + 1;
          goto LABEL_22;
        }
      }
      uint64_t Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a2, v12);
      int v12 = Varint32Fallback;
      if (Varint32Fallback < 0) {
        return 0;
      }
LABEL_22:
      *((_DWORD *)this + 4) = v12;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    if (v10) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::EqualLayerParams *CoreML::Specification::EqualLayerParams::EqualLayerParams(CoreML::Specification::EqualLayerParams *this)
{
  *(void *)this = &unk_1EF0D17E0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::EqualLayerParams *)&CoreML::Specification::_EqualLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  return this;
}

void sub_19EB9460C(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::EqualLayerParams::MergePartialFromCodedStream(CoreML::Specification::EqualLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 13 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      unsigned int v14 = 0;
      int v12 = (unsigned int *)*a2;
      if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
      {
        BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v14);
        if (!result) {
          return result;
        }
        unsigned int v13 = v14;
      }
      else
      {
        unsigned int v13 = *v12;
        *a2 = (char *)(v12 + 1);
      }
      *((_DWORD *)this + 4) = v13;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    BOOL result = v10;
    if (v10) {
      return result;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::NotEqualLayerParams *CoreML::Specification::NotEqualLayerParams::NotEqualLayerParams(CoreML::Specification::NotEqualLayerParams *this)
{
  *(void *)this = &unk_1EF0D3C18;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::NotEqualLayerParams *)&CoreML::Specification::_NotEqualLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  return this;
}

void sub_19EB9477C(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::NotEqualLayerParams::MergePartialFromCodedStream(CoreML::Specification::NotEqualLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 13 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      unsigned int v14 = 0;
      int v12 = (unsigned int *)*a2;
      if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
      {
        BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v14);
        if (!result) {
          return result;
        }
        unsigned int v13 = v14;
      }
      else
      {
        unsigned int v13 = *v12;
        *a2 = (char *)(v12 + 1);
      }
      *((_DWORD *)this + 4) = v13;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    BOOL result = v10;
    if (v10) {
      return result;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::LessThanLayerParams *CoreML::Specification::LessThanLayerParams::LessThanLayerParams(CoreML::Specification::LessThanLayerParams *this)
{
  *(void *)this = &unk_1EF0D3AE8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::LessThanLayerParams *)&CoreML::Specification::_LessThanLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  return this;
}

void sub_19EB948EC(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::LessThanLayerParams::MergePartialFromCodedStream(CoreML::Specification::LessThanLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 21 || (v7 & 0xFFFFFFF8) != 16) {
        break;
      }
      unsigned int v14 = 0;
      int v12 = (unsigned int *)*a2;
      if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
      {
        BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v14);
        if (!result) {
          return result;
        }
        unsigned int v13 = v14;
      }
      else
      {
        unsigned int v13 = *v12;
        *a2 = (char *)(v12 + 1);
      }
      *((_DWORD *)this + 4) = v13;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    BOOL result = v10;
    if (v10) {
      return result;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::LessEqualLayerParams *CoreML::Specification::LessEqualLayerParams::LessEqualLayerParams(CoreML::Specification::LessEqualLayerParams *this)
{
  *(void *)this = &unk_1EF0D40D8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::LessEqualLayerParams *)&CoreML::Specification::_LessEqualLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  return this;
}

void sub_19EB94A5C(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::LessEqualLayerParams::MergePartialFromCodedStream(CoreML::Specification::LessEqualLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 21 || (v7 & 0xFFFFFFF8) != 16) {
        break;
      }
      unsigned int v14 = 0;
      int v12 = (unsigned int *)*a2;
      if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
      {
        BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v14);
        if (!result) {
          return result;
        }
        unsigned int v13 = v14;
      }
      else
      {
        unsigned int v13 = *v12;
        *a2 = (char *)(v12 + 1);
      }
      *((_DWORD *)this + 4) = v13;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    BOOL result = v10;
    if (v10) {
      return result;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::GreaterThanLayerParams *CoreML::Specification::GreaterThanLayerParams::GreaterThanLayerParams(CoreML::Specification::GreaterThanLayerParams *this)
{
  *(void *)this = &unk_1EF0D5508;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::GreaterThanLayerParams *)&CoreML::Specification::_GreaterThanLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  return this;
}

void sub_19EB94BCC(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::GreaterThanLayerParams::MergePartialFromCodedStream(CoreML::Specification::GreaterThanLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 21 || (v7 & 0xFFFFFFF8) != 16) {
        break;
      }
      unsigned int v14 = 0;
      int v12 = (unsigned int *)*a2;
      if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
      {
        BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v14);
        if (!result) {
          return result;
        }
        unsigned int v13 = v14;
      }
      else
      {
        unsigned int v13 = *v12;
        *a2 = (char *)(v12 + 1);
      }
      *((_DWORD *)this + 4) = v13;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    BOOL result = v10;
    if (v10) {
      return result;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::GreaterEqualLayerParams *CoreML::Specification::GreaterEqualLayerParams::GreaterEqualLayerParams(CoreML::Specification::GreaterEqualLayerParams *this)
{
  *(void *)this = &unk_1EF0D5CC0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::GreaterEqualLayerParams *)&CoreML::Specification::_GreaterEqualLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  return this;
}

void sub_19EB94D3C(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::GreaterEqualLayerParams::MergePartialFromCodedStream(CoreML::Specification::GreaterEqualLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 21 || (v7 & 0xFFFFFFF8) != 16) {
        break;
      }
      unsigned int v14 = 0;
      int v12 = (unsigned int *)*a2;
      if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
      {
        BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v14);
        if (!result) {
          return result;
        }
        unsigned int v13 = v14;
      }
      else
      {
        unsigned int v13 = *v12;
        *a2 = (char *)(v12 + 1);
      }
      *((_DWORD *)this + 4) = v13;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    BOOL result = v10;
    if (v10) {
      return result;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::LogicalOrLayerParams *CoreML::Specification::LogicalOrLayerParams::LogicalOrLayerParams(CoreML::Specification::LogicalOrLayerParams *this)
{
  *(void *)this = &unk_1EF0D4170;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::LogicalOrLayerParams *)&CoreML::Specification::_LogicalOrLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_19EB94EAC(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::LogicalOrLayerParams::MergePartialFromCodedStream(CoreML::Specification::LogicalOrLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::LogicalXorLayerParams *CoreML::Specification::LogicalXorLayerParams::LogicalXorLayerParams(CoreML::Specification::LogicalXorLayerParams *this)
{
  *(void *)this = &unk_1EF0D4D50;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::LogicalXorLayerParams *)&CoreML::Specification::_LogicalXorLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_19EB94F9C(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::LogicalXorLayerParams::MergePartialFromCodedStream(CoreML::Specification::LogicalXorLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::LogicalNotLayerParams *CoreML::Specification::LogicalNotLayerParams::LogicalNotLayerParams(CoreML::Specification::LogicalNotLayerParams *this)
{
  *(void *)this = &unk_1EF0D4CB8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::LogicalNotLayerParams *)&CoreML::Specification::_LogicalNotLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_19EB9508C(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::LogicalNotLayerParams::MergePartialFromCodedStream(CoreML::Specification::LogicalNotLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::LogicalAndLayerParams *CoreML::Specification::LogicalAndLayerParams::LogicalAndLayerParams(CoreML::Specification::LogicalAndLayerParams *this)
{
  *(void *)this = &unk_1EF0D4C20;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::LogicalAndLayerParams *)&CoreML::Specification::_LogicalAndLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_19EB9517C(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::LogicalAndLayerParams::MergePartialFromCodedStream(CoreML::Specification::LogicalAndLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::ModBroadcastableLayerParams *CoreML::Specification::ModBroadcastableLayerParams::ModBroadcastableLayerParams(CoreML::Specification::ModBroadcastableLayerParams *this)
{
  *(void *)this = &unk_1EF0D7940;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::ModBroadcastableLayerParams *)&CoreML::Specification::_ModBroadcastableLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_19EB9526C(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ModBroadcastableLayerParams::MergePartialFromCodedStream(CoreML::Specification::ModBroadcastableLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::MinBroadcastableLayerParams *CoreML::Specification::MinBroadcastableLayerParams::MinBroadcastableLayerParams(CoreML::Specification::MinBroadcastableLayerParams *this)
{
  *(void *)this = &unk_1EF0D78A8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::MinBroadcastableLayerParams *)&CoreML::Specification::_MinBroadcastableLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_19EB9535C(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::MinBroadcastableLayerParams::MergePartialFromCodedStream(CoreML::Specification::MinBroadcastableLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::MaxBroadcastableLayerParams *CoreML::Specification::MaxBroadcastableLayerParams::MaxBroadcastableLayerParams(CoreML::Specification::MaxBroadcastableLayerParams *this)
{
  *(void *)this = &unk_1EF0D7810;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::MaxBroadcastableLayerParams *)&CoreML::Specification::_MaxBroadcastableLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_19EB9544C(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::MaxBroadcastableLayerParams::MergePartialFromCodedStream(CoreML::Specification::MaxBroadcastableLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::AddBroadcastableLayerParams *CoreML::Specification::AddBroadcastableLayerParams::AddBroadcastableLayerParams(CoreML::Specification::AddBroadcastableLayerParams *this)
{
  *(void *)this = &unk_1EF0D75B0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::AddBroadcastableLayerParams *)&CoreML::Specification::_AddBroadcastableLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_19EB9553C(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::AddBroadcastableLayerParams::MergePartialFromCodedStream(CoreML::Specification::AddBroadcastableLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::PowBroadcastableLayerParams *CoreML::Specification::PowBroadcastableLayerParams::PowBroadcastableLayerParams(CoreML::Specification::PowBroadcastableLayerParams *this)
{
  *(void *)this = &unk_1EF0D79D8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::PowBroadcastableLayerParams *)&CoreML::Specification::_PowBroadcastableLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_19EB9562C(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::PowBroadcastableLayerParams::MergePartialFromCodedStream(CoreML::Specification::PowBroadcastableLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::DivideBroadcastableLayerParams *CoreML::Specification::DivideBroadcastableLayerParams::DivideBroadcastableLayerParams(CoreML::Specification::DivideBroadcastableLayerParams *this)
{
  *(void *)this = &unk_1EF0D82C0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::DivideBroadcastableLayerParams *)&CoreML::Specification::_DivideBroadcastableLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_19EB9571C(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::DivideBroadcastableLayerParams::MergePartialFromCodedStream(CoreML::Specification::DivideBroadcastableLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::FloorDivBroadcastableLayerParams *CoreML::Specification::FloorDivBroadcastableLayerParams::FloorDivBroadcastableLayerParams(CoreML::Specification::FloorDivBroadcastableLayerParams *this)
{
  *(void *)this = &unk_1EF0D8818;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::FloorDivBroadcastableLayerParams *)&CoreML::Specification::_FloorDivBroadcastableLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_19EB9580C(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::FloorDivBroadcastableLayerParams::MergePartialFromCodedStream(CoreML::Specification::FloorDivBroadcastableLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::MultiplyBroadcastableLayerParams *CoreML::Specification::MultiplyBroadcastableLayerParams::MultiplyBroadcastableLayerParams(CoreML::Specification::MultiplyBroadcastableLayerParams *this)
{
  *(void *)this = &unk_1EF0D8948;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::MultiplyBroadcastableLayerParams *)&CoreML::Specification::_MultiplyBroadcastableLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_19EB958FC(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::MultiplyBroadcastableLayerParams::MergePartialFromCodedStream(CoreML::Specification::MultiplyBroadcastableLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::SubtractBroadcastableLayerParams *CoreML::Specification::SubtractBroadcastableLayerParams::SubtractBroadcastableLayerParams(CoreML::Specification::SubtractBroadcastableLayerParams *this)
{
  *(void *)this = &unk_1EF0D8BA8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::SubtractBroadcastableLayerParams *)&CoreML::Specification::_SubtractBroadcastableLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_19EB959EC(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::SubtractBroadcastableLayerParams::MergePartialFromCodedStream(CoreML::Specification::SubtractBroadcastableLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::TileLayerParams *CoreML::Specification::TileLayerParams::TileLayerParams(CoreML::Specification::TileLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1EF0D1320;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::TileLayerParams *)&CoreML::Specification::_TileLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 9) = 0;
  return this;
}

void sub_19EB95AE8(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::TileLayerParams::MergePartialFromCodedStream(CoreML::Specification::TileLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      BOOL v6 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      if ((v8 & 0xFFFFFFF8) != 8) {
        break;
      }
      if (v8 == 8)
      {
        if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned long long,(google::protobuf::internal::WireFormatLite::FieldType)4>(0xAu, a2, (uint64_t)v5) & 1) == 0)return 0; {
      }
        }
      else
      {
        if (v8 != 10) {
          break;
        }
        BOOL v10 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v10 < 0)
        {
          int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0) {
            return 0;
          }
        }
        else
        {
          int VarintSizeAsIntFallback = *v10;
          *(void *)a2 = v10 + 1;
        }
        int v13 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        while (1)
        {
          int v14 = *((_DWORD *)a2 + 10);
          uint64_t v15 = *((int *)a2 + 11);
          unint64_t v16 = *((void *)a2 + 1);
          int v17 = *((_DWORD *)a2 + 6);
          if (v14 == 0x7FFFFFFF) {
            break;
          }
          int v18 = *(char **)a2;
          if ((int)(v14 - v17 + v15 + v16 - *(void *)a2) < 1) {
            break;
          }
          if ((unint64_t)v18 >= v16 || *v18 < 0)
          {
            unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v21 & 1) == 0) {
              return 0;
            }
            unint64_t v19 = Varint64Fallback;
          }
          else
          {
            unint64_t v19 = *v18;
            *(void *)a2 = v18 + 1;
          }
          signed int v22 = *((_DWORD *)this + 4);
          if (v22 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<double>::Reserve(v5, v22 + 1);
            signed int v22 = *v5;
          }
          uint64_t v23 = *((void *)this + 3);
          *((_DWORD *)this + 4) = v22 + 1;
          *(void *)(v23 + 8 * v22 + 8) = v19;
        }
        *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v13;
        uint64_t v24 = v16 + v15;
        *((void *)a2 + 1) = v16 + v15;
        int v25 = *((_DWORD *)a2 + 12);
        if (v25 >= v13) {
          int v25 = v13;
        }
        BOOL v26 = __OFSUB__(v17, v25);
        int v27 = v17 - v25;
        if ((v27 < 0) ^ v26 | (v27 == 0)) {
          int v27 = 0;
        }
        else {
          *((void *)a2 + 1) = v24 - v27;
        }
        *((_DWORD *)a2 + 11) = v27;
        *((unsigned char *)a2 + 36) = 0;
      }
    }
    if (v8) {
      BOOL v12 = (v8 & 7) == 4;
    }
    else {
      BOOL v12 = 1;
    }
    if (v12) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::StackLayerParams *CoreML::Specification::StackLayerParams::StackLayerParams(CoreML::Specification::StackLayerParams *this)
{
  *(void *)this = &unk_1EF0D1F00;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::StackLayerParams *)&CoreML::Specification::_StackLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return this;
}

void sub_19EB95D7C(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::StackLayerParams::MergePartialFromCodedStream(CoreML::Specification::StackLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      unsigned int v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v13 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t Varint64Fallback = *v11;
        *a2 = v11 + 1;
      }
      *((void *)this + 2) = Varint64Fallback;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    if (v10) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::GatherLayerParams *CoreML::Specification::GatherLayerParams::GatherLayerParams(CoreML::Specification::GatherLayerParams *this)
{
  *(void *)this = &unk_1EF0D26B8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::GatherLayerParams *)&CoreML::Specification::_GatherLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return this;
}

void sub_19EB95EE4(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::GatherLayerParams::MergePartialFromCodedStream(CoreML::Specification::GatherLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      unsigned int v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v13 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t Varint64Fallback = *v11;
        *a2 = v11 + 1;
      }
      *((void *)this + 2) = Varint64Fallback;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    if (v10) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ScatterLayerParams *CoreML::Specification::ScatterLayerParams::ScatterLayerParams(CoreML::Specification::ScatterLayerParams *this)
{
  *(void *)this = &unk_1EF0D3460;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::ScatterLayerParams *)&CoreML::Specification::_ScatterLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  return this;
}

void sub_19EB96048(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ScatterLayerParams::MergePartialFromCodedStream(CoreML::Specification::ScatterLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(v6) = 0;
LABEL_6:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
          unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_20;
          }
          goto LABEL_7;
        }
        uint64_t v6 = *v5;
        if (*v5 < 1) {
          goto LABEL_6;
        }
        *a2 = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_20;
        }
LABEL_7:
        if (v7 >> 3 != 2) {
          break;
        }
        if (v7 != 16) {
          goto LABEL_20;
        }
        BOOL v12 = *a2;
        if (*a2 >= a2[1])
        {
          int v13 = 0;
        }
        else
        {
          int v13 = *v12;
          if ((*v12 & 0x80000000) == 0)
          {
            *a2 = v12 + 1;
            goto LABEL_30;
          }
        }
        uint64_t Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a2, v13);
        int v13 = Varint32Fallback;
        if (Varint32Fallback < 0) {
          return 0;
        }
LABEL_30:
        *((_DWORD *)this + 6) = v13;
      }
      if (v7 >> 3 != 1 || v7 != 8) {
        break;
      }
      BOOL v10 = *a2;
      if (*a2 >= a2[1] || *v10 < 0)
      {
        unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v15 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t Varint64Fallback = *v10;
        *a2 = v10 + 1;
      }
      *((void *)this + 2) = Varint64Fallback;
    }
LABEL_20:
    if (v7) {
      BOOL v14 = (v7 & 7) == 4;
    }
    else {
      BOOL v14 = 1;
    }
    if (v14) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::GatherNDLayerParams *CoreML::Specification::GatherNDLayerParams::GatherNDLayerParams(CoreML::Specification::GatherNDLayerParams *this)
{
  *(void *)this = &unk_1EF0D39B8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::GatherNDLayerParams *)&CoreML::Specification::_GatherNDLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_19EB96200(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::GatherNDLayerParams::MergePartialFromCodedStream(CoreML::Specification::GatherNDLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::ScatterNDLayerParams *CoreML::Specification::ScatterNDLayerParams::ScatterNDLayerParams(CoreML::Specification::ScatterNDLayerParams *this)
{
  *(void *)this = &unk_1EF0D4598;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::ScatterNDLayerParams *)&CoreML::Specification::_ScatterNDLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  return this;
}

void sub_19EB962F0(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ScatterNDLayerParams::MergePartialFromCodedStream(CoreML::Specification::ScatterNDLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      unsigned int v11 = *a2;
      if (*a2 >= a2[1])
      {
        int v12 = 0;
      }
      else
      {
        int v12 = *v11;
        if ((*v11 & 0x80000000) == 0)
        {
          *a2 = v11 + 1;
          goto LABEL_22;
        }
      }
      uint64_t Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a2, v12);
      int v12 = Varint32Fallback;
      if (Varint32Fallback < 0) {
        return 0;
      }
LABEL_22:
      *((_DWORD *)this + 4) = v12;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    if (v10) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::SoftmaxNDLayerParams *CoreML::Specification::SoftmaxNDLayerParams::SoftmaxNDLayerParams(CoreML::Specification::SoftmaxNDLayerParams *this)
{
  *(void *)this = &unk_1EF0D4630;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::SoftmaxNDLayerParams *)&CoreML::Specification::_SoftmaxNDLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return this;
}

void sub_19EB96460(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::SoftmaxNDLayerParams::MergePartialFromCodedStream(CoreML::Specification::SoftmaxNDLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      unsigned int v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v13 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t Varint64Fallback = *v11;
        *a2 = v11 + 1;
      }
      *((void *)this + 2) = Varint64Fallback;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    if (v10) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::GatherAlongAxisLayerParams *CoreML::Specification::GatherAlongAxisLayerParams::GatherAlongAxisLayerParams(CoreML::Specification::GatherAlongAxisLayerParams *this)
{
  *(void *)this = &unk_1EF0D7058;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::GatherAlongAxisLayerParams *)&CoreML::Specification::_GatherAlongAxisLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return this;
}

void sub_19EB965C8(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::GatherAlongAxisLayerParams::MergePartialFromCodedStream(CoreML::Specification::GatherAlongAxisLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      unsigned int v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v13 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t Varint64Fallback = *v11;
        *a2 = v11 + 1;
      }
      *((void *)this + 2) = Varint64Fallback;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    if (v10) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ScatterAlongAxisLayerParams *CoreML::Specification::ScatterAlongAxisLayerParams::ScatterAlongAxisLayerParams(CoreML::Specification::ScatterAlongAxisLayerParams *this)
{
  *(void *)this = &unk_1EF0D7B08;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::ScatterAlongAxisLayerParams *)&CoreML::Specification::_ScatterAlongAxisLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  return this;
}

void sub_19EB9672C(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ScatterAlongAxisLayerParams::MergePartialFromCodedStream(CoreML::Specification::ScatterAlongAxisLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(v6) = 0;
LABEL_6:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
          unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_20;
          }
          goto LABEL_7;
        }
        uint64_t v6 = *v5;
        if (*v5 < 1) {
          goto LABEL_6;
        }
        *a2 = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_20;
        }
LABEL_7:
        if (v7 >> 3 != 2) {
          break;
        }
        if (v7 != 16) {
          goto LABEL_20;
        }
        int v12 = *a2;
        if (*a2 >= a2[1])
        {
          int v13 = 0;
        }
        else
        {
          int v13 = *v12;
          if ((*v12 & 0x80000000) == 0)
          {
            *a2 = v12 + 1;
            goto LABEL_30;
          }
        }
        uint64_t Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a2, v13);
        int v13 = Varint32Fallback;
        if (Varint32Fallback < 0) {
          return 0;
        }
LABEL_30:
        *((_DWORD *)this + 6) = v13;
      }
      if (v7 >> 3 != 1 || v7 != 8) {
        break;
      }
      BOOL v10 = *a2;
      if (*a2 >= a2[1] || *v10 < 0)
      {
        unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v15 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t Varint64Fallback = *v10;
        *a2 = v10 + 1;
      }
      *((void *)this + 2) = Varint64Fallback;
    }
LABEL_20:
    if (v7) {
      BOOL v14 = (v7 & 7) == 4;
    }
    else {
      BOOL v14 = 1;
    }
    if (v14) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ReverseLayerParams *CoreML::Specification::ReverseLayerParams::ReverseLayerParams(CoreML::Specification::ReverseLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1EF0D33C8;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::ReverseLayerParams *)&CoreML::Specification::_ReverseLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 9) = 0;
  return this;
}

void sub_19EB968F0(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ReverseLayerParams::MergePartialFromCodedStream(CoreML::Specification::ReverseLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      uint64_t v6 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      if ((v8 & 0xFFFFFFF8) != 8) {
        break;
      }
      if (v8 == 8)
      {
        if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<BOOL,(google::protobuf::internal::WireFormatLite::FieldType)8>(10, a2, (uint64_t)v5) & 1) == 0)return 0; {
      }
        }
      else
      {
        if (v8 != 10) {
          break;
        }
        BOOL v10 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v10 < 0)
        {
          int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0) {
            return 0;
          }
        }
        else
        {
          int VarintSizeAsIntFallback = *v10;
          *(void *)a2 = v10 + 1;
        }
        int v13 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        while (1)
        {
          int v14 = *((_DWORD *)a2 + 10);
          uint64_t v15 = *((int *)a2 + 11);
          unint64_t v16 = *((void *)a2 + 1);
          int v17 = *((_DWORD *)a2 + 6);
          if (v14 == 0x7FFFFFFF) {
            break;
          }
          int v18 = *(char **)a2;
          if ((int)(v14 - v17 + v15 + v16 - *(void *)a2) < 1) {
            break;
          }
          if ((unint64_t)v18 >= v16 || *v18 < 0)
          {
            unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v20 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            unint64_t Varint64Fallback = *v18;
            *(void *)a2 = v18 + 1;
          }
          BOOL v21 = Varint64Fallback != 0;
          signed int v22 = *((_DWORD *)this + 4);
          if (v22 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<BOOL>::Reserve(v5, v22 + 1);
            signed int v22 = *v5;
          }
          uint64_t v23 = *((void *)this + 3);
          *((_DWORD *)this + 4) = v22 + 1;
          *(unsigned char *)(v23 + v22 + 8) = v21;
        }
        *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v13;
        uint64_t v24 = v16 + v15;
        *((void *)a2 + 1) = v16 + v15;
        int v25 = *((_DWORD *)a2 + 12);
        if (v25 >= v13) {
          int v25 = v13;
        }
        BOOL v26 = __OFSUB__(v17, v25);
        int v27 = v17 - v25;
        if ((v27 < 0) ^ v26 | (v27 == 0)) {
          int v27 = 0;
        }
        else {
          *((void *)a2 + 1) = v24 - v27;
        }
        *((_DWORD *)a2 + 11) = v27;
        *((unsigned char *)a2 + 36) = 0;
      }
    }
    if (v8) {
      BOOL v12 = (v8 & 7) == 4;
    }
    else {
      BOOL v12 = 1;
    }
    if (v12) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ReverseSeqLayerParams *CoreML::Specification::ReverseSeqLayerParams::ReverseSeqLayerParams(CoreML::Specification::ReverseSeqLayerParams *this)
{
  *(void *)this = &unk_1EF0D5048;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::ReverseSeqLayerParams *)&CoreML::Specification::_ReverseSeqLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  return this;
}

void sub_19EB96B88(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ReverseSeqLayerParams::MergePartialFromCodedStream(CoreML::Specification::ReverseSeqLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(v6) = 0;
LABEL_6:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
          unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_20;
          }
          goto LABEL_7;
        }
        uint64_t v6 = *v5;
        if (*v5 < 1) {
          goto LABEL_6;
        }
        *a2 = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_20;
        }
LABEL_7:
        if (v7 >> 3 != 2) {
          break;
        }
        if (v7 != 16) {
          goto LABEL_20;
        }
        BOOL v12 = *a2;
        if (*a2 >= a2[1] || *v12 < 0)
        {
          unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
          if ((v16 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t Varint64Fallback = *v12;
          *a2 = v12 + 1;
        }
        *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = Varint64Fallback;
      }
      if (v7 >> 3 != 1 || v7 != 8) {
        break;
      }
      BOOL v10 = *a2;
      if (*a2 >= a2[1] || *v10 < 0)
      {
        unint64_t v11 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v15 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t v11 = *v10;
        *a2 = v10 + 1;
      }
      *((void *)this + 2) = v11;
    }
LABEL_20:
    if (v7) {
      BOOL v14 = (v7 & 7) == 4;
    }
    else {
      BOOL v14 = 1;
    }
    if (v14) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::SplitNDLayerParams *CoreML::Specification::SplitNDLayerParams::SplitNDLayerParams(CoreML::Specification::SplitNDLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1EF0D3590;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::SplitNDLayerParams *)&CoreML::Specification::_SplitNDLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0;
  *((_DWORD *)this + 14) = 0;
  return this;
}

void sub_19EB96D48(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::SplitNDLayerParams::MergePartialFromCodedStream(CoreML::Specification::SplitNDLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v6 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1))
          {
            LODWORD(v7) = 0;
LABEL_7:
            unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
            unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
            if ((v8 & 0x100000000) == 0) {
              goto LABEL_27;
            }
            goto LABEL_8;
          }
          uint64_t v7 = *v6;
          if (*v6 < 1) {
            goto LABEL_7;
          }
          *(void *)a2 = v6 + 1;
          unint64_t v8 = v7 | 0x100000000;
          if ((v8 & 0x100000000) == 0) {
            goto LABEL_27;
          }
LABEL_8:
          unsigned int v10 = v8 >> 3;
          if (v8 >> 3 != 3) {
            break;
          }
          if (v8 == 24)
          {
            if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned long long,(google::protobuf::internal::WireFormatLite::FieldType)4>(0x1Au, a2, (uint64_t)v5) & 1) == 0)return 0; {
          }
            }
          else
          {
            if (v8 != 26) {
              goto LABEL_27;
            }
            BOOL v14 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v14 < 0)
            {
              int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (VarintSizeAsIntFallback < 0) {
                return 0;
              }
            }
            else
            {
              int VarintSizeAsIntFallback = *v14;
              *(void *)a2 = v14 + 1;
            }
            int v20 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
            while (1)
            {
              int v21 = *((_DWORD *)a2 + 10);
              uint64_t v22 = *((int *)a2 + 11);
              unint64_t v23 = *((void *)a2 + 1);
              int v24 = *((_DWORD *)a2 + 6);
              if (v21 == 0x7FFFFFFF) {
                break;
              }
              int v25 = *(char **)a2;
              if ((int)(v21 - v24 + v22 + v23 - *(void *)a2) < 1) {
                break;
              }
              if ((unint64_t)v25 >= v23 || *v25 < 0)
              {
                unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
                if ((v28 & 1) == 0) {
                  return 0;
                }
                unint64_t v26 = Varint64Fallback;
              }
              else
              {
                unint64_t v26 = *v25;
                *(void *)a2 = v25 + 1;
              }
              signed int v29 = *((_DWORD *)this + 4);
              if (v29 == *((_DWORD *)this + 5))
              {
                google::protobuf::RepeatedField<double>::Reserve(v5, v29 + 1);
                signed int v29 = *v5;
              }
              uint64_t v30 = *((void *)this + 3);
              *((_DWORD *)this + 4) = v29 + 1;
              *(void *)(v30 + 8 * v29 + 8) = v26;
            }
            *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v20;
            uint64_t v31 = v23 + v22;
            *((void *)a2 + 1) = v23 + v22;
            int v32 = *((_DWORD *)a2 + 12);
            if (v32 >= v20) {
              int v32 = v20;
            }
            BOOL v33 = __OFSUB__(v24, v32);
            int v34 = v24 - v32;
            if ((v34 < 0) ^ v33 | (v34 == 0)) {
              int v34 = 0;
            }
            else {
              *((void *)a2 + 1) = v31 - v34;
            }
            *((_DWORD *)a2 + 11) = v34;
            *((unsigned char *)a2 + 36) = 0;
          }
        }
        if (v10 != 2) {
          break;
        }
        if (v8 != 16) {
          goto LABEL_27;
        }
        char v16 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v16 < 0)
        {
          *((void *)this + 6) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v19 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          *((void *)this + 6) = *v16;
          *(void *)a2 = v16 + 1;
        }
      }
      if (v10 != 1 || v8 != 8) {
        break;
      }
      BOOL v12 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v12 < 0)
      {
        unint64_t v13 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
        if ((v18 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t v13 = *v12;
        *(void *)a2 = v12 + 1;
      }
      *((void *)this + 5) = v13;
    }
LABEL_27:
    if (v8) {
      BOOL v17 = (v8 & 7) == 4;
    }
    else {
      BOOL v17 = 1;
    }
    if (v17) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ConcatNDLayerParams *CoreML::Specification::ConcatNDLayerParams::ConcatNDLayerParams(CoreML::Specification::ConcatNDLayerParams *this)
{
  *(void *)this = &unk_1EF0D3758;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::ConcatNDLayerParams *)&CoreML::Specification::_ConcatNDLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((unsigned char *)this + 24) = 0;
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 7) = 0;
  return this;
}

void sub_19EB97078(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ConcatNDLayerParams::MergePartialFromCodedStream(CoreML::Specification::ConcatNDLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(v6) = 0;
LABEL_6:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
          unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_20;
          }
          goto LABEL_7;
        }
        uint64_t v6 = *v5;
        if (*v5 < 1) {
          goto LABEL_6;
        }
        *a2 = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_20;
        }
LABEL_7:
        if (v7 >> 3 != 2) {
          break;
        }
        if (v7 != 16) {
          goto LABEL_20;
        }
        BOOL v12 = *a2;
        if (*a2 >= a2[1] || *v12 < 0)
        {
          unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
          if ((v16 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t Varint64Fallback = *v12;
          *a2 = v12 + 1;
        }
        *((unsigned char *)this + 24) = Varint64Fallback != 0;
      }
      if (v7 >> 3 != 1 || v7 != 8) {
        break;
      }
      unsigned int v10 = *a2;
      if (*a2 >= a2[1] || *v10 < 0)
      {
        unint64_t v11 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v15 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t v11 = *v10;
        *a2 = v10 + 1;
      }
      *((void *)this + 2) = v11;
    }
LABEL_20:
    if (v7) {
      BOOL v14 = (v7 & 7) == 4;
    }
    else {
      BOOL v14 = 1;
    }
    if (v14) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::TransposeLayerParams *CoreML::Specification::TransposeLayerParams::TransposeLayerParams(CoreML::Specification::TransposeLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1EF0D4760;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::TransposeLayerParams *)&CoreML::Specification::_TransposeLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 9) = 0;
  return this;
}

void sub_19EB9723C(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::TransposeLayerParams::MergePartialFromCodedStream(CoreML::Specification::TransposeLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      uint64_t v6 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      if ((v8 & 0xFFFFFFF8) != 8) {
        break;
      }
      if (v8 == 8)
      {
        if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned long long,(google::protobuf::internal::WireFormatLite::FieldType)4>(0xAu, a2, (uint64_t)v5) & 1) == 0)return 0; {
      }
        }
      else
      {
        if (v8 != 10) {
          break;
        }
        unsigned int v10 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v10 < 0)
        {
          int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0) {
            return 0;
          }
        }
        else
        {
          int VarintSizeAsIntFallback = *v10;
          *(void *)a2 = v10 + 1;
        }
        int v13 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        while (1)
        {
          int v14 = *((_DWORD *)a2 + 10);
          uint64_t v15 = *((int *)a2 + 11);
          unint64_t v16 = *((void *)a2 + 1);
          int v17 = *((_DWORD *)a2 + 6);
          if (v14 == 0x7FFFFFFF) {
            break;
          }
          char v18 = *(char **)a2;
          if ((int)(v14 - v17 + v15 + v16 - *(void *)a2) < 1) {
            break;
          }
          if ((unint64_t)v18 >= v16 || *v18 < 0)
          {
            unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v21 & 1) == 0) {
              return 0;
            }
            unint64_t v19 = Varint64Fallback;
          }
          else
          {
            unint64_t v19 = *v18;
            *(void *)a2 = v18 + 1;
          }
          signed int v22 = *((_DWORD *)this + 4);
          if (v22 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<double>::Reserve(v5, v22 + 1);
            signed int v22 = *v5;
          }
          uint64_t v23 = *((void *)this + 3);
          *((_DWORD *)this + 4) = v22 + 1;
          *(void *)(v23 + 8 * v22 + 8) = v19;
        }
        *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v13;
        uint64_t v24 = v16 + v15;
        *((void *)a2 + 1) = v16 + v15;
        int v25 = *((_DWORD *)a2 + 12);
        if (v25 >= v13) {
          int v25 = v13;
        }
        BOOL v26 = __OFSUB__(v17, v25);
        int v27 = v17 - v25;
        if ((v27 < 0) ^ v26 | (v27 == 0)) {
          int v27 = 0;
        }
        else {
          *((void *)a2 + 1) = v24 - v27;
        }
        *((_DWORD *)a2 + 11) = v27;
        *((unsigned char *)a2 + 36) = 0;
      }
    }
    if (v8) {
      BOOL v12 = (v8 & 7) == 4;
    }
    else {
      BOOL v12 = 1;
    }
    if (v12) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::SliceStaticLayerParams *CoreML::Specification::SliceStaticLayerParams::SliceStaticLayerParams(CoreML::Specification::SliceStaticLayerParams *this)
{
  *(void *)this = &unk_1EF0D5930;
  *((void *)this + 1) = 0;
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0;
  *((void *)this + 8) = 0;
  *((void *)this + 9) = 0;
  *((void *)this + 11) = 0;
  *((void *)this + 12) = 0;
  *((void *)this + 14) = 0;
  *((void *)this + 15) = 0;
  *((void *)this + 17) = 0;
  *((void *)this + 18) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::SliceStaticLayerParams *)&CoreML::Specification::_SliceStaticLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 39) = 0;
  return this;
}

void sub_19EB974EC(_Unwind_Exception *a1)
{
  int v4 = (void *)v2[18];
  if (v4 && !*v4) {
    operator delete(v4);
  }
  uint64_t v5 = (void *)v2[15];
  if (v5 && !*v5) {
    operator delete(v5);
  }
  uint64_t v6 = (void *)v2[12];
  if (v6 && !*v6) {
    operator delete(v6);
  }
  uint64_t v7 = (void *)v2[9];
  if (v7 && !*v7) {
    operator delete(v7);
  }
  unint64_t v8 = (void *)v2[6];
  if (v8 && !*v8) {
    operator delete(v8);
  }
  unsigned int v9 = (void *)v2[3];
  if (v9)
  {
    if (!*v9) {
      operator delete(v9);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::SliceStaticLayerParams::MergePartialFromCodedStream(CoreML::Specification::SliceStaticLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  unsigned int v88 = (unsigned int *)((char *)this + 112);
  int v89 = (unsigned int *)((char *)this + 136);
  uint64_t v5 = (unsigned int *)((char *)this + 88);
  uint64_t v6 = (unsigned int *)((char *)this + 64);
  uint64_t v7 = (unsigned int *)((char *)this + 40);
  unint64_t v8 = (unsigned int *)((char *)this + 16);
  while (1)
  {
LABEL_2:
    unsigned int v9 = *(char **)a2;
    if (*(void *)a2 >= *((void *)a2 + 1))
    {
      LODWORD(v1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = 0;
      break;
    }
    uint64_t v10 = *v9;
    if (*v9 < 1) {
      break;
    }
    *(void *)a2 = v9 + 1;
    unint64_t v11 = v10 | 0x100000000;
    if ((v11 & 0x100000000) != 0) {
      goto LABEL_8;
    }
LABEL_39:
    if (v11) {
      BOOL v25 = (v11 & 7) == 4;
    }
    else {
      BOOL v25 = 1;
    }
    if (v25) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v11, a3) & 1) == 0) {
      return 0;
    }
  }
  unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v10);
  unint64_t v11 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
  if ((v11 & 0x100000000) == 0) {
    goto LABEL_39;
  }
LABEL_8:
  switch(v11 >> 3)
  {
    case 1u:
      if (v11 == 8)
      {
        int v26 = 10;
        int v27 = a2;
        uint64_t v28 = (uint64_t)v8;
        goto LABEL_50;
      }
      if (v11 != 10) {
        goto LABEL_39;
      }
      int v13 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v13 < 0)
      {
        int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (VarintSizeAsIntFallback < 0) {
          return 0;
        }
      }
      else
      {
        int VarintSizeAsIntFallback = *v13;
        *(void *)a2 = v13 + 1;
      }
      int v32 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      while (1)
      {
        int v33 = *((_DWORD *)a2 + 10);
        if (v33 == 0x7FFFFFFF) {
          break;
        }
        int v34 = *(char **)a2;
        unint64_t v35 = *((void *)a2 + 1);
        if ((int)(v33 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + v35 - *(void *)a2) < 1) {
          break;
        }
        if ((unint64_t)v34 >= v35 || *v34 < 0)
        {
          unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v38 & 1) == 0) {
            return 0;
          }
          unint64_t v36 = Varint64Fallback;
        }
        else
        {
          unint64_t v36 = *v34;
          *(void *)a2 = v34 + 1;
        }
        signed int v39 = *((_DWORD *)this + 4);
        if (v39 == *((_DWORD *)this + 5))
        {
          google::protobuf::RepeatedField<double>::Reserve(v8, v39 + 1);
          signed int v39 = *v8;
        }
        uint64_t v40 = *((void *)this + 3);
        *((_DWORD *)this + 4) = v39 + 1;
        *(void *)(v40 + 8 * v39 + 8) = v36;
      }
      goto LABEL_124;
    case 2u:
      if (v11 == 16)
      {
        int v29 = 18;
        uint64_t v30 = a2;
        uint64_t v31 = (uint64_t)v7;
        goto LABEL_53;
      }
      if (v11 != 18) {
        goto LABEL_39;
      }
      uint64_t v15 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v15 < 0)
      {
        int v16 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v16 < 0) {
          return 0;
        }
      }
      else
      {
        int v16 = *v15;
        *(void *)a2 = v15 + 1;
      }
      int v32 = google::protobuf::io::CodedInputStream::PushLimit(a2, v16);
      while (1)
      {
        int v41 = *((_DWORD *)a2 + 10);
        if (v41 == 0x7FFFFFFF) {
          break;
        }
        unint64_t v42 = *(char **)a2;
        unint64_t v43 = *((void *)a2 + 1);
        if ((int)(v41 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + v43 - *(void *)a2) < 1) {
          break;
        }
        if ((unint64_t)v42 >= v43 || *v42 < 0)
        {
          unint64_t v44 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v45 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t v44 = *v42;
          *(void *)a2 = v42 + 1;
        }
        BOOL v46 = v44 != 0;
        signed int v47 = *((_DWORD *)this + 10);
        if (v47 == *((_DWORD *)this + 11))
        {
          google::protobuf::RepeatedField<BOOL>::Reserve(v7, v47 + 1);
          signed int v47 = *v7;
        }
        uint64_t v48 = *((void *)this + 6);
        *((_DWORD *)this + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v47 + 1;
        *(unsigned char *)(v48 + v47 + 8) = v46;
      }
      goto LABEL_124;
    case 3u:
      if (v11 == 24)
      {
        int v26 = 26;
        int v27 = a2;
        uint64_t v28 = (uint64_t)v6;
        goto LABEL_50;
      }
      if (v11 != 26) {
        goto LABEL_39;
      }
      int v17 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v17 < 0)
      {
        int v18 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v18 < 0) {
          return 0;
        }
      }
      else
      {
        int v18 = *v17;
        *(void *)a2 = v17 + 1;
      }
      int v32 = google::protobuf::io::CodedInputStream::PushLimit(a2, v18);
      while (1)
      {
        int v49 = *((_DWORD *)a2 + 10);
        if (v49 == 0x7FFFFFFF) {
          break;
        }
        int v50 = *(char **)a2;
        unint64_t v51 = *((void *)a2 + 1);
        if ((int)(v49 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + v51 - *(void *)a2) < 1) {
          break;
        }
        if ((unint64_t)v50 >= v51 || *v50 < 0)
        {
          unint64_t v53 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v54 & 1) == 0) {
            return 0;
          }
          unint64_t v52 = v53;
        }
        else
        {
          unint64_t v52 = *v50;
          *(void *)a2 = v50 + 1;
        }
        signed int v55 = *((_DWORD *)this + 16);
        if (v55 == *((_DWORD *)this + 17))
        {
          google::protobuf::RepeatedField<double>::Reserve(v6, v55 + 1);
          signed int v55 = *v6;
        }
        uint64_t v56 = *((void *)this + 9);
        *((_DWORD *)this + 16) = v55 + 1;
        *(void *)(v56 + 8 * v55 + 8) = v52;
      }
      goto LABEL_124;
    case 4u:
      if (v11 == 32)
      {
        int v29 = 34;
        uint64_t v30 = a2;
        uint64_t v31 = (uint64_t)v5;
        goto LABEL_53;
      }
      if (v11 != 34) {
        goto LABEL_39;
      }
      unint64_t v19 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v19 < 0)
      {
        int v20 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v20 < 0) {
          return 0;
        }
      }
      else
      {
        int v20 = *v19;
        *(void *)a2 = v19 + 1;
      }
      int v32 = google::protobuf::io::CodedInputStream::PushLimit(a2, v20);
      while (1)
      {
        int v57 = *((_DWORD *)a2 + 10);
        if (v57 == 0x7FFFFFFF) {
          break;
        }
        unsigned int v58 = *(char **)a2;
        unint64_t v59 = *((void *)a2 + 1);
        if ((int)(v57 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + v59 - *(void *)a2) < 1) {
          break;
        }
        if ((unint64_t)v58 >= v59 || *v58 < 0)
        {
          unint64_t v60 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v61 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t v60 = *v58;
          *(void *)a2 = v58 + 1;
        }
        BOOL v62 = v60 != 0;
        signed int v63 = *((_DWORD *)this + 22);
        if (v63 == *((_DWORD *)this + 23))
        {
          google::protobuf::RepeatedField<BOOL>::Reserve(v5, v63 + 1);
          signed int v63 = *v5;
        }
        uint64_t v64 = *((void *)this + 12);
        *((_DWORD *)this + 22) = v63 + 1;
        *(unsigned char *)(v64 + v63 + 8) = v62;
      }
      goto LABEL_124;
    case 5u:
      if (v11 == 40)
      {
        int v26 = 42;
        int v27 = a2;
        uint64_t v28 = (uint64_t)v88;
LABEL_50:
        if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(google::protobuf::internal::WireFormatLite::FieldType)3>(v26, v27, v28) & 1) == 0)return 0; {
        goto LABEL_2;
        }
      }
      if (v11 != 42) {
        goto LABEL_39;
      }
      char v21 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v21 < 0)
      {
        int v22 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v22 < 0) {
          return 0;
        }
      }
      else
      {
        int v22 = *v21;
        *(void *)a2 = v21 + 1;
      }
      int v32 = google::protobuf::io::CodedInputStream::PushLimit(a2, v22);
      while (1)
      {
        int v65 = *((_DWORD *)a2 + 10);
        if (v65 == 0x7FFFFFFF) {
          break;
        }
        unint64_t v66 = *(char **)a2;
        unint64_t v67 = *((void *)a2 + 1);
        if ((int)(v65 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + v67 - *(void *)a2) < 1) {
          break;
        }
        if ((unint64_t)v66 >= v67 || *v66 < 0)
        {
          unint64_t v69 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v70 & 1) == 0) {
            return 0;
          }
          unint64_t v68 = v69;
        }
        else
        {
          unint64_t v68 = *v66;
          *(void *)a2 = v66 + 1;
        }
        signed int v71 = *((_DWORD *)this + 28);
        if (v71 == *((_DWORD *)this + 29))
        {
          google::protobuf::RepeatedField<double>::Reserve(v88, v71 + 1);
          signed int v71 = *v88;
        }
        uint64_t v72 = *((void *)this + 15);
        *((_DWORD *)this + 28) = v71 + 1;
        *(void *)(v72 + 8 * v71 + 8) = v68;
      }
      goto LABEL_124;
    case 6u:
      if (v11 == 48)
      {
        int v29 = 50;
        uint64_t v30 = a2;
        uint64_t v31 = (uint64_t)v89;
LABEL_53:
        if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<BOOL,(google::protobuf::internal::WireFormatLite::FieldType)8>(v29, v30, v31) & 1) == 0)return 0; {
        goto LABEL_2;
        }
      }
      if (v11 != 50) {
        goto LABEL_39;
      }
      uint64_t v23 = *(char **)a2;
      if (*(void *)a2 < *((void *)a2 + 1) && (*v23 & 0x80000000) == 0)
      {
        int v24 = *v23;
        *(void *)a2 = v23 + 1;
        goto LABEL_114;
      }
      int v24 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
      if ((v24 & 0x80000000) == 0)
      {
LABEL_114:
        int v32 = google::protobuf::io::CodedInputStream::PushLimit(a2, v24);
        while (1)
        {
          int v73 = *((_DWORD *)a2 + 10);
          if (v73 == 0x7FFFFFFF) {
            break;
          }
          int v74 = *(char **)a2;
          unint64_t v75 = *((void *)a2 + 1);
          if ((int)(v73 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + v75 - *(void *)a2) < 1) {
            break;
          }
          if ((unint64_t)v74 >= v75 || *v74 < 0)
          {
            unint64_t v76 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v77 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            unint64_t v76 = *v74;
            *(void *)a2 = v74 + 1;
          }
          BOOL v78 = v76 != 0;
          signed int v79 = *((_DWORD *)this + 34);
          if (v79 == *((_DWORD *)this + 35))
          {
            google::protobuf::RepeatedField<BOOL>::Reserve(v89, v79 + 1);
            signed int v79 = *v89;
          }
          uint64_t v80 = *((void *)this + 18);
          *((_DWORD *)this + 34) = v79 + 1;
          *(unsigned char *)(v80 + v79 + 8) = v78;
        }
LABEL_124:
        *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v32;
        int v81 = *((_DWORD *)a2 + 12);
        uint64_t v82 = *((void *)a2 + 1) + *((int *)a2 + 11);
        *((void *)a2 + 1) = v82;
        if (v81 >= v32) {
          int v83 = v32;
        }
        else {
          int v83 = v81;
        }
        int v84 = *((_DWORD *)a2 + 6);
        BOOL v85 = __OFSUB__(v84, v83);
        int v86 = v84 - v83;
        if ((v86 < 0) ^ v85 | (v86 == 0)) {
          int v86 = 0;
        }
        else {
          *((void *)a2 + 1) = v82 - v86;
        }
        *((_DWORD *)a2 + 11) = v86;
        *((unsigned char *)a2 + 36) = 0;
        goto LABEL_2;
      }
      return 0;
    default:
      goto LABEL_39;
  }
}

CoreML::Specification::SliceDynamicLayerParams *CoreML::Specification::SliceDynamicLayerParams::SliceDynamicLayerParams(CoreML::Specification::SliceDynamicLayerParams *this)
{
  *(void *)this = &unk_1EF0D6180;
  *((void *)this + 1) = 0;
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0;
  *((void *)this + 8) = 0;
  *((void *)this + 9) = 0;
  *((void *)this + 11) = 0;
  *((void *)this + 12) = 0;
  *((void *)this + 14) = 0;
  *((void *)this + 15) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::SliceDynamicLayerParams *)&CoreML::Specification::_SliceDynamicLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 3google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  return this;
}

void sub_19EB97D64(_Unwind_Exception *a1)
{
  int v4 = (void *)v2[15];
  if (v4 && !*v4) {
    operator delete(v4);
  }
  uint64_t v5 = (void *)v2[12];
  if (v5 && !*v5) {
    operator delete(v5);
  }
  uint64_t v6 = (void *)v2[9];
  if (v6 && !*v6) {
    operator delete(v6);
  }
  uint64_t v7 = (void *)v2[6];
  if (v7 && !*v7) {
    operator delete(v7);
  }
  unint64_t v8 = (void *)v2[3];
  if (v8)
  {
    if (!*v8) {
      operator delete(v8);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::SliceDynamicLayerParams::MergePartialFromCodedStream(CoreML::Specification::SliceDynamicLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 112);
  uint64_t v6 = (unsigned int *)((char *)this + 88);
  uint64_t v7 = (unsigned int *)((char *)this + 64);
  unint64_t v8 = (unsigned int *)((char *)this + 40);
  unsigned int v9 = (unsigned int *)((char *)this + 16);
  while (1)
  {
LABEL_2:
    uint64_t v10 = *(char **)a2;
    if (*(void *)a2 >= *((void *)a2 + 1))
    {
      LODWORD(v11) = 0;
      break;
    }
    uint64_t v11 = *v10;
    if (*v10 < 1) {
      break;
    }
    *(void *)a2 = v10 + 1;
    unint64_t v12 = v11 | 0x100000000;
    if ((v12 & 0x100000000) != 0) {
      goto LABEL_8;
    }
LABEL_34:
    if (v12) {
      BOOL v24 = (v12 & 7) == 4;
    }
    else {
      BOOL v24 = 1;
    }
    if (v24) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v12, a3) & 1) == 0) {
      return 0;
    }
  }
  unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v11);
  unint64_t v12 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
  if ((v12 & 0x100000000) == 0) {
    goto LABEL_34;
  }
LABEL_8:
  switch(v12 >> 3)
  {
    case 2u:
      if (v12 == 16)
      {
        int v25 = 18;
        int v26 = a2;
        uint64_t v27 = (uint64_t)v9;
        goto LABEL_47;
      }
      if (v12 != 18) {
        goto LABEL_34;
      }
      int v14 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v14 < 0)
      {
        int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (VarintSizeAsIntFallback < 0) {
          return 0;
        }
      }
      else
      {
        int VarintSizeAsIntFallback = *v14;
        *(void *)a2 = v14 + 1;
      }
      int v31 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      while (1)
      {
        int v32 = *((_DWORD *)a2 + 10);
        if (v32 == 0x7FFFFFFF) {
          break;
        }
        int v33 = *(char **)a2;
        unint64_t v34 = *((void *)a2 + 1);
        if ((int)(v32 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + v34 - *(void *)a2) < 1) {
          break;
        }
        if ((unint64_t)v33 >= v34 || *v33 < 0)
        {
          unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v36 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t Varint64Fallback = *v33;
          *(void *)a2 = v33 + 1;
        }
        BOOL v37 = Varint64Fallback != 0;
        signed int v38 = *((_DWORD *)this + 4);
        if (v38 == *((_DWORD *)this + 5))
        {
          google::protobuf::RepeatedField<BOOL>::Reserve(v9, v38 + 1);
          signed int v38 = *v9;
        }
        uint64_t v39 = *((void *)this + 3);
        *((_DWORD *)this + 4) = v38 + 1;
        *(unsigned char *)(v39 + v38 + 8) = v37;
      }
      goto LABEL_106;
    case 3u:
      if (v12 == 24)
      {
        int v28 = 26;
        int v29 = a2;
        uint64_t v30 = (uint64_t)v8;
        goto LABEL_44;
      }
      if (v12 != 26) {
        goto LABEL_34;
      }
      int v16 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v16 < 0)
      {
        int v17 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v17 < 0) {
          return 0;
        }
      }
      else
      {
        int v17 = *v16;
        *(void *)a2 = v16 + 1;
      }
      int v31 = google::protobuf::io::CodedInputStream::PushLimit(a2, v17);
      while (1)
      {
        int v40 = *((_DWORD *)a2 + 10);
        if (v40 == 0x7FFFFFFF) {
          break;
        }
        int v41 = *(char **)a2;
        unint64_t v42 = *((void *)a2 + 1);
        if ((int)(v40 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + v42 - *(void *)a2) < 1) {
          break;
        }
        if ((unint64_t)v41 >= v42 || *v41 < 0)
        {
          unint64_t v44 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v45 & 1) == 0) {
            return 0;
          }
          unint64_t v43 = v44;
        }
        else
        {
          unint64_t v43 = *v41;
          *(void *)a2 = v41 + 1;
        }
        signed int v46 = *((_DWORD *)this + 10);
        if (v46 == *((_DWORD *)this + 11))
        {
          google::protobuf::RepeatedField<double>::Reserve(v8, v46 + 1);
          signed int v46 = *v8;
        }
        uint64_t v47 = *((void *)this + 6);
        *((_DWORD *)this + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v46 + 1;
        *(void *)(v47 + 8 * v46 + 8) = v43;
      }
      goto LABEL_106;
    case 4u:
      if (v12 == 32)
      {
        int v25 = 34;
        int v26 = a2;
        uint64_t v27 = (uint64_t)v7;
        goto LABEL_47;
      }
      if (v12 != 34) {
        goto LABEL_34;
      }
      int v18 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v18 < 0)
      {
        int v19 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v19 < 0) {
          return 0;
        }
      }
      else
      {
        int v19 = *v18;
        *(void *)a2 = v18 + 1;
      }
      int v31 = google::protobuf::io::CodedInputStream::PushLimit(a2, v19);
      while (1)
      {
        int v48 = *((_DWORD *)a2 + 10);
        if (v48 == 0x7FFFFFFF) {
          break;
        }
        int v49 = *(char **)a2;
        unint64_t v50 = *((void *)a2 + 1);
        if ((int)(v48 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + v50 - *(void *)a2) < 1) {
          break;
        }
        if ((unint64_t)v49 >= v50 || *v49 < 0)
        {
          unint64_t v51 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v52 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t v51 = *v49;
          *(void *)a2 = v49 + 1;
        }
        BOOL v53 = v51 != 0;
        signed int v54 = *((_DWORD *)this + 16);
        if (v54 == *((_DWORD *)this + 17))
        {
          google::protobuf::RepeatedField<BOOL>::Reserve(v7, v54 + 1);
          signed int v54 = *v7;
        }
        uint64_t v55 = *((void *)this + 9);
        *((_DWORD *)this + 16) = v54 + 1;
        *(unsigned char *)(v55 + v54 + 8) = v53;
      }
      goto LABEL_106;
    case 5u:
      if (v12 == 40)
      {
        int v28 = 42;
        int v29 = a2;
        uint64_t v30 = (uint64_t)v6;
LABEL_44:
        if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(google::protobuf::internal::WireFormatLite::FieldType)3>(v28, v29, v30) & 1) == 0)return 0; {
        goto LABEL_2;
        }
      }
      if (v12 != 42) {
        goto LABEL_34;
      }
      int v20 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v20 < 0)
      {
        int v21 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v21 < 0) {
          return 0;
        }
      }
      else
      {
        int v21 = *v20;
        *(void *)a2 = v20 + 1;
      }
      int v31 = google::protobuf::io::CodedInputStream::PushLimit(a2, v21);
      while (1)
      {
        int v56 = *((_DWORD *)a2 + 10);
        if (v56 == 0x7FFFFFFF) {
          break;
        }
        int v57 = *(char **)a2;
        unint64_t v58 = *((void *)a2 + 1);
        if ((int)(v56 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + v58 - *(void *)a2) < 1) {
          break;
        }
        if ((unint64_t)v57 >= v58 || *v57 < 0)
        {
          unint64_t v60 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v61 & 1) == 0) {
            return 0;
          }
          unint64_t v59 = v60;
        }
        else
        {
          unint64_t v59 = *v57;
          *(void *)a2 = v57 + 1;
        }
        signed int v62 = *((_DWORD *)this + 22);
        if (v62 == *((_DWORD *)this + 23))
        {
          google::protobuf::RepeatedField<double>::Reserve(v6, v62 + 1);
          signed int v62 = *v6;
        }
        uint64_t v63 = *((void *)this + 12);
        *((_DWORD *)this + 22) = v62 + 1;
        *(void *)(v63 + 8 * v62 + 8) = v59;
      }
      goto LABEL_106;
    case 6u:
      if (v12 == 48)
      {
        int v25 = 50;
        int v26 = a2;
        uint64_t v27 = (uint64_t)v5;
LABEL_47:
        if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<BOOL,(google::protobuf::internal::WireFormatLite::FieldType)8>(v25, v26, v27) & 1) == 0)return 0; {
        goto LABEL_2;
        }
      }
      if (v12 != 50) {
        goto LABEL_34;
      }
      int v22 = *(char **)a2;
      if (*(void *)a2 < *((void *)a2 + 1) && (*v22 & 0x80000000) == 0)
      {
        int v23 = *v22;
        *(void *)a2 = v22 + 1;
        goto LABEL_96;
      }
      int v23 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
      if ((v23 & 0x80000000) == 0)
      {
LABEL_96:
        int v31 = google::protobuf::io::CodedInputStream::PushLimit(a2, v23);
        while (1)
        {
          int v64 = *((_DWORD *)a2 + 10);
          if (v64 == 0x7FFFFFFF) {
            break;
          }
          int v65 = *(char **)a2;
          unint64_t v66 = *((void *)a2 + 1);
          if ((int)(v64 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + v66 - *(void *)a2) < 1) {
            break;
          }
          if ((unint64_t)v65 >= v66 || *v65 < 0)
          {
            unint64_t v67 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v68 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            unint64_t v67 = *v65;
            *(void *)a2 = v65 + 1;
          }
          BOOL v69 = v67 != 0;
          signed int v70 = *((_DWORD *)this + 28);
          if (v70 == *((_DWORD *)this + 29))
          {
            google::protobuf::RepeatedField<BOOL>::Reserve(v5, v70 + 1);
            signed int v70 = *v5;
          }
          uint64_t v71 = *((void *)this + 15);
          *((_DWORD *)this + 28) = v70 + 1;
          *(unsigned char *)(v71 + v70 + 8) = v69;
        }
LABEL_106:
        *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v31;
        int v72 = *((_DWORD *)a2 + 12);
        uint64_t v73 = *((void *)a2 + 1) + *((int *)a2 + 11);
        *((void *)a2 + 1) = v73;
        if (v72 >= v31) {
          int v74 = v31;
        }
        else {
          int v74 = v72;
        }
        int v75 = *((_DWORD *)a2 + 6);
        BOOL v76 = __OFSUB__(v75, v74);
        int v77 = v75 - v74;
        if ((v77 < 0) ^ v76 | (v77 == 0)) {
          int v77 = 0;
        }
        else {
          *((void *)a2 + 1) = v73 - v77;
        }
        *((_DWORD *)a2 + 11) = v77;
        *((unsigned char *)a2 + 36) = 0;
        goto LABEL_2;
      }
      return 0;
    default:
      goto LABEL_34;
  }
}

CoreML::Specification::SlidingWindowsLayerParams *CoreML::Specification::SlidingWindowsLayerParams::SlidingWindowsLayerParams(CoreML::Specification::SlidingWindowsLayerParams *this)
{
  *(void *)this = &unk_1EF0D6E90;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::SlidingWindowsLayerParams *)&CoreML::Specification::_SlidingWindowsLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  *((_DWORD *)this + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = 0;
  *((void *)this + 4) = 0;
  return this;
}

void sub_19EB984A0(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::SlidingWindowsLayerParams::MergePartialFromCodedStream(CoreML::Specification::SlidingWindowsLayerParams *this, char **a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v5 = *a2;
          if (*a2 >= a2[1])
          {
            LODWORD(v6) = 0;
LABEL_6:
            unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
            unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
            if ((v7 & 0x100000000) == 0) {
              goto LABEL_26;
            }
            goto LABEL_7;
          }
          uint64_t v6 = *v5;
          if (*v5 < 1) {
            goto LABEL_6;
          }
          *a2 = v5 + 1;
          unint64_t v7 = v6 | 0x100000000;
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_26;
          }
LABEL_7:
          unsigned int v9 = v7 >> 3;
          if (v7 >> 3 != 3) {
            break;
          }
          if (v7 != 24) {
            goto LABEL_26;
          }
          int v13 = *a2;
          if (*a2 < a2[1] && (*v13 & 0x80000000) == 0)
          {
            *((void *)this + 4) = *v13;
            goto LABEL_25;
          }
          *((void *)this + 4) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
          if ((v16 & 1) == 0) {
            return 0;
          }
        }
        if (v9 != 2) {
          break;
        }
        if (v7 != 16) {
          goto LABEL_26;
        }
        int v13 = *a2;
        if (*a2 >= a2[1] || *v13 < 0)
        {
          *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
          if ((v17 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = *v13;
LABEL_25:
          *a2 = v13 + 1;
        }
      }
      if (v9 != 1 || v7 != 8) {
        break;
      }
      uint64_t v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v15 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t Varint64Fallback = *v11;
        *a2 = v11 + 1;
      }
      *((void *)this + 2) = Varint64Fallback;
    }
LABEL_26:
    if (!v7 || (v7 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)return 0; {
  }
    }
}

CoreML::Specification::TopKLayerParams *CoreML::Specification::TopKLayerParams::TopKLayerParams(CoreML::Specification::TopKLayerParams *this)
{
  *(void *)this = &unk_1EF0D13B8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::TopKLayerParams *)&CoreML::Specification::_TopKLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  *((unsigned char *)this + 32) = 0;
  *((_DWORD *)this + 9) = 0;
  return this;
}

void sub_19EB986A0(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::TopKLayerParams::MergePartialFromCodedStream(CoreML::Specification::TopKLayerParams *this, char **a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v5 = *a2;
          if (*a2 >= a2[1])
          {
            LODWORD(v6) = 0;
LABEL_6:
            unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
            unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
            if ((v7 & 0x100000000) == 0) {
              goto LABEL_25;
            }
            goto LABEL_7;
          }
          uint64_t v6 = *v5;
          if (*v5 < 1) {
            goto LABEL_6;
          }
          *a2 = v5 + 1;
          unint64_t v7 = v6 | 0x100000000;
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_25;
          }
LABEL_7:
          unsigned int v9 = v7 >> 3;
          if (v7 >> 3 != 3) {
            break;
          }
          if (v7 != 24) {
            goto LABEL_25;
          }
          int v13 = *a2;
          if (*a2 >= a2[1] || *v13 < 0)
          {
            unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
            if ((v18 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            unint64_t Varint64Fallback = *v13;
            *a2 = v13 + 1;
          }
          *((unsigned char *)this + 32) = Varint64Fallback != 0;
        }
        if (v9 != 2) {
          break;
        }
        if (v7 != 16) {
          goto LABEL_25;
        }
        char v15 = *a2;
        if (*a2 >= a2[1] || *v15 < 0)
        {
          *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
          if ((v19 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = *v15;
          *a2 = v15 + 1;
        }
      }
      if (v9 != 1 || v7 != 8) {
        break;
      }
      uint64_t v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        unint64_t v12 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v17 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t v12 = *v11;
        *a2 = v11 + 1;
      }
      *((void *)this + 2) = v12;
    }
LABEL_25:
    if (!v7 || (v7 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)return 0; {
  }
    }
}

CoreML::Specification::ArgMinLayerParams *CoreML::Specification::ArgMinLayerParams::ArgMinLayerParams(CoreML::Specification::ArgMinLayerParams *this)
{
  *(void *)this = &unk_1EF0D2290;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::ArgMinLayerParams *)&CoreML::Specification::_ArgMinLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((unsigned char *)this + 24) = 0;
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 7) = 0;
  return this;
}

void sub_19EB988AC(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ArgMinLayerParams::MergePartialFromCodedStream(CoreML::Specification::ArgMinLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(v6) = 0;
LABEL_6:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
          unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_20;
          }
          goto LABEL_7;
        }
        uint64_t v6 = *v5;
        if (*v5 < 1) {
          goto LABEL_6;
        }
        *a2 = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_20;
        }
LABEL_7:
        if (v7 >> 3 != 2) {
          break;
        }
        if (v7 != 16) {
          goto LABEL_20;
        }
        unint64_t v12 = *a2;
        if (*a2 >= a2[1] || *v12 < 0)
        {
          unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
          if ((v16 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t Varint64Fallback = *v12;
          *a2 = v12 + 1;
        }
        *((unsigned char *)this + 24) = Varint64Fallback != 0;
      }
      if (v7 >> 3 != 1 || v7 != 8) {
        break;
      }
      uint64_t v10 = *a2;
      if (*a2 >= a2[1] || *v10 < 0)
      {
        unint64_t v11 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v15 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t v11 = *v10;
        *a2 = v10 + 1;
      }
      *((void *)this + 2) = v11;
    }
LABEL_20:
    if (v7) {
      BOOL v14 = (v7 & 7) == 4;
    }
    else {
      BOOL v14 = 1;
    }
    if (v14) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ArgMaxLayerParams *CoreML::Specification::ArgMaxLayerParams::ArgMaxLayerParams(CoreML::Specification::ArgMaxLayerParams *this)
{
  *(void *)this = &unk_1EF0D21F8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::ArgMaxLayerParams *)&CoreML::Specification::_ArgMaxLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((unsigned char *)this + 24) = 0;
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 7) = 0;
  return this;
}

void sub_19EB98A6C(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ArgMaxLayerParams::MergePartialFromCodedStream(CoreML::Specification::ArgMaxLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(v6) = 0;
LABEL_6:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
          unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_20;
          }
          goto LABEL_7;
        }
        uint64_t v6 = *v5;
        if (*v5 < 1) {
          goto LABEL_6;
        }
        *a2 = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_20;
        }
LABEL_7:
        if (v7 >> 3 != 2) {
          break;
        }
        if (v7 != 16) {
          goto LABEL_20;
        }
        unint64_t v12 = *a2;
        if (*a2 >= a2[1] || *v12 < 0)
        {
          unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
          if ((v16 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t Varint64Fallback = *v12;
          *a2 = v12 + 1;
        }
        *((unsigned char *)this + 24) = Varint64Fallback != 0;
      }
      if (v7 >> 3 != 1 || v7 != 8) {
        break;
      }
      uint64_t v10 = *a2;
      if (*a2 >= a2[1] || *v10 < 0)
      {
        unint64_t v11 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v15 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t v11 = *v10;
        *a2 = v10 + 1;
      }
      *((void *)this + 2) = v11;
    }
LABEL_20:
    if (v7) {
      BOOL v14 = (v7 & 7) == 4;
    }
    else {
      BOOL v14 = 1;
    }
    if (v14) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::EmbeddingNDLayerParams *CoreML::Specification::EmbeddingNDLayerParams::EmbeddingNDLayerParams(CoreML::Specification::EmbeddingNDLayerParams *this)
{
  *(void *)this = &unk_1EF0D5340;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::EmbeddingNDLayerParams *)&CoreML::Specification::_EmbeddingNDLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((unsigned char *)this + 48) = 0;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *((_DWORD *)this + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  return this;
}

void sub_19EB98C30(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::EmbeddingNDLayerParams::MergePartialFromCodedStream(CoreML::Specification::EmbeddingNDLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v5 = *(unsigned __int8 **)a2;
          unint64_t v6 = *((void *)a2 + 1);
          if (*(void *)a2 >= v6)
          {
            LODWORD(v8) = 0;
LABEL_51:
            unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v8);
            unint64_t v9 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
            if ((v9 & 0x100000000) == 0) {
              goto LABEL_52;
            }
            goto LABEL_8;
          }
          unint64_t v7 = v5 + 1;
          uint64_t v8 = *v5;
          if ((char)*v5 < 1)
          {
            if ((unint64_t)v7 < v6)
            {
              int v10 = *v7;
              if ((v8 & ~v10) >= 0x80)
              {
                *(void *)a2 = v5 + 2;
                unint64_t v9 = (v8 + (v10 << 7) - 128) | 0x100000000;
                goto LABEL_8;
              }
            }
            goto LABEL_51;
          }
          *(void *)a2 = v7;
          unint64_t v9 = v8 | 0x100000000;
          if ((v9 & 0x100000000) == 0) {
            goto LABEL_52;
          }
LABEL_8:
          unsigned int v11 = v9 >> 3;
          if (v9 >> 3 <= 2) {
            break;
          }
          if (v11 == 3)
          {
            if (v9 != 24) {
              goto LABEL_52;
            }
            char v15 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v15 < 0)
            {
              unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v26 & 1) == 0) {
                return 0;
              }
            }
            else
            {
              unint64_t Varint64Fallback = *v15;
              *(void *)a2 = v15 + 1;
            }
            *((unsigned char *)this + 48) = Varint64Fallback != 0;
          }
          else
          {
            if (v11 == 20)
            {
              if (v9 != 162) {
                goto LABEL_52;
              }
              unint64_t v12 = (CoreML::Specification::WeightParams *)*((void *)this + 2);
              if (!v12) {
                operator new();
              }
            }
            else
            {
              if (v11 != 21 || v9 != 170) {
                goto LABEL_52;
              }
              unint64_t v12 = (CoreML::Specification::WeightParams *)*((void *)this + 3);
              if (!v12) {
                operator new();
              }
            }
            char v17 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v17 < 0)
            {
              int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (VarintSizeAsIntFallback < 0) {
                return 0;
              }
            }
            else
            {
              int VarintSizeAsIntFallback = *v17;
              *(void *)a2 = v17 + 1;
            }
            int v19 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
            int v21 = *((_DWORD *)a2 + 13);
            BOOL v22 = __OFSUB__(v21--, 1);
            *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v21;
            if (v21 < 0 != v22) {
              return 0;
            }
            int v23 = v19;
            BOOL result = CoreML::Specification::WeightParams::MergePartialFromCodedStream(v12, a2, v20);
            if (!result) {
              return result;
            }
            if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v23)) {
              return 0;
            }
          }
        }
        if (v11 != 1) {
          break;
        }
        if (v9 != 8) {
          goto LABEL_52;
        }
        BOOL v14 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v14 < 0)
        {
          *((void *)this + 4) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v27 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          *((void *)this + 4) = *v14;
LABEL_38:
          *(void *)a2 = v14 + 1;
        }
      }
      if (v11 != 2 || v9 != 16) {
        break;
      }
      BOOL v14 = *(char **)a2;
      if (*(void *)a2 < *((void *)a2 + 1) && (*v14 & 0x80000000) == 0)
      {
        *((void *)this + 5) = *v14;
        goto LABEL_38;
      }
      *((void *)this + 5) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
      if ((v25 & 1) == 0) {
        return 0;
      }
    }
LABEL_52:
    if (!v9 || (v9 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v9, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_19EB98F14(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::BatchedMatMulLayerParams *CoreML::Specification::BatchedMatMulLayerParams::BatchedMatMulLayerParams(CoreML::Specification::BatchedMatMulLayerParams *this)
{
  *(void *)this = &unk_1EF0D6348;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::BatchedMatMulLayerParams *)&CoreML::Specification::_BatchedMatMulLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 6) = 0;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  return this;
}

void sub_19EB98FA4(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::BatchedMatMulLayerParams::MergePartialFromCodedStream(CoreML::Specification::BatchedMatMulLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = *(char **)a2;
      if (*(void *)a2 < *((void *)a2 + 1)) {
        break;
      }
      LODWORD(v6) = 0;
LABEL_6:
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v6);
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) == 0) {
        goto LABEL_7;
      }
LABEL_13:
      switch(v7 >> 3)
      {
        case 1u:
          if (v7 != 8) {
            goto LABEL_7;
          }
          int v10 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v10 < 0)
          {
            unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v28 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            unint64_t Varint64Fallback = *v10;
            *(void *)a2 = v10 + 1;
          }
          *((unsigned char *)this + 48) = Varint64Fallback != 0;
          continue;
        case 2u:
          if (v7 != 16) {
            goto LABEL_7;
          }
          unint64_t v12 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v12 < 0)
          {
            unint64_t v13 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v29 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            unint64_t v13 = *v12;
            *(void *)a2 = v12 + 1;
          }
          *((unsigned char *)this + 49) = v13 != 0;
          continue;
        case 5u:
          if (v7 != 40) {
            goto LABEL_7;
          }
          BOOL v14 = *(char **)a2;
          if (*(void *)a2 < *((void *)a2 + 1) && (*v14 & 0x80000000) == 0)
          {
            *((void *)this + 4) = *v14;
            goto LABEL_30;
          }
          *((void *)this + 4) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v30 & 1) == 0) {
            return 0;
          }
          continue;
        case 6u:
          if (v7 != 48) {
            goto LABEL_7;
          }
          BOOL v14 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v14 < 0)
          {
            *((void *)this + 5) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v31 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            *((void *)this + 5) = *v14;
LABEL_30:
            *(void *)a2 = v14 + 1;
          }
          continue;
        case 7u:
          if (v7 != 56) {
            goto LABEL_7;
          }
          char v15 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v15 < 0)
          {
            unint64_t v16 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v32 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            unint64_t v16 = *v15;
            *(void *)a2 = v15 + 1;
          }
          *((unsigned char *)this + 5CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v16 != 0;
          continue;
        case 8u:
          if (v7 != 66) {
            goto LABEL_7;
          }
          char v17 = (CoreML::Specification::WeightParams *)*((void *)this + 2);
          if (!v17) {
            operator new();
          }
          goto LABEL_41;
        case 9u:
          if (v7 != 74) {
            goto LABEL_7;
          }
          char v17 = (CoreML::Specification::WeightParams *)*((void *)this + 3);
          if (!v17) {
            operator new();
          }
LABEL_41:
          char v18 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v18 < 0)
          {
            int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            int VarintSizeAsIntFallback = *v18;
            *(void *)a2 = v18 + 1;
          }
          int v22 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          int v24 = *((_DWORD *)a2 + 13);
          BOOL v25 = __OFSUB__(v24--, 1);
          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v24;
          if (v24 < 0 != v25) {
            return 0;
          }
          int v26 = v22;
          BOOL result = CoreML::Specification::WeightParams::MergePartialFromCodedStream(v17, a2, v23);
          if (!result) {
            return result;
          }
          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v26)) {
            return 0;
          }
          continue;
        case 0xAu:
          if (v7 != 80) {
            goto LABEL_7;
          }
          unsigned int v20 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v20 < 0)
          {
            unint64_t v21 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v33 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            unint64_t v21 = *v20;
            *(void *)a2 = v20 + 1;
          }
          *((unsigned char *)this + 51) = v21 != 0;
          break;
        default:
          goto LABEL_7;
      }
    }
    uint64_t v6 = *v5;
    if (*v5 < 1) {
      goto LABEL_6;
    }
    *(void *)a2 = v5 + 1;
    unint64_t v7 = v6 | 0x100000000;
    if ((v7 & 0x100000000) != 0) {
      goto LABEL_13;
    }
LABEL_7:
    if (!v7 || (v7 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_19EB99334(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::GetShapeLayerParams *CoreML::Specification::GetShapeLayerParams::GetShapeLayerParams(CoreML::Specification::GetShapeLayerParams *this)
{
  *(void *)this = &unk_1EF0D3A50;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::GetShapeLayerParams *)&CoreML::Specification::_GetShapeLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_19EB993E4(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::GetShapeLayerParams::MergePartialFromCodedStream(CoreML::Specification::GetShapeLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::LoadConstantNDLayerParams *CoreML::Specification::LoadConstantNDLayerParams::LoadConstantNDLayerParams(CoreML::Specification::LoadConstantNDLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1EF0D6A68;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::LoadConstantNDLayerParams *)&CoreML::Specification::_LoadConstantNDLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 5) = 0;
  *((_DWORD *)this + 12) = 0;
  return this;
}

void sub_19EB994E4(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::LoadConstantNDLayerParams::MergePartialFromCodedStream(CoreML::Specification::LoadConstantNDLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        BOOL v6 = *(char **)a2;
        if (*(void *)a2 < *((void *)a2 + 1)) {
          break;
        }
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) != 0) {
          goto LABEL_8;
        }
LABEL_21:
        if (v8) {
          BOOL v15 = (v8 & 7) == 4;
        }
        else {
          BOOL v15 = 1;
        }
        if (v15) {
          return 1;
        }
        if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)return 0; {
      }
        }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        goto LABEL_21;
      }
LABEL_8:
      if (v8 >> 3 == 2) {
        break;
      }
      if (v8 >> 3 != 1) {
        goto LABEL_21;
      }
      if (v8 == 8)
      {
        if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned long long,(google::protobuf::internal::WireFormatLite::FieldType)4>(0xAu, a2, (uint64_t)v5) & 1) == 0)return 0; {
      }
        }
      else
      {
        if (v8 != 10) {
          goto LABEL_21;
        }
        int v10 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v10 < 0)
        {
          int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0) {
            return 0;
          }
        }
        else
        {
          int VarintSizeAsIntFallback = *v10;
          *(void *)a2 = v10 + 1;
        }
        int v22 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        while (1)
        {
          int v23 = *((_DWORD *)a2 + 10);
          uint64_t v24 = *((int *)a2 + 11);
          unint64_t v25 = *((void *)a2 + 1);
          int v26 = *((_DWORD *)a2 + 6);
          if (v23 == 0x7FFFFFFF) {
            break;
          }
          char v27 = *(char **)a2;
          if ((int)(v23 - v26 + v24 + v25 - *(void *)a2) < 1) {
            break;
          }
          if ((unint64_t)v27 >= v25 || *v27 < 0)
          {
            unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v30 & 1) == 0) {
              return 0;
            }
            unint64_t v28 = Varint64Fallback;
          }
          else
          {
            unint64_t v28 = *v27;
            *(void *)a2 = v27 + 1;
          }
          signed int v31 = *((_DWORD *)this + 4);
          if (v31 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<double>::Reserve(v5, v31 + 1);
            signed int v31 = *v5;
          }
          uint64_t v32 = *((void *)this + 3);
          *((_DWORD *)this + 4) = v31 + 1;
          *(void *)(v32 + 8 * v31 + 8) = v28;
        }
        *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v22;
        uint64_t v33 = v25 + v24;
        *((void *)a2 + 1) = v25 + v24;
        int v34 = *((_DWORD *)a2 + 12);
        if (v34 >= v22) {
          int v34 = v22;
        }
        BOOL v19 = __OFSUB__(v26, v34);
        int v35 = v26 - v34;
        if ((v35 < 0) ^ v19 | (v35 == 0)) {
          int v35 = 0;
        }
        else {
          *((void *)a2 + 1) = v33 - v35;
        }
        *((_DWORD *)a2 + 11) = v35;
        *((unsigned char *)a2 + 36) = 0;
      }
    }
    if (v8 != 18) {
      goto LABEL_21;
    }
    unint64_t v12 = (CoreML::Specification::WeightParams *)*((void *)this + 5);
    if (!v12) {
      operator new();
    }
    unint64_t v13 = *(char **)a2;
    if (*(void *)a2 >= *((void *)a2 + 1) || *v13 < 0)
    {
      int v14 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
      if (v14 < 0) {
        return 0;
      }
    }
    else
    {
      int v14 = *v13;
      *(void *)a2 = v13 + 1;
    }
    int v16 = google::protobuf::io::CodedInputStream::PushLimit(a2, v14);
    int v18 = *((_DWORD *)a2 + 13);
    BOOL v19 = __OFSUB__(v18--, 1);
    *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v18;
    if (v18 < 0 != v19) {
      break;
    }
    int v20 = v16;
    BOOL result = CoreML::Specification::WeightParams::MergePartialFromCodedStream(v12, a2, v17);
    if (!result) {
      return result;
    }
  }
  while (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v20));
  return 0;
}

void sub_19EB997C8(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::FillLikeLayerParams *CoreML::Specification::FillLikeLayerParams::FillLikeLayerParams(CoreML::Specification::FillLikeLayerParams *this)
{
  *(void *)this = &unk_1EF0D3888;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::FillLikeLayerParams *)&CoreML::Specification::_FillLikeLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  return this;
}

void sub_19EB9984C(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::FillLikeLayerParams::MergePartialFromCodedStream(CoreML::Specification::FillLikeLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 13 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      unsigned int v14 = 0;
      unint64_t v12 = (unsigned int *)*a2;
      if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
      {
        BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v14);
        if (!result) {
          return result;
        }
        unsigned int v13 = v14;
      }
      else
      {
        unsigned int v13 = *v12;
        *a2 = (char *)(v12 + 1);
      }
      *((_DWORD *)this + 4) = v13;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    BOOL result = v10;
    if (v10) {
      return result;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::FillStaticLayerParams *CoreML::Specification::FillStaticLayerParams::FillStaticLayerParams(CoreML::Specification::FillStaticLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1EF0D4B88;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::FillStaticLayerParams *)&CoreML::Specification::_FillStaticLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *(void *)((char *)this + 36) = 0;
  return this;
}

void sub_19EB999C8(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::FillStaticLayerParams::MergePartialFromCodedStream(CoreML::Specification::FillStaticLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v6 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1))
        {
          LODWORD(v7) = 0;
LABEL_7:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
          unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v8 & 0x100000000) == 0) {
            goto LABEL_13;
          }
          goto LABEL_8;
        }
        uint64_t v7 = *v6;
        if (*v6 < 1) {
          goto LABEL_7;
        }
        *(void *)a2 = v6 + 1;
        unint64_t v8 = v7 | 0x100000000;
        if ((v8 & 0x100000000) == 0) {
          goto LABEL_13;
        }
LABEL_8:
        if (v8 >> 3 != 2) {
          break;
        }
        if (v8 == 16)
        {
          if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned long long,(google::protobuf::internal::WireFormatLite::FieldType)4>(0x12u, a2, (uint64_t)v5) & 1) == 0)return 0; {
        }
          }
        else
        {
          if (v8 != 18) {
            goto LABEL_13;
          }
          unint64_t v12 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v12 < 0)
          {
            int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            int VarintSizeAsIntFallback = *v12;
            *(void *)a2 = v12 + 1;
          }
          int v16 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          while (1)
          {
            int v17 = *((_DWORD *)a2 + 10);
            uint64_t v18 = *((int *)a2 + 11);
            unint64_t v19 = *((void *)a2 + 1);
            int v20 = *((_DWORD *)a2 + 6);
            if (v17 == 0x7FFFFFFF) {
              break;
            }
            unint64_t v21 = *(char **)a2;
            if ((int)(v17 - v20 + v18 + v19 - *(void *)a2) < 1) {
              break;
            }
            if ((unint64_t)v21 >= v19 || *v21 < 0)
            {
              unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v24 & 1) == 0) {
                return 0;
              }
              unint64_t v22 = Varint64Fallback;
            }
            else
            {
              unint64_t v22 = *v21;
              *(void *)a2 = v21 + 1;
            }
            signed int v25 = *((_DWORD *)this + 4);
            if (v25 == *((_DWORD *)this + 5))
            {
              google::protobuf::RepeatedField<double>::Reserve(v5, v25 + 1);
              signed int v25 = *v5;
            }
            uint64_t v26 = *((void *)this + 3);
            *((_DWORD *)this + 4) = v25 + 1;
            *(void *)(v26 + 8 * v25 + 8) = v22;
          }
          *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v16;
          uint64_t v27 = v19 + v18;
          *((void *)a2 + 1) = v19 + v18;
          int v28 = *((_DWORD *)a2 + 12);
          if (v28 >= v16) {
            int v28 = v16;
          }
          BOOL v29 = __OFSUB__(v20, v28);
          int v30 = v20 - v28;
          if ((v30 < 0) ^ v29 | (v30 == 0)) {
            int v30 = 0;
          }
          else {
            *((void *)a2 + 1) = v27 - v30;
          }
          *((_DWORD *)a2 + 11) = v30;
          *((unsigned char *)a2 + 36) = 0;
        }
      }
      if (v8 >> 3 != 1 || v8 != 13) {
        break;
      }
      unsigned int v32 = 0;
      unsigned int v14 = *(unsigned int **)a2;
      if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) < 4)
      {
        BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v32);
        if (!result) {
          return result;
        }
        unsigned int v15 = v32;
      }
      else
      {
        unsigned int v15 = *v14;
        *(void *)a2 = v14 + 1;
      }
      *((_DWORD *)this + 9) = v15;
    }
LABEL_13:
    if (v8) {
      BOOL v11 = (v8 & 7) == 4;
    }
    else {
      BOOL v11 = 1;
    }
    if (v11) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::FillDynamicLayerParams *CoreML::Specification::FillDynamicLayerParams::FillDynamicLayerParams(CoreML::Specification::FillDynamicLayerParams *this)
{
  *(void *)this = &unk_1EF0D53D8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::FillDynamicLayerParams *)&CoreML::Specification::_FillDynamicLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  return this;
}

void sub_19EB99CB0(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::FillDynamicLayerParams::MergePartialFromCodedStream(CoreML::Specification::FillDynamicLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 13 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      unsigned int v14 = 0;
      unint64_t v12 = (unsigned int *)*a2;
      if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
      {
        BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v14);
        if (!result) {
          return result;
        }
        unsigned int v13 = v14;
      }
      else
      {
        unsigned int v13 = *v12;
        *a2 = (char *)(v12 + 1);
      }
      *((_DWORD *)this + 4) = v13;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    BOOL result = v10;
    if (v10) {
      return result;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::BroadcastToLikeLayerParams *CoreML::Specification::BroadcastToLikeLayerParams::BroadcastToLikeLayerParams(CoreML::Specification::BroadcastToLikeLayerParams *this)
{
  *(void *)this = &unk_1EF0D6F28;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::BroadcastToLikeLayerParams *)&CoreML::Specification::_BroadcastToLikeLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_19EB99E20(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::BroadcastToLikeLayerParams::MergePartialFromCodedStream(CoreML::Specification::BroadcastToLikeLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::BroadcastToStaticLayerParams *CoreML::Specification::BroadcastToStaticLayerParams::BroadcastToStaticLayerParams(CoreML::Specification::BroadcastToStaticLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1EF0D7CD0;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::BroadcastToStaticLayerParams *)&CoreML::Specification::_BroadcastToStaticLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 9) = 0;
  return this;
}

void sub_19EB99F1C(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::BroadcastToStaticLayerParams::MergePartialFromCodedStream(CoreML::Specification::BroadcastToStaticLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      BOOL v6 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      if ((v8 & 0xFFFFFFF8) != 8) {
        break;
      }
      if (v8 == 8)
      {
        if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned long long,(google::protobuf::internal::WireFormatLite::FieldType)4>(0xAu, a2, (uint64_t)v5) & 1) == 0)return 0; {
      }
        }
      else
      {
        if (v8 != 10) {
          break;
        }
        BOOL v10 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v10 < 0)
        {
          int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0) {
            return 0;
          }
        }
        else
        {
          int VarintSizeAsIntFallback = *v10;
          *(void *)a2 = v10 + 1;
        }
        int v13 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        while (1)
        {
          int v14 = *((_DWORD *)a2 + 10);
          uint64_t v15 = *((int *)a2 + 11);
          unint64_t v16 = *((void *)a2 + 1);
          int v17 = *((_DWORD *)a2 + 6);
          if (v14 == 0x7FFFFFFF) {
            break;
          }
          uint64_t v18 = *(char **)a2;
          if ((int)(v14 - v17 + v15 + v16 - *(void *)a2) < 1) {
            break;
          }
          if ((unint64_t)v18 >= v16 || *v18 < 0)
          {
            unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v21 & 1) == 0) {
              return 0;
            }
            unint64_t v19 = Varint64Fallback;
          }
          else
          {
            unint64_t v19 = *v18;
            *(void *)a2 = v18 + 1;
          }
          signed int v22 = *((_DWORD *)this + 4);
          if (v22 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<double>::Reserve(v5, v22 + 1);
            signed int v22 = *v5;
          }
          uint64_t v23 = *((void *)this + 3);
          *((_DWORD *)this + 4) = v22 + 1;
          *(void *)(v23 + 8 * v22 + 8) = v19;
        }
        *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v13;
        uint64_t v24 = v16 + v15;
        *((void *)a2 + 1) = v16 + v15;
        int v25 = *((_DWORD *)a2 + 12);
        if (v25 >= v13) {
          int v25 = v13;
        }
        BOOL v26 = __OFSUB__(v17, v25);
        int v27 = v17 - v25;
        if ((v27 < 0) ^ v26 | (v27 == 0)) {
          int v27 = 0;
        }
        else {
          *((void *)a2 + 1) = v24 - v27;
        }
        *((_DWORD *)a2 + 11) = v27;
        *((unsigned char *)a2 + 36) = 0;
      }
    }
    if (v8) {
      BOOL v12 = (v8 & 7) == 4;
    }
    else {
      BOOL v12 = 1;
    }
    if (v12) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::BroadcastToDynamicLayerParams *CoreML::Specification::BroadcastToDynamicLayerParams::BroadcastToDynamicLayerParams(CoreML::Specification::BroadcastToDynamicLayerParams *this)
{
  *(void *)this = &unk_1EF0D7E00;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::BroadcastToDynamicLayerParams *)&CoreML::Specification::_BroadcastToDynamicLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_19EB9A1AC(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::BroadcastToDynamicLayerParams::MergePartialFromCodedStream(CoreML::Specification::BroadcastToDynamicLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::SqueezeLayerParams *CoreML::Specification::SqueezeLayerParams::SqueezeLayerParams(CoreML::Specification::SqueezeLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1EF0D3628;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::SqueezeLayerParams *)&CoreML::Specification::_SqueezeLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((unsigned char *)this + 36) = 0;
  *((_DWORD *)this + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = 0;
  return this;
}

void sub_19EB9A2AC(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::SqueezeLayerParams::MergePartialFromCodedStream(CoreML::Specification::SqueezeLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      BOOL v6 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      if (v8 >> 3 == 2)
      {
        if (v8 != 16) {
          break;
        }
        BOOL v12 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v12 < 0)
        {
          unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v15 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t Varint64Fallback = *v12;
          *(void *)a2 = v12 + 1;
        }
        *((unsigned char *)this + 36) = Varint64Fallback != 0;
      }
      else
      {
        if (v8 >> 3 != 1) {
          break;
        }
        if (v8 == 8)
        {
          if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(google::protobuf::internal::WireFormatLite::FieldType)3>(10, a2, (uint64_t)v5) & 1) == 0)return 0; {
        }
          }
        else
        {
          if (v8 != 10) {
            break;
          }
          BOOL v10 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v10 < 0)
          {
            int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            int VarintSizeAsIntFallback = *v10;
            *(void *)a2 = v10 + 1;
          }
          int v16 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          while (1)
          {
            int v17 = *((_DWORD *)a2 + 10);
            uint64_t v18 = *((int *)a2 + 11);
            unint64_t v19 = *((void *)a2 + 1);
            int v20 = *((_DWORD *)a2 + 6);
            if (v17 == 0x7FFFFFFF) {
              break;
            }
            char v21 = *(char **)a2;
            if ((int)(v17 - v20 + v18 + v19 - *(void *)a2) < 1) {
              break;
            }
            if ((unint64_t)v21 >= v19 || *v21 < 0)
            {
              unint64_t v23 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v24 & 1) == 0) {
                return 0;
              }
              unint64_t v22 = v23;
            }
            else
            {
              unint64_t v22 = *v21;
              *(void *)a2 = v21 + 1;
            }
            signed int v25 = *((_DWORD *)this + 4);
            if (v25 == *((_DWORD *)this + 5))
            {
              google::protobuf::RepeatedField<double>::Reserve(v5, v25 + 1);
              signed int v25 = *v5;
            }
            uint64_t v26 = *((void *)this + 3);
            *((_DWORD *)this + 4) = v25 + 1;
            *(void *)(v26 + 8 * v25 + 8) = v22;
          }
          *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v16;
          uint64_t v27 = v19 + v18;
          *((void *)a2 + 1) = v19 + v18;
          int v28 = *((_DWORD *)a2 + 12);
          if (v28 >= v16) {
            int v28 = v16;
          }
          BOOL v29 = __OFSUB__(v20, v28);
          int v30 = v20 - v28;
          if ((v30 < 0) ^ v29 | (v30 == 0)) {
            int v30 = 0;
          }
          else {
            *((void *)a2 + 1) = v27 - v30;
          }
          *((_DWORD *)a2 + 11) = v30;
          *((unsigned char *)a2 + 36) = 0;
        }
      }
    }
    if (v8) {
      BOOL v14 = (v8 & 7) == 4;
    }
    else {
      BOOL v14 = 1;
    }
    if (v14) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ExpandDimsLayerParams *CoreML::Specification::ExpandDimsLayerParams::ExpandDimsLayerParams(CoreML::Specification::ExpandDimsLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1EF0D4AF0;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::ExpandDimsLayerParams *)&CoreML::Specification::_ExpandDimsLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 9) = 0;
  return this;
}

void sub_19EB9A59C(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ExpandDimsLayerParams::MergePartialFromCodedStream(CoreML::Specification::ExpandDimsLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      BOOL v6 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      if ((v8 & 0xFFFFFFF8) != 8) {
        break;
      }
      if (v8 == 8)
      {
        if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(google::protobuf::internal::WireFormatLite::FieldType)3>(10, a2, (uint64_t)v5) & 1) == 0)return 0; {
      }
        }
      else
      {
        if (v8 != 10) {
          break;
        }
        BOOL v10 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v10 < 0)
        {
          int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0) {
            return 0;
          }
        }
        else
        {
          int VarintSizeAsIntFallback = *v10;
          *(void *)a2 = v10 + 1;
        }
        int v13 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        while (1)
        {
          int v14 = *((_DWORD *)a2 + 10);
          uint64_t v15 = *((int *)a2 + 11);
          unint64_t v16 = *((void *)a2 + 1);
          int v17 = *((_DWORD *)a2 + 6);
          if (v14 == 0x7FFFFFFF) {
            break;
          }
          uint64_t v18 = *(char **)a2;
          if ((int)(v14 - v17 + v15 + v16 - *(void *)a2) < 1) {
            break;
          }
          if ((unint64_t)v18 >= v16 || *v18 < 0)
          {
            unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v21 & 1) == 0) {
              return 0;
            }
            unint64_t v19 = Varint64Fallback;
          }
          else
          {
            unint64_t v19 = *v18;
            *(void *)a2 = v18 + 1;
          }
          signed int v22 = *((_DWORD *)this + 4);
          if (v22 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<double>::Reserve(v5, v22 + 1);
            signed int v22 = *v5;
          }
          uint64_t v23 = *((void *)this + 3);
          *((_DWORD *)this + 4) = v22 + 1;
          *(void *)(v23 + 8 * v22 + 8) = v19;
        }
        *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v13;
        uint64_t v24 = v16 + v15;
        *((void *)a2 + 1) = v16 + v15;
        int v25 = *((_DWORD *)a2 + 12);
        if (v25 >= v13) {
          int v25 = v13;
        }
        BOOL v26 = __OFSUB__(v17, v25);
        int v27 = v17 - v25;
        if ((v27 < 0) ^ v26 | (v27 == 0)) {
          int v27 = 0;
        }
        else {
          *((void *)a2 + 1) = v24 - v27;
        }
        *((_DWORD *)a2 + 11) = v27;
        *((unsigned char *)a2 + 36) = 0;
      }
    }
    if (v8) {
      BOOL v12 = (v8 & 7) == 4;
    }
    else {
      BOOL v12 = 1;
    }
    if (v12) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::FlattenTo2DLayerParams *CoreML::Specification::FlattenTo2DLayerParams::FlattenTo2DLayerParams(CoreML::Specification::FlattenTo2DLayerParams *this)
{
  *(void *)this = &unk_1EF0D5470;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::FlattenTo2DLayerParams *)&CoreML::Specification::_FlattenTo2DLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return this;
}

void sub_19EB9A830(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::FlattenTo2DLayerParams::MergePartialFromCodedStream(CoreML::Specification::FlattenTo2DLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      BOOL v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v13 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t Varint64Fallback = *v11;
        *a2 = v11 + 1;
      }
      *((void *)this + 2) = Varint64Fallback;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    if (v10) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ReshapeLikeLayerParams *CoreML::Specification::ReshapeLikeLayerParams::ReshapeLikeLayerParams(CoreML::Specification::ReshapeLikeLayerParams *this)
{
  *(void *)this = &unk_1EF0D5800;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::ReshapeLikeLayerParams *)&CoreML::Specification::_ReshapeLikeLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_19EB9A994(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ReshapeLikeLayerParams::MergePartialFromCodedStream(CoreML::Specification::ReshapeLikeLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::ReshapeStaticLayerParams *CoreML::Specification::ReshapeStaticLayerParams::ReshapeStaticLayerParams(CoreML::Specification::ReshapeStaticLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1EF0D66D8;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::ReshapeStaticLayerParams *)&CoreML::Specification::_ReshapeStaticLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 9) = 0;
  return this;
}

void sub_19EB9AA90(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ReshapeStaticLayerParams::MergePartialFromCodedStream(CoreML::Specification::ReshapeStaticLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      BOOL v6 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      if ((v8 & 0xFFFFFFF8) != 8) {
        break;
      }
      if (v8 == 8)
      {
        if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(google::protobuf::internal::WireFormatLite::FieldType)3>(10, a2, (uint64_t)v5) & 1) == 0)return 0; {
      }
        }
      else
      {
        if (v8 != 10) {
          break;
        }
        BOOL v10 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v10 < 0)
        {
          int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0) {
            return 0;
          }
        }
        else
        {
          int VarintSizeAsIntFallback = *v10;
          *(void *)a2 = v10 + 1;
        }
        int v13 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        while (1)
        {
          int v14 = *((_DWORD *)a2 + 10);
          uint64_t v15 = *((int *)a2 + 11);
          unint64_t v16 = *((void *)a2 + 1);
          int v17 = *((_DWORD *)a2 + 6);
          if (v14 == 0x7FFFFFFF) {
            break;
          }
          uint64_t v18 = *(char **)a2;
          if ((int)(v14 - v17 + v15 + v16 - *(void *)a2) < 1) {
            break;
          }
          if ((unint64_t)v18 >= v16 || *v18 < 0)
          {
            unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v21 & 1) == 0) {
              return 0;
            }
            unint64_t v19 = Varint64Fallback;
          }
          else
          {
            unint64_t v19 = *v18;
            *(void *)a2 = v18 + 1;
          }
          signed int v22 = *((_DWORD *)this + 4);
          if (v22 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<double>::Reserve(v5, v22 + 1);
            signed int v22 = *v5;
          }
          uint64_t v23 = *((void *)this + 3);
          *((_DWORD *)this + 4) = v22 + 1;
          *(void *)(v23 + 8 * v22 + 8) = v19;
        }
        *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v13;
        uint64_t v24 = v16 + v15;
        *((void *)a2 + 1) = v16 + v15;
        int v25 = *((_DWORD *)a2 + 12);
        if (v25 >= v13) {
          int v25 = v13;
        }
        BOOL v26 = __OFSUB__(v17, v25);
        int v27 = v17 - v25;
        if ((v27 < 0) ^ v26 | (v27 == 0)) {
          int v27 = 0;
        }
        else {
          *((void *)a2 + 1) = v24 - v27;
        }
        *((_DWORD *)a2 + 11) = v27;
        *((unsigned char *)a2 + 36) = 0;
      }
    }
    if (v8) {
      BOOL v12 = (v8 & 7) == 4;
    }
    else {
      BOOL v12 = 1;
    }
    if (v12) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ReshapeDynamicLayerParams *CoreML::Specification::ReshapeDynamicLayerParams::ReshapeDynamicLayerParams(CoreML::Specification::ReshapeDynamicLayerParams *this)
{
  *(void *)this = &unk_1EF0D6CC8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::ReshapeDynamicLayerParams *)&CoreML::Specification::_ReshapeDynamicLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_19EB9AD20(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ReshapeDynamicLayerParams::MergePartialFromCodedStream(CoreML::Specification::ReshapeDynamicLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::RankPreservingReshapeLayerParams *CoreML::Specification::RankPreservingReshapeLayerParams::RankPreservingReshapeLayerParams(CoreML::Specification::RankPreservingReshapeLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1EF0D8B10;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::RankPreservingReshapeLayerParams *)&CoreML::Specification::_RankPreservingReshapeLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 9) = 0;
  return this;
}

void sub_19EB9AE1C(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::RankPreservingReshapeLayerParams::MergePartialFromCodedStream(CoreML::Specification::RankPreservingReshapeLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      BOOL v6 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      if ((v8 & 0xFFFFFFF8) != 8) {
        break;
      }
      if (v8 == 8)
      {
        if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(google::protobuf::internal::WireFormatLite::FieldType)3>(10, a2, (uint64_t)v5) & 1) == 0)return 0; {
      }
        }
      else
      {
        if (v8 != 10) {
          break;
        }
        BOOL v10 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v10 < 0)
        {
          int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0) {
            return 0;
          }
        }
        else
        {
          int VarintSizeAsIntFallback = *v10;
          *(void *)a2 = v10 + 1;
        }
        int v13 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        while (1)
        {
          int v14 = *((_DWORD *)a2 + 10);
          uint64_t v15 = *((int *)a2 + 11);
          unint64_t v16 = *((void *)a2 + 1);
          int v17 = *((_DWORD *)a2 + 6);
          if (v14 == 0x7FFFFFFF) {
            break;
          }
          uint64_t v18 = *(char **)a2;
          if ((int)(v14 - v17 + v15 + v16 - *(void *)a2) < 1) {
            break;
          }
          if ((unint64_t)v18 >= v16 || *v18 < 0)
          {
            unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v21 & 1) == 0) {
              return 0;
            }
            unint64_t v19 = Varint64Fallback;
          }
          else
          {
            unint64_t v19 = *v18;
            *(void *)a2 = v18 + 1;
          }
          signed int v22 = *((_DWORD *)this + 4);
          if (v22 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<double>::Reserve(v5, v22 + 1);
            signed int v22 = *v5;
          }
          uint64_t v23 = *((void *)this + 3);
          *((_DWORD *)this + 4) = v22 + 1;
          *(void *)(v23 + 8 * v22 + 8) = v19;
        }
        *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v13;
        uint64_t v24 = v16 + v15;
        *((void *)a2 + 1) = v16 + v15;
        int v25 = *((_DWORD *)a2 + 12);
        if (v25 >= v13) {
          int v25 = v13;
        }
        BOOL v26 = __OFSUB__(v17, v25);
        int v27 = v17 - v25;
        if ((v27 < 0) ^ v26 | (v27 == 0)) {
          int v27 = 0;
        }
        else {
          *((void *)a2 + 1) = v24 - v27;
        }
        *((_DWORD *)a2 + 11) = v27;
        *((unsigned char *)a2 + 36) = 0;
      }
    }
    if (v8) {
      BOOL v12 = (v8 & 7) == 4;
    }
    else {
      BOOL v12 = 1;
    }
    if (v12) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ConstantPaddingLayerParams *CoreML::Specification::ConstantPaddingLayerParams::ConstantPaddingLayerParams(CoreML::Specification::ConstantPaddingLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1EF0D6FC0;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::ConstantPaddingLayerParams *)&CoreML::Specification::_ConstantPaddingLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((unsigned char *)this + 4CoreML::Specification::NetworkUpdateParameters::New(this, 0) = 0;
  *((_DWORD *)this + 9) = 0;
  *((_DWORD *)this + 11) = 0;
  return this;
}

void sub_19EB9B0C0(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::ConstantPaddingLayerParams::MergePartialFromCodedStream(CoreML::Specification::ConstantPaddingLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          BOOL v6 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1))
          {
            LODWORD(v7) = 0;
LABEL_7:
            unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
            unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
            if ((v8 & 0x100000000) == 0) {
              goto LABEL_27;
            }
            goto LABEL_8;
          }
          uint64_t v7 = *v6;
          if (*v6 < 1) {
            goto LABEL_7;
          }
          *(void *)a2 = v6 + 1;
          unint64_t v8 = v7 | 0x100000000;
          if ((v8 & 0x100000000) == 0) {
            goto LABEL_27;
          }
LABEL_8:
          unsigned int v10 = v8 >> 3;
          if (v8 >> 3 != 3) {
            break;
          }
          if (v8 != 24) {
            goto LABEL_27;
          }
          int v14 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v14 < 0)
          {
            unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v19 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            unint64_t Varint64Fallback = *v14;
            *(void *)a2 = v14 + 1;
          }
          *((unsigned char *)this + 4CoreML::Specification::NetworkUpdateParameters::New(this, 0) = Varint64Fallback != 0;
        }
        if (v10 != 2) {
          break;
        }
        if (v8 == 16)
        {
          if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned long long,(google::protobuf::internal::WireFormatLite::FieldType)4>(0x12u, a2, (uint64_t)v5) & 1) == 0)return 0; {
        }
          }
        else
        {
          if (v8 != 18) {
            goto LABEL_27;
          }
          unint64_t v16 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v16 < 0)
          {
            int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            int VarintSizeAsIntFallback = *v16;
            *(void *)a2 = v16 + 1;
          }
          int v20 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          while (1)
          {
            int v21 = *((_DWORD *)a2 + 10);
            uint64_t v22 = *((int *)a2 + 11);
            unint64_t v23 = *((void *)a2 + 1);
            int v24 = *((_DWORD *)a2 + 6);
            if (v21 == 0x7FFFFFFF) {
              break;
            }
            int v25 = *(char **)a2;
            if ((int)(v21 - v24 + v22 + v23 - *(void *)a2) < 1) {
              break;
            }
            if ((unint64_t)v25 >= v23 || *v25 < 0)
            {
              unint64_t v27 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v28 & 1) == 0) {
                return 0;
              }
              unint64_t v26 = v27;
            }
            else
            {
              unint64_t v26 = *v25;
              *(void *)a2 = v25 + 1;
            }
            signed int v29 = *((_DWORD *)this + 4);
            if (v29 == *((_DWORD *)this + 5))
            {
              google::protobuf::RepeatedField<double>::Reserve(v5, v29 + 1);
              signed int v29 = *v5;
            }
            uint64_t v30 = *((void *)this + 3);
            *((_DWORD *)this + 4) = v29 + 1;
            *(void *)(v30 + 8 * v29 + 8) = v26;
          }
          *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v20;
          uint64_t v31 = v23 + v22;
          *((void *)a2 + 1) = v23 + v22;
          int v32 = *((_DWORD *)a2 + 12);
          if (v32 >= v20) {
            int v32 = v20;
          }
          BOOL v33 = __OFSUB__(v24, v32);
          int v34 = v24 - v32;
          if ((v34 < 0) ^ v33 | (v34 == 0)) {
            int v34 = 0;
          }
          else {
            *((void *)a2 + 1) = v31 - v34;
          }
          *((_DWORD *)a2 + 11) = v34;
          *((unsigned char *)a2 + 36) = 0;
        }
      }
      if (v10 != 1 || v8 != 13) {
        break;
      }
      unsigned int v36 = 0;
      BOOL v12 = *(unsigned int **)a2;
      if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) < 4)
      {
        BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v36);
        if (!result) {
          return result;
        }
        unsigned int v13 = v36;
      }
      else
      {
        unsigned int v13 = *v12;
        *(void *)a2 = v12 + 1;
      }
      *((_DWORD *)this + 9) = v13;
    }
LABEL_27:
    if (v8) {
      BOOL v18 = (v8 & 7) == 4;
    }
    else {
      BOOL v18 = 1;
    }
    if (v18) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::RandomNormalLikeLayerParams *CoreML::Specification::RandomNormalLikeLayerParams::RandomNormalLikeLayerParams(CoreML::Specification::RandomNormalLikeLayerParams *this)
{
  *(void *)this = &unk_1EF0D7A70;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::RandomNormalLikeLayerParams *)&CoreML::Specification::_RandomNormalLikeLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  return this;
}

void sub_19EB9B400(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::RandomNormalLikeLayerParams::MergePartialFromCodedStream(CoreML::Specification::RandomNormalLikeLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v5 = *a2;
          if (*a2 >= a2[1])
          {
            LODWORD(v6) = 0;
LABEL_6:
            unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
            unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
            if ((v7 & 0x100000000) == 0) {
              goto LABEL_25;
            }
            goto LABEL_7;
          }
          uint64_t v6 = *v5;
          if (*v5 < 1) {
            goto LABEL_6;
          }
          *a2 = v5 + 1;
          unint64_t v7 = v6 | 0x100000000;
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_25;
          }
LABEL_7:
          unsigned int v9 = v7 >> 3;
          if (v7 >> 3 != 3) {
            break;
          }
          if (v7 != 29) {
            goto LABEL_25;
          }
          unsigned int v20 = 0;
          unsigned int v13 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v20);
            if (!result) {
              return result;
            }
            unsigned int v14 = v20;
          }
          else
          {
            unsigned int v14 = *v13;
            *a2 = (char *)(v13 + 1);
          }
          *((_DWORD *)this + 7) = v14;
        }
        if (v9 != 2) {
          break;
        }
        if (v7 != 21) {
          goto LABEL_25;
        }
        unsigned int v21 = 0;
        uint64_t v15 = (unsigned int *)*a2;
        if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
        {
          BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v21);
          if (!result) {
            return result;
          }
          unsigned int v16 = v21;
        }
        else
        {
          unsigned int v16 = *v15;
          *a2 = (char *)(v15 + 1);
        }
        *((_DWORD *)this + 6) = v16;
      }
      if (v9 != 1 || v7 != 8) {
        break;
      }
      BOOL v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v18 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t Varint64Fallback = *v11;
        *a2 = v11 + 1;
      }
      *((void *)this + 2) = Varint64Fallback;
    }
LABEL_25:
    if (v7) {
      BOOL v17 = (v7 & 7) == 4;
    }
    else {
      BOOL v17 = 1;
    }
    if (v17) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::RandomNormalStaticLayerParams *CoreML::Specification::RandomNormalStaticLayerParams::RandomNormalStaticLayerParams(CoreML::Specification::RandomNormalStaticLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1EF0D80F8;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::RandomNormalStaticLayerParams *)&CoreML::Specification::_RandomNormalStaticLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0;
  *((_DWORD *)this + 14) = 0;
  return this;
}

void sub_19EB9B624(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::RandomNormalStaticLayerParams::MergePartialFromCodedStream(CoreML::Specification::RandomNormalStaticLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      uint64_t v6 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      switch(v8 >> 3)
      {
        case 1u:
          if (v8 != 8) {
            goto LABEL_26;
          }
          unsigned int v10 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v10 < 0)
          {
            unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v19 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            unint64_t Varint64Fallback = *v10;
            *(void *)a2 = v10 + 1;
          }
          *((void *)this + 5) = Varint64Fallback;
          continue;
        case 2u:
          if (v8 != 21) {
            goto LABEL_26;
          }
          unsigned int v37 = 0;
          BOOL v12 = *(unsigned int **)a2;
          if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) < 4)
          {
            BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v37);
            if (!result) {
              return result;
            }
            unsigned int v13 = v37;
          }
          else
          {
            unsigned int v13 = *v12;
            *(void *)a2 = v12 + 1;
          }
          *((_DWORD *)this + 12) = v13;
          continue;
        case 3u:
          if (v8 != 29) {
            goto LABEL_26;
          }
          unsigned int v36 = 0;
          unsigned int v14 = *(unsigned int **)a2;
          if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) < 4)
          {
            BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v36);
            if (!result) {
              return result;
            }
            unsigned int v15 = v36;
          }
          else
          {
            unsigned int v15 = *v14;
            *(void *)a2 = v14 + 1;
          }
          *((_DWORD *)this + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v15;
          continue;
        case 4u:
          if (v8 == 32)
          {
            if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned long long,(google::protobuf::internal::WireFormatLite::FieldType)4>(0x22u, a2, (uint64_t)v5) & 1) == 0)return 0; {
          }
            }
          else
          {
            if (v8 != 34) {
              goto LABEL_26;
            }
            unsigned int v16 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v16 < 0)
            {
              int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (VarintSizeAsIntFallback < 0) {
                return 0;
              }
            }
            else
            {
              int VarintSizeAsIntFallback = *v16;
              *(void *)a2 = v16 + 1;
            }
            int v20 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
            while (1)
            {
              int v21 = *((_DWORD *)a2 + 10);
              uint64_t v22 = *((int *)a2 + 11);
              unint64_t v23 = *((void *)a2 + 1);
              int v24 = *((_DWORD *)a2 + 6);
              if (v21 == 0x7FFFFFFF) {
                break;
              }
              int v25 = *(char **)a2;
              if ((int)(v21 - v24 + v22 + v23 - *(void *)a2) < 1) {
                break;
              }
              if ((unint64_t)v25 >= v23 || *v25 < 0)
              {
                unint64_t v27 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
                if ((v28 & 1) == 0) {
                  return 0;
                }
                unint64_t v26 = v27;
              }
              else
              {
                unint64_t v26 = *v25;
                *(void *)a2 = v25 + 1;
              }
              signed int v29 = *((_DWORD *)this + 4);
              if (v29 == *((_DWORD *)this + 5))
              {
                google::protobuf::RepeatedField<double>::Reserve(v5, v29 + 1);
                signed int v29 = *v5;
              }
              uint64_t v30 = *((void *)this + 3);
              *((_DWORD *)this + 4) = v29 + 1;
              *(void *)(v30 + 8 * v29 + 8) = v26;
            }
            *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v20;
            uint64_t v31 = v23 + v22;
            *((void *)a2 + 1) = v23 + v22;
            int v32 = *((_DWORD *)a2 + 12);
            if (v32 >= v20) {
              int v32 = v20;
            }
            BOOL v33 = __OFSUB__(v24, v32);
            int v34 = v24 - v32;
            if ((v34 < 0) ^ v33 | (v34 == 0)) {
              int v34 = 0;
            }
            else {
              *((void *)a2 + 1) = v31 - v34;
            }
            *((_DWORD *)a2 + 11) = v34;
            *((unsigned char *)a2 + 36) = 0;
          }
          break;
        default:
          goto LABEL_26;
      }
    }
LABEL_26:
    if (!v8 || (v8 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0) {
      return 0;
    }
  }
}

CoreML::Specification::RandomNormalDynamicLayerParams *CoreML::Specification::RandomNormalDynamicLayerParams::RandomNormalDynamicLayerParams(CoreML::Specification::RandomNormalDynamicLayerParams *this)
{
  *(void *)this = &unk_1EF0D83F0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::RandomNormalDynamicLayerParams *)&CoreML::Specification::_RandomNormalDynamicLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  return this;
}

void sub_19EB9B9D0(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::RandomNormalDynamicLayerParams::MergePartialFromCodedStream(CoreML::Specification::RandomNormalDynamicLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v5 = *a2;
          if (*a2 >= a2[1])
          {
            LODWORD(v6) = 0;
LABEL_6:
            unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
            unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
            if ((v7 & 0x100000000) == 0) {
              goto LABEL_25;
            }
            goto LABEL_7;
          }
          uint64_t v6 = *v5;
          if (*v5 < 1) {
            goto LABEL_6;
          }
          *a2 = v5 + 1;
          unint64_t v7 = v6 | 0x100000000;
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_25;
          }
LABEL_7:
          unsigned int v9 = v7 >> 3;
          if (v7 >> 3 != 3) {
            break;
          }
          if (v7 != 29) {
            goto LABEL_25;
          }
          unsigned int v20 = 0;
          unsigned int v13 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v20);
            if (!result) {
              return result;
            }
            unsigned int v14 = v20;
          }
          else
          {
            unsigned int v14 = *v13;
            *a2 = (char *)(v13 + 1);
          }
          *((_DWORD *)this + 7) = v14;
        }
        if (v9 != 2) {
          break;
        }
        if (v7 != 21) {
          goto LABEL_25;
        }
        unsigned int v21 = 0;
        unsigned int v15 = (unsigned int *)*a2;
        if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
        {
          BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v21);
          if (!result) {
            return result;
          }
          unsigned int v16 = v21;
        }
        else
        {
          unsigned int v16 = *v15;
          *a2 = (char *)(v15 + 1);
        }
        *((_DWORD *)this + 6) = v16;
      }
      if (v9 != 1 || v7 != 8) {
        break;
      }
      BOOL v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v18 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t Varint64Fallback = *v11;
        *a2 = v11 + 1;
      }
      *((void *)this + 2) = Varint64Fallback;
    }
LABEL_25:
    if (v7) {
      BOOL v17 = (v7 & 7) == 4;
    }
    else {
      BOOL v17 = 1;
    }
    if (v17) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::RandomUniformLikeLayerParams *CoreML::Specification::RandomUniformLikeLayerParams::RandomUniformLikeLayerParams(CoreML::Specification::RandomUniformLikeLayerParams *this)
{
  *(void *)this = &unk_1EF0D7D68;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::RandomUniformLikeLayerParams *)&CoreML::Specification::_RandomUniformLikeLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  return this;
}

void sub_19EB9BBE8(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::RandomUniformLikeLayerParams::MergePartialFromCodedStream(CoreML::Specification::RandomUniformLikeLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v5 = *a2;
          if (*a2 >= a2[1])
          {
            LODWORD(v6) = 0;
LABEL_6:
            unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
            unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
            if ((v7 & 0x100000000) == 0) {
              goto LABEL_25;
            }
            goto LABEL_7;
          }
          uint64_t v6 = *v5;
          if (*v5 < 1) {
            goto LABEL_6;
          }
          *a2 = v5 + 1;
          unint64_t v7 = v6 | 0x100000000;
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_25;
          }
LABEL_7:
          unsigned int v9 = v7 >> 3;
          if (v7 >> 3 != 3) {
            break;
          }
          if (v7 != 29) {
            goto LABEL_25;
          }
          unsigned int v20 = 0;
          unsigned int v13 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v20);
            if (!result) {
              return result;
            }
            unsigned int v14 = v20;
          }
          else
          {
            unsigned int v14 = *v13;
            *a2 = (char *)(v13 + 1);
          }
          *((_DWORD *)this + 7) = v14;
        }
        if (v9 != 2) {
          break;
        }
        if (v7 != 21) {
          goto LABEL_25;
        }
        unsigned int v21 = 0;
        unsigned int v15 = (unsigned int *)*a2;
        if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
        {
          BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v21);
          if (!result) {
            return result;
          }
          unsigned int v16 = v21;
        }
        else
        {
          unsigned int v16 = *v15;
          *a2 = (char *)(v15 + 1);
        }
        *((_DWORD *)this + 6) = v16;
      }
      if (v9 != 1 || v7 != 8) {
        break;
      }
      BOOL v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v18 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t Varint64Fallback = *v11;
        *a2 = v11 + 1;
      }
      *((void *)this + 2) = Varint64Fallback;
    }
LABEL_25:
    if (v7) {
      BOOL v17 = (v7 & 7) == 4;
    }
    else {
      BOOL v17 = 1;
    }
    if (v17) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::RandomUniformStaticLayerParams *CoreML::Specification::RandomUniformStaticLayerParams::RandomUniformStaticLayerParams(CoreML::Specification::RandomUniformStaticLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1EF0D8488;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::RandomUniformStaticLayerParams *)&CoreML::Specification::_RandomUniformStaticLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0;
  *((_DWORD *)this + 14) = 0;
  return this;
}

void sub_19EB9BE0C(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::RandomUniformStaticLayerParams::MergePartialFromCodedStream(CoreML::Specification::RandomUniformStaticLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      uint64_t v6 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      switch(v8 >> 3)
      {
        case 1u:
          if (v8 != 8) {
            goto LABEL_26;
          }
          unsigned int v10 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v10 < 0)
          {
            unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v19 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            unint64_t Varint64Fallback = *v10;
            *(void *)a2 = v10 + 1;
          }
          *((void *)this + 5) = Varint64Fallback;
          continue;
        case 2u:
          if (v8 != 21) {
            goto LABEL_26;
          }
          unsigned int v37 = 0;
          BOOL v12 = *(unsigned int **)a2;
          if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) < 4)
          {
            BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v37);
            if (!result) {
              return result;
            }
            unsigned int v13 = v37;
          }
          else
          {
            unsigned int v13 = *v12;
            *(void *)a2 = v12 + 1;
          }
          *((_DWORD *)this + 12) = v13;
          continue;
        case 3u:
          if (v8 != 29) {
            goto LABEL_26;
          }
          unsigned int v36 = 0;
          unsigned int v14 = *(unsigned int **)a2;
          if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) < 4)
          {
            BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v36);
            if (!result) {
              return result;
            }
            unsigned int v15 = v36;
          }
          else
          {
            unsigned int v15 = *v14;
            *(void *)a2 = v14 + 1;
          }
          *((_DWORD *)this + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v15;
          continue;
        case 4u:
          if (v8 == 32)
          {
            if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned long long,(google::protobuf::internal::WireFormatLite::FieldType)4>(0x22u, a2, (uint64_t)v5) & 1) == 0)return 0; {
          }
            }
          else
          {
            if (v8 != 34) {
              goto LABEL_26;
            }
            unsigned int v16 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v16 < 0)
            {
              int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (VarintSizeAsIntFallback < 0) {
                return 0;
              }
            }
            else
            {
              int VarintSizeAsIntFallback = *v16;
              *(void *)a2 = v16 + 1;
            }
            int v20 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
            while (1)
            {
              int v21 = *((_DWORD *)a2 + 10);
              uint64_t v22 = *((int *)a2 + 11);
              unint64_t v23 = *((void *)a2 + 1);
              int v24 = *((_DWORD *)a2 + 6);
              if (v21 == 0x7FFFFFFF) {
                break;
              }
              int v25 = *(char **)a2;
              if ((int)(v21 - v24 + v22 + v23 - *(void *)a2) < 1) {
                break;
              }
              if ((unint64_t)v25 >= v23 || *v25 < 0)
              {
                unint64_t v27 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
                if ((v28 & 1) == 0) {
                  return 0;
                }
                unint64_t v26 = v27;
              }
              else
              {
                unint64_t v26 = *v25;
                *(void *)a2 = v25 + 1;
              }
              signed int v29 = *((_DWORD *)this + 4);
              if (v29 == *((_DWORD *)this + 5))
              {
                google::protobuf::RepeatedField<double>::Reserve(v5, v29 + 1);
                signed int v29 = *v5;
              }
              uint64_t v30 = *((void *)this + 3);
              *((_DWORD *)this + 4) = v29 + 1;
              *(void *)(v30 + 8 * v29 + 8) = v26;
            }
            *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v20;
            uint64_t v31 = v23 + v22;
            *((void *)a2 + 1) = v23 + v22;
            int v32 = *((_DWORD *)a2 + 12);
            if (v32 >= v20) {
              int v32 = v20;
            }
            BOOL v33 = __OFSUB__(v24, v32);
            int v34 = v24 - v32;
            if ((v34 < 0) ^ v33 | (v34 == 0)) {
              int v34 = 0;
            }
            else {
              *((void *)a2 + 1) = v31 - v34;
            }
            *((_DWORD *)a2 + 11) = v34;
            *((unsigned char *)a2 + 36) = 0;
          }
          break;
        default:
          goto LABEL_26;
      }
    }
LABEL_26:
    if (!v8 || (v8 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0) {
      return 0;
    }
  }
}

CoreML::Specification::RandomUniformDynamicLayerParams *CoreML::Specification::RandomUniformDynamicLayerParams::RandomUniformDynamicLayerParams(CoreML::Specification::RandomUniformDynamicLayerParams *this)
{
  *(void *)this = &unk_1EF0D85B8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::RandomUniformDynamicLayerParams *)&CoreML::Specification::_RandomUniformDynamicLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  return this;
}

void sub_19EB9C1B8(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::RandomUniformDynamicLayerParams::MergePartialFromCodedStream(CoreML::Specification::RandomUniformDynamicLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v5 = *a2;
          if (*a2 >= a2[1])
          {
            LODWORD(v6) = 0;
LABEL_6:
            unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
            unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
            if ((v7 & 0x100000000) == 0) {
              goto LABEL_25;
            }
            goto LABEL_7;
          }
          uint64_t v6 = *v5;
          if (*v5 < 1) {
            goto LABEL_6;
          }
          *a2 = v5 + 1;
          unint64_t v7 = v6 | 0x100000000;
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_25;
          }
LABEL_7:
          unsigned int v9 = v7 >> 3;
          if (v7 >> 3 != 3) {
            break;
          }
          if (v7 != 29) {
            goto LABEL_25;
          }
          unsigned int v20 = 0;
          unsigned int v13 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v20);
            if (!result) {
              return result;
            }
            unsigned int v14 = v20;
          }
          else
          {
            unsigned int v14 = *v13;
            *a2 = (char *)(v13 + 1);
          }
          *((_DWORD *)this + 7) = v14;
        }
        if (v9 != 2) {
          break;
        }
        if (v7 != 21) {
          goto LABEL_25;
        }
        unsigned int v21 = 0;
        unsigned int v15 = (unsigned int *)*a2;
        if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
        {
          BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v21);
          if (!result) {
            return result;
          }
          unsigned int v16 = v21;
        }
        else
        {
          unsigned int v16 = *v15;
          *a2 = (char *)(v15 + 1);
        }
        *((_DWORD *)this + 6) = v16;
      }
      if (v9 != 1 || v7 != 8) {
        break;
      }
      BOOL v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v18 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t Varint64Fallback = *v11;
        *a2 = v11 + 1;
      }
      *((void *)this + 2) = Varint64Fallback;
    }
LABEL_25:
    if (v7) {
      BOOL v17 = (v7 & 7) == 4;
    }
    else {
      BOOL v17 = 1;
    }
    if (v17) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::RandomBernoulliLikeLayerParams *CoreML::Specification::RandomBernoulliLikeLayerParams::RandomBernoulliLikeLayerParams(CoreML::Specification::RandomBernoulliLikeLayerParams *this)
{
  *(void *)this = &unk_1EF0D8358;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::RandomBernoulliLikeLayerParams *)&CoreML::Specification::_RandomBernoulliLikeLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  return this;
}

void sub_19EB9C3CC(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::RandomBernoulliLikeLayerParams::MergePartialFromCodedStream(CoreML::Specification::RandomBernoulliLikeLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(v6) = 0;
LABEL_6:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
          unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_20;
          }
          goto LABEL_7;
        }
        uint64_t v6 = *v5;
        if (*v5 < 1) {
          goto LABEL_6;
        }
        *a2 = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_20;
        }
LABEL_7:
        if (v7 >> 3 != 2) {
          break;
        }
        if (v7 != 21) {
          goto LABEL_20;
        }
        unsigned int v17 = 0;
        BOOL v12 = (unsigned int *)*a2;
        if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
        {
          BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v17);
          if (!result) {
            return result;
          }
          unsigned int v13 = v17;
        }
        else
        {
          unsigned int v13 = *v12;
          *a2 = (char *)(v12 + 1);
        }
        *((_DWORD *)this + 6) = v13;
      }
      if (v7 >> 3 != 1 || v7 != 8) {
        break;
      }
      unsigned int v10 = *a2;
      if (*a2 >= a2[1] || *v10 < 0)
      {
        unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v15 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t Varint64Fallback = *v10;
        *a2 = v10 + 1;
      }
      *((void *)this + 2) = Varint64Fallback;
    }
LABEL_20:
    if (v7) {
      BOOL v14 = (v7 & 7) == 4;
    }
    else {
      BOOL v14 = 1;
    }
    if (v14) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::RandomBernoulliStaticLayerParams *CoreML::Specification::RandomBernoulliStaticLayerParams::RandomBernoulliStaticLayerParams(CoreML::Specification::RandomBernoulliStaticLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1EF0D8A78;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::RandomBernoulliStaticLayerParams *)&CoreML::Specification::_RandomBernoulliStaticLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0;
  return this;
}

void sub_19EB9C598(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::RandomBernoulliStaticLayerParams::MergePartialFromCodedStream(CoreML::Specification::RandomBernoulliStaticLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v6 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1))
          {
            LODWORD(v7) = 0;
LABEL_7:
            unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
            unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
            if ((v8 & 0x100000000) == 0) {
              goto LABEL_27;
            }
            goto LABEL_8;
          }
          uint64_t v7 = *v6;
          if (*v6 < 1) {
            goto LABEL_7;
          }
          *(void *)a2 = v6 + 1;
          unint64_t v8 = v7 | 0x100000000;
          if ((v8 & 0x100000000) == 0) {
            goto LABEL_27;
          }
LABEL_8:
          unsigned int v10 = v8 >> 3;
          if (v8 >> 3 != 3) {
            break;
          }
          if (v8 == 24)
          {
            if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned long long,(google::protobuf::internal::WireFormatLite::FieldType)4>(0x1Au, a2, (uint64_t)v5) & 1) == 0)return 0; {
          }
            }
          else
          {
            if (v8 != 26) {
              goto LABEL_27;
            }
            BOOL v14 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v14 < 0)
            {
              int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (VarintSizeAsIntFallback < 0) {
                return 0;
              }
            }
            else
            {
              int VarintSizeAsIntFallback = *v14;
              *(void *)a2 = v14 + 1;
            }
            int v20 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
            while (1)
            {
              int v21 = *((_DWORD *)a2 + 10);
              uint64_t v22 = *((int *)a2 + 11);
              unint64_t v23 = *((void *)a2 + 1);
              int v24 = *((_DWORD *)a2 + 6);
              if (v21 == 0x7FFFFFFF) {
                break;
              }
              int v25 = *(char **)a2;
              if ((int)(v21 - v24 + v22 + v23 - *(void *)a2) < 1) {
                break;
              }
              if ((unint64_t)v25 >= v23 || *v25 < 0)
              {
                unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
                if ((v28 & 1) == 0) {
                  return 0;
                }
                unint64_t v26 = Varint64Fallback;
              }
              else
              {
                unint64_t v26 = *v25;
                *(void *)a2 = v25 + 1;
              }
              signed int v29 = *((_DWORD *)this + 4);
              if (v29 == *((_DWORD *)this + 5))
              {
                google::protobuf::RepeatedField<double>::Reserve(v5, v29 + 1);
                signed int v29 = *v5;
              }
              uint64_t v30 = *((void *)this + 3);
              *((_DWORD *)this + 4) = v29 + 1;
              *(void *)(v30 + 8 * v29 + 8) = v26;
            }
            *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v20;
            uint64_t v31 = v23 + v22;
            *((void *)a2 + 1) = v23 + v22;
            int v32 = *((_DWORD *)a2 + 12);
            if (v32 >= v20) {
              int v32 = v20;
            }
            BOOL v33 = __OFSUB__(v24, v32);
            int v34 = v24 - v32;
            if ((v34 < 0) ^ v33 | (v34 == 0)) {
              int v34 = 0;
            }
            else {
              *((void *)a2 + 1) = v31 - v34;
            }
            *((_DWORD *)a2 + 11) = v34;
            *((unsigned char *)a2 + 36) = 0;
          }
        }
        if (v10 != 2) {
          break;
        }
        if (v8 != 21) {
          goto LABEL_27;
        }
        unsigned int v36 = 0;
        unsigned int v16 = *(unsigned int **)a2;
        if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) < 4)
        {
          BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v36);
          if (!result) {
            return result;
          }
          unsigned int v17 = v36;
        }
        else
        {
          unsigned int v17 = *v16;
          *(void *)a2 = v16 + 1;
        }
        *((_DWORD *)this + 12) = v17;
      }
      if (v10 != 1 || v8 != 8) {
        break;
      }
      BOOL v12 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v12 < 0)
      {
        unint64_t v13 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
        if ((v19 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t v13 = *v12;
        *(void *)a2 = v12 + 1;
      }
      *((void *)this + 5) = v13;
    }
LABEL_27:
    if (v8) {
      BOOL v18 = (v8 & 7) == 4;
    }
    else {
      BOOL v18 = 1;
    }
    if (v18) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::RandomBernoulliDynamicLayerParams *CoreML::Specification::RandomBernoulliDynamicLayerParams::RandomBernoulliDynamicLayerParams(CoreML::Specification::RandomBernoulliDynamicLayerParams *this)
{
  *(void *)this = &unk_1EF0D8D70;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::RandomBernoulliDynamicLayerParams *)&CoreML::Specification::_RandomBernoulliDynamicLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  return this;
}

void sub_19EB9C8CC(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::RandomBernoulliDynamicLayerParams::MergePartialFromCodedStream(CoreML::Specification::RandomBernoulliDynamicLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(v6) = 0;
LABEL_6:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
          unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_20;
          }
          goto LABEL_7;
        }
        uint64_t v6 = *v5;
        if (*v5 < 1) {
          goto LABEL_6;
        }
        *a2 = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_20;
        }
LABEL_7:
        if (v7 >> 3 != 2) {
          break;
        }
        if (v7 != 21) {
          goto LABEL_20;
        }
        unsigned int v17 = 0;
        BOOL v12 = (unsigned int *)*a2;
        if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
        {
          BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v17);
          if (!result) {
            return result;
          }
          unsigned int v13 = v17;
        }
        else
        {
          unsigned int v13 = *v12;
          *a2 = (char *)(v12 + 1);
        }
        *((_DWORD *)this + 6) = v13;
      }
      if (v7 >> 3 != 1 || v7 != 8) {
        break;
      }
      unsigned int v10 = *a2;
      if (*a2 >= a2[1] || *v10 < 0)
      {
        unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v15 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t Varint64Fallback = *v10;
        *a2 = v10 + 1;
      }
      *((void *)this + 2) = Varint64Fallback;
    }
LABEL_20:
    if (v7) {
      BOOL v14 = (v7 & 7) == 4;
    }
    else {
      BOOL v14 = 1;
    }
    if (v14) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::CategoricalDistributionLayerParams *CoreML::Specification::CategoricalDistributionLayerParams::CategoricalDistributionLayerParams(CoreML::Specification::CategoricalDistributionLayerParams *this)
{
  *(void *)this = &unk_1EF0D8E08;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::CategoricalDistributionLayerParams *)&CoreML::Specification::_CategoricalDistributionLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  return this;
}

void sub_19EB9CA90(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::CategoricalDistributionLayerParams::MergePartialFromCodedStream(CoreML::Specification::CategoricalDistributionLayerParams *this, char **a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 < a2[1]) {
        break;
      }
      LODWORD(v6) = 0;
LABEL_6:
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) == 0) {
        goto LABEL_28;
      }
LABEL_7:
      switch(v7 >> 3)
      {
        case 1u:
          if (v7 != 8) {
            goto LABEL_28;
          }
          unsigned int v9 = *a2;
          if (*a2 >= a2[1] || *v9 < 0)
          {
            unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
            if ((v20 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            unint64_t Varint64Fallback = *v9;
            *a2 = v9 + 1;
          }
          *((void *)this + 2) = Varint64Fallback;
          continue;
        case 2u:
          if (v7 != 16) {
            goto LABEL_28;
          }
          BOOL v11 = *a2;
          if (*a2 >= a2[1] || *v11 < 0)
          {
            unint64_t v12 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
            if ((v21 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            unint64_t v12 = *v11;
            *a2 = v11 + 1;
          }
          *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v12;
          continue;
        case 3u:
          if (v7 != 24) {
            goto LABEL_28;
          }
          unsigned int v13 = *a2;
          if (*a2 >= a2[1] || *v13 < 0)
          {
            unint64_t v14 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
            if ((v22 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            unint64_t v14 = *v13;
            *a2 = v13 + 1;
          }
          *((unsigned char *)this + 32) = v14 != 0;
          break;
        case 4u:
          if (v7 != 37) {
            goto LABEL_28;
          }
          unsigned int v25 = 0;
          char v15 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v25);
            if (!result) {
              return result;
            }
            unsigned int v16 = v25;
          }
          else
          {
            unsigned int v16 = *v15;
            *a2 = (char *)(v15 + 1);
          }
          *((_DWORD *)this + 9) = v16;
          continue;
        case 5u:
          if (v7 != 45) {
            goto LABEL_28;
          }
          unsigned int v24 = 0;
          unsigned int v17 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v24);
            if (!result) {
              return result;
            }
            unsigned int v18 = v24;
          }
          else
          {
            unsigned int v18 = *v17;
            *a2 = (char *)(v17 + 1);
          }
          *((_DWORD *)this + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v18;
          continue;
        default:
          goto LABEL_28;
      }
    }
    uint64_t v6 = *v5;
    if (*v5 < 1) {
      goto LABEL_6;
    }
    *a2 = v5 + 1;
    unint64_t v7 = v6 | 0x100000000;
    if ((v7 & 0x100000000) != 0) {
      goto LABEL_7;
    }
LABEL_28:
    if (!v7 || (v7 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)return 0; {
  }
    }
}

CoreML::Specification::ReduceL1LayerParams *CoreML::Specification::ReduceL1LayerParams::ReduceL1LayerParams(CoreML::Specification::ReduceL1LayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1EF0D3CB0;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::ReduceL1LayerParams *)&CoreML::Specification::_ReduceL1LayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_WORD *)this + 18) = 0;
  *((_DWORD *)this + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = 0;
  return this;
}

void sub_19EB9CD70(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ReduceL1LayerParams::MergePartialFromCodedStream(CoreML::Specification::ReduceL1LayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      uint64_t v6 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      unsigned int v10 = v8 >> 3;
      if (v8 >> 3 == 3)
      {
        if (v8 != 24) {
          break;
        }
        unsigned int v13 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v13 < 0)
        {
          unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v18 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t Varint64Fallback = *v13;
          *(void *)a2 = v13 + 1;
        }
        *((unsigned char *)this + 37) = Varint64Fallback != 0;
      }
      else if (v10 == 2)
      {
        if (v8 != 16) {
          break;
        }
        char v15 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v15 < 0)
        {
          unint64_t v16 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v19 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t v16 = *v15;
          *(void *)a2 = v15 + 1;
        }
        *((unsigned char *)this + 36) = v16 != 0;
      }
      else
      {
        if (v10 != 1) {
          break;
        }
        if (v8 == 8)
        {
          if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(google::protobuf::internal::WireFormatLite::FieldType)3>(10, a2, (uint64_t)v5) & 1) == 0)return 0; {
        }
          }
        else
        {
          if (v8 != 10) {
            break;
          }
          BOOL v11 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v11 < 0)
          {
            int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            int VarintSizeAsIntFallback = *v11;
            *(void *)a2 = v11 + 1;
          }
          int v20 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          while (1)
          {
            int v21 = *((_DWORD *)a2 + 10);
            uint64_t v22 = *((int *)a2 + 11);
            unint64_t v23 = *((void *)a2 + 1);
            int v24 = *((_DWORD *)a2 + 6);
            if (v21 == 0x7FFFFFFF) {
              break;
            }
            unsigned int v25 = *(char **)a2;
            if ((int)(v21 - v24 + v22 + v23 - *(void *)a2) < 1) {
              break;
            }
            if ((unint64_t)v25 >= v23 || *v25 < 0)
            {
              unint64_t v27 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v28 & 1) == 0) {
                return 0;
              }
              unint64_t v26 = v27;
            }
            else
            {
              unint64_t v26 = *v25;
              *(void *)a2 = v25 + 1;
            }
            signed int v29 = *((_DWORD *)this + 4);
            if (v29 == *((_DWORD *)this + 5))
            {
              google::protobuf::RepeatedField<double>::Reserve(v5, v29 + 1);
              signed int v29 = *v5;
            }
            uint64_t v30 = *((void *)this + 3);
            *((_DWORD *)this + 4) = v29 + 1;
            *(void *)(v30 + 8 * v29 + 8) = v26;
          }
          *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v20;
          uint64_t v31 = v23 + v22;
          *((void *)a2 + 1) = v23 + v22;
          int v32 = *((_DWORD *)a2 + 12);
          if (v32 >= v20) {
            int v32 = v20;
          }
          BOOL v33 = __OFSUB__(v24, v32);
          int v34 = v24 - v32;
          if ((v34 < 0) ^ v33 | (v34 == 0)) {
            int v34 = 0;
          }
          else {
            *((void *)a2 + 1) = v31 - v34;
          }
          *((_DWORD *)a2 + 11) = v34;
          *((unsigned char *)a2 + 36) = 0;
        }
      }
    }
    if (v8) {
      BOOL v17 = (v8 & 7) == 4;
    }
    else {
      BOOL v17 = 1;
    }
    if (v17) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ReduceL2LayerParams *CoreML::Specification::ReduceL2LayerParams::ReduceL2LayerParams(CoreML::Specification::ReduceL2LayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1EF0D3D48;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::ReduceL2LayerParams *)&CoreML::Specification::_ReduceL2LayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_WORD *)this + 18) = 0;
  *((_DWORD *)this + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = 0;
  return this;
}

void sub_19EB9D0B8(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ReduceL2LayerParams::MergePartialFromCodedStream(CoreML::Specification::ReduceL2LayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      uint64_t v6 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      unsigned int v10 = v8 >> 3;
      if (v8 >> 3 == 3)
      {
        if (v8 != 24) {
          break;
        }
        unsigned int v13 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v13 < 0)
        {
          unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v18 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t Varint64Fallback = *v13;
          *(void *)a2 = v13 + 1;
        }
        *((unsigned char *)this + 37) = Varint64Fallback != 0;
      }
      else if (v10 == 2)
      {
        if (v8 != 16) {
          break;
        }
        char v15 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v15 < 0)
        {
          unint64_t v16 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v19 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t v16 = *v15;
          *(void *)a2 = v15 + 1;
        }
        *((unsigned char *)this + 36) = v16 != 0;
      }
      else
      {
        if (v10 != 1) {
          break;
        }
        if (v8 == 8)
        {
          if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(google::protobuf::internal::WireFormatLite::FieldType)3>(10, a2, (uint64_t)v5) & 1) == 0)return 0; {
        }
          }
        else
        {
          if (v8 != 10) {
            break;
          }
          BOOL v11 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v11 < 0)
          {
            int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            int VarintSizeAsIntFallback = *v11;
            *(void *)a2 = v11 + 1;
          }
          int v20 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          while (1)
          {
            int v21 = *((_DWORD *)a2 + 10);
            uint64_t v22 = *((int *)a2 + 11);
            unint64_t v23 = *((void *)a2 + 1);
            int v24 = *((_DWORD *)a2 + 6);
            if (v21 == 0x7FFFFFFF) {
              break;
            }
            unsigned int v25 = *(char **)a2;
            if ((int)(v21 - v24 + v22 + v23 - *(void *)a2) < 1) {
              break;
            }
            if ((unint64_t)v25 >= v23 || *v25 < 0)
            {
              unint64_t v27 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v28 & 1) == 0) {
                return 0;
              }
              unint64_t v26 = v27;
            }
            else
            {
              unint64_t v26 = *v25;
              *(void *)a2 = v25 + 1;
            }
            signed int v29 = *((_DWORD *)this + 4);
            if (v29 == *((_DWORD *)this + 5))
            {
              google::protobuf::RepeatedField<double>::Reserve(v5, v29 + 1);
              signed int v29 = *v5;
            }
            uint64_t v30 = *((void *)this + 3);
            *((_DWORD *)this + 4) = v29 + 1;
            *(void *)(v30 + 8 * v29 + 8) = v26;
          }
          *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v20;
          uint64_t v31 = v23 + v22;
          *((void *)a2 + 1) = v23 + v22;
          int v32 = *((_DWORD *)a2 + 12);
          if (v32 >= v20) {
            int v32 = v20;
          }
          BOOL v33 = __OFSUB__(v24, v32);
          int v34 = v24 - v32;
          if ((v34 < 0) ^ v33 | (v34 == 0)) {
            int v34 = 0;
          }
          else {
            *((void *)a2 + 1) = v31 - v34;
          }
          *((_DWORD *)a2 + 11) = v34;
          *((unsigned char *)a2 + 36) = 0;
        }
      }
    }
    if (v8) {
      BOOL v17 = (v8 & 7) == 4;
    }
    else {
      BOOL v17 = 1;
    }
    if (v17) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ReduceMaxLayerParams *CoreML::Specification::ReduceMaxLayerParams::ReduceMaxLayerParams(CoreML::Specification::ReduceMaxLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1EF0D43D0;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::ReduceMaxLayerParams *)&CoreML::Specification::_ReduceMaxLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_WORD *)this + 18) = 0;
  *((_DWORD *)this + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = 0;
  return this;
}

void sub_19EB9D400(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ReduceMaxLayerParams::MergePartialFromCodedStream(CoreML::Specification::ReduceMaxLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      uint64_t v6 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      unsigned int v10 = v8 >> 3;
      if (v8 >> 3 == 3)
      {
        if (v8 != 24) {
          break;
        }
        unsigned int v13 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v13 < 0)
        {
          unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v18 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t Varint64Fallback = *v13;
          *(void *)a2 = v13 + 1;
        }
        *((unsigned char *)this + 37) = Varint64Fallback != 0;
      }
      else if (v10 == 2)
      {
        if (v8 != 16) {
          break;
        }
        char v15 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v15 < 0)
        {
          unint64_t v16 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v19 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t v16 = *v15;
          *(void *)a2 = v15 + 1;
        }
        *((unsigned char *)this + 36) = v16 != 0;
      }
      else
      {
        if (v10 != 1) {
          break;
        }
        if (v8 == 8)
        {
          if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(google::protobuf::internal::WireFormatLite::FieldType)3>(10, a2, (uint64_t)v5) & 1) == 0)return 0; {
        }
          }
        else
        {
          if (v8 != 10) {
            break;
          }
          BOOL v11 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v11 < 0)
          {
            int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            int VarintSizeAsIntFallback = *v11;
            *(void *)a2 = v11 + 1;
          }
          int v20 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          while (1)
          {
            int v21 = *((_DWORD *)a2 + 10);
            uint64_t v22 = *((int *)a2 + 11);
            unint64_t v23 = *((void *)a2 + 1);
            int v24 = *((_DWORD *)a2 + 6);
            if (v21 == 0x7FFFFFFF) {
              break;
            }
            unsigned int v25 = *(char **)a2;
            if ((int)(v21 - v24 + v22 + v23 - *(void *)a2) < 1) {
              break;
            }
            if ((unint64_t)v25 >= v23 || *v25 < 0)
            {
              unint64_t v27 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v28 & 1) == 0) {
                return 0;
              }
              unint64_t v26 = v27;
            }
            else
            {
              unint64_t v26 = *v25;
              *(void *)a2 = v25 + 1;
            }
            signed int v29 = *((_DWORD *)this + 4);
            if (v29 == *((_DWORD *)this + 5))
            {
              google::protobuf::RepeatedField<double>::Reserve(v5, v29 + 1);
              signed int v29 = *v5;
            }
            uint64_t v30 = *((void *)this + 3);
            *((_DWORD *)this + 4) = v29 + 1;
            *(void *)(v30 + 8 * v29 + 8) = v26;
          }
          *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v20;
          uint64_t v31 = v23 + v22;
          *((void *)a2 + 1) = v23 + v22;
          int v32 = *((_DWORD *)a2 + 12);
          if (v32 >= v20) {
            int v32 = v20;
          }
          BOOL v33 = __OFSUB__(v24, v32);
          int v34 = v24 - v32;
          if ((v34 < 0) ^ v33 | (v34 == 0)) {
            int v34 = 0;
          }
          else {
            *((void *)a2 + 1) = v31 - v34;
          }
          *((_DWORD *)a2 + 11) = v34;
          *((unsigned char *)a2 + 36) = 0;
        }
      }
    }
    if (v8) {
      BOOL v17 = (v8 & 7) == 4;
    }
    else {
      BOOL v17 = 1;
    }
    if (v17) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ReduceMinLayerParams *CoreML::Specification::ReduceMinLayerParams::ReduceMinLayerParams(CoreML::Specification::ReduceMinLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1EF0D4468;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::ReduceMinLayerParams *)&CoreML::Specification::_ReduceMinLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_WORD *)this + 18) = 0;
  *((_DWORD *)this + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = 0;
  return this;
}

void sub_19EB9D748(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ReduceMinLayerParams::MergePartialFromCodedStream(CoreML::Specification::ReduceMinLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      uint64_t v6 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      unsigned int v10 = v8 >> 3;
      if (v8 >> 3 == 3)
      {
        if (v8 != 24) {
          break;
        }
        unsigned int v13 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v13 < 0)
        {
          unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v18 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t Varint64Fallback = *v13;
          *(void *)a2 = v13 + 1;
        }
        *((unsigned char *)this + 37) = Varint64Fallback != 0;
      }
      else if (v10 == 2)
      {
        if (v8 != 16) {
          break;
        }
        char v15 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v15 < 0)
        {
          unint64_t v16 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v19 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t v16 = *v15;
          *(void *)a2 = v15 + 1;
        }
        *((unsigned char *)this + 36) = v16 != 0;
      }
      else
      {
        if (v10 != 1) {
          break;
        }
        if (v8 == 8)
        {
          if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(google::protobuf::internal::WireFormatLite::FieldType)3>(10, a2, (uint64_t)v5) & 1) == 0)return 0; {
        }
          }
        else
        {
          if (v8 != 10) {
            break;
          }
          BOOL v11 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v11 < 0)
          {
            int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            int VarintSizeAsIntFallback = *v11;
            *(void *)a2 = v11 + 1;
          }
          int v20 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          while (1)
          {
            int v21 = *((_DWORD *)a2 + 10);
            uint64_t v22 = *((int *)a2 + 11);
            unint64_t v23 = *((void *)a2 + 1);
            int v24 = *((_DWORD *)a2 + 6);
            if (v21 == 0x7FFFFFFF) {
              break;
            }
            unsigned int v25 = *(char **)a2;
            if ((int)(v21 - v24 + v22 + v23 - *(void *)a2) < 1) {
              break;
            }
            if ((unint64_t)v25 >= v23 || *v25 < 0)
            {
              unint64_t v27 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v28 & 1) == 0) {
                return 0;
              }
              unint64_t v26 = v27;
            }
            else
            {
              unint64_t v26 = *v25;
              *(void *)a2 = v25 + 1;
            }
            signed int v29 = *((_DWORD *)this + 4);
            if (v29 == *((_DWORD *)this + 5))
            {
              google::protobuf::RepeatedField<double>::Reserve(v5, v29 + 1);
              signed int v29 = *v5;
            }
            uint64_t v30 = *((void *)this + 3);
            *((_DWORD *)this + 4) = v29 + 1;
            *(void *)(v30 + 8 * v29 + 8) = v26;
          }
          *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v20;
          uint64_t v31 = v23 + v22;
          *((void *)a2 + 1) = v23 + v22;
          int v32 = *((_DWORD *)a2 + 12);
          if (v32 >= v20) {
            int v32 = v20;
          }
          BOOL v33 = __OFSUB__(v24, v32);
          int v34 = v24 - v32;
          if ((v34 < 0) ^ v33 | (v34 == 0)) {
            int v34 = 0;
          }
          else {
            *((void *)a2 + 1) = v31 - v34;
          }
          *((_DWORD *)a2 + 11) = v34;
          *((unsigned char *)a2 + 36) = 0;
        }
      }
    }
    if (v8) {
      BOOL v17 = (v8 & 7) == 4;
    }
    else {
      BOOL v17 = 1;
    }
    if (v17) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ReduceSumLayerParams *CoreML::Specification::ReduceSumLayerParams::ReduceSumLayerParams(CoreML::Specification::ReduceSumLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1EF0D4500;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::ReduceSumLayerParams *)&CoreML::Specification::_ReduceSumLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_WORD *)this + 18) = 0;
  *((_DWORD *)this + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = 0;
  return this;
}

void sub_19EB9DA90(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ReduceSumLayerParams::MergePartialFromCodedStream(CoreML::Specification::ReduceSumLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      uint64_t v6 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      unsigned int v10 = v8 >> 3;
      if (v8 >> 3 == 3)
      {
        if (v8 != 24) {
          break;
        }
        unsigned int v13 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v13 < 0)
        {
          unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v18 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t Varint64Fallback = *v13;
          *(void *)a2 = v13 + 1;
        }
        *((unsigned char *)this + 37) = Varint64Fallback != 0;
      }
      else if (v10 == 2)
      {
        if (v8 != 16) {
          break;
        }
        char v15 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v15 < 0)
        {
          unint64_t v16 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v19 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t v16 = *v15;
          *(void *)a2 = v15 + 1;
        }
        *((unsigned char *)this + 36) = v16 != 0;
      }
      else
      {
        if (v10 != 1) {
          break;
        }
        if (v8 == 8)
        {
          if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(google::protobuf::internal::WireFormatLite::FieldType)3>(10, a2, (uint64_t)v5) & 1) == 0)return 0; {
        }
          }
        else
        {
          if (v8 != 10) {
            break;
          }
          BOOL v11 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v11 < 0)
          {
            int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            int VarintSizeAsIntFallback = *v11;
            *(void *)a2 = v11 + 1;
          }
          int v20 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          while (1)
          {
            int v21 = *((_DWORD *)a2 + 10);
            uint64_t v22 = *((int *)a2 + 11);
            unint64_t v23 = *((void *)a2 + 1);
            int v24 = *((_DWORD *)a2 + 6);
            if (v21 == 0x7FFFFFFF) {
              break;
            }
            unsigned int v25 = *(char **)a2;
            if ((int)(v21 - v24 + v22 + v23 - *(void *)a2) < 1) {
              break;
            }
            if ((unint64_t)v25 >= v23 || *v25 < 0)
            {
              unint64_t v27 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v28 & 1) == 0) {
                return 0;
              }
              unint64_t v26 = v27;
            }
            else
            {
              unint64_t v26 = *v25;
              *(void *)a2 = v25 + 1;
            }
            signed int v29 = *((_DWORD *)this + 4);
            if (v29 == *((_DWORD *)this + 5))
            {
              google::protobuf::RepeatedField<double>::Reserve(v5, v29 + 1);
              signed int v29 = *v5;
            }
            uint64_t v30 = *((void *)this + 3);
            *((_DWORD *)this + 4) = v29 + 1;
            *(void *)(v30 + 8 * v29 + 8) = v26;
          }
          *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v20;
          uint64_t v31 = v23 + v22;
          *((void *)a2 + 1) = v23 + v22;
          int v32 = *((_DWORD *)a2 + 12);
          if (v32 >= v20) {
            int v32 = v20;
          }
          BOOL v33 = __OFSUB__(v24, v32);
          int v34 = v24 - v32;
          if ((v34 < 0) ^ v33 | (v34 == 0)) {
            int v34 = 0;
          }
          else {
            *((void *)a2 + 1) = v31 - v34;
          }
          *((_DWORD *)a2 + 11) = v34;
          *((unsigned char *)a2 + 36) = 0;
        }
      }
    }
    if (v8) {
      BOOL v17 = (v8 & 7) == 4;
    }
    else {
      BOOL v17 = 1;
    }
    if (v17) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ReduceProdLayerParams *CoreML::Specification::ReduceProdLayerParams::ReduceProdLayerParams(CoreML::Specification::ReduceProdLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1EF0D4FB0;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::ReduceProdLayerParams *)&CoreML::Specification::_ReduceProdLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_WORD *)this + 18) = 0;
  *((_DWORD *)this + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = 0;
  return this;
}

void sub_19EB9DDD8(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ReduceProdLayerParams::MergePartialFromCodedStream(CoreML::Specification::ReduceProdLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      uint64_t v6 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      unsigned int v10 = v8 >> 3;
      if (v8 >> 3 == 3)
      {
        if (v8 != 24) {
          break;
        }
        unsigned int v13 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v13 < 0)
        {
          unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v18 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t Varint64Fallback = *v13;
          *(void *)a2 = v13 + 1;
        }
        *((unsigned char *)this + 37) = Varint64Fallback != 0;
      }
      else if (v10 == 2)
      {
        if (v8 != 16) {
          break;
        }
        char v15 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v15 < 0)
        {
          unint64_t v16 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v19 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t v16 = *v15;
          *(void *)a2 = v15 + 1;
        }
        *((unsigned char *)this + 36) = v16 != 0;
      }
      else
      {
        if (v10 != 1) {
          break;
        }
        if (v8 == 8)
        {
          if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(google::protobuf::internal::WireFormatLite::FieldType)3>(10, a2, (uint64_t)v5) & 1) == 0)return 0; {
        }
          }
        else
        {
          if (v8 != 10) {
            break;
          }
          BOOL v11 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v11 < 0)
          {
            int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            int VarintSizeAsIntFallback = *v11;
            *(void *)a2 = v11 + 1;
          }
          int v20 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          while (1)
          {
            int v21 = *((_DWORD *)a2 + 10);
            uint64_t v22 = *((int *)a2 + 11);
            unint64_t v23 = *((void *)a2 + 1);
            int v24 = *((_DWORD *)a2 + 6);
            if (v21 == 0x7FFFFFFF) {
              break;
            }
            unsigned int v25 = *(char **)a2;
            if ((int)(v21 - v24 + v22 + v23 - *(void *)a2) < 1) {
              break;
            }
            if ((unint64_t)v25 >= v23 || *v25 < 0)
            {
              unint64_t v27 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v28 & 1) == 0) {
                return 0;
              }
              unint64_t v26 = v27;
            }
            else
            {
              unint64_t v26 = *v25;
              *(void *)a2 = v25 + 1;
            }
            signed int v29 = *((_DWORD *)this + 4);
            if (v29 == *((_DWORD *)this + 5))
            {
              google::protobuf::RepeatedField<double>::Reserve(v5, v29 + 1);
              signed int v29 = *v5;
            }
            uint64_t v30 = *((void *)this + 3);
            *((_DWORD *)this + 4) = v29 + 1;
            *(void *)(v30 + 8 * v29 + 8) = v26;
          }
          *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v20;
          uint64_t v31 = v23 + v22;
          *((void *)a2 + 1) = v23 + v22;
          int v32 = *((_DWORD *)a2 + 12);
          if (v32 >= v20) {
            int v32 = v20;
          }
          BOOL v33 = __OFSUB__(v24, v32);
          int v34 = v24 - v32;
          if ((v34 < 0) ^ v33 | (v34 == 0)) {
            int v34 = 0;
          }
          else {
            *((void *)a2 + 1) = v31 - v34;
          }
          *((_DWORD *)a2 + 11) = v34;
          *((unsigned char *)a2 + 36) = 0;
        }
      }
    }
    if (v8) {
      BOOL v17 = (v8 & 7) == 4;
    }
    else {
      BOOL v17 = 1;
    }
    if (v17) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ReduceMeanLayerParams *CoreML::Specification::ReduceMeanLayerParams::ReduceMeanLayerParams(CoreML::Specification::ReduceMeanLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1EF0D4F18;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::ReduceMeanLayerParams *)&CoreML::Specification::_ReduceMeanLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_WORD *)this + 18) = 0;
  *((_DWORD *)this + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = 0;
  return this;
}

void sub_19EB9E120(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ReduceMeanLayerParams::MergePartialFromCodedStream(CoreML::Specification::ReduceMeanLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      uint64_t v6 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      unsigned int v10 = v8 >> 3;
      if (v8 >> 3 == 3)
      {
        if (v8 != 24) {
          break;
        }
        unsigned int v13 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v13 < 0)
        {
          unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v18 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t Varint64Fallback = *v13;
          *(void *)a2 = v13 + 1;
        }
        *((unsigned char *)this + 37) = Varint64Fallback != 0;
      }
      else if (v10 == 2)
      {
        if (v8 != 16) {
          break;
        }
        char v15 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v15 < 0)
        {
          unint64_t v16 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v19 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t v16 = *v15;
          *(void *)a2 = v15 + 1;
        }
        *((unsigned char *)this + 36) = v16 != 0;
      }
      else
      {
        if (v10 != 1) {
          break;
        }
        if (v8 == 8)
        {
          if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(google::protobuf::internal::WireFormatLite::FieldType)3>(10, a2, (uint64_t)v5) & 1) == 0)return 0; {
        }
          }
        else
        {
          if (v8 != 10) {
            break;
          }
          BOOL v11 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v11 < 0)
          {
            int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            int VarintSizeAsIntFallback = *v11;
            *(void *)a2 = v11 + 1;
          }
          int v20 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          while (1)
          {
            int v21 = *((_DWORD *)a2 + 10);
            uint64_t v22 = *((int *)a2 + 11);
            unint64_t v23 = *((void *)a2 + 1);
            int v24 = *((_DWORD *)a2 + 6);
            if (v21 == 0x7FFFFFFF) {
              break;
            }
            unsigned int v25 = *(char **)a2;
            if ((int)(v21 - v24 + v22 + v23 - *(void *)a2) < 1) {
              break;
            }
            if ((unint64_t)v25 >= v23 || *v25 < 0)
            {
              unint64_t v27 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v28 & 1) == 0) {
                return 0;
              }
              unint64_t v26 = v27;
            }
            else
            {
              unint64_t v26 = *v25;
              *(void *)a2 = v25 + 1;
            }
            signed int v29 = *((_DWORD *)this + 4);
            if (v29 == *((_DWORD *)this + 5))
            {
              google::protobuf::RepeatedField<double>::Reserve(v5, v29 + 1);
              signed int v29 = *v5;
            }
            uint64_t v30 = *((void *)this + 3);
            *((_DWORD *)this + 4) = v29 + 1;
            *(void *)(v30 + 8 * v29 + 8) = v26;
          }
          *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v20;
          uint64_t v31 = v23 + v22;
          *((void *)a2 + 1) = v23 + v22;
          int v32 = *((_DWORD *)a2 + 12);
          if (v32 >= v20) {
            int v32 = v20;
          }
          BOOL v33 = __OFSUB__(v24, v32);
          int v34 = v24 - v32;
          if ((v34 < 0) ^ v33 | (v34 == 0)) {
            int v34 = 0;
          }
          else {
            *((void *)a2 + 1) = v31 - v34;
          }
          *((_DWORD *)a2 + 11) = v34;
          *((unsigned char *)a2 + 36) = 0;
        }
      }
    }
    if (v8) {
      BOOL v17 = (v8 & 7) == 4;
    }
    else {
      BOOL v17 = 1;
    }
    if (v17) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ReduceLogSumLayerParams *CoreML::Specification::ReduceLogSumLayerParams::ReduceLogSumLayerParams(CoreML::Specification::ReduceLogSumLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1EF0D60E8;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::ReduceLogSumLayerParams *)&CoreML::Specification::_ReduceLogSumLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_WORD *)this + 18) = 0;
  *((_DWORD *)this + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = 0;
  return this;
}

void sub_19EB9E468(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ReduceLogSumLayerParams::MergePartialFromCodedStream(CoreML::Specification::ReduceLogSumLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      uint64_t v6 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      unsigned int v10 = v8 >> 3;
      if (v8 >> 3 == 3)
      {
        if (v8 != 24) {
          break;
        }
        unsigned int v13 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v13 < 0)
        {
          unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v18 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t Varint64Fallback = *v13;
          *(void *)a2 = v13 + 1;
        }
        *((unsigned char *)this + 37) = Varint64Fallback != 0;
      }
      else if (v10 == 2)
      {
        if (v8 != 16) {
          break;
        }
        char v15 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v15 < 0)
        {
          unint64_t v16 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v19 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t v16 = *v15;
          *(void *)a2 = v15 + 1;
        }
        *((unsigned char *)this + 36) = v16 != 0;
      }
      else
      {
        if (v10 != 1) {
          break;
        }
        if (v8 == 8)
        {
          if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(google::protobuf::internal::WireFormatLite::FieldType)3>(10, a2, (uint64_t)v5) & 1) == 0)return 0; {
        }
          }
        else
        {
          if (v8 != 10) {
            break;
          }
          BOOL v11 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v11 < 0)
          {
            int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            int VarintSizeAsIntFallback = *v11;
            *(void *)a2 = v11 + 1;
          }
          int v20 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          while (1)
          {
            int v21 = *((_DWORD *)a2 + 10);
            uint64_t v22 = *((int *)a2 + 11);
            unint64_t v23 = *((void *)a2 + 1);
            int v24 = *((_DWORD *)a2 + 6);
            if (v21 == 0x7FFFFFFF) {
              break;
            }
            unsigned int v25 = *(char **)a2;
            if ((int)(v21 - v24 + v22 + v23 - *(void *)a2) < 1) {
              break;
            }
            if ((unint64_t)v25 >= v23 || *v25 < 0)
            {
              unint64_t v27 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v28 & 1) == 0) {
                return 0;
              }
              unint64_t v26 = v27;
            }
            else
            {
              unint64_t v26 = *v25;
              *(void *)a2 = v25 + 1;
            }
            signed int v29 = *((_DWORD *)this + 4);
            if (v29 == *((_DWORD *)this + 5))
            {
              google::protobuf::RepeatedField<double>::Reserve(v5, v29 + 1);
              signed int v29 = *v5;
            }
            uint64_t v30 = *((void *)this + 3);
            *((_DWORD *)this + 4) = v29 + 1;
            *(void *)(v30 + 8 * v29 + 8) = v26;
          }
          *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v20;
          uint64_t v31 = v23 + v22;
          *((void *)a2 + 1) = v23 + v22;
          int v32 = *((_DWORD *)a2 + 12);
          if (v32 >= v20) {
            int v32 = v20;
          }
          BOOL v33 = __OFSUB__(v24, v32);
          int v34 = v24 - v32;
          if ((v34 < 0) ^ v33 | (v34 == 0)) {
            int v34 = 0;
          }
          else {
            *((void *)a2 + 1) = v31 - v34;
          }
          *((_DWORD *)a2 + 11) = v34;
          *((unsigned char *)a2 + 36) = 0;
        }
      }
    }
    if (v8) {
      BOOL v17 = (v8 & 7) == 4;
    }
    else {
      BOOL v17 = 1;
    }
    if (v17) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ReduceSumSquareLayerParams *CoreML::Specification::ReduceSumSquareLayerParams::ReduceSumSquareLayerParams(CoreML::Specification::ReduceSumSquareLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1EF0D73E8;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::ReduceSumSquareLayerParams *)&CoreML::Specification::_ReduceSumSquareLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_WORD *)this + 18) = 0;
  *((_DWORD *)this + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = 0;
  return this;
}

void sub_19EB9E7B0(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ReduceSumSquareLayerParams::MergePartialFromCodedStream(CoreML::Specification::ReduceSumSquareLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      uint64_t v6 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      unsigned int v10 = v8 >> 3;
      if (v8 >> 3 == 3)
      {
        if (v8 != 24) {
          break;
        }
        unsigned int v13 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v13 < 0)
        {
          unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v18 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t Varint64Fallback = *v13;
          *(void *)a2 = v13 + 1;
        }
        *((unsigned char *)this + 37) = Varint64Fallback != 0;
      }
      else if (v10 == 2)
      {
        if (v8 != 16) {
          break;
        }
        char v15 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v15 < 0)
        {
          unint64_t v16 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v19 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t v16 = *v15;
          *(void *)a2 = v15 + 1;
        }
        *((unsigned char *)this + 36) = v16 != 0;
      }
      else
      {
        if (v10 != 1) {
          break;
        }
        if (v8 == 8)
        {
          if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(google::protobuf::internal::WireFormatLite::FieldType)3>(10, a2, (uint64_t)v5) & 1) == 0)return 0; {
        }
          }
        else
        {
          if (v8 != 10) {
            break;
          }
          BOOL v11 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v11 < 0)
          {
            int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            int VarintSizeAsIntFallback = *v11;
            *(void *)a2 = v11 + 1;
          }
          int v20 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          while (1)
          {
            int v21 = *((_DWORD *)a2 + 10);
            uint64_t v22 = *((int *)a2 + 11);
            unint64_t v23 = *((void *)a2 + 1);
            int v24 = *((_DWORD *)a2 + 6);
            if (v21 == 0x7FFFFFFF) {
              break;
            }
            unsigned int v25 = *(char **)a2;
            if ((int)(v21 - v24 + v22 + v23 - *(void *)a2) < 1) {
              break;
            }
            if ((unint64_t)v25 >= v23 || *v25 < 0)
            {
              unint64_t v27 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v28 & 1) == 0) {
                return 0;
              }
              unint64_t v26 = v27;
            }
            else
            {
              unint64_t v26 = *v25;
              *(void *)a2 = v25 + 1;
            }
            signed int v29 = *((_DWORD *)this + 4);
            if (v29 == *((_DWORD *)this + 5))
            {
              google::protobuf::RepeatedField<double>::Reserve(v5, v29 + 1);
              signed int v29 = *v5;
            }
            uint64_t v30 = *((void *)this + 3);
            *((_DWORD *)this + 4) = v29 + 1;
            *(void *)(v30 + 8 * v29 + 8) = v26;
          }
          *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v20;
          uint64_t v31 = v23 + v22;
          *((void *)a2 + 1) = v23 + v22;
          int v32 = *((_DWORD *)a2 + 12);
          if (v32 >= v20) {
            int v32 = v20;
          }
          BOOL v33 = __OFSUB__(v24, v32);
          int v34 = v24 - v32;
          if ((v34 < 0) ^ v33 | (v34 == 0)) {
            int v34 = 0;
          }
          else {
            *((void *)a2 + 1) = v31 - v34;
          }
          *((_DWORD *)a2 + 11) = v34;
          *((unsigned char *)a2 + 36) = 0;
        }
      }
    }
    if (v8) {
      BOOL v17 = (v8 & 7) == 4;
    }
    else {
      BOOL v17 = 1;
    }
    if (v17) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ReduceLogSumExpLayerParams *CoreML::Specification::ReduceLogSumExpLayerParams::ReduceLogSumExpLayerParams(CoreML::Specification::ReduceLogSumExpLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1EF0D7350;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::ReduceLogSumExpLayerParams *)&CoreML::Specification::_ReduceLogSumExpLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_WORD *)this + 18) = 0;
  *((_DWORD *)this + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = 0;
  return this;
}

void sub_19EB9EAF8(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ReduceLogSumExpLayerParams::MergePartialFromCodedStream(CoreML::Specification::ReduceLogSumExpLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      uint64_t v6 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      unsigned int v10 = v8 >> 3;
      if (v8 >> 3 == 3)
      {
        if (v8 != 24) {
          break;
        }
        unsigned int v13 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v13 < 0)
        {
          unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v18 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t Varint64Fallback = *v13;
          *(void *)a2 = v13 + 1;
        }
        *((unsigned char *)this + 37) = Varint64Fallback != 0;
      }
      else if (v10 == 2)
      {
        if (v8 != 16) {
          break;
        }
        char v15 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v15 < 0)
        {
          unint64_t v16 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v19 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t v16 = *v15;
          *(void *)a2 = v15 + 1;
        }
        *((unsigned char *)this + 36) = v16 != 0;
      }
      else
      {
        if (v10 != 1) {
          break;
        }
        if (v8 == 8)
        {
          if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(google::protobuf::internal::WireFormatLite::FieldType)3>(10, a2, (uint64_t)v5) & 1) == 0)return 0; {
        }
          }
        else
        {
          if (v8 != 10) {
            break;
          }
          BOOL v11 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v11 < 0)
          {
            int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            int VarintSizeAsIntFallback = *v11;
            *(void *)a2 = v11 + 1;
          }
          int v20 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          while (1)
          {
            int v21 = *((_DWORD *)a2 + 10);
            uint64_t v22 = *((int *)a2 + 11);
            unint64_t v23 = *((void *)a2 + 1);
            int v24 = *((_DWORD *)a2 + 6);
            if (v21 == 0x7FFFFFFF) {
              break;
            }
            unsigned int v25 = *(char **)a2;
            if ((int)(v21 - v24 + v22 + v23 - *(void *)a2) < 1) {
              break;
            }
            if ((unint64_t)v25 >= v23 || *v25 < 0)
            {
              unint64_t v27 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v28 & 1) == 0) {
                return 0;
              }
              unint64_t v26 = v27;
            }
            else
            {
              unint64_t v26 = *v25;
              *(void *)a2 = v25 + 1;
            }
            signed int v29 = *((_DWORD *)this + 4);
            if (v29 == *((_DWORD *)this + 5))
            {
              google::protobuf::RepeatedField<double>::Reserve(v5, v29 + 1);
              signed int v29 = *v5;
            }
            uint64_t v30 = *((void *)this + 3);
            *((_DWORD *)this + 4) = v29 + 1;
            *(void *)(v30 + 8 * v29 + 8) = v26;
          }
          *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v20;
          uint64_t v31 = v23 + v22;
          *((void *)a2 + 1) = v23 + v22;
          int v32 = *((_DWORD *)a2 + 12);
          if (v32 >= v20) {
            int v32 = v20;
          }
          BOOL v33 = __OFSUB__(v24, v32);
          int v34 = v24 - v32;
          if ((v34 < 0) ^ v33 | (v34 == 0)) {
            int v34 = 0;
          }
          else {
            *((void *)a2 + 1) = v31 - v34;
          }
          *((_DWORD *)a2 + 11) = v34;
          *((unsigned char *)a2 + 36) = 0;
        }
      }
    }
    if (v8) {
      BOOL v17 = (v8 & 7) == 4;
    }
    else {
      BOOL v17 = 1;
    }
    if (v17) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::WhereNonZeroLayerParams *CoreML::Specification::WhereNonZeroLayerParams::WhereNonZeroLayerParams(CoreML::Specification::WhereNonZeroLayerParams *this)
{
  *(void *)this = &unk_1EF0D62B0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::WhereNonZeroLayerParams *)&CoreML::Specification::_WhereNonZeroLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_19EB9EE30(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::WhereNonZeroLayerParams::MergePartialFromCodedStream(CoreML::Specification::WhereNonZeroLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::MatrixBandPartLayerParams *CoreML::Specification::MatrixBandPartLayerParams::MatrixBandPartLayerParams(CoreML::Specification::MatrixBandPartLayerParams *this)
{
  *(void *)this = &unk_1EF0D6B00;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::MatrixBandPartLayerParams *)&CoreML::Specification::_MatrixBandPartLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  return this;
}

void sub_19EB9EF24(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::MatrixBandPartLayerParams::MergePartialFromCodedStream(CoreML::Specification::MatrixBandPartLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(v6) = 0;
LABEL_6:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
          unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_20;
          }
          goto LABEL_7;
        }
        uint64_t v6 = *v5;
        if (*v5 < 1) {
          goto LABEL_6;
        }
        *a2 = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_20;
        }
LABEL_7:
        if (v7 >> 3 != 2) {
          break;
        }
        if (v7 != 16) {
          goto LABEL_20;
        }
        unint64_t v12 = *a2;
        if (*a2 >= a2[1] || *v12 < 0)
        {
          unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
          if ((v16 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t Varint64Fallback = *v12;
          *a2 = v12 + 1;
        }
        *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = Varint64Fallback;
      }
      if (v7 >> 3 != 1 || v7 != 8) {
        break;
      }
      unsigned int v10 = *a2;
      if (*a2 >= a2[1] || *v10 < 0)
      {
        unint64_t v11 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v15 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t v11 = *v10;
        *a2 = v10 + 1;
      }
      *((void *)this + 2) = v11;
    }
LABEL_20:
    if (v7) {
      BOOL v14 = (v7 & 7) == 4;
    }
    else {
      BOOL v14 = 1;
    }
    if (v14) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::LowerTriangularLayerParams *CoreML::Specification::LowerTriangularLayerParams::LowerTriangularLayerParams(CoreML::Specification::LowerTriangularLayerParams *this)
{
  *(void *)this = &unk_1EF0D7220;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::LowerTriangularLayerParams *)&CoreML::Specification::_LowerTriangularLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return this;
}

void sub_19EB9F0D8(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::LowerTriangularLayerParams::MergePartialFromCodedStream(CoreML::Specification::LowerTriangularLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      unint64_t v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v13 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t Varint64Fallback = *v11;
        *a2 = v11 + 1;
      }
      *((void *)this + 2) = Varint64Fallback;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    if (v10) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::UpperTriangularLayerParams *CoreML::Specification::UpperTriangularLayerParams::UpperTriangularLayerParams(CoreML::Specification::UpperTriangularLayerParams *this)
{
  *(void *)this = &unk_1EF0D7518;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::UpperTriangularLayerParams *)&CoreML::Specification::_UpperTriangularLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return this;
}

void sub_19EB9F240(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::UpperTriangularLayerParams::MergePartialFromCodedStream(CoreML::Specification::UpperTriangularLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      unint64_t v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v13 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t Varint64Fallback = *v11;
        *a2 = v11 + 1;
      }
      *((void *)this + 2) = Varint64Fallback;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    if (v10) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::WhereBroadcastableLayerParams *CoreML::Specification::WhereBroadcastableLayerParams::WhereBroadcastableLayerParams(CoreML::Specification::WhereBroadcastableLayerParams *this)
{
  *(void *)this = &unk_1EF0D8228;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::WhereBroadcastableLayerParams *)&CoreML::Specification::_WhereBroadcastableLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_19EB9F3A4(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::WhereBroadcastableLayerParams::MergePartialFromCodedStream(CoreML::Specification::WhereBroadcastableLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::LayerNormalizationLayerParams *CoreML::Specification::LayerNormalizationLayerParams::LayerNormalizationLayerParams(CoreML::Specification::LayerNormalizationLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1EF0D7F30;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::LayerNormalizationLayerParams *)&CoreML::Specification::_LayerNormalizationLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0;
  *((void *)this + 7) = 0;
  return this;
}

void sub_19EB9F4A4(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::LayerNormalizationLayerParams::MergePartialFromCodedStream(CoreML::Specification::LayerNormalizationLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      BOOL v6 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      switch(v8 >> 3)
      {
        case 1u:
          if (v8 == 8)
          {
            if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(google::protobuf::internal::WireFormatLite::FieldType)3>(10, a2, (uint64_t)v5) & 1) == 0)return 0; {
          }
            }
          else
          {
            if (v8 != 10) {
              goto LABEL_27;
            }
            BOOL v10 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v10 < 0)
            {
              int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (VarintSizeAsIntFallback < 0) {
                return 0;
              }
            }
            else
            {
              int VarintSizeAsIntFallback = *v10;
              *(void *)a2 = v10 + 1;
            }
            int v24 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
            while (1)
            {
              int v25 = *((_DWORD *)a2 + 10);
              uint64_t v26 = *((int *)a2 + 11);
              unint64_t v27 = *((void *)a2 + 1);
              int v28 = *((_DWORD *)a2 + 6);
              if (v25 == 0x7FFFFFFF) {
                break;
              }
              signed int v29 = *(char **)a2;
              if ((int)(v25 - v28 + v26 + v27 - *(void *)a2) < 1) {
                break;
              }
              if ((unint64_t)v29 >= v27 || *v29 < 0)
              {
                unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
                if ((v32 & 1) == 0) {
                  return 0;
                }
                unint64_t v30 = Varint64Fallback;
              }
              else
              {
                unint64_t v30 = *v29;
                *(void *)a2 = v29 + 1;
              }
              signed int v33 = *((_DWORD *)this + 4);
              if (v33 == *((_DWORD *)this + 5))
              {
                google::protobuf::RepeatedField<double>::Reserve(v5, v33 + 1);
                signed int v33 = *v5;
              }
              uint64_t v34 = *((void *)this + 3);
              *((_DWORD *)this + 4) = v33 + 1;
              *(void *)(v34 + 8 * v33 + 8) = v30;
            }
            *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v24;
            uint64_t v35 = v27 + v26;
            *((void *)a2 + 1) = v27 + v26;
            int v36 = *((_DWORD *)a2 + 12);
            if (v36 >= v24) {
              int v36 = v24;
            }
            BOOL v21 = __OFSUB__(v28, v36);
            int v37 = v28 - v36;
            if ((v37 < 0) ^ v21 | (v37 == 0)) {
              int v37 = 0;
            }
            else {
              *((void *)a2 + 1) = v35 - v37;
            }
            *((_DWORD *)a2 + 11) = v37;
            *((unsigned char *)a2 + 36) = 0;
          }
          break;
        case 2u:
          if (v8 != 21) {
            goto LABEL_27;
          }
          unsigned int v38 = 0;
          unint64_t v12 = *(unsigned int **)a2;
          if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) < 4)
          {
            BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v38);
            if (!result) {
              return result;
            }
            unsigned int v13 = v38;
          }
          else
          {
            unsigned int v13 = *v12;
            *(void *)a2 = v12 + 1;
          }
          *((_DWORD *)this + 14) = v13;
          continue;
        case 3u:
          if (v8 != 26) {
            goto LABEL_27;
          }
          BOOL v14 = (CoreML::Specification::WeightParams *)*((void *)this + 5);
          if (!v14) {
            operator new();
          }
          goto LABEL_24;
        case 4u:
          if (v8 != 34) {
            goto LABEL_27;
          }
          BOOL v14 = (CoreML::Specification::WeightParams *)*((void *)this + 6);
          if (!v14) {
            operator new();
          }
LABEL_24:
          char v15 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v15 < 0)
          {
            int v16 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v16 < 0) {
              return 0;
            }
          }
          else
          {
            int v16 = *v15;
            *(void *)a2 = v15 + 1;
          }
          int v18 = google::protobuf::io::CodedInputStream::PushLimit(a2, v16);
          int v20 = *((_DWORD *)a2 + 13);
          BOOL v21 = __OFSUB__(v20--, 1);
          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v20;
          if (v20 < 0 != v21) {
            return 0;
          }
          int v22 = v18;
          BOOL result = CoreML::Specification::WeightParams::MergePartialFromCodedStream(v14, a2, v19);
          if (!result) {
            return result;
          }
          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v22)) {
            return 0;
          }
          continue;
        default:
          goto LABEL_27;
      }
    }
LABEL_27:
    if (!v8 || (v8 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_19EB9F834(_Unwind_Exception *a1)
{
  MEMORY[0x19F3C1920](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::NonMaximumSuppressionLayerParams *CoreML::Specification::NonMaximumSuppressionLayerParams::NonMaximumSuppressionLayerParams(CoreML::Specification::NonMaximumSuppressionLayerParams *this)
{
  *(void *)this = &unk_1EF0D89E0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::NonMaximumSuppressionLayerParams *)&CoreML::Specification::_NonMaximumSuppressionLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  *((unsigned char *)this + 32) = 0;
  *((_DWORD *)this + 9) = 0;
  return this;
}

void sub_19EB9F8D4(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::NonMaximumSuppressionLayerParams::MergePartialFromCodedStream(CoreML::Specification::NonMaximumSuppressionLayerParams *this, char **a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 < a2[1]) {
        break;
      }
      LODWORD(v6) = 0;
LABEL_6:
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) == 0) {
        goto LABEL_24;
      }
LABEL_7:
      switch(v7 >> 3)
      {
        case 1u:
          if (v7 != 13) {
            goto LABEL_24;
          }
          unsigned int v21 = 0;
          unsigned int v9 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v21);
            if (!result) {
              return result;
            }
            unsigned int v10 = v21;
          }
          else
          {
            unsigned int v10 = *v9;
            *a2 = (char *)(v9 + 1);
          }
          *((_DWORD *)this + 4) = v10;
          continue;
        case 2u:
          if (v7 != 21) {
            goto LABEL_24;
          }
          unsigned int v20 = 0;
          unint64_t v11 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v20);
            if (!result) {
              return result;
            }
            unsigned int v12 = v20;
          }
          else
          {
            unsigned int v12 = *v11;
            *a2 = (char *)(v11 + 1);
          }
          *((_DWORD *)this + 5) = v12;
          continue;
        case 3u:
          if (v7 != 24) {
            goto LABEL_24;
          }
          unsigned int v13 = *a2;
          if (*a2 >= a2[1] || *v13 < 0)
          {
            *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
            if ((v17 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = *v13;
            *a2 = v13 + 1;
          }
          continue;
        case 4u:
          if (v7 != 32) {
            goto LABEL_24;
          }
          BOOL v14 = *a2;
          if (*a2 >= a2[1] || *v14 < 0)
          {
            unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
            if ((v18 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            unint64_t Varint64Fallback = *v14;
            *a2 = v14 + 1;
          }
          *((unsigned char *)this + 32) = Varint64Fallback != 0;
          break;
        default:
          goto LABEL_24;
      }
    }
    uint64_t v6 = *v5;
    if (*v5 < 1) {
      goto LABEL_6;
    }
    *a2 = v5 + 1;
    unint64_t v7 = v6 | 0x100000000;
    if ((v7 & 0x100000000) != 0) {
      goto LABEL_7;
    }
LABEL_24:
    if (!v7 || (v7 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)return 0; {
  }
    }
}

CoreML::Specification::OneHotLayerParams *CoreML::Specification::OneHotLayerParams::OneHotLayerParams(CoreML::Specification::OneHotLayerParams *this)
{
  *(void *)this = &unk_1EF0D2750;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::OneHotLayerParams *)&CoreML::Specification::_OneHotLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  *((_DWORD *)this + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = 0;
  *((void *)this + 4) = 0;
  return this;
}

void sub_19EB9FB68(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::OneHotLayerParams::MergePartialFromCodedStream(CoreML::Specification::OneHotLayerParams *this, char **a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 < a2[1]) {
        break;
      }
      LODWORD(v6) = 0;
LABEL_6:
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) == 0) {
        goto LABEL_24;
      }
LABEL_7:
      switch(v7 >> 3)
      {
        case 1u:
          if (v7 != 8) {
            goto LABEL_24;
          }
          unsigned int v9 = *a2;
          if (*a2 >= a2[1] || *v9 < 0)
          {
            *((void *)this + 2) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
            if ((v17 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            *((void *)this + 2) = *v9;
            *a2 = v9 + 1;
          }
          continue;
        case 2u:
          if (v7 != 16) {
            goto LABEL_24;
          }
          unsigned int v10 = *a2;
          if (*a2 >= a2[1] || *v10 < 0)
          {
            unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
            if ((v18 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            unint64_t Varint64Fallback = *v10;
            *a2 = v10 + 1;
          }
          *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = Varint64Fallback;
          break;
        case 3u:
          if (v7 != 29) {
            goto LABEL_24;
          }
          unsigned int v21 = 0;
          unsigned int v12 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v21);
            if (!result) {
              return result;
            }
            unsigned int v13 = v21;
          }
          else
          {
            unsigned int v13 = *v12;
            *a2 = (char *)(v12 + 1);
          }
          *((_DWORD *)this + 8) = v13;
          continue;
        case 4u:
          if (v7 != 37) {
            goto LABEL_24;
          }
          unsigned int v20 = 0;
          BOOL v14 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v20);
            if (!result) {
              return result;
            }
            unsigned int v15 = v20;
          }
          else
          {
            unsigned int v15 = *v14;
            *a2 = (char *)(v14 + 1);
          }
          *((_DWORD *)this + 9) = v15;
          continue;
        default:
          goto LABEL_24;
      }
    }
    uint64_t v6 = *v5;
    if (*v5 < 1) {
      goto LABEL_6;
    }
    *a2 = v5 + 1;
    unint64_t v7 = v6 | 0x100000000;
    if ((v7 & 0x100000000) != 0) {
      goto LABEL_7;
    }
LABEL_24:
    if (!v7 || (v7 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)return 0; {
  }
    }
}

CoreML::Specification::CumSumLayerParams *CoreML::Specification::CumSumLayerParams::CumSumLayerParams(CoreML::Specification::CumSumLayerParams *this)
{
  *(void *)this = &unk_1EF0D2458;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::CumSumLayerParams *)&CoreML::Specification::_CumSumLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_WORD *)this + 12) = 0;
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 7) = 0;
  return this;
}

void sub_19EB9FDF4(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::CumSumLayerParams::MergePartialFromCodedStream(CoreML::Specification::CumSumLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v5 = *a2;
          if (*a2 >= a2[1])
          {
            LODWORD(v6) = 0;
LABEL_6:
            unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
            unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
            if ((v7 & 0x100000000) == 0) {
              goto LABEL_25;
            }
            goto LABEL_7;
          }
          uint64_t v6 = *v5;
          if (*v5 < 1) {
            goto LABEL_6;
          }
          *a2 = v5 + 1;
          unint64_t v7 = v6 | 0x100000000;
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_25;
          }
LABEL_7:
          unsigned int v9 = v7 >> 3;
          if (v7 >> 3 != 3) {
            break;
          }
          if (v7 != 24) {
            goto LABEL_25;
          }
          unsigned int v13 = *a2;
          if (*a2 >= a2[1] || *v13 < 0)
          {
            unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
            if ((v19 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            unint64_t Varint64Fallback = *v13;
            *a2 = v13 + 1;
          }
          *((unsigned char *)this + 25) = Varint64Fallback != 0;
        }
        if (v9 != 2) {
          break;
        }
        if (v7 != 16) {
          goto LABEL_25;
        }
        unsigned int v15 = *a2;
        if (*a2 >= a2[1] || *v15 < 0)
        {
          unint64_t v16 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
          if ((v20 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t v16 = *v15;
          *a2 = v15 + 1;
        }
        *((unsigned char *)this + 24) = v16 != 0;
      }
      if (v9 != 1 || v7 != 8) {
        break;
      }
      unint64_t v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        unint64_t v12 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v18 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t v12 = *v11;
        *a2 = v11 + 1;
      }
      *((void *)this + 2) = v12;
    }
LABEL_25:
    if (v7) {
      BOOL v17 = (v7 & 7) == 4;
    }
    else {
      BOOL v17 = 1;
    }
    if (v17) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ClampedReLULayerParams *CoreML::Specification::ClampedReLULayerParams::ClampedReLULayerParams(CoreML::Specification::ClampedReLULayerParams *this)
{
  *(void *)this = &unk_1EF0D5210;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::ClampedReLULayerParams *)&CoreML::Specification::_ClampedReLULayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return this;
}

void sub_19EBA0004(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::ClampedReLULayerParams::MergePartialFromCodedStream(CoreML::Specification::ClampedReLULayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(v6) = 0;
LABEL_6:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
          unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_20;
          }
          goto LABEL_7;
        }
        uint64_t v6 = *v5;
        if (*v5 < 1) {
          goto LABEL_6;
        }
        *a2 = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_20;
        }
LABEL_7:
        if (v7 >> 3 != 2) {
          break;
        }
        if (v7 != 21) {
          goto LABEL_20;
        }
        unsigned int v16 = 0;
        unint64_t v12 = (unsigned int *)*a2;
        if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
        {
          BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v16);
          if (!result) {
            return result;
          }
          unsigned int v13 = v16;
        }
        else
        {
          unsigned int v13 = *v12;
          *a2 = (char *)(v12 + 1);
        }
        *((_DWORD *)this + 5) = v13;
      }
      if (v7 >> 3 != 1 || v7 != 13) {
        break;
      }
      unsigned int v17 = 0;
      unsigned int v10 = (unsigned int *)*a2;
      if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
      {
        BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v17);
        if (!result) {
          return result;
        }
        unsigned int v11 = v17;
      }
      else
      {
        unsigned int v11 = *v10;
        *a2 = (char *)(v10 + 1);
      }
      *((_DWORD *)this + 4) = v11;
    }
LABEL_20:
    if (v7) {
      BOOL v14 = (v7 & 7) == 4;
    }
    else {
      BOOL v14 = 1;
    }
    BOOL result = v14;
    if (v14) {
      return result;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ArgSortLayerParams *CoreML::Specification::ArgSortLayerParams::ArgSortLayerParams(CoreML::Specification::ArgSortLayerParams *this)
{
  *(void *)this = &unk_1EF0D2C10;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::ArgSortLayerParams *)&CoreML::Specification::_ArgSortLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((unsigned char *)this + 24) = 0;
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 7) = 0;
  return this;
}

void sub_19EBA01D0(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ArgSortLayerParams::MergePartialFromCodedStream(CoreML::Specification::ArgSortLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(v6) = 0;
LABEL_6:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
          unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_20;
          }
          goto LABEL_7;
        }
        uint64_t v6 = *v5;
        if (*v5 < 1) {
          goto LABEL_6;
        }
        *a2 = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_20;
        }
LABEL_7:
        if (v7 >> 3 != 2) {
          break;
        }
        if (v7 != 16) {
          goto LABEL_20;
        }
        unint64_t v12 = *a2;
        if (*a2 >= a2[1] || *v12 < 0)
        {
          unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
          if ((v16 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t Varint64Fallback = *v12;
          *a2 = v12 + 1;
        }
        *((unsigned char *)this + 24) = Varint64Fallback != 0;
      }
      if (v7 >> 3 != 1 || v7 != 8) {
        break;
      }
      unsigned int v10 = *a2;
      if (*a2 >= a2[1] || *v10 < 0)
      {
        unint64_t v11 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v15 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t v11 = *v10;
        *a2 = v10 + 1;
      }
      *((void *)this + 2) = v11;
    }
LABEL_20:
    if (v7) {
      BOOL v14 = (v7 & 7) == 4;
    }
    else {
      BOOL v14 = 1;
    }
    if (v14) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}