uint64_t (*sub_23479D96C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_23479D9C0@<X0>(uint64_t a1@<X8>)
{
  return sub_23479DB10(&OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_recordFileUrl, a1);
}

uint64_t sub_23479D9CC(uint64_t a1)
{
  return sub_23479DB74(a1, &OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_recordFileUrl);
}

uint64_t (*sub_23479D9D8())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_23479DA34(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2687AE940);
  MEMORY[0x270FA5388](v8 - 8);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2346A7BCC(a1, (uint64_t)v10, &qword_2687AE940);
  uint64_t v11 = *a2 + *a5;
  swift_beginAccess();
  sub_2347AF240((uint64_t)v10, v11);
  return swift_endAccess();
}

uint64_t sub_23479DB04@<X0>(uint64_t a1@<X8>)
{
  return sub_23479DB10(&OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_replayFileUrl, a1);
}

uint64_t sub_23479DB10@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *a1;
  swift_beginAccess();
  return sub_2346A7BCC(v4, a2, &qword_2687AE940);
}

uint64_t sub_23479DB68(uint64_t a1)
{
  return sub_23479DB74(a1, &OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_replayFileUrl);
}

uint64_t sub_23479DB74(uint64_t a1, void *a2)
{
  uint64_t v4 = v2 + *a2;
  swift_beginAccess();
  sub_2347AF240(a1, v4);
  return swift_endAccess();
}

uint64_t (*sub_23479DBCC())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_23479DC28()
{
  return sub_23479DE58(&OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_spiReplayDelegate);
}

uint64_t sub_23479DC34(uint64_t a1, uint64_t a2)
{
  return sub_23479DEB0(a1, a2, &OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_spiReplayDelegate);
}

void (*sub_23479DC40(void *a1))(uint64_t, char)
{
  v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_spiReplayDelegate;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x237DC8170](v5);
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_23479DCC8;
}

uint64_t sub_23479DCCC(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(*a2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_loggingDirectory);
  swift_beginAccess();
  *uint64_t v4 = v3;
  v4[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23479DD38()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_loggingDirectory);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_23479DD90(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_loggingDirectory);
  swift_beginAccess();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_23479DDF0())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_23479DE4C()
{
  return sub_23479DE58(&OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_debugDelegate);
}

uint64_t sub_23479DE58(void *a1)
{
  uint64_t v2 = v1 + *a1;
  swift_beginAccess();
  return MEMORY[0x237DC8170](v2);
}

uint64_t sub_23479DEA4(uint64_t a1, uint64_t a2)
{
  return sub_23479DEB0(a1, a2, &OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_debugDelegate);
}

uint64_t sub_23479DEB0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = v3 + *a3;
  swift_beginAccess();
  *(void *)(v5 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*sub_23479DF18(void *a1))(uint64_t, char)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_debugDelegate;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x237DC8170](v5);
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_23479DCC8;
}

uint64_t sub_23479DFA0()
{
  uint64_t v1 = OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession____lazy_storage___iuLogManager;
  if (*(void *)(v0 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession____lazy_storage___iuLogManager))
  {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession____lazy_storage___iuLogManager);
  }
  else
  {
    type metadata accessor for IULogManager();
    uint64_t v2 = swift_allocObject();
    *(_WORD *)(v2 + 16) = 1792;
    *(void *)(v2 + 32) = 0;
    swift_unknownObjectWeakInit();
    dispatch_semaphore_t v3 = dispatch_semaphore_create(1);
    uint64_t v4 = MEMORY[0x263F8EE78];
    *(void *)(v2 + 40) = v3;
    *(void *)(v2 + 48) = v4;
    *(void *)(v2 + 32) = &off_26E776BB0;
    swift_unknownObjectWeakAssign();
    *(void *)(v0 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

void sub_23479E05C(uint64_t a1)
{
}

void sub_23479E084(uint64_t a1)
{
}

void sub_23479E0AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_2347EE3B0();
  uint64_t v18 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_2347EE410();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  v14 = (char *)v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v4 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_runActive) == 1)
  {
    v17[1] = *(void *)(v4 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_queue);
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = v4;
    *(void *)(v15 + 24) = a1;
    aBlock[4] = a3;
    aBlock[5] = v15;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_23477C05C;
    aBlock[3] = a4;
    v16 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    sub_2347EE3D0();
    uint64_t v19 = MEMORY[0x263F8EE78];
    sub_2347B41B4((unint64_t *)&qword_2687AD498, MEMORY[0x263F8F030]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2687AE930);
    sub_234723288((unint64_t *)&qword_2687AD4A0, (uint64_t *)&unk_2687AE930);
    sub_2347EEC30();
    MEMORY[0x237DC6990](0, v14, v10, v16);
    _Block_release(v16);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v10, v8);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    swift_release();
  }
}

void sub_23479E370(uint64_t a1)
{
  uint64_t v3 = sub_2347EE3B0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_2347EE410();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  v10 = (char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_runActive) == 1)
  {
    v13[0] = *(void *)(v1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_queue);
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = a1;
    *(void *)(v11 + 24) = v1;
    aBlock[4] = sub_2347B422C;
    aBlock[5] = v11;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_23477C05C;
    aBlock[3] = &block_descriptor_275;
    uint64_t v12 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_2347EE3D0();
    v13[1] = MEMORY[0x263F8EE78];
    sub_2347B41B4((unint64_t *)&qword_2687AD498, MEMORY[0x263F8F030]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2687AE930);
    sub_234723288((unint64_t *)&qword_2687AD4A0, (uint64_t *)&unk_2687AE930);
    sub_2347EEC30();
    MEMORY[0x237DC6990](0, v10, v6, v12);
    _Block_release(v12);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    swift_release();
  }
}

void sub_23479E640(unint64_t a1, id *a2)
{
  uint64_t isUniquelyReferenced_nonNull_native = sub_2347ED5C0();
  uint64_t v62 = *(void *)(isUniquelyReferenced_nonNull_native - 8);
  MEMORY[0x270FA5388](isUniquelyReferenced_nonNull_native);
  v69 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2687AEB70);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1 >> 62;
  if (a1 >> 62)
  {
LABEL_29:
    swift_bridgeObjectRetain();
    uint64_t v61 = sub_2347EEEC0();
    if (v61) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    uint64_t v61 = v10;
    if (v10)
    {
LABEL_3:
      uint64_t v58 = v9;
      v59 = a2;
      uint64_t v11 = (uint64_t *)((char *)a2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_keyframes);
      a2 = (id *)v61;
      unint64_t v67 = a1 & 0xC000000000000001;
      v68 = (void (**)(char *, char *, uint64_t))(v62 + 32);
      v65 = (unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48);
      v66 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v62 + 56);
      uint64_t v60 = v62 + 16;
      v63 = (void (**)(char *, uint64_t))(v62 + 8);
      unint64_t v64 = a1;
      uint64_t v9 = 4;
      while (1)
      {
        uint64_t v13 = v9 - 4;
        if (v67)
        {
          uint64_t v14 = MEMORY[0x237DC6CF0](v9 - 4, a1);
          uint64_t v15 = v9 - 3;
          if (__OFADD__(v13, 1)) {
            goto LABEL_26;
          }
        }
        else
        {
          uint64_t v14 = *(void *)(a1 + 8 * v9);
          swift_retain();
          uint64_t v15 = v9 - 3;
          if (__OFADD__(v13, 1))
          {
LABEL_26:
            __break(1u);
LABEL_27:
            __break(1u);
LABEL_28:
            __break(1u);
            goto LABEL_29;
          }
        }
        id v16 = objc_msgSend(*(id *)(v14 + 16), sel_identifier, v58, v59, v60);
        if (!v16)
        {
          (*v66)(v8, 1, 1, isUniquelyReferenced_nonNull_native);
LABEL_62:
          __break(1u);
LABEL_63:
          __break(1u);
LABEL_64:
          __break(1u);
          goto LABEL_65;
        }
        v17 = v16;
        v71 = (char *)v15;
        uint64_t v72 = v9;
        uint64_t v18 = v69;
        sub_2347ED580();

        uint64_t v19 = *v68;
        (*v68)(v8, v18, isUniquelyReferenced_nonNull_native);
        (*v66)(v8, 0, 1, isUniquelyReferenced_nonNull_native);
        a1 = isUniquelyReferenced_nonNull_native;
        if ((*v65)(v8, 1, isUniquelyReferenced_nonNull_native) == 1) {
          goto LABEL_62;
        }
        uint64_t v70 = v14;
        uint64_t v20 = *(void *)(v14 + 16);
        swift_beginAccess();
        swift_unknownObjectRetain();
        uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v73 = *v11;
        uint64_t v9 = v73;
        v21 = v11;
        *uint64_t v11 = 0x8000000000000000;
        unint64_t v23 = sub_2347BFA88((uint64_t)v8);
        uint64_t v24 = *(void *)(v9 + 16);
        BOOL v25 = (v22 & 1) == 0;
        uint64_t v26 = v24 + v25;
        if (__OFADD__(v24, v25)) {
          goto LABEL_27;
        }
        char v27 = v22;
        if (*(void *)(v9 + 24) >= v26)
        {
          if (isUniquelyReferenced_nonNull_native)
          {
            uint64_t v9 = v73;
            if ((v22 & 1) == 0) {
              goto LABEL_20;
            }
          }
          else
          {
            sub_2347D7978();
            uint64_t v9 = v73;
            if ((v27 & 1) == 0) {
              goto LABEL_20;
            }
          }
        }
        else
        {
          sub_2347D241C(v26, isUniquelyReferenced_nonNull_native);
          unint64_t v28 = sub_2347BFA88((uint64_t)v8);
          if ((v27 & 1) != (v29 & 1)) {
            goto LABEL_66;
          }
          unint64_t v23 = v28;
          uint64_t v9 = v73;
          if ((v27 & 1) == 0)
          {
LABEL_20:
            uint64_t v30 = v62;
            a2 = (id *)v69;
            uint64_t isUniquelyReferenced_nonNull_native = a1;
            (*(void (**)(char *, char *, unint64_t))(v62 + 16))(v69, v8, a1);
            *(void *)(v9 + 8 * (v23 >> 6) + 64) |= 1 << v23;
            v19((char *)(*(void *)(v9 + 48) + *(void *)(v30 + 72) * v23), (char *)a2, a1);
            *(void *)(*(void *)(v9 + 56) + 8 * v23) = v20;
            uint64_t v31 = *(void *)(v9 + 16);
            BOOL v32 = __OFADD__(v31, 1);
            uint64_t v33 = v31 + 1;
            if (v32) {
              goto LABEL_28;
            }
            *(void *)(v9 + 16) = v33;
            a2 = (id *)v61;
            goto LABEL_5;
          }
        }
        uint64_t v12 = *(void *)(v9 + 56);
        swift_unknownObjectRelease();
        *(void *)(v12 + 8 * v23) = v20;
        uint64_t isUniquelyReferenced_nonNull_native = a1;
LABEL_5:
        uint64_t v11 = v21;
        uint64_t *v21 = v9;
        swift_bridgeObjectRelease();
        (*v63)(v8, isUniquelyReferenced_nonNull_native);
        swift_endAccess();
        swift_release();
        uint64_t v9 = v72 + 1;
        a1 = v64;
        if (v71 == (char *)a2)
        {
          swift_bridgeObjectRelease();
          a2 = v59;
          uint64_t v34 = a1 & 0xFFFFFFFFFFFFFF8;
          if (v58) {
            goto LABEL_31;
          }
          goto LABEL_25;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v34 = a1 & 0xFFFFFFFFFFFFFF8;
  if (v9)
  {
LABEL_31:
    swift_bridgeObjectRetain();
    uint64_t v35 = sub_2347EEEC0();
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_25:
    uint64_t v35 = *(void *)(v34 + 16);
  }
  id v36 = (id)MEMORY[0x263F8EE78];
  if (v35)
  {
    v74 = (void *)MEMORY[0x263F8EE78];
    sub_2347EEE10();
    if (v35 < 0)
    {
      __break(1u);
      goto LABEL_59;
    }
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v37 = 0;
      do
      {
        uint64_t v38 = v37 + 1;
        MEMORY[0x237DC6CF0]();
        swift_unknownObjectRetain();
        swift_unknownObjectRelease();
        sub_2347EEDF0();
        sub_2347EEE20();
        sub_2347EEE30();
        sub_2347EEE00();
        uint64_t v37 = v38;
      }
      while (v35 != v38);
    }
    else
    {
      unint64_t v39 = a1 + 32;
      uint64_t v40 = v35;
      do
      {
        v39 += 8;
        swift_unknownObjectRetain();
        sub_2347EEDF0();
        sub_2347EEE20();
        sub_2347EEE30();
        sub_2347EEE00();
        --v40;
      }
      while (v40);
    }
    id v36 = v74;
  }
  v41 = *(id *)((char *)a2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_floorPlanGenerator);
  if (!v41) {
    goto LABEL_63;
  }
  id v42 = v41;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2687AE400);
  uint64_t isUniquelyReferenced_nonNull_native = sub_2347EE7C0();
  swift_bridgeObjectRelease();
  objc_msgSend(v42, sel_updateWithKeyframes_, isUniquelyReferenced_nonNull_native);

  unint64_t v43 = MEMORY[0x263F8EE78];
  if (v35)
  {
    v74 = (void *)MEMORY[0x263F8EE78];
    sub_2347EEE10();
    if ((v35 & 0x8000000000000000) == 0)
    {
      uint64_t v44 = 0;
      do
      {
        if ((a1 & 0xC000000000000001) != 0)
        {
          uint64_t v45 = MEMORY[0x237DC6CF0](v44, a1);
        }
        else
        {
          uint64_t v45 = *(void *)(a1 + 8 * v44 + 32);
          swift_retain();
        }
        ++v44;
        v46 = *(void **)(v45 + 24);
        objc_allocWithZone((Class)type metadata accessor for ObjectKitKeyframe(0));
        id v47 = v46;
        v48 = (void *)swift_unknownObjectRetain();
        sub_234776478(v48, v46);
        swift_release();
        swift_unknownObjectRelease();

        sub_2347EEDF0();
        sub_2347EEE20();
        sub_2347EEE30();
        sub_2347EEE00();
      }
      while (v35 != v44);
      unint64_t v43 = (unint64_t)v74;
      goto LABEL_50;
    }
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
LABEL_50:
  if ((*((unsigned char *)a2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_objectDetectionEnabled) & 1) != 0
    && (swift_beginAccess(), (id v49 = objc_msgSend(a2[7], sel_currentFrame)) != 0))
  {
    v50 = v49;
    id v51 = objc_msgSend(v49, sel_camera);

    objc_msgSend(v51, sel_transform);
    id v52 = objc_msgSend(a2[7], sel_currentFrame);
    if (!v52) {
      goto LABEL_64;
    }
    v53 = v52;
    type metadata accessor for OUFrame();
    swift_allocObject();
    id v36 = v53;
    sub_23476F7FC(v36);
    uint64_t isUniquelyReferenced_nonNull_native = *(uint64_t *)((char *)a2
                                                     + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_okObjDet);
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v35 = v54;
      if (!(v43 >> 62))
      {
        id v55 = (id)isUniquelyReferenced_nonNull_native;
        swift_bridgeObjectRetain();
        sub_2347EF0A0();
LABEL_56:
        swift_bridgeObjectRelease();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2687AE3E0);
        v56 = (void *)sub_2347EE7C0();
        swift_bridgeObjectRelease();
        objc_msgSend((id)isUniquelyReferenced_nonNull_native, sel_updateWithKeyframes_ouframe_, v56, v35);

        swift_release();
        return;
      }
LABEL_60:
      id v57 = (id)isUniquelyReferenced_nonNull_native;
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2687AE3E0);
      sub_2347EEEB0();
      swift_bridgeObjectRelease();
      goto LABEL_56;
    }
LABEL_65:
    __break(1u);
LABEL_66:
    sub_2347EF0F0();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

void sub_23479EEAC()
{
  uint64_t v1 = sub_2347EE3B0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_2347EE410();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void **)(v0 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_error);
  *(void *)(v0 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_error) = 0;

  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_configuration + 7) == 1)
  {
    v11[0] = *(void *)(v0 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_queue);
    aBlock[4] = sub_2347B4204;
    aBlock[5] = v0;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_23477C05C;
    aBlock[3] = &block_descriptor_269;
    uint64_t v10 = _Block_copy(aBlock);
    swift_retain();
    sub_2347EE3D0();
    v11[1] = MEMORY[0x263F8EE78];
    sub_2347B41B4((unint64_t *)&qword_2687AD498, MEMORY[0x263F8F030]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2687AE930);
    sub_234723288((unint64_t *)&qword_2687AD4A0, (uint64_t *)&unk_2687AE930);
    sub_2347EEC30();
    MEMORY[0x237DC6990](0, v8, v4, v10);
    _Block_release(v10);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_release();
  }
}

void sub_23479F170()
{
  uint64_t v1 = sub_2347EE3B0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_2347EE410();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_configuration + 7) == 1)
  {
    v10[0] = *(void *)(v0 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_queue);
    aBlock[4] = sub_2347B41FC;
    aBlock[5] = v0;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_23477C05C;
    aBlock[3] = &block_descriptor_266;
    uint64_t v9 = _Block_copy(aBlock);
    swift_retain();
    sub_2347EE3D0();
    v10[1] = MEMORY[0x263F8EE78];
    sub_2347B41B4((unint64_t *)&qword_2687AD498, MEMORY[0x263F8F030]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2687AE930);
    sub_234723288((unint64_t *)&qword_2687AD4A0, (uint64_t *)&unk_2687AE930);
    sub_2347EEC30();
    MEMORY[0x237DC6990](0, v8, v4, v9);
    _Block_release(v9);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_release();
  }
}

void sub_23479F420(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_trackingFailureReportCount);
  BOOL v2 = __OFADD__(v1, 1);
  uint64_t v3 = v1 + 1;
  if (v2)
  {
    __break(1u);
LABEL_7:
    swift_once();
    goto LABEL_4;
  }
  *(void *)(a1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_trackingFailureReportCount) = v3;
  if (v3 < 601) {
    return;
  }
  sub_2347AF304();
  uint64_t v5 = swift_allocError();
  *uint64_t v6 = 1;
  uint64_t v7 = *(void **)(a1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_error);
  *(void *)(a1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_error) = v5;

  if (qword_2687ABDD0 != -1) {
    goto LABEL_7;
  }
LABEL_4:
  uint64_t v8 = sub_2347EE690();
  sub_234719918(v8, v9);
  swift_bridgeObjectRelease();
  sub_23479CA5C(1);
}

void sub_23479F518()
{
  uint64_t v1 = sub_2347EE3B0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_2347EE410();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_configuration + 7) == 1)
  {
    v10[0] = *(void *)(v0 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_queue);
    aBlock[4] = sub_2347B4560;
    aBlock[5] = v0;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_23477C05C;
    aBlock[3] = &block_descriptor_263;
    uint64_t v9 = _Block_copy(aBlock);
    swift_retain();
    sub_2347EE3D0();
    v10[1] = MEMORY[0x263F8EE78];
    sub_2347B41B4((unint64_t *)&qword_2687AD498, MEMORY[0x263F8F030]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2687AE930);
    sub_234723288((unint64_t *)&qword_2687AD4A0, (uint64_t *)&unk_2687AE930);
    sub_2347EEC30();
    MEMORY[0x237DC6990](0, v8, v4, v9);
    _Block_release(v9);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_release();
  }
}

id sub_23479F7C8()
{
  v11[4] = *(id *)MEMORY[0x263EF8340];
  uint64_t v1 = v0 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_loggingDirectory;
  id result = (id)swift_beginAccess();
  if (*(void *)(v1 + 8))
  {
    uint64_t v3 = self;
    swift_bridgeObjectRetain();
    id v4 = objc_msgSend(v3, sel_defaultManager);
    uint64_t v5 = (void *)sub_2347EE5F0();
    unsigned int v6 = objc_msgSend(v4, sel_fileExistsAtPath_, v5);

    if (v6)
    {
      id v7 = objc_msgSend(v3, sel_defaultManager);
      uint64_t v8 = (void *)sub_2347EE5F0();
      swift_bridgeObjectRelease();
      v11[0] = 0;
      unsigned int v9 = objc_msgSend(v7, sel_removeItemAtPath_error_, v8, v11);

      if (v9)
      {
        return v11[0];
      }
      else
      {
        id v10 = v11[0];
        sub_2347ED350();

        swift_willThrow();
        return (id)swift_willThrow();
      }
    }
    else
    {
      return (id)swift_bridgeObjectRelease();
    }
  }
  return result;
}

void sub_23479F968(uint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v49 = a3;
  uint64_t v50 = a2;
  uint64_t v62 = *MEMORY[0x263EF8340];
  uint64_t v55 = sub_2347ED490();
  uint64_t v48 = *(void *)(v55 - 8);
  MEMORY[0x270FA5388](v55);
  id v47 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_2347ED370();
  uint64_t v45 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v46);
  uint64_t v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2346A9D9C(0, &qword_2687AEC20);
  unsigned int v6 = (void *)sub_2347EE940();
  *(void *)&long long v60 = 0x737463656A626FLL;
  *((void *)&v60 + 1) = 0xE700000000000000;
  id v7 = objc_msgSend(v6, sel___swift_objectForKeyedSubscript_, sub_2347EF0D0());
  swift_unknownObjectRelease();
  if (!v7)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v8 = (void *)sub_2346A9D9C(0, &qword_2687AEC28);
  sub_2347EEBD0();
  swift_unknownObjectRelease();
  sub_2346C3738(&v58, &v60);
  sub_2346A9D9C(0, &qword_2687AEC30);
  swift_dynamicCast();
  unsigned int v9 = (void *)v57;
  id v53 = v8;
  id v52 = (id)sub_2347EEA90();

  id v10 = (void *)sub_2347EE940();
  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFF980]), sel_init);
  *(void *)&long long v60 = 0x737463656A626FLL;
  *((void *)&v60 + 1) = 0xE700000000000000;
  objc_msgSend(v10, sel___swift_setObject_forKeyedSubscript_, v11, sub_2347EF0D0());

  swift_unknownObjectRelease();
  *(void *)&long long v60 = 0x737463656A626FLL;
  *((void *)&v60 + 1) = 0xE700000000000000;
  uint64_t v12 = sub_2347EF0D0();
  id v51 = v10;
  id v13 = objc_msgSend(v10, sel___swift_objectForKeyedSubscript_, v12);
  swift_unknownObjectRelease();
  if (!v13)
  {
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
  }
  sub_2347EEBD0();
  swift_unknownObjectRelease();
  sub_2346C3738(&v58, &v60);
  swift_dynamicCast();
  id v54 = (id)v57;
  id v44 = v6;
  uint64_t v14 = (void *)sub_2347EE940();
  id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFF980]), sel_init);
  *(void *)&long long v60 = 0x737463656A626FLL;
  *((void *)&v60 + 1) = 0xE700000000000000;
  objc_msgSend(v14, sel___swift_setObject_forKeyedSubscript_, v15, sub_2347EF0D0());

  swift_unknownObjectRelease();
  *(void *)&long long v60 = 0x737463656A626FLL;
  *((void *)&v60 + 1) = 0xE700000000000000;
  id v16 = objc_msgSend(v14, sel___swift_objectForKeyedSubscript_, sub_2347EF0D0());
  swift_unknownObjectRelease();
  if (!v16) {
    goto LABEL_30;
  }
  id v43 = v14;
  sub_2347EEBD0();
  swift_unknownObjectRelease();
  sub_2346C3738(&v58, &v60);
  swift_dynamicCast();
  id v53 = (id)v57;
  sub_2347EEA80();
  sub_2347ED360();
  uint64_t v17 = v55;
  if (v61)
  {
    while (1)
    {
      sub_2346C3738(&v60, &v58);
      sub_2346A9D9C(0, (unint64_t *)&unk_2687AEC00);
      swift_dynamicCast();
      uint64_t v18 = (void *)v57;
      *(void *)&long long v58 = 0x69645F7365786F62;
      *((void *)&v58 + 1) = 0xEA00000000007463;
      id v19 = objc_msgSend((id)v57, sel___swift_objectForKeyedSubscript_, sub_2347EF0D0());
      swift_unknownObjectRelease();
      if (!v19) {
        break;
      }
      sub_2347EEBD0();
      swift_unknownObjectRelease();
      sub_2346C3738(&v57, &v58);
      swift_dynamicCast();
      uint64_t v20 = v56;
      if (qword_2687ABE40 != -1) {
        swift_once();
      }
      sub_2347EE620();
      v21 = (void *)sub_2347EE5F0();
      swift_bridgeObjectRelease();
      id v22 = objc_msgSend(v20, sel_objectForKey_, v21);

      if (v22)
      {
        sub_2347EEBD0();
        swift_unknownObjectRelease();
        sub_2346A7C30((uint64_t)&v58, &qword_2687ACDB8);
        objc_msgSend(v54, sel_addObject_, v18);
      }
      else
      {
        long long v58 = 0u;
        long long v59 = 0u;
        sub_2346A7C30((uint64_t)&v58, &qword_2687ACDB8);
      }
      if (qword_2687ABE48 != -1) {
        swift_once();
      }
      sub_2347EE620();
      unint64_t v23 = (void *)sub_2347EE5F0();
      swift_bridgeObjectRelease();
      id v24 = objc_msgSend(v20, sel_objectForKey_, v23);

      if (v24)
      {
        sub_2347EEBD0();
        swift_unknownObjectRelease();
        sub_2346A7C30((uint64_t)&v58, &qword_2687ACDB8);
        objc_msgSend(v53, sel_addObject_, v18);
      }
      else
      {
        long long v58 = 0u;
        long long v59 = 0u;

        sub_2346A7C30((uint64_t)&v58, &qword_2687ACDB8);
      }
      uint64_t v17 = v55;
      sub_2347ED360();
      if (!v61) {
        goto LABEL_18;
      }
    }
    __break(1u);
    goto LABEL_28;
  }
LABEL_18:
  (*(void (**)(char *, uint64_t))(v45 + 8))(v5, v46);
  uint64_t v25 = v50;
  unint64_t v26 = v49;
  *(void *)&long long v60 = v50;
  *((void *)&v60 + 1) = v49;
  swift_bridgeObjectRetain();
  sub_2347EE6F0();
  swift_bridgeObjectRetain();
  sub_2347EE6F0();
  swift_bridgeObjectRelease();
  *(void *)&long long v60 = v25;
  *((void *)&v60 + 1) = v26;
  swift_bridgeObjectRetain();
  sub_2347EE6F0();
  swift_bridgeObjectRetain();
  sub_2347EE6F0();
  swift_bridgeObjectRelease();
  char v27 = v47;
  sub_2347ED3C0();
  swift_bridgeObjectRelease();
  unint64_t v28 = (void *)sub_2347ED3F0();
  char v29 = *(void (**)(char *, uint64_t))(v48 + 8);
  v29(v27, v17);
  *(void *)&long long v60 = 0;
  unsigned int v30 = objc_msgSend(v51, sel_writeToURL_error_, v28, &v60);

  id v31 = (id)v60;
  if (v30)
  {
    sub_2347ED3C0();
    swift_bridgeObjectRelease();
    BOOL v32 = (void *)sub_2347ED3F0();
    v29(v27, v17);
    *(void *)&long long v60 = 0;
    id v33 = v43;
    unsigned int v34 = objc_msgSend(v43, sel_writeToURL_error_, v32, &v60);

    id v35 = (id)v60;
    if (v34)
    {

      return;
    }
    id v36 = v35;
  }
  else
  {
    id v36 = v31;
    swift_bridgeObjectRelease();
    id v33 = v43;
  }
  uint64_t v37 = (void *)sub_2347ED350();

  swift_willThrow();
  swift_bridgeObjectRetain_n();
  uint64_t v38 = sub_2347EE350();
  os_log_type_t v39 = sub_2347EE960();
  if (os_log_type_enabled(v38, v39))
  {
    uint64_t v40 = (uint8_t *)swift_slowAlloc();
    uint64_t v41 = swift_slowAlloc();
    *(void *)&long long v60 = v41;
    *(_DWORD *)uint64_t v40 = 136315138;
    swift_bridgeObjectRetain();
    *(void *)&long long v58 = sub_234775704(v50, v26, (uint64_t *)&v60);
    sub_2347EEB30();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23468B000, v38, v39, "Unable to log fp_output_wi_beautify.plist or fp_output_no_beautify.plist to %s!", v40, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x237DC8070](v41, -1, -1);
    MEMORY[0x237DC8070](v40, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_2347A049C(long long *a1, uint64_t a2)
{
  uint64_t v5 = sub_2347EE3B0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  id v35 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_2347EE410();
  uint64_t v34 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  unsigned int v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CapturedRoom(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x270FA5388](v10 - 8);
  id v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v14 = a1[3];
  long long v41 = a1[2];
  long long v42 = v14;
  long long v43 = a1[4];
  long long v15 = a1[1];
  long long v39 = *a1;
  long long v40 = v15;
  id v16 = (uint64_t *)(v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_loggingDirectory);
  swift_beginAccess();
  uint64_t v17 = v16[1];
  if (v17)
  {
    uint64_t v32 = *v16;
    uint64_t v33 = *(void *)(v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_saveFileQueue);
    sub_2347B3E20(a2, (uint64_t)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CapturedRoom);
    unint64_t v18 = (*(unsigned __int8 *)(v11 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    unint64_t v19 = (v12 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v20 = v6;
    v21 = (_OWORD *)swift_allocObject();
    long long v22 = v42;
    v21[3] = v41;
    v21[4] = v22;
    v21[5] = v43;
    long long v23 = v40;
    v21[1] = v39;
    v21[2] = v23;
    sub_2347B4314((uint64_t)v13, (uint64_t)v21 + v18, type metadata accessor for CapturedRoom);
    *(void *)((char *)v21 + v19) = v2;
    id v24 = (void *)((char *)v21 + ((v19 + 15) & 0xFFFFFFFFFFFFFFF8));
    *id v24 = v32;
    v24[1] = v17;
    aBlock[4] = sub_2347B4114;
    aBlock[5] = v21;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_23477C05C;
    aBlock[3] = &block_descriptor_260;
    uint64_t v25 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    sub_23477BB74((uint64_t)&v39);
    swift_retain();
    sub_2347EE3D0();
    uint64_t v37 = MEMORY[0x263F8EE78];
    sub_2347B41B4((unint64_t *)&qword_2687AD498, MEMORY[0x263F8F030]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2687AE930);
    sub_234723288((unint64_t *)&qword_2687AD4A0, (uint64_t *)&unk_2687AE930);
    unint64_t v26 = v35;
    sub_2347EEC30();
    MEMORY[0x237DC6990](0, v9, v26, v25);
    _Block_release(v25);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v26, v5);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v9, v36);
    return swift_release();
  }
  else
  {
    uint64_t v28 = v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_debugDelegate;
    swift_beginAccess();
    uint64_t result = MEMORY[0x237DC8170](v28);
    if (result)
    {
      uint64_t v29 = *(void *)(v28 + 8);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v29 + 40))(ObjectType, v29);
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

void sub_2347A0938(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, unint64_t a5)
{
  unint64_t v54 = a5;
  uint64_t v55 = a4;
  uint64_t v56 = a3;
  uint64_t v57 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2687AE940);
  MEMORY[0x270FA5388](v5 - 8);
  id v52 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_2347ED490();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  id v53 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v45 - v11;
  MEMORY[0x270FA5388](v13);
  id v51 = (char *)&v45 - v14;
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v45 - v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2687AEBF8);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_2347F0FA0;
  uint64_t v19 = MEMORY[0x263F8D310];
  *(void *)(v18 + 56) = MEMORY[0x263F8D310];
  *(void *)(v18 + 32) = 0x656D61726679656BLL;
  *(void *)(v18 + 40) = 0xE900000000000073;
  sub_2347ED5C0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2687AE400);
  sub_2347B41B4(&qword_2687ACDD0, MEMORY[0x263F07508]);
  uint64_t v20 = (void *)sub_2347EE510();
  id v21 = (id)RSKeyframeSequenceToDictionary();

  uint64_t v50 = v8;
  uint64_t v49 = v7;
  if (v21)
  {
    uint64_t v22 = sub_2347EE520();

    uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2687ACDC0);
    *(void *)&long long v58 = v22;
    sub_2346C3738(&v58, (_OWORD *)(v18 + 64));
  }
  else
  {
    *(void *)(v18 + 88) = v19;
    *(void *)(v18 + 64) = 0x6575716553206F4ELL;
    *(void *)(v18 + 72) = 0xEB0000000065636ELL;
  }
  sub_2346A9D9C(0, (unint64_t *)&unk_2687AEC00);
  long long v23 = (void *)sub_2347EE950();
  id v24 = objc_msgSend(*(id *)(v57 + *(int *)(type metadata accessor for CapturedRoom(0) + 60)), sel_dictionaryRepresentation);
  if (v24)
  {
    uint64_t v25 = v24;
    uint64_t v48 = v23;
    unint64_t v27 = v54;
    uint64_t v26 = (uint64_t)v55;
    sub_2347A1AF4(v23, v24, v55, v54, 0);
    id v47 = v25;
    sub_23479F968((uint64_t)v25, v26, v27);
    *(void *)&long long v58 = 0;
    *((void *)&v58 + 1) = 0xE000000000000000;
    sub_2347EED50();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)&long long v58 = v26;
    *((void *)&v58 + 1) = v27;
    sub_2347EE6F0();
    sub_2347ED3C0();
    swift_bridgeObjectRelease();
    uint64_t v46 = v17;
    sub_2347ED410();
    uint64_t v28 = v51;
    sub_2347ED430();
    uint64_t v29 = v50;
    unsigned int v30 = *(void (**)(char *, uint64_t))(v50 + 8);
    uint64_t v31 = v49;
    v30(v12, v49);
    *(void *)&long long v58 = 0;
    *((void *)&v58 + 1) = 0xE000000000000000;
    sub_2347EED50();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)&long long v58 = v26;
    *((void *)&v58 + 1) = v27;
    sub_2347EE6F0();
    uint64_t v32 = (uint64_t)v53;
    sub_2347ED3C0();
    swift_bridgeObjectRelease();
    uint64_t v33 = (uint64_t)v52;
    (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v52, v28, v31);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v29 + 56))(v33, 0, 1, v31);
    uint64_t v34 = v57;
    sub_23472E3DC(v32, v33, 0, 0, dword_26E771410);
    sub_2346A7C30(v33, &qword_2687AE940);
    v30((char *)v32, v31);
    v30(v28, v31);
    v30(v46, v31);
    uint64_t v35 = v56;
    uint64_t v36 = v34;
    type metadata accessor for RoomBuilder();
    uint64_t v37 = (int64x2_t *)swift_allocObject();
    v37[1].i8[8] = 0;
    v37[2] = vdupq_n_s64(1uLL);
    uint64_t v38 = &v37->i8[OBJC_IVAR____TtC8RoomPlan11RoomBuilder_floorPlanModelContinuation];
    uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_2687AE320);
    (*(void (**)(__int8 *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v38, 1, 1, v39);
    v37[1].i64[0] = 0;
    *(void *)&long long v58 = 0;
    *((void *)&v58 + 1) = 0xE000000000000000;
    sub_2347EED50();
    unint64_t v40 = v54;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)&long long v58 = v55;
    *((void *)&v58 + 1) = v40;
    sub_2347EE6F0();
    sub_23477B508(v36, v58, *((unint64_t *)&v58 + 1));
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    sub_2346A7C30((uint64_t)v37->i64 + OBJC_IVAR____TtC8RoomPlan11RoomBuilder_floorPlanModelContinuation, (uint64_t *)&unk_2687AEC10);
    swift_deallocClassInstance();
    long long v41 = v48;
    uint64_t v42 = v35 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_debugDelegate;
    swift_beginAccess();
    if (MEMORY[0x237DC8170](v42))
    {
      uint64_t v43 = *(void *)(v42 + 8);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v43 + 40))(ObjectType, v43);

      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_2347A13D8()
{
  uint64_t v1 = sub_2347EE3B0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_2347EE410();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_enableLiveDump) == 1)
  {
    uint64_t v9 = (uint64_t *)(v0 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_loggingDirectory);
    swift_beginAccess();
    uint64_t v10 = v9[1];
    if (v10)
    {
      uint64_t v15 = v2;
      uint64_t v11 = *v9;
      uint64_t v12 = (void *)swift_allocObject();
      v12[2] = v0;
      v12[3] = v11;
      v12[4] = v10;
      aBlock[4] = sub_2347B3F88;
      aBlock[5] = v12;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_23477C05C;
      aBlock[3] = &block_descriptor_254;
      uint64_t v13 = _Block_copy(aBlock);
      swift_bridgeObjectRetain();
      swift_retain();
      sub_2347EE3D0();
      uint64_t v16 = MEMORY[0x263F8EE78];
      sub_2347B41B4((unint64_t *)&qword_2687AD498, MEMORY[0x263F8F030]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2687AE930);
      sub_234723288((unint64_t *)&qword_2687AD4A0, (uint64_t *)&unk_2687AE930);
      sub_2347EEC30();
      MEMORY[0x237DC6990](0, v8, v4, v13);
      _Block_release(v13);
      (*(void (**)(char *, uint64_t))(v15 + 8))(v4, v1);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      swift_release();
    }
  }
}

void sub_2347A16D8(uint64_t a1, void *a2, unint64_t a3)
{
  uint64_t v40 = *MEMORY[0x263EF8340];
  uint64_t v6 = sub_2347ED490();
  uint64_t v7 = *(void *)(v6 - 8);
  double v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void **)(a1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_floorPlanGenerator);
  if (!v11) {
    __break(1u);
  }
  id v12 = objc_msgSend(v11, sel_getDebugInfo, v8);
  if (v12)
  {
    uint64_t v13 = v12;
    v37[0] = v7;
    v37[1] = a1;
    id v38 = a2;
    unint64_t v39 = a3;
    swift_bridgeObjectRetain();
    sub_2347EE6F0();
    id v15 = v38;
    unint64_t v14 = v39;
    uint64_t v16 = self;
    id v17 = objc_msgSend(v16, sel_defaultManager);
    uint64_t v18 = (void *)sub_2347EE5F0();
    unsigned __int8 v19 = objc_msgSend(v17, sel_fileExistsAtPath_, v18);

    if (v19) {
      goto LABEL_6;
    }
    id v20 = objc_msgSend(v16, sel_defaultManager);
    id v21 = (void *)sub_2347EE5F0();
    id v38 = 0;
    unsigned int v22 = objc_msgSend(v20, sel_createDirectoryAtPath_withIntermediateDirectories_attributes_error_, v21, 1, 0, &v38);

    if (v22)
    {
      id v23 = v38;
LABEL_6:
      id v24 = self;
      id v38 = 0;
      id v25 = objc_msgSend(v24, sel_dataWithPropertyList_format_options_error_, v13, 200, 0, &v38);
      id v26 = v38;
      if (v25)
      {
        uint64_t v27 = sub_2347ED4C0();
        unint64_t v29 = v28;

        id v38 = 0;
        unint64_t v39 = 0xE000000000000000;
        sub_2347EED50();
        swift_bridgeObjectRelease();
        id v38 = v15;
        unint64_t v39 = v14;
        sub_2347EE6F0();
        sub_2347ED3C0();
        swift_bridgeObjectRelease();
        sub_2347ED4D0();
        (*(void (**)(char *, uint64_t))(v37[0] + 8))(v10, v6);

        sub_2346C3748(v27, v29);
      }
      else
      {
        unsigned int v30 = v26;
        swift_bridgeObjectRelease();
        uint64_t v31 = (void *)sub_2347ED350();

        swift_willThrow();
      }
      return;
    }
    id v32 = v38;
    swift_bridgeObjectRelease();
    uint64_t v33 = (void *)sub_2347ED350();

    swift_willThrow();
    uint64_t v34 = sub_2347EE350();
    os_log_type_t v35 = sub_2347EE960();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v36 = 0;
      _os_log_impl(&dword_23468B000, v34, v35, "Could not write to RSC debug log", v36, 2u);
      MEMORY[0x237DC8070](v36, -1, -1);
    }
  }
}

void sub_2347A1AF4(void *a1, void *a2, void *a3, unint64_t a4, int a5)
{
  int v98 = a5;
  id v97 = a1;
  uint64_t v102 = *MEMORY[0x263EF8340];
  uint64_t v9 = sub_2347ED490();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  id v12 = (char *)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_2347ED540();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v82 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 || a4 != 0xE000000000000000) && (sub_2347EF090() & 1) == 0)
  {
    uint64_t v94 = v10;
    id v90 = a2;
    uint64_t v96 = v5;
    id v95 = self;
    id v17 = objc_msgSend(v95, sel_defaultManager);
    uint64_t v18 = (void *)sub_2347EE5F0();
    unsigned __int8 v19 = objc_msgSend(v17, sel_fileExistsAtPath_, v18);

    uint64_t v93 = v9;
    if ((v19 & 1) == 0)
    {
      id v20 = objc_msgSend(v95, sel_defaultManager);
      id v21 = (void *)sub_2347EE5F0();
      id v100 = 0;
      unsigned int v22 = objc_msgSend(v20, sel_createDirectoryAtPath_withIntermediateDirectories_attributes_error_, v21, 1, 0, &v100);

      if (v22)
      {
        id v23 = v100;
      }
      else
      {
        id v24 = v100;
        id v25 = (void *)sub_2347ED350();

        swift_willThrow();
        swift_bridgeObjectRetain_n();
        id v26 = sub_2347EE350();
        os_log_type_t v27 = sub_2347EE960();
        if (os_log_type_enabled(v26, v27))
        {
          uint64_t v28 = swift_slowAlloc();
          id v92 = v25;
          unint64_t v29 = (uint8_t *)v28;
          id v91 = (id)swift_slowAlloc();
          id v100 = v91;
          *(_DWORD *)unint64_t v29 = 136315138;
          uint64_t v89 = (uint64_t)(v29 + 4);
          swift_bridgeObjectRetain();
          uint64_t v99 = sub_234775704((uint64_t)a3, a4, (uint64_t *)&v100);
          sub_2347EEB30();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_23468B000, v26, v27, "Unable to create folder %s!", v29, 0xCu);
          id v30 = v91;
          swift_arrayDestroy();
          MEMORY[0x237DC8070](v30, -1, -1);
          MEMORY[0x237DC8070](v29, -1, -1);
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
      }
    }
    id v100 = a3;
    v101 = (void *)a4;
    swift_bridgeObjectRetain();
    sub_2347EE6F0();
    id v32 = v100;
    uint64_t v31 = v101;
    id v91 = v100;
    if (v98)
    {
      id v33 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08790]), sel_init);
      uint64_t v34 = (void *)sub_2347EE5F0();
      id v88 = v33;
      objc_msgSend(v33, sel_setDateFormat_, v34);

      sub_2347ED530();
      os_log_type_t v35 = (void *)sub_2347ED510();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
      id v36 = objc_msgSend(v33, sel_stringFromDate_, v35);

      uint64_t v37 = sub_2347EE620();
      v87 = v12;
      uint64_t v38 = v37;
      uint64_t v40 = v39;

      long long v41 = self;
      id v82 = v41;
      uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2687AEBE0);
      uint64_t v42 = swift_allocObject();
      long long v86 = xmmword_2347F19A0;
      *(_OWORD *)(v42 + 16) = xmmword_2347F19A0;
      *(void *)(v42 + 32) = v32;
      *(void *)(v42 + 40) = v31;
      uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_2687ACCE0);
      uint64_t v43 = swift_allocObject();
      long long v84 = xmmword_2347F0FA0;
      *(_OWORD *)(v43 + 16) = xmmword_2347F0FA0;
      uint64_t v44 = MEMORY[0x263F8D310];
      *(void *)(v43 + 56) = MEMORY[0x263F8D310];
      v83 = a3;
      uint64_t v45 = v44;
      unint64_t v46 = sub_2346DF09C();
      *(void *)(v43 + 64) = v46;
      *(void *)(v43 + 32) = v38;
      *(void *)(v43 + 40) = v40;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      *(void *)(v42 + 48) = sub_2347EE650();
      *(void *)(v42 + 56) = v47;
      uint64_t v48 = (void *)sub_2347EE7C0();
      swift_bridgeObjectRelease();
      id v49 = objc_msgSend(v41, sel_pathWithComponents_, v48);

      id v92 = (id)sub_2347EE620();
      uint64_t v50 = swift_allocObject();
      *(_OWORD *)(v50 + 16) = v86;
      *(void *)(v50 + 32) = v32;
      *(void *)(v50 + 40) = v31;
      uint64_t v51 = swift_allocObject();
      *(_OWORD *)(v51 + 16) = v84;
      uint64_t v52 = v45;
      a3 = v83;
      *(void *)(v51 + 56) = v52;
      *(void *)(v51 + 64) = v46;
      *(void *)(v51 + 32) = v38;
      *(void *)(v51 + 40) = v40;
      id v12 = v87;
      swift_bridgeObjectRetain();
      *(void *)(v50 + 48) = sub_2347EE650();
      *(void *)(v50 + 56) = v53;
      unint64_t v54 = (void *)sub_2347EE7C0();
      swift_bridgeObjectRelease();
      id v55 = objc_msgSend(v82, sel_pathWithComponents_, v54);

      uint64_t v89 = sub_2347EE620();
      uint64_t v57 = v56;
    }
    else
    {
      id v100 = a3;
      v101 = (void *)a4;
      swift_bridgeObjectRetain();
      sub_2347EE6F0();
      swift_bridgeObjectRetain();
      sub_2347EE6F0();
      swift_bridgeObjectRelease();
      id v92 = v100;
      id v100 = a3;
      v101 = (void *)a4;
      swift_bridgeObjectRetain();
      sub_2347EE6F0();
      swift_bridgeObjectRetain();
      sub_2347EE6F0();
      swift_bridgeObjectRelease();
      uint64_t v57 = v101;
      uint64_t v89 = (uint64_t)v100;
    }
    id v58 = v95;
    uint64_t v59 = v94;
    if (*(unsigned char *)(v96 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_enableLiveDump) == 1)
    {
      id v95 = v57;
      id v60 = objc_msgSend(v58, sel_defaultManager);
      uint64_t v61 = (void *)sub_2347EE5F0();
      unsigned __int8 v62 = objc_msgSend(v60, sel_fileExistsAtPath_, v61);

      if (v62)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        id v63 = objc_msgSend(v58, sel_defaultManager);
        unint64_t v64 = (void *)sub_2347EE5F0();
        swift_bridgeObjectRelease();
        id v100 = 0;
        unsigned int v65 = objc_msgSend(v63, sel_createDirectoryAtPath_withIntermediateDirectories_attributes_error_, v64, 1, 0, &v100);

        if (!v65)
        {
          id v77 = v100;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v72 = (void *)sub_2347ED350();

          goto LABEL_28;
        }
        id v66 = v100;
      }
      uint64_t v59 = v94;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    sub_2347ED3C0();
    swift_bridgeObjectRelease();
    unint64_t v67 = (void *)sub_2347ED3F0();
    v68 = *(void (**)(char *, uint64_t))(v59 + 8);
    v68(v12, v93);
    id v100 = 0;
    unsigned int v69 = objc_msgSend(v97, sel_writeToURL_error_, v67, &v100);

    id v70 = v100;
    if (!v69)
    {
      v71 = v70;
      swift_bridgeObjectRelease();
      uint64_t v72 = (void *)sub_2347ED350();

LABEL_28:
      swift_willThrow();
      swift_bridgeObjectRetain_n();
      v78 = sub_2347EE350();
      os_log_type_t v79 = sub_2347EE960();
      if (os_log_type_enabled(v78, v79))
      {
        v80 = (uint8_t *)swift_slowAlloc();
        v81 = (void *)swift_slowAlloc();
        id v100 = v81;
        *(_DWORD *)v80 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v99 = sub_234775704((uint64_t)a3, a4, (uint64_t *)&v100);
        sub_2347EEB30();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_23468B000, v78, v79, "Unable to log input and output to %s!", v80, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x237DC8070](v81, -1, -1);
        MEMORY[0x237DC8070](v80, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }

      return;
    }
    if (v98)
    {
      swift_bridgeObjectRelease();
      return;
    }
    sub_2347ED3C0();
    swift_bridgeObjectRelease();
    uint64_t v73 = (void *)sub_2347ED3F0();
    v68(v12, v93);
    id v100 = 0;
    unsigned __int8 v74 = objc_msgSend(v90, sel_writeToURL_error_, v73, &v100);

    id v75 = v100;
    if ((v74 & 1) == 0)
    {
      v76 = v75;
      uint64_t v72 = (void *)sub_2347ED350();

      goto LABEL_28;
    }
  }
}

uint64_t RoomCaptureSession.deinit()
{
  sub_2346BBA5C(v0 + 24);
  sub_2346BBA5C(v0 + 40);

  sub_2346A7C30(v0 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_recordFileUrl, &qword_2687AE940);
  sub_2346A7C30(v0 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_replayFileUrl, &qword_2687AE940);
  sub_2346BBA5C(v0 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_spiReplayDelegate);
  swift_bridgeObjectRelease();
  sub_2346BBA5C(v0 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_debugDelegate);
  sub_2346BBA5C(v0 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_internalDelegate);
  uint64_t v1 = v0 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_logger;
  uint64_t v2 = sub_2347EE370();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();

  swift_bridgeObjectRelease();
  sub_2347B3E88(v0 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_floorPlanModel, type metadata accessor for CapturedRoom);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t RoomCaptureSession.__deallocating_deinit()
{
  RoomCaptureSession.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_2347A28D0(void *a1, void *a2)
{
  uint64_t v4 = sub_2347ED540();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_2347EEAB0();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2687ABE10 != -1) {
    swift_once();
  }
  if (*(unsigned char *)(qword_2687BE180 + 32) == 1)
  {
    uint64_t v38 = v5;
    id v11 = objc_msgSend(a1, sel_configuration);
    uint64_t v37 = v7;
    if (v11)
    {
      id v12 = v11;
      uint64_t v13 = v4;
      id v14 = objc_msgSend(v11, sel_videoFormat);

      id v15 = objc_msgSend(v14, sel_framesPerSecond);
    }
    else
    {
      uint64_t v13 = v4;
      id v15 = objc_msgSend(a2, sel_renderFramesPerSecond);
    }
    uint64_t v16 = qword_2687BE180;
    objc_msgSend(a2, sel_timestamp);
    uint64_t v18 = v17;
    unsigned __int8 v19 = *(NSObject **)(v16 + 40);
    id v20 = (void *)swift_allocObject();
    v20[2] = v16;
    v20[3] = v18;
    v20[4] = v15;
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = sub_2347B3F20;
    *(void *)(v21 + 24) = v20;
    aBlock[4] = sub_2346DF164;
    aBlock[5] = v21;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_2347E9AA8;
    aBlock[3] = &block_descriptor_242;
    unsigned int v22 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync(v19, v22);
    _Block_release(v22);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    uint64_t v4 = v13;
    uint64_t v7 = v37;
    uint64_t v5 = v38;
    if (isEscapingClosureAtFileLocation)
    {
      __break(1u);
LABEL_29:
      swift_once();
LABEL_13:
      objc_msgSend(a2, sel_timestamp);
      sub_234718FE0(v26);
      if (qword_2687ABE98 != -1) {
        swift_once();
      }
      sub_2347EA048(a2);
      if (qword_2687ABD80 != -1) {
        swift_once();
      }
      if (*(unsigned char *)(qword_2687BDFF8 + 32) == 1)
      {
        unint64_t v27 = sub_2347E9B0C();
        sub_2346DE1BC(v27 | ((HIDWORD(v27) & 1) << 32));
        objc_msgSend(a2, sel_timestamp);
        sub_2346DE3DC(v28);
      }
      id v29 = objc_msgSend(a2, sel_camera);
      sub_2347EEAC0();

      uint64_t v30 = sub_2347EEAA0();
      int v31 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 48))(v10, 2, v30);
      if (v31)
      {
        if (v31 != 1)
        {
          sub_23479F518();
          sub_2347B3E88((uint64_t)v10, MEMORY[0x263F8C968]);
LABEL_25:
          type metadata accessor for RSFrame();
          swift_allocObject();
          id v32 = a2;
          sub_234776864(v32);
          uint64_t v34 = v33;

          sub_23479E05C(v34);
          type metadata accessor for OUFrame();
          swift_allocObject();
          sub_23476F7FC(v32);
          sub_23479E084(v35);
          swift_release();
          swift_release();
          return swift_release();
        }
      }
      else
      {
        sub_2347B3E88((uint64_t)v10, MEMORY[0x263F8C968]);
      }
      sub_2347ED530();
      sub_23479F170();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      goto LABEL_25;
    }
  }
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v25 = result;
  if (MEMORY[0x237DC8170](result + 40))
  {
    sub_234785D2C(a2);
    swift_unknownObjectRelease();
  }
  if (*(unsigned char *)(v25 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_runActive) == 1)
  {
    if (qword_2687ABDD0 == -1) {
      goto LABEL_13;
    }
    goto LABEL_29;
  }
  return swift_release();
}

uint64_t sub_2347A2F90(uint64_t a1, void *a2)
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v4 = MEMORY[0x237DC8170](result + 40);
    uint64_t result = swift_release();
    if (v4)
    {
      sub_2347842F0(a2);
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

id sub_2347A3230()
{
  return sub_2347AA098(type metadata accessor for ARInternalSessionObserverWrapper);
}

uint64_t sub_2347A3258(void *a1, void *a2, int a3)
{
  int v465 = a3;
  id v452 = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2687AEB70);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (void *)((char *)v431 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (void *)((char *)v431 - v8);
  MEMORY[0x270FA5388](v10);
  v476 = (char *)v431 - v11;
  MEMORY[0x270FA5388](v12);
  id v14 = (char *)v431 - v13;
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)v431 - v16;
  MEMORY[0x270FA5388](v18);
  id v20 = (char *)v431 - v19;
  MEMORY[0x270FA5388](v21);
  id v23 = (char *)v431 - v22;
  MEMORY[0x270FA5388](v24);
  double v26 = (char *)v431 - v25;
  MEMORY[0x270FA5388](v27);
  id v29 = (char *)v431 - v28;
  MEMORY[0x270FA5388](v30);
  v440 = (char *)v431 - v31;
  MEMORY[0x270FA5388](v32);
  v443 = (char *)v431 - v33;
  MEMORY[0x270FA5388](v34);
  v475 = (char *)v431 - v35;
  MEMORY[0x270FA5388](v36);
  v441 = (char *)v431 - v37;
  MEMORY[0x270FA5388](v38);
  v444 = (char *)v431 - v39;
  MEMORY[0x270FA5388](v40);
  uint64_t v474 = (uint64_t)v431 - v41;
  MEMORY[0x270FA5388](v42);
  v432 = (char *)v431 - v43;
  MEMORY[0x270FA5388](v44);
  v433 = (char *)v431 - v45;
  MEMORY[0x270FA5388](v46);
  v445 = (void *)((char *)v431 - v47);
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_2687ACC78);
  MEMORY[0x270FA5388](v48 - 8);
  v446 = (char *)v431 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_2687AEBA0);
  MEMORY[0x270FA5388](v50 - 8);
  v488 = (char *)v431 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v52);
  v494 = (void (**)(unint64_t, uint64_t, uint64_t, uint64_t *))((char *)v431 - v53);
  uint64_t v54 = sub_2347ED5C0();
  uint64_t v489 = *(void *)(v54 - 8);
  MEMORY[0x270FA5388](v54);
  v492 = (char *)v431 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v56);
  uint64_t v453 = (uint64_t)v431 - v57;
  MEMORY[0x270FA5388](v58);
  v478 = (char *)v431 - v59;
  MEMORY[0x270FA5388](v60);
  uint64_t v477 = (uint64_t)v431 - v61;
  MEMORY[0x270FA5388](v62);
  v479 = (char *)v431 - v63;
  MEMORY[0x270FA5388](v64);
  v480 = (char *)v431 - v65;
  MEMORY[0x270FA5388](v66);
  uint64_t v481 = (uint64_t)v431 - v67;
  MEMORY[0x270FA5388](v68);
  v482 = (void (**)(uint64_t, uint64_t))((char *)v431 - v69);
  v483 = (uint64_t *)type metadata accessor for CapturedRoom.Surface(0);
  uint64_t v490 = *(v483 - 1);
  MEMORY[0x270FA5388](v483);
  uint64_t v454 = (uint64_t)v431 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v71);
  uint64_t v460 = (uint64_t)v431 - v72;
  MEMORY[0x270FA5388](v73);
  uint64_t v455 = (uint64_t)v431 - v74;
  MEMORY[0x270FA5388](v75);
  uint64_t v461 = (uint64_t)v431 - v76;
  MEMORY[0x270FA5388](v77);
  uint64_t v456 = (uint64_t)v431 - v78;
  MEMORY[0x270FA5388](v79);
  uint64_t v462 = (uint64_t)v431 - v80;
  MEMORY[0x270FA5388](v81);
  uint64_t v457 = (uint64_t)v431 - v82;
  MEMORY[0x270FA5388](v83);
  uint64_t v463 = (uint64_t)v431 - v84;
  MEMORY[0x270FA5388](v85);
  uint64_t v458 = (uint64_t)v431 - v86;
  MEMORY[0x270FA5388](v87);
  v464 = (void *)((char *)v431 - v88);
  MEMORY[0x270FA5388](v89);
  unint64_t v473 = (unint64_t)v431 - v90;
  MEMORY[0x270FA5388](v91);
  uint64_t v448 = (uint64_t)v431 - v92;
  MEMORY[0x270FA5388](v93);
  uint64_t v459 = (uint64_t)v431 - v94;
  MEMORY[0x270FA5388](v95);
  uint64_t v449 = (uint64_t)v431 - v96;
  MEMORY[0x270FA5388](v97);
  v487 = (void *)((char *)v431 - v98);
  MEMORY[0x270FA5388](v99);
  v484 = (void (**)(unint64_t, uint64_t, uint64_t, uint64_t *))((char *)v431 - v100);
  MEMORY[0x270FA5388](v101);
  uint64_t v468 = (uint64_t)v431 - v102;
  MEMORY[0x270FA5388](v103);
  v485 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t *))((char *)v431 - v104);
  MEMORY[0x270FA5388](v105);
  uint64_t v469 = (uint64_t)v431 - v106;
  MEMORY[0x270FA5388](v107);
  uint64_t v486 = (uint64_t)v431 - v108;
  MEMORY[0x270FA5388](v109);
  uint64_t v470 = (uint64_t)v431 - v110;
  MEMORY[0x270FA5388](v111);
  v491 = (uint64_t **)((char *)v431 - v112);
  MEMORY[0x270FA5388](v113);
  uint64_t v471 = (uint64_t)v431 - v114;
  MEMORY[0x270FA5388](v115);
  v493 = (void (**)(void))((char *)v431 - v116);
  MEMORY[0x270FA5388](v117);
  uint64_t v472 = (uint64_t)v431 - v118;
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    return MEMORY[0x263F8EE78];
  }
  v439 = v26;
  v436 = v23;
  v438 = v17;
  v435 = v14;
  v437 = v9;
  v434 = v6;
  uint64_t v119 = *a2;
  uint64_t v120 = *(void *)(*a2 + 16);
  v495 = (uint64_t *)v54;
  v450 = v20;
  v451 = v29;
  v442 = a2;
  if (v120)
  {
    uint64_t v467 = v472 + *((int *)v483 + 11);
    uint64_t v121 = v119 + ((*(unsigned __int8 *)(v490 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v490 + 80));
    unint64_t v122 = *(void *)(v490 + 72);
    uint64_t v123 = v489 + 16;
    v466 = (void (**)(id, uint64_t *))(v489 + 8);
    v431[1] = v119;
    swift_bridgeObjectRetain();
    v124 = (void *)MEMORY[0x263F8EE80];
    v125 = v482;
    while (1)
    {
      uint64_t v126 = v472;
      sub_2347B3E20(v121, v472, type metadata accessor for CapturedRoom.Surface);
      v127 = *(void (**)(unint64_t, uint64_t, uint64_t))v123;
      (*(void (**)(void (**)(uint64_t, uint64_t), uint64_t, uint64_t))v123)(v125, v467, v54);
      sub_2347B4314(v126, (uint64_t)v493, type metadata accessor for CapturedRoom.Surface);
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v497 = v124;
      unint64_t v130 = sub_2347BFA88((uint64_t)v125);
      uint64_t v131 = v124[2];
      BOOL v132 = (v129 & 1) == 0;
      uint64_t v133 = v131 + v132;
      if (__OFADD__(v131, v132))
      {
        __break(1u);
LABEL_272:
        __break(1u);
LABEL_273:
        __break(1u);
LABEL_274:
        __break(1u);
LABEL_275:
        __break(1u);
LABEL_276:
        __break(1u);
LABEL_277:
        __break(1u);
LABEL_278:
        __break(1u);
LABEL_279:
        __break(1u);
LABEL_280:
        __break(1u);
LABEL_281:
        __break(1u);
LABEL_282:
        __break(1u);
LABEL_283:
        __break(1u);
LABEL_284:
        __break(1u);
LABEL_285:
        __break(1u);
LABEL_286:
        __break(1u);
LABEL_287:
        __break(1u);
LABEL_288:
        __break(1u);
LABEL_289:
        __break(1u);
        goto LABEL_290;
      }
      char v134 = v129;
      if (v124[3] >= v133)
      {
        uint64_t v137 = (uint64_t)v494;
        if (isUniquelyReferenced_nonNull_native) {
          goto LABEL_12;
        }
        sub_2347D75A4();
      }
      else
      {
        sub_2347D1ED4(v133, isUniquelyReferenced_nonNull_native);
        unint64_t v135 = sub_2347BFA88((uint64_t)v482);
        if ((v134 & 1) != (v136 & 1)) {
          goto LABEL_328;
        }
        unint64_t v130 = v135;
      }
      uint64_t v137 = (uint64_t)v494;
LABEL_12:
      v124 = v497;
      if (v134)
      {
        sub_2347B437C((uint64_t)v493, v497[7] + v130 * v122, type metadata accessor for CapturedRoom.Surface);
        v125 = v482;
      }
      else
      {
        v497[(v130 >> 6) + 8] |= 1 << v130;
        v125 = v482;
        v127(v124[6] + *(void *)(v489 + 72) * v130, (uint64_t)v482, (uint64_t)v495);
        sub_2347B4314((uint64_t)v493, v124[7] + v130 * v122, type metadata accessor for CapturedRoom.Surface);
        uint64_t v138 = v124[2];
        BOOL v139 = __OFADD__(v138, 1);
        uint64_t v140 = v138 + 1;
        if (v139) {
          goto LABEL_282;
        }
        v124[2] = v140;
        v124 = v497;
      }
      swift_bridgeObjectRelease();
      uint64_t v54 = (uint64_t)v495;
      (*v466)(v125, v495);
      v121 += v122;
      if (!--v120)
      {
        swift_bridgeObjectRelease();
        v141 = v442;
        goto LABEL_19;
      }
    }
  }
  v141 = a2;
  v124 = (void *)MEMORY[0x263F8EE80];
  uint64_t v137 = (uint64_t)v494;
LABEL_19:
  uint64_t v143 = v141[1];
  uint64_t v144 = *(void *)(v143 + 16);
  uint64_t v145 = v481;
  if (!v144) {
    goto LABEL_35;
  }
  v493 = (void (**)(void))(v471 + *((int *)v483 + 11));
  uint64_t v146 = v143 + ((*(unsigned __int8 *)(v490 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v490 + 80));
  unint64_t v122 = *(void *)(v490 + 72);
  uint64_t v123 = v489 + 16;
  v482 = (void (**)(uint64_t, uint64_t))(v489 + 8);
  uint64_t v472 = v143;
  swift_bridgeObjectRetain();
  do
  {
    uint64_t v147 = v471;
    sub_2347B3E20(v146, v471, type metadata accessor for CapturedRoom.Surface);
    v148 = *(void (**)(unint64_t, uint64_t, uint64_t))v123;
    (*(void (**)(uint64_t, void (**)(void), uint64_t))v123)(v145, v493, v54);
    sub_2347B4314(v147, (uint64_t)v491, type metadata accessor for CapturedRoom.Surface);
    int v149 = swift_isUniquelyReferenced_nonNull_native();
    v497 = v124;
    unint64_t v151 = sub_2347BFA88(v145);
    uint64_t v152 = v124[2];
    BOOL v153 = (v150 & 1) == 0;
    uint64_t v154 = v152 + v153;
    if (__OFADD__(v152, v153)) {
      goto LABEL_272;
    }
    char v155 = v150;
    if (v124[3] < v154)
    {
      sub_2347D1ED4(v154, v149);
      unint64_t v156 = sub_2347BFA88(v481);
      if ((v155 & 1) != (v157 & 1)) {
        goto LABEL_328;
      }
      unint64_t v151 = v156;
LABEL_27:
      uint64_t v137 = (uint64_t)v494;
      uint64_t v54 = (uint64_t)v495;
      v124 = v497;
      if (v155) {
        goto LABEL_21;
      }
      goto LABEL_31;
    }
    uint64_t v137 = (uint64_t)v494;
    if ((v149 & 1) == 0)
    {
      sub_2347D75A4();
      goto LABEL_27;
    }
    uint64_t v54 = (uint64_t)v495;
    v124 = v497;
    if (v150)
    {
LABEL_21:
      sub_2347B437C((uint64_t)v491, v124[7] + v151 * v122, type metadata accessor for CapturedRoom.Surface);
      uint64_t v145 = v481;
      goto LABEL_22;
    }
LABEL_31:
    v124[(v151 >> 6) + 8] |= 1 << v151;
    uint64_t v145 = v481;
    v148(v124[6] + *(void *)(v489 + 72) * v151, v481, v54);
    sub_2347B4314((uint64_t)v491, v124[7] + v151 * v122, type metadata accessor for CapturedRoom.Surface);
    uint64_t v158 = v124[2];
    BOOL v139 = __OFADD__(v158, 1);
    uint64_t v159 = v158 + 1;
    if (v139) {
      goto LABEL_283;
    }
    v124[2] = v159;
    v124 = v497;
LABEL_22:
    swift_bridgeObjectRelease();
    (*v482)(v145, v54);
    v146 += v122;
    --v144;
  }
  while (v144);
  swift_bridgeObjectRelease();
  v141 = v442;
LABEL_35:
  v160 = (void (**)(uint64_t, uint64_t))v141[2];
  v161 = v160[2];
  uint64_t v162 = (uint64_t)v480;
  if (!v161) {
    goto LABEL_51;
  }
  v493 = (void (**)(void))(v470 + *((int *)v483 + 11));
  uint64_t v163 = (uint64_t)v160 + ((*(unsigned __int8 *)(v490 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v490 + 80));
  unint64_t v122 = *(void *)(v490 + 72);
  uint64_t v123 = v489 + 16;
  v491 = (uint64_t **)(v489 + 8);
  v482 = v160;
  swift_bridgeObjectRetain();
  while (2)
  {
    uint64_t v164 = v470;
    sub_2347B3E20(v163, v470, type metadata accessor for CapturedRoom.Surface);
    v165 = *(void (**)(unint64_t, char *, uint64_t))v123;
    (*(void (**)(uint64_t, void (**)(void), uint64_t))v123)(v162, v493, v54);
    sub_2347B4314(v164, v486, type metadata accessor for CapturedRoom.Surface);
    int v166 = swift_isUniquelyReferenced_nonNull_native();
    v497 = v124;
    unint64_t v168 = sub_2347BFA88(v162);
    uint64_t v169 = v124[2];
    BOOL v170 = (v167 & 1) == 0;
    uint64_t v171 = v169 + v170;
    if (__OFADD__(v169, v170)) {
      goto LABEL_273;
    }
    char v172 = v167;
    if (v124[3] >= v171)
    {
      uint64_t v137 = (uint64_t)v494;
      if ((v166 & 1) == 0)
      {
        sub_2347D75A4();
        goto LABEL_43;
      }
      uint64_t v54 = (uint64_t)v495;
      v124 = v497;
      if (v167) {
        goto LABEL_37;
      }
LABEL_47:
      v124[(v168 >> 6) + 8] |= 1 << v168;
      uint64_t v162 = (uint64_t)v480;
      v165(v124[6] + *(void *)(v489 + 72) * v168, v480, v54);
      sub_2347B4314(v486, v124[7] + v168 * v122, type metadata accessor for CapturedRoom.Surface);
      uint64_t v175 = v124[2];
      BOOL v139 = __OFADD__(v175, 1);
      uint64_t v176 = v175 + 1;
      if (v139) {
        goto LABEL_284;
      }
      v124[2] = v176;
      v124 = v497;
    }
    else
    {
      sub_2347D1ED4(v171, v166);
      unint64_t v173 = sub_2347BFA88((uint64_t)v480);
      if ((v172 & 1) != (v174 & 1)) {
        goto LABEL_328;
      }
      unint64_t v168 = v173;
LABEL_43:
      uint64_t v137 = (uint64_t)v494;
      uint64_t v54 = (uint64_t)v495;
      v124 = v497;
      if ((v172 & 1) == 0) {
        goto LABEL_47;
      }
LABEL_37:
      sub_2347B437C(v486, v124[7] + v168 * v122, type metadata accessor for CapturedRoom.Surface);
      uint64_t v162 = (uint64_t)v480;
    }
    swift_bridgeObjectRelease();
    ((void (*)(uint64_t, uint64_t))*v491)(v162, v54);
    v163 += v122;
    v161 = (void (*)(uint64_t, uint64_t))((char *)v161 - 1);
    if (v161) {
      continue;
    }
    break;
  }
  swift_bridgeObjectRelease();
  v141 = v442;
LABEL_51:
  uint64_t v177 = v141[3];
  uint64_t v178 = *(void *)(v177 + 16);
  uint64_t v179 = (uint64_t)v479;
  if (!v178) {
    goto LABEL_67;
  }
  v493 = (void (**)(void))(v469 + *((int *)v483 + 11));
  uint64_t v180 = v177 + ((*(unsigned __int8 *)(v490 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v490 + 80));
  unint64_t v122 = *(void *)(v490 + 72);
  uint64_t v123 = v489 + 16;
  v491 = (uint64_t **)(v489 + 8);
  uint64_t v486 = v177;
  swift_bridgeObjectRetain();
  while (2)
  {
    uint64_t v181 = v469;
    sub_2347B3E20(v180, v469, type metadata accessor for CapturedRoom.Surface);
    v182 = *(void (**)(unint64_t, char *, uint64_t))v123;
    (*(void (**)(uint64_t, void (**)(void), uint64_t))v123)(v179, v493, v54);
    sub_2347B4314(v181, (uint64_t)v485, type metadata accessor for CapturedRoom.Surface);
    int v183 = swift_isUniquelyReferenced_nonNull_native();
    v497 = v124;
    unint64_t v185 = sub_2347BFA88(v179);
    uint64_t v186 = v124[2];
    BOOL v187 = (v184 & 1) == 0;
    uint64_t v188 = v186 + v187;
    if (__OFADD__(v186, v187)) {
      goto LABEL_274;
    }
    char v189 = v184;
    if (v124[3] >= v188)
    {
      uint64_t v137 = (uint64_t)v494;
      if ((v183 & 1) == 0)
      {
        sub_2347D75A4();
        goto LABEL_59;
      }
      uint64_t v54 = (uint64_t)v495;
      v124 = v497;
      if (v184) {
        goto LABEL_53;
      }
LABEL_63:
      v124[(v185 >> 6) + 8] |= 1 << v185;
      uint64_t v179 = (uint64_t)v479;
      v182(v124[6] + *(void *)(v489 + 72) * v185, v479, v54);
      sub_2347B4314((uint64_t)v485, v124[7] + v185 * v122, type metadata accessor for CapturedRoom.Surface);
      uint64_t v192 = v124[2];
      BOOL v139 = __OFADD__(v192, 1);
      uint64_t v193 = v192 + 1;
      if (v139) {
        goto LABEL_285;
      }
      v124[2] = v193;
      v124 = v497;
    }
    else
    {
      sub_2347D1ED4(v188, v183);
      unint64_t v190 = sub_2347BFA88((uint64_t)v479);
      if ((v189 & 1) != (v191 & 1)) {
        goto LABEL_328;
      }
      unint64_t v185 = v190;
LABEL_59:
      uint64_t v137 = (uint64_t)v494;
      uint64_t v54 = (uint64_t)v495;
      v124 = v497;
      if ((v189 & 1) == 0) {
        goto LABEL_63;
      }
LABEL_53:
      sub_2347B437C((uint64_t)v485, v124[7] + v185 * v122, type metadata accessor for CapturedRoom.Surface);
      uint64_t v179 = (uint64_t)v479;
    }
    swift_bridgeObjectRelease();
    ((void (*)(uint64_t, uint64_t))*v491)(v179, v54);
    v180 += v122;
    if (--v178) {
      continue;
    }
    break;
  }
  swift_bridgeObjectRelease();
  v141 = v442;
LABEL_67:
  uint64_t v194 = v141[4];
  uint64_t v195 = *(void *)(v194 + 16);
  uint64_t v196 = v477;
  if (!v195) {
    goto LABEL_83;
  }
  v493 = (void (**)(void))(v468 + *((int *)v483 + 11));
  uint64_t v197 = v194 + ((*(unsigned __int8 *)(v490 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v490 + 80));
  unint64_t v122 = *(void *)(v490 + 72);
  uint64_t v123 = v489 + 16;
  v491 = (uint64_t **)(v489 + 8);
  uint64_t v486 = v194;
  swift_bridgeObjectRetain();
  while (2)
  {
    uint64_t v198 = v468;
    sub_2347B3E20(v197, v468, type metadata accessor for CapturedRoom.Surface);
    v199 = *(void (**)(unint64_t, uint64_t, uint64_t))v123;
    (*(void (**)(uint64_t, void (**)(void), uint64_t))v123)(v196, v493, v54);
    sub_2347B4314(v198, (uint64_t)v484, type metadata accessor for CapturedRoom.Surface);
    int v200 = swift_isUniquelyReferenced_nonNull_native();
    v497 = v124;
    unint64_t v202 = sub_2347BFA88(v196);
    uint64_t v203 = v124[2];
    BOOL v204 = (v201 & 1) == 0;
    uint64_t v205 = v203 + v204;
    if (__OFADD__(v203, v204)) {
      goto LABEL_275;
    }
    char v206 = v201;
    if (v124[3] >= v205)
    {
      uint64_t v137 = (uint64_t)v494;
      if ((v200 & 1) == 0)
      {
        sub_2347D75A4();
        goto LABEL_75;
      }
      uint64_t v54 = (uint64_t)v495;
      v124 = v497;
      if (v201) {
        goto LABEL_69;
      }
LABEL_79:
      v124[(v202 >> 6) + 8] |= 1 << v202;
      uint64_t v196 = v477;
      v199(v124[6] + *(void *)(v489 + 72) * v202, v477, v54);
      sub_2347B4314((uint64_t)v484, v124[7] + v202 * v122, type metadata accessor for CapturedRoom.Surface);
      uint64_t v209 = v124[2];
      BOOL v139 = __OFADD__(v209, 1);
      uint64_t v210 = v209 + 1;
      if (v139) {
        goto LABEL_286;
      }
      v124[2] = v210;
      v124 = v497;
    }
    else
    {
      sub_2347D1ED4(v205, v200);
      unint64_t v207 = sub_2347BFA88(v477);
      if ((v206 & 1) != (v208 & 1)) {
        goto LABEL_328;
      }
      unint64_t v202 = v207;
LABEL_75:
      uint64_t v137 = (uint64_t)v494;
      uint64_t v54 = (uint64_t)v495;
      v124 = v497;
      if ((v206 & 1) == 0) {
        goto LABEL_79;
      }
LABEL_69:
      sub_2347B437C((uint64_t)v484, v124[7] + v202 * v122, type metadata accessor for CapturedRoom.Surface);
      uint64_t v196 = v477;
    }
    swift_bridgeObjectRelease();
    ((void (*)(uint64_t, uint64_t))*v491)(v196, v54);
    v197 += v122;
    if (--v195) {
      continue;
    }
    break;
  }
  swift_bridgeObjectRelease();
LABEL_83:
  v211 = (uint64_t *)(Strong + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_allUuidToSurfaces);
  swift_beginAccess();
  uint64_t v123 = *v211;
  uint64_t v212 = *(void *)(v123 + 64);
  uint64_t v481 = v123 + 64;
  uint64_t v213 = 1 << *(unsigned char *)(v123 + 32);
  uint64_t v214 = -1;
  if (v213 < 64) {
    uint64_t v214 = ~(-1 << v213);
  }
  uint64_t v215 = v214 & v212;
  v493 = (void (**)(void))(v489 + 32);
  v484 = (void (**)(unint64_t, uint64_t, uint64_t, uint64_t *))(v489 + 16);
  v485 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t *))(v490 + 56);
  v216 = (void (**)(uint64_t, uint64_t))(v489 + 8);
  v482 = (void (**)(uint64_t, uint64_t))((unint64_t)(v213 + 63) >> 6);
  v479 = (char *)v482 - 1;
  swift_bridgeObjectRetain();
  uint64_t v486 = 0;
  v480 = (char *)MEMORY[0x263F8EE80];
  v217 = &qword_2687AEBA8;
  v491 = (uint64_t **)v216;
  uint64_t v218 = (uint64_t)v446;
  unint64_t v122 = (unint64_t)v488;
  while (2)
  {
    if (v215)
    {
      unint64_t v220 = __clz(__rbit64(v215));
      v215 &= v215 - 1;
      uint64_t v221 = v220 | (v486 << 6);
      goto LABEL_91;
    }
    uint64_t v226 = v486 + 1;
    if (__OFADD__(v486, 1)) {
      goto LABEL_281;
    }
    if (v226 >= (uint64_t)v482) {
      goto LABEL_109;
    }
    unint64_t v227 = *(void *)(v481 + 8 * v226);
    if (v227) {
      goto LABEL_95;
    }
    uint64_t v228 = v486 + 2;
    ++v486;
    if (v226 + 1 >= (uint64_t)v482) {
      goto LABEL_109;
    }
    unint64_t v227 = *(void *)(v481 + 8 * v228);
    if (v227) {
      goto LABEL_98;
    }
    uint64_t v486 = v226 + 1;
    if (v226 + 2 >= (uint64_t)v482) {
      goto LABEL_109;
    }
    unint64_t v227 = *(void *)(v481 + 8 * (v226 + 2));
    if (v227)
    {
      v226 += 2;
LABEL_95:
      uint64_t v215 = (v227 - 1) & v227;
      uint64_t v221 = __clz(__rbit64(v227)) + (v226 << 6);
      uint64_t v486 = v226;
LABEL_91:
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v489 + 16))(v122, *(void *)(v123 + 48) + *(void *)(v489 + 72) * v221, v54);
      uint64_t v222 = *(void *)(v123 + 56) + *(void *)(v490 + 72) * v221;
      uint64_t v223 = __swift_instantiateConcreteTypeFromMangledName(v217);
      sub_2347B3E20(v222, (uint64_t)&v488[*(int *)(v223 + 48)], type metadata accessor for CapturedRoom.Surface);
      v224 = *(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v223 - 8) + 56);
      uint64_t v225 = v223;
      unint64_t v122 = (unint64_t)v488;
      v224(v488, 0, 1, v225);
      uint64_t v137 = (uint64_t)v494;
      goto LABEL_110;
    }
    uint64_t v228 = v226 + 3;
    uint64_t v486 = v226 + 2;
    if (v226 + 3 >= (uint64_t)v482) {
      goto LABEL_109;
    }
    unint64_t v227 = *(void *)(v481 + 8 * v228);
    if (v227)
    {
LABEL_98:
      uint64_t v226 = v228;
      goto LABEL_95;
    }
    while (1)
    {
      uint64_t v226 = v228 + 1;
      if (__OFADD__(v228, 1))
      {
        __break(1u);
LABEL_292:
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t *))*v487)(v215, 1, 1, v495);
LABEL_293:
        __break(1u);
LABEL_294:
        (*v494)(v122, 1, 1, v495);
LABEL_295:
        __break(1u);
LABEL_296:
        (*v494)(v122, 1, 1, v495);
LABEL_297:
        __break(1u);
LABEL_298:
        (*v494)(v122, 1, 1, v495);
LABEL_299:
        __break(1u);
LABEL_300:
        (*v494)((unint64_t)v476, 1, 1, v495);
LABEL_301:
        __break(1u);
LABEL_302:
        (*v494)((unint64_t)v217, 1, 1, v495);
LABEL_303:
        __break(1u);
LABEL_304:
        ((void (*)(char *, uint64_t, uint64_t, uint64_t *))v217)(v444, 1, 1, v495);
LABEL_305:
        __break(1u);
LABEL_306:
        ((void (*)(char *, uint64_t, uint64_t, uint64_t *))v215)(v443, 1, 1, v495);
LABEL_307:
        __break(1u);
LABEL_308:
        ((void (*)(char *, uint64_t, uint64_t, uint64_t *))v215)(v439, 1, 1, v495);
LABEL_309:
        __break(1u);
LABEL_310:
        ((void (*)(char *, uint64_t, uint64_t, uint64_t *))v215)(v438, 1, 1, v495);
LABEL_311:
        __break(1u);
LABEL_312:
        ((void (*)(uint64_t *, uint64_t, uint64_t, uint64_t *))v122)(v437, 1, 1, v495);
LABEL_313:
        __break(1u);
LABEL_314:
        ((void (*)(char *, uint64_t, uint64_t, uint64_t *))v217)(v441, 1, 1, v495);
LABEL_315:
        __break(1u);
LABEL_316:
        ((void (*)(char *, uint64_t, uint64_t, uint64_t *))v215)(v440, 1, 1, v495);
LABEL_317:
        __break(1u);
LABEL_318:
        ((void (*)(char *, uint64_t, uint64_t, uint64_t *))v215)(v436, 1, 1, v495);
LABEL_319:
        __break(1u);
LABEL_320:
        ((void (*)(char *, uint64_t, uint64_t, uint64_t *))v215)(v435, 1, 1, v495);
LABEL_321:
        __break(1u);
LABEL_322:
        ((void (*)(uint64_t *, uint64_t, uint64_t, uint64_t *))v122)(v434, 1, 1, v495);
LABEL_323:
        __break(1u);
LABEL_324:
        ((void (*)(char *, uint64_t, uint64_t, uint64_t *))v122)(v433, 1, 1, v495);
LABEL_325:
        __break(1u);
LABEL_326:
        ((void (*)(char *, uint64_t, uint64_t, uint64_t *))v122)(v432, 1, 1, v495);
LABEL_327:
        __break(1u);
        goto LABEL_328;
      }
      if (v226 >= (uint64_t)v482) {
        break;
      }
      unint64_t v227 = *(void *)(v481 + 8 * v226);
      ++v228;
      if (v227) {
        goto LABEL_95;
      }
    }
    uint64_t v486 = (uint64_t)v479;
LABEL_109:
    uint64_t v229 = __swift_instantiateConcreteTypeFromMangledName(v217);
    (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v229 - 8) + 56))(v122, 1, 1, v229);
    uint64_t v215 = 0;
LABEL_110:
    sub_2346B1970(v122, v137, &qword_2687AEBA0);
    v230 = v217;
    uint64_t v231 = __swift_instantiateConcreteTypeFromMangledName(v217);
    uint64_t v232 = v137;
    uint64_t v233 = v231;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v231 - 8) + 48))(v232, 1, v231) == 1)
    {
      swift_release();
      if (*(unsigned char *)(Strong + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_configuration + 3) == 1)
      {
        id v253 = v452;
        id v254 = objc_msgSend(v452, sel_walls);
        sub_2346A9D9C(0, (unint64_t *)&qword_2687AE1B0);
        uint64_t v123 = sub_2347EE7D0();

        id v255 = objc_msgSend(v253, sel_curvedWalls);
        sub_2346A9D9C(0, &qword_2687AE1B8);
        unint64_t v122 = sub_2347EE7D0();

        if (!(v122 >> 62))
        {
          swift_bridgeObjectRetain();
          sub_2347EF0A0();
          unint64_t v256 = v122;
          goto LABEL_126;
        }
LABEL_290:
        swift_bridgeObjectRetain();
        unint64_t v256 = sub_2347EEEB0();
        swift_bridgeObjectRelease();
LABEL_126:
        v217 = v445;
        swift_bridgeObjectRelease();
        v496 = (char *)v123;
        sub_2346DAEE0(v256);
        unint64_t v257 = (unint64_t)v496;
        uint64_t v486 = sub_2347AA0EC((unint64_t)v496);
        if (v486)
        {
          v484 = (void (**)(unint64_t, uint64_t, uint64_t, uint64_t *))(v257 & 0xC000000000000001);
          v494 = (void (**)(unint64_t, uint64_t, uint64_t, uint64_t *))(v489 + 56);
          v487 = (uint64_t *)(v489 + 48);
          uint64_t v258 = 4;
          v488 = (char *)MEMORY[0x263F8EE80];
          v485 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t *))MEMORY[0x263F8EE80];
          while (1)
          {
            if (v484) {
              id v259 = (id)MEMORY[0x237DC6CF0](v258 - 4, v257);
            }
            else {
              id v259 = *(id *)(v257 + 8 * v258);
            }
            uint64_t v215 = (uint64_t)v259;
            uint64_t v260 = v258 - 3;
            if (__OFADD__(v258 - 4, 1)) {
              goto LABEL_287;
            }
            id v261 = objc_msgSend(v259, sel_identifier);
            if (!v261) {
              goto LABEL_302;
            }
            v262 = v261;
            v263 = v492;
            sub_2347ED580();

            v264 = *v493;
            v265 = v495;
            ((void (*)(uint64_t *, char *, uint64_t *))*v493)(v217, v263, v495);
            unint64_t v122 = (unint64_t)*v494;
            (*v494)((unint64_t)v217, 0, 1, v265);
            uint64_t v123 = *v487;
            if (((unsigned int (*)(uint64_t *, uint64_t, uint64_t *))*v487)(v217, 1, v265) == 1) {
              goto LABEL_303;
            }
            if (v124[2] && (unint64_t v266 = sub_2347BFA88((uint64_t)v217), (v267 & 1) != 0))
            {
              uint64_t v268 = v448;
              sub_2347B3E20(v124[7] + *(void *)(v490 + 72) * v266, v448, type metadata accessor for CapturedRoom.Surface);
              sub_2347B4314(v268, v459, type metadata accessor for CapturedRoom.Surface);
              v483 = *v491;
              ((void (*)(uint64_t *, uint64_t *))v483)(v217, v495);
              if (!objc_msgSend((id)v215, sel_individualUpdate))
              {
                id v269 = objc_msgSend((id)v215, sel_identifier);
                if (!v269) {
                  goto LABEL_324;
                }
                v270 = v269;
                v271 = v492;
                sub_2347ED580();

                v272 = v433;
                v273 = v271;
                v274 = v495;
                ((void (*)(char *, char *, uint64_t *))v264)(v433, v273, v495);
                ((void (*)(char *, void, uint64_t, uint64_t *))v122)(v272, 0, 1, v274);
                unint64_t v122 = (unint64_t)v272;
                if (((unsigned int (*)(char *, uint64_t, uint64_t *))v123)(v272, 1, v274) == 1) {
                  goto LABEL_325;
                }
                uint64_t v275 = v459;
                uint64_t v123 = v473;
                sub_2347B3E20(v459, v473, type metadata accessor for CapturedRoom.Surface);
                unint64_t v276 = (unint64_t)v488;
                char v277 = swift_isUniquelyReferenced_nonNull_native();
                v496 = (char *)v276;
                sub_2347ABB5C(v123, v122, v277);
                v488 = v496;
LABEL_148:
                swift_bridgeObjectRelease();
                ((void (*)(unint64_t, uint64_t *))v483)(v122, v274);

                sub_2347B3E88(v275, type metadata accessor for CapturedRoom.Surface);
                v217 = v445;
                goto LABEL_129;
              }
              if objc_msgSend((id)v215, sel_individualUpdate) == 1 || (v465)
              {
                id v278 = objc_msgSend((id)v215, sel_identifier);
                if (!v278) {
                  goto LABEL_326;
                }
                v279 = v278;
                v280 = v492;
                sub_2347ED580();

                v281 = v432;
                v282 = v280;
                v274 = v495;
                ((void (*)(char *, char *, uint64_t *))v264)(v432, v282, v495);
                ((void (*)(char *, void, uint64_t, uint64_t *))v122)(v281, 0, 1, v274);
                unint64_t v122 = (unint64_t)v281;
                if (((unsigned int (*)(char *, uint64_t, uint64_t *))v123)(v281, 1, v274) == 1) {
                  goto LABEL_327;
                }
                uint64_t v275 = v459;
                uint64_t v123 = v473;
                sub_2347B3E20(v459, v473, type metadata accessor for CapturedRoom.Surface);
                v283 = (char *)v485;
                char v284 = swift_isUniquelyReferenced_nonNull_native();
                v496 = v283;
                sub_2347ABB5C(v123, v122, v284);
                v485 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t *))v496;
                goto LABEL_148;
              }
              sub_2347B3E88(v459, type metadata accessor for CapturedRoom.Surface);
            }
            else
            {

              ((void (*)(uint64_t *, uint64_t *))*v491)(v217, v495);
            }
LABEL_129:
            ++v258;
            if (v260 == v486) {
              goto LABEL_151;
            }
          }
        }
        v488 = (char *)MEMORY[0x263F8EE80];
        v485 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t *))MEMORY[0x263F8EE80];
LABEL_151:
        swift_bridgeObjectRelease();
      }
      else
      {
        v488 = (char *)MEMORY[0x263F8EE80];
        v485 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t *))MEMORY[0x263F8EE80];
      }
      unint64_t v122 = (unint64_t)v452;
      id v285 = objc_msgSend(v452, sel_doors);
      uint64_t v481 = sub_2346A9D9C(0, (unint64_t *)&qword_2687AE1B0);
      uint64_t v286 = sub_2347EE7D0();

      id v287 = objc_msgSend((id)v122, sel_curvedDoors);
      v479 = (char *)sub_2346A9D9C(0, &qword_2687AE1B8);
      v217 = (uint64_t *)sub_2347EE7D0();

      unint64_t v288 = sub_2347DD040((unint64_t)v217);
      swift_bridgeObjectRelease();
      v496 = (char *)v286;
      sub_2346DAEE0(v288);
      uint64_t v123 = (uint64_t)v496;
      v484 = (void (**)(unint64_t, uint64_t, uint64_t, uint64_t *))sub_2347AA0EC((unint64_t)v496);
      if (v484)
      {
        v483 = (uint64_t *)(v123 & 0xC000000000000001);
        uint64_t v486 = v489 + 48;
        v487 = (uint64_t *)(v489 + 56);
        uint64_t v289 = 4;
        uint64_t v215 = v474;
        while (1)
        {
          if (v483) {
            id v290 = (id)MEMORY[0x237DC6CF0](v289 - 4, v123);
          }
          else {
            id v290 = *(id *)(v123 + 8 * v289);
          }
          v291 = v290;
          if (__OFADD__(v289 - 4, 1)) {
            goto LABEL_276;
          }
          v494 = (void (**)(unint64_t, uint64_t, uint64_t, uint64_t *))(v289 - 3);
          id v292 = objc_msgSend(v290, sel_identifier);
          if (!v292) {
            goto LABEL_292;
          }
          v293 = v292;
          unint64_t v122 = (unint64_t)v492;
          sub_2347ED580();

          v294 = *v493;
          v295 = v495;
          ((void (*)(uint64_t, unint64_t, uint64_t *))*v493)(v215, v122, v495);
          v217 = (uint64_t *)*v487;
          ((void (*)(uint64_t, void, uint64_t, uint64_t *))*v487)(v215, 0, 1, v295);
          v296 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t *))v486;
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t *))v486)(v215, 1, v295) == 1) {
            goto LABEL_293;
          }
          unint64_t v122 = (unint64_t)v475;
          uint64_t v215 = v474;
          if (v124[2])
          {
            unint64_t v297 = sub_2347BFA88(v474);
            if (v298) {
              break;
            }
          }

          ((void (*)(uint64_t, uint64_t *))*v491)(v215, v495);
LABEL_155:
          ++v289;
          if (v494 == v484) {
            goto LABEL_177;
          }
        }
        uint64_t v299 = v458;
        sub_2347B3E20(v124[7] + *(void *)(v490 + 72) * v297, v458, type metadata accessor for CapturedRoom.Surface);
        sub_2347B4314(v299, (uint64_t)v464, type metadata accessor for CapturedRoom.Surface);
        v482 = (void (**)(uint64_t, uint64_t))*v491;
        ((void (*)(uint64_t, uint64_t *))v482)(v215, v495);
        if (objc_msgSend(v291, sel_individualUpdate))
        {
          if (objc_msgSend(v291, sel_individualUpdate) != 1 && (v465 & 1) == 0)
          {
            sub_2347B3E88((uint64_t)v464, type metadata accessor for CapturedRoom.Surface);

LABEL_175:
            uint64_t v215 = v474;
            goto LABEL_155;
          }
          id v309 = objc_msgSend(v291, sel_identifier);
          if (!v309) {
            goto LABEL_314;
          }
          v310 = v309;
          v311 = v492;
          sub_2347ED580();

          v312 = v441;
          v313 = v311;
          unint64_t v122 = (unint64_t)v495;
          ((void (*)(char *, char *, uint64_t *))v294)(v441, v313, v495);
          ((void (*)(char *, void, uint64_t, unint64_t))v217)(v312, 0, 1, v122);
          uint64_t v305 = (uint64_t)v312;
          if (v296((uint64_t)v312, 1, (uint64_t *)v122) == 1) {
            goto LABEL_315;
          }
          v217 = v464;
          uint64_t v314 = v473;
          sub_2347B3E20((uint64_t)v464, v473, type metadata accessor for CapturedRoom.Surface);
          v315 = (char *)v485;
          char v316 = swift_isUniquelyReferenced_nonNull_native();
          v496 = v315;
          sub_2347ABB5C(v314, v305, v316);
          v485 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t *))v496;
        }
        else
        {
          id v300 = objc_msgSend(v291, sel_identifier);
          if (!v300) {
            goto LABEL_304;
          }
          v301 = v300;
          v302 = v492;
          sub_2347ED580();

          v303 = v444;
          v304 = v302;
          unint64_t v122 = (unint64_t)v495;
          ((void (*)(char *, char *, uint64_t *))v294)(v444, v304, v495);
          ((void (*)(char *, void, uint64_t, unint64_t))v217)(v303, 0, 1, v122);
          uint64_t v305 = (uint64_t)v303;
          if (v296((uint64_t)v303, 1, (uint64_t *)v122) == 1) {
            goto LABEL_305;
          }
          v217 = v464;
          uint64_t v306 = v473;
          sub_2347B3E20((uint64_t)v464, v473, type metadata accessor for CapturedRoom.Surface);
          unint64_t v307 = (unint64_t)v488;
          char v308 = swift_isUniquelyReferenced_nonNull_native();
          v496 = (char *)v307;
          sub_2347ABB5C(v306, v305, v308);
          v488 = v496;
        }
        swift_bridgeObjectRelease();
        ((void (*)(uint64_t, unint64_t))v482)(v305, v122);

        sub_2347B3E88((uint64_t)v217, type metadata accessor for CapturedRoom.Surface);
        unint64_t v122 = (unint64_t)v475;
        goto LABEL_175;
      }
      unint64_t v122 = (unint64_t)v475;
LABEL_177:
      swift_bridgeObjectRelease();
      id v317 = v452;
      id v318 = objc_msgSend(v452, sel_windows);
      uint64_t v215 = sub_2347EE7D0();

      id v319 = objc_msgSend(v317, sel_curvedWindows);
      uint64_t v123 = sub_2347EE7D0();

      v217 = (uint64_t *)sub_2347DD040(v123);
      swift_bridgeObjectRelease();
      v496 = (char *)v215;
      sub_2346DAEE0((unint64_t)v217);
      unint64_t v320 = (unint64_t)v496;
      uint64_t v486 = sub_2347AA0EC((unint64_t)v496);
      if (v486)
      {
        v484 = (void (**)(unint64_t, uint64_t, uint64_t, uint64_t *))(v320 & 0xC000000000000001);
        v494 = (void (**)(unint64_t, uint64_t, uint64_t, uint64_t *))(v489 + 56);
        v487 = (uint64_t *)(v489 + 48);
        uint64_t v321 = 4;
        do
        {
          if (v484) {
            v322 = (uint64_t *)MEMORY[0x237DC6CF0](v321 - 4, v320);
          }
          else {
            v322 = (uint64_t *)*(id *)(v320 + 8 * v321);
          }
          v217 = v322;
          uint64_t v323 = v321 - 3;
          if (__OFADD__(v321 - 4, 1)) {
            goto LABEL_277;
          }
          id v324 = objc_msgSend(v322, sel_identifier);
          if (!v324) {
            goto LABEL_294;
          }
          v325 = v324;
          v326 = v492;
          sub_2347ED580();

          v327 = *v493;
          v328 = v495;
          ((void (*)(unint64_t, char *, uint64_t *))*v493)(v122, v326, v495);
          uint64_t v215 = (uint64_t)*v494;
          (*v494)(v122, 0, 1, v328);
          uint64_t v123 = *v487;
          if (((unsigned int (*)(unint64_t, uint64_t, uint64_t *))*v487)(v122, 1, v328) == 1) {
            goto LABEL_295;
          }
          if (v124[2] && (unint64_t v329 = sub_2347BFA88(v122), (v330 & 1) != 0))
          {
            uint64_t v331 = v457;
            sub_2347B3E20(v124[7] + *(void *)(v490 + 72) * v329, v457, type metadata accessor for CapturedRoom.Surface);
            sub_2347B4314(v331, v463, type metadata accessor for CapturedRoom.Surface);
            v483 = *v491;
            ((void (*)(unint64_t, uint64_t *))v483)(v122, v495);
            if (!objc_msgSend(v217, sel_individualUpdate))
            {
              id v332 = objc_msgSend(v217, sel_identifier);
              if (!v332) {
                goto LABEL_306;
              }
              v333 = v332;
              v334 = v492;
              sub_2347ED580();

              v335 = v443;
              v336 = v334;
              unint64_t v122 = (unint64_t)v495;
              ((void (*)(char *, char *, uint64_t *))v327)(v443, v336, v495);
              ((void (*)(char *, void, uint64_t, unint64_t))v215)(v335, 0, 1, v122);
              uint64_t v215 = (uint64_t)v335;
              if (((unsigned int (*)(char *, uint64_t, unint64_t))v123)(v335, 1, v122) == 1) {
                goto LABEL_307;
              }
              uint64_t v337 = v463;
              uint64_t v123 = v473;
              sub_2347B3E20(v463, v473, type metadata accessor for CapturedRoom.Surface);
              unint64_t v338 = (unint64_t)v488;
              char v339 = swift_isUniquelyReferenced_nonNull_native();
              v496 = (char *)v338;
              sub_2347ABB5C(v123, v215, v339);
              v488 = v496;
LABEL_199:
              swift_bridgeObjectRelease();
              ((void (*)(uint64_t, unint64_t))v483)(v215, v122);

              sub_2347B3E88(v337, type metadata accessor for CapturedRoom.Surface);
              unint64_t v122 = (unint64_t)v475;
              goto LABEL_180;
            }
            if objc_msgSend(v217, sel_individualUpdate) == 1 || (v465)
            {
              id v340 = objc_msgSend(v217, sel_identifier);
              if (!v340) {
                goto LABEL_316;
              }
              v341 = v340;
              v342 = v492;
              sub_2347ED580();

              v343 = v440;
              v344 = v342;
              unint64_t v122 = (unint64_t)v495;
              ((void (*)(char *, char *, uint64_t *))v327)(v440, v344, v495);
              ((void (*)(char *, void, uint64_t, unint64_t))v215)(v343, 0, 1, v122);
              uint64_t v215 = (uint64_t)v343;
              if (((unsigned int (*)(char *, uint64_t, unint64_t))v123)(v343, 1, v122) == 1) {
                goto LABEL_317;
              }
              uint64_t v337 = v463;
              uint64_t v123 = v473;
              sub_2347B3E20(v463, v473, type metadata accessor for CapturedRoom.Surface);
              v345 = (char *)v485;
              char v346 = swift_isUniquelyReferenced_nonNull_native();
              v496 = v345;
              sub_2347ABB5C(v123, v215, v346);
              v485 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t *))v496;
              goto LABEL_199;
            }
            sub_2347B3E88(v463, type metadata accessor for CapturedRoom.Surface);
          }
          else
          {

            ((void (*)(unint64_t, uint64_t *))*v491)(v122, v495);
          }
LABEL_180:
          ++v321;
        }
        while (v323 != v486);
      }
      swift_bridgeObjectRelease();
      id v347 = objc_msgSend(v452, sel_opendoors);
      unint64_t v348 = sub_2347EE7D0();

      uint64_t v486 = sub_2347AA0EC(v348);
      if (v486)
      {
        v484 = (void (**)(unint64_t, uint64_t, uint64_t, uint64_t *))(v348 & 0xC000000000000001);
        v494 = (void (**)(unint64_t, uint64_t, uint64_t, uint64_t *))(v489 + 56);
        v487 = (uint64_t *)(v489 + 48);
        uint64_t v349 = 4;
        unint64_t v122 = (unint64_t)v451;
        do
        {
          if (v484) {
            v350 = (void (**)(uint64_t, uint64_t))MEMORY[0x237DC6CF0](v349 - 4, v348);
          }
          else {
            v350 = (void (**)(uint64_t, uint64_t))*(id *)(v348 + 8 * v349);
          }
          v351 = v350;
          v217 = (uint64_t *)(v349 - 3);
          if (__OFADD__(v349 - 4, 1)) {
            goto LABEL_278;
          }
          id v352 = objc_msgSend(v350, sel_identifier);
          if (!v352) {
            goto LABEL_296;
          }
          v353 = v352;
          v354 = v492;
          sub_2347ED580();

          v355 = *v493;
          v356 = v495;
          ((void (*)(unint64_t, char *, uint64_t *))*v493)(v122, v354, v495);
          uint64_t v215 = (uint64_t)*v494;
          (*v494)(v122, 0, 1, v356);
          uint64_t v123 = *v487;
          if (((unsigned int (*)(unint64_t, uint64_t, uint64_t *))*v487)(v122, 1, v356) == 1) {
            goto LABEL_297;
          }
          if (v124[2] && (unint64_t v357 = sub_2347BFA88(v122), (v358 & 1) != 0))
          {
            uint64_t v359 = v456;
            sub_2347B3E20(v124[7] + *(void *)(v490 + 72) * v357, v456, type metadata accessor for CapturedRoom.Surface);
            sub_2347B4314(v359, v462, type metadata accessor for CapturedRoom.Surface);
            v483 = *v491;
            ((void (*)(unint64_t, uint64_t *))v483)(v122, v495);
            if (!objc_msgSend(v351, sel_individualUpdate))
            {
              v482 = v351;
              id v360 = objc_msgSend(v351, sel_identifier);
              if (!v360) {
                goto LABEL_308;
              }
              v361 = v360;
              v362 = v492;
              sub_2347ED580();

              uint64_t v363 = (uint64_t)v439;
              v364 = v362;
              unint64_t v122 = (unint64_t)v495;
              ((void (*)(char *, char *, uint64_t *))v355)(v439, v364, v495);
              ((void (*)(uint64_t, void, uint64_t, unint64_t))v215)(v363, 0, 1, v122);
              if (((unsigned int (*)(uint64_t, uint64_t, unint64_t))v123)(v363, 1, v122) == 1) {
                goto LABEL_309;
              }
              uint64_t v215 = v462;
              uint64_t v123 = v473;
              sub_2347B3E20(v462, v473, type metadata accessor for CapturedRoom.Surface);
              unint64_t v365 = (unint64_t)v488;
              char v366 = swift_isUniquelyReferenced_nonNull_native();
              v496 = (char *)v365;
              sub_2347ABB5C(v123, v363, v366);
              v488 = v496;
LABEL_222:
              swift_bridgeObjectRelease();
              ((void (*)(uint64_t, unint64_t))v483)(v363, v122);

              sub_2347B3E88(v215, type metadata accessor for CapturedRoom.Surface);
              unint64_t v122 = (unint64_t)v451;
              goto LABEL_203;
            }
            if objc_msgSend(v351, sel_individualUpdate) == 1 || (v465)
            {
              v482 = v351;
              id v367 = objc_msgSend(v351, sel_identifier);
              if (!v367) {
                goto LABEL_318;
              }
              v368 = v367;
              v369 = v492;
              sub_2347ED580();

              uint64_t v363 = (uint64_t)v436;
              v370 = v369;
              unint64_t v122 = (unint64_t)v495;
              ((void (*)(char *, char *, uint64_t *))v355)(v436, v370, v495);
              ((void (*)(uint64_t, void, uint64_t, unint64_t))v215)(v363, 0, 1, v122);
              if (((unsigned int (*)(uint64_t, uint64_t, unint64_t))v123)(v363, 1, v122) == 1) {
                goto LABEL_319;
              }
              uint64_t v215 = v462;
              uint64_t v123 = v473;
              sub_2347B3E20(v462, v473, type metadata accessor for CapturedRoom.Surface);
              v371 = (char *)v485;
              char v372 = swift_isUniquelyReferenced_nonNull_native();
              v496 = v371;
              sub_2347ABB5C(v123, v363, v372);
              v485 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t *))v496;
              goto LABEL_222;
            }
            sub_2347B3E88(v462, type metadata accessor for CapturedRoom.Surface);
          }
          else
          {

            ((void (*)(unint64_t, uint64_t *))*v491)(v122, v495);
          }
LABEL_203:
          ++v349;
        }
        while (v217 != (uint64_t *)v486);
      }
      swift_bridgeObjectRelease();
      id v373 = objc_msgSend(v452, sel_openings);
      unint64_t v374 = sub_2347EE7D0();

      uint64_t v486 = sub_2347AA0EC(v374);
      if (v486)
      {
        v484 = (void (**)(unint64_t, uint64_t, uint64_t, uint64_t *))(v374 & 0xC000000000000001);
        v494 = (void (**)(unint64_t, uint64_t, uint64_t, uint64_t *))(v489 + 56);
        v487 = (uint64_t *)(v489 + 48);
        uint64_t v375 = 4;
        unint64_t v122 = (unint64_t)v450;
        do
        {
          if (v484) {
            v376 = (void (**)(uint64_t, uint64_t))MEMORY[0x237DC6CF0](v375 - 4, v374);
          }
          else {
            v376 = (void (**)(uint64_t, uint64_t))*(id *)(v374 + 8 * v375);
          }
          v377 = v376;
          v217 = (uint64_t *)(v375 - 3);
          if (__OFADD__(v375 - 4, 1)) {
            goto LABEL_279;
          }
          id v378 = objc_msgSend(v376, sel_identifier);
          if (!v378) {
            goto LABEL_298;
          }
          v379 = v378;
          v380 = v492;
          sub_2347ED580();

          v381 = *v493;
          v382 = v495;
          ((void (*)(unint64_t, char *, uint64_t *))*v493)(v122, v380, v495);
          uint64_t v215 = (uint64_t)*v494;
          (*v494)(v122, 0, 1, v382);
          uint64_t v123 = *v487;
          if (((unsigned int (*)(unint64_t, uint64_t, uint64_t *))*v487)(v122, 1, v382) == 1) {
            goto LABEL_299;
          }
          if (v124[2] && (unint64_t v383 = sub_2347BFA88(v122), (v384 & 1) != 0))
          {
            uint64_t v385 = v455;
            sub_2347B3E20(v124[7] + *(void *)(v490 + 72) * v383, v455, type metadata accessor for CapturedRoom.Surface);
            sub_2347B4314(v385, v461, type metadata accessor for CapturedRoom.Surface);
            v483 = *v491;
            ((void (*)(unint64_t, uint64_t *))v483)(v122, v495);
            if (!objc_msgSend(v377, sel_individualUpdate))
            {
              v482 = v377;
              id v386 = objc_msgSend(v377, sel_identifier);
              if (!v386) {
                goto LABEL_310;
              }
              v387 = v386;
              v388 = v492;
              sub_2347ED580();

              uint64_t v389 = (uint64_t)v438;
              v390 = v388;
              unint64_t v122 = (unint64_t)v495;
              ((void (*)(char *, char *, uint64_t *))v381)(v438, v390, v495);
              ((void (*)(uint64_t, void, uint64_t, unint64_t))v215)(v389, 0, 1, v122);
              if (((unsigned int (*)(uint64_t, uint64_t, unint64_t))v123)(v389, 1, v122) == 1) {
                goto LABEL_311;
              }
              uint64_t v215 = v461;
              uint64_t v123 = v473;
              sub_2347B3E20(v461, v473, type metadata accessor for CapturedRoom.Surface);
              unint64_t v391 = (unint64_t)v488;
              char v392 = swift_isUniquelyReferenced_nonNull_native();
              v496 = (char *)v391;
              sub_2347ABB5C(v123, v389, v392);
              v488 = v496;
LABEL_245:
              swift_bridgeObjectRelease();
              ((void (*)(uint64_t, unint64_t))v483)(v389, v122);

              sub_2347B3E88(v215, type metadata accessor for CapturedRoom.Surface);
              unint64_t v122 = (unint64_t)v450;
              goto LABEL_226;
            }
            if objc_msgSend(v377, sel_individualUpdate) == 1 || (v465)
            {
              v482 = v377;
              id v393 = objc_msgSend(v377, sel_identifier);
              if (!v393) {
                goto LABEL_320;
              }
              v394 = v393;
              v395 = v492;
              sub_2347ED580();

              uint64_t v389 = (uint64_t)v435;
              v396 = v395;
              unint64_t v122 = (unint64_t)v495;
              ((void (*)(char *, char *, uint64_t *))v381)(v435, v396, v495);
              ((void (*)(uint64_t, void, uint64_t, unint64_t))v215)(v389, 0, 1, v122);
              if (((unsigned int (*)(uint64_t, uint64_t, unint64_t))v123)(v389, 1, v122) == 1) {
                goto LABEL_321;
              }
              uint64_t v215 = v461;
              uint64_t v123 = v473;
              sub_2347B3E20(v461, v473, type metadata accessor for CapturedRoom.Surface);
              v397 = (char *)v485;
              char v398 = swift_isUniquelyReferenced_nonNull_native();
              v496 = v397;
              sub_2347ABB5C(v123, v389, v398);
              v485 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t *))v496;
              goto LABEL_245;
            }
            sub_2347B3E88(v461, type metadata accessor for CapturedRoom.Surface);
          }
          else
          {

            ((void (*)(unint64_t, uint64_t *))*v491)(v122, v495);
          }
LABEL_226:
          ++v375;
        }
        while (v217 != (uint64_t *)v486);
      }
      swift_bridgeObjectRelease();
      id v399 = objc_msgSend(v452, sel_floors);
      unint64_t v400 = sub_2347EE7D0();

      v487 = (uint64_t *)sub_2347AA0EC(v400);
      if (v487)
      {
        uint64_t v486 = v400 & 0xC000000000000001;
        v494 = (void (**)(unint64_t, uint64_t, uint64_t, uint64_t *))(v489 + 56);
        v489 += 48;
        uint64_t v401 = 4;
        do
        {
          if (v486) {
            id v402 = (id)MEMORY[0x237DC6CF0](v401 - 4, v400);
          }
          else {
            id v402 = *(id *)(v400 + 8 * v401);
          }
          uint64_t v215 = (uint64_t)v402;
          v403 = (uint64_t *)(v401 - 3);
          if (__OFADD__(v401 - 4, 1)) {
            goto LABEL_280;
          }
          id v404 = objc_msgSend(v402, sel_identifier);
          if (!v404) {
            goto LABEL_300;
          }
          v405 = v404;
          v406 = v492;
          sub_2347ED580();

          v407 = *v493;
          uint64_t v408 = (uint64_t)v476;
          v217 = v495;
          ((void (*)(char *, char *, uint64_t *))*v493)(v476, v406, v495);
          unint64_t v122 = (unint64_t)*v494;
          (*v494)(v408, 0, 1, v217);
          uint64_t v123 = *(void *)v489;
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t *))v489)(v408, 1, v217) == 1) {
            goto LABEL_301;
          }
          if (v124[2] && (v409 = sub_2347BFA88(v408), uint64_t v408 = (uint64_t)v476, (v410 & 1) != 0))
          {
            uint64_t v411 = v454;
            sub_2347B3E20(v124[7] + *(void *)(v490 + 72) * v409, v454, type metadata accessor for CapturedRoom.Surface);
            sub_2347B4314(v411, v460, type metadata accessor for CapturedRoom.Surface);
            v217 = *v491;
            ((void (*)(uint64_t, uint64_t *))*v491)(v408, v495);
            if (!objc_msgSend((id)v215, sel_individualUpdate))
            {
              v484 = (void (**)(unint64_t, uint64_t, uint64_t, uint64_t *))v217;
              id v412 = objc_msgSend((id)v215, sel_identifier);
              if (!v412) {
                goto LABEL_312;
              }
              v413 = v412;
              sub_2347ED580();

              v217 = v437;
              v414 = v495;
              ((void (*)(uint64_t *, char *, uint64_t *))v407)(v437, v492, v495);
              v415 = v414;
              ((void (*)(uint64_t *, void, uint64_t, uint64_t *))v122)(v217, 0, 1, v414);
              if (((unsigned int (*)(uint64_t *, uint64_t, uint64_t *))v123)(v217, 1, v414) == 1) {
                goto LABEL_313;
              }
              uint64_t v123 = v460;
              unint64_t v122 = v473;
              sub_2347B3E20(v460, v473, type metadata accessor for CapturedRoom.Surface);
              unint64_t v416 = (unint64_t)v488;
              char v417 = swift_isUniquelyReferenced_nonNull_native();
              v496 = (char *)v416;
              sub_2347ABB5C(v122, (uint64_t)v217, v417);
              v488 = v496;
LABEL_268:
              swift_bridgeObjectRelease();
              ((void (*)(uint64_t *, uint64_t *))v484)(v217, v415);

              sub_2347B3E88(v123, type metadata accessor for CapturedRoom.Surface);
              goto LABEL_249;
            }
            if objc_msgSend((id)v215, sel_individualUpdate) == 1 || (v465)
            {
              v484 = (void (**)(unint64_t, uint64_t, uint64_t, uint64_t *))v217;
              id v418 = objc_msgSend((id)v215, sel_identifier);
              if (!v418) {
                goto LABEL_322;
              }
              v419 = v418;
              sub_2347ED580();

              v217 = v434;
              v420 = v495;
              ((void (*)(uint64_t *, char *, uint64_t *))v407)(v434, v492, v495);
              v415 = v420;
              ((void (*)(uint64_t *, void, uint64_t, uint64_t *))v122)(v217, 0, 1, v420);
              if (((unsigned int (*)(uint64_t *, uint64_t, uint64_t *))v123)(v217, 1, v420) == 1) {
                goto LABEL_323;
              }
              uint64_t v123 = v460;
              unint64_t v122 = v473;
              sub_2347B3E20(v460, v473, type metadata accessor for CapturedRoom.Surface);
              v421 = (char *)v485;
              char v422 = swift_isUniquelyReferenced_nonNull_native();
              v496 = v421;
              sub_2347ABB5C(v122, (uint64_t)v217, v422);
              v485 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t *))v496;
              goto LABEL_268;
            }
            sub_2347B3E88(v460, type metadata accessor for CapturedRoom.Surface);
          }
          else
          {

            ((void (*)(uint64_t, uint64_t *))*v491)(v408, v495);
          }
LABEL_249:
          ++v401;
        }
        while (v403 != v487);
      }
      swift_bridgeObjectRelease();
      uint64_t v423 = Strong;
      swift_retain();
      uint64_t v424 = swift_bridgeObjectRetain();
      sub_2347AD338(v424, v423);
      swift_bridgeObjectRelease();
      swift_release();
      swift_retain();
      uint64_t v425 = swift_bridgeObjectRetain();
      sub_2347AD800(v425, v423);
      swift_bridgeObjectRelease();
      swift_release();
      swift_retain();
      uint64_t v426 = swift_bridgeObjectRetain();
      sub_2347AD800(v426, v423);
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v427 = swift_bridgeObjectRetain();
      size_t v142 = sub_2347C1968(v427);
      swift_bridgeObjectRelease();
      uint64_t v428 = swift_bridgeObjectRetain();
      sub_2347C1968(v428);
      swift_bridgeObjectRelease();
      uint64_t v429 = swift_bridgeObjectRetain();
      sub_2347C1968(v429);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease_n();
      return v142;
    }
    uint64_t v234 = v232 + *(int *)(v233 + 48);
    uint64_t v235 = (uint64_t)v478;
    (*v493)();
    sub_2347B4314(v234, (uint64_t)v487, type metadata accessor for CapturedRoom.Surface);
    if (v124[2])
    {
      unint64_t v236 = sub_2347BFA88(v235);
      if (v237)
      {
        uint64_t v238 = v490;
        sub_2347B3E20(v124[7] + *(void *)(v490 + 72) * v236, v218, type metadata accessor for CapturedRoom.Surface);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t *))(v238 + 56))(v218, 0, 1, v483);
        sub_2346A7C30(v218, &qword_2687ACC78);
        sub_2347B3E88((uint64_t)v487, type metadata accessor for CapturedRoom.Surface);
        (*v216)(v235, v54);
LABEL_88:
        uint64_t v137 = (uint64_t)v494;
        v217 = v230;
        continue;
      }
    }
    break;
  }
  (*v485)(v218, 1, 1, v483);
  sub_2346A7C30(v218, &qword_2687ACC78);
  v239 = (void (*)(uint64_t, uint64_t, uint64_t))*v484;
  uint64_t v240 = v453;
  ((void (*)(uint64_t, uint64_t, uint64_t))*v484)(v453, v235, v54);
  sub_2347B3E20((uint64_t)v487, v449, type metadata accessor for CapturedRoom.Surface);
  uint64_t v241 = (uint64_t)v480;
  int v242 = swift_isUniquelyReferenced_nonNull_native();
  v496 = (char *)v241;
  unint64_t v122 = sub_2347BFA88(v240);
  uint64_t v244 = *(void *)(v241 + 16);
  BOOL v245 = (v243 & 1) == 0;
  uint64_t v246 = v244 + v245;
  if (__OFADD__(v244, v245)) {
    goto LABEL_288;
  }
  char v247 = v243;
  if (*(void *)(v241 + 24) >= v246)
  {
    if ((v242 & 1) == 0) {
      sub_2347D75A4();
    }
LABEL_120:
    v216 = (void (**)(uint64_t, uint64_t))v491;
    v250 = v496;
    if (v247)
    {
      v480 = v496;
      sub_2347B437C(v449, *((void *)v496 + 7) + *(void *)(v490 + 72) * v122, type metadata accessor for CapturedRoom.Surface);
      uint64_t v54 = (uint64_t)v495;
    }
    else
    {
      *(void *)&v496[8 * (v122 >> 6) + 64] |= 1 << v122;
      uint64_t v54 = (uint64_t)v495;
      v239(v250[6] + *(void *)(v489 + 72) * v122, v453, (uint64_t)v495);
      sub_2347B4314(v449, v250[7] + *(void *)(v490 + 72) * v122, type metadata accessor for CapturedRoom.Surface);
      uint64_t v251 = v250[2];
      BOOL v139 = __OFADD__(v251, 1);
      uint64_t v252 = v251 + 1;
      if (v139) {
        goto LABEL_289;
      }
      v250[2] = v252;
      v480 = v496;
    }
    swift_bridgeObjectRelease();
    v219 = *v216;
    (*v216)(v453, v54);
    sub_2347B3E88((uint64_t)v487, type metadata accessor for CapturedRoom.Surface);
    v219(v235, v54);
    uint64_t v218 = (uint64_t)v446;
    unint64_t v122 = (unint64_t)v488;
    goto LABEL_88;
  }
  sub_2347D1ED4(v246, v242);
  unint64_t v248 = sub_2347BFA88(v453);
  if ((v247 & 1) == (v249 & 1))
  {
    unint64_t v122 = v248;
    goto LABEL_120;
  }
LABEL_328:
  uint64_t result = sub_2347EF0F0();
  __break(1u);
  return result;
}

__n128 sub_2347A70C0@<Q0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, unint64_t *a4@<X8>)
{
  uint64_t v8 = type metadata accessor for CapturedRoom.Surface(0) - 8;
  MEMORY[0x270FA5388](v8);
  *(void *)&long long v56 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  *(void *)&long long v55 = (char *)&v48 - v11;
  MEMORY[0x270FA5388](v12);
  *(void *)&long long v54 = (char *)&v48 - v13;
  MEMORY[0x270FA5388](v14);
  v53.n128_u64[0] = (unint64_t)&v48 - v15;
  MEMORY[0x270FA5388](v16);
  uint64_t v52 = (uint64_t)&v48 - v17;
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v48 - v20;
  uint64_t v22 = *(void *)(a1 + 16);
  unint64_t v23 = MEMORY[0x263F8EE78];
  if (v22)
  {
    unint64_t v49 = a3;
    unint64_t v50 = a2;
    uint64_t v51 = a4;
    unint64_t v24 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
    uint64_t v25 = a1 + v24;
    uint64_t v26 = *(void *)(v19 + 72);
    uint64_t v48 = a1;
    swift_bridgeObjectRetain();
    unint64_t v27 = MEMORY[0x263F8EE78];
    unint64_t v57 = MEMORY[0x263F8EE78];
    unint64_t v58 = MEMORY[0x263F8EE78];
    unint64_t v28 = MEMORY[0x263F8EE78];
    unint64_t v23 = MEMORY[0x263F8EE78];
    do
    {
      sub_2347B3E20(v25, (uint64_t)v21, type metadata accessor for CapturedRoom.Surface);
      switch(*v21)
      {
        case 2:
          sub_2347B3E20((uint64_t)v21, v52, type metadata accessor for CapturedRoom.Surface);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v23 = sub_2346FA490(0, *(void *)(v23 + 16) + 1, 1, v23);
          }
          unint64_t v32 = *(void *)(v23 + 16);
          unint64_t v31 = *(void *)(v23 + 24);
          unint64_t v33 = v32 + 1;
          if (v32 >= v31 >> 1)
          {
            uint64_t v29 = sub_2346FA490(v31 > 1, v32 + 1, 1, v23);
            uint64_t v30 = v52;
            unint64_t v23 = v29;
          }
          else
          {
            uint64_t v29 = v23;
            uint64_t v30 = v52;
          }
          break;
        case 3:
          sub_2347B3E20((uint64_t)v21, v55, type metadata accessor for CapturedRoom.Surface);
          if (swift_isUniquelyReferenced_nonNull_native()) {
            unint64_t v34 = v58;
          }
          else {
            unint64_t v34 = sub_2346FA490(0, *(void *)(v58 + 16) + 1, 1, v58);
          }
          unint64_t v32 = *(void *)(v34 + 16);
          unint64_t v35 = *(void *)(v34 + 24);
          unint64_t v33 = v32 + 1;
          if (v32 >= v35 >> 1)
          {
            uint64_t v29 = sub_2346FA490(v35 > 1, v32 + 1, 1, v34);
            uint64_t v30 = v55;
            unint64_t v58 = v29;
          }
          else
          {
            unint64_t v58 = v34;
            uint64_t v29 = v34;
            uint64_t v30 = v55;
          }
          break;
        case 4:
          sub_2347B3E20((uint64_t)v21, v54, type metadata accessor for CapturedRoom.Surface);
          if (swift_isUniquelyReferenced_nonNull_native()) {
            unint64_t v36 = v57;
          }
          else {
            unint64_t v36 = sub_2346FA490(0, *(void *)(v57 + 16) + 1, 1, v57);
          }
          unint64_t v32 = *(void *)(v36 + 16);
          unint64_t v37 = *(void *)(v36 + 24);
          unint64_t v33 = v32 + 1;
          if (v32 >= v37 >> 1)
          {
            uint64_t v29 = sub_2346FA490(v37 > 1, v32 + 1, 1, v36);
            uint64_t v30 = v54;
            unint64_t v57 = v29;
          }
          else
          {
            unint64_t v57 = v36;
            uint64_t v29 = v36;
            uint64_t v30 = v54;
          }
          break;
        case 5:
          sub_2347B3E20((uint64_t)v21, v56, type metadata accessor for CapturedRoom.Surface);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v27 = sub_2346FA490(0, *(void *)(v27 + 16) + 1, 1, v27);
          }
          unint64_t v32 = *(void *)(v27 + 16);
          unint64_t v38 = *(void *)(v27 + 24);
          unint64_t v33 = v32 + 1;
          if (v32 >= v38 >> 1)
          {
            uint64_t v29 = sub_2346FA490(v38 > 1, v32 + 1, 1, v27);
            uint64_t v30 = v56;
            unint64_t v27 = v29;
          }
          else
          {
            uint64_t v29 = v27;
            uint64_t v30 = v56;
          }
          break;
        default:
          sub_2347B3E20((uint64_t)v21, v53.n128_i64[0], type metadata accessor for CapturedRoom.Surface);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v28 = sub_2346FA490(0, *(void *)(v28 + 16) + 1, 1, v28);
          }
          unint64_t v32 = *(void *)(v28 + 16);
          unint64_t v39 = *(void *)(v28 + 24);
          unint64_t v33 = v32 + 1;
          if (v32 < v39 >> 1)
          {
            uint64_t v29 = v28;
            uint64_t v30 = v53.n128_u64[0];
          }
          else
          {
            uint64_t v29 = sub_2346FA490(v39 > 1, v32 + 1, 1, v28);
            uint64_t v30 = v53.n128_u64[0];
            unint64_t v28 = v29;
          }
          break;
      }
      *(void *)(v29 + 16) = v33;
      sub_2347B4314(v30, v29 + v24 + v32 * v26, type metadata accessor for CapturedRoom.Surface);
      sub_2347B3E88((uint64_t)v21, type metadata accessor for CapturedRoom.Surface);
      v25 += v26;
      --v22;
    }
    while (v22);
    swift_bridgeObjectRelease();
    a2 = v50;
    a4 = v51;
    a3 = v49;
  }
  else
  {
    unint64_t v27 = MEMORY[0x263F8EE78];
    unint64_t v57 = MEMORY[0x263F8EE78];
    unint64_t v58 = MEMORY[0x263F8EE78];
    unint64_t v28 = MEMORY[0x263F8EE78];
  }
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    __break(1u);
    JUMPOUT(0x2347A76FCLL);
  }
  long long v41 = *(_OWORD *)(Strong + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_arFrameReferenceOriginTransform);
  long long v55 = *(_OWORD *)(Strong + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_arFrameReferenceOriginTransform + 16);
  long long v56 = v41;
  long long v42 = *(_OWORD *)(Strong + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_arFrameReferenceOriginTransform + 32);
  __n128 v53 = *(__n128 *)(Strong + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_arFrameReferenceOriginTransform + 48);
  long long v54 = v42;
  swift_release();
  uint64_t v43 = (int *)type metadata accessor for CapturedRoom(0);
  *(unint64_t *)((char *)a4 + v43[12]) = 0;
  *(unint64_t *)((char *)a4 + v43[13]) = 2;
  *a4 = v23;
  a4[1] = v28;
  unint64_t v44 = v58;
  a4[2] = v57;
  a4[3] = v44;
  a4[4] = v27;
  a4[5] = a2;
  *(unint64_t *)((char *)a4 + v43[14]) = a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2347ED5B0();
  *(unint64_t *)((char *)a4 + v43[11]) = MEMORY[0x263F8EE78];
  *(unint64_t *)((char *)a4 + v43[15]) = (unint64_t)objc_msgSend(objc_allocWithZone(MEMORY[0x263F642D8]), sel_init);
  uint64_t v45 = (char *)a4 + v43[16];
  long long v46 = v55;
  *(_OWORD *)uint64_t v45 = v56;
  *((_OWORD *)v45 + 1) = v46;
  __n128 result = v53;
  *((_OWORD *)v45 + 2) = v54;
  *((__n128 *)v45 + 3) = result;
  return result;
}

uint64_t sub_2347A770C(void *a1, void *a2)
{
  uint64_t v97 = type metadata accessor for CapturedRoom(0);
  uint64_t v100 = *(void *)(v97 - 8);
  MEMORY[0x270FA5388](v97);
  uint64_t v91 = (void **)((char *)&v91 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v6);
  uint64_t v96 = (char *)&v91 - v7;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (void **)((char *)&v91 - v9);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2687AEB90);
  MEMORY[0x270FA5388](v11);
  uint64_t v92 = (char *)&v91 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v93 = (uint64_t)&v91 - v14;
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v91 - v16;
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v91 - v19;
  uint64_t v22 = (char *)&v91 + *(int *)(v21 + 48) - v19;
  unint64_t v23 = (unint64_t *)((char *)&v91 + *(int *)(v21 + 64) - v19);
  uint64_t v24 = v2;
  sub_2347A8168((uint64_t)&v91 - v19, (uint64_t)v22, v23, a1, a2, 0);
  uint64_t v25 = (uint64_t)&v17[*(int *)(v11 + 48)];
  uint64_t v95 = v11;
  uint64_t v26 = (uint64_t)&v17[*(int *)(v11 + 64)];
  uint64_t v27 = (uint64_t)v20;
  sub_2346A7BCC((uint64_t)v20, (uint64_t)v17, &qword_2687AE8A0);
  uint64_t v98 = v22;
  sub_2346A7BCC((uint64_t)v22, v25, &qword_2687AE8A0);
  uint64_t v99 = v23;
  uint64_t v28 = (uint64_t)v23;
  uint64_t v29 = v97;
  uint64_t v30 = v100;
  sub_2346A7BCC(v28, v26, &qword_2687AE8A0);
  unint64_t v33 = *(char **)(v30 + 48);
  uint64_t v32 = v30 + 48;
  unint64_t v31 = v33;
  unsigned int v34 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v33)(v26, 1, v29);
  uint64_t v94 = v24;
  if (v34 == 1)
  {
    sub_2346A7C30(v26, &qword_2687AE8A0);
    sub_2346A7C30(v25, &qword_2687AE8A0);
    sub_2346A7C30((uint64_t)v17, &qword_2687AE8A0);
    uint64_t v35 = v95;
    unint64_t v36 = v96;
    goto LABEL_16;
  }
  uint64_t v100 = v32;
  sub_2347B4314(v26, (uint64_t)v10, type metadata accessor for CapturedRoom);
  sub_2346A7C30(v25, &qword_2687AE8A0);
  sub_2346A7C30((uint64_t)v17, &qword_2687AE8A0);
  uint64_t result = swift_weakLoadStrong();
  if (!result)
  {
    __break(1u);
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  uint64_t v38 = result + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_internalDelegate;
  uint64_t v39 = MEMORY[0x237DC8170](result + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_internalDelegate);
  uint64_t v40 = *(void *)(v38 + 8);
  swift_release();
  uint64_t v35 = v95;
  long long v41 = v96;
  if (v39)
  {
    uint64_t result = swift_weakLoadStrong();
    if (!result)
    {
LABEL_56:
      __break(1u);
      goto LABEL_57;
    }
    uint64_t v42 = result;
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(v40 + 24))(v42, v10, ObjectType, v40);
    swift_release();
    swift_unknownObjectRelease();
  }
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    goto LABEL_48;
  }
  uint64_t v44 = result;
  uint64_t v45 = result + 24;
  swift_beginAccess();
  uint64_t v46 = MEMORY[0x237DC8170](v45);
  uint64_t v47 = *(void *)(v44 + 32);
  swift_release();
  if (v46)
  {
    uint64_t result = swift_weakLoadStrong();
    if (!result)
    {
LABEL_57:
      __break(1u);
      goto LABEL_58;
    }
    uint64_t v48 = result;
    uint64_t v49 = swift_getObjectType();
    (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(v47 + 24))(v48, v10, v49, v47);
    swift_release();
    swift_unknownObjectRelease();
  }
  unint64_t v50 = v41;
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    goto LABEL_49;
  }
  uint64_t v51 = sub_23479DFA0();
  swift_release();
  int v52 = *(unsigned __int8 *)(v51 + 16);
  swift_release();
  uint64_t v29 = v97;
  if (v52 == 1)
  {
    uint64_t result = swift_weakLoadStrong();
    if (!result)
    {
LABEL_62:
      __break(1u);
      goto LABEL_63;
    }
    sub_23479DFA0();
    swift_release();
    sub_2347268E8(v10, 1);
    swift_release();
  }
  unint64_t v36 = v50;
  sub_2347B3E88((uint64_t)v10, type metadata accessor for CapturedRoom);
LABEL_16:
  uint64_t v53 = v93;
  uint64_t v54 = v93 + *(int *)(v35 + 48);
  uint64_t v55 = v93 + *(int *)(v35 + 64);
  uint64_t v100 = v27;
  sub_2346A7BCC(v27, v93, &qword_2687AE8A0);
  sub_2346A7BCC((uint64_t)v98, v54, &qword_2687AE8A0);
  sub_2346A7BCC((uint64_t)v99, v55, &qword_2687AE8A0);
  uint64_t v56 = v29;
  uint64_t v96 = v31;
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v31)(v53, 1, v29) == 1)
  {
    sub_2346A7C30(v55, &qword_2687AE8A0);
    sub_2346A7C30(v54, &qword_2687AE8A0);
    sub_2346A7C30(v53, &qword_2687AE8A0);
    uint64_t v57 = (uint64_t)v92;
    goto LABEL_31;
  }
  sub_2347B4314(v53, (uint64_t)v36, type metadata accessor for CapturedRoom);
  sub_2346A7C30(v55, &qword_2687AE8A0);
  sub_2346A7C30(v54, &qword_2687AE8A0);
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    goto LABEL_50;
  }
  uint64_t v58 = result + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_internalDelegate;
  uint64_t v59 = MEMORY[0x237DC8170](result + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_internalDelegate);
  uint64_t v60 = *(void *)(v58 + 8);
  swift_release();
  if (v59)
  {
    uint64_t result = swift_weakLoadStrong();
    if (!result)
    {
LABEL_58:
      __break(1u);
      goto LABEL_59;
    }
    uint64_t v61 = result;
    uint64_t v62 = swift_getObjectType();
    (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(v60 + 16))(v61, v36, v62, v60);
    swift_release();
    swift_unknownObjectRelease();
  }
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    goto LABEL_51;
  }
  uint64_t v63 = result;
  uint64_t v64 = result + 24;
  swift_beginAccess();
  uint64_t v65 = MEMORY[0x237DC8170](v64);
  uint64_t v66 = *(void *)(v63 + 32);
  swift_release();
  if (v65)
  {
    uint64_t result = swift_weakLoadStrong();
    if (!result)
    {
LABEL_59:
      __break(1u);
      goto LABEL_60;
    }
    uint64_t v67 = result;
    uint64_t v68 = swift_getObjectType();
    (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(v66 + 16))(v67, v36, v68, v66);
    swift_release();
    swift_unknownObjectRelease();
  }
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    goto LABEL_52;
  }
  uint64_t v69 = sub_23479DFA0();
  swift_release();
  int v70 = *(unsigned __int8 *)(v69 + 16);
  swift_release();
  uint64_t v57 = (uint64_t)v92;
  if (v70 == 1)
  {
    uint64_t result = swift_weakLoadStrong();
    if (!result)
    {
LABEL_63:
      __break(1u);
      goto LABEL_64;
    }
    sub_23479DFA0();
    swift_release();
    sub_2347268E8(v36, 0);
    swift_release();
  }
  sub_2347B3E88((uint64_t)v36, type metadata accessor for CapturedRoom);
LABEL_31:
  uint64_t v71 = v57 + *(int *)(v35 + 48);
  uint64_t v72 = v57 + *(int *)(v35 + 64);
  uint64_t v73 = v100;
  sub_2346A7BCC(v100, v57, &qword_2687AE8A0);
  sub_2346A7BCC((uint64_t)v98, v71, &qword_2687AE8A0);
  sub_2346A7BCC((uint64_t)v99, v72, &qword_2687AE8A0);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v96)(v71, 1, v56) == 1)
  {
    sub_2346A7C30(v73, (uint64_t *)&unk_2687AEB90);
    sub_2346A7C30(v72, &qword_2687AE8A0);
    sub_2346A7C30(v71, &qword_2687AE8A0);
    uint64_t v74 = v57;
    uint64_t v75 = &qword_2687AE8A0;
    return sub_2346A7C30(v74, v75);
  }
  uint64_t v76 = v91;
  sub_2347B4314(v71, (uint64_t)v91, type metadata accessor for CapturedRoom);
  sub_2346A7C30(v72, &qword_2687AE8A0);
  sub_2346A7C30(v57, &qword_2687AE8A0);
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    goto LABEL_53;
  }
  uint64_t v77 = result + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_internalDelegate;
  uint64_t v78 = MEMORY[0x237DC8170](result + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_internalDelegate);
  uint64_t v79 = *(void *)(v77 + 8);
  swift_release();
  uint64_t v80 = v100;
  if (v78)
  {
    uint64_t result = swift_weakLoadStrong();
    if (!result)
    {
LABEL_60:
      __break(1u);
      goto LABEL_61;
    }
    uint64_t v81 = result;
    uint64_t v82 = swift_getObjectType();
    (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(v79 + 32))(v81, v76, v82, v79);
    swift_release();
    swift_unknownObjectRelease();
  }
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    goto LABEL_54;
  }
  uint64_t v83 = result;
  uint64_t v84 = result + 24;
  swift_beginAccess();
  uint64_t v85 = MEMORY[0x237DC8170](v84);
  uint64_t v86 = *(void *)(v83 + 32);
  swift_release();
  if (v85)
  {
    uint64_t result = swift_weakLoadStrong();
    if (!result)
    {
LABEL_61:
      __break(1u);
      goto LABEL_62;
    }
    uint64_t v87 = result;
    uint64_t v88 = swift_getObjectType();
    (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(v86 + 32))(v87, v76, v88, v86);
    swift_release();
    swift_unknownObjectRelease();
  }
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    goto LABEL_55;
  }
  uint64_t v89 = sub_23479DFA0();
  swift_release();
  int v90 = *(unsigned __int8 *)(v89 + 16);
  swift_release();
  if (v90 != 1)
  {
LABEL_45:
    sub_2347B3E88((uint64_t)v76, type metadata accessor for CapturedRoom);
    uint64_t v75 = (uint64_t *)&unk_2687AEB90;
    uint64_t v74 = v80;
    return sub_2346A7C30(v74, v75);
  }
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_23479DFA0();
    swift_release();
    sub_2347268E8(v76, 2);
    swift_release();
    goto LABEL_45;
  }
LABEL_64:
  __break(1u);
  return result;
}

uint64_t sub_2347A8168(uint64_t a1, uint64_t a2, unint64_t *a3, void *a4, void *a5, int a6)
{
  uint64_t v38 = a3;
  uint64_t v44 = a1;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2687AE8A0);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v43 = (unint64_t *)((char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v12);
  uint64_t v42 = (unint64_t *)((char *)&v37 - v13);
  uint64_t v14 = sub_2347A3258(a4, a5, a6);
  uint64_t v16 = v15;
  uint64_t v41 = v17;
  unint64_t v18 = sub_2347B0624(a4, (uint64_t)a5);
  unint64_t v39 = v19;
  unint64_t v40 = v20;
  uint64_t result = swift_weakLoadStrong();
  if (!result)
  {
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v37 = a2;
  unint64_t v22 = *(void *)(result + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_addedPotentialWalls);
  swift_bridgeObjectRetain();
  swift_release();
  uint64_t result = swift_weakLoadStrong();
  if (!result)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  unint64_t v23 = *(void *)(result + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_removedPotentialWalls);
  swift_bridgeObjectRetain();
  swift_release();
  uint64_t result = swift_weakLoadStrong();
  if (!result)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v24 = MEMORY[0x263F8EE78];
  *(void *)(result + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_addedPotentialWalls) = MEMORY[0x263F8EE78];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_weakLoadStrong();
  if (!result)
  {
LABEL_23:
    __break(1u);
    return result;
  }
  *(void *)(result + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_removedPotentialWalls) = v24;
  swift_release();
  swift_bridgeObjectRelease();
  unint64_t v25 = v39;
  if (*(void *)(v14 + 16) || *(void *)(v18 + 16))
  {
    uint64_t v26 = v38;
    sub_2347A70C0(v14, v18, MEMORY[0x263F8EE78], v38);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v27 = type metadata accessor for CapturedRoom(0);
    (*(void (**)(unint64_t *, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v26, 0, 1, v27);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v34 = type metadata accessor for CapturedRoom(0);
    (*(void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v38, 1, 1, v34);
  }
  unint64_t v29 = v40;
  uint64_t v28 = v41;
  uint64_t v30 = v42;
  if (*(void *)(v16 + 16) || *(void *)(v25 + 16) || *(void *)(v22 + 16))
  {
    sub_2347A70C0(v16, v25, v22, v42);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v31 = type metadata accessor for CapturedRoom(0);
    (*(void (**)(unint64_t *, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v30, 0, 1, v31);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v35 = type metadata accessor for CapturedRoom(0);
    (*(void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v30, 1, 1, v35);
  }
  uint64_t v32 = v43;
  if (*(void *)(v28 + 16) || *(void *)(v29 + 16) || *(void *)(v23 + 16))
  {
    sub_2347A70C0(v28, v29, v23, v43);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v33 = type metadata accessor for CapturedRoom(0);
    (*(void (**)(unint64_t *, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v32, 0, 1, v33);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v36 = type metadata accessor for CapturedRoom(0);
    (*(void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v32, 1, 1, v36);
  }
  sub_2346B1970((uint64_t)v30, v44, &qword_2687AE8A0);
  return sub_2346B1970((uint64_t)v32, v37, &qword_2687AE8A0);
}

uint64_t sub_2347A85C4(uint64_t a1, void *a2)
{
  uint64_t v3 = type metadata accessor for CapturedRoom(0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (uint64_t *)((char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v7 = result;
    if (qword_2687ABDD0 != -1) {
      swift_once();
    }
    sub_234719500();
    swift_beginAccess();
    id v8 = objc_msgSend(*(id *)(v7 + 56), sel_currentFrame);
    if (v8)
    {
      uint64_t v9 = v8;
      objc_msgSend(v8, sel_referenceOriginTransform);
      long long v32 = v11;
      long long v33 = v10;
      long long v30 = v13;
      long long v31 = v12;

      uint64_t v14 = (_OWORD *)(v7 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_arFrameReferenceOriginTransform);
      long long v15 = v32;
      _OWORD *v14 = v33;
      v14[1] = v15;
      long long v16 = v30;
      v14[2] = v31;
      v14[3] = v16;
    }
    type metadata accessor for RSCoreAdaptor();
    unint64_t v17 = *(void *)(v7 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_detectedObjects);
    unint64_t v18 = (uint64_t *)(v7 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_potentiallWalls);
    swift_beginAccess();
    uint64_t v19 = *v18;
    long long v20 = *(_OWORD *)(v7 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_arFrameReferenceOriginTransform);
    long long v32 = *(_OWORD *)(v7 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_arFrameReferenceOriginTransform + 16);
    long long v33 = v20;
    long long v21 = *(_OWORD *)(v7 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_arFrameReferenceOriginTransform + 32);
    long long v30 = *(_OWORD *)(v7 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_arFrameReferenceOriginTransform + 48);
    long long v31 = v21;
    uint64_t v22 = qword_2687ABE38;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v22 != -1) {
      swift_once();
    }
    id v23 = (id)qword_2687BE210;
    sub_234774714(a2, v17, v19, v23, 1, v5, v33, v32, v31, v30);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    uint64_t v24 = (void *)(v7 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_floorPlanModel);
    swift_beginAccess();
    sub_2347B437C((uint64_t)v5, (uint64_t)v24, type metadata accessor for CapturedRoom);
    swift_endAccess();
    if ((*(unsigned char *)(v7 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_configuration + 3) & 1) == 0)
    {
      *uint64_t v24 = MEMORY[0x263F8EE78];
      swift_bridgeObjectRelease();
    }
    sub_2347B3E20((uint64_t)v24, (uint64_t)v5, type metadata accessor for CapturedRoom);
    sub_2347A770C(a2, v5);
    sub_2347B3E88((uint64_t)v5, type metadata accessor for CapturedRoom);
    uint64_t v25 = v7 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_internalDelegate;
    if (MEMORY[0x237DC8170](v7 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_internalDelegate))
    {
      uint64_t v26 = *(void *)(v25 + 8);
      uint64_t ObjectType = swift_getObjectType();
      sub_2347B3E20((uint64_t)v24, (uint64_t)v5, type metadata accessor for CapturedRoom);
      (*(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v26 + 8))(v7, v5, ObjectType, v26);
      swift_unknownObjectRelease();
      sub_2347B3E88((uint64_t)v5, type metadata accessor for CapturedRoom);
    }
    swift_beginAccess();
    if (MEMORY[0x237DC8170](v7 + 24))
    {
      uint64_t v28 = *(void *)(v7 + 32);
      uint64_t v29 = swift_getObjectType();
      sub_2347B3E20((uint64_t)v24, (uint64_t)v5, type metadata accessor for CapturedRoom);
      (*(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v28 + 8))(v7, v5, v29, v28);
      swift_unknownObjectRelease();
      swift_release();
      return sub_2347B3E88((uint64_t)v5, type metadata accessor for CapturedRoom);
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_2347A8A68(uint64_t a1, void *a2)
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_runAllowed;
    if (*(unsigned char *)(result + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_runAllowed))
    {
      return swift_release();
    }
    else
    {
      if (qword_2687ABDD0 != -1) {
        swift_once();
      }
      id v6 = objc_msgSend(a2, sel_floorPlan);
      sub_234719BEC(v6);

      uint64_t result = swift_weakLoadStrong();
      if (result)
      {
        char v7 = *(unsigned char *)(result + 16);
        swift_release();
        sub_23471B414(v7);
        id v8 = (uint64_t *)(v4 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_keyframes);
        swift_beginAccess();
        uint64_t v9 = *v8;
        long long v25 = *(_OWORD *)(v4 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_arFrameReferenceOriginTransform + 16);
        long long v26 = *(_OWORD *)(v4 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_arFrameReferenceOriginTransform);
        long long v23 = *(_OWORD *)(v4 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_arFrameReferenceOriginTransform + 48);
        long long v24 = *(_OWORD *)(v4 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_arFrameReferenceOriginTransform + 32);
        uint64_t v10 = v4 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_internalDelegate;
        if (MEMORY[0x237DC8170](v4 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_internalDelegate))
        {
          uint64_t v11 = *(void *)(v10 + 8);
          uint64_t ObjectType = swift_getObjectType();
          uint64_t v27 = v9;
          uint64_t v28 = a2;
          long long v29 = v26;
          long long v30 = v25;
          long long v31 = v24;
          long long v32 = v23;
          long long v13 = *(void **)(v4 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_error);
          uint64_t v14 = *(void (**)(uint64_t, uint64_t *, void *, uint64_t, uint64_t))(v11 + 56);
          swift_bridgeObjectRetain();
          id v15 = a2;
          id v16 = v13;
          v14(v4, &v27, v13, ObjectType, v11);
          swift_unknownObjectRelease();
        }
        else
        {
          swift_bridgeObjectRetain();
          id v17 = a2;
        }
        swift_beginAccess();
        if (MEMORY[0x237DC8170](v4 + 24))
        {
          uint64_t v18 = *(void *)(v4 + 32);
          uint64_t v19 = swift_getObjectType();
          uint64_t v27 = v9;
          uint64_t v28 = a2;
          long long v29 = v26;
          long long v30 = v25;
          long long v31 = v24;
          long long v32 = v23;
          long long v20 = *(void **)(v4 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_error);
          long long v21 = *(void (**)(uint64_t, uint64_t *, void *, uint64_t, uint64_t))(v18 + 56);
          id v22 = v20;
          v21(v4, &v27, v20, v19, v18);
          swift_unknownObjectRelease();
        }
        swift_bridgeObjectRelease();
        *(unsigned char *)(v4 + v5) = 1;
        return swift_release();
      }
      else
      {
        __break(1u);
      }
    }
  }
  return result;
}

uint64_t sub_2347A8DD8(uint64_t a1, void *a2)
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v5 = result;
    id v6 = objc_msgSend(a2, sel_type);
    if ((unint64_t)v6 >= 6
      || (v7 = (char)v6, id v8 = objc_msgSend(a2, sel_state), v9 = (_BYTE)v8 + 1, (unint64_t)v8 + 1 >= 5))
    {
      return swift_release();
    }
    else
    {
      unint64_t v10 = 0x50003010204uLL >> (8 * v7);
      uint64_t v11 = OBJC_IVAR____TtC8RoomPlan24RSSessionDelegateWrapper_initializationState;
      if (*(unsigned __int8 *)(a1 + OBJC_IVAR____TtC8RoomPlan24RSSessionDelegateWrapper_initializationState) != v9
        && MEMORY[0x237DC8170](v5 + 40))
      {
        sub_2347860B8(v9);
        swift_unknownObjectRelease();
      }
      *(unsigned char *)(a1 + v11) = v9;
      uint64_t v12 = v5 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_internalDelegate;
      if (MEMORY[0x237DC8170](v5 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_internalDelegate))
      {
        uint64_t v13 = *(void *)(v12 + 8);
        uint64_t ObjectType = swift_getObjectType();
        v18[0] = v10;
        (*(void (**)(uint64_t, char *, uint64_t, uint64_t))(v13 + 40))(v5, v18, ObjectType, v13);
        swift_unknownObjectRelease();
      }
      swift_beginAccess();
      if (MEMORY[0x237DC8170](v5 + 24))
      {
        uint64_t v15 = *(void *)(v5 + 32);
        uint64_t v16 = swift_getObjectType();
        char v17 = v10;
        (*(void (**)(uint64_t, char *, uint64_t, uint64_t))(v15 + 40))(v5, &v17, v16, v15);
        swift_release();
        return swift_unknownObjectRelease();
      }
      else
      {
        return swift_release();
      }
    }
  }
  return result;
}

uint64_t sub_2347A9040(uint64_t a1, unint64_t a2)
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v4 = result;
    if (a2 <= 0xFFFFFFFFFFFFFFFBLL) {
      char v5 = 5;
    }
    else {
      char v5 = 0x10305u >> (8 * a2);
    }
    sub_2347AF304();
    uint64_t v6 = swift_allocError();
    *char v7 = v5;
    id v8 = *(void **)(v4 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_error);
    *(void *)(v4 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_error) = v6;

    if (qword_2687ABDD0 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_2347EE690();
    sub_234719918(v9, v10);
    swift_bridgeObjectRelease();
    sub_23479CA5C(1);
    return swift_release();
  }
  return result;
}

void sub_2347A91E4(uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for CapturedRoom.Surface(0);
  uint64_t v70 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v69 = (uint64_t)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v68 = (uint64_t)&v52 - v7;
  MEMORY[0x270FA5388](v8);
  uint64_t v55 = (__n128 *)((char *)&v52 - v9);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (__n128 *)((char *)&v52 - v11);
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v14 = Strong;
    uint64_t v15 = Strong + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_potentiallWalls;
    swift_beginAccess();
    uint64_t v65 = *(void *)v15;
    swift_bridgeObjectRetain();
    id v16 = objc_msgSend(a2, sel_markers);
    sub_2346A9D9C(0, &qword_2687AEBB0);
    unint64_t v17 = sub_2347EE7D0();

    if (v17 >> 62)
    {
LABEL_62:
      swift_bridgeObjectRetain();
      int64_t v18 = sub_2347EEEC0();
      swift_bridgeObjectRelease();
    }
    else
    {
      int64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v54 = v14;
    uint64_t v53 = (void *)v15;
    if (v18)
    {
      uint64_t v71 = MEMORY[0x263F8EE78];
      uint64_t v19 = &v71;
      sub_234745810(0, v18 & ~(v18 >> 63), 0);
      if (v18 < 0)
      {
        __break(1u);
        goto LABEL_64;
      }
      uint64_t v2 = v71;
      type metadata accessor for RSCoreAdaptor();
      for (uint64_t i = 0; i != v18; ++i)
      {
        if ((v17 & 0xC000000000000001) != 0) {
          id v21 = (id)MEMORY[0x237DC6CF0](i, v17);
        }
        else {
          id v21 = *(id *)(v17 + 8 * i + 32);
        }
        id v22 = v21;
        sub_2347717BC(v21, v12);

        uint64_t v71 = v2;
        unint64_t v24 = *(void *)(v2 + 16);
        unint64_t v23 = *(void *)(v2 + 24);
        if (v24 >= v23 >> 1)
        {
          sub_234745810(v23 > 1, v24 + 1, 1);
          uint64_t v2 = v71;
        }
        *(void *)(v2 + 16) = v24 + 1;
        sub_2347B4314((uint64_t)v12, v2+ ((*(unsigned __int8 *)(v70 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80))+ *(void *)(v70 + 72) * v24, type metadata accessor for CapturedRoom.Surface);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v2 = MEMORY[0x263F8EE78];
    }
    uint64_t v19 = *(uint64_t **)(v65 + 16);
    uint64_t v12 = (__n128 *)sub_234799F7C(0, (size_t)v19);
    int64_t v18 = *(void *)(v2 + 16);
    uint64_t v14 = sub_234799F7C(0, v18);
    if (!v18)
    {
      uint64_t v59 = v12;
      swift_bridgeObjectRelease();
      unint64_t v39 = MEMORY[0x263F8EE78];
      unint64_t v67 = MEMORY[0x263F8EE78];
      if (v19) {
        goto LABEL_45;
      }
      goto LABEL_55;
    }
    if (swift_isUniquelyReferenced_nonNull_native())
    {
LABEL_17:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v12 = (__n128 *)sub_23473D1DC((uint64_t)v12);
      }
      unint64_t v25 = 0;
      unint64_t v26 = (*(unsigned __int8 *)(v70 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80);
      unint64_t v17 = v2 + v26;
      unint64_t v58 = v26;
      uint64_t v27 = (float32x2_t *)(v65 + v26);
      float32x4_t v28 = *(float32x4_t *)MEMORY[0x263EF89A8];
      float32x4_t v29 = *(float32x4_t *)(MEMORY[0x263EF89A8] + 16);
      float32x4_t v30 = *(float32x4_t *)(MEMORY[0x263EF89A8] + 32);
      float32x4_t v31 = *(float32x4_t *)(MEMORY[0x263EF89A8] + 48);
      uint64_t v57 = v14 + 32;
      uint64_t v59 = v12;
      uint64_t v56 = v12 + 2;
      uint64_t v66 = v14;
      unint64_t v67 = MEMORY[0x263F8EE78];
      uint64_t v15 = 1;
      uint64_t v12 = v55;
      float32x4_t v63 = v29;
      float32x4_t v64 = v28;
      float32x4_t v61 = v31;
      float32x4_t v62 = v30;
      float32x4_t v60 = (float32x4_t)vdupq_n_s32(0x3DCCCCCDu);
      do
      {
        if (v25 == v18)
        {
          __break(1u);
LABEL_59:
          __break(1u);
LABEL_60:
          __break(1u);
LABEL_61:
          __break(1u);
          goto LABEL_62;
        }
        if (v25 >= *(void *)(v2 + 16)) {
          goto LABEL_59;
        }
        uint64_t v33 = *(void *)(v70 + 72);
        simd_float4x4 v72 = __invert_f4(*(simd_float4x4 *)(v17 + v33 * v25 + 32));
        if (v19)
        {
          uint64_t v34 = 0;
          uint64_t v35 = v27;
          while ((vminvq_u32((uint32x4_t)vandq_s8(vandq_s8((int8x16_t)vcgeq_f32(v60, vabdq_f32(v63, vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v72.columns[0], COERCE_FLOAT(*(_OWORD *)v35[6].f32)), (float32x4_t)v72.columns[1], v35[6], 1), (float32x4_t)v72.columns[2], *(float32x4_t *)v35[6].f32, 2), (float32x4_t)v72.columns[3], *(float32x4_t *)v35[6].f32,
                                                               3))),
                                              (int8x16_t)vcgeq_f32(v60, vabdq_f32(v64, vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v72.columns[0], COERCE_FLOAT(*(_OWORD *)v35[4].f32)), (float32x4_t)v72.columns[1], v35[4], 1), (float32x4_t)v72.columns[2], *(float32x4_t *)v35[4].f32, 2), (float32x4_t)v72.columns[3], *(float32x4_t *)v35[4].f32, 3)))), vandq_s8(
                                              (int8x16_t)vcgeq_f32(v60, vabdq_f32(v62, vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v72.columns[0], COERCE_FLOAT(*(_OWORD *)v35[8].f32)), (float32x4_t)v72.columns[1], v35[8], 1), (float32x4_t)v72.columns[2], *(float32x4_t *)v35[8].f32, 2), (float32x4_t)v72.columns[3], *(float32x4_t *)v35[8].f32, 3))), (int8x16_t)vcgeq_f32(
                                                           v60,
                                                           vabdq_f32(v61, vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v72.columns[0], COERCE_FLOAT(*(_OWORD *)v35[10].f32)), (float32x4_t)v72.columns[1], v35[10], 1), (float32x4_t)v72.columns[2], *(float32x4_t *)v35[10].f32, 2), (float32x4_t)v72.columns[3], *(float32x4_t *)v35[10].f32, 3)))))) & 0x80000000) == 0)
          {
            uint64_t v34 = (uint64_t *)((char *)v34 + 1);
            uint64_t v35 = (float32x2_t *)((char *)v35 + v33);
            if (v19 == v34) {
              goto LABEL_21;
            }
          }
          if (v25 >= *(void *)(v14 + 16)) {
            goto LABEL_60;
          }
          *(unsigned char *)(v57 + v25) = 1;
          if ((unint64_t)v34 >= v59[1].n128_u64[0]) {
            goto LABEL_61;
          }
          *((unsigned char *)v34 + (void)v56) = 1;
          sub_2347B3E20((uint64_t)v35, (uint64_t)v12, type metadata accessor for CapturedRoom.Surface);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v67 = sub_2346FA490(0, *(void *)(v67 + 16) + 1, 1, v67);
          }
          unint64_t v37 = *(void *)(v67 + 16);
          unint64_t v36 = *(void *)(v67 + 24);
          if (v37 >= v36 >> 1) {
            unint64_t v67 = sub_2346FA490(v36 > 1, v37 + 1, 1, v67);
          }
          unint64_t v32 = v67;
          *(void *)(v67 + 16) = v37 + 1;
          sub_2347B4314((uint64_t)v12, v32 + v58 + v37 * v33, type metadata accessor for CapturedRoom.Surface);
          uint64_t v14 = v66;
          uint64_t v15 = 1;
        }
LABEL_21:
        ++v25;
      }
      while (v25 != v18);
      if ((unint64_t)v18 > *(void *)(v14 + 16))
      {
        __break(1u);
        goto LABEL_66;
      }
      uint64_t v38 = 0;
      unint64_t v39 = MEMORY[0x263F8EE78];
      unint64_t v40 = v58;
      do
      {
        if ((*(unsigned char *)(v14 + v38 + 32) & 1) == 0)
        {
          sub_2347B3E20(v17, v68, type metadata accessor for CapturedRoom.Surface);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v39 = sub_2346FA490(0, *(void *)(v39 + 16) + 1, 1, v39);
          }
          unint64_t v42 = *(void *)(v39 + 16);
          unint64_t v41 = *(void *)(v39 + 24);
          if (v42 >= v41 >> 1) {
            unint64_t v39 = sub_2346FA490(v41 > 1, v42 + 1, 1, v39);
          }
          *(void *)(v39 + 16) = v42 + 1;
          sub_2347B4314(v68, v39 + v40 + v42 * v33, type metadata accessor for CapturedRoom.Surface);
          uint64_t v14 = v66;
        }
        ++v38;
        v17 += v33;
      }
      while (v18 != v38);
      swift_bridgeObjectRelease();
      if (v19)
      {
LABEL_45:
        if ((unint64_t)v19 <= v59[1].n128_u64[0])
        {
          uint64_t v43 = 0;
          uint64_t v44 = v59 + 2;
          unint64_t v45 = MEMORY[0x263F8EE78];
          do
          {
            if ((*((unsigned char *)v43 + (void)v44) & 1) == 0)
            {
              unint64_t v46 = (*(unsigned __int8 *)(v70 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80);
              uint64_t v47 = *(void *)(v70 + 72);
              sub_2347B3E20(v65 + v46 + v47 * (void)v43, v69, type metadata accessor for CapturedRoom.Surface);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                unint64_t v45 = sub_2346FA490(0, *(void *)(v45 + 16) + 1, 1, v45);
              }
              unint64_t v49 = *(void *)(v45 + 16);
              unint64_t v48 = *(void *)(v45 + 24);
              if (v49 >= v48 >> 1) {
                unint64_t v45 = sub_2346FA490(v48 > 1, v49 + 1, 1, v45);
              }
              *(void *)(v45 + 16) = v49 + 1;
              sub_2347B4314(v69, v45 + v46 + v49 * v47, type metadata accessor for CapturedRoom.Surface);
            }
            uint64_t v43 = (uint64_t *)((char *)v43 + 1);
          }
          while (v19 != v43);
          goto LABEL_56;
        }
LABEL_66:
        __break(1u);
        return;
      }
LABEL_55:
      unint64_t v45 = MEMORY[0x263F8EE78];
LABEL_56:
      swift_bridgeObjectRelease();
      void *v53 = v67;
      swift_bridgeObjectRelease();
      swift_beginAccess();
      uint64_t v50 = swift_bridgeObjectRetain();
      sub_2346D9918(v50);
      swift_endAccess();
      uint64_t v51 = v54;
      *(void *)(v54 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_addedPotentialWalls) = v39;
      swift_bridgeObjectRelease();
      *(void *)(v51 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_removedPotentialWalls) = v45;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      return;
    }
LABEL_64:
    uint64_t v14 = (uint64_t)sub_23473D1DC(v14);
    goto LABEL_17;
  }
}

id sub_2347A9B98()
{
  return sub_2347AA098(type metadata accessor for RSSessionDelegateWrapper);
}

void sub_2347A9BC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v14 = a1;
    uint64_t v15 = MEMORY[0x263F8EE78];
    sub_2347EEE10();
    uint64_t v5 = (void *)(a2 + 32);
    while (1)
    {
      if (*v5++)
      {
        swift_bridgeObjectRetain();
        uint64_t v7 = (void *)sub_2347EE510();
      }
      else
      {
        uint64_t v7 = 0;
      }
      id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F642B0]), sel_initWithDictionaryRepresentation_, v7);

      if (!v8) {
        break;
      }
      swift_bridgeObjectRelease();
      sub_2347EEDF0();
      sub_2347EEE20();
      sub_2347EEE30();
      sub_2347EEE00();
      if (!--v2)
      {
        uint64_t v3 = v15;
        a1 = v14;
        goto LABEL_9;
      }
    }
    __break(1u);
    goto LABEL_13;
  }
LABEL_9:
  uint64_t v9 = (void *)(a1 + 16);
  swift_beginAccess();
  *uint64_t v9 = v3;
  swift_bridgeObjectRelease();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v11 = *(void **)(Strong + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_floorPlanGenerator);
  id v12 = v11;
  swift_release();
  if (v11)
  {
    swift_beginAccess();
    sub_2346A9D9C(0, (unint64_t *)&unk_2687AEB60);
    swift_bridgeObjectRetain();
    uint64_t v13 = (void *)sub_2347EE7C0();
    swift_bridgeObjectRelease();
    objc_msgSend(v12, sel_updateWithObjects_, v13);

    return;
  }
LABEL_14:
  __break(1u);
}

uint64_t sub_2347A9DEC(void *a1, uint64_t a2, void *a3, uint64_t a4, unint64_t *a5, uint64_t a6, void (*a7)(uint64_t))
{
  sub_2346A9D9C(0, a5);
  uint64_t v10 = sub_2347EE7D0();
  id v11 = a3;
  id v12 = a1;
  a7(v10);

  return swift_bridgeObjectRelease();
}

uint64_t sub_2347A9E80()
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    sub_2347AF304();
    uint64_t v2 = swift_allocError();
    unsigned char *v3 = 5;
    uint64_t v4 = *(void **)(v1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_error);
    *(void *)(v1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_error) = v2;

    if (qword_2687ABDD0 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_2347EE690();
    sub_234719918(v5, v6);
    swift_bridgeObjectRelease();
    sub_23479CA5C(1);
    return swift_release();
  }
  return result;
}

id sub_2347AA028(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v6 = swift_weakInit();
  v8.receiver = a1;
  v8.super_class = (Class)a4(v6);
  return objc_msgSendSuper2(&v8, sel_init);
}

id sub_2347AA080()
{
  return sub_2347AA098(type metadata accessor for OUSessionDelegateWrapper);
}

id sub_2347AA098(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

BOOL sub_2347AA0E0(uint64_t a1)
{
  return (a1 & 0xC000000000000001) == 0;
}

uint64_t sub_2347AA0EC(unint64_t a1)
{
  if (!(a1 >> 62)) {
    return *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_2347EEEC0();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_2347AA14C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_2347BF9DC(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_2347D48EC();
LABEL_7:
    id v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t result = swift_release();
      *(void *)(v17 + 8 * v10) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_2347CD0D4(v13, a3 & 1);
  unint64_t v19 = sub_2347BF9DC(a2);
  if ((v14 & 1) != (v20 & 1))
  {
LABEL_17:
    type metadata accessor for ScanEntity();
    uint64_t result = sub_2347EF0F0();
    __break(1u);
    return result;
  }
  unint64_t v10 = v19;
  id v16 = (void *)*v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:
  v16[(v10 >> 6) + 8] |= 1 << v10;
  uint64_t v21 = 8 * v10;
  *(void *)(v16[6] + v21) = a2;
  *(void *)(v16[7] + v21) = a1;
  uint64_t v22 = v16[2];
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v16[2] = v24;

  return swift_retain();
}

uint64_t sub_2347AA2B0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_2347BFB5C(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_2347D4A98();
LABEL_7:
    int64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      *(void *)(v18[7] + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_2347CD424(result, a4 & 1);
  uint64_t result = sub_2347BFB5C(a2, a3);
  if ((v16 & 1) != (v19 & 1))
  {
LABEL_17:
    uint64_t result = sub_2347EF0F0();
    __break(1u);
    return result;
  }
  unint64_t v12 = result;
  int64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  char v20 = (uint64_t *)(v18[6] + 16 * v12);
  *char v20 = a2;
  v20[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v21 = v18[2];
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v18[2] = v23;

  return swift_bridgeObjectRetain();
}

uint64_t sub_2347AA414(uint64_t a1, uint64_t a2, char a3)
{
  return sub_2347AA46C(a1, a2, a3, (void (*)(void))sub_2347D4AA4, (void (*)(void))sub_2347CD430);
}

uint64_t sub_2347AA440(uint64_t a1, uint64_t a2, char a3)
{
  return sub_2347AA46C(a1, a2, a3, (void (*)(void))sub_2347D4AB0, (void (*)(void))sub_2347CD43C);
}

uint64_t sub_2347AA46C(uint64_t a1, uint64_t a2, char a3, void (*a4)(void), void (*a5)(void))
{
  uint64_t v27 = a5;
  uint64_t v28 = a1;
  uint64_t v7 = (void **)v5;
  uint64_t v10 = sub_2347ED5C0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  BOOL v14 = (void *)*v5;
  unint64_t v16 = sub_2347BFA88(a2);
  uint64_t v17 = v14[2];
  BOOL v18 = (v15 & 1) == 0;
  uint64_t v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v20 = v15;
  uint64_t v21 = v14[3];
  if (v21 >= v19 && (a3 & 1) != 0)
  {
LABEL_7:
    BOOL v22 = *v7;
    if (v20)
    {
LABEL_8:
      uint64_t v23 = v22[7];
      uint64_t result = swift_release();
      *(void *)(v23 + 8 * v16) = v28;
      return result;
    }
    goto LABEL_11;
  }
  if (v21 >= v19 && (a3 & 1) == 0)
  {
    a4();
    goto LABEL_7;
  }
  v27();
  unint64_t v25 = sub_2347BFA88(a2);
  if ((v20 & 1) != (v26 & 1))
  {
LABEL_14:
    uint64_t result = sub_2347EF0F0();
    __break(1u);
    return result;
  }
  unint64_t v16 = v25;
  BOOL v22 = *v7;
  if (v20) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a2, v10);
  return sub_2347AC478(v16, (uint64_t)v13, v28, v22);
}

uint64_t sub_2347AA62C(uint64_t a1, uint64_t a2, char a3)
{
  return sub_2347AA46C(a1, a2, a3, (void (*)(void))sub_2347D4ABC, (void (*)(void))sub_2347CD870);
}

uint64_t sub_2347AA658(uint64_t a1, uint64_t a2, char a3)
{
  return sub_2347AA46C(a1, a2, a3, (void (*)(void))sub_2347D4AC8, (void (*)(void))sub_2347CD87C);
}

uint64_t sub_2347AA684(uint64_t a1, char a2, float32x2_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_2347BFC4C(a3);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= result && (a2 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= result && (a2 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_2347D4CAC();
LABEL_7:
    unint64_t v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v17 + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    uint64_t v19 = 8 * v10;
    *(double *)(v16[6] + v19) = *(double *)&a3;
    *(void *)(v16[7] + v19) = a1;
    uint64_t v20 = v16[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (!v21)
    {
      v16[2] = v22;
      return result;
    }
    goto LABEL_14;
  }
  sub_2347CDE98(result, a2 & 1);
  uint64_t result = sub_2347BFC4C(a3);
  if ((v14 & 1) == (v18 & 1))
  {
    unint64_t v10 = result;
    unint64_t v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  __swift_instantiateConcreteTypeFromMangledName(&qword_2687AD2F8);
  uint64_t result = sub_2347EF0F0();
  __break(1u);
  return result;
}

uint64_t sub_2347AA7C0(uint64_t a1, char a2, double a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_2347BFCFC(a1);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= result && (a2 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= result && (a2 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_2347D5000();
LABEL_7:
    unint64_t v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      *(double *)(v16[7] + 8 * v10) = a3;
      return result;
    }
    goto LABEL_11;
  }
  sub_2347CE460(result, a2 & 1);
  uint64_t result = sub_2347BFCFC(a1);
  if ((v14 & 1) != (v17 & 1))
  {
LABEL_17:
    type metadata accessor for CDTTriangle();
    uint64_t result = sub_2347EF0F0();
    __break(1u);
    return result;
  }
  unint64_t v10 = result;
  unint64_t v16 = (void *)*v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:
  v16[(v10 >> 6) + 8] |= 1 << v10;
  uint64_t v18 = 8 * v10;
  *(void *)(v16[6] + v18) = a1;
  *(double *)(v16[7] + v18) = a3;
  uint64_t v19 = v16[2];
  BOOL v20 = __OFADD__(v19, 1);
  uint64_t v21 = v19 + 1;
  if (v20)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v16[2] = v21;

  return swift_retain();
}

uint64_t sub_2347AA914(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_2347BFCB8(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_2347D51A8();
LABEL_7:
    unint64_t v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t result = swift_release();
      *(void *)(v17 + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    uint64_t v19 = 8 * v10;
    *(void *)(v16[6] + v19) = a2;
    *(void *)(v16[7] + v19) = a1;
    uint64_t v20 = v16[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (!v21)
    {
      v16[2] = v22;
      return result;
    }
    goto LABEL_14;
  }
  sub_2347CE640(result, a3 & 1);
  uint64_t result = sub_2347BFCB8(a2);
  if ((v14 & 1) == (v18 & 1))
  {
    unint64_t v10 = result;
    unint64_t v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_2347EF0F0();
  __break(1u);
  return result;
}

uint64_t sub_2347AAA50(char a1, uint64_t a2, char a3, __n128 a4)
{
  uint64_t v5 = (void **)v4;
  __n128 v24 = a4;
  uint64_t v9 = sub_2347ED5C0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  BOOL v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (void *)*v4;
  unint64_t v15 = sub_2347BFA88(a2);
  uint64_t v16 = v13[2];
  BOOL v17 = (v14 & 1) == 0;
  uint64_t result = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v19 = v14;
  uint64_t v20 = v13[3];
  if (v20 >= result && (a3 & 1) != 0)
  {
LABEL_7:
    BOOL v21 = *v5;
    if (v19)
    {
LABEL_8:
      uint64_t v22 = (__n128 *)(v21[7] + 32 * v15);
      *uint64_t v22 = v24;
      v22[1].n128_u8[0] = a1 & 1;
      return result;
    }
    goto LABEL_11;
  }
  if (v20 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_2347D5778();
    goto LABEL_7;
  }
  sub_2347CF00C(result, a3 & 1);
  uint64_t result = sub_2347BFA88(a2);
  if ((v19 & 1) != (v23 & 1))
  {
LABEL_14:
    uint64_t result = sub_2347EF0F0();
    __break(1u);
    return result;
  }
  unint64_t v15 = result;
  BOOL v21 = *v5;
  if (v19) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a2, v9);
  return sub_2347AC2C4(v15, (uint64_t)v12, a1 & 1, v21, v24);
}

uint64_t sub_2347AAC08(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_2347BFCB8(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_2347D5A24();
LABEL_7:
    uint64_t v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v17 + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    uint64_t v19 = 8 * v10;
    *(void *)(v16[6] + v19) = a2;
    *(void *)(v16[7] + v19) = a1;
    uint64_t v20 = v16[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (!v21)
    {
      v16[2] = v22;
      return result;
    }
    goto LABEL_14;
  }
  sub_2347CF450(result, a3 & 1);
  uint64_t result = sub_2347BFCB8(a2);
  if ((v14 & 1) == (v18 & 1))
  {
    unint64_t v10 = result;
    uint64_t v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_2347EF0F0();
  __break(1u);
  return result;
}

uint64_t sub_2347AAD44(uint64_t a1, unsigned __int8 a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_2347BFCB4(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 < result || (a3 & 1) == 0)
  {
    if (v15 < result || (a3 & 1) != 0)
    {
      sub_2347CF710(result, a3 & 1);
      uint64_t result = sub_2347BFCB4(a2);
      if ((v14 & 1) != (v18 & 1))
      {
LABEL_17:
        uint64_t result = sub_2347EF0F0();
        __break(1u);
        return result;
      }
      unint64_t v10 = result;
      uint64_t v16 = (void *)*v4;
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
    uint64_t result = (uint64_t)sub_2347D5BCC();
  }
  uint64_t v16 = (void *)*v4;
  if ((v14 & 1) == 0)
  {
LABEL_13:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(unsigned char *)(v16[6] + v10) = a2;
    uint64_t v19 = v16[7] + 40 * v10;
    long long v20 = *(_OWORD *)a1;
    long long v21 = *(_OWORD *)(a1 + 16);
    *(_DWORD *)(v19 + 32) = *(_DWORD *)(a1 + 32);
    *(_OWORD *)uint64_t v19 = v20;
    *(_OWORD *)(v19 + 16) = v21;
    uint64_t v22 = v16[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (!v23)
    {
      v16[2] = v24;
      return result;
    }
    goto LABEL_16;
  }
LABEL_8:
  uint64_t v17 = v16[7] + 40 * v10;

  return sub_2347B43E4(a1, v17);
}

uint64_t sub_2347AAEB0(uint64_t a1, uint64_t a2, char a3)
{
  return sub_2347AA46C(a1, a2, a3, (void (*)(void))sub_2347D5DB8, (void (*)(void))sub_2347CFD0C);
}

uint64_t sub_2347AAEDC(uint64_t a1, uint64_t a2, char a3)
{
  return sub_2347AA46C(a1, a2, a3, (void (*)(void))sub_2347D5DC4, (void (*)(void))sub_2347CFD18);
}

_OWORD *sub_2347AAF08(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  unint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_2347BFB5C(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_2347D6064();
      goto LABEL_7;
    }
    sub_2347CFD24(v15, a4 & 1);
    unint64_t v21 = sub_2347BFB5C(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      char v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = (_OWORD *)sub_2347EF0F0();
    __break(1u);
    return result;
  }
LABEL_7:
  char v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = (_OWORD *)(v18[7] + 32 * v12);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    return sub_2346C3738(a1, v19);
  }
LABEL_13:
  sub_2347AC530(v12, a2, a3, a1, v18);

  return (_OWORD *)swift_bridgeObjectRetain();
}

uint64_t sub_2347AB05C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = sub_2347ED5C0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  char v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_2347BFA88(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    long long v20 = *v4;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];
      uint64_t v22 = type metadata accessor for ScanItemStrut();
      return sub_2347B437C(a1, v21 + *(void *)(*(void *)(v22 - 8) + 72) * v14, (uint64_t (*)(void))type metadata accessor for ScanItemStrut);
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_2347D624C();
    goto LABEL_7;
  }
  sub_2347D0024(v17, a3 & 1);
  unint64_t v24 = sub_2347BFA88(a2);
  if ((v18 & 1) != (v25 & 1))
  {
LABEL_14:
    uint64_t result = sub_2347EF0F0();
    __break(1u);
    return result;
  }
  unint64_t v14 = v24;
  long long v20 = *v4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_2347AC84C(v14, (uint64_t)v11, a1, v20, (uint64_t (*)(void))type metadata accessor for ScanItemStrut, (uint64_t (*)(void))type metadata accessor for ScanItemStrut);
}

uint64_t sub_2347AB258(uint64_t a1, unsigned __int8 a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_2347BFCB4(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_2347D6280();
LABEL_7:
    BOOL v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      *(void *)(v16[7] + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(unsigned char *)(v16[6] + v10) = a2;
    *(void *)(v16[7] + 8 * v10) = a1;
    uint64_t v18 = v16[2];
    BOOL v19 = __OFADD__(v18, 1);
    uint64_t v20 = v18 + 1;
    if (!v19)
    {
      v16[2] = v20;
      return result;
    }
    goto LABEL_14;
  }
  sub_2347D0058(result, a3 & 1);
  uint64_t result = sub_2347BFCB4(a2);
  if ((v14 & 1) == (v17 & 1))
  {
    unint64_t v10 = result;
    BOOL v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_2347EF0F0();
  __break(1u);
  return result;
}

uint64_t sub_2347AB384(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v28 = a2;
  uint64_t v9 = sub_2347ED5C0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  BOOL v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v13 = (void *)*v4;
  unint64_t v15 = sub_2347BFA88(a3);
  uint64_t v16 = v13[2];
  BOOL v17 = (v14 & 1) == 0;
  uint64_t v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v19 = v14;
  uint64_t v20 = v13[3];
  if (v20 >= v18 && (a4 & 1) != 0)
  {
LABEL_7:
    uint64_t v21 = *v5;
    if (v19)
    {
LABEL_8:
      uint64_t v22 = (uint64_t *)(v21[7] + 16 * v15);
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v24 = v28;
      *uint64_t v22 = a1;
      v22[1] = v24;
      return result;
    }
    goto LABEL_11;
  }
  if (v20 >= v18 && (a4 & 1) == 0)
  {
    sub_2347D6410();
    goto LABEL_7;
  }
  sub_2347D0320(v18, a4 & 1);
  unint64_t v25 = sub_2347BFA88(a3);
  if ((v19 & 1) != (v26 & 1))
  {
LABEL_14:
    uint64_t result = sub_2347EF0F0();
    __break(1u);
    return result;
  }
  unint64_t v15 = v25;
  uint64_t v21 = *v5;
  if (v19) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a3, v9);
  return sub_2347AC5C8(v15, (uint64_t)v12, a1, v28, v21);
}

uint64_t sub_2347AB53C(uint64_t a1, char a2, __n128 a3, __n128 a4)
{
  uint64_t v5 = (void **)v4;
  __n128 v24 = a3;
  __n128 v25 = a4;
  uint64_t v8 = sub_2347ED490();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  BOOL v12 = (void *)*v4;
  unint64_t v14 = sub_2347C0048(a1);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= result && (a2 & 1) != 0)
  {
LABEL_7:
    uint64_t v20 = *v5;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7] + 32 * v14;
      __n128 v22 = v25;
      *(__n128 *)uint64_t v21 = v24;
      *(__n128 *)(v21 + 16) = v22;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= result && (a2 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_2347D6890();
    goto LABEL_7;
  }
  sub_2347D0944(result, a2 & 1);
  uint64_t result = sub_2347C0048(a1);
  if ((v18 & 1) != (v23 & 1))
  {
LABEL_14:
    uint64_t result = sub_2347EF0F0();
    __break(1u);
    return result;
  }
  unint64_t v14 = result;
  uint64_t v20 = *v5;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  return sub_2347AC688(v14, (uint64_t)v11, v20, v24, v25);
}

void sub_2347AB6E8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_2347C01D0(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_2347D6E04();
LABEL_7:
    BOOL v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];

      *(void *)(v17 + 8 * v10) = a1;
      return;
    }
    goto LABEL_11;
  }
  sub_2347D116C(v13, a3 & 1);
  unint64_t v18 = sub_2347C01D0(a2);
  if ((v14 & 1) != (v19 & 1))
  {
LABEL_17:
    type metadata accessor for PixelBufferFormat();
    sub_2347EF0F0();
    __break(1u);
    return;
  }
  unint64_t v10 = v18;
  BOOL v16 = (void *)*v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:
  v16[(v10 >> 6) + 8] |= 1 << v10;
  uint64_t v20 = 8 * v10;
  *(void *)(v16[6] + v20) = a2;
  *(void *)(v16[7] + v20) = a1;
  uint64_t v21 = v16[2];
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v16[2] = v23;

  swift_retain();
}

void sub_2347AB84C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_2347BFB5C(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_2347D6FAC();
LABEL_7:
    unint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];

      *(void *)(v19 + 8 * v12) = a1;
      return;
    }
    goto LABEL_11;
  }
  sub_2347D148C(v15, a4 & 1);
  unint64_t v20 = sub_2347BFB5C(a2, a3);
  if ((v16 & 1) != (v21 & 1))
  {
LABEL_17:
    sub_2347EF0F0();
    __break(1u);
    return;
  }
  unint64_t v12 = v20;
  unint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  BOOL v22 = (uint64_t *)(v18[6] + 16 * v12);
  *BOOL v22 = a2;
  v22[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v23 = v18[2];
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (v24)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v18[2] = v25;

  swift_bridgeObjectRetain();
}

uint64_t sub_2347AB9BC(char a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = sub_2347ED5C0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  char v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_2347BFA88(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= result && (a3 & 1) != 0)
  {
LABEL_7:
    unint64_t v20 = *v4;
    if (v18)
    {
LABEL_8:
      *(unsigned char *)(v20[7] + v14) = a1 & 1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_2347D7314();
    goto LABEL_7;
  }
  sub_2347D1AB0(result, a3 & 1);
  uint64_t result = sub_2347BFA88(a2);
  if ((v18 & 1) != (v21 & 1))
  {
LABEL_14:
    uint64_t result = sub_2347EF0F0();
    __break(1u);
    return result;
  }
  unint64_t v14 = result;
  unint64_t v20 = *v4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_2347AC794(v14, (uint64_t)v11, a1 & 1, v20);
}

uint64_t sub_2347ABB5C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = sub_2347ED5C0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  char v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_2347BFA88(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    unint64_t v20 = *v4;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];
      uint64_t v22 = type metadata accessor for CapturedRoom.Surface(0);
      return sub_2347B437C(a1, v21 + *(void *)(*(void *)(v22 - 8) + 72) * v14, type metadata accessor for CapturedRoom.Surface);
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_2347D75A4();
    goto LABEL_7;
  }
  sub_2347D1ED4(v17, a3 & 1);
  unint64_t v24 = sub_2347BFA88(a2);
  if ((v18 & 1) != (v25 & 1))
  {
LABEL_14:
    uint64_t result = sub_2347EF0F0();
    __break(1u);
    return result;
  }
  unint64_t v14 = v24;
  unint64_t v20 = *v4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_2347AC84C(v14, (uint64_t)v11, a1, v20, type metadata accessor for CapturedRoom.Surface, type metadata accessor for CapturedRoom.Surface);
}

uint64_t sub_2347ABD58(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = sub_2347ED5C0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  char v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_2347BFA88(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    unint64_t v20 = *v4;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];
      uint64_t v22 = type metadata accessor for CapturedRoom.Object(0);
      return sub_2347B437C(a1, v21 + *(void *)(*(void *)(v22 - 8) + 72) * v14, type metadata accessor for CapturedRoom.Object);
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_2347D7944();
    goto LABEL_7;
  }
  sub_2347D23E8(v17, a3 & 1);
  unint64_t v24 = sub_2347BFA88(a2);
  if ((v18 & 1) != (v25 & 1))
  {
LABEL_14:
    uint64_t result = sub_2347EF0F0();
    __break(1u);
    return result;
  }
  unint64_t v14 = v24;
  unint64_t v20 = *v4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_2347AC84C(v14, (uint64_t)v11, a1, v20, type metadata accessor for CapturedRoom.Object, type metadata accessor for CapturedRoom.Object);
}

uint64_t sub_2347ABF54(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_2347BFFDC(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_2347D7C10();
      goto LABEL_7;
    }
    sub_2347D2840(v13, a3 & 1);
    unint64_t v24 = sub_2347BFFDC(a2);
    if ((v14 & 1) == (v25 & 1))
    {
      unint64_t v10 = v24;
      BOOL v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    __swift_instantiateConcreteTypeFromMangledName(&qword_2687ADE40);
    uint64_t result = sub_2347EF0F0();
    __break(1u);
    return result;
  }
LABEL_7:
  BOOL v16 = *v4;
  if (v14)
  {
LABEL_8:
    uint64_t v17 = v16[7];
    uint64_t v18 = sub_2347ED490();
    uint64_t v19 = *(void *)(v18 - 8);
    unint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 40);
    uint64_t v21 = v18;
    uint64_t v22 = v17 + *(void *)(v19 + 72) * v10;
    return v20(v22, a1, v21);
  }
LABEL_13:
  sub_2347AC940(v10, a2, a1, v16);

  return swift_bridgeObjectRetain();
}

uint64_t sub_2347AC0C8(uint64_t a1, char a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_2347BFCB4(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_2347D7EA4();
      goto LABEL_7;
    }
    sub_2347D2BBC(v13, a3 & 1);
    unint64_t v24 = sub_2347BFCB4(a2);
    if ((v14 & 1) == (v25 & 1))
    {
      unint64_t v10 = v24;
      BOOL v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_2347EF0F0();
    __break(1u);
    return result;
  }
LABEL_7:
  BOOL v16 = *v4;
  if (v14)
  {
LABEL_8:
    uint64_t v17 = v16[7];
    uint64_t v18 = sub_2347ED490();
    uint64_t v19 = *(void *)(v18 - 8);
    unint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 40);
    uint64_t v21 = v18;
    uint64_t v22 = v17 + *(void *)(v19 + 72) * v10;
    return v20(v22, a1, v21);
  }
LABEL_13:

  return sub_2347AC9EC(v10, a2, a1, v16);
}

unint64_t sub_2347AC230(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  *(void *)(a5[6] + 8 * result) = a2;
  uint64_t v5 = (void *)(a5[7] + 16 * result);
  *uint64_t v5 = a3;
  v5[1] = a4;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

unint64_t sub_2347AC27C(unint64_t result, uint64_t a2, void *a3, double a4)
{
  a3[(result >> 6) + 8] |= 1 << result;
  uint64_t v4 = 8 * result;
  *(void *)(a3[6] + v4) = a2;
  *(double *)(a3[7] + v4) = a4;
  uint64_t v5 = a3[2];
  BOOL v6 = __OFADD__(v5, 1);
  uint64_t v7 = v5 + 1;
  if (v6) {
    __break(1u);
  }
  else {
    a3[2] = v7;
  }
  return result;
}

uint64_t sub_2347AC2C4(unint64_t a1, uint64_t a2, unsigned __int8 a3, void *a4, __n128 a5)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v9 = a4[6];
  uint64_t v10 = sub_2347ED5C0();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v9 + *(void *)(*(void *)(v10 - 8) + 72) * a1, a2, v10);
  BOOL v12 = (__n128 *)(a4[7] + 32 * a1);
  *BOOL v12 = a5;
  v12[1].n128_u8[0] = a3;
  uint64_t v13 = a4[2];
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    a4[2] = v15;
  }
  return result;
}

unint64_t sub_2347AC394(unint64_t result, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  uint64_t v4 = 8 * result;
  *(void *)(a4[6] + v4) = a2;
  *(void *)(a4[7] + v4) = a3;
  uint64_t v5 = a4[2];
  BOOL v6 = __OFADD__(v5, 1);
  uint64_t v7 = v5 + 1;
  if (v6) {
    __break(1u);
  }
  else {
    a4[2] = v7;
  }
  return result;
}

unint64_t sub_2347AC3DC(unint64_t result, char a2, uint64_t a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  *(unsigned char *)(a4[6] + result) = a2;
  uint64_t v4 = a4[7] + 40 * result;
  long long v5 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)uint64_t v4 = *(_OWORD *)a3;
  *(_OWORD *)(v4 + 16) = v5;
  *(_DWORD *)(v4 + 32) = *(_DWORD *)(a3 + 32);
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

unint64_t sub_2347AC434(unint64_t result, char a2, uint64_t a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  *(unsigned char *)(a4[6] + result) = a2;
  *(void *)(a4[7] + 8 * result) = a3;
  uint64_t v4 = a4[2];
  BOOL v5 = __OFADD__(v4, 1);
  uint64_t v6 = v4 + 1;
  if (v5) {
    __break(1u);
  }
  else {
    a4[2] = v6;
  }
  return result;
}

uint64_t sub_2347AC478(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_2347ED5C0();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  *(void *)(a4[7] + 8 * a1) = a3;
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

_OWORD *sub_2347AC530(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v6 = (void *)(a5[6] + 16 * a1);
  *uint64_t v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_2346C3738(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

uint64_t sub_2347AC59C(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_2347AC84C(a1, a2, a3, a4, (uint64_t (*)(void))type metadata accessor for ScanItemStrut, (uint64_t (*)(void))type metadata accessor for ScanItemStrut);
}

uint64_t sub_2347AC5C8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v10 = a5[6];
  uint64_t v11 = sub_2347ED5C0();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * a1, a2, v11);
  uint64_t v13 = (void *)(a5[7] + 16 * a1);
  *uint64_t v13 = a3;
  v13[1] = a4;
  uint64_t v14 = a5[2];
  BOOL v15 = __OFADD__(v14, 1);
  uint64_t v16 = v14 + 1;
  if (v15) {
    __break(1u);
  }
  else {
    a5[2] = v16;
  }
  return result;
}

uint64_t sub_2347AC688(unint64_t a1, uint64_t a2, void *a3, __n128 a4, __n128 a5)
{
  a3[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a3[6];
  uint64_t v9 = sub_2347ED490();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  uint64_t v11 = (__n128 *)(a3[7] + 32 * a1);
  *uint64_t v11 = a4;
  v11[1] = a5;
  uint64_t v12 = a3[2];
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13) {
    __break(1u);
  }
  else {
    a3[2] = v14;
  }
  return result;
}

unint64_t sub_2347AC74C(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  BOOL v5 = (void *)(a5[6] + 16 * result);
  *BOOL v5 = a2;
  v5[1] = a3;
  *(void *)(a5[7] + 8 * result) = a4;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

uint64_t sub_2347AC794(unint64_t a1, uint64_t a2, char a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_2347ED5C0();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  *(unsigned char *)(a4[7] + a1) = a3;
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

uint64_t sub_2347AC84C(unint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v12 = a4[6];
  uint64_t v13 = sub_2347ED5C0();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v12 + *(void *)(*(void *)(v13 - 8) + 72) * a1, a2, v13);
  uint64_t v14 = a4[7];
  uint64_t v15 = a5(0);
  uint64_t result = sub_2347B4314(a3, v14 + *(void *)(*(void *)(v15 - 8) + 72) * a1, a6);
  uint64_t v17 = a4[2];
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18) {
    __break(1u);
  }
  else {
    a4[2] = v19;
  }
  return result;
}

uint64_t sub_2347AC940(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t v7 = a4[7];
  uint64_t v8 = sub_2347ED490();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v7 + *(void *)(*(void *)(v8 - 8) + 72) * a1, a3, v8);
  uint64_t v10 = a4[2];
  BOOL v11 = __OFADD__(v10, 1);
  uint64_t v12 = v10 + 1;
  if (v11) {
    __break(1u);
  }
  else {
    a4[2] = v12;
  }
  return result;
}

uint64_t sub_2347AC9EC(unint64_t a1, char a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(unsigned char *)(a4[6] + a1) = a2;
  uint64_t v7 = a4[7];
  uint64_t v8 = sub_2347ED490();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v7 + *(void *)(*(void *)(v8 - 8) + 72) * a1, a3, v8);
  uint64_t v10 = a4[2];
  BOOL v11 = __OFADD__(v10, 1);
  uint64_t v12 = v10 + 1;
  if (v11) {
    __break(1u);
  }
  else {
    a4[2] = v12;
  }
  return result;
}

uint64_t (*sub_2347ACA98(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_2347ACC84(v6, a2, a3);
  return sub_2347ACB00;
}

uint64_t (*sub_2347ACB04(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_2347ACD54(v6, a2, a3);
  return sub_2347ACB00;
}

uint64_t (*sub_2347ACB6C(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_2347ACDD4(v6, a2, a3);
  return sub_2347ACB00;
}

uint64_t (*sub_2347ACBD4(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_2347ACE54(v6, a2, a3);
  return sub_2347ACB00;
}

void sub_2347ACC3C(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

uint64_t (*sub_2347ACC84(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  objc_super v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = MEMORY[0x237DC6CF0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_retain();
LABEL_5:
    uint64_t *v3 = v4;
    return sub_2347ACD04;
  }
  __break(1u);
  return result;
}

uint64_t sub_2347ACD04()
{
  return swift_release();
}

uint64_t (*sub_2347ACD0C(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(a3 + 16) > a2)
  {
    *(_DWORD *)uint64_t result = *(_DWORD *)(a3 + 4 * a2 + 32);
    return nullsub_1;
  }
  __break(1u);
  return result;
}

void (*sub_2347ACD54(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  objc_super v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x237DC6CF0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)objc_super v3 = v4;
    return destroy for CVPixelBufferCodableBox;
  }
  __break(1u);
  return result;
}

uint64_t (*sub_2347ACDD4(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  objc_super v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = MEMORY[0x237DC6CF0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_retain();
LABEL_5:
    uint64_t *v3 = v4;
    return sub_2347B4578;
  }
  __break(1u);
  return result;
}

uint64_t (*sub_2347ACE54(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  objc_super v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x237DC6CF0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)objc_super v3 = v4;
    return j__s8RoomPlan23CVPixelBufferCodableBoxVwxx;
  }
  __break(1u);
  return result;
}

unint64_t sub_2347ACED4(void *a1)
{
  uint64_t v1 = a1[2];
  if (!v1) {
    return MEMORY[0x263F8EE80];
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2687AECA0);
  objc_super v3 = (void *)sub_2347EEF00();
  float32x2_t v4 = (float32x2_t)a1[4];
  uint64_t v5 = a1[5];
  unint64_t result = sub_2347BFC4C(v4);
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  uint64_t v8 = a1 + 7;
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(float32x2_t *)(v3[6] + v9) = v4;
    *(void *)(v3[7] + v9) = v5;
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      break;
    }
    v3[2] = v12;
    if (!--v1) {
      goto LABEL_8;
    }
    uint64_t v13 = v8 + 2;
    float32x2_t v4 = (float32x2_t)*(v8 - 1);
    uint64_t v14 = *v8;
    swift_bridgeObjectRetain();
    unint64_t result = sub_2347BFC4C(v4);
    uint64_t v8 = v13;
    uint64_t v5 = v14;
    if (v15) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_2347ACFE4(void *a1)
{
  uint64_t v1 = a1[2];
  if (!v1) {
    return MEMORY[0x263F8EE80];
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2687AEC90);
  objc_super v3 = (void *)sub_2347EEF00();
  uint64_t v5 = a1[4];
  uint64_t v4 = a1[5];
  unint64_t result = sub_2347BFCB8(v5);
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  uint64_t v8 = a1 + 7;
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v3[6] + v9) = v5;
    *(void *)(v3[7] + v9) = v4;
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      break;
    }
    v3[2] = v12;
    if (!--v1) {
      goto LABEL_8;
    }
    uint64_t v13 = v8 + 2;
    uint64_t v5 = *(v8 - 1);
    uint64_t v14 = *v8;
    swift_bridgeObjectRetain();
    unint64_t result = sub_2347BFCB8(v5);
    uint64_t v8 = v13;
    uint64_t v4 = v14;
    if (v15) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_2347AD0E4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2687AEC88);
    objc_super v3 = (void *)sub_2347EEF00();
    for (uint64_t i = (char *)(a1 + 40); ; i += 16)
    {
      int32x2_t v5 = *(int32x2_t *)(i - 8);
      char v6 = *i;
      unint64_t result = sub_2347BFDC0(v5);
      if (v8) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(int32x2_t *)(v3[6] + 8 * result) = v5;
      *(unsigned char *)(v3[7] + result) = v6;
      uint64_t v9 = v3[2];
      BOOL v10 = __OFADD__(v9, 1);
      uint64_t v11 = v9 + 1;
      if (v10) {
        goto LABEL_10;
      }
      v3[2] = v11;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE80];
  }
  return result;
}

unint64_t sub_2347AD1BC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE80];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2687AEC38);
  objc_super v3 = (void *)sub_2347EEF00();
  unsigned __int8 v4 = *(unsigned char *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  char v6 = *(unsigned char *)(a1 + 48);
  uint64_t v7 = *(void *)(a1 + 56);
  uint64_t v8 = *(void *)(a1 + 64);
  int v9 = *(_DWORD *)(a1 + 72);
  unint64_t result = sub_2347BFCB4(v4);
  if (v11)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  uint64_t v12 = (_DWORD *)(a1 + 120);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v3[6] + result) = v4;
    uint64_t v13 = v3[7] + 40 * result;
    *(void *)uint64_t v13 = v5;
    *(unsigned char *)(v13 + 8) = v6;
    *(void *)(v13 + 16) = v7;
    *(void *)(v13 + 24) = v8;
    *(_DWORD *)(v13 + 32) = v9;
    uint64_t v14 = v3[2];
    BOOL v15 = __OFADD__(v14, 1);
    uint64_t v16 = v14 + 1;
    if (v15) {
      break;
    }
    v3[2] = v16;
    if (!--v1) {
      goto LABEL_8;
    }
    uint64_t v17 = v12 + 12;
    unsigned __int8 v4 = *((unsigned char *)v12 - 40);
    uint64_t v21 = *((void *)v12 - 4);
    char v6 = *((unsigned char *)v12 - 24);
    uint64_t v19 = *((void *)v12 - 2);
    uint64_t v18 = *((void *)v12 - 1);
    int v9 = *v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_2347BFCB4(v4);
    uint64_t v12 = v17;
    uint64_t v8 = v18;
    uint64_t v7 = v19;
    uint64_t v5 = v21;
    if (v20) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2347AD338(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2687ACC78);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v42 = (uint64_t)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_2687AEBA8);
  MEMORY[0x270FA5388](v45);
  uint64_t v50 = (uint64_t)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v44 = (char *)&v39 - v8;
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v40 = a1 + 64;
  uint64_t v10 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & v9;
  uint64_t v43 = (uint64_t *)(a2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_allUuidToSurfaces);
  int64_t v41 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v46 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v14 = 0;
  while (1)
  {
    if (v12)
    {
      uint64_t v48 = (v12 - 1) & v12;
      int64_t v49 = v14;
      unint64_t v17 = __clz(__rbit64(v12)) | (v14 << 6);
      goto LABEL_24;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v41) {
      return swift_release();
    }
    unint64_t v19 = *(void *)(v40 + 8 * v18);
    int64_t v20 = v14 + 1;
    if (!v19)
    {
      int64_t v20 = v14 + 2;
      if (v14 + 2 >= v41) {
        return swift_release();
      }
      unint64_t v19 = *(void *)(v40 + 8 * v20);
      if (!v19)
      {
        int64_t v20 = v14 + 3;
        if (v14 + 3 >= v41) {
          return swift_release();
        }
        unint64_t v19 = *(void *)(v40 + 8 * v20);
        if (!v19)
        {
          int64_t v20 = v14 + 4;
          if (v14 + 4 >= v41) {
            return swift_release();
          }
          unint64_t v19 = *(void *)(v40 + 8 * v20);
          if (!v19) {
            break;
          }
        }
      }
    }
LABEL_23:
    uint64_t v48 = (v19 - 1) & v19;
    int64_t v49 = v20;
    unint64_t v17 = __clz(__rbit64(v19)) + (v20 << 6);
LABEL_24:
    uint64_t v22 = v46;
    uint64_t v23 = *(void *)(v46 + 48);
    uint64_t v24 = sub_2347ED5C0();
    uint64_t v47 = *(void *)(v24 - 8);
    uint64_t v25 = *(void *)(v47 + 72);
    uint64_t v26 = (uint64_t)v44;
    (*(void (**)(char *, unint64_t, uint64_t))(v47 + 16))(v44, v23 + v25 * v17, v24);
    uint64_t v27 = *(void *)(v22 + 56);
    uint64_t v28 = type metadata accessor for CapturedRoom.Surface(0);
    uint64_t v29 = *(void *)(v28 - 8);
    uint64_t v30 = *(void *)(v29 + 72);
    sub_2347B3E20(v27 + v30 * v17, v26 + *(int *)(v45 + 48), type metadata accessor for CapturedRoom.Surface);
    uint64_t v31 = v50;
    sub_2346B1970(v26, v50, &qword_2687AEBA8);
    unint64_t v32 = v43;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    unint64_t v33 = sub_2347BFA88(v31);
    LOBYTE(v31) = v34;
    swift_bridgeObjectRelease();
    if (v31)
    {
      uint64_t v35 = v47;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v37 = *v32;
      uint64_t v51 = *v32;
      *unint64_t v32 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_2347D75A4();
        uint64_t v37 = v51;
      }
      (*(void (**)(unint64_t, uint64_t))(v35 + 8))(*(void *)(v37 + 48) + v33 * v25, v24);
      uint64_t v38 = v51;
      uint64_t v16 = v42;
      sub_2347B4314(*(void *)(v51 + 56) + v33 * v30, v42, type metadata accessor for CapturedRoom.Surface);
      sub_2347D3DF8(v33, v38);
      *unint64_t v32 = v38;
      swift_bridgeObjectRelease();
      uint64_t v15 = 0;
    }
    else
    {
      uint64_t v15 = 1;
      uint64_t v16 = v42;
    }
    unint64_t v12 = v48;
    int64_t v14 = v49;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 56))(v16, v15, 1, v28);
    sub_2346A7C30(v16, &qword_2687ACC78);
    swift_endAccess();
    uint64_t result = sub_2346A7C30(v50, &qword_2687AEBA8);
  }
  uint64_t v21 = v14 + 5;
  if (v14 + 5 >= v41) {
    return swift_release();
  }
  unint64_t v19 = *(void *)(v40 + 8 * v21);
  if (v19)
  {
    int64_t v20 = v14 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v20 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v20 >= v41) {
      return swift_release();
    }
    unint64_t v19 = *(void *)(v40 + 8 * v20);
    ++v21;
    if (v19) {
      goto LABEL_23;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_2347AD800(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CapturedRoom.Surface(0);
  uint64_t v63 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_2687AEBA8);
  MEMORY[0x270FA5388](v62);
  uint64_t v73 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v74 = (uint64_t)&v57 - v9;
  MEMORY[0x270FA5388](v10);
  uint64_t v72 = (uint64_t)&v57 - v11;
  MEMORY[0x270FA5388](v12);
  float32x4_t v61 = (char *)&v57 - v13;
  uint64_t v14 = *(void *)(a1 + 64);
  uint64_t v58 = a1 + 64;
  uint64_t v15 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v14;
  uint64_t v71 = (void *)(a2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_allUuidToSurfaces);
  int64_t v59 = (unint64_t)(v15 + 63) >> 6;
  uint64_t v64 = a1;
  swift_bridgeObjectRetain();
  int64_t v18 = 0;
  float32x4_t v60 = v6;
  while (1)
  {
    if (v17)
    {
      uint64_t v68 = (v17 - 1) & v17;
      int64_t v69 = v18;
      unint64_t v20 = __clz(__rbit64(v17)) | (v18 << 6);
    }
    else
    {
      int64_t v21 = v18 + 1;
      if (__OFADD__(v18, 1)) {
        goto LABEL_36;
      }
      if (v21 >= v59) {
        return swift_release();
      }
      unint64_t v22 = *(void *)(v58 + 8 * v21);
      int64_t v23 = v18 + 1;
      if (!v22)
      {
        int64_t v23 = v18 + 2;
        if (v18 + 2 >= v59) {
          return swift_release();
        }
        unint64_t v22 = *(void *)(v58 + 8 * v23);
        if (!v22)
        {
          int64_t v23 = v18 + 3;
          if (v18 + 3 >= v59) {
            return swift_release();
          }
          unint64_t v22 = *(void *)(v58 + 8 * v23);
          if (!v22)
          {
            int64_t v23 = v18 + 4;
            if (v18 + 4 >= v59) {
              return swift_release();
            }
            unint64_t v22 = *(void *)(v58 + 8 * v23);
            if (!v22)
            {
              uint64_t v24 = v18 + 5;
              if (v18 + 5 >= v59) {
                return swift_release();
              }
              unint64_t v22 = *(void *)(v58 + 8 * v24);
              if (!v22)
              {
                while (1)
                {
                  int64_t v23 = v24 + 1;
                  if (__OFADD__(v24, 1)) {
                    goto LABEL_37;
                  }
                  if (v23 >= v59) {
                    return swift_release();
                  }
                  unint64_t v22 = *(void *)(v58 + 8 * v23);
                  ++v24;
                  if (v22) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v23 = v18 + 5;
            }
          }
        }
      }
LABEL_23:
      uint64_t v68 = (v22 - 1) & v22;
      int64_t v69 = v23;
      unint64_t v20 = __clz(__rbit64(v22)) + (v23 << 6);
    }
    uint64_t v25 = v64;
    uint64_t v26 = *(void *)(v64 + 48);
    uint64_t v27 = sub_2347ED5C0();
    unint64_t v67 = *(void **)(v27 - 8);
    uint64_t v65 = v67[9];
    uint64_t v28 = (void (*)(void))v67[2];
    uint64_t v29 = v61;
    ((void (*)(char *, unint64_t, uint64_t))v28)(v61, v26 + v65 * v20, v27);
    uint64_t v30 = *(void *)(v25 + 56);
    uint64_t v31 = v62;
    uint64_t v70 = *(void *)(v63 + 72);
    sub_2347B3E20(v30 + v70 * v20, (uint64_t)&v29[*(int *)(v62 + 48)], type metadata accessor for CapturedRoom.Surface);
    uint64_t v32 = (uint64_t)v29;
    uint64_t v33 = v72;
    sub_2346B1970(v32, v72, &qword_2687AEBA8);
    uint64_t v34 = *(int *)(v31 + 48);
    uint64_t v35 = v74;
    uint64_t v36 = v74 + v34;
    uint64_t v37 = v33 + v34;
    ((void (*)(uint64_t, uint64_t, uint64_t))v28)(v74, v33, v27);
    uint64_t v66 = v36;
    sub_2347B3E20(v37, v36, type metadata accessor for CapturedRoom.Surface);
    uint64_t v38 = (uint64_t)&v73[*(int *)(v31 + 48)];
    v28();
    sub_2347B3E20(v37, v38, type metadata accessor for CapturedRoom.Surface);
    uint64_t v39 = v71;
    swift_beginAccess();
    uint64_t v40 = (uint64_t)v60;
    sub_2347B4314(v38, (uint64_t)v60, type metadata accessor for CapturedRoom.Surface);
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v75 = (void *)*v39;
    uint64_t v42 = v75;
    *uint64_t v39 = 0x8000000000000000;
    unint64_t v44 = sub_2347BFA88(v35);
    uint64_t v45 = v42[2];
    BOOL v46 = (v43 & 1) == 0;
    uint64_t v47 = v45 + v46;
    if (__OFADD__(v45, v46)) {
      break;
    }
    char v48 = v43;
    if (v42[3] >= v47)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_2347D75A4();
      }
    }
    else
    {
      sub_2347D1ED4(v47, isUniquelyReferenced_nonNull_native);
      unint64_t v49 = sub_2347BFA88(v74);
      if ((v48 & 1) != (v50 & 1)) {
        goto LABEL_38;
      }
      unint64_t v44 = v49;
    }
    uint64_t v51 = v70;
    uint64_t v52 = v75;
    if (v48)
    {
      sub_2347B437C(v40, v75[7] + v44 * v70, type metadata accessor for CapturedRoom.Surface);
    }
    else
    {
      v75[(v44 >> 6) + 8] |= 1 << v44;
      ((void (*)(unint64_t, uint64_t, uint64_t))v28)(v52[6] + v44 * v65, v74, v27);
      sub_2347B4314(v40, v52[7] + v44 * v51, type metadata accessor for CapturedRoom.Surface);
      uint64_t v53 = v52[2];
      BOOL v54 = __OFADD__(v53, 1);
      uint64_t v55 = v53 + 1;
      if (v54) {
        goto LABEL_35;
      }
      v52[2] = v55;
      uint64_t v52 = v75;
    }
    void *v71 = v52;
    swift_bridgeObjectRelease();
    unint64_t v19 = (void (*)(uint64_t, uint64_t))v67[1];
    v19(v74, v27);
    swift_endAccess();
    v19((uint64_t)v73, v27);
    sub_2347B3E88(v66, type metadata accessor for CapturedRoom.Surface);
    sub_2346A7C30(v72, &qword_2687AEBA8);
    unint64_t v17 = v68;
    int64_t v18 = v69;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  uint64_t result = sub_2347EF0F0();
  __break(1u);
  return result;
}

uint64_t sub_2347ADE38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2687AE1D0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v42 = (uint64_t)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_2687AEB88);
  MEMORY[0x270FA5388](v45);
  uint64_t v50 = (uint64_t)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  unint64_t v44 = (char *)&v39 - v8;
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v40 = a1 + 64;
  uint64_t v10 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & v9;
  char v43 = (uint64_t *)(a2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_allUuidToObjects);
  int64_t v41 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v46 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v14 = 0;
  while (1)
  {
    if (v12)
    {
      uint64_t v48 = (v12 - 1) & v12;
      int64_t v49 = v14;
      unint64_t v17 = __clz(__rbit64(v12)) | (v14 << 6);
      goto LABEL_24;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v41) {
      return swift_release();
    }
    unint64_t v19 = *(void *)(v40 + 8 * v18);
    int64_t v20 = v14 + 1;
    if (!v19)
    {
      int64_t v20 = v14 + 2;
      if (v14 + 2 >= v41) {
        return swift_release();
      }
      unint64_t v19 = *(void *)(v40 + 8 * v20);
      if (!v19)
      {
        int64_t v20 = v14 + 3;
        if (v14 + 3 >= v41) {
          return swift_release();
        }
        unint64_t v19 = *(void *)(v40 + 8 * v20);
        if (!v19)
        {
          int64_t v20 = v14 + 4;
          if (v14 + 4 >= v41) {
            return swift_release();
          }
          unint64_t v19 = *(void *)(v40 + 8 * v20);
          if (!v19) {
            break;
          }
        }
      }
    }
LABEL_23:
    uint64_t v48 = (v19 - 1) & v19;
    int64_t v49 = v20;
    unint64_t v17 = __clz(__rbit64(v19)) + (v20 << 6);
LABEL_24:
    uint64_t v22 = v46;
    uint64_t v23 = *(void *)(v46 + 48);
    uint64_t v24 = sub_2347ED5C0();
    uint64_t v47 = *(void *)(v24 - 8);
    uint64_t v25 = *(void *)(v47 + 72);
    uint64_t v26 = (uint64_t)v44;
    (*(void (**)(char *, unint64_t, uint64_t))(v47 + 16))(v44, v23 + v25 * v17, v24);
    uint64_t v27 = *(void *)(v22 + 56);
    uint64_t v28 = type metadata accessor for CapturedRoom.Object(0);
    uint64_t v29 = *(void *)(v28 - 8);
    uint64_t v30 = *(void *)(v29 + 72);
    sub_2347B3E20(v27 + v30 * v17, v26 + *(int *)(v45 + 48), type metadata accessor for CapturedRoom.Object);
    uint64_t v31 = v50;
    sub_2346B1970(v26, v50, &qword_2687AEB88);
    uint64_t v32 = v43;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    unint64_t v33 = sub_2347BFA88(v31);
    LOBYTE(v31) = v34;
    swift_bridgeObjectRelease();
    if (v31)
    {
      uint64_t v35 = v47;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v37 = *v32;
      uint64_t v51 = *v32;
      *uint64_t v32 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_2347D7944();
        uint64_t v37 = v51;
      }
      (*(void (**)(unint64_t, uint64_t))(v35 + 8))(*(void *)(v37 + 48) + v33 * v25, v24);
      uint64_t v38 = v51;
      uint64_t v16 = v42;
      sub_2347B4314(*(void *)(v51 + 56) + v33 * v30, v42, type metadata accessor for CapturedRoom.Object);
      sub_2347D4164(v33, v38);
      *uint64_t v32 = v38;
      swift_bridgeObjectRelease();
      uint64_t v15 = 0;
    }
    else
    {
      uint64_t v15 = 1;
      uint64_t v16 = v42;
    }
    unint64_t v12 = v48;
    int64_t v14 = v49;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 56))(v16, v15, 1, v28);
    sub_2346A7C30(v16, (uint64_t *)&unk_2687AE1D0);
    swift_endAccess();
    uint64_t result = sub_2346A7C30(v50, &qword_2687AEB88);
  }
  uint64_t v21 = v14 + 5;
  if (v14 + 5 >= v41) {
    return swift_release();
  }
  unint64_t v19 = *(void *)(v40 + 8 * v21);
  if (v19)
  {
    int64_t v20 = v14 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v20 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v20 >= v41) {
      return swift_release();
    }
    unint64_t v19 = *(void *)(v40 + 8 * v20);
    ++v21;
    if (v19) {
      goto LABEL_23;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_2347AE300(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CapturedRoom.Object(0);
  uint64_t v63 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_2687AEB88);
  MEMORY[0x270FA5388](v62);
  uint64_t v73 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v74 = (uint64_t)&v57 - v9;
  MEMORY[0x270FA5388](v10);
  uint64_t v72 = (uint64_t)&v57 - v11;
  MEMORY[0x270FA5388](v12);
  float32x4_t v61 = (char *)&v57 - v13;
  uint64_t v14 = *(void *)(a1 + 64);
  uint64_t v58 = a1 + 64;
  uint64_t v15 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v14;
  uint64_t v71 = (void *)(a2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_allUuidToObjects);
  int64_t v59 = (unint64_t)(v15 + 63) >> 6;
  uint64_t v64 = a1;
  swift_bridgeObjectRetain();
  int64_t v18 = 0;
  float32x4_t v60 = v6;
  while (1)
  {
    if (v17)
    {
      uint64_t v68 = (v17 - 1) & v17;
      int64_t v69 = v18;
      unint64_t v20 = __clz(__rbit64(v17)) | (v18 << 6);
    }
    else
    {
      int64_t v21 = v18 + 1;
      if (__OFADD__(v18, 1)) {
        goto LABEL_36;
      }
      if (v21 >= v59) {
        return swift_release();
      }
      unint64_t v22 = *(void *)(v58 + 8 * v21);
      int64_t v23 = v18 + 1;
      if (!v22)
      {
        int64_t v23 = v18 + 2;
        if (v18 + 2 >= v59) {
          return swift_release();
        }
        unint64_t v22 = *(void *)(v58 + 8 * v23);
        if (!v22)
        {
          int64_t v23 = v18 + 3;
          if (v18 + 3 >= v59) {
            return swift_release();
          }
          unint64_t v22 = *(void *)(v58 + 8 * v23);
          if (!v22)
          {
            int64_t v23 = v18 + 4;
            if (v18 + 4 >= v59) {
              return swift_release();
            }
            unint64_t v22 = *(void *)(v58 + 8 * v23);
            if (!v22)
            {
              uint64_t v24 = v18 + 5;
              if (v18 + 5 >= v59) {
                return swift_release();
              }
              unint64_t v22 = *(void *)(v58 + 8 * v24);
              if (!v22)
              {
                while (1)
                {
                  int64_t v23 = v24 + 1;
                  if (__OFADD__(v24, 1)) {
                    goto LABEL_37;
                  }
                  if (v23 >= v59) {
                    return swift_release();
                  }
                  unint64_t v22 = *(void *)(v58 + 8 * v23);
                  ++v24;
                  if (v22) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v23 = v18 + 5;
            }
          }
        }
      }
LABEL_23:
      uint64_t v68 = (v22 - 1) & v22;
      int64_t v69 = v23;
      unint64_t v20 = __clz(__rbit64(v22)) + (v23 << 6);
    }
    uint64_t v25 = v64;
    uint64_t v26 = *(void *)(v64 + 48);
    uint64_t v27 = sub_2347ED5C0();
    unint64_t v67 = *(void **)(v27 - 8);
    uint64_t v65 = v67[9];
    uint64_t v28 = (void (*)(void))v67[2];
    uint64_t v29 = v61;
    ((void (*)(char *, unint64_t, uint64_t))v28)(v61, v26 + v65 * v20, v27);
    uint64_t v30 = *(void *)(v25 + 56);
    uint64_t v31 = v62;
    uint64_t v70 = *(void *)(v63 + 72);
    sub_2347B3E20(v30 + v70 * v20, (uint64_t)&v29[*(int *)(v62 + 48)], type metadata accessor for CapturedRoom.Object);
    uint64_t v32 = (uint64_t)v29;
    uint64_t v33 = v72;
    sub_2346B1970(v32, v72, &qword_2687AEB88);
    uint64_t v34 = *(int *)(v31 + 48);
    uint64_t v35 = v74;
    uint64_t v36 = v74 + v34;
    uint64_t v37 = v33 + v34;
    ((void (*)(uint64_t, uint64_t, uint64_t))v28)(v74, v33, v27);
    uint64_t v66 = v36;
    sub_2347B3E20(v37, v36, type metadata accessor for CapturedRoom.Object);
    uint64_t v38 = (uint64_t)&v73[*(int *)(v31 + 48)];
    v28();
    sub_2347B3E20(v37, v38, type metadata accessor for CapturedRoom.Object);
    uint64_t v39 = v71;
    swift_beginAccess();
    uint64_t v40 = (uint64_t)v60;
    sub_2347B4314(v38, (uint64_t)v60, type metadata accessor for CapturedRoom.Object);
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v75 = (void *)*v39;
    uint64_t v42 = v75;
    *uint64_t v39 = 0x8000000000000000;
    unint64_t v44 = sub_2347BFA88(v35);
    uint64_t v45 = v42[2];
    BOOL v46 = (v43 & 1) == 0;
    uint64_t v47 = v45 + v46;
    if (__OFADD__(v45, v46)) {
      break;
    }
    char v48 = v43;
    if (v42[3] >= v47)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_2347D7944();
      }
    }
    else
    {
      sub_2347D23E8(v47, isUniquelyReferenced_nonNull_native);
      unint64_t v49 = sub_2347BFA88(v74);
      if ((v48 & 1) != (v50 & 1)) {
        goto LABEL_38;
      }
      unint64_t v44 = v49;
    }
    uint64_t v51 = v70;
    uint64_t v52 = v75;
    if (v48)
    {
      sub_2347B437C(v40, v75[7] + v44 * v70, type metadata accessor for CapturedRoom.Object);
    }
    else
    {
      v75[(v44 >> 6) + 8] |= 1 << v44;
      ((void (*)(unint64_t, uint64_t, uint64_t))v28)(v52[6] + v44 * v65, v74, v27);
      sub_2347B4314(v40, v52[7] + v44 * v51, type metadata accessor for CapturedRoom.Object);
      uint64_t v53 = v52[2];
      BOOL v54 = __OFADD__(v53, 1);
      uint64_t v55 = v53 + 1;
      if (v54) {
        goto LABEL_35;
      }
      v52[2] = v55;
      uint64_t v52 = v75;
    }
    void *v71 = v52;
    swift_bridgeObjectRelease();
    unint64_t v19 = (void (*)(uint64_t, uint64_t))v67[1];
    v19(v74, v27);
    swift_endAccess();
    v19((uint64_t)v73, v27);
    sub_2347B3E88(v66, type metadata accessor for CapturedRoom.Object);
    sub_2346A7C30(v72, &qword_2687AEB88);
    unint64_t v17 = v68;
    int64_t v18 = v69;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  uint64_t result = sub_2347EF0F0();
  __break(1u);
  return result;
}

unint64_t sub_2347AE938(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2687AEC58);
    objc_super v3 = (void *)sub_2347EEF00();
    for (uint64_t i = (long long *)(a1 + 48); ; i += 2)
    {
      float32x2_t v5 = *(float32x2_t *)(i - 1);
      long long v11 = *i;
      unint64_t result = sub_2347BFC4C(v5);
      if (v7) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(float32x2_t *)(v3[6] + 8 * result) = v5;
      *(_OWORD *)(v3[7] + 16 * result) = v11;
      uint64_t v8 = v3[2];
      BOOL v9 = __OFADD__(v8, 1);
      uint64_t v10 = v8 + 1;
      if (v9) {
        goto LABEL_10;
      }
      v3[2] = v10;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE80];
  }
  return result;
}

uint64_t sub_2347AEA20(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v38 = a1;
  uint64_t v37 = sub_2347EE9F0();
  uint64_t v39 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  uint64_t v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_2347EE9D0();
  MEMORY[0x270FA5388](v5);
  uint64_t v6 = sub_2347EE410();
  MEMORY[0x270FA5388](v6 - 8);
  *(unsigned char *)(v1 + 16) = 0;
  *(void *)(v1 + 32) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v1 + 48) = 0;
  swift_unknownObjectWeakInit();
  *(_WORD *)(v1 + 64) = 1;
  uint64_t v7 = v1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_recordFileUrl;
  uint64_t v8 = sub_2347ED490();
  BOOL v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);
  v9(v7, 1, 1, v8);
  v9(v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_replayFileUrl, 1, 1, v8);
  *(void *)(v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_spiReplayDelegate + 8) = 0;
  swift_unknownObjectWeakInit();
  uint64_t v10 = (void *)(v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_loggingDirectory);
  void *v10 = 0;
  v10[1] = 0;
  *(void *)(v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_debugDelegate + 8) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_internalDelegate + 8) = 0;
  swift_unknownObjectWeakInit();
  sub_2347EE360();
  *(unsigned char *)(v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_enableLiveDump) = 0;
  *(void *)(v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession____lazy_storage___iuLogManager) = 0;
  *(unsigned char *)(v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_runActive) = 0;
  *(unsigned char *)(v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_runAllowed) = 1;
  uint64_t v11 = v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_configuration;
  *(void *)uint64_t v11 = 0x100010101010101;
  *(unsigned char *)(v11 + 8) = 1;
  *(void *)(v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_arWorldTrackingConfiguration) = 0;
  *(void *)(v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_arRunOption) = 8;
  *(void *)(v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_arRecordingConfig) = 0;
  *(void *)(v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_currentArConfiguration) = 0;
  uint64_t v12 = OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_keyframes;
  uint64_t v13 = MEMORY[0x263F8EE78];
  *(void *)(v2 + v12) = sub_23479988C(MEMORY[0x263F8EE78]);
  uint64_t v14 = (uint64_t *)(v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_floorPlanModel);
  long long v15 = *MEMORY[0x263EF89A8];
  long long v35 = *(_OWORD *)(MEMORY[0x263EF89A8] + 16);
  long long v36 = v15;
  long long v16 = *(_OWORD *)(MEMORY[0x263EF89A8] + 32);
  long long v33 = *(_OWORD *)(MEMORY[0x263EF89A8] + 48);
  long long v34 = v16;
  id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F642D8]), sel_init);
  int64_t v18 = (int *)type metadata accessor for CapturedRoom(0);
  uint64_t v19 = v18[12];
  *(uint64_t *)((char *)v14 + v19) = 0;
  *(uint64_t *)((char *)v14 + v18[13]) = 2;
  uint64_t *v14 = v13;
  v14[1] = v13;
  v14[2] = v13;
  v14[3] = v13;
  v14[4] = v13;
  v14[5] = v13;
  *(uint64_t *)((char *)v14 + v18[14]) = v13;
  *(uint64_t *)((char *)v14 + v18[15]) = (uint64_t)v17;
  sub_2347ED5B0();
  *(uint64_t *)((char *)v14 + v18[11]) = v13;
  *(uint64_t *)((char *)v14 + v19) = 0;
  unint64_t v20 = (_OWORD *)((char *)v14 + v18[16]);
  long long v21 = v35;
  *unint64_t v20 = v36;
  v20[1] = v21;
  long long v22 = v33;
  v20[2] = v34;
  v20[3] = v22;
  uint64_t v23 = OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_allUuidToSurfaces;
  *(void *)(v2 + v23) = sub_234799A80(v13, (uint64_t *)&unk_2687AECD0, (uint64_t *)&unk_2687AEF60, type metadata accessor for CapturedRoom.Surface, type metadata accessor for CapturedRoom.Surface);
  uint64_t v24 = OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_allUuidToObjects;
  *(void *)(v2 + v24) = sub_234799A80(v13, (uint64_t *)&unk_2687AECC0, (uint64_t *)&unk_2687AEF50, type metadata accessor for CapturedRoom.Object, type metadata accessor for CapturedRoom.Object);
  *(void *)(v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_floorPlanGenerator) = 0;
  *(void *)(v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_okObjDet) = 0;
  *(void *)(v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_detectedObjects) = v13;
  *(unsigned char *)(v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_objectDetectionEnabled) = 0;
  *(void *)(v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_potentiallWalls) = v13;
  *(void *)(v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_addedPotentialWalls) = v13;
  *(void *)(v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_removedPotentialWalls) = v13;
  *(void *)&long long v36 = OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_queue;
  sub_2346A9D9C(0, (unint64_t *)&qword_2687AD2B0);
  sub_2347EE3F0();
  uint64_t v40 = v13;
  *(void *)&long long v34 = sub_2347B41B4((unint64_t *)&qword_2687AE910, MEMORY[0x263F8F0F8]);
  *(void *)&long long v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2687AD2C0);
  *(void *)&long long v35 = sub_234723288((unint64_t *)&qword_2687AE920, (uint64_t *)&unk_2687AD2C0);
  sub_2347EEC30();
  uint64_t v25 = *MEMORY[0x263F8F130];
  uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t))(v39 + 104);
  v39 += 104;
  uint64_t v27 = v37;
  v26(v4, v25, v37);
  *(void *)(v2 + v36) = sub_2347EEA20();
  *(void *)&long long v36 = OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_saveFileQueue;
  sub_2347EE400();
  uint64_t v40 = MEMORY[0x263F8EE78];
  uint64_t v28 = v38;
  sub_2347EEC30();
  v26(v4, v25, v27);
  *(void *)(v2 + v36) = sub_2347EEA20();
  *(void *)(v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_arSessionObserver) = 0;
  *(void *)(v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_rsSessionDelegate) = 0;
  *(void *)(v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_okSessionDelegate) = 0;
  uint64_t v29 = (_OWORD *)(v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_arFrameReferenceOriginTransform);
  *uint64_t v29 = xmmword_2347F1FC0;
  v29[1] = xmmword_2347F2000;
  v29[2] = xmmword_2347F2010;
  v29[3] = xmmword_2347F19F0;
  *(void *)(v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_trackingFailureReportCount) = 0;
  *(void *)(v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_trackingFailureReportThreshold) = 600;
  *(void *)(v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_error) = 0;
  if (v28) {
    id v30 = v28;
  }
  else {
    id v30 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EF8FF8]), sel_init);
  }
  *(void *)(v2 + 56) = v30;
  id v31 = v28;
  sub_23479A928(v28 == 0);
  return v2;
}

uint64_t sub_2347AF14C()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 33, 7);
}

void sub_2347AF184()
{
  uint64_t v1 = 256;
  if (!*(unsigned char *)(v0 + 25)) {
    uint64_t v1 = 0;
  }
  uint64_t v2 = v1 | *(unsigned __int8 *)(v0 + 24);
  uint64_t v3 = 0x10000;
  if (!*(unsigned char *)(v0 + 26)) {
    uint64_t v3 = 0;
  }
  uint64_t v4 = 0x1000000;
  if (!*(unsigned char *)(v0 + 27)) {
    uint64_t v4 = 0;
  }
  uint64_t v5 = v2 | v3 | v4;
  uint64_t v6 = 0x100000000;
  if (!*(unsigned char *)(v0 + 28)) {
    uint64_t v6 = 0;
  }
  uint64_t v7 = 0x10000000000;
  if (!*(unsigned char *)(v0 + 29)) {
    uint64_t v7 = 0;
  }
  uint64_t v8 = 0x1000000000000;
  if (!*(unsigned char *)(v0 + 30)) {
    uint64_t v8 = 0;
  }
  uint64_t v9 = v6 | v7;
  uint64_t v10 = 0x100000000000000;
  if (!*(unsigned char *)(v0 + 31)) {
    uint64_t v10 = 0;
  }
  sub_23479B920(*(void *)(v0 + 16), v5 | v9 | v8 | v10, *(unsigned char *)(v0 + 32));
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

void *sub_2347AF238()
{
  return sub_23479CE48(v0);
}

uint64_t sub_2347AF240(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2687AE940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_2347AF2AC()
{
  unint64_t result = qword_2687AE948;
  if (!qword_2687AE948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2687AE948);
  }
  return result;
}

unint64_t sub_2347AF304()
{
  unint64_t result = qword_2687AE950;
  if (!qword_2687AE950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2687AE950);
  }
  return result;
}

unint64_t sub_2347AF35C()
{
  unint64_t result = qword_2687AE958;
  if (!qword_2687AE958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2687AE958);
  }
  return result;
}

unint64_t sub_2347AF3B4()
{
  unint64_t result = qword_2687AE960;
  if (!qword_2687AE960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2687AE960);
  }
  return result;
}

uint64_t sub_2347AF408@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a1 + 24;
  swift_beginAccess();
  uint64_t result = MEMORY[0x237DC8170](v4);
  uint64_t v6 = *(void *)(v3 + 32);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_2347AF464(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 32) = v2;
  return swift_unknownObjectWeakAssign();
}

id sub_2347AF4C0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void **)(v3 + 56);
  *a2 = v4;

  return v4;
}

uint64_t sub_2347AF51C@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 64);
  return result;
}

uint64_t sub_2347AF564(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v3 + 64) = v2;
  return result;
}

uint64_t sub_2347AF5A8@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 65);
  return result;
}

uint64_t sub_2347AF5F0(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v3 + 65) = v2;
  return result;
}

uint64_t sub_2347AF634@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_get_20Tm(a1, &OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_recordFileUrl, a2);
}

uint64_t sub_2347AF640(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_23479DA34(a1, a2, a3, a4, &OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_recordFileUrl);
}

uint64_t sub_2347AF660@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_get_20Tm(a1, &OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_replayFileUrl, a2);
}

uint64_t keypath_get_20Tm@<X0>(void *a1@<X0>, void *a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v4 = *a1 + *a2;
  swift_beginAccess();
  return sub_2346A7BCC(v4, a3, &qword_2687AE940);
}

uint64_t sub_2347AF6C8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_23479DA34(a1, a2, a3, a4, &OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_replayFileUrl);
}

uint64_t sub_2347AF6E8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return keypath_get_24Tm(a1, &OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_spiReplayDelegate, a2);
}

uint64_t sub_2347AF6F4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_25Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_spiReplayDelegate);
}

uint64_t sub_2347AF700@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_loggingDirectory);
  swift_beginAccess();
  uint64_t v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_2347AF75C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return keypath_get_24Tm(a1, &OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_debugDelegate, a2);
}

uint64_t keypath_get_24Tm@<X0>(void *a1@<X0>, void *a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v4 = *a1 + *a2;
  swift_beginAccess();
  uint64_t result = MEMORY[0x237DC8170](v4);
  uint64_t v6 = *(void *)(v4 + 8);
  *a3 = result;
  a3[1] = v6;
  return result;
}

uint64_t sub_2347AF7C0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_25Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_debugDelegate);
}

uint64_t keypath_set_25Tm(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *a2 + *a5;
  swift_beginAccess();
  *(void *)(v6 + 8) = v5;
  return swift_unknownObjectWeakAssign();
}

uint64_t type metadata accessor for ARRoomCaptureConfiguration()
{
  return self;
}

uint64_t sub_2347AF850()
{
  return type metadata accessor for RoomCaptureSession();
}

uint64_t type metadata accessor for RoomCaptureSession()
{
  uint64_t result = qword_2687AE968;
  if (!qword_2687AE968) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_2347AF8A4()
{
  sub_2347AFFD4();
  if (v0 <= 0x3F)
  {
    sub_2347EE370();
    if (v1 <= 0x3F)
    {
      type metadata accessor for CapturedRoom(319);
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t method lookup function for RoomCaptureSession(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for RoomCaptureSession);
}

uint64_t dispatch thunk of RoomCaptureSession.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 416))();
}

uint64_t dispatch thunk of RoomCaptureSession.__allocating_init(arSession:)()
{
  return (*(uint64_t (**)(void))(v0 + 424))();
}

uint64_t dispatch thunk of RoomCaptureSession.run(configuration:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 440))();
}

uint64_t dispatch thunk of RoomCaptureSession.stop()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 448))();
}

uint64_t dispatch thunk of RoomCaptureSession.stop(pauseARSession:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 456))();
}

uint64_t dispatch thunk of RoomCaptureSession.delegate.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 488))();
}

uint64_t dispatch thunk of RoomCaptureSession.delegate.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 496))();
}

uint64_t dispatch thunk of RoomCaptureSession.delegate.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 504))();
}

uint64_t dispatch thunk of RoomCaptureSession.arSession.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 536))();
}

uint64_t dispatch thunk of RoomCaptureSession.arSession.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 544))();
}

uint64_t dispatch thunk of RoomCaptureSession.arSession.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 552))();
}

uint64_t dispatch thunk of RoomCaptureSession.enableOURGBRefinement.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 560))();
}

uint64_t dispatch thunk of RoomCaptureSession.enableOURGBRefinement.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 568))();
}

uint64_t dispatch thunk of RoomCaptureSession.enableOURGBRefinement.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 576))();
}

uint64_t dispatch thunk of RoomCaptureSession.sessionMode.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 584))();
}

uint64_t dispatch thunk of RoomCaptureSession.sessionMode.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 592))();
}

uint64_t dispatch thunk of RoomCaptureSession.sessionMode.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 600))();
}

uint64_t dispatch thunk of RoomCaptureSession.recordFileUrl.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 608))();
}

uint64_t dispatch thunk of RoomCaptureSession.recordFileUrl.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 616))();
}

uint64_t dispatch thunk of RoomCaptureSession.recordFileUrl.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 624))();
}

uint64_t dispatch thunk of RoomCaptureSession.replayFileUrl.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 632))();
}

uint64_t dispatch thunk of RoomCaptureSession.replayFileUrl.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 640))();
}

uint64_t dispatch thunk of RoomCaptureSession.replayFileUrl.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 648))();
}

uint64_t dispatch thunk of RoomCaptureSession.spiReplayDelegate.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 656))();
}

uint64_t dispatch thunk of RoomCaptureSession.spiReplayDelegate.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 664))();
}

uint64_t dispatch thunk of RoomCaptureSession.spiReplayDelegate.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 672))();
}

uint64_t dispatch thunk of RoomCaptureSession.loggingDirectory.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 680))();
}

uint64_t dispatch thunk of RoomCaptureSession.loggingDirectory.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 688))();
}

uint64_t dispatch thunk of RoomCaptureSession.loggingDirectory.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 696))();
}

uint64_t dispatch thunk of RoomCaptureSession.debugDelegate.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 704))();
}

uint64_t dispatch thunk of RoomCaptureSession.debugDelegate.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 712))();
}

uint64_t dispatch thunk of RoomCaptureSession.debugDelegate.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 720))();
}

void sub_2347AFFD4()
{
  if (!qword_2687AE978)
  {
    sub_2347ED490();
    unint64_t v0 = sub_2347EEB10();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2687AE978);
    }
  }
}

uint64_t __swift_memcpy9_1(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for RoomCaptureSession.Configuration(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[9]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for RoomCaptureSession.Configuration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)uint64_t result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RoomCaptureSession.Configuration()
{
  return &type metadata for RoomCaptureSession.Configuration;
}

ValueMetadata *type metadata accessor for RoomCaptureSession.CaptureError()
{
  return &type metadata for RoomCaptureSession.CaptureError;
}

unsigned char *_s8RoomPlan18RoomCaptureSessionC11InstructionOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2347B01CCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RoomCaptureSession.Instruction()
{
  return &type metadata for RoomCaptureSession.Instruction;
}

unsigned char *storeEnumTagSinglePayload for RoomCaptureSession.mode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2347B02D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RoomCaptureSession.mode()
{
  return &type metadata for RoomCaptureSession.mode;
}

uint64_t sub_2347B0308(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_2347B031C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t sub_2347B0330(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_2347B0344(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of RoomCaptureSessionDelegate.captureSession(_:didUpdate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of RoomCaptureSessionDelegate.captureSession(_:didAdd:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of RoomCaptureSessionDelegate.captureSession(_:didChange:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of RoomCaptureSessionDelegate.captureSession(_:didRemove:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of RoomCaptureSessionDelegate.captureSession(_:didProvide:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of RoomCaptureSessionDelegate.captureSession(_:didStartWith:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of RoomCaptureSessionDelegate.captureSession(_:didEndWith:error:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 56))();
}

uint64_t dispatch thunk of SpiRoomCaptureSessionReplayDelegate.captureSessionDidFinishReplay(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of SpiDebugDelegate.getLoggingDirectory()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of SpiDebugDelegate.displayIndividualUpdateLog(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of SpiDebugDelegate.displayARFrameLog(log:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of SpiDebugDelegate.displayFramerateLog(log:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of SpiDebugDelegate.autoAppExit()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t type metadata accessor for ARInternalSessionObserverWrapper()
{
  return self;
}

uint64_t type metadata accessor for RSSessionDelegateWrapper()
{
  return self;
}

uint64_t type metadata accessor for OUSessionDelegateWrapper()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for RoomCaptureSession.InstructionState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2347B0594);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RoomCaptureSession.InstructionState()
{
  return &type metadata for RoomCaptureSession.InstructionState;
}

unint64_t sub_2347B05D0()
{
  unint64_t result = qword_2687AEB40;
  if (!qword_2687AEB40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2687AEB40);
  }
  return result;
}

uint64_t sub_2347B0624(void *a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2687AEB70);
  MEMORY[0x270FA5388](v4 - 8);
  unint64_t v6 = (unint64_t)&v206 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v206 - v8;
  MEMORY[0x270FA5388](v10);
  uint64_t v223 = (char *)&v206 - v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2687AE1D0);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v206 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v213 = (char *)&v206 - v16;
  MEMORY[0x270FA5388](v17);
  uint64_t v228 = (uint64_t)&v206 - v18;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2687AEB80);
  MEMORY[0x270FA5388](v19 - 8);
  long long v21 = (char *)&v206 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v230 = (uint64_t)&v206 - v23;
  MEMORY[0x270FA5388](v24);
  uint64_t v231 = (void (**)(uint64_t, uint64_t, uint64_t, unint64_t))((char *)&v206 - v25);
  MEMORY[0x270FA5388](v26);
  uint64_t v214 = (char *)&v206 - v27;
  uint64_t v244 = sub_2347ED5C0();
  uint64_t v237 = *(void *)(v244 - 8);
  MEMORY[0x270FA5388](v244);
  unint64_t v227 = (char *)&v206 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v29);
  uint64_t v219 = (uint64_t)&v206 - v30;
  MEMORY[0x270FA5388](v31);
  uint64_t v232 = (char *)&v206 - v32;
  MEMORY[0x270FA5388](v33);
  uint64_t v220 = (uint64_t)&v206 - v34;
  MEMORY[0x270FA5388](v35);
  uint64_t v233 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))((char *)&v206 - v36);
  MEMORY[0x270FA5388](v37);
  unint64_t v39 = (unint64_t)&v206 - v38;
  uint64_t v235 = type metadata accessor for CapturedRoom.Object(0);
  uint64_t v243 = *(void *)(v235 - 8);
  MEMORY[0x270FA5388](v235);
  unint64_t v210 = (unint64_t)&v206 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v41);
  uint64_t v212 = (float32x4_t *)((char *)&v206 - v42);
  MEMORY[0x270FA5388](v43);
  uint64_t v221 = (uint64_t)&v206 - v44;
  MEMORY[0x270FA5388](v45);
  uint64_t v47 = (char *)&v206 - v46;
  MEMORY[0x270FA5388](v48);
  uint64_t v215 = (uint64_t)&v206 - v49;
  MEMORY[0x270FA5388](v50);
  uint64_t v238 = (unint64_t *)((char *)&v206 - v51);
  MEMORY[0x270FA5388](v52);
  uint64_t v216 = (uint64_t)&v206 - v53;
  MEMORY[0x270FA5388](v54);
  uint64_t v239 = (uint64_t)&v206 - v55;
  MEMORY[0x270FA5388](v56);
  uint64_t v58 = (char *)&v206 - v57;
  MEMORY[0x270FA5388](v59);
  int v242 = (char *)&v206 - v60;
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v229 = v21;
  id v209 = a1;
  v224 = v47;
  uint64_t v218 = v14;
  uint64_t v226 = v9;
  unint64_t v208 = v6;
  uint64_t v62 = *(unint64_t **)(a2 + 40);
  unint64_t v63 = v62[2];
  uint64_t v211 = Strong;
  if (v63)
  {
    uint64_t v241 = (unint64_t *)&v242[*(int *)(v235 + 32)];
    uint64_t v64 = (uint64_t)v62 + ((*(unsigned __int8 *)(v243 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v243 + 80));
    uint64_t v65 = *(void *)(v243 + 72);
    BOOL v245 = (unint64_t *)(v237 + 16);
    uint64_t v240 = (void (**)(unint64_t, uint64_t))(v237 + 8);
    unint64_t v236 = v62;
    swift_bridgeObjectRetain();
    uint64_t v66 = (void *)MEMORY[0x263F8EE80];
    uint64_t v67 = v244;
    while (1)
    {
      uint64_t v68 = (void (**)(void, void, void))v242;
      sub_2347B3E20(v64, (uint64_t)v242, type metadata accessor for CapturedRoom.Object);
      uint64_t v69 = v67;
      unint64_t v70 = *v245;
      ((void (*)(unint64_t, unint64_t *, uint64_t))*v245)(v39, v241, v69);
      uint64_t v71 = (uint64_t)v58;
      sub_2347B4314((uint64_t)v68, (uint64_t)v58, type metadata accessor for CapturedRoom.Object);
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      char v247 = v66;
      unint64_t v6 = sub_2347BFA88(v39);
      uint64_t v74 = v66[2];
      BOOL v75 = (v73 & 1) == 0;
      uint64_t v76 = v74 + v75;
      if (__OFADD__(v74, v75)) {
        break;
      }
      char v77 = v73;
      if (v66[3] >= v76)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_2347D7944();
        }
      }
      else
      {
        sub_2347D23E8(v76, isUniquelyReferenced_nonNull_native);
        unint64_t v78 = sub_2347BFA88(v39);
        if ((v77 & 1) != (v79 & 1))
        {
LABEL_154:
          sub_2347EF0F0();
          __break(1u);
LABEL_155:
          uint64_t result = sub_2347EF0F0();
          __break(1u);
          return result;
        }
        unint64_t v6 = v78;
      }
      uint64_t v58 = (char *)v71;
      uint64_t v66 = v247;
      if (v77)
      {
        sub_2347B437C(v71, v247[7] + v6 * v65, type metadata accessor for CapturedRoom.Object);
      }
      else
      {
        v247[(v6 >> 6) + 8] |= 1 << v6;
        ((void (*)(unint64_t, unint64_t, uint64_t))v70)(v66[6] + *(void *)(v237 + 72) * v6, v39, v244);
        sub_2347B4314(v71, v66[7] + v6 * v65, type metadata accessor for CapturedRoom.Object);
        uint64_t v80 = v66[2];
        BOOL v81 = __OFADD__(v80, 1);
        uint64_t v82 = v80 + 1;
        if (v81) {
          goto LABEL_137;
        }
        v66[2] = v82;
        uint64_t v66 = v247;
      }
      swift_bridgeObjectRelease();
      uint64_t v67 = v244;
      (*v240)(v39, v244);
      v64 += v65;
      if (!--v63)
      {
        BOOL v245 = v66;
        swift_bridgeObjectRelease();
        uint64_t Strong = v211;
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_134:
    __break(1u);
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
    goto LABEL_140;
  }
  BOOL v245 = (unint64_t *)MEMORY[0x263F8EE80];
LABEL_18:
  unint64_t v70 = Strong + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_allUuidToObjects;
  swift_beginAccess();
  unint64_t v234 = v70;
  unint64_t v39 = *(void *)v70;
  uint64_t v84 = *(void *)(*(void *)v70 + 64);
  uint64_t v222 = *(void *)v70 + 64;
  uint64_t v85 = 1 << *(unsigned char *)(v39 + 32);
  uint64_t v86 = -1;
  if (v85 < 64) {
    uint64_t v86 = ~(-1 << v85);
  }
  unint64_t v87 = v86 & v84;
  unint64_t v236 = (unint64_t *)(v237 + 16);
  uint64_t v240 = (void (**)(unint64_t, uint64_t))(v243 + 56);
  uint64_t v241 = (unint64_t *)(v237 + 8);
  int v242 = (char *)(v237 + 32);
  int64_t v225 = (unint64_t)(v85 + 63) >> 6;
  int64_t v207 = v225 - 1;
  swift_bridgeObjectRetain();
  int64_t v88 = 0;
  uint64_t v217 = MEMORY[0x263F8EE80];
  unint64_t v63 = (unint64_t)&qword_2687AEB88;
  uint64_t v89 = (uint64_t)v231;
  uint64_t v90 = (uint64_t)v214;
  while (1)
  {
    if (v87)
    {
      unint64_t v91 = __clz(__rbit64(v87));
      v87 &= v87 - 1;
      unint64_t v70 = v91 | (v88 << 6);
LABEL_23:
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v237 + 16))(v89, *(void *)(v39 + 48) + *(void *)(v237 + 72) * v70, v244);
      uint64_t v92 = *(void *)(v39 + 56) + *(void *)(v243 + 72) * v70;
      uint64_t v93 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)v63);
      sub_2347B3E20(v92, v89 + *(int *)(v93 + 48), type metadata accessor for CapturedRoom.Object);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v93 - 8) + 56))(v89, 0, 1, v93);
      goto LABEL_42;
    }
    int64_t v94 = v88 + 1;
    if (__OFADD__(v88, 1)) {
      goto LABEL_135;
    }
    if (v94 < v225)
    {
      unint64_t v95 = *(void *)(v222 + 8 * v94);
      if (v95) {
        goto LABEL_27;
      }
      int64_t v96 = v88 + 2;
      ++v88;
      if (v94 + 1 < v225)
      {
        unint64_t v95 = *(void *)(v222 + 8 * v96);
        if (v95) {
          goto LABEL_30;
        }
        int64_t v88 = v94 + 1;
        if (v94 + 2 < v225)
        {
          unint64_t v95 = *(void *)(v222 + 8 * (v94 + 2));
          if (v95)
          {
            v94 += 2;
            goto LABEL_27;
          }
          int64_t v96 = v94 + 3;
          int64_t v88 = v94 + 2;
          if (v94 + 3 < v225)
          {
            unint64_t v95 = *(void *)(v222 + 8 * v96);
            if (v95)
            {
LABEL_30:
              int64_t v94 = v96;
LABEL_27:
              unint64_t v87 = (v95 - 1) & v95;
              unint64_t v70 = __clz(__rbit64(v95)) + (v94 << 6);
              int64_t v88 = v94;
              goto LABEL_23;
            }
            while (1)
            {
              int64_t v94 = v96 + 1;
              if (__OFADD__(v96, 1)) {
                goto LABEL_146;
              }
              if (v94 >= v225) {
                break;
              }
              unint64_t v95 = *(void *)(v222 + 8 * v94);
              ++v96;
              if (v95) {
                goto LABEL_27;
              }
            }
            int64_t v88 = v207;
          }
        }
      }
    }
    uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)v63);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v97 - 8) + 56))(v89, 1, 1, v97);
    unint64_t v87 = 0;
LABEL_42:
    sub_2346B1970(v89, v90, &qword_2687AEB80);
    unint64_t v98 = v63;
    unint64_t v63 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)v63);
    uint64_t v99 = *(void *)(v63 - 8);
    unint64_t v6 = v99 + 48;
    uint64_t v100 = *(unsigned int (**)(uint64_t, uint64_t, unint64_t))(v99 + 48);
    if (v100(v90, 1, v63) == 1) {
      break;
    }
    uint64_t v101 = v90 + *(int *)(v63 + 48);
    uint64_t v102 = (uint64_t)v233;
    unint64_t v70 = v244;
    (*(void (**)(unsigned int (**)(uint64_t, uint64_t, uint64_t), uint64_t, uint64_t))v242)(v233, v90, v244);
    sub_2347B4314(v101, v239, type metadata accessor for CapturedRoom.Object);
    if (v245[2] && (unint64_t v103 = sub_2347BFA88(v102), (v104 & 1) != 0))
    {
      uint64_t v105 = v243;
      unint64_t v6 = v228;
      sub_2347B3E20(v245[7] + *(void *)(v243 + 72) * v103, v228, type metadata accessor for CapturedRoom.Object);
      (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v105 + 56))(v6, 0, 1, v235);
      sub_2346A7C30(v6, (uint64_t *)&unk_2687AE1D0);
      sub_2347B3E88(v239, type metadata accessor for CapturedRoom.Object);
      ((void (*)(uint64_t, unint64_t))*v241)(v102, v70);
      uint64_t v89 = (uint64_t)v231;
      unint64_t v63 = v98;
    }
    else
    {
      uint64_t v106 = v228;
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))*v240)(v228, 1, 1, v235);
      sub_2346A7C30(v106, (uint64_t *)&unk_2687AE1D0);
      unint64_t v63 = *v236;
      unint64_t v6 = v220;
      ((void (*)(uint64_t, uint64_t, unint64_t))*v236)(v220, v102, v70);
      sub_2347B3E20(v239, v216, type metadata accessor for CapturedRoom.Object);
      uint64_t v107 = v217;
      int v108 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v246 = v107;
      unint64_t v110 = sub_2347BFA88(v6);
      uint64_t v111 = *(void *)(v107 + 16);
      BOOL v112 = (v109 & 1) == 0;
      uint64_t v113 = v111 + v112;
      if (__OFADD__(v111, v112)) {
        goto LABEL_138;
      }
      unint64_t v6 = v109;
      if (*(void *)(v107 + 24) >= v113)
      {
        if ((v108 & 1) == 0) {
          sub_2347D7944();
        }
      }
      else
      {
        sub_2347D23E8(v113, v108);
        unint64_t v114 = sub_2347BFA88(v220);
        if ((v6 & 1) != (v115 & 1)) {
          goto LABEL_155;
        }
        unint64_t v110 = v114;
      }
      uint64_t v116 = v233;
      uint64_t v117 = (void *)v246;
      if (v6)
      {
        uint64_t v217 = v246;
        sub_2347B437C(v216, *(void *)(v246 + 56) + *(void *)(v243 + 72) * v110, type metadata accessor for CapturedRoom.Object);
      }
      else
      {
        *(void *)(v246 + 8 * (v110 >> 6) + 64) |= 1 << v110;
        ((void (*)(unint64_t, uint64_t, unint64_t))v63)(v117[6] + *(void *)(v237 + 72) * v110, v220, v70);
        sub_2347B4314(v216, v117[7] + *(void *)(v243 + 72) * v110, type metadata accessor for CapturedRoom.Object);
        uint64_t v118 = v117[2];
        BOOL v81 = __OFADD__(v118, 1);
        uint64_t v119 = v118 + 1;
        if (v81)
        {
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          ((void (*)(unint64_t, uint64_t, uint64_t, unint64_t))*v238)(v39, 1, 1, v70);
LABEL_149:
          __break(1u);
LABEL_150:
          ((void (*)(char *, uint64_t, uint64_t, unint64_t))v6)(v226, 1, 1, v70);
LABEL_151:
          __break(1u);
LABEL_152:
          ((void (*)(unint64_t, uint64_t, uint64_t, uint64_t))v6)(v208, 1, 1, v244);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        v117[2] = v119;
        uint64_t v217 = v246;
      }
      swift_bridgeObjectRelease();
      unint64_t v6 = (unint64_t)v241;
      unint64_t v70 = *v241;
      uint64_t v120 = v244;
      ((void (*)(uint64_t, uint64_t))*v241)(v220, v244);
      sub_2347B3E88(v239, type metadata accessor for CapturedRoom.Object);
      ((void (*)(unsigned int (**)(uint64_t, uint64_t, uint64_t), uint64_t))v70)(v116, v120);
      uint64_t v89 = (uint64_t)v231;
      uint64_t v90 = (uint64_t)v214;
      unint64_t v63 = v98;
    }
  }
  swift_release();
  unint64_t v121 = v245[8];
  int64_t v225 = (int64_t)(v245 + 8);
  uint64_t v122 = 1 << *((unsigned char *)v245 + 32);
  uint64_t v123 = -1;
  if (v122 < 64) {
    uint64_t v123 = ~(-1 << v122);
  }
  unint64_t v124 = v123 & v121;
  uint64_t v231 = (void (**)(uint64_t, uint64_t, uint64_t, unint64_t))(v99 + 56);
  v125 = v245;
  uint64_t v233 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v243 + 48);
  uint64_t v228 = (unint64_t)(v122 + 63) >> 6;
  uint64_t v220 = v228 - 1;
  swift_bridgeObjectRetain();
  uint64_t v126 = 0;
  uint64_t v222 = MEMORY[0x263F8EE80];
  unint64_t v39 = (unint64_t)v223;
  uint64_t v127 = (uint64_t)v213;
  uint64_t v128 = v235;
  while (1)
  {
    if (v124)
    {
      unint64_t v129 = __clz(__rbit64(v124));
      v124 &= v124 - 1;
      uint64_t v239 = v126;
      unint64_t v130 = v129 | (v126 << 6);
LABEL_62:
      uint64_t v131 = (uint64_t)v229;
      (*(void (**)(char *, unint64_t, uint64_t))(v237 + 16))(v229, v125[6] + *(void *)(v237 + 72) * v130, v244);
      sub_2347B3E20(v125[7] + *(void *)(v243 + 72) * v130, v131 + *(int *)(v63 + 48), type metadata accessor for CapturedRoom.Object);
      uint64_t v132 = 0;
      goto LABEL_77;
    }
    uint64_t v133 = v126 + 1;
    if (__OFADD__(v126, 1)) {
      goto LABEL_136;
    }
    if (v133 >= v228)
    {
LABEL_75:
      uint64_t v239 = v126;
      unint64_t v124 = 0;
      uint64_t v132 = 1;
      goto LABEL_76;
    }
    unint64_t v134 = *(void *)(v225 + 8 * v133);
    if (v134) {
      goto LABEL_66;
    }
    v126 += 2;
    if (v133 + 1 >= v228)
    {
      unint64_t v124 = 0;
      uint64_t v132 = 1;
    }
    else
    {
      unint64_t v134 = *(void *)(v225 + 8 * v126);
      if (v134) {
        goto LABEL_69;
      }
      if (v133 + 2 >= v228) {
        goto LABEL_75;
      }
      unint64_t v134 = *(void *)(v225 + 8 * (v133 + 2));
      if (v134)
      {
        v133 += 2;
        goto LABEL_66;
      }
      uint64_t v126 = v133 + 3;
      if (v133 + 3 >= v228)
      {
        unint64_t v124 = 0;
        uint64_t v132 = 1;
        uint64_t v239 = v133 + 2;
        goto LABEL_76;
      }
      unint64_t v134 = *(void *)(v225 + 8 * v126);
      if (v134)
      {
LABEL_69:
        uint64_t v133 = v126;
LABEL_66:
        unint64_t v124 = (v134 - 1) & v134;
        unint64_t v130 = __clz(__rbit64(v134)) + (v133 << 6);
        uint64_t v239 = v133;
        goto LABEL_62;
      }
      while (1)
      {
        uint64_t v133 = v126 + 1;
        if (__OFADD__(v126, 1)) {
          goto LABEL_147;
        }
        if (v133 >= v228) {
          break;
        }
        unint64_t v134 = *(void *)(v225 + 8 * v133);
        ++v126;
        if (v134) {
          goto LABEL_66;
        }
      }
      unint64_t v124 = 0;
      uint64_t v132 = 1;
      uint64_t v133 = v220;
    }
    uint64_t v239 = v133;
LABEL_76:
    uint64_t v131 = (uint64_t)v229;
LABEL_77:
    (*v231)(v131, v132, 1, v63);
    uint64_t v135 = v230;
    sub_2346B1970(v131, v230, &qword_2687AEB80);
    if (v100(v135, 1, v63) == 1) {
      break;
    }
    uint64_t v136 = v135 + *(int *)(v63 + 48);
    uint64_t v137 = (uint64_t)v232;
    uint64_t v138 = v135;
    unint64_t v70 = v244;
    (*(void (**)(char *, uint64_t, uint64_t))v242)(v232, v138, v244);
    sub_2347B4314(v136, (uint64_t)v238, type metadata accessor for CapturedRoom.Object);
    uint64_t v139 = *(void *)v234;
    if (*(void *)(*(void *)v234 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v140 = sub_2347BFA88(v137);
      if (v141)
      {
        sub_2347B3E20(*(void *)(v139 + 56) + *(void *)(v243 + 72) * v140, v127, type metadata accessor for CapturedRoom.Object);
        uint64_t v142 = 0;
      }
      else
      {
        uint64_t v142 = 1;
      }
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))*v240)(v127, v142, 1, v128);
      swift_bridgeObjectRelease();
      if ((*v233)(v127, 1, v128) != 1)
      {
        sub_2346A7C30(v127, (uint64_t *)&unk_2687AE1D0);
        sub_2347B3E88((uint64_t)v238, type metadata accessor for CapturedRoom.Object);
        ((void (*)(uint64_t, unint64_t))*v241)(v137, v70);
        v125 = v245;
        uint64_t v126 = v239;
        continue;
      }
    }
    else
    {
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))*v240)(v127, 1, 1, v128);
    }
    sub_2346A7C30(v127, (uint64_t *)&unk_2687AE1D0);
    uint64_t v143 = (void (*)(unint64_t, uint64_t, unint64_t))*v236;
    uint64_t v144 = v219;
    ((void (*)(uint64_t, uint64_t, unint64_t))*v236)(v219, v137, v70);
    sub_2347B3E20((uint64_t)v238, v215, type metadata accessor for CapturedRoom.Object);
    uint64_t v145 = v222;
    int v146 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v246 = v145;
    unint64_t v147 = sub_2347BFA88(v144);
    uint64_t v149 = v145;
    unint64_t v39 = v147;
    uint64_t v150 = *(void *)(v149 + 16);
    BOOL v151 = (v148 & 1) == 0;
    uint64_t v152 = v150 + v151;
    if (__OFADD__(v150, v151)) {
      goto LABEL_139;
    }
    char v153 = v148;
    if (*(void *)(v149 + 24) >= v152)
    {
      if ((v146 & 1) == 0) {
        sub_2347D7944();
      }
    }
    else
    {
      sub_2347D23E8(v152, v146);
      unint64_t v154 = sub_2347BFA88(v219);
      if ((v153 & 1) != (v155 & 1)) {
        goto LABEL_155;
      }
      unint64_t v39 = v154;
    }
    unint64_t v156 = v232;
    char v157 = (void *)v246;
    if (v153)
    {
      uint64_t v222 = v246;
      sub_2347B437C(v215, *(void *)(v246 + 56) + *(void *)(v243 + 72) * v39, type metadata accessor for CapturedRoom.Object);
    }
    else
    {
      *(void *)(v246 + 8 * (v39 >> 6) + 64) |= 1 << v39;
      v143(v157[6] + *(void *)(v237 + 72) * v39, v219, v70);
      sub_2347B4314(v215, v157[7] + *(void *)(v243 + 72) * v39, type metadata accessor for CapturedRoom.Object);
      uint64_t v158 = v157[2];
      BOOL v81 = __OFADD__(v158, 1);
      uint64_t v159 = v158 + 1;
      if (v81) {
        goto LABEL_145;
      }
      v157[2] = v159;
      uint64_t v222 = v246;
    }
    swift_bridgeObjectRelease();
    unint64_t v70 = *v241;
    uint64_t v160 = v244;
    ((void (*)(uint64_t, uint64_t))*v241)(v219, v244);
    sub_2347B3E88((uint64_t)v238, type metadata accessor for CapturedRoom.Object);
    ((void (*)(char *, uint64_t))v70)(v156, v160);
    unint64_t v39 = (unint64_t)v223;
    uint64_t v128 = v235;
    v125 = v245;
    uint64_t v127 = (uint64_t)v213;
    uint64_t v126 = v239;
  }
  swift_release();
  id v161 = objc_msgSend(v209, sel_objects);
  sub_2346A9D9C(0, (unint64_t *)&unk_2687AEB60);
  unint64_t v63 = sub_2347EE7D0();

  unint64_t v70 = v244;
  if (v63 >> 62)
  {
LABEL_140:
    swift_bridgeObjectRetain();
    uint64_t v162 = sub_2347EEEC0();
    swift_bridgeObjectRelease();
    if (!v162) {
      goto LABEL_141;
    }
LABEL_106:
    unint64_t v236 = (unint64_t *)(v63 & 0xC000000000000001);
    uint64_t v238 = (unint64_t *)(v237 + 56);
    uint64_t v230 = MEMORY[0x263F8EE80];
    uint64_t v231 = (void (**)(uint64_t, uint64_t, uint64_t, unint64_t))v63;
    v237 += 48;
    uint64_t v163 = 4;
    while (1)
    {
      uint64_t v164 = v163 - 4;
      if (v236)
      {
        id v165 = (id)MEMORY[0x237DC6CF0](v163 - 4, v63);
        uint64_t v166 = v163 - 3;
        if (__OFADD__(v164, 1)) {
          goto LABEL_134;
        }
      }
      else
      {
        id v165 = *(id *)(v63 + 8 * v163);
        uint64_t v166 = v163 - 3;
        if (__OFADD__(v164, 1)) {
          goto LABEL_134;
        }
      }
      uint64_t v239 = v166;
      char v167 = v165;
      id v168 = objc_msgSend(v165, sel_identifier);
      if (!v168) {
        goto LABEL_148;
      }
      uint64_t v169 = v168;
      BOOL v170 = v227;
      sub_2347ED580();

      uint64_t v171 = *(void (**)(char *, char *, unint64_t))v242;
      (*(void (**)(unint64_t, char *, unint64_t))v242)(v39, v170, v70);
      unint64_t v6 = *v238;
      ((void (*)(unint64_t, void, uint64_t, unint64_t))*v238)(v39, 0, 1, v70);
      char v172 = *(unsigned int (**)(unint64_t, uint64_t, unint64_t))v237;
      if ((*(unsigned int (**)(unint64_t, uint64_t, unint64_t))v237)(v39, 1, v70) == 1) {
        goto LABEL_149;
      }
      if (v245[2] && (unint64_t v173 = sub_2347BFA88(v39), (v174 & 1) != 0))
      {
        uint64_t v175 = *(void *)(v243 + 72);
        uint64_t v176 = v221;
        sub_2347B3E20(v245[7] + v175 * v173, v221, type metadata accessor for CapturedRoom.Object);
        sub_2347B4314(v176, (uint64_t)v224, type metadata accessor for CapturedRoom.Object);
        uint64_t v232 = (char *)*v241;
        ((void (*)(unint64_t, unint64_t))v232)(v39, v70);
        id v177 = objc_msgSend(v167, sel_identifier);
        if (!v177) {
          goto LABEL_150;
        }
        uint64_t v178 = v177;
        uint64_t v179 = v227;
        sub_2347ED580();

        uint64_t v180 = (uint64_t)v226;
        v171(v226, v179, v70);
        ((void (*)(uint64_t, void, uint64_t, unint64_t))v6)(v180, 0, 1, v70);
        if (v172(v180, 1, v70) == 1) {
          goto LABEL_151;
        }
        uint64_t v181 = *(void *)v234;
        if (!*(void *)(*(void *)v234 + 16))
        {
          uint64_t v184 = (uint64_t)v218;
          ((void (*)(char *, uint64_t, uint64_t, uint64_t))*v240)(v218, 1, 1, v235);
          unint64_t v63 = (unint64_t)v231;
LABEL_126:
          sub_2347B3E88((uint64_t)v224, type metadata accessor for CapturedRoom.Object);

          sub_2346A7C30(v184, (uint64_t *)&unk_2687AE1D0);
          unint64_t v70 = v244;
          ((void (*)(char *, uint64_t))v232)(v226, v244);
LABEL_127:
          unint64_t v39 = (unint64_t)v223;
          goto LABEL_108;
        }
        swift_bridgeObjectRetain();
        unint64_t v182 = sub_2347BFA88((uint64_t)v226);
        if (v183)
        {
          uint64_t v184 = (uint64_t)v218;
          sub_2347B3E20(*(void *)(v181 + 56) + v182 * v175, (uint64_t)v218, type metadata accessor for CapturedRoom.Object);
          uint64_t v185 = 0;
        }
        else
        {
          uint64_t v185 = 1;
          uint64_t v184 = (uint64_t)v218;
        }
        unint64_t v63 = (unint64_t)v231;
        uint64_t v186 = v235;
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))*v240)(v184, v185, 1, v235);
        swift_bridgeObjectRelease();
        if ((*v233)(v184, 1, v186) == 1) {
          goto LABEL_126;
        }
        BOOL v187 = v212;
        sub_2347B4314(v184, (uint64_t)v212, type metadata accessor for CapturedRoom.Object);
        unint64_t v70 = v244;
        ((void (*)(char *, uint64_t))v232)(v226, v244);
        uint64_t v188 = (uint64_t)v224;
        sub_23473C784(v187);
        LODWORD(v189) = 1008981770;
        if (sub_2347DD66C((unsigned __int8 *)v187, v189))
        {

          unint64_t v6 = (unint64_t)type metadata accessor for CapturedRoom.Object;
          sub_2347B3E88((uint64_t)v187, type metadata accessor for CapturedRoom.Object);
          sub_2347B3E88(v188, type metadata accessor for CapturedRoom.Object);
          goto LABEL_127;
        }
        id v190 = objc_msgSend(v167, sel_identifier);
        if (!v190) {
          goto LABEL_152;
        }
        char v191 = v190;
        uint64_t v192 = v227;
        sub_2347ED580();

        uint64_t v193 = v208;
        unint64_t v194 = v244;
        v171((char *)v208, v192, v244);
        ((void (*)(uint64_t, void, uint64_t, unint64_t))v6)(v193, 0, 1, v194);
        if (v172(v193, 1, v194) == 1) {
          goto LABEL_153;
        }
        uint64_t v195 = (uint64_t)v224;
        unint64_t v6 = v210;
        sub_2347B3E20((uint64_t)v224, v210, type metadata accessor for CapturedRoom.Object);
        uint64_t v196 = v230;
        char v197 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v246 = v196;
        sub_2347ABD58(v6, v193, v197);
        uint64_t v230 = v246;
        swift_bridgeObjectRelease();
        ((void (*)(uint64_t, unint64_t))v232)(v193, v194);

        sub_2347B3E88((uint64_t)v212, type metadata accessor for CapturedRoom.Object);
        sub_2347B3E88(v195, type metadata accessor for CapturedRoom.Object);
        unint64_t v39 = (unint64_t)v223;
        unint64_t v70 = v194;
        unint64_t v63 = (unint64_t)v231;
      }
      else
      {

        ((void (*)(unint64_t, unint64_t))*v241)(v39, v70);
      }
LABEL_108:
      ++v163;
      if (v239 == v162) {
        goto LABEL_142;
      }
    }
  }
  uint64_t v162 = *(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v162) {
    goto LABEL_106;
  }
LABEL_141:
  uint64_t v230 = MEMORY[0x263F8EE80];
LABEL_142:
  swift_bridgeObjectRelease();
  uint64_t v198 = v211;
  swift_retain();
  uint64_t v199 = swift_bridgeObjectRetain();
  sub_2347ADE38(v199, v198);
  swift_bridgeObjectRelease();
  swift_release();
  swift_retain();
  uint64_t v200 = swift_bridgeObjectRetain();
  sub_2347AE300(v200, v198);
  swift_bridgeObjectRelease();
  swift_release();
  swift_retain();
  uint64_t v201 = swift_bridgeObjectRetain();
  sub_2347AE300(v201, v198);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v202 = swift_bridgeObjectRetain();
  size_t v83 = sub_2347C1AF8(v202);
  swift_bridgeObjectRelease();
  uint64_t v203 = swift_bridgeObjectRetain();
  sub_2347C1AF8(v203);
  swift_bridgeObjectRelease();
  uint64_t v204 = swift_bridgeObjectRetain();
  sub_2347C1AF8(v204);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease_n();
  return v83;
}

id sub_2347B2388(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  v17[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v8 = (void *)sub_2347ED3F0();
  v17[0] = 0;
  id v9 = objc_msgSend(v4, sel_initWithBaseConfiguration_fileURL_replayMode_outError_, a1, v8, a3, v17);

  id v10 = v17[0];
  if (v9)
  {
    uint64_t v11 = sub_2347ED490();
    uint64_t v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);
    id v13 = v10;
    v12(a2, v11);
  }
  else
  {
    id v14 = v17[0];
    sub_2347ED350();

    swift_willThrow();
    uint64_t v15 = sub_2347ED490();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(a2, v15);
  }
  return v9;
}

uint64_t sub_2347B24E4(unint64_t a1)
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    if (qword_2687ABDD0 != -1) {
      swift_once();
    }
    sub_234719114();
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v3 = sub_2347EEEC0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v4 = MEMORY[0x263F8EE78];
    if (v3)
    {
      uint64_t v12 = MEMORY[0x263F8EE78];
      uint64_t result = sub_2347EEE10();
      if (v3 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v5 = 0;
      do
      {
        if ((a1 & 0xC000000000000001) != 0) {
          id v6 = (id)MEMORY[0x237DC6CF0](v5, a1);
        }
        else {
          id v6 = *(id *)(a1 + 8 * v5 + 32);
        }
        uint64_t v7 = v6;
        ++v5;
        type metadata accessor for RoomScanKeyframeWrapper();
        uint64_t v8 = swift_allocObject();
        *(void *)(v8 + 24) = 0;
        objc_allocWithZone((Class)type metadata accessor for RoomScanKeyframe(0));
        id v9 = v7;
        id v10 = sub_2347761D8(v9);

        uint64_t v11 = *(void **)(v8 + 24);
        *(void *)(v8 + 16) = v10;
        *(void *)(v8 + 24) = v9;

        sub_2347EEDF0();
        sub_2347EEE20();
        sub_2347EEE30();
        sub_2347EEE00();
      }
      while (v3 != v5);
      uint64_t v4 = v12;
    }
    sub_23479E370(v4);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2347B26EC()
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_spiReplayDelegate;
    swift_beginAccess();
    if (MEMORY[0x237DC8170](v2))
    {
      uint64_t v3 = *(void *)(v2 + 8);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 8))(v1, ObjectType, v3);
      swift_release();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_2347B27A4(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_2347EE3B0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_2347EE410();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    if (*(unsigned char *)(result + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_runAllowed) == 1)
    {
      sub_2346A9D9C(0, (unint64_t *)&qword_2687AD2B0);
      uint64_t v19 = v5;
      uint64_t v18 = sub_2347EEA00();
      uint64_t v13 = swift_allocObject();
      *(void *)(v13 + 16) = v2;
      *(void *)(v13 + 24) = a1;
      aBlock[4] = sub_2347B3F40;
      aBlock[5] = v13;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_23477C05C;
      aBlock[3] = &block_descriptor_248;
      id v14 = _Block_copy(aBlock);
      id v15 = v2;
      id v16 = a1;
      swift_release();
      sub_2347EE3D0();
      aBlock[0] = MEMORY[0x263F8EE78];
      sub_2347B41B4((unint64_t *)&qword_2687AD498, MEMORY[0x263F8F030]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2687AE930);
      sub_234723288((unint64_t *)&qword_2687AD4A0, (uint64_t *)&unk_2687AE930);
      sub_2347EEC30();
      uint64_t v17 = (void *)v18;
      MEMORY[0x237DC6990](0, v11, v7, v14);
      _Block_release(v14);
      swift_release();

      (*(void (**)(char *, uint64_t))(v19 + 8))(v7, v4);
      return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

void sub_2347B2AE8(void *a1)
{
  if (qword_2687ABE98 != -1) {
    swift_once();
  }
  sub_2347E9D14();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = Strong;
    uint64_t v4 = OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_runActive;
    if (*(unsigned char *)(Strong + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_runActive) != 1) {
      goto LABEL_16;
    }
    if (objc_msgSend(a1, sel_worldAlignment))
    {
      uint64_t v5 = sub_2347EE350();
      os_log_type_t v6 = sub_2347EE970();
      if (os_log_type_enabled(v5, v6))
      {
        uint64_t v7 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v7 = 0;
        _os_log_impl(&dword_23468B000, v5, v6, "Invalid ARConfiguration.WorldAlignment: only gravity is supported", v7, 2u);
        MEMORY[0x237DC8070](v7, -1, -1);
      }

      sub_2347AF304();
      uint64_t v8 = swift_allocError();
      *uint64_t v9 = 2;
      uint64_t v10 = *(void **)(v3 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_error);
      *(void *)(v3 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_error) = v8;

      if (qword_2687ABDD0 != -1) {
        swift_once();
      }
      uint64_t v11 = sub_2347EE690();
      sub_234719918(v11, v12);
      swift_bridgeObjectRelease();
      sub_23479CA5C(0);
      swift_release();
      return;
    }
    if (*(unsigned char *)(v3 + v4) != 1) {
      goto LABEL_16;
    }
    uint64_t v13 = *(void **)(v3 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_currentArConfiguration);
    if (!v13) {
      goto LABEL_16;
    }
    sub_2346A9D9C(0, (unint64_t *)&unk_2687AEBD0);
    id v22 = v13;
    if (sub_2347EEAE0())
    {

LABEL_16:
      swift_release();
      return;
    }
    self;
    if (swift_dynamicCastObjCClass())
    {
      swift_release();
    }
    else
    {
      id v14 = sub_2347EE350();
      os_log_type_t v15 = sub_2347EE970();
      if (os_log_type_enabled(v14, v15))
      {
        id v16 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v16 = 0;
        _os_log_impl(&dword_23468B000, v14, v15, "Invalid ARConfiguration: only ARWorldTrackingConfiguration is supported", v16, 2u);
        MEMORY[0x237DC8070](v16, -1, -1);
      }

      sub_2347AF304();
      uint64_t v17 = swift_allocError();
      *uint64_t v18 = 2;
      uint64_t v19 = *(void **)(v3 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_error);
      *(void *)(v3 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_error) = v17;

      if (qword_2687ABDD0 != -1) {
        swift_once();
      }
      uint64_t v20 = sub_2347EE690();
      sub_234719918(v20, v21);
      swift_bridgeObjectRelease();
      sub_23479CA5C(0);
      swift_release();
    }
  }
}

uint64_t sub_2347B2EB4()
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    if (*(unsigned char *)(result + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_runActive) == 1)
    {
      sub_2347AF304();
      uint64_t v2 = swift_allocError();
      unsigned char *v3 = 1;
      uint64_t v4 = *(void **)(v1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_error);
      *(void *)(v1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_error) = v2;

      if (qword_2687ABDD0 != -1) {
        swift_once();
      }
      uint64_t v5 = sub_2347EE690();
      sub_234719918(v5, v6);
      swift_bridgeObjectRelease();
      sub_23479CA5C(1);
      return swift_release();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_2347B2FE0(void *a1)
{
  uint64_t v3 = sub_2347EE3B0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_2347EE410();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    id v12 = *(id *)(result + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_queue);
    v18[0] = v7;
    id v13 = v12;
    swift_release();
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = v1;
    *(void *)(v14 + 24) = a1;
    aBlock[4] = sub_2347B3E18;
    aBlock[5] = v14;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_23477C05C;
    aBlock[3] = &block_descriptor_233;
    os_log_type_t v15 = _Block_copy(aBlock);
    id v16 = v1;
    id v17 = a1;
    sub_2347EE3D0();
    v18[1] = MEMORY[0x263F8EE78];
    sub_2347B41B4((unint64_t *)&qword_2687AD498, MEMORY[0x263F8F030]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2687AE930);
    sub_234723288((unint64_t *)&qword_2687AD4A0, (uint64_t *)&unk_2687AE930);
    sub_2347EEC30();
    MEMORY[0x237DC6990](0, v10, v6, v15);
    _Block_release(v15);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    (*(void (**)(char *, void))(v8 + 8))(v10, v18[0]);
    return swift_release();
  }
  return result;
}

uint64_t sub_2347B32C0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v22 = a3;
  uint64_t v23 = a4;
  uint64_t v6 = sub_2347EE3B0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_2347EE410();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  id v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    id v15 = *(id *)(result + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_queue);
    uint64_t v21 = v10;
    id v16 = v15;
    swift_release();
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = v4;
    *(void *)(v17 + 24) = a1;
    aBlock[4] = v22;
    aBlock[5] = v17;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_23477C05C;
    aBlock[3] = v23;
    uint64_t v18 = _Block_copy(aBlock);
    id v19 = v4;
    id v20 = a1;
    sub_2347EE3D0();
    uint64_t v24 = MEMORY[0x263F8EE78];
    sub_2347B41B4((unint64_t *)&qword_2687AD498, MEMORY[0x263F8F030]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2687AE930);
    sub_234723288((unint64_t *)&qword_2687AD4A0, (uint64_t *)&unk_2687AE930);
    sub_2347EEC30();
    MEMORY[0x237DC6990](0, v13, v9, v18);
    _Block_release(v18);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v21);
    return swift_release();
  }
  return result;
}

uint64_t sub_2347B3594(unint64_t a1)
{
  uint64_t v2 = sub_2347EE3B0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_2347EE410();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v31 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_2347EEEC0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v33 = v5;
  uint64_t v34 = v6;
  uint64_t v32 = v7;
  if (v9)
  {
    aBlock[0] = MEMORY[0x263F8EE78];
    uint64_t result = sub_234745910(0, v9 & ~(v9 >> 63), 0);
    if (v9 < 0)
    {
      __break(1u);
      goto LABEL_21;
    }
    uint64_t v29 = v3;
    uint64_t v30 = v2;
    uint64_t v11 = 0;
    uint64_t v12 = aBlock[0];
    do
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v13 = (id)MEMORY[0x237DC6CF0](v11, a1);
      }
      else {
        id v13 = *(id *)(a1 + 8 * v11 + 32);
      }
      uint64_t v14 = v13;
      id v15 = objc_msgSend(v13, sel_dictionaryRepresentation, v29, v30);
      if (v15)
      {
        id v16 = v15;
        uint64_t v17 = sub_2347EE520();
      }
      else
      {

        uint64_t v17 = 0;
      }
      aBlock[0] = v12;
      unint64_t v19 = *(void *)(v12 + 16);
      unint64_t v18 = *(void *)(v12 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_234745910(v18 > 1, v19 + 1, 1);
        uint64_t v12 = aBlock[0];
      }
      ++v11;
      *(void *)(v12 + 16) = v19 + 1;
      *(void *)(v12 + 8 * v19 + 32) = v17;
    }
    while (v9 != v11);
    uint64_t v3 = v29;
    uint64_t v2 = v30;
    id v20 = v35;
    uint64_t v21 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v12 = MEMORY[0x263F8EE78];
    id v20 = v35;
    uint64_t v21 = MEMORY[0x263F8EE78];
  }
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = v21;
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    id v23 = *(id *)(result + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_queue);
    swift_release();
    uint64_t v24 = (void *)swift_allocObject();
    v24[2] = v22;
    v24[3] = v12;
    v24[4] = v20;
    aBlock[4] = sub_2347B3DAC;
    aBlock[5] = v24;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_23477C05C;
    aBlock[3] = &block_descriptor_203;
    uint64_t v25 = _Block_copy(aBlock);
    swift_retain();
    id v26 = v20;
    uint64_t v27 = v31;
    sub_2347EE3D0();
    uint64_t v36 = v21;
    sub_2347B41B4((unint64_t *)&qword_2687AD498, MEMORY[0x263F8F030]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2687AE930);
    sub_234723288((unint64_t *)&qword_2687AD4A0, (uint64_t *)&unk_2687AE930);
    uint64_t v28 = v33;
    sub_2347EEC30();
    MEMORY[0x237DC6990](0, v27, v28, v25);
    _Block_release(v25);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v28, v2);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v27, v34);
    swift_release();
    return swift_release();
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_2347B3A1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v22 = a4;
  uint64_t v23 = a5;
  uint64_t v7 = sub_2347EE3B0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_2347EE410();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    id v16 = *(id *)(result + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_queue);
    uint64_t v21 = v11;
    id v17 = v16;
    swift_release();
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = v5;
    *(void *)(v18 + 24) = a1;
    aBlock[4] = v22;
    aBlock[5] = v18;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_23477C05C;
    aBlock[3] = v23;
    unint64_t v19 = _Block_copy(aBlock);
    id v20 = v5;
    sub_2347EE3D0();
    uint64_t v24 = MEMORY[0x263F8EE78];
    sub_2347B41B4((unint64_t *)&qword_2687AD498, MEMORY[0x263F8F030]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2687AE930);
    sub_234723288((unint64_t *)&qword_2687AD4A0, (uint64_t *)&unk_2687AE930);
    sub_2347EEC30();
    MEMORY[0x237DC6990](0, v14, v10, v19);
    _Block_release(v19);

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v21);
    return swift_release();
  }
  return result;
}

uint64_t sub_2347B3CEC()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2347B3D24()
{
  return sub_2347A9E80();
}

uint64_t sub_2347B3D2C()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2347B3D64()
{
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

void sub_2347B3DAC()
{
  sub_2347A9BC0(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_2347B3DB8()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_2347B3DF8()
{
  sub_2347A91E4(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_2347B3E00()
{
  return sub_2347A9040(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_2347B3E08()
{
  return sub_2347A8DD8(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_2347B3E10()
{
  return sub_2347A8A68(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_2347B3E18()
{
  return sub_2347A85C4(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_2347B3E20(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2347B3E88(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2347B3EE8()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_2347B3F20()
{
  return sub_23476959C(*(void *)(v0 + 16), *(void *)(v0 + 32), *(double *)(v0 + 24));
}

uint64_t sub_2347B3F30()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2347B3F40()
{
  return sub_2347A2F90(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_2347B3F48()
{
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

void sub_2347B3F88()
{
  sub_2347A16D8(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_2347B3F94()
{
  uint64_t v1 = (int *)(type metadata accessor for CapturedRoom(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 96) & ~v2;
  uint64_t v4 = v2 | 0xF;
  unint64_t v5 = (((*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();

  uint64_t v6 = v0 + v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = v0 + v3 + v1[12];
  uint64_t v8 = sub_2347ED5C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, v5 + 16, v4);
}

void sub_2347B4114()
{
  uint64_t v1 = *(void *)(type metadata accessor for CapturedRoom(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = v0 + v2;
  uint64_t v5 = *(void *)(v0 + v3);
  uint64_t v6 = v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = *(void **)v6;
  unint64_t v8 = *(void *)(v6 + 8);

  sub_2347A0938(v0 + 16, v4, v5, v7, v8);
}

uint64_t sub_2347B41B4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_2347B41FC()
{
  sub_23479F420(v0);
}

void sub_2347B4204()
{
  *(void *)(v0 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_trackingFailureReportCount) = 0;
}

uint64_t sub_2347B4214()
{
  return objectdestroy_271Tm(MEMORY[0x263F8EEA0]);
}

void sub_2347B422C()
{
  sub_23479E640(*(void *)(v0 + 16), *(id **)(v0 + 24));
}

uint64_t sub_2347B4234()
{
  return objectdestroy_271Tm(MEMORY[0x263F8EED8]);
}

void sub_2347B424C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_objectDetectionEnabled) == 1)
  {
    unint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_okObjDet);
    if (v2) {
      objc_msgSend(v2, sel_updateWithFrame_, *(void *)(v0 + 24));
    }
    else {
      __break(1u);
    }
  }
}

uint64_t sub_2347B428C()
{
  return objectdestroy_271Tm(MEMORY[0x263F8EED8]);
}

uint64_t objectdestroy_271Tm(void (*a1)(void))
{
  a1(*(void *)(v1 + 16));
  swift_release();

  return MEMORY[0x270FA0238](v1, 32, 7);
}

id sub_2347B42EC()
{
  id result = *(id *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_floorPlanGenerator);
  if (result) {
    return objc_msgSend(result, sel_updateWithFrame_, *(void *)(v0 + 24));
  }
  __break(1u);
  return result;
}

uint64_t sub_2347B4314(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2347B437C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_2347B43E4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_2347B4440()
{
  uint64_t result = MEMORY[0x237DC8170](v0 + 40);
  if (result)
  {
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_2347B4478()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_arRecordingConfig);
  *(void *)(v0 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_arRecordingConfig) = 0;
}

uint64_t sub_2347B448C()
{
  return sub_23479C894(v0);
}

id sub_2347B4494()
{
  return sub_23479B4B0(v0);
}

void sub_2347B4580(unint64_t a1)
{
  unint64_t v3 = sub_2347550BC(a1, 0.1);
  if ((v4 & 1) == 0)
  {
    uint64_t v5 = v3;
    if ((v1[4].i8[0] & 1) == 0)
    {
      float32x2_t v6 = v1[3];
      uint64_t v10 = v3;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2687AC9E8);
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_2347F1A10;
      *(void *)(v7 + 32) = v5;
      *(float *)v8.i32 = -*((float *)&v10 + 1);
      int32x2_t v9 = (int32x2_t)vsub_f32(0, (float32x2_t)v10);
      *(int32x2_t *)(v7 + 40) = v9;
      *(int32x2_t *)(v7 + 48) = vzip1_s32(v8, (int32x2_t)v10);
      *(int32x2_t *)(v7 + 56) = vzip1_s32((int32x2_t)COERCE_UNSIGNED_INT(*((float *)&v10 + 1) + 0.0), v9);
      uint64_t v11 = (void *)v7;
      sub_2347B46A8(&v11, v6);
      if (!v11[2])
      {
        __break(1u);
        return;
      }
      uint64_t v5 = (void *)v11[4];
      swift_bridgeObjectRelease();
    }
    v1[3] = (float32x2_t)v5;
    v1[4].i8[0] = 0;
    sub_234755EC8(a1, v5, 0);
  }
}

uint64_t sub_2347B46A8(void **a1, float32x2_t a2)
{
  char v4 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    char v4 = sub_23473CFD0(v4);
  }
  uint64_t v5 = v4[2];
  v7[0] = (uint64_t)(v4 + 4);
  v7[1] = v5;
  uint64_t result = sub_2347B474C(v7, a2);
  *a1 = v4;
  return result;
}

uint64_t type metadata accessor for PerimeterManager()
{
  return self;
}

uint64_t sub_2347B474C(uint64_t *a1, float32x2_t a2)
{
  uint64_t v5 = a1[1];
  uint64_t result = sub_2347EF060();
  if (result >= v5)
  {
    if (v5 < 0) {
      goto LABEL_135;
    }
    if ((unint64_t)v5 >= 2)
    {
      uint64_t v90 = 0;
      uint64_t v91 = *a1;
      for (uint64_t i = 1; i != v5; ++i)
      {
        float32x2_t v93 = *(float32x2_t *)(v91 + 8 * i);
        float32x2_t v94 = vmul_f32(v93, a2);
        float32x2_t v95 = vadd_f32(v94, (float32x2_t)vdup_lane_s32((int32x2_t)v94, 1));
        uint64_t v96 = v90;
        do
        {
          uint64_t v97 = (float32x2_t *)(v91 + 8 * v96);
          float32x2_t v98 = vmul_f32(*v97, a2);
          if ((vcgt_f32(v95, vadd_f32(v98, (float32x2_t)vdup_lane_s32((int32x2_t)v98, 1))).u8[0] & 1) == 0) {
            break;
          }
          if (!v91) {
            goto LABEL_139;
          }
          v97[1] = *v97;
          *(float32x2_t *)(v91 + 8 * v96--) = v93;
        }
        while (v96 != -1);
        ++v90;
      }
    }
    return result;
  }
  if (v5 >= 0) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = v5 + 1;
  }
  if (v5 < -1) {
    goto LABEL_144;
  }
  uint64_t v8 = result;
  uint64_t v107 = a1;
  if (v5 < 2)
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
    uint64_t v113 = (float32x2_t *)(MEMORY[0x263F8EE78] + 32);
    if (v5 != 1)
    {
      unint64_t v15 = *(void *)(MEMORY[0x263F8EE78] + 16);
      uint64_t v14 = (char *)MEMORY[0x263F8EE78];
LABEL_101:
      uint64_t v99 = v14;
      uint64_t v109 = v11;
      if (v15 >= 2)
      {
        uint64_t v100 = *v107;
        do
        {
          unint64_t v101 = v15 - 2;
          if (v15 < 2) {
            goto LABEL_130;
          }
          if (!v100) {
            goto LABEL_143;
          }
          uint64_t v102 = v99;
          uint64_t v103 = *(void *)&v99[16 * v101 + 32];
          uint64_t v104 = *(void *)&v99[16 * v15 + 24];
          sub_2347B4E4C((float32x2_t *)(v100 + 8 * v103), (float32x2_t *)(v100 + 8 * *(void *)&v99[16 * v15 + 16]), v100 + 8 * v104, v113, a2);
          if (v2) {
            break;
          }
          if (v104 < v103) {
            goto LABEL_131;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v102 = sub_234748228((uint64_t)v102);
          }
          if (v101 >= *((void *)v102 + 2)) {
            goto LABEL_132;
          }
          uint64_t v105 = &v102[16 * v101 + 32];
          *(void *)uint64_t v105 = v103;
          *((void *)v105 + 1) = v104;
          unint64_t v106 = *((void *)v102 + 2);
          if (v15 > v106) {
            goto LABEL_133;
          }
          memmove(&v102[16 * v15 + 16], &v102[16 * v15 + 32], 16 * (v106 - v15));
          uint64_t v99 = v102;
          *((void *)v102 + 2) = v106 - 1;
          unint64_t v15 = v106 - 1;
        }
        while (v106 > 2);
      }
LABEL_92:
      swift_bridgeObjectRelease();
      *(void *)(v109 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v109 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v9 = v7 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2687AD2F8);
    uint64_t v10 = sub_2347EE810();
    *(void *)(v10 + 16) = v9;
    uint64_t v109 = v10;
    uint64_t v113 = (float32x2_t *)(v10 + 32);
  }
  uint64_t v12 = 0;
  uint64_t v13 = *a1;
  uint64_t v108 = *a1 - 8;
  uint64_t v14 = (char *)MEMORY[0x263F8EE78];
  uint64_t v110 = v8;
  uint64_t v111 = v5;
  uint64_t v112 = v13;
  while (1)
  {
    uint64_t v16 = v12++;
    if (v12 < v5)
    {
      float32x2_t v17 = *(float32x2_t *)(v13 + 8 * v12);
      int32x2_t v18 = (int32x2_t)vmul_f32(v17, a2);
      int32x2_t v19 = (int32x2_t)vmul_f32(*(float32x2_t *)(v13 + 8 * v16), a2);
      float32x2_t v20 = vadd_f32((float32x2_t)vzip1_s32(v19, v18), (float32x2_t)vzip2_s32(v19, v18));
      int8x8_t v21 = (int8x8_t)vcgt_f32((float32x2_t)vdup_lane_s32((int32x2_t)v20, 1), v20);
      uint64_t v12 = v16 + 2;
      if (v16 + 2 < v5)
      {
        while (1)
        {
          int32x2_t v22 = (int32x2_t)vmul_f32(v17, a2);
          float32x2_t v17 = *(float32x2_t *)(v13 + 8 * v12);
          int32x2_t v23 = (int32x2_t)vmul_f32(v17, a2);
          float32x2_t v24 = vadd_f32((float32x2_t)vzip1_s32(v22, v23), (float32x2_t)vzip2_s32(v22, v23));
          if ((vmvn_s8(veor_s8((int8x8_t)vcgt_f32((float32x2_t)vdup_lane_s32((int32x2_t)v24, 1), v24), v21)).u8[0] & 1) == 0) {
            break;
          }
          if (v5 == ++v12)
          {
            uint64_t v12 = v5;
            break;
          }
        }
      }
      if (v21.i8[0])
      {
        if (v12 < v16) {
          goto LABEL_136;
        }
        if (v16 < v12)
        {
          uint64_t v25 = (uint64_t *)(v108 + 8 * v12);
          uint64_t v26 = v12;
          uint64_t v27 = v16;
          uint64_t v28 = (uint64_t *)(v13 + 8 * v16);
          do
          {
            if (v27 != --v26)
            {
              if (!v13) {
                goto LABEL_142;
              }
              uint64_t v29 = *v28;
              *uint64_t v28 = *v25;
              *uint64_t v25 = v29;
            }
            ++v27;
            --v25;
            ++v28;
          }
          while (v27 < v26);
        }
      }
    }
    if (v12 >= v5) {
      goto LABEL_45;
    }
    if (__OFSUB__(v12, v16)) {
      goto LABEL_134;
    }
    if (v12 - v16 >= v8) {
      goto LABEL_45;
    }
    uint64_t v30 = v16 + v8;
    if (__OFADD__(v16, v8)) {
      goto LABEL_137;
    }
    if (v30 >= v5) {
      uint64_t v30 = v5;
    }
    if (v30 < v16) {
      break;
    }
    if (v12 != v30)
    {
      uint64_t v31 = (float32x2_t *)(v108 + 8 * v12);
      do
      {
        float32x2_t v32 = *(float32x2_t *)(v13 + 8 * v12);
        float32x2_t v33 = vmul_f32(v32, a2);
        float32x2_t v34 = vadd_f32(v33, (float32x2_t)vdup_lane_s32((int32x2_t)v33, 1));
        uint64_t v35 = v16;
        uint64_t v36 = v31;
        do
        {
          float32x2_t v37 = *v36;
          float32x2_t v38 = vmul_f32(*v36, a2);
          if ((vcgt_f32(v34, vadd_f32(v38, (float32x2_t)vdup_lane_s32((int32x2_t)v38, 1))).u8[0] & 1) == 0) {
            break;
          }
          if (!v13) {
            goto LABEL_140;
          }
          *uint64_t v36 = v32;
          v36[1] = v37;
          --v36;
          ++v35;
        }
        while (v12 != v35);
        ++v12;
        ++v31;
      }
      while (v12 != v30);
      uint64_t v12 = v30;
    }
LABEL_45:
    if (v12 < v16) {
      goto LABEL_129;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v14 = sub_234747DB8(0, *((void *)v14 + 2) + 1, 1, v14);
    }
    unint64_t v40 = *((void *)v14 + 2);
    unint64_t v39 = *((void *)v14 + 3);
    unint64_t v15 = v40 + 1;
    uint64_t v13 = v112;
    if (v40 >= v39 >> 1)
    {
      uint64_t v89 = sub_234747DB8((char *)(v39 > 1), v40 + 1, 1, v14);
      uint64_t v13 = v112;
      uint64_t v14 = v89;
    }
    *((void *)v14 + 2) = v15;
    uint64_t v41 = v14 + 32;
    uint64_t v42 = &v14[16 * v40 + 32];
    *(void *)uint64_t v42 = v16;
    *((void *)v42 + 1) = v12;
    if (v40)
    {
      while (1)
      {
        unint64_t v43 = v15 - 1;
        if (v15 >= 4)
        {
          uint64_t v48 = &v41[16 * v15];
          uint64_t v49 = *((void *)v48 - 8);
          uint64_t v50 = *((void *)v48 - 7);
          BOOL v54 = __OFSUB__(v50, v49);
          uint64_t v51 = v50 - v49;
          if (v54) {
            goto LABEL_118;
          }
          uint64_t v53 = *((void *)v48 - 6);
          uint64_t v52 = *((void *)v48 - 5);
          BOOL v54 = __OFSUB__(v52, v53);
          uint64_t v46 = v52 - v53;
          char v47 = v54;
          if (v54) {
            goto LABEL_119;
          }
          unint64_t v55 = v15 - 2;
          uint64_t v56 = &v41[16 * v15 - 32];
          uint64_t v58 = *(void *)v56;
          uint64_t v57 = *((void *)v56 + 1);
          BOOL v54 = __OFSUB__(v57, v58);
          uint64_t v59 = v57 - v58;
          if (v54) {
            goto LABEL_121;
          }
          BOOL v54 = __OFADD__(v46, v59);
          uint64_t v60 = v46 + v59;
          if (v54) {
            goto LABEL_124;
          }
          if (v60 >= v51)
          {
            unint64_t v78 = &v41[16 * v43];
            uint64_t v80 = *(void *)v78;
            uint64_t v79 = *((void *)v78 + 1);
            BOOL v54 = __OFSUB__(v79, v80);
            uint64_t v81 = v79 - v80;
            if (v54) {
              goto LABEL_128;
            }
            BOOL v71 = v46 < v81;
            goto LABEL_82;
          }
        }
        else
        {
          if (v15 != 3)
          {
            uint64_t v72 = *((void *)v14 + 4);
            uint64_t v73 = *((void *)v14 + 5);
            BOOL v54 = __OFSUB__(v73, v72);
            uint64_t v65 = v73 - v72;
            char v66 = v54;
            goto LABEL_76;
          }
          uint64_t v45 = *((void *)v14 + 4);
          uint64_t v44 = *((void *)v14 + 5);
          BOOL v54 = __OFSUB__(v44, v45);
          uint64_t v46 = v44 - v45;
          char v47 = v54;
        }
        if (v47) {
          goto LABEL_120;
        }
        unint64_t v55 = v15 - 2;
        float32x4_t v61 = &v41[16 * v15 - 32];
        uint64_t v63 = *(void *)v61;
        uint64_t v62 = *((void *)v61 + 1);
        BOOL v64 = __OFSUB__(v62, v63);
        uint64_t v65 = v62 - v63;
        char v66 = v64;
        if (v64) {
          goto LABEL_123;
        }
        uint64_t v67 = &v41[16 * v43];
        uint64_t v69 = *(void *)v67;
        uint64_t v68 = *((void *)v67 + 1);
        BOOL v54 = __OFSUB__(v68, v69);
        uint64_t v70 = v68 - v69;
        if (v54) {
          goto LABEL_126;
        }
        if (__OFADD__(v65, v70)) {
          goto LABEL_127;
        }
        if (v65 + v70 >= v46)
        {
          BOOL v71 = v46 < v70;
LABEL_82:
          if (v71) {
            unint64_t v43 = v55;
          }
          goto LABEL_84;
        }
LABEL_76:
        if (v66) {
          goto LABEL_122;
        }
        uint64_t v74 = &v41[16 * v43];
        uint64_t v76 = *(void *)v74;
        uint64_t v75 = *((void *)v74 + 1);
        BOOL v54 = __OFSUB__(v75, v76);
        uint64_t v77 = v75 - v76;
        if (v54) {
          goto LABEL_125;
        }
        if (v77 < v65) {
          goto LABEL_15;
        }
LABEL_84:
        unint64_t v82 = v43 - 1;
        if (v43 - 1 >= v15)
        {
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
          goto LABEL_138;
        }
        if (!v13) {
          goto LABEL_141;
        }
        size_t v83 = v14;
        uint64_t v84 = &v41[16 * v82];
        uint64_t v85 = *(void *)v84;
        uint64_t v86 = &v41[16 * v43];
        uint64_t v87 = *((void *)v86 + 1);
        sub_2347B4E4C((float32x2_t *)(v13 + 8 * *(void *)v84), (float32x2_t *)(v13 + 8 * *(void *)v86), v13 + 8 * v87, v113, a2);
        if (v2) {
          goto LABEL_92;
        }
        if (v87 < v85) {
          goto LABEL_115;
        }
        if (v43 > *((void *)v83 + 2)) {
          goto LABEL_116;
        }
        *(void *)uint64_t v84 = v85;
        *(void *)&v41[16 * v82 + 8] = v87;
        unint64_t v88 = *((void *)v83 + 2);
        if (v43 >= v88) {
          goto LABEL_117;
        }
        uint64_t v14 = v83;
        unint64_t v15 = v88 - 1;
        memmove(&v41[16 * v43], v86 + 16, 16 * (v88 - 1 - v43));
        *((void *)v83 + 2) = v88 - 1;
        uint64_t v13 = v112;
        if (v88 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v15 = 1;
LABEL_15:
    uint64_t v8 = v110;
    uint64_t v5 = v111;
    if (v12 >= v111)
    {
      uint64_t v11 = v109;
      goto LABEL_101;
    }
  }
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  uint64_t result = sub_2347EEE90();
  __break(1u);
  return result;
}

uint64_t sub_2347B4E4C(float32x2_t *__src, float32x2_t *a2, unint64_t a3, float32x2_t *__dst, float32x2_t a5)
{
  uint64_t v5 = __dst;
  uint64_t v8 = a2;
  uint64_t v9 = __src;
  int64_t v10 = (char *)a2 - (char *)__src;
  int64_t v11 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v11 = (char *)a2 - (char *)__src;
  }
  uint64_t v12 = v11 >> 3;
  uint64_t v13 = a3 - (void)a2;
  uint64_t v14 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v14 = a3 - (void)a2;
  }
  uint64_t v15 = v14 >> 3;
  uint64_t v31 = __dst;
  float32x2_t v32 = __src;
  if (v12 >= v14 >> 3)
  {
    if (v13 >= -7)
    {
      if (__dst != a2 || &a2[v15] <= __dst) {
        memmove(__dst, a2, 8 * v15);
      }
      int8x8_t v21 = &v5[v15];
      uint64_t v30 = v21;
      float32x2_t v32 = v8;
      if (v9 < v8 && v13 >= 8)
      {
        int32x2_t v22 = (float32x2_t *)(a3 - 8);
        while (1)
        {
          int32x2_t v23 = v22 + 1;
          float32x2_t v24 = v8 - 1;
          float32x2_t v25 = v8[-1];
          int32x2_t v26 = (int32x2_t)vmul_f32(v21[-1], a5);
          int32x2_t v27 = (int32x2_t)vmul_f32(v25, a5);
          float32x2_t v28 = vadd_f32((float32x2_t)vzip1_s32(v27, v26), (float32x2_t)vzip2_s32(v27, v26));
          if (vcgt_f32((float32x2_t)vdup_lane_s32((int32x2_t)v28, 1), v28).u8[0])
          {
            if (v23 != v8 || v22 >= v8) {
              *int32x2_t v22 = v25;
            }
            float32x2_t v32 = --v8;
            if (v24 <= v9) {
              goto LABEL_42;
            }
          }
          else
          {
            uint64_t v30 = v21 - 1;
            if (v23 < v21 || v22 >= v21 || v23 != v21) {
              *int32x2_t v22 = v21[-1];
            }
            --v21;
            if (v8 <= v9) {
              goto LABEL_42;
            }
          }
          --v22;
          if (v21 <= v5) {
            goto LABEL_42;
          }
        }
      }
      goto LABEL_42;
    }
  }
  else if (v10 >= -7)
  {
    if (__dst != __src || &__src[v12] <= __dst) {
      memmove(__dst, __src, 8 * v12);
    }
    uint64_t v16 = &v5[v12];
    uint64_t v30 = v16;
    if ((unint64_t)v8 < a3 && v10 >= 8)
    {
      do
      {
        int32x2_t v17 = (int32x2_t)vmul_f32(*v8, a5);
        int32x2_t v18 = (int32x2_t)vmul_f32(*v5, a5);
        float32x2_t v19 = vadd_f32((float32x2_t)vzip1_s32(v18, v17), (float32x2_t)vzip2_s32(v18, v17));
        if (vcgt_f32((float32x2_t)vdup_lane_s32((int32x2_t)v19, 1), v19).u8[0])
        {
          float32x2_t v20 = v8 + 1;
          if (v9 < v8 || v9 >= v20 || v9 != v8) {
            *uint64_t v9 = *v8;
          }
        }
        else
        {
          if (v9 != v5) {
            *uint64_t v9 = *v5;
          }
          uint64_t v31 = ++v5;
          float32x2_t v20 = v8;
        }
        ++v9;
        if (v5 >= v16) {
          break;
        }
        uint64_t v8 = v20;
      }
      while ((unint64_t)v20 < a3);
      float32x2_t v32 = v9;
    }
LABEL_42:
    sub_234747EB8((void **)&v32, (const void **)&v31, &v30);
    return 1;
  }
  uint64_t result = sub_2347EEF10();
  __break(1u);
  return result;
}

uint64_t sub_2347B50FC(unint64_t a1)
{
  unint64_t v1 = a1;
  unint64_t v70 = MEMORY[0x263F8EE78];
  unint64_t v60 = a1 >> 62;
  if (a1 >> 62) {
    goto LABEL_69;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
LABEL_3:
  if (!v2)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    if (v70 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_2347EEEC0();
      swift_bridgeObjectRelease();
      if (v9)
      {
LABEL_13:
        if (v9 >= 1)
        {
          uint64_t v10 = 0;
          uint64_t v59 = (void *)(v70 + 32);
          uint64_t v11 = v1 & 0xFFFFFFFFFFFFFF8;
          unint64_t v12 = v1 & 0xC000000000000001;
          uint64_t v61 = MEMORY[0x263F8EE80];
          unint64_t v62 = v1;
          unint64_t v67 = v1 + 32;
          unint64_t v64 = v1 & 0xC000000000000001;
          uint64_t v65 = v1 & 0xFFFFFFFFFFFFFF8;
          uint64_t v58 = v9;
          while (1)
          {
            uint64_t v63 = v10;
            BOOL v71 = (void *)MEMORY[0x263F8EE78];
            uint64_t v69 = v59[v10];
            if (v60) {
              break;
            }
            uint64_t v13 = *(void *)(v11 + 16);
            swift_retain_n();
            swift_bridgeObjectRetain();
            if (v13) {
              goto LABEL_19;
            }
LABEL_43:
            unint64_t v29 = MEMORY[0x263F8EE78];
LABEL_44:
            swift_bridgeObjectRelease();
            swift_release();
            if ((v29 & 0x8000000000000000) != 0 || (v29 & 0x4000000000000000) != 0)
            {
              if (sub_2347EEEC0() != 2)
              {
LABEL_15:
                swift_release();
                swift_release();
                goto LABEL_16;
              }
            }
            else if (*(void *)(v29 + 16) != 2)
            {
              goto LABEL_15;
            }
            if ((v29 & 0xC000000000000001) != 0)
            {
              unint64_t v1 = v69;
              swift_retain();
              id v34 = (id)MEMORY[0x237DC6CF0](0, v29);
              id v35 = (id)MEMORY[0x237DC6CF0](1, v29);
              swift_release();
              uint64_t v31 = (void *)v61;
            }
            else
            {
              uint64_t v30 = *(void *)(v29 + 16);
              uint64_t v31 = (void *)v61;
              unint64_t v1 = v69;
              if (!v30) {
                goto LABEL_66;
              }
              if (v30 == 1) {
                goto LABEL_68;
              }
              float32x2_t v32 = *(void **)(v29 + 32);
              float32x2_t v33 = *(void **)(v29 + 40);
              swift_retain();
              id v34 = v32;
              id v35 = v33;
              swift_release();
            }
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            unint64_t v70 = (unint64_t)v31;
            unint64_t v38 = sub_2347BFBD4(v1);
            uint64_t v39 = v31[2];
            BOOL v40 = (v37 & 1) == 0;
            uint64_t v41 = v39 + v40;
            if (__OFADD__(v39, v40)) {
              goto LABEL_67;
            }
            char v42 = v37;
            if (v31[3] >= v41)
            {
              if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
                sub_2347D4AD4();
              }
            }
            else
            {
              sub_2347CD888(v41, isUniquelyReferenced_nonNull_native);
              unint64_t v43 = sub_2347BFBD4(v1);
              if ((v42 & 1) != (v44 & 1)) {
                goto LABEL_75;
              }
              unint64_t v38 = v43;
            }
            unint64_t v1 = v62;
            uint64_t v61 = (uint64_t)v31;
            if (v42)
            {
              uint64_t v45 = v31[7] + 16 * v38;
              uint64_t v46 = *(void **)v45;

              *(void *)uint64_t v45 = v34;
              *(void *)(v45 + 8) = v35;
            }
            else
            {
              sub_2347AC230(v38, v69, (uint64_t)v34, (uint64_t)v35, v31);
              swift_retain();
            }
            swift_release_n();
            swift_bridgeObjectRelease();
            unint64_t v12 = v64;
            uint64_t v11 = v65;
LABEL_16:
            uint64_t v10 = v63 + 1;
            if (v63 + 1 == v58) {
              goto LABEL_72;
            }
          }
          swift_retain_n();
          swift_bridgeObjectRetain();
          uint64_t v13 = sub_2347EEEC0();
          if (!v13) {
            goto LABEL_43;
          }
LABEL_19:
          unint64_t v14 = 0;
          unint64_t v1 = v69;
          uint64_t v68 = OBJC_IVAR____TtC8RoomPlan13HullPointUUID_type;
          uint64_t v66 = v13;
          while (1)
          {
            if (v12)
            {
              uint64_t v15 = (char *)MEMORY[0x237DC6CF0](v14, v62);
            }
            else
            {
              if (v14 >= *(void *)(v11 + 16)) {
                goto LABEL_65;
              }
              uint64_t v15 = (char *)*(id *)(v67 + 8 * v14);
            }
            uint64_t v16 = v15;
            if (__OFADD__(v14++, 1))
            {
              __break(1u);
LABEL_65:
              __break(1u);
LABEL_66:
              __break(1u);
LABEL_67:
              __break(1u);
LABEL_68:
              __break(1u);
LABEL_69:
              swift_bridgeObjectRetain();
              uint64_t v2 = sub_2347EEEC0();
              goto LABEL_3;
            }
            int32x2_t v18 = &v15[OBJC_IVAR____TtC8RoomPlan9HullPoint_uuids];
            swift_beginAccess();
            uint64_t v19 = *(void *)v18;
            if ((*(void *)v18 & 0xC000000000000001) != 0)
            {
              swift_retain();
              swift_bridgeObjectRetain();
              char v20 = sub_2347EECF0();
              swift_bridgeObjectRelease();
              swift_release();
              if (v20)
              {
LABEL_28:
                sub_2347EEDF0();
                sub_2347EEE20();
                uint64_t v13 = v66;
                sub_2347EEE30();
                sub_2347EEE00();
                goto LABEL_21;
              }
            }
            else if (*(void *)(v19 + 16))
            {
              sub_2347EF1C0();
              swift_bridgeObjectRetain();
              sub_2347ED590();
              uint64_t v21 = sub_2347EF200();
              uint64_t v22 = -1 << *(unsigned char *)(v19 + 32);
              unint64_t v23 = v21 & ~v22;
              if ((*(void *)(v19 + 56 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23))
              {
                uint64_t v24 = ~v22;
                do
                {
                  uint64_t v25 = *(void *)(*(void *)(v19 + 48) + 8 * v23);
                  swift_retain();
                  if (sub_2347ED570())
                  {
                    int v26 = *(unsigned __int8 *)(v25 + OBJC_IVAR____TtC8RoomPlan13HullPointUUID_type);
                    int v27 = *(unsigned __int8 *)(v69 + v68);
                    swift_release();
                    BOOL v28 = v26 == v27;
                    unint64_t v1 = v69;
                    if (v28)
                    {
                      swift_bridgeObjectRelease();
                      unint64_t v12 = v64;
                      uint64_t v11 = v65;
                      goto LABEL_28;
                    }
                  }
                  else
                  {
                    swift_release();
                  }
                  unint64_t v23 = (v23 + 1) & v24;
                }
                while (((*(void *)(v19 + 56 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) != 0);

                swift_bridgeObjectRelease();
                unint64_t v12 = v64;
                uint64_t v11 = v65;
                uint64_t v13 = v66;
              }
              else
              {

                swift_bridgeObjectRelease();
                unint64_t v12 = v64;
                uint64_t v11 = v65;
              }
              goto LABEL_21;
            }

LABEL_21:
            if (v14 == v13)
            {
              unint64_t v29 = (unint64_t)v71;
              unint64_t v1 = v62;
              goto LABEL_44;
            }
          }
        }
        goto LABEL_74;
      }
    }
    else
    {
      uint64_t v9 = *(void *)((v70 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v9) {
        goto LABEL_13;
      }
    }
    uint64_t v61 = MEMORY[0x263F8EE80];
LABEL_72:
    swift_bridgeObjectRelease();
    uint64_t v47 = sub_234754C2C(v61);
    sub_234755EC8(v1, 0, 1);
    uint64_t v49 = v48;
    int64_t v50 = sub_23475613C(v1, 0.000001);
    unint64_t v51 = sub_234757328(v50, 0.07);
    swift_bridgeObjectRelease();
    unint64_t v52 = sub_234757DDC(v51);
    unint64_t v53 = sub_234759168(v52, v51);
    swift_bridgeObjectRelease();
    unint64_t v54 = sub_234759610(v53, v51);
    swift_bridgeObjectRelease();
    unint64_t v55 = sub_234759168(v54, v51);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v56 = sub_23475A728(v55, v49, v61, v47);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    return v56;
  }
  if (v2 >= 1)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      uint64_t v3 = 0;
      do
      {
        uint64_t v4 = MEMORY[0x237DC6CF0](v3++, v1);
        uint64_t v5 = (uint64_t *)(v4 + OBJC_IVAR____TtC8RoomPlan9HullPoint_uuids);
        swift_beginAccess();
        uint64_t v6 = *v5;
        swift_bridgeObjectRetain();
        swift_unknownObjectRelease();
        sub_2346D9944(v6);
      }
      while (v2 != v3);
    }
    else
    {
      uint64_t v7 = 0;
      do
      {
        ++v7;
        swift_beginAccess();
        uint64_t v8 = swift_bridgeObjectRetain();
        sub_2346D9944(v8);
      }
      while (v2 != v7);
    }
    goto LABEL_11;
  }
  __break(1u);
LABEL_74:
  __break(1u);
LABEL_75:
  type metadata accessor for HullPointUUID();
  uint64_t result = sub_2347EF0F0();
  __break(1u);
  return result;
}

uint64_t sub_2347B58A4(int64_t a1)
{
  uint64_t v186 = sub_2347ED5C0();
  uint64_t v189 = *(void *)(v186 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v186);
  uint64_t v188 = (char *)&v181 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  BOOL v187 = (char *)&v181 - v4;
  unint64_t v206 = MEMORY[0x263F8EE78];
  unint64_t v194 = (char *)((unint64_t)a1 >> 62);
  if ((unint64_t)a1 >> 62) {
    goto LABEL_180;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (2)
  {
    if (v5)
    {
      if (v5 < 1)
      {
        __break(1u);
        goto LABEL_185;
      }
      if ((a1 & 0xC000000000000001) != 0)
      {
        uint64_t v6 = 0;
        do
        {
          uint64_t v7 = MEMORY[0x237DC6CF0](v6++, a1);
          uint64_t v8 = (uint64_t *)(v7 + OBJC_IVAR____TtC8RoomPlan9HullPoint_uuids);
          swift_beginAccess();
          uint64_t v9 = *v8;
          swift_bridgeObjectRetain();
          swift_unknownObjectRelease();
          sub_2346D9944(v9);
        }
        while (v5 != v6);
      }
      else
      {
        uint64_t v10 = 0;
        do
        {
          ++v10;
          swift_beginAccess();
          uint64_t v11 = swift_bridgeObjectRetain();
          sub_2346D9944(v11);
        }
        while (v5 != v10);
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v12 = v206;
    if (v206 >> 62)
    {
      unint64_t v179 = v206;
      swift_bridgeObjectRetain();
      unint64_t v12 = v179;
      uint64_t v13 = sub_2347EEEC0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v13 = *(void *)((v206 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    unint64_t v190 = v12;
    if (!v13)
    {
      uint64_t v19 = MEMORY[0x263F8EE80];
LABEL_68:
      swift_bridgeObjectRelease();
      char v197 = (void *)v19;
      uint64_t v201 = sub_234754C2C(v19);
      unint64_t v55 = sub_234757328(a1, 0.07);
      unint64_t v56 = v55;
      uint64_t v205 = MEMORY[0x263F8EE78];
      if (v55 >> 62)
      {
        uint64_t v57 = sub_2347EEEC0();
        if (v57) {
          goto LABEL_70;
        }
      }
      else
      {
        uint64_t v57 = *(void *)((v55 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v57)
        {
LABEL_70:
          if (v57 < 1) {
            goto LABEL_186;
          }
          uint64_t v58 = 0;
          unint64_t v203 = v56 & 0xC000000000000001;
          uint64_t v196 = (void (**)(char *, uint64_t, uint64_t))(v189 + 16);
          uint64_t v195 = (void (**)(uint64_t, char *, int64_t))(v189 + 32);
          simd_float3 v198 = (simd_float3)xmmword_2347F2000;
          uint64_t v202 = v57;
          do
          {
            if (v203) {
              uint64_t v59 = (char *)MEMORY[0x237DC6CF0](v58, v56);
            }
            else {
              uint64_t v59 = (char *)*(id *)(v56 + 8 * v58 + 32);
            }
            unint64_t v60 = v59;
            uint64_t v61 = (uint64_t *)&v59[OBJC_IVAR____TtC8RoomPlan9HullPoint_uuids];
            swift_beginAccess();
            uint64_t v62 = *v61;
            if ((*v61 & 0xC000000000000001) != 0)
            {
              swift_bridgeObjectRetain();
              uint64_t v63 = sub_2347EECB0();
              if (!v63) {
                goto LABEL_84;
              }
            }
            else
            {
              uint64_t v63 = *(void *)(v62 + 16);
              swift_bridgeObjectRetain();
              if (!v63)
              {
LABEL_84:
                swift_bridgeObjectRelease();
                uint64_t v64 = MEMORY[0x263F8EE78];
                goto LABEL_88;
              }
            }
            if (v63 <= 0)
            {
              uint64_t v64 = MEMORY[0x263F8EE78];
            }
            else
            {
              __swift_instantiateConcreteTypeFromMangledName(&qword_2687AE8B0);
              uint64_t v64 = swift_allocObject();
              int64_t v65 = _swift_stdlib_malloc_size((const void *)v64);
              uint64_t v66 = v65 - 32;
              if (v65 < 32) {
                uint64_t v66 = v65 - 25;
              }
              *(void *)(v64 + 16) = v63;
              *(void *)(v64 + 24) = (2 * (v66 >> 3)) | 1;
            }
            swift_bridgeObjectRetain();
            a1 = sub_2347C70F0((uint64_t)&v206, (void *)(v64 + 32), v63, v62);
            sub_2346DC0DC();
            if (a1 != v63) {
              goto LABEL_175;
            }
            swift_bridgeObjectRelease();
LABEL_88:
            uint64_t v67 = *v61;
            if ((v67 & 0xC000000000000001) != 0)
            {
              swift_bridgeObjectRetain();
              uint64_t v68 = sub_2347EECB0();
              swift_bridgeObjectRelease();
              if (v68 < 2) {
                goto LABEL_104;
              }
            }
            else if (*(uint64_t *)(v67 + 16) < 2)
            {
LABEL_104:

LABEL_105:
              swift_release();
              goto LABEL_73;
            }
            if (v64 < 0 || (v64 & 0x4000000000000000) != 0)
            {
              swift_retain();
              uint64_t v69 = sub_2347EEEC0();
              if (v69)
              {
LABEL_93:
                if ((v64 & 0xC000000000000001) != 0)
                {
                  uint64_t v70 = MEMORY[0x237DC6CF0](0, v64);
                }
                else
                {
                  if (!*(void *)(v64 + 16)) {
                    goto LABEL_179;
                  }
                  uint64_t v70 = *(void *)(v64 + 32);
                  swift_retain();
                }
                swift_release();
                BOOL v71 = v197;
                if (!v197[2]) {
                  goto LABEL_107;
                }
                uint64_t v72 = swift_retain();
                unint64_t v73 = sub_2347BFBD4(v72);
                if ((v74 & 1) == 0)
                {
                  swift_release();
LABEL_107:
                  swift_release();
                  swift_release();

LABEL_109:
                  uint64_t v57 = v202;
                  goto LABEL_73;
                }
                uint64_t v75 = v71[7] + 16 * v73;
                uint64_t v76 = *(void **)(v75 + 8);
                uint64_t v77 = v201;
                uint64_t v78 = *(void *)(v201 + 16);
                uint64_t v200 = (char *)*(id *)v75;
                a1 = v76;
                if (!v78 || (unint64_t v79 = sub_2347BFBD4(v70), (v81 & 1) == 0))
                {

                  swift_release_n();
                  swift_release();

                  goto LABEL_109;
                }
                v80.i64[0] = *(void *)(*(void *)(v77 + 56) + 8 * v79);
                int32x4_t v199 = v80;
                swift_release();
                unint64_t v82 = v69 - 1;
                if (__OFSUB__(v69, 1)) {
                  goto LABEL_187;
                }
                if ((v64 & 0xC000000000000001) != 0)
                {
                  uint64_t v83 = MEMORY[0x237DC6CF0](v82, v64);
                  swift_release();
                  uint64_t v57 = v202;
                }
                else
                {
                  if ((v82 & 0x8000000000000000) != 0) {
                    goto LABEL_188;
                  }
                  uint64_t v57 = v202;
                  if (v82 >= *(void *)(v64 + 16)) {
                    goto LABEL_189;
                  }
                  uint64_t v83 = *(void *)(v64 + 8 * v82 + 32);
                  swift_retain();
                  swift_release();
                }
                uint64_t v84 = v197;
                if (v197[2])
                {
                  uint64_t v85 = swift_retain();
                  unint64_t v86 = sub_2347BFBD4(v85);
                  if (v87)
                  {
                    uint64_t v88 = v84[7] + 16 * v86;
                    uint64_t v89 = *(void **)(v88 + 8);
                    uint64_t v90 = v201;
                    uint64_t v91 = *(void *)(v201 + 16);
                    unint64_t v194 = (char *)*(id *)v88;
                    uint64_t v92 = v89;
                    if (!v91 || (unint64_t v93 = sub_2347BFBD4(v83), (v95 & 1) == 0))
                    {

                      swift_release();
                      swift_release_n();

                      goto LABEL_109;
                    }
                    v94.i64[0] = *(void *)(*(void *)(v90 + 56) + 8 * v93);
                    int32x4_t v193 = v94;
                    swift_release();
                    char v102 = *(unsigned char *)(v83 + OBJC_IVAR____TtC8RoomPlan13HullPointUUID_hasThickness);
                    float32x2_t v103 = *(float32x2_t *)&v60[OBJC_IVAR____TtC8RoomPlan9HullPoint_position];
                    if (*(unsigned char *)(v70 + OBJC_IVAR____TtC8RoomPlan13HullPointUUID_hasThickness))
                    {
                      id v183 = (id)a1;
                      id v182 = v92;
                      if (v102)
                      {
                        float32x2_t v104 = vadd_f32(v103, vmul_f32(vadd_f32(*(float32x2_t *)&v200[OBJC_IVAR____TtC8RoomPlan9HullPoint_position], *(float32x2_t *)(a1 + OBJC_IVAR____TtC8RoomPlan9HullPoint_position)), (float32x2_t)0xBF000000BF000000));
                        float32x2_t v105 = vmul_f32(v104, v104);
                        v99.i64[0] = 1065353216;
                        if (vaddv_f32(v105) >= 0.0001)
                        {
                          unsigned __int32 v106 = vadd_f32(v105, (float32x2_t)vdup_lane_s32((int32x2_t)v105, 1)).u32[0];
                          float32x2_t v107 = vrsqrte_f32((float32x2_t)v106);
                          float32x2_t v108 = vmul_f32(v107, vrsqrts_f32((float32x2_t)v106, vmul_f32(v107, v107)));
                          *(float32x2_t *)v98.i8 = vmul_f32(v108, v108);
                          *(float32x2_t *)v99.i8 = vmul_n_f32(v104, vmul_f32(v108, vrsqrts_f32((float32x2_t)v106, *(float32x2_t *)v98.i8)).f32[0]);
                        }
                        float32x2_t v109 = vsub_f32(vmul_f32(vadd_f32(*(float32x2_t *)&v194[OBJC_IVAR____TtC8RoomPlan9HullPoint_position], *(float32x2_t *)&v92[OBJC_IVAR____TtC8RoomPlan9HullPoint_position]), (float32x2_t)0x3F0000003F000000), v103);
                        *(float32x2_t *)v96.i8 = vmul_f32(v109, v109);
                        *(void *)&long long v97 = 3212836864;
                        if (vaddv_f32(*(float32x2_t *)v96.i8) >= 0.0001)
                        {
                          unsigned __int32 v110 = vadd_f32(*(float32x2_t *)v96.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v96.i8, 1)).u32[0];
                          float32x2_t v111 = vrsqrte_f32((float32x2_t)v110);
                          float32x2_t v112 = vmul_f32(v111, vrsqrts_f32((float32x2_t)v110, vmul_f32(v111, v111)));
                          *(float32x2_t *)v98.i8 = vmul_f32(v112, v112);
                          *(float32x2_t *)v96.i8 = vmul_f32(v112, vrsqrts_f32((float32x2_t)v110, *(float32x2_t *)v98.i8));
                          *(float32x2_t *)&long long v97 = vmul_n_f32(v109, *(float *)v96.i32);
                        }
                        long long v191 = v97;
                        float v113 = *(float *)&v99.i32[1];
                        *(float *)v96.i32 = -*(float *)&v99.i32[1];
                        float v114 = *((float *)&v97 + 1);
                        v115.i32[1] = 0;
                        int32x4_t v199 = v96;
                        v115.f32[0] = -*(float *)&v99.i32[1];
                        v115.i64[1] = v99.i64[0];
                        *(float *)v98.i32 = -*((float *)&v97 + 1);
                        v116.i32[1] = 0;
                        int32x4_t v193 = v98;
                        v116.f32[0] = -*((float *)&v97 + 1);
                        v116.i64[1] = v97;
                        int32x4_t v192 = v99;
                        if (_simd_orient_vf3(v115, v116, v198) > 0.0)
                        {
                          v101.i64[1] = v192.i64[1];
                          *(float32x2_t *)v101.i8 = vsub_f32(0, *(float32x2_t *)v192.i8);
                          *(int8x8_t *)v98.i8 = vext_s8((int8x8_t)vadd_f32(*(float32x2_t *)v192.i8, 0), *(int8x8_t *)v101.i8, 4uLL);
                          *(float *)&v101.i32[1] = 0.0 - v113;
                          *((void *)&v100 + 1) = *((void *)&v191 + 1);
                          *(float32x2_t *)&long long v100 = vsub_f32(0, *(float32x2_t *)&v191);
                          *(int8x8_t *)v99.i8 = vext_s8((int8x8_t)vadd_f32(*(float32x2_t *)&v191, 0), *(int8x8_t *)&v100, 4uLL);
                          *((float *)&v100 + 1) = 0.0 - v114;
                          goto LABEL_168;
                        }
                        int32x4_t v101 = v192;
                        *(int32x2_t *)v98.i8 = vzip1_s32(*(int32x2_t *)v199.i8, *(int32x2_t *)v192.i8);
                        long long v100 = v191;
                        *(int32x2_t *)v99.i8 = vzip1_s32(*(int32x2_t *)v193.i8, *(int32x2_t *)&v191);
LABEL_163:
                        uint64_t v165 = v100;
                        uint64_t v166 = v99.i64[0];
                        *(void *)&long long v100 = v101.i64[0];
                        v99.i64[0] = v98.i64[0];
                        uint64_t v157 = v70;
                        uint64_t v158 = v83;
                        v101.i64[0] = v165;
                        v98.i64[0] = v166;
LABEL_169:
                        long long v191 = v100;
                        int32x4_t v193 = v99;
                        int32x4_t v192 = v101;
                        int32x4_t v199 = v98;
                        float v173 = _simd_orient_vf3((simd_float3)vextq_s8((int8x16_t)vzip1q_s32((int32x4_t)0, v99), (int8x16_t)0, 4uLL), (simd_float3)vextq_s8((int8x16_t)vzip1q_s32((int32x4_t)0, v98), (int8x16_t)0, 4uLL), v198);
                        char v174 = *v196;
                        a1 = v186;
                        (*v196)(v187, v157 + OBJC_IVAR____TtC8RoomPlan13HullPointUUID_uuid, v186);
                        uint64_t v185 = v83;
                        uint64_t v189 = v157;
                        int v175 = *(unsigned __int8 *)(v157 + OBJC_IVAR____TtC8RoomPlan13HullPointUUID_type);
                        v174(v188, v158 + OBJC_IVAR____TtC8RoomPlan13HullPointUUID_uuid, a1);
                        unint64_t v190 = v158;
                        BOOL v184 = *(unsigned __int8 *)(v158 + OBJC_IVAR____TtC8RoomPlan13HullPointUUID_type) == 1;
                        type metadata accessor for JunctionPoint();
                        uint64_t v176 = swift_allocObject();
                        *(float32x2_t *)(v176 + 16) = v103;
                        id v177 = *v195;
                        (*v195)(v176 + OBJC_IVAR____TtC8RoomPlan13JunctionPoint_leftUUID, v187, a1);
                        *(unsigned char *)(v176 + OBJC_IVAR____TtC8RoomPlan13JunctionPoint_isLeftCurved) = v175 == 1;
                        *(void *)(v176 + OBJC_IVAR____TtC8RoomPlan13JunctionPoint_leftDirection) = v191;
                        *(void *)(v176 + OBJC_IVAR____TtC8RoomPlan13JunctionPoint_leftNormal) = v193.i64[0];
                        v177(v176 + OBJC_IVAR____TtC8RoomPlan13JunctionPoint_rightUUID, v188, a1);
                        *(unsigned char *)(v176 + OBJC_IVAR____TtC8RoomPlan13JunctionPoint_isRightCurved) = v184;
                        *(void *)(v176 + OBJC_IVAR____TtC8RoomPlan13JunctionPoint_rightDirection) = v192.i64[0];
                        *(void *)(v176 + OBJC_IVAR____TtC8RoomPlan13JunctionPoint_rightNormal) = v199.i64[0];
                        *(unsigned char *)(v176 + OBJC_IVAR____TtC8RoomPlan13JunctionPoint_configuration) = v173 >= 0.0;
                        swift_retain();
                        swift_retain();
                        uint64_t v178 = swift_retain();
                        MEMORY[0x237DC6730](v178);
                        if (*(void *)((v205 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v205 & 0xFFFFFFFFFFFFFF8)
                                                                                           + 0x18) >> 1)
                          sub_2347EE800();
                        sub_2347EE820();
                        sub_2347EE7F0();

                        swift_release();
                        swift_release();
                        swift_release();
                        swift_release();
                        swift_release();

                        goto LABEL_109;
                      }
                      float32x2_t v124 = *(float32x2_t *)&v194[OBJC_IVAR____TtC8RoomPlan9HullPoint_position];
                      float32x2_t v125 = *(float32x2_t *)&v92[OBJC_IVAR____TtC8RoomPlan9HullPoint_position];
                      float32x2_t v126 = vsub_f32(v125, v124);
                      float32x2_t v127 = vmul_f32(v126, v126);
                      if (vaddv_f32(v127) >= 0.0001)
                      {
                        unsigned __int32 v134 = vadd_f32(v127, (float32x2_t)vdup_lane_s32((int32x2_t)v127, 1)).u32[0];
                        float32x2_t v135 = vrsqrte_f32((float32x2_t)v134);
                        float32x2_t v136 = vmul_f32(v135, vrsqrts_f32((float32x2_t)v134, vmul_f32(v135, v135)));
                        *(float32x2_t *)&long long v100 = vmul_n_f32(v126, vmul_f32(v136, vrsqrts_f32((float32x2_t)v134, vmul_f32(v136, v136))).f32[0]);
                      }
                      else
                      {
                        *(void *)&long long v100 = 3212836864;
                      }
                      int32x4_t v99 = v193;
                      float v137 = vaddv_f32(vmul_f32(vadd_f32(v103, vmul_f32(vadd_f32(v124, v125), (float32x2_t)0xBF000000BF000000)), *(float32x2_t *)&v100));
                      float32x2_t v138 = vmul_f32(vadd_f32(*(float32x2_t *)&v200[OBJC_IVAR____TtC8RoomPlan9HullPoint_position], *(float32x2_t *)(a1 + OBJC_IVAR____TtC8RoomPlan9HullPoint_position)), (float32x2_t)0x3F0000003F000000);
                      if (v137 < 0.0)
                      {
                        float32x2_t v139 = vsub_f32(v103, v138);
                        float32x2_t v140 = vmul_f32(v139, v139);
                        if (vaddv_f32(v140) >= 0.0001)
                        {
                          unsigned __int32 v162 = vadd_f32(v140, (float32x2_t)vdup_lane_s32((int32x2_t)v140, 1)).u32[0];
                          float32x2_t v163 = vrsqrte_f32((float32x2_t)v162);
                          float32x2_t v164 = vmul_f32(v163, vrsqrts_f32((float32x2_t)v162, vmul_f32(v163, v163)));
                          *(float32x2_t *)v101.i8 = vmul_n_f32(v139, vmul_f32(v164, vrsqrts_f32((float32x2_t)v162, vmul_f32(v164, v164))).f32[0]);
                        }
                        else
                        {
                          v101.i64[0] = 1065353216;
                        }
                        v139.f32[0] = -*(float *)&v101.i32[1];
                        *(int32x2_t *)v98.i8 = vzip1_s32((int32x2_t)v139, *(int32x2_t *)v101.i8);
                        goto LABEL_163;
                      }
                      float32x2_t v149 = vsub_f32(v138, v103);
                      float32x2_t v150 = vmul_f32(v149, v149);
                      if (vaddv_f32(v150) >= 0.0001)
                      {
                        unsigned __int32 v170 = vadd_f32(v150, (float32x2_t)vdup_lane_s32((int32x2_t)v150, 1)).u32[0];
                        float32x2_t v171 = vrsqrte_f32((float32x2_t)v170);
                        float32x2_t v172 = vmul_f32(v171, vrsqrts_f32((float32x2_t)v170, vmul_f32(v171, v171)));
                        *(float32x2_t *)v101.i8 = vmul_n_f32(v149, vmul_f32(v172, vrsqrts_f32((float32x2_t)v170, vmul_f32(v172, v172))).f32[0]);
                      }
                      else
                      {
                        v101.i64[0] = 1065353216;
                      }
                      v149.f32[0] = -*(float *)&v101.i32[1];
                      *(int32x2_t *)v98.i8 = vzip1_s32((int32x2_t)v149, *(int32x2_t *)v101.i8);
                    }
                    else
                    {
                      float32x2_t v117 = *(float32x2_t *)&v200[OBJC_IVAR____TtC8RoomPlan9HullPoint_position];
                      float32x2_t v118 = *(float32x2_t *)(a1 + OBJC_IVAR____TtC8RoomPlan9HullPoint_position);
                      float32x2_t v119 = vadd_f32(v103, vmul_f32(vadd_f32(v117, v118), (float32x2_t)0xBF000000BF000000));
                      float32x2_t v120 = vsub_f32(v118, v117);
                      float32x2_t v121 = vmul_f32(v120, v120);
                      unsigned __int32 v122 = vadd_f32(v121, (float32x2_t)vdup_lane_s32((int32x2_t)v121, 1)).u32[0];
                      float v123 = vaddv_f32(v121);
                      if ((*(unsigned char *)(v83 + OBJC_IVAR____TtC8RoomPlan13HullPointUUID_hasThickness) & 1) == 0)
                      {
                        if (v123 < 0.0001)
                        {
                          v101.i64[0] = 1065353216;
                        }
                        else
                        {
                          float32x2_t v141 = vrsqrte_f32((float32x2_t)v122);
                          float32x2_t v142 = vmul_f32(v141, vrsqrts_f32((float32x2_t)v122, vmul_f32(v141, v141)));
                          *(float32x2_t *)v101.i8 = vmul_n_f32(v120, vmul_f32(v142, vrsqrts_f32((float32x2_t)v122, vmul_f32(v142, v142))).f32[0]);
                        }
                        float32x2_t v143 = *(float32x2_t *)&v194[OBJC_IVAR____TtC8RoomPlan9HullPoint_position];
                        float32x2_t v144 = *(float32x2_t *)&v92[OBJC_IVAR____TtC8RoomPlan9HullPoint_position];
                        float32x2_t v145 = vsub_f32(v144, v143);
                        float32x2_t v146 = vmul_f32(v145, v145);
                        if (vaddv_f32(v146) >= 0.0001)
                        {
                          unsigned __int32 v151 = vadd_f32(v146, (float32x2_t)vdup_lane_s32((int32x2_t)v146, 1)).u32[0];
                          float32x2_t v152 = vrsqrte_f32((float32x2_t)v151);
                          float32x2_t v153 = vmul_f32(v152, vrsqrts_f32((float32x2_t)v151, vmul_f32(v152, v152)));
                          *(float32x2_t *)&long long v100 = vmul_n_f32(v145, vmul_f32(v153, vrsqrts_f32((float32x2_t)v151, vmul_f32(v153, v153))).f32[0]);
                        }
                        else
                        {
                          *(void *)&long long v100 = 3212836864;
                        }
                        int32x4_t v98 = v199;
                        int32x4_t v99 = v193;
                        int32x2_t v154 = (int32x2_t)vmul_f32(v119, *(float32x2_t *)v101.i8);
                        int32x2_t v155 = (int32x2_t)vmul_f32(vadd_f32(v103, vmul_f32(vadd_f32(v143, v144), (float32x2_t)0xBF000000BF000000)), *(float32x2_t *)&v100);
                        float32x2_t v156 = vadd_f32((float32x2_t)vzip1_s32(v154, v155), (float32x2_t)vzip2_s32(v154, v155));
                        if (vmul_lane_f32(v156, v156, 1).f32[0] >= 0.0)
                        {

                          swift_release();
                          swift_release();

                          goto LABEL_109;
                        }
                        id v182 = v92;
                        id v183 = (id)a1;
                        uint64_t v157 = v83;
                        uint64_t v158 = v70;
                        if (v156.f32[0] > 0.0) {
                          goto LABEL_163;
                        }
                        goto LABEL_169;
                      }
                      if (v123 < 0.0001)
                      {
                        v101.i64[0] = 1065353216;
                      }
                      else
                      {
                        float32x2_t v128 = vrsqrte_f32((float32x2_t)v122);
                        float32x2_t v129 = vmul_f32(v128, vrsqrts_f32((float32x2_t)v122, vmul_f32(v128, v128)));
                        *(float32x2_t *)v101.i8 = vmul_n_f32(v120, vmul_f32(v129, vrsqrts_f32((float32x2_t)v122, vmul_f32(v129, v129))).f32[0]);
                      }
                      float v130 = vaddv_f32(vmul_f32(v119, *(float32x2_t *)v101.i8));
                      float32x2_t v131 = vmul_f32(vadd_f32(*(float32x2_t *)&v194[OBJC_IVAR____TtC8RoomPlan9HullPoint_position], *(float32x2_t *)&v92[OBJC_IVAR____TtC8RoomPlan9HullPoint_position]), (float32x2_t)0x3F0000003F000000);
                      id v183 = (id)a1;
                      id v182 = v92;
                      if (v130 > 0.0)
                      {
                        float32x2_t v132 = vsub_f32(v131, v103);
                        float32x2_t v133 = vmul_f32(v132, v132);
                        if (vaddv_f32(v133) >= 0.0001)
                        {
                          unsigned __int32 v159 = vadd_f32(v133, (float32x2_t)vdup_lane_s32((int32x2_t)v133, 1)).u32[0];
                          float32x2_t v160 = vrsqrte_f32((float32x2_t)v159);
                          float32x2_t v161 = vmul_f32(v160, vrsqrts_f32((float32x2_t)v159, vmul_f32(v160, v160)));
                          *(float32x2_t *)&long long v100 = vmul_n_f32(v132, vmul_f32(v161, vrsqrts_f32((float32x2_t)v159, vmul_f32(v161, v161))).f32[0]);
                        }
                        else
                        {
                          *(void *)&long long v100 = 3212836864;
                        }
                        int32x4_t v98 = v199;
                        v132.f32[0] = -*((float *)&v100 + 1);
                        *(int32x2_t *)v99.i8 = vzip1_s32((int32x2_t)v132, *(int32x2_t *)&v100);
                        goto LABEL_163;
                      }
                      float32x2_t v147 = vsub_f32(v103, v131);
                      float32x2_t v148 = vmul_f32(v147, v147);
                      if (vaddv_f32(v148) >= 0.0001)
                      {
                        unsigned __int32 v167 = vadd_f32(v148, (float32x2_t)vdup_lane_s32((int32x2_t)v148, 1)).u32[0];
                        float32x2_t v168 = vrsqrte_f32((float32x2_t)v167);
                        float32x2_t v169 = vmul_f32(v168, vrsqrts_f32((float32x2_t)v167, vmul_f32(v168, v168)));
                        *(float32x2_t *)&long long v100 = vmul_n_f32(v147, vmul_f32(v169, vrsqrts_f32((float32x2_t)v167, vmul_f32(v169, v169))).f32[0]);
                      }
                      else
                      {
                        *(void *)&long long v100 = 3212836864;
                      }
                      int32x4_t v98 = v199;
                      v147.f32[0] = -*((float *)&v100 + 1);
                      *(int32x2_t *)v99.i8 = vzip1_s32((int32x2_t)v147, *(int32x2_t *)&v100);
                    }
LABEL_168:
                    uint64_t v157 = v83;
                    uint64_t v158 = v70;
                    goto LABEL_169;
                  }

                  swift_release();
                }
                else
                {
                }
                swift_release();
                goto LABEL_105;
              }
            }
            else
            {
              uint64_t v69 = *(void *)(v64 + 16);
              swift_retain();
              if (v69) {
                goto LABEL_93;
              }
            }

            swift_release_n();
LABEL_73:
            ++v58;
          }
          while (v57 != v58);
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v205;
    }
    if (v13 < 1)
    {
LABEL_185:
      __break(1u);
LABEL_186:
      __break(1u);
LABEL_187:
      __break(1u);
LABEL_188:
      __break(1u);
LABEL_189:
      __break(1u);
      goto LABEL_190;
    }
    unint64_t v14 = 0;
    v193.i64[0] = v12 + 32;
    uint64_t v15 = (char *)(a1 & 0xFFFFFFFFFFFFFF8);
    if (a1 < 0) {
      uint64_t v16 = a1;
    }
    else {
      uint64_t v16 = a1 & 0xFFFFFFFFFFFFFF8;
    }
    *(void *)&long long v191 = v16;
    unint64_t v17 = a1 & 0xC000000000000001;
    uint64_t v18 = a1 + 32;
    uint64_t v19 = MEMORY[0x263F8EE80];
    uint64_t v195 = (void (**)(uint64_t, char *, int64_t))a1;
    uint64_t v200 = (char *)(a1 & 0xFFFFFFFFFFFFFF8);
    v199.i64[0] = a1 & 0xC000000000000001;
    v198.i64[0] = a1 + 32;
    v192.i64[0] = v13;
    while (2)
    {
      char v197 = (void *)v19;
      uint64_t v196 = v14;
      unint64_t v20 = *(void *)(v193.i64[0] + 8 * (void)v14);
      uint64_t v204 = (void *)MEMORY[0x263F8EE78];
      unint64_t v203 = v20;
      if (v194)
      {
        swift_retain_n();
        swift_bridgeObjectRetain();
        uint64_t v21 = sub_2347EEEC0();
        if (!v21)
        {
LABEL_46:
          unint64_t v36 = MEMORY[0x263F8EE78];
          goto LABEL_47;
        }
      }
      else
      {
        uint64_t v21 = *((void *)v15 + 2);
        swift_retain_n();
        swift_bridgeObjectRetain();
        if (!v21) {
          goto LABEL_46;
        }
      }
      unint64_t v22 = 0;
      a1 = v203;
      uint64_t v202 = OBJC_IVAR____TtC8RoomPlan13HullPointUUID_type;
      uint64_t v201 = v21;
      do
      {
        if (v17)
        {
          unint64_t v23 = (char *)MEMORY[0x237DC6CF0](v22, v195);
        }
        else
        {
          if (v22 >= *((void *)v15 + 2)) {
            goto LABEL_174;
          }
          unint64_t v23 = (char *)*(id *)(v18 + 8 * v22);
        }
        uint64_t v24 = v23;
        if (__OFADD__(v22++, 1))
        {
          __break(1u);
LABEL_174:
          __break(1u);
LABEL_175:
          __break(1u);
          goto LABEL_176;
        }
        int v26 = &v23[OBJC_IVAR____TtC8RoomPlan9HullPoint_uuids];
        swift_beginAccess();
        uint64_t v27 = *(void *)v26;
        if ((*(void *)v26 & 0xC000000000000001) != 0)
        {
          swift_retain();
          swift_bridgeObjectRetain();
          char v28 = sub_2347EECF0();
          swift_bridgeObjectRelease();
          swift_release();
          if ((v28 & 1) == 0) {
            goto LABEL_24;
          }
LABEL_32:
          sub_2347EEDF0();
          sub_2347EEE20();
          a1 = v203;
          sub_2347EEE30();
          sub_2347EEE00();
        }
        else
        {
          if (!*(void *)(v27 + 16))
          {
LABEL_24:

            continue;
          }
          sub_2347EF1C0();
          swift_bridgeObjectRetain();
          sub_2347ED590();
          uint64_t v29 = sub_2347EF200();
          uint64_t v30 = -1 << *(unsigned char *)(v27 + 32);
          unint64_t v31 = v29 & ~v30;
          if ((*(void *)(v27 + 56 + ((v31 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v31))
          {
            uint64_t v32 = ~v30;
            do
            {
              uint64_t v33 = *(void *)(*(void *)(v27 + 48) + 8 * v31);
              swift_retain();
              if (sub_2347ED570())
              {
                int v34 = *(unsigned __int8 *)(v33 + OBJC_IVAR____TtC8RoomPlan13HullPointUUID_type);
                int v35 = *(unsigned __int8 *)(v203 + v202);
                swift_release();
                if (v34 == v35)
                {
                  swift_bridgeObjectRelease();
                  uint64_t v15 = v200;
                  unint64_t v17 = v199.i64[0];
                  uint64_t v18 = v198.i64[0];
                  goto LABEL_32;
                }
              }
              else
              {
                swift_release();
              }
              unint64_t v31 = (v31 + 1) & v32;
            }
            while (((*(void *)(v27 + 56 + ((v31 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v31) & 1) != 0);

            swift_bridgeObjectRelease();
            uint64_t v15 = v200;
            unint64_t v17 = v199.i64[0];
            uint64_t v18 = v198.i64[0];
            a1 = v203;
          }
          else
          {

            swift_bridgeObjectRelease();
            uint64_t v15 = v200;
            unint64_t v17 = v199.i64[0];
            uint64_t v18 = v198.i64[0];
          }
        }
      }
      while (v22 != v201);
      unint64_t v36 = (unint64_t)v204;
      a1 = (int64_t)v195;
LABEL_47:
      swift_bridgeObjectRelease();
      swift_release();
      if ((v36 & 0x8000000000000000) == 0 && (v36 & 0x4000000000000000) == 0)
      {
        if (*(void *)(v36 + 16) == 2) {
          goto LABEL_50;
        }
LABEL_19:
        swift_release();
        swift_release();
LABEL_20:
        unint64_t v14 = (void (**)(char *, uint64_t, uint64_t))((char *)v196 + 1);
        uint64_t v19 = (uint64_t)v197;
        if ((void (**)(char *, uint64_t, uint64_t))((char *)v196 + 1) == (void (**)(char *, uint64_t, uint64_t))v192.i64[0]) {
          goto LABEL_68;
        }
        continue;
      }
      break;
    }
    if (sub_2347EEEC0() != 2) {
      goto LABEL_19;
    }
LABEL_50:
    if ((v36 & 0xC000000000000001) == 0)
    {
      uint64_t v37 = *(void *)(v36 + 16);
      a1 = v203;
      if (v37)
      {
        if (v37 != 1)
        {
          unint64_t v38 = *(void **)(v36 + 32);
          uint64_t v39 = *(void **)(v36 + 40);
          swift_retain();
          id v40 = v38;
          id v41 = v39;
          goto LABEL_54;
        }
LABEL_178:
        __break(1u);
LABEL_179:
        __break(1u);
LABEL_180:
        swift_bridgeObjectRetain();
        uint64_t v5 = sub_2347EEEC0();
        continue;
      }
LABEL_176:
      __break(1u);
LABEL_177:
      __break(1u);
      goto LABEL_178;
    }
    break;
  }
  a1 = v203;
  swift_retain();
  id v40 = (id)MEMORY[0x237DC6CF0](0, v36);
  id v41 = (id)MEMORY[0x237DC6CF0](1, v36);
LABEL_54:
  uint64_t v42 = (uint64_t)v41;
  swift_release();
  unint64_t v43 = v197;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v206 = (unint64_t)v43;
  unint64_t v46 = sub_2347BFBD4(a1);
  uint64_t v47 = v43[2];
  BOOL v48 = (v45 & 1) == 0;
  uint64_t v49 = v47 + v48;
  if (__OFADD__(v47, v48)) {
    goto LABEL_177;
  }
  char v50 = v45;
  if (v43[3] >= v49)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      sub_2347D4AD4();
    }
    goto LABEL_60;
  }
  sub_2347CD888(v49, isUniquelyReferenced_nonNull_native);
  unint64_t v51 = sub_2347BFBD4(a1);
  if ((v50 & 1) == (v52 & 1))
  {
    unint64_t v46 = v51;
LABEL_60:
    a1 = (int64_t)v195;
    char v197 = (void *)v206;
    if (v50)
    {
      uint64_t v53 = *(void *)(v206 + 56) + 16 * v46;
      unint64_t v54 = *(void **)v53;

      *(void *)uint64_t v53 = v40;
      *(void *)(v53 + 8) = v42;
    }
    else
    {
      sub_2347AC230(v46, v203, (uint64_t)v40, v42, (void *)v206);
      swift_retain();
    }
    swift_release_n();
    swift_bridgeObjectRelease();
    uint64_t v15 = v200;
    unint64_t v17 = v199.i64[0];
    uint64_t v18 = v198.i64[0];
    goto LABEL_20;
  }
LABEL_190:
  type metadata accessor for HullPointUUID();
  uint64_t result = sub_2347EF0F0();
  __break(1u);
  return result;
}

float32x4_t sub_2347B6F5C()
{
  float32x4_t v1 = (float32x4_t)vdupq_lane_s32(0, 0);
  float32x4_t v2 = v1;
  v2.i32[0] = *(_OWORD *)(v0 + 144);
  float32x4_t v3 = v1;
  v3.i32[1] = HIDWORD(*(void *)(v0 + 144));
  v1.i32[2] = *(void *)(v0 + 152);
  float32x4_t v4 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v2, COERCE_FLOAT(*MEMORY[0x263EF89A8])), v3, *MEMORY[0x263EF89A8], 1), v1, *MEMORY[0x263EF89A8], 2), (float32x4_t)xmmword_2347F19F0, *MEMORY[0x263EF89A8], 3);
  float32x4_t v5 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v2, COERCE_FLOAT(*(_OWORD *)(MEMORY[0x263EF89A8] + 16))), v3, *(float32x2_t *)(MEMORY[0x263EF89A8] + 16), 1), v1, *(float32x4_t *)(MEMORY[0x263EF89A8] + 16), 2), (float32x4_t)xmmword_2347F19F0, *(float32x4_t *)(MEMORY[0x263EF89A8] + 16), 3);
  float32x4_t v6 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v2, COERCE_FLOAT(*(_OWORD *)(MEMORY[0x263EF89A8] + 32))), v3, *(float32x2_t *)(MEMORY[0x263EF89A8] + 32), 1), v1, *(float32x4_t *)(MEMORY[0x263EF89A8] + 32), 2), (float32x4_t)xmmword_2347F19F0, *(float32x4_t *)(MEMORY[0x263EF89A8] + 32), 3);
  float32x4_t v7 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v2, COERCE_FLOAT(*(_OWORD *)(v0 + 192))), v3, *(float32x2_t *)(v0 + 192), 1), v1, *(float32x4_t *)(v0 + 192), 2), (float32x4_t)xmmword_2347F19F0, *(float32x4_t *)(MEMORY[0x263EF89A8] + 48), 3);
  float32x4_t v8 = *(float32x4_t *)(v0 + 64);
  float32x4_t result = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v4, COERCE_FLOAT(*(_OWORD *)(v0 + 32))), v5, *(float32x2_t *)(v0 + 32), 1), v6, *(float32x4_t *)(v0 + 32), 2), v7, *(float32x4_t *)(v0 + 32), 3);
  float32x4_t v10 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v4, COERCE_FLOAT(*(_OWORD *)(v0 + 48))), v5, *(float32x2_t *)(v0 + 48), 1), v6, *(float32x4_t *)(v0 + 48), 2), v7, *(float32x4_t *)(v0 + 48), 3);
  *(float32x4_t *)(v0 + 80) = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v4, COERCE_FLOAT(*(_OWORD *)(v0 + 16))), v5, *(float32x2_t *)(v0 + 16), 1), v6, *(float32x4_t *)(v0 + 16), 2), v7, *(float32x4_t *)(v0 + 16), 3);
  *(float32x4_t *)(v0 + 96) = result;
  *(float32x4_t *)(v0 + 112) = v10;
  *(float32x4_t *)(v0 + 128) = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v4, v8.f32[0]), v5, *(float32x2_t *)v8.f32, 1), v6, v8, 2), v7, v8, 3);
  return result;
}

uint64_t sub_2347B702C()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for InstanceTransform()
{
  return self;
}

uint64_t sub_2347B7060()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2687AE8B0);
  unint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2347F1EE0;
  *(__n64 *)v3.f32 = sub_2347B9624(0.0, (float32x4_t)xmmword_2347F1FC0);
  float32x4_t v192 = v4;
  float32x4_t v204 = v3;
  float32x4_t v173 = v6;
  float32x4_t v181 = v5;
  type metadata accessor for SplineCorner();
  uint64_t v7 = swift_allocObject();
  *(void *)(inited + 32) = sub_2346A3408(1.0, 0.93, 0.0, 0.6, 0.98, v204, v192, v181, v7, v8, v9, v10, v11, v12, v13, v14, v173);
  *(__n64 *)v15.f32 = sub_2347B9624(90.0, (float32x4_t)xmmword_2347F1FC0);
  float32x4_t v193 = v16;
  float32x4_t v205 = v15;
  float32x4_t v174 = v18;
  float32x4_t v182 = v17;
  uint64_t v19 = swift_allocObject();
  *(void *)(inited + 40) = sub_2346A3408(1.0, 0.93, 0.0, 0.6, 0.98, v205, v193, v182, v19, v20, v21, v22, v23, v24, v25, v26, v174);
  *(__n64 *)v27.f32 = sub_2347B9624(180.0, (float32x4_t)xmmword_2347F1FC0);
  float32x4_t v194 = v28;
  float32x4_t v206 = v27;
  float32x4_t v175 = v30;
  float32x4_t v183 = v29;
  uint64_t v31 = swift_allocObject();
  *(void *)(inited + 48) = sub_2346A3408(1.0, 0.93, 0.0, 0.6, 0.98, v206, v194, v183, v31, v32, v33, v34, v35, v36, v37, v38, v175);
  *(__n64 *)v39.f32 = sub_2347B9624(270.0, (float32x4_t)xmmword_2347F1FC0);
  float32x4_t v195 = v40;
  float32x4_t v207 = v39;
  float32x4_t v176 = v42;
  float32x4_t v184 = v41;
  uint64_t v43 = swift_allocObject();
  *(void *)(inited + 56) = sub_2346A3408(1.0, 0.93, 0.0, 0.6, 0.98, v207, v195, v184, v43, v44, v45, v46, v47, v48, v49, v50, v176);
  sub_2347EE7F0();
  type metadata accessor for SplineGroup();
  swift_allocObject();
  uint64_t v51 = sub_2346DBD64(inited);
  swift_bridgeObjectRelease();
  unint64_t v52 = swift_initStackObject();
  *(_OWORD *)(v52 + 16) = xmmword_2347F1EE0;
  *(__n64 *)v53.f32 = sub_2347B9624(0.0, (float32x4_t)xmmword_2347F1FC0);
  float32x4_t v54 = vmulq_f32(v53, (float32x4_t)0);
  float32x4_t v208 = vmlaq_f32(vmlaq_f32(vmlaq_f32(v53, (float32x4_t)0, v55), (float32x4_t)0, v56), (float32x4_t)0, v57);
  float32x4_t v196 = vmlaq_f32(vmlaq_f32(vaddq_f32(v55, v54), (float32x4_t)0, v56), (float32x4_t)0, v57);
  float32x4_t v58 = vmlaq_f32(v54, (float32x4_t)0, v55);
  float32x4_t v185 = vmlaq_f32(vaddq_f32(v56, v58), (float32x4_t)0, v57);
  float32x4_t v177 = vaddq_f32(v57, vmlaq_f32(v58, (float32x4_t)0, v56));
  uint64_t v59 = swift_allocObject();
  *(void *)(v52 + 32) = sub_2346A3408(1.0, 1.0, 0.0, 0.4, 0.98, v208, v196, v185, v59, v60, v61, v62, v63, v64, v65, v66, v177);
  *(__n64 *)v67.f32 = sub_2347B9624(90.0, (float32x4_t)xmmword_2347F1FC0);
  float32x4_t v68 = vmulq_f32(v67, (float32x4_t)0);
  float32x4_t v209 = vmlaq_f32(vmlaq_f32(vmlaq_f32(v67, (float32x4_t)0, v69), (float32x4_t)0, v70), (float32x4_t)0, v71);
  float32x4_t v197 = vmlaq_f32(vmlaq_f32(vaddq_f32(v69, v68), (float32x4_t)0, v70), (float32x4_t)0, v71);
  float32x4_t v72 = vmlaq_f32(v68, (float32x4_t)0, v69);
  float32x4_t v186 = vmlaq_f32(vaddq_f32(v70, v72), (float32x4_t)0, v71);
  float32x4_t v178 = vaddq_f32(v71, vmlaq_f32(v72, (float32x4_t)0, v70));
  uint64_t v73 = swift_allocObject();
  *(void *)(v52 + 40) = sub_2346A3408(1.0, 1.0, 0.0, 0.4, 0.98, v209, v197, v186, v73, v74, v75, v76, v77, v78, v79, v80, v178);
  *(__n64 *)v81.f32 = sub_2347B9624(180.0, (float32x4_t)xmmword_2347F1FC0);
  float32x4_t v82 = vmulq_f32(v81, (float32x4_t)0);
  float32x4_t v210 = vmlaq_f32(vmlaq_f32(vmlaq_f32(v81, (float32x4_t)0, v83), (float32x4_t)0, v84), (float32x4_t)0, v85);
  float32x4_t v198 = vmlaq_f32(vmlaq_f32(vaddq_f32(v83, v82), (float32x4_t)0, v84), (float32x4_t)0, v85);
  float32x4_t v86 = vmlaq_f32(v82, (float32x4_t)0, v83);
  float32x4_t v187 = vmlaq_f32(vaddq_f32(v84, v86), (float32x4_t)0, v85);
  float32x4_t v179 = vaddq_f32(v85, vmlaq_f32(v86, (float32x4_t)0, v84));
  uint64_t v87 = swift_allocObject();
  *(void *)(v52 + 48) = sub_2346A3408(1.0, 1.0, 0.0, 0.4, 0.98, v210, v198, v187, v87, v88, v89, v90, v91, v92, v93, v94, v179);
  *(__n64 *)v95.f32 = sub_2347B9624(270.0, (float32x4_t)xmmword_2347F1FC0);
  float32x4_t v96 = vmulq_f32(v95, (float32x4_t)0);
  float32x4_t v211 = vmlaq_f32(vmlaq_f32(vmlaq_f32(v95, (float32x4_t)0, v97), (float32x4_t)0, v98), (float32x4_t)0, v99);
  float32x4_t v199 = vmlaq_f32(vmlaq_f32(vaddq_f32(v97, v96), (float32x4_t)0, v98), (float32x4_t)0, v99);
  float32x4_t v100 = vmlaq_f32(v96, (float32x4_t)0, v97);
  float32x4_t v188 = vmlaq_f32(vaddq_f32(v98, v100), (float32x4_t)0, v99);
  float32x4_t v180 = vaddq_f32(v99, vmlaq_f32(v100, (float32x4_t)0, v98));
  uint64_t v101 = swift_allocObject();
  *(void *)(v52 + 56) = sub_2346A3408(1.0, 1.0, 0.0, 0.4, 0.98, v211, v199, v188, v101, v102, v103, v104, v105, v106, v107, v108, v180);
  sub_2347EE7F0();
  swift_allocObject();
  uint64_t v109 = sub_2346DBD64(v52);
  swift_bridgeObjectRelease();
  unint64_t v110 = swift_initStackObject();
  *(_OWORD *)(v110 + 16) = xmmword_2347F1EE0;
  *(__n64 *)v111.f32 = sub_2347B9624(0.0, (float32x4_t)xmmword_2347F1FC0);
  float32x4_t v112 = vmulq_f32(v111, (float32x4_t)0);
  float32x4_t v216 = vmlaq_f32(vmlaq_f32(vmlaq_f32(v111, (float32x4_t)0, v113), (float32x4_t)0, v114), (float32x4_t)0, v115);
  float32x4_t v212 = vmlaq_f32(vmlaq_f32(vaddq_f32(v113, v112), (float32x4_t)0, v114), (float32x4_t)0, v115);
  float32x4_t v116 = vmlaq_f32(v112, (float32x4_t)0, v113);
  float32x4_t v200 = vmlaq_f32(vaddq_f32(v114, v116), (float32x4_t)0, v115);
  float32x4_t v189 = vaddq_f32(v115, vmlaq_f32(v116, (float32x4_t)0, v114));
  uint64_t v117 = swift_allocObject();
  *(void *)(v110 + 32) = sub_2346A3408(1.0, 0.3, -1.0, 0.0, 0.999, v216, v212, v200, v117, v118, v119, v120, v121, v122, v123, v124, v189);
  *(__n64 *)v125.f32 = sub_2347B9624(90.0, (float32x4_t)xmmword_2347F1FC0);
  float32x4_t v126 = vmulq_f32(v125, (float32x4_t)0);
  float32x4_t v217 = vmlaq_f32(vmlaq_f32(vmlaq_f32(v125, (float32x4_t)0, v127), (float32x4_t)0, v128), (float32x4_t)0, v129);
  float32x4_t v213 = vmlaq_f32(vmlaq_f32(vaddq_f32(v127, v126), (float32x4_t)0, v128), (float32x4_t)0, v129);
  float32x4_t v130 = vmlaq_f32(v126, (float32x4_t)0, v127);
  float32x4_t v201 = vmlaq_f32(vaddq_f32(v128, v130), (float32x4_t)0, v129);
  float32x4_t v190 = vaddq_f32(v129, vmlaq_f32(v130, (float32x4_t)0, v128));
  uint64_t v131 = swift_allocObject();
  *(void *)(v110 + 40) = sub_2346A3408(1.0, 0.3, -1.0, 0.0, 0.999, v217, v213, v201, v131, v132, v133, v134, v135, v136, v137, v138, v190);
  *(__n64 *)v139.f32 = sub_2347B9624(180.0, (float32x4_t)xmmword_2347F1FC0);
  float32x4_t v140 = vmulq_f32(v139, (float32x4_t)0);
  float32x4_t v218 = vmlaq_f32(vmlaq_f32(vmlaq_f32(v139, (float32x4_t)0, v141), (float32x4_t)0, v142), (float32x4_t)0, v143);
  float32x4_t v214 = vmlaq_f32(vmlaq_f32(vaddq_f32(v141, v140), (float32x4_t)0, v142), (float32x4_t)0, v143);
  float32x4_t v144 = vmlaq_f32(v140, (float32x4_t)0, v141);
  float32x4_t v202 = vmlaq_f32(vaddq_f32(v142, v144), (float32x4_t)0, v143);
  float32x4_t v191 = vaddq_f32(v143, vmlaq_f32(v144, (float32x4_t)0, v142));
  uint64_t v145 = swift_allocObject();
  *(void *)(v110 + 48) = sub_2346A3408(1.0, 0.3, -1.0, 0.0, 0.999, v218, v214, v202, v145, v146, v147, v148, v149, v150, v151, v152, v191);
  *(__n64 *)v153.f32 = sub_2347B9624(270.0, (float32x4_t)xmmword_2347F1FC0);
  float32x4_t v154 = vmulq_f32(v153, (float32x4_t)0);
  float32x4_t v220 = vmlaq_f32(vmlaq_f32(vmlaq_f32(v153, (float32x4_t)0, v155), (float32x4_t)0, v156), (float32x4_t)0, v157);
  float32x4_t v219 = vmlaq_f32(vmlaq_f32(vaddq_f32(v155, v154), (float32x4_t)0, v156), (float32x4_t)0, v157);
  float32x4_t v158 = vmlaq_f32(v154, (float32x4_t)0, v155);
  float32x4_t v215 = vmlaq_f32(vaddq_f32(v156, v158), (float32x4_t)0, v157);
  float32x4_t v203 = vaddq_f32(v157, vmlaq_f32(v158, (float32x4_t)0, v156));
  uint64_t v159 = swift_allocObject();
  *(void *)(v110 + 56) = sub_2346A3408(1.0, 0.3, -1.0, 0.0, 0.999, v220, v219, v215, v159, v160, v161, v162, v163, v164, v165, v166, v203);
  sub_2347EE7F0();
  swift_allocObject();
  uint64_t v167 = sub_2346DBD64(v110);
  swift_bridgeObjectRelease();
  uint64_t v168 = swift_initStackObject();
  *(_OWORD *)(v168 + 16) = xmmword_2347F1EF0;
  *(void *)(v168 + 32) = v51;
  *(void *)(v168 + 40) = v109;
  *(void *)(v168 + 48) = v167;
  unint64_t v221 = v168;
  sub_2347EE7F0();
  type metadata accessor for BlendableSplineGroup();
  swift_allocObject();
  swift_retain();
  swift_retain();
  swift_retain();
  *(void *)(v0 + 72) = sub_2346DB140(v221);
  uint64_t result = swift_release();
  uint64_t v170 = *(void *)(v0 + 72);
  if (v170)
  {
    uint64_t result = swift_beginAccess();
    uint64_t v171 = *(void *)(v170 + 16);
    if (*(void *)(v171 + 16))
    {
      uint64_t v172 = *(void *)(v171 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_beginAccess();
      *(void *)(v1 + 80) = v172;
      return swift_bridgeObjectRelease();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_2347B78E4(void *a1)
{
  float32x4_t v4 = (void *)v1;
  *(_OWORD *)(v1 + 16) = 0u;
  float32x4_t v6 = (void **)(v1 + 16);
  *(_OWORD *)(v1 + 32) = 0u;
  *(_OWORD *)(v1 + 48) = 0u;
  uint64_t v7 = MEMORY[0x263F8EE78];
  *(void *)(v1 + 64) = MEMORY[0x263F8EE78];
  *(void *)(v1 + 72) = 0;
  *(void *)(v1 + 80) = v7;
  *(_OWORD *)(v1 + 96) = xmmword_2347F1A00;
  *(void *)(v1 + 112) = 0;
  *(void *)(v1 + 120) = 0;
  sub_2347B7060();
  uint64_t v8 = *(void *)(v1 + 72);
  if (!v8) {
    goto LABEL_42;
  }
  unint64_t v9 = *(void *)(*(void *)(v8 + 32) + 16);
  *(void *)(v1 + 56) = v9;
  if (v9 >> 55)
  {
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  *(void *)(v1 + 40) = objc_msgSend(a1, sel_newBufferWithLength_options_, v9 << 8, 32);
  swift_unknownObjectRelease();
  uint64_t v10 = *(void **)(v1 + 40);
  if (!v10)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  swift_unknownObjectRetain();
  unint64_t v2 = sub_2347EE5F0();
  float32x4_t v3 = &selRef_setOpaque_;
  objc_msgSend(v10, sel_setLabel_, v2);
  swift_unknownObjectRelease();

  uint64_t v11 = v4[9];
  if (!v11)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  swift_beginAccess();
  uint64_t v12 = *(void *)(v11 + 16);
  if (!*(void *)(v12 + 16)) {
    goto LABEL_28;
  }
  uint64_t v13 = *(void *)(v12 + 32);
  unint64_t v14 = *(void *)(v13 + 16);
  if (v14 >> 58)
  {
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  *float32x4_t v6 = objc_msgSend(a1, sel_newBufferWithBytes_length_options_, v13 + 32, 32 * v14, 0);
  swift_unknownObjectRelease();
  float32x4_t v15 = *v6;
  if (!*v6)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  swift_unknownObjectRetain();
  unint64_t v2 = sub_2347EE5F0();
  objc_msgSend(v15, sel_setLabel_, v2);
  swift_unknownObjectRelease();

  uint64_t v16 = v4[9];
  if (!v16)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  uint64_t v17 = *(void *)(v16 + 24);
  uint64_t v18 = *(void *)(v17 + 16);
  if (v18 + 0x4000000000000000 < 0) {
    goto LABEL_30;
  }
  v4[3] = objc_msgSend(a1, sel_newBufferWithBytes_length_options_, v17 + 32, 2 * v18, 0);
  swift_unknownObjectRelease();
  uint64_t v19 = (void *)v4[3];
  if (!v19)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  swift_unknownObjectRetain();
  unint64_t v2 = sub_2347EE5F0();
  objc_msgSend(v19, sel_setLabel_, v2);
  swift_unknownObjectRelease();

  uint64_t v20 = v4[9];
  if (!v20)
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  uint64_t v21 = *(void *)(v20 + 32);
  unint64_t v22 = *(void *)(v21 + 16);
  if (v22 >> 60) {
    goto LABEL_31;
  }
  v4[4] = objc_msgSend(a1, sel_newBufferWithBytes_length_options_, v21 + 32, 8 * v22, 0);
  swift_unknownObjectRelease();
  uint64_t v23 = (void *)v4[4];
  if (!v23)
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  swift_unknownObjectRetain();
  uint64_t v24 = (void *)sub_2347EE5F0();
  objc_msgSend(v23, sel_setLabel_, v24);
  swift_unknownObjectRelease();

  __swift_instantiateConcreteTypeFromMangledName(&qword_2687AE8B0);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_2347FA380;
  float32x4_t v120 = *(float32x4_t *)MEMORY[0x263EF89A8];
  float32x4_t v122 = *(float32x4_t *)(MEMORY[0x263EF89A8] + 16);
  float32x4_t v124 = *(float32x4_t *)(MEMORY[0x263EF89A8] + 32);
  int32x4_t v93 = *(int32x4_t *)(MEMORY[0x263EF89A8] + 48);
  int32x4_t v26 = v93;
  v26.i32[0] = 0;
  float32x4_t v110 = (float32x4_t)v26;
  long long v27 = xmmword_2347F1FF0;
  LODWORD(v27) = 0;
  HIDWORD(v27) = v93.i32[3];
  float32x4_t v82 = (float32x4_t)v27;
  *(__n64 *)v28.f32 = sub_2347B9624(90.0, (float32x4_t)xmmword_2347F1FE0);
  float32x4_t v95 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v120, v29.f32[0]), v122, *(float32x2_t *)v29.f32, 1), v124, v29, 2), v82, v29, 3);
  float32x4_t v103 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v120, v28.f32[0]), v122, *(float32x2_t *)v28.f32, 1), v124, v28, 2), v82, v28, 3);
  float32x4_t v88 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v120, v30.f32[0]), v122, *(float32x2_t *)v30.f32, 1), v124, v30, 2), v82, v30, 3);
  float32x4_t v83 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v120, v31.f32[0]), v122, *(float32x2_t *)v31.f32, 1), v124, v31, 2), v82, v31, 3);
  type metadata accessor for InstanceTransform();
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 144) = 0;
  *(void *)(v32 + 152) = 0;
  *(_OWORD *)(v32 + 160) = xmmword_2347F1A00;
  *(_OWORD *)(v32 + 176) = 0u;
  *(_OWORD *)(v32 + 192) = 0u;
  *(_OWORD *)(v32 + 208) = 0u;
  *(float32x4_t *)(v32 + 16) = v103;
  *(float32x4_t *)(v32 + 32) = v95;
  *(float32x4_t *)(v32 + 48) = v88;
  *(float32x4_t *)(v32 + 64) = v83;
  *(float32x4_t *)(v32 + 80) = v103;
  *(float32x4_t *)(v32 + 96) = v95;
  *(float32x4_t *)(v32 + 112) = v88;
  *(float32x4_t *)(v32 + 128) = v83;
  *(void *)(v25 + 32) = v32;
  long long v33 = xmmword_2347F2000;
  LODWORD(v33) = 0;
  HIDWORD(v33) = v93.i32[3];
  float32x4_t v84 = (float32x4_t)v33;
  *(__n64 *)v34.f32 = sub_2347B9624(90.0, (float32x4_t)xmmword_2347F1FE0);
  float32x4_t v96 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v120, v35.f32[0]), v122, *(float32x2_t *)v35.f32, 1), v124, v35, 2), v84, v35, 3);
  float32x4_t v104 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v120, v34.f32[0]), v122, *(float32x2_t *)v34.f32, 1), v124, v34, 2), v84, v34, 3);
  float32x4_t v89 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v120, v36.f32[0]), v122, *(float32x2_t *)v36.f32, 1), v124, v36, 2), v84, v36, 3);
  float32x4_t v85 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v120, v37.f32[0]), v122, *(float32x2_t *)v37.f32, 1), v124, v37, 2), v84, v37, 3);
  uint64_t v38 = swift_allocObject();
  *(void *)(v38 + 144) = 0;
  *(void *)(v38 + 152) = 0;
  *(_OWORD *)(v38 + 160) = xmmword_2347F1A00;
  *(_OWORD *)(v38 + 176) = 0u;
  *(_OWORD *)(v38 + 192) = 0u;
  *(_OWORD *)(v38 + 208) = 0u;
  *(float32x4_t *)(v38 + 16) = v104;
  *(float32x4_t *)(v38 + 32) = v96;
  *(float32x4_t *)(v38 + 48) = v89;
  *(float32x4_t *)(v38 + 64) = v85;
  *(float32x4_t *)(v38 + 80) = v104;
  *(float32x4_t *)(v38 + 96) = v96;
  *(float32x4_t *)(v38 + 112) = v89;
  *(float32x4_t *)(v38 + 128) = v85;
  *(void *)(v25 + 40) = v38;
  float32x4_t v39 = v110;
  v39.i32[1] = 0;
  float32x4_t v111 = v39;
  v39.i32[2] = 1.0;
  float32x4_t v86 = v39;
  *(__n64 *)v40.f32 = sub_2347B9624(0.0, (float32x4_t)xmmword_2347F1FE0);
  float32x4_t v97 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v120, v41.f32[0]), v122, *(float32x2_t *)v41.f32, 1), v124, v41, 2), v86, v41, 3);
  float32x4_t v105 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v120, v40.f32[0]), v122, *(float32x2_t *)v40.f32, 1), v124, v40, 2), v86, v40, 3);
  float32x4_t v90 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v120, v42.f32[0]), v122, *(float32x2_t *)v42.f32, 1), v124, v42, 2), v86, v42, 3);
  float32x4_t v87 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v120, v43.f32[0]), v122, *(float32x2_t *)v43.f32, 1), v124, v43, 2), v86, v43, 3);
  uint64_t v44 = swift_allocObject();
  *(void *)(v44 + 144) = 0;
  *(void *)(v44 + 152) = 0;
  *(_OWORD *)(v44 + 160) = xmmword_2347F1A00;
  *(_OWORD *)(v44 + 176) = 0u;
  *(_OWORD *)(v44 + 192) = 0u;
  *(_OWORD *)(v44 + 208) = 0u;
  *(float32x4_t *)(v44 + 16) = v105;
  *(float32x4_t *)(v44 + 32) = v97;
  *(float32x4_t *)(v44 + 48) = v90;
  *(float32x4_t *)(v44 + 64) = v87;
  *(float32x4_t *)(v44 + 80) = v105;
  *(float32x4_t *)(v44 + 96) = v97;
  *(float32x4_t *)(v44 + 112) = v90;
  *(float32x4_t *)(v44 + 128) = v87;
  *(void *)(v25 + 48) = v44;
  float32x4_t v45 = v111;
  v45.i32[2] = -1.0;
  float32x4_t v112 = v45;
  *(__n64 *)v46.f32 = sub_2347B9624(0.0, (float32x4_t)xmmword_2347F1FE0);
  float32x4_t v98 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v120, v47.f32[0]), v122, *(float32x2_t *)v47.f32, 1), v124, v47, 2), v112, v47, 3);
  float32x4_t v106 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v120, v46.f32[0]), v122, *(float32x2_t *)v46.f32, 1), v124, v46, 2), v112, v46, 3);
  float32x4_t v91 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v120, v48.f32[0]), v122, *(float32x2_t *)v48.f32, 1), v124, v48, 2), v112, v48, 3);
  float32x4_t v113 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v120, v49.f32[0]), v122, *(float32x2_t *)v49.f32, 1), v124, v49, 2), v112, v49, 3);
  uint64_t v50 = swift_allocObject();
  *(void *)(v50 + 144) = 0;
  *(void *)(v50 + 152) = 0;
  *(_OWORD *)(v50 + 160) = xmmword_2347F1A00;
  *(_OWORD *)(v50 + 176) = 0u;
  *(_OWORD *)(v50 + 192) = 0u;
  *(_OWORD *)(v50 + 208) = 0u;
  *(float32x4_t *)(v50 + 16) = v106;
  *(float32x4_t *)(v50 + 32) = v98;
  *(float32x4_t *)(v50 + 48) = v91;
  *(float32x4_t *)(v50 + 64) = v113;
  *(float32x4_t *)(v50 + 80) = v106;
  *(float32x4_t *)(v50 + 96) = v98;
  *(float32x4_t *)(v50 + 112) = v91;
  *(float32x4_t *)(v50 + 128) = v113;
  *(void *)(v25 + 56) = v50;
  v51.i64[0] = 1065353216;
  v51.i32[2] = 0;
  v51.i32[3] = v93.i32[3];
  float32x4_t v115 = v51;
  *(__n64 *)v52.f32 = sub_2347B9624(90.0, (float32x4_t)xmmword_2347F2000);
  float32x4_t v99 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v120, v53.f32[0]), v122, *(float32x2_t *)v53.f32, 1), v124, v53, 2), v115, v53, 3);
  float32x4_t v107 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v120, v52.f32[0]), v122, *(float32x2_t *)v52.f32, 1), v124, v52, 2), v115, v52, 3);
  float32x4_t v92 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v120, v54.f32[0]), v122, *(float32x2_t *)v54.f32, 1), v124, v54, 2), v115, v54, 3);
  float32x4_t v116 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v120, v55.f32[0]), v122, *(float32x2_t *)v55.f32, 1), v124, v55, 2), v115, v55, 3);
  uint64_t v56 = swift_allocObject();
  *(void *)(v56 + 144) = 0;
  *(void *)(v56 + 152) = 0;
  *(_OWORD *)(v56 + 160) = xmmword_2347F1A00;
  *(_OWORD *)(v56 + 176) = 0u;
  *(_OWORD *)(v56 + 192) = 0u;
  *(_OWORD *)(v56 + 208) = 0u;
  *(float32x4_t *)(v56 + 16) = v107;
  *(float32x4_t *)(v56 + 32) = v99;
  *(float32x4_t *)(v56 + 48) = v92;
  *(float32x4_t *)(v56 + 64) = v116;
  *(float32x4_t *)(v56 + 80) = v107;
  *(float32x4_t *)(v56 + 96) = v99;
  *(float32x4_t *)(v56 + 112) = v92;
  *(float32x4_t *)(v56 + 128) = v116;
  *(void *)(v25 + 64) = v56;
  v57.i64[0] = 3212836864;
  v57.i32[2] = 0;
  v57.i32[3] = v93.i32[3];
  float32x4_t v100 = v57;
  *(__n64 *)v58.f32 = sub_2347B9624(90.0, (float32x4_t)xmmword_2347F2000);
  float32x4_t v114 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v120, v59.f32[0]), v122, *(float32x2_t *)v59.f32, 1), v124, v59, 2), v100, v59, 3);
  float32x4_t v117 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v120, v58.f32[0]), v122, *(float32x2_t *)v58.f32, 1), v124, v58, 2), v100, v58, 3);
  float32x4_t v108 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v120, v60.f32[0]), v122, *(float32x2_t *)v60.f32, 1), v124, v60, 2), v100, v60, 3);
  float32x4_t v101 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v120, v61.f32[0]), v122, *(float32x2_t *)v61.f32, 1), v124, v61, 2), v100, v61, 3);
  uint64_t v62 = swift_allocObject();
  *(void *)(v62 + 144) = 0;
  *(void *)(v62 + 152) = 0;
  *(_OWORD *)(v62 + 160) = xmmword_2347F1A00;
  *(_OWORD *)(v62 + 176) = 0u;
  *(_OWORD *)(v62 + 192) = 0u;
  *(_OWORD *)(v62 + 208) = 0u;
  *(float32x4_t *)(v62 + 16) = v117;
  *(float32x4_t *)(v62 + 32) = v114;
  *(float32x4_t *)(v62 + 48) = v108;
  *(float32x4_t *)(v62 + 64) = v101;
  *(float32x4_t *)(v62 + 80) = v117;
  *(float32x4_t *)(v62 + 96) = v114;
  *(float32x4_t *)(v62 + 112) = v108;
  *(float32x4_t *)(v62 + 128) = v101;
  *(void *)(v25 + 72) = v62;
  sub_2347EE7F0();
  v4[8] = v25;
  swift_bridgeObjectRelease();
  unint64_t v2 = v4[8];
  if (v2 >> 62)
  {
LABEL_32:
    swift_bridgeObjectRetain();
    uint64_t v63 = sub_2347EEEC0();
    id v81 = a1;
    if (v63) {
      goto LABEL_16;
    }
LABEL_33:
    uint64_t v64 = v3;
    uint64_t v66 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_34;
  }
  uint64_t v63 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  id v81 = a1;
  if (!v63) {
    goto LABEL_33;
  }
LABEL_16:
  if (v63 < 1)
  {
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  uint64_t v64 = v3;
  uint64_t v65 = 0;
  float32x4_t v118 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32((float32x4_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vmulq_f32(v120, (float32x4_t)0), 0), (float32x4_t)0, *(float32x2_t *)v120.f32, 1), (float32x4_t)0, v120, 2), (float32x4_t)xmmword_2347F19F0, v120, 3);
  float32x4_t v109 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32((float32x4_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vmulq_f32(v122, (float32x4_t)0), 0), (float32x4_t)0, *(float32x2_t *)v122.f32, 1), (float32x4_t)0, v122, 2), (float32x4_t)xmmword_2347F19F0, v122, 3);
  float32x4_t v102 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32((float32x4_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vmulq_f32(v124, (float32x4_t)0), 0), (float32x4_t)0, *(float32x2_t *)v124.f32, 1), (float32x4_t)0, v124, 2), (float32x4_t)xmmword_2347F19F0, v124, 3);
  float32x4_t v94 = (float32x4_t)vdupq_laneq_s32(v93, 3);
  uint64_t v66 = (void *)MEMORY[0x263F8EE78];
  do
  {
    if ((v2 & 0xC000000000000001) != 0)
    {
      uint64_t v67 = MEMORY[0x237DC6CF0](v65, v2);
    }
    else
    {
      uint64_t v67 = *(void *)(v2 + 8 * v65 + 32);
      swift_retain();
    }
    *(_OWORD *)(v67 + 144) = 0u;
    float32x4_t v68 = vmlaq_f32(vmlaq_laneq_f32(vmlaq_lane_f32((float32x4_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vmulq_f32(*(float32x4_t *)(v67 + 192), (float32x4_t)0), 0), (float32x4_t)0, *(float32x2_t *)(v67 + 192), 1), (float32x4_t)0, *(float32x4_t *)(v67 + 192), 2), (float32x4_t)xmmword_2347F19F0, v94);
    float32x4_t v69 = *(float32x4_t *)(v67 + 64);
    float32x4_t v70 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v118, COERCE_FLOAT(*(_OWORD *)(v67 + 32))), v109, *(float32x2_t *)(v67 + 32), 1), v102, *(float32x4_t *)(v67 + 32), 2), v68, *(float32x4_t *)(v67 + 32), 3);
    float32x4_t v71 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v118, COERCE_FLOAT(*(_OWORD *)(v67 + 48))), v109, *(float32x2_t *)(v67 + 48), 1), v102, *(float32x4_t *)(v67 + 48), 2), v68, *(float32x4_t *)(v67 + 48), 3);
    float32x4_t v125 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v118, COERCE_FLOAT(*(_OWORD *)(v67 + 16))), v109, *(float32x2_t *)(v67 + 16), 1), v102, *(float32x4_t *)(v67 + 16), 2), v68, *(float32x4_t *)(v67 + 16), 3);
    *(float32x4_t *)(v67 + 80) = v125;
    *(float32x4_t *)(v67 + 96) = v70;
    float32x4_t v121 = v71;
    float32x4_t v123 = v70;
    float32x4_t v72 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v118, v69.f32[0]), v109, *(float32x2_t *)v69.f32, 1), v102, v69, 2), v68, v69, 3);
    *(float32x4_t *)(v67 + 112) = v71;
    *(float32x4_t *)(v67 + 128) = v72;
    float32x4_t v119 = v72;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v66 = sub_2346FB730(0, v66[2] + 1, 1, v66);
    }
    unint64_t v74 = v66[2];
    unint64_t v73 = v66[3];
    if (v74 >= v73 >> 1) {
      uint64_t v66 = sub_2346FB730((void *)(v73 > 1), v74 + 1, 1, v66);
    }
    ++v65;
    v66[2] = v74 + 1;
    uint64_t v75 = &v66[8 * v74];
    v75[2] = v125;
    v75[3] = v123;
    v75[4] = v121;
    v75[5] = v119;
    swift_release();
  }
  while (v63 != v65);
LABEL_34:
  swift_bridgeObjectRelease();
  unint64_t v76 = v4[8];
  if (v76 >> 62)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v77 = sub_2347EEEC0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v77 = *(void *)((v76 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  if ((unint64_t)(v77 - 0x200000000000000) >> 58 != 63)
  {
    __break(1u);
    goto LABEL_41;
  }
  id v78 = objc_msgSend(v81, sel_newBufferWithBytes_length_options_, v66 + 4, v77 << 6, 0);
  swift_bridgeObjectRelease();
  v4[6] = v78;
  swift_unknownObjectRelease();
  uint64_t v79 = (void *)v4[6];
  if (v79)
  {
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v80 = (void *)sub_2347EE5F0();
    objc_msgSend(v79, (SEL)v64 + 2072, v80);
    swift_unknownObjectRelease();

    swift_unknownObjectRelease();
    return;
  }
LABEL_50:
  __break(1u);
}

void sub_2347B8434()
{
  uint64_t v1 = (void *)v0[2];
  if (!v1)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  unint64_t v2 = (char *)objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
  id v3 = v1;
  unint64_t v4 = (unint64_t)(v0 + 10);
  swift_beginAccess();
  v0[10] = MEMORY[0x263F8EE78];
  swift_bridgeObjectRelease();
  uint64_t v5 = v0[9];
  if (v5)
  {
    swift_beginAccess();
    uint64_t v6 = *(void *)(v5 + 16);
    if (*(void *)(v6 + 16))
    {
      uint64_t v7 = *(void *)(*(void *)(v6 + 32) + 16);
      if (v7)
      {
        swift_beginAccess();
        uint64_t v8 = *(void **)v4;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)unint64_t v4 = v8;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          uint64_t v8 = sub_2346FB5F4(0, v8[2] + 1, 1, v8);
        }
        *(void *)unint64_t v4 = v8;
        uint64_t v10 = v2 + 16;
        do
        {
          long long v20 = *((_OWORD *)v10 - 1);
          int v11 = *v10;
          char v12 = swift_isUniquelyReferenced_nonNull_native();
          *(void *)unint64_t v4 = v8;
          if ((v12 & 1) == 0)
          {
            uint64_t v8 = sub_2346FB5F4(0, v8[2] + 1, 1, v8);
            *(void *)unint64_t v4 = v8;
          }
          unint64_t v14 = v8[2];
          unint64_t v13 = v8[3];
          if (v14 >= v13 >> 1)
          {
            uint64_t v8 = sub_2346FB5F4((void *)(v13 > 1), v14 + 1, 1, v8);
            *(void *)unint64_t v4 = v8;
          }
          v8[2] = v14 + 1;
          float32x4_t v15 = &v8[4 * v14];
          *((_OWORD *)v15 + 2) = v20;
          *((_DWORD *)v15 + 12) = v11;
          uint64_t v8 = *(void **)v4;
          v10 += 8;
          --v7;
        }
        while (v7);
        swift_endAccess();
      }
      unint64_t v4 = v0[8];
      if (!(v4 >> 62))
      {
        uint64_t v16 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v16)
        {
LABEL_16:
          if (v16 >= 1)
          {
            uint64_t v17 = 0;
            do
            {
              if ((v4 & 0xC000000000000001) != 0) {
                uint64_t v18 = (_OWORD *)MEMORY[0x237DC6CF0](v17, v4);
              }
              else {
                uint64_t v18 = (_OWORD *)swift_retain();
              }
              ++v17;
              long long v19 = v18[12];
              v18[10] = v18[9];
              v18[11] = v19;
              swift_release();
            }
            while (v16 != v17);
            goto LABEL_24;
          }
          __break(1u);
          goto LABEL_26;
        }
LABEL_24:
        swift_bridgeObjectRelease();
        return;
      }
    }
    else
    {
      __break(1u);
    }
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_2347EEEC0();
    if (v16) {
      goto LABEL_16;
    }
    goto LABEL_24;
  }
LABEL_27:
  __break(1u);
}

float32x4_t *sub_2347B86A0(float32x4_t *result, uint64_t a2, double a3)
{
  unint64_t v4 = *(void **)(v3 + 16);
  if (!v4) {
    goto LABEL_8;
  }
  uint64_t v6 = result;
  uint64_t v7 = (char *)objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
  uint64_t result = v4;
  unint64_t v9 = v6[1].u64[0];
  if (!v9) {
    return result;
  }
  if (v9 > *(void *)(a2 + 16))
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  float32x4_t v10 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)&a3, 0);
  int v11 = v6 + 3;
  char v12 = (float *)(a2 + 48);
  unint64_t v13 = (float *)(v7 + 16);
  do
  {
    float32x4_t v14 = vmlaq_f32(v11[-1], vsubq_f32(*(float32x4_t *)(v12 - 4), v11[-1]), v10);
    v14.i32[3] = v8;
    *((float32x4_t *)v13 - 1) = v14;
    float v15 = v11->f32[0];
    v11 += 2;
    float v16 = v15;
    float v17 = *v12;
    v12 += 8;
    *unint64_t v13 = v16 + (float)(*(float *)&a3 * (float)(v17 - v16));
    v13 += 8;
    --v9;
  }
  while (v9);
  return result;
}

char *sub_2347B8770(char *result)
{
  unint64_t v2 = *(void **)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = result;
    unint64_t v4 = (char *)objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
    uint64_t result = v2;
    uint64_t v5 = *((void *)v3 + 2);
    if (v5)
    {
      uint64_t v6 = v3 + 48;
      uint64_t v7 = v4 + 16;
      do
      {
        *((_OWORD *)v7 - 1) = *((_OWORD *)v6 - 1);
        int v8 = *v6;
        v6 += 8;
        *uint64_t v7 = v8;
        v7 += 8;
        --v5;
      }
      while (v5);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_2347B87EC(__n128 a1)
{
  unint64_t v2 = *(void **)(v1 + 48);
  if (v2)
  {
    unint64_t v3 = (unint64_t)objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
    id v4 = v2;
    unint64_t v5 = *(void *)(v1 + 64);
    if (v5 >> 62) {
      goto LABEL_23;
    }
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    while (1)
    {
      if (!v6) {
        return;
      }
      unint64_t v7 = 0;
      float32x4_t v8 = (float32x4_t)vdupq_lane_s32(0, 0);
      float32x4_t v9 = v8;
      v9.i32[0] = a1.n128_u32[0];
      float32x4_t v10 = v8;
      v8.i32[2] = a1.n128_i32[2];
      v10.i32[1] = a1.n128_i32[1];
      float32x4_t v21 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v9, COERCE_FLOAT(*(_OWORD *)(MEMORY[0x263EF89A8] + 16))), v10, *(float32x2_t *)(MEMORY[0x263EF89A8] + 16), 1), v8, *(float32x4_t *)(MEMORY[0x263EF89A8] + 16), 2), (float32x4_t)xmmword_2347F19F0, *(float32x4_t *)(MEMORY[0x263EF89A8] + 16), 3);
      float32x4_t v22 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v9, COERCE_FLOAT(*MEMORY[0x263EF89A8])), v10, *MEMORY[0x263EF89A8], 1), v8, *MEMORY[0x263EF89A8], 2), (float32x4_t)xmmword_2347F19F0, *MEMORY[0x263EF89A8], 3);
      float32x4_t v23 = v10;
      float32x4_t v24 = v9;
      float32x4_t v25 = v8;
      float32x4_t v20 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v9, COERCE_FLOAT(*(_OWORD *)(MEMORY[0x263EF89A8] + 32))), v10, *(float32x2_t *)(MEMORY[0x263EF89A8] + 32), 1), v8, *(float32x4_t *)(MEMORY[0x263EF89A8] + 32), 2), (float32x4_t)xmmword_2347F19F0, *(float32x4_t *)(MEMORY[0x263EF89A8] + 32), 3);
      float32x4_t v19 = (float32x4_t)vdupq_laneq_s32(*(int32x4_t *)(MEMORY[0x263EF89A8] + 48), 3);
      for (uint64_t i = (_OWORD *)(v3 + 32); ; i += 4)
      {
        uint64_t v12 = *(void *)(v1 + 64);
        if ((v12 & 0xC000000000000001) != 0)
        {
          swift_bridgeObjectRetain();
          uint64_t v13 = MEMORY[0x237DC6CF0](v7, v12);
          swift_bridgeObjectRelease();
          goto LABEL_10;
        }
        if ((v7 & 0x8000000000000000) != 0) {
          break;
        }
        if (v7 >= *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_20;
        }
        uint64_t v13 = *(void *)(v12 + 8 * v7 + 32);
        swift_retain();
LABEL_10:
        *(__n128 *)(v13 + 144) = a1;
        float32x4_t v14 = vmlaq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v24, COERCE_FLOAT(*(_OWORD *)(v13 + 192))), v23, *(float32x2_t *)(v13 + 192), 1), v25, *(float32x4_t *)(v13 + 192), 2), (float32x4_t)xmmword_2347F19F0, v19);
        float32x4_t v15 = *(float32x4_t *)(v13 + 64);
        float32x4_t v16 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v22, COERCE_FLOAT(*(_OWORD *)(v13 + 32))), v21, *(float32x2_t *)(v13 + 32), 1), v20, *(float32x4_t *)(v13 + 32), 2), v14, *(float32x4_t *)(v13 + 32), 3);
        float32x4_t v17 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v22, COERCE_FLOAT(*(_OWORD *)(v13 + 48))), v21, *(float32x2_t *)(v13 + 48), 1), v20, *(float32x4_t *)(v13 + 48), 2), v14, *(float32x4_t *)(v13 + 48), 3);
        *(float32x4_t *)(v13 + 80) = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v22, COERCE_FLOAT(*(_OWORD *)(v13 + 16))), v21, *(float32x2_t *)(v13 + 16), 1), v20, *(float32x4_t *)(v13 + 16), 2), v14, *(float32x4_t *)(v13 + 16), 3);
        *(float32x4_t *)(v13 + 96) = v16;
        *(float32x4_t *)(v13 + 112) = v17;
        *(float32x4_t *)(v13 + 128) = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v22, v15.f32[0]), v21, *(float32x2_t *)v15.f32, 1), v20, v15, 2), v14, v15, 3);
        swift_release();
        unint64_t v3 = *(void *)(v1 + 64);
        if ((v3 & 0xC000000000000001) != 0)
        {
          swift_bridgeObjectRetain();
          uint64_t v18 = (_OWORD *)MEMORY[0x237DC6CF0](v7, v3);
          swift_bridgeObjectRelease();
        }
        else
        {
          if ((v7 & 0x8000000000000000) != 0) {
            goto LABEL_21;
          }
          if (v7 >= *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_22;
          }
          uint64_t v18 = *(_OWORD **)(v3 + 8 * v7 + 32);
          swift_retain();
        }
        ++v7;
        long long v29 = v18[6];
        long long v30 = v18[5];
        long long v27 = v18[8];
        long long v28 = v18[7];
        swift_release();
        *(i - 2) = v30;
        *(i - 1) = v29;
        *uint64_t i = v28;
        i[1] = v27;
        if (v6 == v7) {
          return;
        }
      }
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      swift_bridgeObjectRetain();
      uint64_t v6 = sub_2347EEEC0();
      swift_bridgeObjectRelease();
      if (v6 < 0)
      {
        __break(1u);
        break;
      }
    }
  }
  __break(1u);
}

uint64_t sub_2347B8AAC(uint64_t result, __n128 a2)
{
  uint64_t v3 = v2;
  id v4 = *(void **)(v2 + 48);
  if (!v4) {
    goto LABEL_17;
  }
  unint64_t v5 = result;
  uint64_t v6 = (char *)objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
  id v7 = v4;
  uint64_t v8 = *(void *)(v3 + 64);
  if ((v8 & 0xC000000000000001) == 0)
  {
    if ((v5 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) > v5)
    {
      float32x4_t v9 = *(__n128 **)(v8 + 8 * v5 + 32);
      swift_retain();
      goto LABEL_6;
    }
    __break(1u);
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  float32x4_t v9 = (__n128 *)MEMORY[0x237DC6CF0](v5, v8);
  swift_bridgeObjectRelease();
LABEL_6:
  v9[12] = a2;
  sub_2347B6F5C();
  uint64_t result = swift_release();
  uint64_t v8 = *(void *)(v3 + 64);
  if ((v8 & 0xC000000000000001) != 0)
  {
LABEL_14:
    swift_bridgeObjectRetain();
    float32x4_t v10 = (_OWORD *)MEMORY[0x237DC6CF0](v5, v8);
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  if ((v5 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) > v5)
  {
    float32x4_t v10 = *(_OWORD **)(v8 + 8 * v5 + 32);
    swift_retain();
LABEL_10:
    long long v14 = v10[6];
    long long v16 = v10[5];
    long long v12 = v10[8];
    long long v13 = v10[7];
    uint64_t result = swift_release();
    int v11 = &v6[64 * v5];
    *(_OWORD *)int v11 = v16;
    *((_OWORD *)v11 + 1) = v14;
    *((_OWORD *)v11 + 2) = v13;
    *((_OWORD *)v11 + 3) = v12;
    return result;
  }
  __break(1u);
LABEL_17:
  __break(1u);
  return result;
}

uint64_t sub_2347B8C24()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_2347B8C7C()
{
  sub_2347B8C24();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MetalSplineData()
{
  return self;
}

uint64_t sub_2347B8CD4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_2347B8CE8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_2347B8CFC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_2347B8D10(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

unint64_t sub_2347B8D24@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_2347B9168(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_2347B8D50()
{
  uint64_t v1 = v0 + 16;
  if (MEMORY[0x237DC8170](v0 + 16))
  {
    sub_2347DA5F8();
    swift_unknownObjectRelease();
  }
  if (*(unsigned __int8 *)(v0 + 32) - 1 >= 2)
  {
    if (*(unsigned char *)(v0 + 32))
    {
      long long v2 = xmmword_2347FA3B0;
      long long v3 = xmmword_2347FA3C0;
    }
    else
    {
      long long v2 = xmmword_2347FA390;
      long long v3 = xmmword_2347FA3A0;
    }
  }
  else
  {
    long long v2 = xmmword_2347FA3D0;
    long long v3 = xmmword_2347FA3E0;
  }
  *(_OWORD *)(v0 + 48) = v3;
  *(_OWORD *)(v0 + 64) = v2;
  if (MEMORY[0x237DC8170](v1))
  {
    sub_2347DA748();
    swift_unknownObjectRelease();
  }
  if (*(unsigned __int8 *)(v0 + 32) - 1 >= 2)
  {
    if (*(unsigned char *)(v0 + 32))
    {
      long long v4 = xmmword_2347FA400;
      unint64_t v10 = 0x3FD3333333333333;
    }
    else
    {
      long long v4 = xmmword_2347FA3F0;
      unint64_t v10 = 0x3FC3333333333333;
    }
    _Q1 = vdupq_n_s64(v10);
  }
  else
  {
    long long v4 = xmmword_2347F0F20;
    __asm { FMOV            V1.2D, #1.0 }
  }
  *(int64x2_t *)(v0 + 80) = _Q1;
  *(_OWORD *)(v0 + 96) = v4;
  if (MEMORY[0x237DC8170](v1))
  {
    sub_2347DA81C();
    swift_unknownObjectRelease();
  }
  v11.i32[0] = 2;
  v12.i32[0] = *(unsigned __int8 *)(v0 + 32) - 1;
  *(void *)(v0 + 128) = 0;
  *(void *)(v0 + 136) = 0;
  *(int8x16_t *)(v0 + 112) = vandq_s8((int8x16_t)xmmword_2347F0F10, (int8x16_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vcgtq_u32(v11, v12), 0));
  uint64_t result = MEMORY[0x237DC8170](v1);
  if (result)
  {
    sub_2347DA9BC();
    return swift_unknownObjectRelease();
  }
  return result;
}

double sub_2347B8ED8()
{
  if (*(unsigned __int8 *)(v0 + 32) - 1 < 2) {
    return -0.5;
  }
  if (*(unsigned char *)(v0 + 32)) {
    return -0.454519478;
  }
  return 0.0499502113;
}

uint64_t sub_2347B8F28()
{
  sub_2346BBA5C(v0 + 16);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for GlyphState()
{
  return self;
}

float sub_2347B8F84()
{
  float v1 = v0[4];
  float v2 = v1 - v0[5];
  float v3 = fminf(fmaxf(v2 / v0[6], 0.0), 1.0);
  v0[8] = v2;
  v0[9] = v3;
  float result = (float)(sinf(v1 * 5.0) * 0.5) + 0.5;
  v0[7] = result;
  return result;
}

uint64_t type metadata accessor for AnimTime()
{
  return self;
}

ValueMetadata *type metadata accessor for AngularVelocity()
{
  return &type metadata for AngularVelocity;
}

unsigned char *storeEnumTagSinglePayload for GlyphSnapState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *float result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2347B90D8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *float result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GlyphSnapState()
{
  return &type metadata for GlyphSnapState;
}

unint64_t sub_2347B9114()
{
  unint64_t result = qword_2687AEDB0;
  if (!qword_2687AEDB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2687AEDB0);
  }
  return result;
}

unint64_t sub_2347B9168(unint64_t result)
{
  if (result >= 4) {
    return 4;
  }
  return result;
}

void *sub_2347B9178(void *result, uint64_t a2, double a3)
{
  unint64_t v3 = result[2];
  if (!v3) {
    return (void *)MEMORY[0x263F8EE78];
  }
  if (v3 <= *(void *)(a2 + 16))
  {
    uint64_t v5 = result;
    unsigned int v6 = sub_2346FB5F4(0, 1, 1, MEMORY[0x263F8EE78]);
    float v8 = *(float *)&a3;
    float32x4_t v9 = v6;
    uint64_t v10 = 0;
    float32x4_t v11 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)&a3, 0);
    unint64_t v12 = v6[2];
    uint64_t v13 = 4 * v12;
    do
    {
      float32x4_t v14 = *(float32x4_t *)&v5[v10 + 4];
      float32x4_t v15 = *(float32x4_t *)(a2 + v10 * 8 + 32);
      float v16 = *(float *)&v5[v10 + 6];
      float v17 = *(float *)(a2 + v10 * 8 + 48);
      unint64_t v18 = v9[3];
      unint64_t v19 = v12 + 1;
      if (v12 >= v18 >> 1)
      {
        float32x4_t v25 = *(float32x4_t *)&v5[v10 + 4];
        float32x4_t v26 = v11;
        float32x4_t v23 = *(float32x4_t *)(a2 + v10 * 8 + 32);
        __int32 v24 = v7;
        float32x4_t v22 = sub_2346FB5F4((void *)(v18 > 1), v12 + 1, 1, v9);
        float32x4_t v15 = v23;
        __int32 v7 = v24;
        float32x4_t v14 = v25;
        float32x4_t v11 = v26;
        float v8 = *(float *)&a3;
        float32x4_t v9 = v22;
      }
      float32x4_t v20 = vmlaq_f32(v14, vsubq_f32(v15, v14), v11);
      v20.i32[3] = v7;
      v9[2] = v19;
      float32x4_t v21 = (float32x4_t *)&v9[v13 + v10];
      v21[2] = v20;
      v21[3].f32[0] = v16 + (float)(v8 * (float)(v17 - v16));
      v10 += 4;
      unint64_t v12 = v19;
      --v3;
    }
    while (v3);
    return v9;
  }
  __break(1u);
  return result;
}

uint64_t getEnumTagSinglePayload for ScanItemCategory(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEB) {
    goto LABEL_17;
  }
  if (a2 + 21 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 21) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 21;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 21;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 21;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x16;
  int v8 = v6 - 22;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ScanItemCategory(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 21 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 21) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEA)
  {
    unsigned int v6 = ((a2 - 235) >> 8) + 1;
    *unint64_t result = a2 + 21;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2347B9408);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 21;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScanItemCategory()
{
  return &type metadata for ScanItemCategory;
}

unsigned char *storeEnumTagSinglePayload for ScanItemType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2347B950CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScanItemType()
{
  return &type metadata for ScanItemType;
}

unint64_t sub_2347B9548()
{
  unint64_t result = qword_2687AEDB8;
  if (!qword_2687AEDB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2687AEDB8);
  }
  return result;
}

uint64_t sub_2347B959C()
{
  return *v0 + 6;
}

unint64_t sub_2347B95AC()
{
  unint64_t result = qword_2687AEDC0;
  if (!qword_2687AEDC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2687AEDC0);
  }
  return result;
}

uint64_t type metadata accessor for TransformationUtility()
{
  return self;
}

__n64 sub_2347B9624(float a1, float32x4_t a2)
{
  __float2 v2 = __sincospif_stret(a1 * 0.0055556);
  int32x4_t v3 = (int32x4_t)vmulq_f32(a2, a2);
  v3.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v3, 2), vadd_f32(*(float32x2_t *)v3.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v3.i8, 1))).u32[0];
  float32x2_t v4 = vrsqrte_f32((float32x2_t)v3.u32[0]);
  float32x2_t v5 = vmul_f32(v4, vrsqrts_f32((float32x2_t)v3.u32[0], vmul_f32(v4, v4)));
  float32x4_t v6 = vmulq_n_f32(a2, vmul_f32(v5, vrsqrts_f32((float32x2_t)v3.u32[0], vmul_f32(v5, v5))).f32[0]);
  float v7 = (float)(1.0 - v2.__cosval) * v6.f32[0];
  float v8 = vmuls_lane_f32(v7, *(float32x2_t *)v6.f32, 1);
  result.n64_f32[0] = v2.__cosval + (float)(v7 * v6.f32[0]);
  result.n64_f32[1] = vmuls_lane_f32(v2.__sinval, v6, 2) + v8;
  return result;
}

float32x2_t sub_2347B9758(float32x2_t a1, float32x2_t a2, float32x2_t a3, float32x2_t a4, float a5)
{
  __asm { FMOV            V6.2S, #3.0 }
  float32x2_t v10 = vmul_f32(a1, _D6);
  float32x2_t v11 = vmul_f32(a2, _D6);
  float32x2_t v12 = vmul_f32(a3, _D6);
  __asm
  {
    FMOV            V17.2S, #4.0
    FMOV            V18.2S, #6.0
  }
  return vdiv_f32(vadd_f32(vadd_f32(a1, vadd_f32(a3, vmul_f32(a2, _D17))), vmul_n_f32(vadd_f32(vsub_f32(v12, v10), vmul_n_f32(vadd_f32(vadd_f32(v10, vsub_f32(v12, vmul_f32(a2, _D18))), vmul_n_f32(vsub_f32(vadd_f32(v11, vsub_f32(a4, v12)), a1), a5)), a5)), a5)), _D18);
}

float32x2_t sub_2347B9828(float32x2_t a1, float32x2_t a2, float32x2_t a3, float32x2_t a4, float a5)
{
  __asm { FMOV            V6.2S, #3.0 }
  float32x2_t v10 = vmul_f32(a1, _D6);
  float32x2_t v11 = vmul_f32(a2, _D6);
  float32x2_t v12 = vmul_f32(a3, _D6);
  __asm { FMOV            V6.2S, #6.0 }
  float32x2_t v14 = vsub_f32(vadd_f32(v11, vsub_f32(a4, v12)), a1);
  float32x2_t v15 = vadd_f32(v10, vsub_f32(v12, vmul_f32(a2, _D6)));
  return vdiv_f32(vadd_f32(vmul_n_f32(vadd_f32(v15, vmul_n_f32(vadd_f32(v14, v14), a5)), a5), vadd_f32(vsub_f32(v12, v10), vmul_n_f32(vadd_f32(v15, vmul_n_f32(v14, a5)), a5))), _D6);
}

float sub_2347B98EC(float a1, float a2)
{
  return (float)(1.0 / (float)(a2 - a1)) + (float)(1.0 / (float)(a2 - a1));
}

double sub_2347B9940(float32x4_t a1, float32x4_t a2, float32x4_t a3)
{
  float32x4_t v3 = vsubq_f32(a2, a1);
  int32x4_t v4 = (int32x4_t)vmulq_f32(v3, v3);
  v4.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v4, 2), vadd_f32(*(float32x2_t *)v4.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v4.i8, 1))).u32[0];
  float32x2_t v5 = vrsqrte_f32((float32x2_t)v4.u32[0]);
  float32x2_t v6 = vmul_f32(v5, vrsqrts_f32((float32x2_t)v4.u32[0], vmul_f32(v5, v5)));
  float32x4_t v7 = vmulq_n_f32(v3, vmul_f32(v6, vrsqrts_f32((float32x2_t)v4.u32[0], vmul_f32(v6, v6))).f32[0]);
  float32x4_t v8 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v7, (int32x4_t)v7), (int8x16_t)v7, 0xCuLL);
  float32x4_t v9 = vmlaq_f32(vmulq_f32(v8, vnegq_f32(a3)), v7, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)a3, (int32x4_t)a3), (int8x16_t)a3, 0xCuLL));
  float32x4_t v10 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v9, (int32x4_t)v9), (int8x16_t)v9, 0xCuLL);
  int32x4_t v11 = (int32x4_t)vmulq_f32(v9, v9);
  v11.i32[0] = vadd_f32((float32x2_t)vdup_lane_s32(*(int32x2_t *)v11.i8, 1), vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v11, 2), *(float32x2_t *)v11.i8)).u32[0];
  float32x2_t v12 = vrsqrte_f32((float32x2_t)v11.u32[0]);
  float32x2_t v13 = vmul_f32(v12, vrsqrts_f32((float32x2_t)v11.u32[0], vmul_f32(v12, v12)));
  float32x4_t v14 = vmulq_n_f32(v10, vmul_f32(v13, vrsqrts_f32((float32x2_t)v11.u32[0], vmul_f32(v13, v13))).f32[0]);
  return COERCE_DOUBLE(__PAIR64__(vdupq_laneq_s32((int32x4_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v14, (int32x4_t)v14), (int8x16_t)v14, 0xCuLL), vnegq_f32(v7)), v14, v8), 2).u32[0], v14.u32[0]));
}

float sub_2347B9A8C(float a1, float a2)
{
  return (float)(1.0 / tanf((float)(a1 * 0.5) * 0.017453)) / a2;
}

uint64_t sub_2347B9B18(char a1)
{
  if ((a1 & 1) == 0)
  {
    uint64_t v5 = OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_directionalDebugEntity;
    if (*(void *)(v1 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_directionalDebugEntity))
    {
      type metadata accessor for DebugFrameEntity();
      swift_retain();
      sub_2347ED6F0();
      swift_release();
    }
    *(void *)(v1 + v5) = 0;
    goto LABEL_8;
  }
  type metadata accessor for DebugFrameEntity();
  swift_allocObject();
  uint64_t v2 = sub_2347DE0A0();
  uint64_t v3 = OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_directionalDebugEntity;
  *(void *)(v1 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_directionalDebugEntity) = v2;
  uint64_t result = swift_release();
  if (!*(void *)(v1 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_directionalLight))
  {
    __break(1u);
    goto LABEL_12;
  }
  if (!*(void *)(v1 + v3))
  {
LABEL_12:
    __break(1u);
    return result;
  }
  sub_2347EDA20();
  swift_retain();
  swift_retain();
  sub_2347ED700();
  swift_release();
LABEL_8:

  return swift_release();
}

void sub_2347B9C44(float a1)
{
}

void sub_2347B9C8C(float a1)
{
}

void sub_2347B9CD4(uint64_t (*a1)(void), uint64_t *a2, void (*a3)(uint64_t, float), void (*a4)(char *), float a5)
{
  float32x4_t v42 = a3;
  float32x4_t v43 = a4;
  uint64_t v8 = a1(0);
  MEMORY[0x270FA5388](v8 - 8);
  float32x4_t v41 = (char *)&v36 - v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2687AC570);
  MEMORY[0x270FA5388](v10 - 8);
  float32x2_t v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_2347EE280();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  float v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void *)(v5 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_dollHouse);
  if (!v17) {
    goto LABEL_21;
  }
  uint64_t v40 = *a2;
  *(float *)(v17 + v40) = a5;
  swift_retain();
  sub_23469DDFC();
  unint64_t v18 = sub_2347DD0CC();
  swift_release();
  if (v18 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_2347EEEC0();
    swift_bridgeObjectRelease();
    if (v19) {
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v19)
    {
LABEL_4:
      if (v19 >= 1)
      {
        uint64_t v20 = 0;
        uint64_t v44 = v17;
        unint64_t v45 = v18 & 0xC000000000000001;
        float32x4_t v21 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
        float32x4_t v39 = (void (**)(char *, char *, uint64_t))(v14 + 32);
        float32x4_t v37 = (void (**)(uint64_t *, char *, uint64_t))(v14 + 16);
        uint64_t v38 = (void (**)(char *, uint64_t))(v14 + 8);
        long long v36 = xmmword_2347F0FA0;
        unint64_t v46 = v18;
        do
        {
          if (v45)
          {
            uint64_t v22 = MEMORY[0x237DC6CF0](v20, v18);
          }
          else
          {
            uint64_t v22 = *(void *)(v18 + 8 * v20 + 32);
            swift_retain();
          }
          uint64_t v23 = v22 + qword_2687BDFB0;
          swift_beginAccess();
          sub_2346A1DCC(v23, (uint64_t)v48);
          uint64_t v25 = v49;
          uint64_t v24 = v50;
          __swift_project_boxed_opaque_existential_1(v48, v49);
          (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v24 + 8))(v47, v25, v24);
          __swift_instantiateConcreteTypeFromMangledName(&qword_2687AC578);
          int v26 = swift_dynamicCast();
          long long v27 = *v21;
          if (v26)
          {
            v27(v12, 0, 1, v13);
            (*v39)(v16, v12, v13);
            uint64_t v28 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
            long long v29 = v41;
            v42(v28, *(float *)(v44 + v40));
            v43(v29);
            type metadata accessor for ScanEntity();
            sub_2347BA20C();
            long long v30 = (void (*)(void *, void))sub_2347EDFD0();
            uint64_t v32 = v31;
            uint64_t v33 = sub_2347ED990();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 48))(v32, 1, v33))
            {
              __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2687ACB30);
              uint64_t v34 = swift_allocObject();
              *(_OWORD *)(v34 + 16) = v36;
              *(void *)(v34 + 56) = v13;
              *(void *)(v34 + 64) = MEMORY[0x263F165F8];
              boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v34 + 32));
              (*v37)(boxed_opaque_existential_1, v16, v13);
              sub_2347ED980();
            }
            v30(v48, 0);
            unint64_t v18 = v46;
            swift_release();
            (*v38)(v16, v13);
          }
          else
          {
            v27(v12, 1, 1, v13);
            swift_release();
            sub_2346A1BB4((uint64_t)v12);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
            unint64_t v18 = v46;
          }
          ++v20;
        }
        while (v19 != v20);
        swift_release();
        swift_bridgeObjectRelease();
        return;
      }
      __break(1u);
LABEL_21:
      __break(1u);
      return;
    }
  }
  swift_release();

  swift_bridgeObjectRelease();
}

unint64_t sub_2347BA20C()
{
  unint64_t result = qword_2687AC580;
  if (!qword_2687AC580)
  {
    type metadata accessor for ScanEntity();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2687AC580);
  }
  return result;
}

id sub_2347BA264(void *a1)
{
  id result = objc_msgSend(a1, sel_scale);
  double v5 = 1.0 / v4;
  if (v5 != 0.0)
  {
    float v6 = v5;
    *(float *)(v1 + qword_2687AE630) = fminf(fmaxf(*(float *)(v1 + qword_2687AE630) / v6, 0.1), 100.0);
    *(float *)(v1 + qword_2687AE660) = *(float *)(v1 + qword_2687AE660) * v6;
    return objc_msgSend(a1, sel_setScale_, 1.0);
  }
  return result;
}

void sub_2347BA31C()
{
  uint64_t v1 = qword_2687AE5E0;
  uint64_t v2 = *(void **)(v0 + qword_2687AE5F0);
  if (*(void *)(v0 + qword_2687AE5E0))
  {
    if (!v2)
    {
      uint64_t v3 = *(void **)(v0 + qword_2687AE5E0);
      if (!v3) {
        return;
      }
      goto LABEL_10;
    }
  }
  else if (!v2)
  {
    return;
  }
  self;
  double v4 = (void *)swift_dynamicCastObjCClass();
  id v5 = v2;
  float v6 = v5;
  if (v4)
  {
    objc_msgSend(v4, sel_decelerationDelta);
    uint64_t v7 = qword_2687AE638;
    float v9 = v8 + *(float *)(v0 + qword_2687AE638);
  }
  else
  {
    objc_msgSend(v5, sel_decelerationDelta);
    uint64_t v7 = qword_2687AE638;
    float v9 = *(float *)(v0 + qword_2687AE638) - v10;
  }
  *(float *)(v0 + v7) = v9;
  *(float *)(v0 + qword_2687AE648) = v9;

  uint64_t v3 = *(void **)(v0 + v1);
  if (v3)
  {
LABEL_10:
    self;
    uint64_t v11 = (void *)swift_dynamicCastObjCClass();
    id v12 = v3;
    id v17 = v12;
    if (v11)
    {
      objc_msgSend(v11, sel_decelerationDelta);
      uint64_t v13 = qword_2687AE640;
      float v15 = v14 + *(float *)(v0 + qword_2687AE640);
    }
    else
    {
      objc_msgSend(v12, sel_decelerationDelta);
      uint64_t v13 = qword_2687AE640;
      float v15 = *(float *)(v0 + qword_2687AE640) - v16;
    }
    *(float *)(v0 + v13) = v15;
    *(float *)(v0 + qword_2687AE650) = v15;
  }
}

void sub_2347BA4B4()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2687AC8F0);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v139 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2347ED520();
  uint64_t v4 = sub_2347ED540();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 0, 1, v4);
  uint64_t v5 = v0 + qword_2687BE348;
  swift_beginAccess();
  sub_2346B190C((uint64_t)v3, v5, &qword_2687AC8F0);
  swift_endAccess();
  uint64_t v6 = qword_2687AE5D8;
  uint64_t v7 = *(void *)(v0 + qword_2687AE5D8);
  float v8 = self;
  float v9 = (void *)MEMORY[0x263F28228];
  float v10 = (void *)MEMORY[0x263F28218];
  if (v7) {
    uint64_t v11 = (void *)MEMORY[0x263F28218];
  }
  else {
    uint64_t v11 = (void *)MEMORY[0x263F28228];
  }
  objc_msgSend(v8, sel_floatForKey_, *v11);
  int v13 = v12;
  uint64_t v14 = v0 + qword_2687AE5B0;
  float v15 = *(double *)(v0 + qword_2687AE5B0);
  float v16 = self;
  uint64_t v17 = *MEMORY[0x263F28208];
  objc_msgSend(v16, sel_floatForKey_, *MEMORY[0x263F28208]);
  float v19 = v18 * v15;
  uint64_t v20 = *(void **)(v0 + v6);
  if (!v20) {
    goto LABEL_11;
  }
  uint64_t v21 = qword_2687AE638;
  int v22 = *(_DWORD *)(v0 + qword_2687AE638);
  id v23 = v20;
  LODWORD(v24) = v22;
  if (objc_msgSend(v23, sel_offsetIsWithinRubberBandedRange_, v24))
  {
    objc_msgSend(v16, sel_floatForKey_, *MEMORY[0x263F281E0]);
    int v26 = v25;
    int v27 = *(_DWORD *)(v0 + v21);
    objc_msgSend(v23, sel_minOffset);
    int v29 = v28;
    objc_msgSend(v23, sel_maxOffset);
    int v31 = v30;
    id v32 = objc_allocWithZone(MEMORY[0x263F28250]);
    LODWORD(v33) = v26;
    LODWORD(v34) = v27;
    LODWORD(v35) = v29;
    LODWORD(v36) = v31;
    id v37 = objc_msgSend(v32, sel_initWithVelocity_minEndDelta_startingOffset_minOffset_maxOffset_, 0.0, v33, v34, v35, v36);
    id v38 = *(id *)(v0 + qword_2687AE5F0);
    *(void *)(v0 + qword_2687AE5F0) = v37;

LABEL_10:
    float v9 = (void *)MEMORY[0x263F28228];
    goto LABEL_13;
  }

  float32x4_t v39 = *(void **)(v0 + v6);
  float v9 = (void *)MEMORY[0x263F28228];
  if (v39)
  {
    uint64_t v40 = *MEMORY[0x263F281F0];
    id v38 = v39;
    objc_msgSend(v16, sel_floatForKey_, v40);
    if (v41 <= fabsf(v19))
    {
      objc_msgSend(v16, sel_floatForKey_, *MEMORY[0x263F281F8]);
      float v43 = v42;
      objc_msgSend(v38, sel_rubberBandFactor);
      int v45 = v44;
      objc_msgSend(v38, sel_minOffset);
      float v47 = v46 - v43;
      objc_msgSend(v38, sel_maxOffset);
      float v49 = v43 + v48;
      id v50 = objc_allocWithZone(MEMORY[0x263F28238]);
      LODWORD(v51) = v45;
      *(float *)&double v52 = v47;
      *(float *)&double v53 = v49;
      *(float *)&double v54 = v43;
      id v55 = objc_msgSend(v50, sel_initWithRubberBandFactor_minOffset_maxOffset_overshoot_, v51, v52, v53, v54);
      float v56 = v19 * *(float *)(v0 + qword_2687AE668);
      objc_msgSend(v16, sel_floatForKey_, *MEMORY[0x263F281E8]);
      int v58 = v57;
      int v59 = *(_DWORD *)(v0 + qword_2687AE638);
      id v60 = objc_allocWithZone(MEMORY[0x263F28240]);
      *(float *)&double v61 = v56;
      LODWORD(v62) = v58;
      LODWORD(v63) = v59;
      LODWORD(v64) = v13;
      id v65 = objc_msgSend(v60, sel_initWithVelocity_minEndDelta_startingOffset_decelerationRate_rubberBand_, v55, v61, v62, v63, v64);
      uint64_t v66 = *(void **)(v0 + qword_2687AE5F0);
      *(void *)(v0 + qword_2687AE5F0) = v65;

      id v38 = v66;
      goto LABEL_10;
    }
  }
  else
  {
LABEL_11:
    objc_msgSend(v16, sel_floatForKey_, *MEMORY[0x263F281F0]);
    if (v67 > fabsf(v19)) {
      goto LABEL_14;
    }
    float v68 = v19 * *(float *)(v0 + qword_2687AE668);
    objc_msgSend(v16, sel_floatForKey_, *MEMORY[0x263F281E8]);
    int v70 = v69;
    id v71 = objc_allocWithZone(MEMORY[0x263F28230]);
    *(float *)&double v72 = v68;
    LODWORD(v73) = v70;
    LODWORD(v74) = v13;
    id v75 = objc_msgSend(v71, sel_initWithVelocity_minEndDelta_decelerationRate_, v72, v73, v74);
    id v38 = *(id *)(v0 + qword_2687AE5F0);
    *(void *)(v0 + qword_2687AE5F0) = v75;
  }
LABEL_13:

LABEL_14:
  uint64_t v76 = qword_2687AE5C8;
  if (*(void *)(v0 + qword_2687AE5C8)) {
    uint64_t v77 = v10;
  }
  else {
    uint64_t v77 = v9;
  }
  objc_msgSend(v16, sel_floatForKey_, *v77);
  int v79 = v78;
  float v80 = *(double *)(v14 + 8);
  objc_msgSend(v16, sel_floatForKey_, v17);
  float v82 = v81 * v80;
  float32x4_t v83 = *(void **)(v0 + v76);
  if (v83)
  {
    uint64_t v84 = qword_2687AE640;
    int v85 = *(_DWORD *)(v0 + qword_2687AE640);
    id v86 = v83;
    LODWORD(v87) = v85;
    if (objc_msgSend(v86, sel_offsetIsWithinRubberBandedRange_, v87))
    {
      objc_msgSend(v16, sel_floatForKey_, *MEMORY[0x263F281E0]);
      int v89 = v88;
      int v90 = *(_DWORD *)(v0 + v84);
      objc_msgSend(v86, sel_minOffset);
      int v92 = v91;
      objc_msgSend(v86, sel_maxOffset);
      int v94 = v93;
      id v95 = objc_allocWithZone(MEMORY[0x263F28250]);
      LODWORD(v96) = v89;
      LODWORD(v97) = v90;
      LODWORD(v98) = v92;
      LODWORD(v99) = v94;
      id v100 = objc_msgSend(v95, sel_initWithVelocity_minEndDelta_startingOffset_minOffset_maxOffset_, 0.0, v96, v97, v98, v99);
      id v101 = *(id *)(v0 + qword_2687AE5E0);
      *(void *)(v0 + qword_2687AE5E0) = v100;

      goto LABEL_26;
    }

    float32x4_t v103 = *(void **)(v0 + v76);
    uint64_t v102 = *MEMORY[0x263F281F0];
    if (v103)
    {
      id v101 = v103;
      objc_msgSend(v16, sel_floatForKey_, v102);
      if (v104 <= fabsf(v82))
      {
        objc_msgSend(v16, sel_floatForKey_, *MEMORY[0x263F281F8]);
        float v106 = v105;
        objc_msgSend(v101, sel_rubberBandFactor);
        int v108 = v107;
        objc_msgSend(v101, sel_minOffset);
        float v110 = v109 - v106;
        objc_msgSend(v101, sel_maxOffset);
        float v112 = v106 + v111;
        id v113 = objc_allocWithZone(MEMORY[0x263F28238]);
        LODWORD(v114) = v108;
        *(float *)&double v115 = v110;
        *(float *)&double v116 = v112;
        *(float *)&double v117 = v106;
        id v118 = objc_msgSend(v113, sel_initWithRubberBandFactor_minOffset_maxOffset_overshoot_, v114, v115, v116, v117);
        float v119 = v82 * *(float *)(v0 + qword_2687AE670);
        objc_msgSend(v16, sel_floatForKey_, *MEMORY[0x263F281E8]);
        int v121 = v120;
        int v122 = *(_DWORD *)(v0 + qword_2687AE640);
        id v123 = objc_allocWithZone(MEMORY[0x263F28240]);
        *(float *)&double v124 = v119;
        LODWORD(v125) = v121;
        LODWORD(v126) = v122;
        LODWORD(v127) = v79;
        id v128 = objc_msgSend(v123, sel_initWithVelocity_minEndDelta_startingOffset_decelerationRate_rubberBand_, v118, v124, v125, v126, v127);
        float32x4_t v129 = *(void **)(v0 + qword_2687AE5E0);
        *(void *)(v0 + qword_2687AE5E0) = v128;

        id v101 = v129;
      }
      goto LABEL_26;
    }
  }
  else
  {
    uint64_t v102 = *MEMORY[0x263F281F0];
  }
  objc_msgSend(v16, sel_floatForKey_, v102);
  if (v130 > fabsf(v82)) {
    return;
  }
  float v131 = v82 * *(float *)(v0 + qword_2687AE670);
  objc_msgSend(v16, sel_floatForKey_, *MEMORY[0x263F281E8]);
  int v133 = v132;
  id v134 = objc_allocWithZone(MEMORY[0x263F28230]);
  *(float *)&double v135 = v131;
  LODWORD(v136) = v133;
  LODWORD(v137) = v79;
  id v138 = objc_msgSend(v134, sel_initWithVelocity_minEndDelta_decelerationRate_, v135, v136, v137);
  id v101 = *(id *)(v0 + qword_2687AE5E0);
  *(void *)(v0 + qword_2687AE5E0) = v138;
LABEL_26:
}

void sub_2347BAC00(void *a1)
{
  uint64_t v3 = (char *)objc_msgSend(a1, sel_state);
  id v4 = objc_msgSend(a1, sel_view);
  objc_msgSend(a1, sel_translationInView_, v4);
  double v6 = v5;
  double v8 = v7;

  if ((unint64_t)(v3 - 3) >= 3)
  {
    if (v3 == (char *)2)
    {
      id v11 = objc_msgSend(a1, sel_view);
      objc_msgSend(a1, sel_velocityInView_, v11);
      uint64_t v13 = v12;
      uint64_t v15 = v14;

      float v16 = (void *)(v1 + qword_2687AE5B0);
      void *v16 = v13;
      v16[1] = v15;
      sub_2347BBF54(v6, v8);
      uint64_t v17 = (double *)(v1 + qword_2687AE5B8);
      double *v17 = v6;
      v17[1] = v8;
    }
    else if (v3 == (char *)1)
    {
      float v9 = (double *)(v1 + qword_2687AE5B8);
      *float v9 = v6;
      v9[1] = v8;
      float v10 = (void *)(v1 + qword_2687AE5B0);
      void *v10 = 0;
      v10[1] = 0;
    }
  }
  else if (*(unsigned char *)(v1 + qword_2687BE390) == 1)
  {
    sub_2347BA4B4();
  }
}

uint64_t sub_2347BAD84(uint64_t a1, void *a2)
{
  sub_2347BAE48(a1, (uint64_t)v5);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC8RoomPlan25DollHouseCameraController_delegate;
  swift_beginAccess();
  sub_2346B190C((uint64_t)v5, v3, &qword_2687AEDD8);
  return swift_endAccess();
}

uint64_t sub_2347BADF4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8RoomPlan25DollHouseCameraController_delegate;
  swift_beginAccess();
  return sub_2347BAE48(v3, a1);
}

uint64_t sub_2347BAE48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2687AEDD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2347BAEB0(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8RoomPlan25DollHouseCameraController_delegate;
  swift_beginAccess();
  sub_2346B190C(a1, v3, &qword_2687AEDD8);
  return swift_endAccess();
}

uint64_t (*sub_2347BAF14())()
{
  return j__swift_endAccess;
}

float sub_2347BAF70()
{
  uint64_t v1 = (unsigned char *)(v0 + OBJC_IVAR____TtC8RoomPlan25DollHouseCameraController____lazy_storage___pitchAdjustment);
  if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC8RoomPlan25DollHouseCameraController____lazy_storage___pitchAdjustment + 4) & 1) == 0) {
    return *(float *)v1;
  }
  *(_DWORD *)uint64_t v1 = -1085730854;
  v1[4] = 0;
  return -0.7854;
}

id DollHouseCameraController.__allocating_init(arView:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return DollHouseCameraController.init(arView:)(a1);
}

id DollHouseCameraController.init(arView:)(void *a1)
{
  id v3 = &v1[OBJC_IVAR____TtC8RoomPlan25DollHouseCameraController_delegate];
  *(_OWORD *)id v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((void *)v3 + 4) = 0;
  uint64_t v4 = &v1[OBJC_IVAR____TtC8RoomPlan25DollHouseCameraController_arViewSize];
  *(void *)uint64_t v4 = 0;
  *((void *)v4 + 1) = 0;
  *(void *)&v1[OBJC_IVAR____TtC8RoomPlan25DollHouseCameraController_panGestureRecognizer] = 0;
  *(void *)&v1[OBJC_IVAR____TtC8RoomPlan25DollHouseCameraController_pinchGestureRecognizer] = 0;
  *(void *)&v1[OBJC_IVAR____TtC8RoomPlan25DollHouseCameraController_immediateLongPressRecognizer] = 0;
  double v5 = &v1[OBJC_IVAR____TtC8RoomPlan25DollHouseCameraController____lazy_storage___pitchAdjustment];
  *(_DWORD *)double v5 = 0;
  v5[4] = 1;
  double v6 = v1;
  sub_2347ED520();
  *(void *)&v6[OBJC_IVAR____TtC8RoomPlan25DollHouseCameraController_arView] = a1;
  id v7 = a1;
  objc_msgSend(v7, sel_bounds);
  *(void *)uint64_t v4 = v8;
  *((void *)v4 + 1) = v9;
  *(void *)&v6[OBJC_IVAR____TtC8RoomPlan25DollHouseCameraController_camera] = sub_2347BC0B0(v7);

  v12.receiver = v6;
  v12.super_class = (Class)type metadata accessor for DollHouseCameraController();
  id v10 = objc_msgSendSuper2(&v12, sel_init);
  sub_2347BB6A0(v7);

  return v10;
}

uint64_t sub_2347BB0FC()
{
  return sub_2347ED6F0();
}

double sub_2347BB140(float32x4_t a1)
{
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC8RoomPlan25DollHouseCameraController_arView);
  swift_retain();
  double v3 = sub_234711CA0(v2, a1);
  swift_release();
  return v3;
}

void sub_2347BB1D8()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC8RoomPlan25DollHouseCameraController_camera);
  *(_DWORD *)(v1 + qword_2687AE630) = 1065353216;
  *(_DWORD *)(v1 + qword_2687AE660) = 1065353216;
  *(_DWORD *)(v1 + qword_2687AE638) = 0;
  *(unsigned char *)(v1 + qword_2687AE6E0) = 1;
  sub_2347ED620();
  int8x16_t v7 = v2;
  sub_2347ED630();
  int8x16_t v6 = v3;
  float v4 = sub_2347BAF70();
  sub_2347887EC(0, 0, 1, 0, v7, v6, v4, 1.0, v5);
}

uint64_t sub_2347BB28C()
{
  uint64_t v1 = v0;
  int8x16_t v2 = *(void **)(v0 + OBJC_IVAR____TtC8RoomPlan25DollHouseCameraController_arView);
  objc_msgSend(v2, sel_bounds);
  float v4 = (void *)(v1 + OBJC_IVAR____TtC8RoomPlan25DollHouseCameraController_arViewSize);
  if (v5 != *(double *)(v1 + OBJC_IVAR____TtC8RoomPlan25DollHouseCameraController_arViewSize)
    || v3 != *(double *)(v1 + OBJC_IVAR____TtC8RoomPlan25DollHouseCameraController_arViewSize + 8))
  {
    uint64_t v7 = *(void *)(v1 + OBJC_IVAR____TtC8RoomPlan25DollHouseCameraController_camera);
    objc_msgSend(v2, sel_bounds);
    double Width = CGRectGetWidth(v22);
    objc_msgSend(v2, sel_bounds);
    float v9 = Width / CGRectGetHeight(v23);
    *(float *)(v7 + qword_2687AE5F8) = v9;
    REMatrix4x4MakePerspectiveFieldOfViewReverseDepth();
    id v10 = (_OWORD *)(v7 + qword_2687AE620);
    _OWORD *v10 = v11;
    v10[1] = v12;
    void v10[2] = v13;
    v10[3] = v14;
    objc_msgSend(v2, sel_bounds);
    *float v4 = v15;
    v4[1] = v16;
  }
  uint64_t v17 = *(void *)(v1 + OBJC_IVAR____TtC8RoomPlan25DollHouseCameraController_camera);
  sub_2347890A0(*MEMORY[0x263EF89A8], *(double *)(MEMORY[0x263EF89A8] + 16), *(float32x4_t *)(MEMORY[0x263EF89A8] + 32));
  sub_2347BA31C();
  *(float *)&double v18 = fminf(*(float *)(v17 + qword_2687AE6D0) + 0.01, 1.0);
  *(_DWORD *)(v17 + qword_2687AE6D0) = LODWORD(v18);
  float v19 = fminf(*(float *)(v17 + qword_2687AE6D8) + 0.01, 1.0);
  *(float *)(v17 + qword_2687AE6D8) = v19;
  sub_234788C2C(v18, v19);

  return sub_2347BB3FC();
}

uint64_t sub_2347BB3FC()
{
  uint64_t v0 = sub_2347ED670();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  double v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2347EDE80();
  uint64_t v4 = sub_2347EDBD0();
  uint64_t result = swift_release();
  if (v4)
  {
    sub_2347EDEA0();
    sub_2347ED600();
    int8x16_t v6 = *(void (**)(char *, uint64_t))(v1 + 8);
    v6(v3, v0);
    RECustomMatrixCameraComponentGetComponentType();
    if (REEntityGetComponentByClass())
    {
      swift_retain();
      sub_2347EDEA0();
      sub_2347ED600();
      v6(v3, v0);
      RECustomMatrixCameraComponentGetComponentType();
      REEntityGetOrAddComponentByClass();
      RECustomMatrixCameraComponentGetProjectionMatrix();
      long long v26 = v8;
      long long v27 = v7;
      long long v24 = v10;
      long long v25 = v9;
      swift_release();
      RECustomMatrixCameraComponentSetProjectionFromMatrix();
      type metadata accessor for ARViewCameraEntity();
      swift_retain();
      sub_2347ED750();
      long long v25 = v12;
      long long v26 = v11;
      long long v24 = v13;
      long long v27 = v14;
      swift_release();
      sub_2347EDFB0();
      uint64_t v15 = (void (*)(void *, void))sub_2347ED790();
      uint64_t v17 = v16;
      sub_2347EF180();
      long long v23 = v18;
      sub_2347EE9A0();
      long long v22 = v19;
      sub_2347EE990();
      _OWORD *v17 = v20;
      long long v21 = v23;
      v17[1] = v22;
      id v17[2] = v21;
      v15(v28, 0);
    }
    return swift_release();
  }
  return result;
}

id sub_2347BB6A0(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82A00]), sel_initWithTarget_action_, v1, sel_didPanWithPanGesture_);
  uint64_t v4 = OBJC_IVAR____TtC8RoomPlan25DollHouseCameraController_panGestureRecognizer;
  double v5 = *(void **)(v1 + OBJC_IVAR____TtC8RoomPlan25DollHouseCameraController_panGestureRecognizer);
  *(void *)(v1 + OBJC_IVAR____TtC8RoomPlan25DollHouseCameraController_panGestureRecognizer) = v3;

  id result = *(id *)(v1 + v4);
  if (!result)
  {
    __break(1u);
    goto LABEL_12;
  }
  objc_msgSend(result, sel_setDelegate_, v1);
  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82A40]), sel_initWithTarget_action_, v1, sel_didPinchWithPinchGesture_);
  uint64_t v8 = OBJC_IVAR____TtC8RoomPlan25DollHouseCameraController_pinchGestureRecognizer;
  long long v9 = *(void **)(v1 + OBJC_IVAR____TtC8RoomPlan25DollHouseCameraController_pinchGestureRecognizer);
  *(void *)(v1 + OBJC_IVAR____TtC8RoomPlan25DollHouseCameraController_pinchGestureRecognizer) = v7;

  id result = *(id *)(v1 + v8);
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  objc_msgSend(result, sel_setDelegate_, v1);
  id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82938]), sel_initWithTarget_action_, v1, sel_didTouchDownWithLongPressGesture_);
  uint64_t v11 = OBJC_IVAR____TtC8RoomPlan25DollHouseCameraController_immediateLongPressRecognizer;
  long long v12 = *(void **)(v1 + OBJC_IVAR____TtC8RoomPlan25DollHouseCameraController_immediateLongPressRecognizer);
  *(void *)(v1 + OBJC_IVAR____TtC8RoomPlan25DollHouseCameraController_immediateLongPressRecognizer) = v10;

  id result = *(id *)(v1 + v11);
  if (!result)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  objc_msgSend(result, sel_setMinimumPressDuration_, 0.0);
  id result = *(id *)(v1 + v11);
  if (!result)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  id result = objc_msgSend(result, sel_setDelegate_, v1);
  if (!*(void *)(v1 + v4))
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  id result = objc_msgSend(a1, sel_addGestureRecognizer_);
  if (!*(void *)(v1 + v8))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  id result = objc_msgSend(a1, sel_addGestureRecognizer_);
  if (!*(void *)(v1 + v11))
  {
LABEL_17:
    __break(1u);
    return result;
  }

  return objc_msgSend(a1, sel_addGestureRecognizer_);
}

id sub_2347BB8B8(void *a1)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC8RoomPlan25DollHouseCameraController_camera);
  id result = objc_msgSend(a1, sel_scale);
  double v6 = 1.0 / v5;
  if (v6 != 0.0)
  {
    float v7 = v6;
    *(float *)(v3 + qword_2687AE630) = fminf(fmaxf(*(float *)(v3 + qword_2687AE630) / v7, 0.1), 100.0);
    *(float *)(v3 + qword_2687AE660) = *(float *)(v3 + qword_2687AE660) * v7;
    return objc_msgSend(a1, sel_setScale_, 1.0);
  }
  return result;
}

void sub_2347BB9E4(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_2347ED540();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  float v7 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v31 - v10;
  objc_msgSend(a1, sel_locationInView_, *(void *)(v1 + OBJC_IVAR____TtC8RoomPlan25DollHouseCameraController_arView), v9);
  double v13 = v12;
  double v15 = v14;
  uint64_t v16 = *(void *)(v1 + OBJC_IVAR____TtC8RoomPlan25DollHouseCameraController_camera);
  BOOL v17 = sub_2347889F4();
  id v18 = objc_msgSend(a1, sel_state);
  if (v18 == (id)3)
  {
    sub_2347ED520();
    uint64_t v23 = v1 + OBJC_IVAR____TtC8RoomPlan25DollHouseCameraController_startTapTime;
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v23, v4);
    sub_2347ED4F0();
    double v25 = v24;
    long long v26 = *(void (**)(char *, uint64_t))(v5 + 8);
    v26(v7, v4);
    v26(v11, v4);
    *(unsigned char *)(v16 + qword_2687AE6F0) = 0;
    float v27 = 1.0;
    if (*(unsigned char *)(v16 + qword_2687BE380)) {
      float v27 = 0.0;
    }
    *(float *)(v16 + qword_2687AE6D0) = v27;
    *(float *)(v16 + qword_2687AE6D8) = v27;
    if (!v17 && v25 < 0.5)
    {
      uint64_t v28 = v2 + OBJC_IVAR____TtC8RoomPlan25DollHouseCameraController_delegate;
      swift_beginAccess();
      sub_2347BAE48(v28, (uint64_t)v34);
      if (v35)
      {
        sub_2346A1DCC((uint64_t)v34, (uint64_t)v31);
        sub_2347BC5E4((uint64_t)v34);
        uint64_t v29 = v32;
        uint64_t v30 = v33;
        __swift_project_boxed_opaque_existential_1(v31, v32);
        (*(void (**)(uint64_t, uint64_t, uint64_t, double, double))(v30 + 8))(v2, v29, v30, v13, v15);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
      }
      else
      {
        sub_2347BC5E4((uint64_t)v34);
      }
    }
  }
  else if (v18 == (id)1)
  {
    sub_2347ED520();
    uint64_t v19 = v1 + OBJC_IVAR____TtC8RoomPlan25DollHouseCameraController_startTapTime;
    swift_beginAccess();
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 40))(v19, v11, v4);
    swift_endAccess();
    *(unsigned char *)(v16 + qword_2687AE6F0) = 1;
    long long v20 = *(void **)(v16 + qword_2687AE5F0);
    *(void *)(v16 + qword_2687AE5F0) = 0;

    long long v21 = *(void **)(v16 + qword_2687AE5E8);
    *(void *)(v16 + qword_2687AE5E8) = 0;

    long long v22 = *(void **)(v16 + qword_2687AE5E0);
    *(void *)(v16 + qword_2687AE5E0) = 0;
  }
}

id DollHouseCameraController.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void DollHouseCameraController.init()()
{
}

id DollHouseCameraController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DollHouseCameraController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_2347BBF54(double a1, double a2)
{
  uint64_t v4 = v2 + qword_2687AE5B8;
  float v5 = a1 - *(double *)(v2 + qword_2687AE5B8);
  uint64_t v6 = self;
  objc_msgSend(v6, sel_floatForKey_, *MEMORY[0x263F28220]);
  float v8 = *(float *)(v2 + qword_2687AE648) - (float)((float)(v7 * v5) * *(float *)(v2 + qword_2687AE668));
  *(float *)(v2 + qword_2687AE648) = v8;
  double v9 = *(void **)(v2 + qword_2687AE5D8);
  if (v9) {
    objc_msgSend(v9, sel_rubberBandOffsetForOffset_);
  }
  *(float *)(v2 + qword_2687AE638) = v8;
  float v10 = a2 - *(double *)(v4 + 8);
  objc_msgSend(v6, sel_floatForKey_, *MEMORY[0x263F28208]);
  float v12 = *(float *)(v2 + qword_2687AE650) - (float)((float)(v11 * v10) * *(float *)(v2 + qword_2687AE670));
  *(float *)(v2 + qword_2687AE650) = v12;
  id result = *(id *)(v2 + qword_2687AE5C8);
  if (result) {
    id result = objc_msgSend(result, sel_rubberBandOffsetForOffset_);
  }
  *(float *)(v2 + qword_2687AE640) = v12;
  return result;
}

uint64_t sub_2347BC0B0(void *a1)
{
  type metadata accessor for ARViewCameraEntity();
  swift_allocObject();
  id v2 = a1;
  uint64_t v3 = sub_2347ED690();
  type metadata accessor for DollHouseCamera();
  swift_allocObject();
  uint64_t v4 = sub_2347881D4(v2, v3, 0, 0.9273);
  float v5 = (void (*)(unsigned char *, void))sub_2347ED790();
  float v7 = v6;
  sub_2347EF180();
  long long v13 = v8;
  sub_2347EE9A0();
  long long v12 = v9;
  sub_2347EE990();
  *float v7 = v10;
  v7[1] = v12;
  uint64_t v7[2] = v13;
  v5(v14, 0);
  *(unsigned char *)(v4 + qword_2687BE380) = 0;
  *(_DWORD *)(v4 + qword_2687AE688) = 1067030938;
  sub_234787ADC();
  sub_2347EDE80();
  sub_2347BC644();
  swift_retain();
  sub_2347EDBF0();
  swift_release();
  swift_release();
  return v4;
}

uint64_t type metadata accessor for DollHouseCameraController()
{
  uint64_t result = qword_2687AEE28;
  if (!qword_2687AEE28) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2347BC2A0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC8RoomPlan25DollHouseCameraController_delegate;
  swift_beginAccess();
  return sub_2347BAE48(v3, a2);
}

uint64_t dispatch thunk of DollHouseCameraControllerDelegate.dollHouseCameraController(_:didTapAtLocation:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_2347BC310()
{
  return type metadata accessor for DollHouseCameraController();
}

uint64_t sub_2347BC318()
{
  uint64_t result = sub_2347ED540();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for DollHouseCameraController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DollHouseCameraController);
}

uint64_t dispatch thunk of DollHouseCameraController.delegate.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x98))();
}

uint64_t dispatch thunk of DollHouseCameraController.delegate.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of DollHouseCameraController.delegate.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of DollHouseCameraController.__allocating_init(arView:)()
{
  return (*(uint64_t (**)(void))(v0 + 296))();
}

uint64_t dispatch thunk of DollHouseCameraController.clear()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x130))();
}

uint64_t dispatch thunk of DollHouseCameraController.project(_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x138))();
}

uint64_t dispatch thunk of DollHouseCameraController.moveToFitBoundingBox(_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x140))();
}

uint64_t dispatch thunk of DollHouseCameraController.update(deltaTime:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x148))();
}

uint64_t dispatch thunk of DollHouseCameraController.gestureRecognizer(_:shouldRecognizeSimultaneouslyWith:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x160))();
}

uint64_t sub_2347BC5E4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2687AEDD8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_2347BC644()
{
  unint64_t result = qword_2687AEE40;
  if (!qword_2687AEE40)
  {
    type metadata accessor for DollHouseCamera();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2687AEE40);
  }
  return result;
}

uint64_t sub_2347BC69C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_2347BC6B0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_2347BC6C4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_2347BC6D8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_2347BC6EC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

id sub_2347BC730()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorldSpaceManager();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for WorldSpaceManager()
{
  return self;
}

uint64_t sub_2347BC7D4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2687AE940);
  MEMORY[0x270FA5388](v6 - 8);
  long long v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_2347ED490();
  uint64_t v10 = *(void *)(v9 - 8);
  double v11 = MEMORY[0x270FA5388](v9);
  long long v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, double))(v10 + 48))(a1, 1, v9, v11) == 1)
  {
    sub_2346A7C30(a1, &qword_2687AE940);
    sub_2347CCB78(a2, (uint64_t)v8);
    swift_bridgeObjectRelease();
    return sub_2346A7C30((uint64_t)v8, &qword_2687AE940);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v13, a1, v9);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v17 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    sub_2347ABF54((uint64_t)v13, a2, isUniquelyReferenced_nonNull_native);
    uint64_t *v3 = v17;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_2347BC9A4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2687AE940);
  MEMORY[0x270FA5388](v6 - 8);
  long long v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_2347ED490();
  uint64_t v10 = *(void *)(v9 - 8);
  double v11 = MEMORY[0x270FA5388](v9);
  long long v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, double))(v10 + 48))(a1, 1, v9, v11) == 1)
  {
    sub_2346A7C30(a1, &qword_2687AE940);
    unint64_t v14 = sub_2347BFE34(a2);
    if (v15)
    {
      unint64_t v16 = v14;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v18 = *v3;
      uint64_t v22 = *v3;
      uint64_t *v3 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_2347D7EA4();
        uint64_t v18 = v22;
      }
      (*(void (**)(char *, unint64_t, uint64_t))(v10 + 32))(v8, *(void *)(v18 + 56) + *(void *)(v10 + 72) * v16, v9);
      sub_2347D4384(v16, v18);
      uint64_t *v3 = v18;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    }
    return sub_2346A7C30((uint64_t)v8, &qword_2687AE940);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v13, a1, v9);
    char v19 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v22 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    sub_2347AC0C8((uint64_t)v13, a2, v19);
    uint64_t *v3 = v22;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_2347BCC00(uint64_t a1)
{
  uint64_t v2 = sub_2347ED490();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  float v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  long long v8 = (char *)&v25 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2687AE940);
  MEMORY[0x270FA5388](v9 - 8);
  double v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2347C9FF4(&qword_2687AEFF0, MEMORY[0x263F06EA8]);
  uint64_t result = sub_2347EE8E0();
  int64_t v13 = 0;
  uint64_t v31 = a1;
  uint64_t v32 = result;
  uint64_t v16 = *(void *)(a1 + 64);
  uint64_t v15 = a1 + 64;
  uint64_t v14 = v16;
  uint64_t v17 = 1 << *(unsigned char *)(v15 - 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & v14;
  uint64_t v26 = v15;
  int64_t v27 = (unint64_t)(v17 + 63) >> 6;
  uint64_t v29 = v3 + 16;
  uint64_t v30 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
  uint64_t v28 = v3 + 48;
  if ((v18 & v14) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v20 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  for (unint64_t i = v20 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v23)) + (v13 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v11, *(void *)(v31 + 56) + *(void *)(v3 + 72) * i, v2);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v11, 0, 1, v2);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v11, 1, v2) == 1) {
      goto LABEL_25;
    }
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v11, v2);
    sub_2347C2AF8((uint64_t)v8, v5);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    if (v19) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v22 >= v27) {
      goto LABEL_24;
    }
    unint64_t v23 = *(void *)(v26 + 8 * v22);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v22 + 1;
      if (v22 + 1 >= v27) {
        goto LABEL_24;
      }
      unint64_t v23 = *(void *)(v26 + 8 * v13);
      if (!v23)
      {
        int64_t v13 = v22 + 2;
        if (v22 + 2 >= v27) {
          goto LABEL_24;
        }
        unint64_t v23 = *(void *)(v26 + 8 * v13);
        if (!v23)
        {
          int64_t v13 = v22 + 3;
          if (v22 + 3 >= v27) {
            goto LABEL_24;
          }
          unint64_t v23 = *(void *)(v26 + 8 * v13);
          if (!v23) {
            break;
          }
        }
      }
    }
LABEL_20:
    unint64_t v19 = (v23 - 1) & v23;
  }
  int64_t v24 = v22 + 4;
  if (v24 >= v27)
  {
LABEL_24:
    (*v30)(v11, 1, 1, v2);
LABEL_25:
    swift_release();
    return v32;
  }
  unint64_t v23 = *(void *)(v26 + 8 * v24);
  if (v23)
  {
    int64_t v13 = v24;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v13 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v13 >= v27) {
      goto LABEL_24;
    }
    unint64_t v23 = *(void *)(v26 + 8 * v13);
    ++v24;
    if (v23) {
      goto LABEL_20;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t CapturedRoom.ModelProvider.modelFileURL(for:)@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v19 = (char *)a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2687AE940);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_2347ED490();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  double v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *v2;
  uint64_t v12 = v2[1];
  uint64_t v20 = *v2;
  uint64_t v21 = v12;
  uint64_t v14 = type metadata accessor for CapturedRoom.Object(0);
  uint64_t result = CapturedRoom.ModelProvider.modelFileURL(for:)(*(void *)&a1[*(int *)(v14 + 36)], v7);
  if (!v3)
  {
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    {
      sub_2346A7C30((uint64_t)v7, &qword_2687AE940);
      uint64_t v20 = v13;
      uint64_t v21 = v12;
      unsigned __int8 v22 = *a1;
      return CapturedRoom.ModelProvider.modelFileURL(for:)(&v22, (uint64_t)v19);
    }
    else
    {
      uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
      v16(v11, v7, v8);
      uint64_t v17 = (uint64_t)v19;
      v16(v19, v11, v8);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56))(v17, 0, 1, v8);
    }
  }
  return result;
}

{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  unint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  void (*v18)(char *, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v19;
  void (*v21)(char *, char *, uint64_t);
  id v22;
  void *v23;
  unsigned int v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  void v29[2];
  void (*v30)(char *, unint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;

  uint64_t v32 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2687AE940);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_2347ED490();
  uint64_t v9 = *(void *)(v8 - 8);
  v10.n128_f64[0] = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *v2;
  if (!*(void *)(v13 + 16) || (uint64_t v14 = sub_2347BFE34(*a1), (v15 & 1) == 0))
  {
    uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v9 + 56);
    v18(v7, 1, 1, v8, v10);
LABEL_6:
    unint64_t v19 = v32;
    sub_2346A7C30((uint64_t)v7, &qword_2687AE940);
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v18)(v19, 1, 1, v8);
  }
  uint64_t v31 = v3;
  uint64_t v16 = *(void *)(v13 + 56) + *(void *)(v9 + 72) * v14;
  uint64_t v17 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
  v17(v7, v16, v8);
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v9 + 56);
  ((void (*)(char *, void, uint64_t, uint64_t))v18)(v7, 0, 1, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1) {
    goto LABEL_6;
  }
  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v29[1] = v9 + 32;
  uint64_t v30 = v17;
  v29[0] = v21;
  v21(v12, v7, v8);
  unsigned __int8 v22 = objc_msgSend(self, sel_defaultManager);
  sub_2347ED460();
  unint64_t v23 = (void *)sub_2347EE5F0();
  swift_bridgeObjectRelease();
  int64_t v24 = objc_msgSend(v22, sel_fileExistsAtPath_, v23);

  if (v24)
  {
    uint64_t v25 = v32;
    ((void (*)(uint64_t, char *, uint64_t))v29[0])(v32, v12, v8);
    return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v18)(v25, 0, 1, v8);
  }
  else
  {
    type metadata accessor for CapturedRoom.ModelProvider.Error();
    sub_2347C9FF4(&qword_2687AEE98, (void (*)(uint64_t))type metadata accessor for CapturedRoom.ModelProvider.Error);
    swift_allocError();
    int64_t v27 = v26;
    v30(v26, (unint64_t)v12, v8);
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2687AEE90);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v27, 0, 1, v28);
    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  }
}

Swift::Bool __swiftcall CapturedRoom.Object.Category.supportsCombination(_:)(Swift::OpaquePointer a1)
{
  LOBYTE(v44[0]) = *v1;
  uint64_t v3 = CapturedRoom.Object.Category.supportedCombinations.getter();
  int64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    v38[1] = a1._rawValue;
    uint64_t v47 = MEMORY[0x263F8EE78];
    sub_23474586C(0, v4, 0);
    uint64_t v5 = 0;
    v38[0] = v3;
    int64_t v39 = v4;
    uint64_t v40 = v3 + 32;
    do
    {
      uint64_t v6 = *(void *)(v40 + 8 * v5);
      int64_t v7 = *(void *)(v6 + 16);
      if (v7)
      {
        uint64_t v46 = MEMORY[0x263F8EE78];
        swift_bridgeObjectRetain();
        sub_23474584C(0, v7, 0);
        uint64_t v8 = v6 + 32;
        uint64_t v9 = v46;
        do
        {
          sub_2346A1DCC(v8, (uint64_t)v41);
          uint64_t v10 = v42;
          uint64_t v11 = v43;
          uint64_t v12 = __swift_project_boxed_opaque_existential_1(v41, v42);
          double v13 = MEMORY[0x270FA5388](v12);
          uint64_t v15 = (char *)v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *, double))(v16 + 16))(v15, v13);
          sub_2346F83D8((uint64_t)v15, v10, v11, (uint64_t *)v44);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_23474584C(0, *(void *)(v9 + 16) + 1, 1);
            uint64_t v9 = v46;
          }
          unint64_t v18 = *(void *)(v9 + 16);
          unint64_t v17 = *(void *)(v9 + 24);
          if (v18 >= v17 >> 1)
          {
            sub_23474584C(v17 > 1, v18 + 1, 1);
            uint64_t v9 = v46;
          }
          *(void *)(v9 + 16) = v18 + 1;
          unint64_t v19 = v9 + 40 * v18;
          long long v20 = v44[0];
          long long v21 = v44[1];
          *(void *)(v19 + 64) = v45;
          *(_OWORD *)(v19 + 32) = v20;
          *(_OWORD *)(v19 + 48) = v21;
          v8 += 40;
          --v7;
        }
        while (v7);
        swift_bridgeObjectRelease();
        int64_t v4 = v39;
      }
      else
      {
        uint64_t v9 = MEMORY[0x263F8EE78];
      }
      sub_2347C118C();
      uint64_t v46 = sub_2347EE8E0();
      uint64_t v22 = *(void *)(v9 + 16);
      if (v22)
      {
        uint64_t v23 = v9 + 32;
        do
        {
          sub_23470BA38(v23, (uint64_t)v41);
          sub_2347C2600((uint64_t)v44, (uint64_t)v41);
          sub_23470BA94((uint64_t)v44);
          v23 += 40;
          --v22;
        }
        while (v22);
      }
      swift_bridgeObjectRelease();
      uint64_t v24 = v46;
      uint64_t v25 = v47;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23474586C(0, *(void *)(v25 + 16) + 1, 1);
        uint64_t v25 = v47;
      }
      unint64_t v27 = *(void *)(v25 + 16);
      unint64_t v26 = *(void *)(v25 + 24);
      if (v27 >= v26 >> 1)
      {
        sub_23474586C(v26 > 1, v27 + 1, 1);
        uint64_t v25 = v47;
      }
      ++v5;
      *(void *)(v25 + 16) = v27 + 1;
      *(void *)(v25 + 8 * v27 + 32) = v24;
    }
    while (v5 != v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v25 = MEMORY[0x263F8EE78];
  }
  uint64_t v28 = swift_bridgeObjectRetain();
  uint64_t v29 = sub_2347C904C(v28);
  uint64_t v30 = *(void *)(v25 + 16);
  if (!v30)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v31 = swift_bridgeObjectRetain();
  char v32 = sub_2347C87B0(v31, v29);
  Swift::Bool result = swift_bridgeObjectRelease();
  if (v32)
  {
LABEL_24:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    return 1;
  }
  if (v30 == 1)
  {
LABEL_31:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    return 0;
  }
  uint64_t v34 = 5;
  while (1)
  {
    uint64_t v35 = v34 - 3;
    if (__OFADD__(v34 - 4, 1)) {
      break;
    }
    uint64_t v36 = swift_bridgeObjectRetain();
    char v37 = sub_2347C87B0(v36, v29);
    Swift::Bool result = swift_bridgeObjectRelease();
    if (v37) {
      goto LABEL_24;
    }
    ++v34;
    if (v35 == v30) {
      goto LABEL_31;
    }
  }
  __break(1u);
  return result;
}

unint64_t CapturedRoom.ModelProvider.Error.errorDescription.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_2347ED490();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CapturedRoom.ModelProvider.Error();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2347C9F38(v1, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for CapturedRoom.ModelProvider.Error);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2687AEE90);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9) == 1) {
    return 0xD00000000000002ALL;
  }
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
  v12[0] = 0;
  v12[1] = 0xE000000000000000;
  sub_2347EED50();
  swift_bridgeObjectRelease();
  strcpy((char *)v12, "File at path ");
  HIWORD(v12[1]) = -4864;
  sub_2347ED460();
  sub_2347EE6F0();
  swift_bridgeObjectRelease();
  sub_2347EE6F0();
  uint64_t v10 = v12[0];
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v10;
}

size_t CapturedRoom.ModelProvider.modelFileURLs.getter()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_2347BCC00(v0);
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_2347BCC00(v2);
  sub_2347BD85C(v3, v1);
  size_t v5 = sub_2347C1C88(v4);
  swift_bridgeObjectRelease();
  return v5;
}

void sub_2347BD85C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2347ED490();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v27 - v9;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2687AE940);
  v12.n128_f64[0] = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v15 = 0;
  uint64_t v33 = a1;
  uint64_t v34 = a2;
  uint64_t v18 = *(void *)(a1 + 56);
  uint64_t v17 = a1 + 56;
  uint64_t v16 = v18;
  uint64_t v19 = 1 << *(unsigned char *)(v17 - 24);
  uint64_t v20 = -1;
  if (v19 < 64) {
    uint64_t v20 = ~(-1 << v19);
  }
  unint64_t v21 = v20 & v16;
  uint64_t v28 = v17;
  int64_t v29 = (unint64_t)(v19 + 63) >> 6;
  uint64_t v31 = v5 + 16;
  char v32 = (void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v5 + 56);
  uint64_t v30 = v5 + 48;
  if ((v20 & v16) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v22 = __clz(__rbit64(v21));
  v21 &= v21 - 1;
  for (unint64_t i = v22 | (v15 << 6); ; unint64_t i = __clz(__rbit64(v25)) + (v15 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v5 + 16))(v14, *(void *)(v33 + 48) + *(void *)(v5 + 72) * i, v4, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v14, 0, 1, v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v14, 1, v4) == 1) {
      goto LABEL_25;
    }
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v14, v4);
    sub_2347C2AF8((uint64_t)v10, v7);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    if (v21) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v24 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v24 >= v29) {
      goto LABEL_24;
    }
    unint64_t v25 = *(void *)(v28 + 8 * v24);
    ++v15;
    if (!v25)
    {
      int64_t v15 = v24 + 1;
      if (v24 + 1 >= v29) {
        goto LABEL_24;
      }
      unint64_t v25 = *(void *)(v28 + 8 * v15);
      if (!v25)
      {
        int64_t v15 = v24 + 2;
        if (v24 + 2 >= v29) {
          goto LABEL_24;
        }
        unint64_t v25 = *(void *)(v28 + 8 * v15);
        if (!v25)
        {
          int64_t v15 = v24 + 3;
          if (v24 + 3 >= v29) {
            goto LABEL_24;
          }
          unint64_t v25 = *(void *)(v28 + 8 * v15);
          if (!v25) {
            break;
          }
        }
      }
    }
LABEL_20:
    unint64_t v21 = (v25 - 1) & v25;
  }
  int64_t v26 = v24 + 4;
  if (v26 >= v29)
  {
LABEL_24:
    (*v32)(v14, 1, 1, v4, v12);
LABEL_25:
    swift_release();
    return;
  }
  unint64_t v25 = *(void *)(v28 + 8 * v26);
  if (v25)
  {
    int64_t v15 = v26;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v15 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v15 >= v29) {
      goto LABEL_24;
    }
    unint64_t v25 = *(void *)(v28 + 8 * v15);
    ++v26;
    if (v25) {
      goto LABEL_20;
    }
  }
LABEL_27:
  __break(1u);
}

void CapturedRoom.ModelProvider.init()(void *a1@<X8>)
{
  uint64_t v1 = MEMORY[0x263F8EE80];
  *a1 = MEMORY[0x263F8EE80];
  a1[1] = v1;
}

uint64_t CapturedRoom.ModelProvider.modelFileURL(for:)@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2687AE940);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_2347ED490();
  uint64_t v10 = *(void *)(v9 - 8);
  double v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16)) {
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t, double))(v10 + 56))(a2, 1, 1, v9, v11);
  }
  uint64_t v14 = *(void *)(v2 + 8);
  uint64_t result = sub_2347BE38C(a1);
  if (!v3)
  {
    uint64_t v16 = swift_bridgeObjectRetain();
    uint64_t v17 = sub_2347C904C(v16);
    if (*(void *)(v14 + 16) && (unint64_t v18 = sub_2347BFFDC(v17), (v19 & 1) != 0))
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v10 + 16))(v8, *(void *)(v14 + 56) + *(void *)(v10 + 72) * v18, v9);
      uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
      v20(v8, 0, 1, v9);
    }
    else
    {
      uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
      v20(v8, 1, 1, v9);
    }
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    {
      sub_2346A7C30((uint64_t)v8, &qword_2687AE940);
      return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v20)(a2, 1, 1, v9);
    }
    else
    {
      int64_t v29 = v20;
      uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
      v28(v13, v8, v9);
      id v21 = objc_msgSend(self, sel_defaultManager);
      sub_2347ED460();
      unint64_t v22 = (void *)sub_2347EE5F0();
      swift_bridgeObjectRelease();
      unsigned int v23 = objc_msgSend(v21, sel_fileExistsAtPath_, v22);

      if (v23)
      {
        v28(a2, v13, v9);
        return ((uint64_t (*)(char *, void, uint64_t, uint64_t))v29)(a2, 0, 1, v9);
      }
      else
      {
        type metadata accessor for CapturedRoom.ModelProvider.Error();
        sub_2347C9FF4(&qword_2687AEE98, (void (*)(uint64_t))type metadata accessor for CapturedRoom.ModelProvider.Error);
        swift_allocError();
        uint64_t v25 = v24;
        (*(void (**)(uint64_t, char *, uint64_t))(v10 + 16))(v24, v13, v9);
        uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2687AEE90);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v25, 0, 1, v26);
        swift_willThrow();
        return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
      }
    }
  }
  return result;
}

uint64_t sub_2347BE38C(uint64_t result)
{
  if (*(void *)(result + 16))
  {
    v1._rawValue = (void *)result;
    sub_2346A1DCC(result + 32, (uint64_t)v5);
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    swift_getDynamicType();
    (*(void (**)(uint64_t *__return_ptr))(v5[4] + 24))(&v6);
    if (BYTE1(v6) > 0xFEu || (v6 & 0x100) == 0 || !CapturedRoom.Object.Category.supportsCombination(_:)(v1))
    {
      type metadata accessor for CapturedRoom.ModelProvider.Error();
      sub_2347C9FF4(&qword_2687AEE98, (void (*)(uint64_t))type metadata accessor for CapturedRoom.ModelProvider.Error);
      swift_allocError();
      uint64_t v3 = v2;
      uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2687AEE90);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
      swift_willThrow();
    }
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  }
  return result;
}

uint64_t CapturedRoom.ModelProvider.setModelFileURL(_:for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v30 = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2687AE940);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v28 - v8;
  uint64_t v31 = sub_2347ED490();
  uint64_t v32 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  double v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2347BE38C(a2);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v2)
  {
    int64_t v29 = v6;
    uint64_t v13 = v30;
    sub_2347C9290(v30, (uint64_t)v9);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v9, 1, v31) == 1)
    {
      sub_2346A7C30((uint64_t)v9, &qword_2687AE940);
LABEL_6:
      uint64_t v19 = swift_bridgeObjectRetain();
      uint64_t v20 = sub_2347C904C(v19);
      uint64_t v21 = v13;
      uint64_t v22 = (uint64_t)v29;
      sub_2347C9290(v21, (uint64_t)v29);
      return sub_2347BC7D4(v22, v20);
    }
    uint64_t v14 = v11;
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v11, v9, v31);
    int64_t v15 = self;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v16 = objc_msgSend(v15, sel_defaultManager);
    sub_2347ED460();
    uint64_t v17 = (void *)sub_2347EE5F0();
    swift_bridgeObjectRelease();
    unsigned int v18 = objc_msgSend(v16, sel_fileExistsAtPath_, v17);

    if (v18)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v14, v31);
      uint64_t v13 = v30;
      goto LABEL_6;
    }
    type metadata accessor for CapturedRoom.ModelProvider.Error();
    sub_2347C9FF4(&qword_2687AEE98, (void (*)(uint64_t))type metadata accessor for CapturedRoom.ModelProvider.Error);
    swift_allocError();
    uint64_t v24 = v23;
    uint64_t v25 = v32;
    uint64_t v26 = v31;
    (*(void (**)(uint64_t, char *, uint64_t))(v32 + 16))(v23, v14, v31);
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2687AEE90);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v24, 0, 1, v27);
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v14, v26);
  }
  return result;
}

uint64_t CapturedRoom.ModelProvider.setModelFileURL(_:for:)(uint64_t a1, char *a2)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2687AE940);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  double v11 = (char *)v26 - v10;
  uint64_t v12 = sub_2347ED490();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  int64_t v15 = (char *)v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v16 = *a2;
  sub_2347C9290(a1, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_2346A7C30((uint64_t)v11, &qword_2687AE940);
LABEL_5:
    sub_2347C9290(a1, (uint64_t)v8);
    return sub_2347BC9A4((uint64_t)v8, v16);
  }
  v26[0] = a1;
  v26[2] = v3;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
  v26[1] = v2;
  uint64_t v17 = *v2;
  uint64_t v18 = v2[1];
  uint64_t v19 = self;
  v26[5] = v17;
  swift_bridgeObjectRetain();
  v26[3] = v18;
  swift_bridgeObjectRetain();
  id v20 = objc_msgSend(v19, sel_defaultManager);
  sub_2347ED460();
  uint64_t v21 = (void *)sub_2347EE5F0();
  swift_bridgeObjectRelease();
  LODWORD(v17) = objc_msgSend(v20, sel_fileExistsAtPath_, v21);

  if (v17)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    a1 = v26[0];
    goto LABEL_5;
  }
  type metadata accessor for CapturedRoom.ModelProvider.Error();
  sub_2347C9FF4(&qword_2687AEE98, (void (*)(uint64_t))type metadata accessor for CapturedRoom.ModelProvider.Error);
  swift_allocError();
  uint64_t v24 = v23;
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 16))(v23, v15, v12);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2687AEE90);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v24, 0, 1, v25);
  swift_willThrow();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

__n128 sub_2347BEC28()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2687AEEF8);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_2347FA890;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2687AD1F8);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_2347F1A10;
  *(void *)(v1 + 56) = &type metadata for ChairType;
  unint64_t v2 = sub_2346FCB90();
  *(void *)(v1 + 64) = v2;
  *(unsigned char *)(v1 + 32) = 0;
  *(void *)(v1 + 96) = &type metadata for ChairBackType;
  unint64_t v3 = sub_2346FCBE4();
  *(void *)(v1 + 104) = v3;
  *(unsigned char *)(v1 + 72) = 0;
  *(void *)(v1 + 136) = &type metadata for ChairLegType;
  unint64_t v4 = sub_2346FCC38();
  *(void *)(v1 + 144) = v4;
  *(unsigned char *)(v1 + 112) = 0;
  *(void *)(v1 + 176) = &type metadata for ChairArmType;
  unint64_t v5 = sub_2346FCC8C();
  *(void *)(v1 + 184) = v5;
  *(unsigned char *)(v1 + 152) = 0;
  *(void *)(v0 + 32) = v1;
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_2347F1A10;
  *(void *)(v6 + 56) = &type metadata for ChairType;
  *(void *)(v6 + 64) = v2;
  *(unsigned char *)(v6 + 32) = 0;
  *(void *)(v6 + 96) = &type metadata for ChairBackType;
  *(void *)(v6 + 104) = v3;
  *(unsigned char *)(v6 + 72) = 0;
  *(void *)(v6 + 136) = &type metadata for ChairLegType;
  *(void *)(v6 + 144) = v4;
  *(unsigned char *)(v6 + 112) = 0;
  *(void *)(v6 + 176) = &type metadata for ChairArmType;
  *(void *)(v6 + 184) = v5;
  *(unsigned char *)(v6 + 152) = 1;
  *(void *)(v0 + 40) = v6;
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_2347F1A10;
  *(void *)(v7 + 56) = &type metadata for ChairType;
  *(void *)(v7 + 64) = v2;
  *(unsigned char *)(v7 + 32) = 1;
  *(void *)(v7 + 96) = &type metadata for ChairBackType;
  *(void *)(v7 + 104) = v3;
  *(unsigned char *)(v7 + 72) = 1;
  *(void *)(v7 + 136) = &type metadata for ChairLegType;
  *(void *)(v7 + 144) = v4;
  *(unsigned char *)(v7 + 112) = 0;
  *(void *)(v7 + 176) = &type metadata for ChairArmType;
  *(void *)(v7 + 184) = v5;
  *(unsigned char *)(v7 + 152) = 1;
  *(void *)(v0 + 48) = v7;
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_2347F1A10;
  *(void *)(v8 + 56) = &type metadata for ChairType;
  *(void *)(v8 + 64) = v2;
  *(unsigned char *)(v8 + 32) = 1;
  *(void *)(v8 + 96) = &type metadata for ChairBackType;
  *(void *)(v8 + 104) = v3;
  *(unsigned char *)(v8 + 72) = 1;
  *(void *)(v8 + 136) = &type metadata for ChairLegType;
  *(void *)(v8 + 144) = v4;
  *(unsigned char *)(v8 + 112) = 1;
  *(void *)(v8 + 176) = &type metadata for ChairArmType;
  *(void *)(v8 + 184) = v5;
  *(unsigned char *)(v8 + 152) = 1;
  *(void *)(v0 + 56) = v8;
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_2347F1A10;
  *(void *)(v9 + 56) = &type metadata for ChairType;
  *(void *)(v9 + 64) = v2;
  *(unsigned char *)(v9 + 32) = 1;
  *(void *)(v9 + 96) = &type metadata for ChairBackType;
  *(void *)(v9 + 104) = v3;
  *(unsigned char *)(v9 + 72) = 1;
  *(void *)(v9 + 136) = &type metadata for ChairLegType;
  *(void *)(v9 + 144) = v4;
  *(unsigned char *)(v9 + 112) = 2;
  *(void *)(v9 + 176) = &type metadata for ChairArmType;
  *(void *)(v9 + 184) = v5;
  *(unsigned char *)(v9 + 152) = 1;
  *(void *)(v0 + 64) = v9;
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_2347F1A10;
  *(void *)(v10 + 56) = &type metadata for ChairType;
  *(void *)(v10 + 64) = v2;
  *(unsigned char *)(v10 + 32) = 1;
  *(void *)(v10 + 96) = &type metadata for ChairBackType;
  *(void *)(v10 + 104) = v3;
  *(unsigned char *)(v10 + 72) = 1;
  *(void *)(v10 + 136) = &type metadata for ChairLegType;
  *(void *)(v10 + 144) = v4;
  *(unsigned char *)(v10 + 112) = 0;
  *(void *)(v10 + 176) = &type metadata for ChairArmType;
  *(void *)(v10 + 184) = v5;
  *(unsigned char *)(v10 + 152) = 0;
  *(void *)(v0 + 72) = v10;
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_2347F1A10;
  *(void *)(v11 + 56) = &type metadata for ChairType;
  *(void *)(v11 + 64) = v2;
  *(unsigned char *)(v11 + 32) = 1;
  *(void *)(v11 + 96) = &type metadata for ChairBackType;
  *(void *)(v11 + 104) = v3;
  *(unsigned char *)(v11 + 72) = 1;
  *(void *)(v11 + 136) = &type metadata for ChairLegType;
  *(void *)(v11 + 144) = v4;
  *(unsigned char *)(v11 + 112) = 1;
  *(void *)(v11 + 176) = &type metadata for ChairArmType;
  *(void *)(v11 + 184) = v5;
  *(unsigned char *)(v11 + 152) = 0;
  *(void *)(v0 + 80) = v11;
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_2347F1A10;
  *(void *)(v12 + 56) = &type metadata for ChairType;
  *(void *)(v12 + 64) = v2;
  *(unsigned char *)(v12 + 32) = 1;
  *(void *)(v12 + 96) = &type metadata for ChairBackType;
  *(void *)(v12 + 104) = v3;
  *(unsigned char *)(v12 + 72) = 1;
  *(void *)(v12 + 136) = &type metadata for ChairLegType;
  *(void *)(v12 + 144) = v4;
  *(unsigned char *)(v12 + 112) = 2;
  *(void *)(v12 + 176) = &type metadata for ChairArmType;
  *(void *)(v12 + 184) = v5;
  *(unsigned char *)(v12 + 152) = 0;
  *(void *)(v0 + 88) = v12;
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_2347F1A10;
  *(void *)(v13 + 56) = &type metadata for ChairType;
  *(void *)(v13 + 64) = v2;
  *(unsigned char *)(v13 + 32) = 2;
  *(void *)(v13 + 96) = &type metadata for ChairBackType;
  *(void *)(v13 + 104) = v3;
  *(unsigned char *)(v13 + 72) = 0;
  *(void *)(v13 + 136) = &type metadata for ChairLegType;
  *(void *)(v13 + 144) = v4;
  *(unsigned char *)(v13 + 112) = 1;
  *(void *)(v13 + 176) = &type metadata for ChairArmType;
  *(void *)(v13 + 184) = v5;
  *(unsigned char *)(v13 + 152) = 0;
  *(void *)(v0 + 96) = v13;
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_2347F1A10;
  *(void *)(v14 + 56) = &type metadata for ChairType;
  *(void *)(v14 + 64) = v2;
  *(unsigned char *)(v14 + 32) = 2;
  *(void *)(v14 + 96) = &type metadata for ChairBackType;
  *(void *)(v14 + 104) = v3;
  *(unsigned char *)(v14 + 72) = 0;
  *(void *)(v14 + 136) = &type metadata for ChairLegType;
  *(void *)(v14 + 144) = v4;
  *(unsigned char *)(v14 + 112) = 1;
  *(void *)(v14 + 176) = &type metadata for ChairArmType;
  *(void *)(v14 + 184) = v5;
  *(unsigned char *)(v14 + 152) = 1;
  *(void *)(v0 + 104) = v14;
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_2347F1A10;
  *(void *)(v15 + 56) = &type metadata for ChairType;
  *(void *)(v15 + 64) = v2;
  *(unsigned char *)(v15 + 32) = 3;
  *(void *)(v15 + 96) = &type metadata for ChairBackType;
  *(void *)(v15 + 104) = v3;
  *(unsigned char *)(v15 + 72) = 0;
  *(void *)(v15 + 136) = &type metadata for ChairLegType;
  *(void *)(v15 + 144) = v4;
  *(unsigned char *)(v15 + 112) = 0;
  *(void *)(v15 + 176) = &type metadata for ChairArmType;
  *(void *)(v15 + 184) = v5;
  *(unsigned char *)(v15 + 152) = 0;
  *(void *)(v0 + 112) = v15;
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_2347F1A10;
  *(void *)(v16 + 56) = &type metadata for ChairType;
  *(void *)(v16 + 64) = v2;
  *(unsigned char *)(v16 + 32) = 3;
  *(void *)(v16 + 96) = &type metadata for ChairBackType;
  *(void *)(v16 + 104) = v3;
  *(unsigned char *)(v16 + 72) = 0;
  *(void *)(v16 + 136) = &type metadata for ChairLegType;
  *(void *)(v16 + 144) = v4;
  *(unsigned char *)(v16 + 112) = 0;
  *(void *)(v16 + 176) = &type metadata for ChairArmType;
  *(void *)(v16 + 184) = v5;
  *(unsigned char *)(v16 + 152) = 1;
  *(void *)(v0 + 120) = v16;
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_2347F1A10;
  *(void *)(v17 + 56) = &type metadata for ChairType;
  *(void *)(v17 + 64) = v2;
  *(unsigned char *)(v17 + 32) = 3;
  *(void *)(v17 + 96) = &type metadata for ChairBackType;
  *(void *)(v17 + 104) = v3;
  *(unsigned char *)(v17 + 72) = 0;
  *(void *)(v17 + 136) = &type metadata for ChairLegType;
  *(void *)(v17 + 144) = v4;
  *(unsigned char *)(v17 + 112) = 1;
  *(void *)(v17 + 176) = &type metadata for ChairArmType;
  *(void *)(v17 + 184) = v5;
  *(unsigned char *)(v17 + 152) = 0;
  *(void *)(v0 + 128) = v17;
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_2347F1A10;
  *(void *)(v18 + 56) = &type metadata for ChairType;
  *(void *)(v18 + 64) = v2;
  *(unsigned char *)(v18 + 32) = 3;
  *(void *)(v18 + 96) = &type metadata for ChairBackType;
  *(void *)(v18 + 104) = v3;
  *(unsigned char *)(v18 + 72) = 0;
  *(void *)(v18 + 136) = &type metadata for ChairLegType;
  *(void *)(v18 + 144) = v4;
  *(unsigned char *)(v18 + 112) = 1;
  *(void *)(v18 + 176) = &type metadata for ChairArmType;
  *(void *)(v18 + 184) = v5;
  *(unsigned char *)(v18 + 152) = 1;
  *(void *)(v0 + 136) = v18;
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_2347F1A10;
  *(void *)(v19 + 56) = &type metadata for ChairType;
  *(void *)(v19 + 64) = v2;
  *(unsigned char *)(v19 + 32) = 3;
  *(void *)(v19 + 96) = &type metadata for ChairBackType;
  *(void *)(v19 + 104) = v3;
  *(unsigned char *)(v19 + 72) = 0;
  *(void *)(v19 + 136) = &type metadata for ChairLegType;
  *(void *)(v19 + 144) = v4;
  *(unsigned char *)(v19 + 112) = 2;
  *(void *)(v19 + 176) = &type metadata for ChairArmType;
  *(void *)(v19 + 184) = v5;
  *(unsigned char *)(v19 + 152) = 0;
  *(void *)(v0 + 144) = v19;
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_2347F1A10;
  *(void *)(v20 + 56) = &type metadata for ChairType;
  *(void *)(v20 + 64) = v2;
  *(unsigned char *)(v20 + 32) = 3;
  *(void *)(v20 + 96) = &type metadata for ChairBackType;
  *(void *)(v20 + 104) = v3;
  *(unsigned char *)(v20 + 72) = 0;
  *(void *)(v20 + 136) = &type metadata for ChairLegType;
  *(void *)(v20 + 144) = v4;
  *(unsigned char *)(v20 + 112) = 2;
  *(void *)(v20 + 176) = &type metadata for ChairArmType;
  *(void *)(v20 + 184) = v5;
  *(unsigned char *)(v20 + 152) = 1;
  *(void *)(v0 + 152) = v20;
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_2347F1A10;
  *(void *)(v21 + 56) = &type metadata for ChairType;
  *(void *)(v21 + 64) = v2;
  *(unsigned char *)(v21 + 32) = 3;
  *(void *)(v21 + 96) = &type metadata for ChairBackType;
  *(void *)(v21 + 104) = v3;
  *(unsigned char *)(v21 + 72) = 1;
  *(void *)(v21 + 136) = &type metadata for ChairLegType;
  *(void *)(v21 + 144) = v4;
  *(unsigned char *)(v21 + 112) = 0;
  *(void *)(v21 + 176) = &type metadata for ChairArmType;
  *(void *)(v21 + 184) = v5;
  *(unsigned char *)(v21 + 152) = 0;
  *(void *)(v0 + 160) = v21;
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_2347F1A10;
  *(void *)(v22 + 56) = &type metadata for ChairType;
  *(void *)(v22 + 64) = v2;
  *(unsigned char *)(v22 + 32) = 3;
  *(void *)(v22 + 96) = &type metadata for ChairBackType;
  *(void *)(v22 + 104) = v3;
  *(unsigned char *)(v22 + 72) = 1;
  *(void *)(v22 + 136) = &type metadata for ChairLegType;
  *(void *)(v22 + 144) = v4;
  *(unsigned char *)(v22 + 112) = 0;
  *(void *)(v22 + 176) = &type metadata for ChairArmType;
  *(void *)(v22 + 184) = v5;
  *(unsigned char *)(v22 + 152) = 1;
  *(void *)(v0 + 168) = v22;
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_2347F1A10;
  *(void *)(v23 + 56) = &type metadata for ChairType;
  *(void *)(v23 + 64) = v2;
  *(unsigned char *)(v23 + 32) = 3;
  *(void *)(v23 + 96) = &type metadata for ChairBackType;
  *(void *)(v23 + 104) = v3;
  *(unsigned char *)(v23 + 72) = 1;
  *(void *)(v23 + 136) = &type metadata for ChairLegType;
  *(void *)(v23 + 144) = v4;
  *(unsigned char *)(v23 + 112) = 1;
  *(void *)(v23 + 176) = &type metadata for ChairArmType;
  *(void *)(v23 + 184) = v5;
  *(unsigned char *)(v23 + 152) = 0;
  *(void *)(v0 + 176) = v23;
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_2347F1A10;
  *(void *)(v24 + 56) = &type metadata for ChairType;
  *(void *)(v24 + 64) = v2;
  *(unsigned char *)(v24 + 32) = 3;
  *(void *)(v24 + 96) = &type metadata for ChairBackType;
  *(void *)(v24 + 104) = v3;
  *(unsigned char *)(v24 + 72) = 1;
  *(void *)(v24 + 136) = &type metadata for ChairLegType;
  *(void *)(v24 + 144) = v4;
  *(unsigned char *)(v24 + 112) = 1;
  *(void *)(v24 + 176) = &type metadata for ChairArmType;
  *(void *)(v24 + 184) = v5;
  *(unsigned char *)(v24 + 152) = 1;
  *(void *)(v0 + 184) = v24;
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_2347F1A10;
  *(void *)(v25 + 56) = &type metadata for ChairType;
  *(void *)(v25 + 64) = v2;
  *(unsigned char *)(v25 + 32) = 3;
  *(void *)(v25 + 96) = &type metadata for ChairBackType;
  *(void *)(v25 + 104) = v3;
  *(unsigned char *)(v25 + 72) = 1;
  *(void *)(v25 + 136) = &type metadata for ChairLegType;
  *(void *)(v25 + 144) = v4;
  *(unsigned char *)(v25 + 112) = 2;
  *(void *)(v25 + 176) = &type metadata for ChairArmType;
  *(void *)(v25 + 184) = v5;
  *(unsigned char *)(v25 + 152) = 0;
  *(void *)(v0 + 192) = v25;
  uint64_t v26 = swift_allocObject();
  __n128 result = (__n128)xmmword_2347F1A10;
  *(_OWORD *)(v26 + 16) = xmmword_2347F1A10;
  *(void *)(v26 + 56) = &type metadata for ChairType;
  *(void *)(v26 + 64) = v2;
  *(unsigned char *)(v26 + 32) = 3;
  *(void *)(v26 + 96) = &type metadata for ChairBackType;
  *(void *)(v26 + 104) = v3;
  *(unsigned char *)(v26 + 72) = 1;
  *(void *)(v26 + 136) = &type metadata for ChairLegType;
  *(void *)(v26 + 144) = v4;
  *(unsigned char *)(v26 + 112) = 2;
  *(void *)(v26 + 176) = &type metadata for ChairArmType;
  *(void *)(v26 + 184) = v5;
  *(unsigned char *)(v26 + 152) = 1;
  *(void *)(v0 + 200) = v26;
  qword_2687AEE68 = v0;
  return result;
}

__n128 sub_2347BF38C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2687AEEF8);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_2347F8B60;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2687AD1F8);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_2347F0FA0;
  *(void *)(v1 + 56) = &type metadata for SofaType;
  unint64_t v2 = sub_2346FCB3C();
  *(void *)(v1 + 64) = v2;
  *(unsigned char *)(v1 + 32) = 0;
  *(void *)(v0 + 32) = v1;
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_2347F0FA0;
  *(void *)(v3 + 56) = &type metadata for SofaType;
  *(void *)(v3 + 64) = v2;
  *(unsigned char *)(v3 + 32) = 1;
  *(void *)(v0 + 40) = v3;
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_2347F0FA0;
  *(void *)(v4 + 56) = &type metadata for SofaType;
  *(void *)(v4 + 64) = v2;
  *(unsigned char *)(v4 + 32) = 2;
  *(void *)(v0 + 48) = v4;
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2347F0FA0;
  *(void *)(v5 + 56) = &type metadata for SofaType;
  *(void *)(v5 + 64) = v2;
  *(unsigned char *)(v5 + 32) = 3;
  *(void *)(v0 + 56) = v5;
  uint64_t v6 = swift_allocObject();
  __n128 result = (__n128)xmmword_2347F0FA0;
  *(_OWORD *)(v6 + 16) = xmmword_2347F0FA0;
  *(void *)(v6 + 56) = &type metadata for SofaType;
  *(void *)(v6 + 64) = v2;
  *(unsigned char *)(v6 + 32) = 4;
  *(void *)(v0 + 64) = v6;
  qword_2687AEE70 = v0;
  return result;
}

__n128 sub_2347BF4E0()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2687AEEF8);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_2347FA8A0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2687AD1F8);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_2347F19A0;
  *(void *)(v1 + 56) = &type metadata for TableType;
  unint64_t v2 = sub_2346FCA94();
  *(void *)(v1 + 64) = v2;
  *(unsigned char *)(v1 + 32) = 1;
  *(void *)(v1 + 96) = &type metadata for TableShapeType;
  unint64_t v3 = sub_2346FCAE8();
  *(void *)(v1 + 104) = v3;
  *(unsigned char *)(v1 + 72) = 0;
  *(void *)(v0 + 32) = v1;
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_2347F19A0;
  *(void *)(v4 + 56) = &type metadata for TableType;
  *(void *)(v4 + 64) = v2;
  *(unsigned char *)(v4 + 32) = 1;
  *(void *)(v4 + 96) = &type metadata for TableShapeType;
  *(void *)(v4 + 104) = v3;
  *(unsigned char *)(v4 + 72) = 1;
  *(void *)(v0 + 40) = v4;
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2347F19A0;
  *(void *)(v5 + 56) = &type metadata for TableType;
  *(void *)(v5 + 64) = v2;
  *(unsigned char *)(v5 + 32) = 1;
  *(void *)(v5 + 96) = &type metadata for TableShapeType;
  *(void *)(v5 + 104) = v3;
  *(unsigned char *)(v5 + 72) = 3;
  *(void *)(v0 + 48) = v5;
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_2347F19A0;
  *(void *)(v6 + 56) = &type metadata for TableType;
  *(void *)(v6 + 64) = v2;
  *(unsigned char *)(v6 + 32) = 0;
  *(void *)(v6 + 96) = &type metadata for TableShapeType;
  *(void *)(v6 + 104) = v3;
  *(unsigned char *)(v6 + 72) = 0;
  *(void *)(v0 + 56) = v6;
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_2347F19A0;
  *(void *)(v7 + 56) = &type metadata for TableType;
  *(void *)(v7 + 64) = v2;
  *(unsigned char *)(v7 + 32) = 0;
  *(void *)(v7 + 96) = &type metadata for TableShapeType;
  *(void *)(v7 + 104) = v3;
  *(unsigned char *)(v7 + 72) = 1;
  *(void *)(v0 + 64) = v7;
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_2347F19A0;
  *(void *)(v8 + 56) = &type metadata for TableType;
  *(void *)(v8 + 64) = v2;
  *(unsigned char *)(v8 + 32) = 0;
  *(void *)(v8 + 96) = &type metadata for TableShapeType;
  *(void *)(v8 + 104) = v3;
  *(unsigned char *)(v8 + 72) = 2;
  *(void *)(v0 + 72) = v8;
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_2347F19A0;
  *(void *)(v9 + 56) = &type metadata for TableType;
  *(void *)(v9 + 64) = v2;
  *(unsigned char *)(v9 + 32) = 0;
  *(void *)(v9 + 96) = &type metadata for TableShapeType;
  *(void *)(v9 + 104) = v3;
  *(unsigned char *)(v9 + 72) = 3;
  *(void *)(v0 + 80) = v9;
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_2347F19A0;
  *(void *)(v10 + 56) = &type metadata for TableType;
  *(void *)(v10 + 64) = v2;
  *(unsigned char *)(v10 + 32) = 2;
  *(void *)(v10 + 96) = &type metadata for TableShapeType;
  *(void *)(v10 + 104) = v3;
  *(unsigned char *)(v10 + 72) = 0;
  *(void *)(v0 + 88) = v10;
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_2347F19A0;
  *(void *)(v11 + 56) = &type metadata for TableType;
  *(void *)(v11 + 64) = v2;
  *(unsigned char *)(v11 + 32) = 2;
  *(void *)(v11 + 96) = &type metadata for TableShapeType;
  *(void *)(v11 + 104) = v3;
  *(unsigned char *)(v11 + 72) = 1;
  *(void *)(v0 + 96) = v11;
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_2347F19A0;
  *(void *)(v12 + 56) = &type metadata for TableType;
  *(void *)(v12 + 64) = v2;
  *(unsigned char *)(v12 + 32) = 2;
  *(void *)(v12 + 96) = &type metadata for TableShapeType;
  *(void *)(v12 + 104) = v3;
  *(unsigned char *)(v12 + 72) = 2;
  *(void *)(v0 + 104) = v12;
  uint64_t v13 = swift_allocObject();
  __n128 result = (__n128)xmmword_2347F19A0;
  *(_OWORD *)(v13 + 16) = xmmword_2347F19A0;
  *(void *)(v13 + 56) = &type metadata for TableType;
  *(void *)(v13 + 64) = v2;
  *(unsigned char *)(v13 + 32) = 2;
  *(void *)(v13 + 96) = &type metadata for TableShapeType;
  *(void *)(v13 + 104) = v3;
  *(unsigned char *)(v13 + 72) = 3;
  *(void *)(v0 + 112) = v13;
  qword_2687AEE78 = v0;
  return result;
}

__n128 sub_2347BF784()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2687AEEF8);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_2347F19A0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2687AD1F8);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_2347F0FA0;
  *(void *)(v1 + 56) = &type metadata for StorageType;
  unint64_t v2 = sub_2346FCA40();
  *(void *)(v1 + 64) = v2;
  *(unsigned char *)(v1 + 32) = 0;
  *(void *)(v0 + 32) = v1;
  uint64_t v3 = swift_allocObject();
  __n128 result = (__n128)xmmword_2347F0FA0;
  *(_OWORD *)(v3 + 16) = xmmword_2347F0FA0;
  *(void *)(v3 + 56) = &type metadata for StorageType;
  *(void *)(v3 + 64) = v2;
  *(unsigned char *)(v3 + 32) = 1;
  *(void *)(v0 + 40) = v3;
  qword_2687AEE80 = v0;
  return result;
}

uint64_t CapturedRoom.Object.Category.supportedCombinations.getter()
{
  uint64_t result = MEMORY[0x263F8EE78];
  switch(*v0)
  {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 0xD:
    case 0xE:
    case 0xF:
      return result;
    case 0xA:
      if (qword_2687ABE70 != -1) {
        goto LABEL_10;
      }
      return swift_bridgeObjectRetain();
    case 0xB:
      if (qword_2687ABE68 == -1) {
        return swift_bridgeObjectRetain();
      }
      goto LABEL_10;
    case 0xC:
      if (qword_2687ABE60 == -1) {
        return swift_bridgeObjectRetain();
      }
      goto LABEL_10;
    default:
      if (qword_2687ABE78 == -1) {
        return swift_bridgeObjectRetain();
      }
LABEL_10:
      swift_once();
      return swift_bridgeObjectRetain();
  }
}

unint64_t sub_2347BF9DC(uint64_t a1)
{
  type metadata accessor for ScanEntity();
  sub_2347C9FF4(&qword_2687AEEB0, (void (*)(uint64_t))type metadata accessor for ScanEntity);
  uint64_t v2 = sub_2347EE530();
  return sub_2347C02F4(a1, v2);
}

unint64_t sub_2347BFA88(uint64_t a1)
{
  sub_2347ED5C0();
  uint64_t v2 = (void (*)(uint64_t))MEMORY[0x263F07508];
  sub_2347C9FF4(&qword_2687ACDD0, MEMORY[0x263F07508]);
  uint64_t v3 = sub_2347EE530();
  return sub_2347C0C80(a1, v3, MEMORY[0x263F07508], (unint64_t *)&qword_2687AC5A0, v2, MEMORY[0x263F07528]);
}

unint64_t sub_2347BFB5C(uint64_t a1, uint64_t a2)
{
  sub_2347EF1C0();
  sub_2347EE6C0();
  uint64_t v4 = sub_2347EF200();

  return sub_2347C03F0(a1, a2, v4);
}

unint64_t sub_2347BFBD4(uint64_t a1)
{
  sub_2347EF1C0();
  sub_2347ED590();
  uint64_t v2 = sub_2347EF200();

  return sub_2347C04D4(a1, v2);
}

unint64_t sub_2347BFC4C(float32x2_t a1)
{
  sub_2347EF1C0();
  sub_23470B9E8();
  uint64_t v2 = sub_2347EF200();

  return sub_2347C05F0(v2, a1);
}

unint64_t sub_2347BFCB8(uint64_t a1)
{
  uint64_t v2 = sub_2347EF1B0();

  return sub_2347C0668(a1, v2);
}

unint64_t sub_2347BFCFC(uint64_t a1)
{
  sub_2347EF1C0();
  uint64_t v2 = *(void *)(*(void *)(a1 + 48) + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = 0;
    do
    {
      ++v3;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2687AD2F8);
      sub_2347EF150();
      sub_2347EF1D0();
    }
    while (v2 != v3);
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = sub_2347EF200();
  return sub_2347C0704(a1, v4);
}

unint64_t sub_2347BFDC0(int32x2_t a1)
{
  sub_2347EF1C0();
  sub_2347EF1F0();
  sub_2347EF1F0();
  uint64_t v1 = sub_2347EF200();

  return sub_2347C07CC(v1, a1);
}

unint64_t sub_2347BFE34(unsigned __int8 a1)
{
  sub_2347EF1C0();
  sub_2347EF1D0();
  uint64_t v2 = sub_2347EF200();
  return sub_2347C0844(a1, v2);
}

unint64_t sub_2347BFE9C(unsigned __int8 a1)
{
  sub_2347EF1C0();
  sub_2347EE6C0();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_2347EF200();

  return sub_2347C08E4(a1, v2);
}

unint64_t sub_2347BFFDC(uint64_t a1)
{
  sub_2347EF1C0();
  sub_2347D8248(v4, a1);
  uint64_t v2 = sub_2347EF200();

  return sub_2347C0B7C(a1, v2);
}

unint64_t sub_2347C0048(uint64_t a1)
{
  sub_2347ED490();
  uint64_t v2 = (void (*)(uint64_t))MEMORY[0x263F06EA8];
  sub_2347C9FF4(&qword_2687AEFF0, MEMORY[0x263F06EA8]);
  uint64_t v3 = sub_2347EE530();
  return sub_2347C0C80(a1, v3, MEMORY[0x263F06EA8], &qword_2687AEEE8, v2, MEMORY[0x263F06EC0]);
}

unint64_t sub_2347C011C(uint64_t a1)
{
  sub_2347EF1C0();
  type metadata accessor for CFString(0);
  sub_2347C9FF4(&qword_2687AEED0, type metadata accessor for CFString);
  sub_2347EE040();
  uint64_t v2 = sub_2347EF200();

  return sub_2347C0E20(a1, v2);
}

unint64_t sub_2347C01D0(uint64_t a1)
{
  sub_2347EF1C0();
  sub_2347EE920();
  sub_2347EF1D0();
  sub_2347EE920();
  sub_2347EF1D0();
  sub_2347EF210();
  sub_2347EF1D0();
  uint64_t v2 = sub_2347EF200();

  return sub_2347C0F7C(a1, v2);
}

unint64_t sub_2347C0260(uint64_t a1)
{
  sub_2347EE620();
  sub_2347EF1C0();
  sub_2347EE6C0();
  uint64_t v2 = sub_2347EF200();
  swift_bridgeObjectRelease();

  return sub_2347C1014(a1, v2);
}

unint64_t sub_2347C02F4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    type metadata accessor for ScanEntity();
    sub_2347C9FF4(&qword_2687AEEB8, (void (*)(uint64_t))type metadata accessor for ScanEntity);
    do
    {
      if (sub_2347EE570()) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v5;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_2347C03F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_2347EF090() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_2347EF090() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_2347C04D4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    uint64_t v11 = OBJC_IVAR____TtC8RoomPlan13HullPointUUID_type;
    do
    {
      uint64_t v7 = *(void *)(*(void *)(v2 + 48) + 8 * v4);
      swift_retain();
      if (sub_2347ED570())
      {
        int v8 = *(unsigned __int8 *)(v7 + OBJC_IVAR____TtC8RoomPlan13HullPointUUID_type);
        int v9 = *(unsigned __int8 *)(a1 + v11);
        swift_release();
        if (v8 == v9) {
          return v4;
        }
      }
      else
      {
        swift_release();
      }
      unint64_t v4 = (v4 + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_2347C05F0(uint64_t a1, float32x2_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a1 & ~v3;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v5 = ~v3;
    do
    {
      int32x2_t v6 = vceq_f32(*(float32x2_t *)(*(void *)(v2 + 48) + 8 * result), a2);
      if (v6.i8[0] & v6.i8[4]) {
        break;
      }
      unint64_t result = (result + 1) & v5;
    }
    while (((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

unint64_t sub_2347C0668(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_2347C0704(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v6 = ~v4;
    uint64_t v7 = *(float32x2_t **)(a1 + 48);
    float32x2_t v8 = v7[2];
    do
    {
      int v9 = *(float32x2_t **)(*(void *)(*(void *)(v2 + 48) + 8 * result) + 48);
      if (*(void *)&v9[2] == *(void *)&v8)
      {
        if (!*(void *)&v8 || v9 == v7) {
          return result;
        }
        uint64_t v10 = v9 + 4;
        uint64_t v11 = v7 + 4;
        float32x2_t v12 = v7[2];
        while (1)
        {
          int32x2_t v13 = vceq_f32(*v10, *v11);
          if ((v13.i32[0] & v13.i32[1] & 1) == 0) {
            break;
          }
          ++v10;
          ++v11;
          if (!--*(void *)&v12) {
            return result;
          }
        }
      }
      unint64_t result = (result + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

unint64_t sub_2347C07CC(uint64_t a1, int32x2_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a1 & ~v3;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v5 = ~v3;
    do
    {
      int32x2_t v6 = vceq_s32(*(int32x2_t *)(*(void *)(v2 + 48) + 8 * result), a2);
      if (v6.i8[0] & v6.i8[4]) {
        break;
      }
      unint64_t result = (result + 1) & v5;
    }
    while (((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

unint64_t sub_2347C0844(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_2347C08E4(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0xEA00000000006D6FLL;
      uint64_t v8 = 0x6F52676E6976696CLL;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          unint64_t v7 = 0xE700000000000000;
          uint64_t v8 = 0x6D6F6F72646562;
          break;
        case 2:
          unint64_t v7 = 0xE800000000000000;
          uint64_t v8 = 0x6D6F6F7268746162;
          break;
        case 3:
          unint64_t v7 = 0xE700000000000000;
          uint64_t v8 = 0x6E65686374696BLL;
          break;
        case 4:
          uint64_t v8 = 0x6F52676E696E6964;
          break;
        case 5:
          uint64_t v8 = 0x69746E6564696E75;
          unint64_t v7 = 0xEC00000064656966;
          break;
        default:
          break;
      }
      uint64_t v9 = 0x6F52676E6976696CLL;
      unint64_t v10 = 0xEA00000000006D6FLL;
      switch(v6)
      {
        case 1:
          unint64_t v10 = 0xE700000000000000;
          if (v8 == 0x6D6F6F72646562) {
            goto LABEL_18;
          }
          goto LABEL_19;
        case 2:
          unint64_t v10 = 0xE800000000000000;
          if (v8 != 0x6D6F6F7268746162) {
            goto LABEL_19;
          }
          goto LABEL_18;
        case 3:
          unint64_t v10 = 0xE700000000000000;
          if (v8 != 0x6E65686374696BLL) {
            goto LABEL_19;
          }
          goto LABEL_18;
        case 4:
          uint64_t v9 = 0x6F52676E696E6964;
          goto LABEL_17;
        case 5:
          unint64_t v10 = 0xEC00000064656966;
          if (v8 != 0x69746E6564696E75) {
            goto LABEL_19;
          }
          goto LABEL_18;
        default:
LABEL_17:
          if (v8 != v9) {
            goto LABEL_19;
          }
LABEL_18:
          if (v7 == v10)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_19:
          char v11 = sub_2347EF090();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v11) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

unint64_t sub_2347C0B7C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    uint64_t v7 = swift_bridgeObjectRetain();
    char v8 = sub_2347C87B0(v7, a1);
    swift_bridgeObjectRelease();
    if ((v8 & 1) == 0)
    {
      uint64_t v9 = ~v4;
      for (unint64_t i = (i + 1) & v9; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v9)
      {
        uint64_t v10 = swift_bridgeObjectRetain();
        char v11 = sub_2347C87B0(v10, a1);
        swift_bridgeObjectRelease();
        if (v11) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_2347C0C80(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), unint64_t *a4, void (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v24 = a5;
  uint64_t v25 = a6;
  uint64_t v23 = a4;
  v21[1] = a1;
  uint64_t v8 = a3(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388]();
  char v11 = (char *)v21 - v10;
  uint64_t v22 = v6;
  uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v13 = a2 & ~v12;
  v21[0] = v6 + 64;
  if ((*(void *)(v6 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v14 = ~v12;
    uint64_t v17 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
    uint64_t v16 = v9 + 16;
    uint64_t v15 = v17;
    uint64_t v18 = *(void *)(v16 + 56);
    do
    {
      v15(v11, *(void *)(v22 + 48) + v18 * v13, v8);
      sub_2347C9FF4(v23, v24);
      char v19 = sub_2347EE570();
      (*(void (**)(char *, uint64_t))(v16 - 8))(v11, v8);
      if (v19) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v14;
    }
    while (((*(void *)(v21[0] + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
  }
  return v13;
}

unint64_t sub_2347C0E20(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    type metadata accessor for CFString(0);
    uint64_t v6 = *(void **)(*(void *)(v2 + 48) + 8 * i);
    sub_2347C9FF4(&qword_2687AEED0, type metadata accessor for CFString);
    id v7 = v6;
    char v8 = sub_2347EE030();

    if ((v8 & 1) == 0)
    {
      uint64_t v9 = ~v4;
      for (unint64_t i = (i + 1) & v9; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v9)
      {
        id v10 = *(id *)(*(void *)(v2 + 48) + 8 * i);
        char v11 = sub_2347EE030();

        if (v11) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_2347C0F7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v6 = ~v4;
    do
    {
      uint64_t v7 = *(void *)(*(void *)(v2 + 48) + 8 * result);
      if (*(void *)(v7 + 16) == *(void *)(a1 + 16)
        && *(void *)(v7 + 24) == *(void *)(a1 + 24)
        && *(_DWORD *)(v7 + 32) == *(_DWORD *)(a1 + 32))
      {
        break;
      }
      unint64_t result = (result + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

unint64_t sub_2347C1014(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = sub_2347EE620();
    uint64_t v8 = v7;
    if (v6 == sub_2347EE620() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = sub_2347EF090();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = sub_2347EE620();
          uint64_t v15 = v14;
          if (v13 == sub_2347EE620() && v15 == v16) {
            break;
          }
          char v18 = sub_2347EF090();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_2347C118C()
{
  unint64_t result = qword_2687AEE88;
  if (!qword_2687AEE88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2687AEE88);
  }
  return result;
}

void *sub_2347C11E0(unint64_t a1)
{
  return sub_2347C14B4(a1, (void (*)(void *, uint64_t, unint64_t))sub_2346DB7B4);
}

void *sub_2347C11F8(unint64_t a1)
{
  return sub_2347C14B4(a1, (void (*)(void *, uint64_t, unint64_t))sub_2346DB7F0);
}

void *sub_2347C1210(unint64_t a1)
{
  return sub_2347C14B4(a1, MEMORY[0x263F8DC70]);
}

void *sub_2347C1228(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2687AC9E8);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 25;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 3);
  uint64_t v6 = sub_2347C740C(&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_2346DC0DC();
  if (v6 != (void *)v1)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v3;
}

void *sub_2347C1310(uint64_t a1)
{
  return sub_2347C1710(a1, &qword_2687AC9E8, (uint64_t (*)(uint64_t *, void *, uint64_t, uint64_t))sub_2347C75A0);
}

void *sub_2347C1330(uint64_t a1)
{
  return sub_2347C1390(a1, (uint64_t (*)(uint64_t *, void *, uint64_t, uint64_t))sub_2347C7734);
}

void *sub_2347C1348(unint64_t a1)
{
  return sub_2347C14B4(a1, (void (*)(void *, uint64_t, unint64_t))sub_2346DBA50);
}

void *sub_2347C1360(unint64_t a1)
{
  return sub_2347C14B4(a1, (void (*)(void *, uint64_t, unint64_t))sub_2346DBA8C);
}

void *sub_2347C1378(uint64_t a1)
{
  return sub_2347C1390(a1, (uint64_t (*)(uint64_t *, void *, uint64_t, uint64_t))sub_2347C7930);
}

void *sub_2347C1390(uint64_t a1, uint64_t (*a2)(uint64_t *, void *, uint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2687AE8B0);
  uint64_t v5 = (void *)swift_allocObject();
  int64_t v6 = _swift_stdlib_malloc_size(v5);
  uint64_t v7 = v6 - 32;
  if (v6 < 32) {
    uint64_t v7 = v6 - 25;
  }
  v5[2] = v2;
  v5[3] = (2 * (v7 >> 3)) | 1;
  uint64_t v8 = a2(&v10, v5 + 4, v2, a1);
  swift_bridgeObjectRetain();
  sub_2346DC0DC();
  if (v8 != v2)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v5;
}

void *sub_2347C1484(unint64_t a1)
{
  return sub_2347C14B4(a1, (void (*)(void *, uint64_t, unint64_t))sub_2346DBAC8);
}

void *sub_2347C149C(unint64_t a1)
{
  return sub_2347C14B4(a1, (void (*)(void *, uint64_t, unint64_t))sub_2346DBB04);
}

void *sub_2347C14B4(unint64_t a1, void (*a2)(void *, uint64_t, unint64_t))
{
  if (a1 >> 62) {
    goto LABEL_10;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v4) {
    return (void *)MEMORY[0x263F8EE78];
  }
  while (1)
  {
    if (v4 <= 0)
    {
      uint64_t v5 = (void *)MEMORY[0x263F8EE78];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2687AE8B0);
      uint64_t v5 = (void *)swift_allocObject();
      int64_t v6 = _swift_stdlib_malloc_size(v5);
      uint64_t v7 = v6 - 32;
      if (v6 < 32) {
        uint64_t v7 = v6 - 25;
      }
      v5[2] = v4;
      v5[3] = (2 * (v7 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    a2(v5 + 4, v4, a1);
    a2 = v8;
    swift_bridgeObjectRelease();
    if (a2 == (void (*)(void *, uint64_t, unint64_t))v4) {
      break;
    }
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_2347EEEC0();
    swift_bridgeObjectRelease();
    if (!v4) {
      return (void *)MEMORY[0x263F8EE78];
    }
  }
  return v5;
}

size_t sub_2347C15BC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2687AD100);
  uint64_t v3 = *(void *)(sub_2347ED5C0() - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  int64_t v6 = (void *)swift_allocObject();
  size_t result = _swift_stdlib_malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      swift_bridgeObjectRetain();
      sub_2347C7B2C(&v11, (char *)v6 + v5, v1, a1);
      uint64_t v10 = v9;
      sub_2346DC0DC();
      if (v10 == v1) {
        return (size_t)v6;
      }
      __break(1u);
      return MEMORY[0x263F8EE78];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_2347C16F0(uint64_t a1)
{
  return sub_2347C1710(a1, &qword_2687AD398, (uint64_t (*)(uint64_t *, void *, uint64_t, uint64_t))sub_2347C7F20);
}

void *sub_2347C1710(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t *, void *, uint64_t, uint64_t))
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  int64_t v6 = (void *)swift_allocObject();
  int64_t v7 = _swift_stdlib_malloc_size(v6);
  uint64_t v8 = v7 - 32;
  if (v7 < 32) {
    uint64_t v8 = v7 - 25;
  }
  v6[2] = v3;
  v6[3] = 2 * (v8 >> 3);
  uint64_t v9 = a3(&v11, v6 + 4, v3, a1);
  swift_bridgeObjectRetain();
  sub_2346DC0DC();
  if (v9 != v3)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v6;
}

uint64_t sub_2347C17FC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return MEMORY[0x263F8EE78];
    }
    uint64_t v8 = 16 * v5;
    if (v5 <= 0)
    {
      uint64_t v9 = (char *)MEMORY[0x263F8EE78];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0) {
          goto LABEL_19;
        }
        uint64_t v12 = v9 + 32;
        uint64_t v13 = (char *)(a2 + 16 * a3);
        if (v13 < &v9[v8 + 32] && v12 < &v13[v8]) {
          goto LABEL_19;
        }
        memcpy(v12, v13, 16 * v5);
        return (uint64_t)v9;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2687AC820);
      uint64_t v9 = (char *)swift_allocObject();
      int64_t v10 = _swift_stdlib_malloc_size(v9);
      uint64_t v11 = v10 - 32;
      if (v10 < 32) {
        uint64_t v11 = v10 - 17;
      }
      *((void *)v9 + 2) = v5;
      *((void *)v9 + 3) = 2 * (v11 >> 4);
      if (v4 != a3) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  uint64_t result = sub_2347EEF10();
  __break(1u);
  return result;
}

size_t sub_2347C1968(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2687AD0D8);
  uint64_t v3 = *(void *)(type metadata accessor for CapturedRoom.Surface(0) - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  int64_t v6 = (void *)swift_allocObject();
  size_t result = _swift_stdlib_malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      sub_2347C80B4(&v11, (uint64_t)v6 + v5, v1, a1, type metadata accessor for CapturedRoom.Surface, type metadata accessor for CapturedRoom.Surface, type metadata accessor for CapturedRoom.Surface);
      uint64_t v10 = v9;
      swift_bridgeObjectRetain();
      sub_2346DC0DC();
      if (v10 == v1) {
        return (size_t)v6;
      }
      __break(1u);
      return MEMORY[0x263F8EE78];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

size_t sub_2347C1AF8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2687AD0F0);
  uint64_t v3 = *(void *)(type metadata accessor for CapturedRoom.Object(0) - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  int64_t v6 = (void *)swift_allocObject();
  size_t result = _swift_stdlib_malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      sub_2347C80B4(&v11, (uint64_t)v6 + v5, v1, a1, type metadata accessor for CapturedRoom.Object, type metadata accessor for CapturedRoom.Object, type metadata accessor for CapturedRoom.Object);
      uint64_t v10 = v9;
      swift_bridgeObjectRetain();
      sub_2346DC0DC();
      if (v10 == v1) {
        return (size_t)v6;
      }
      __break(1u);
      return MEMORY[0x263F8EE78];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

size_t sub_2347C1C88(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2687AEF00);
  uint64_t v3 = *(void *)(sub_2347ED490() - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  int64_t v6 = (void *)swift_allocObject();
  size_t result = _swift_stdlib_malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      swift_bridgeObjectRetain();
      sub_2347C83BC(&v11, (char *)v6 + v5, v1, a1);
      uint64_t v10 = v9;
      sub_2346DC0DC();
      if (v10 == v1) {
        return (size_t)v6;
      }
      __break(1u);
      return MEMORY[0x263F8EE78];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_2347C1DBC(float *a1, float a2)
{
  uint64_t v3 = v2;
  float v4 = a2;
  uint64_t v6 = *v2;
  if ((LODWORD(a2) & 0x7FFFFFFF) != 0) {
    uint64_t v7 = LODWORD(a2);
  }
  else {
    uint64_t v7 = 0;
  }
  uint64_t v8 = MEMORY[0x237DC7120](*(void *)(v6 + 40), v7, 4);
  uint64_t v9 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v10 = v8 & ~v9;
  if (((*(void *)(v6 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
  {
LABEL_11:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v16 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    sub_2347C46F4(v10, isUniquelyReferenced_nonNull_native, v4);
    uint64_t *v3 = v16;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_12;
  }
  uint64_t v11 = *(void *)(v6 + 48);
  float v12 = *(float *)(v11 + 4 * v10);
  if (v12 != v4)
  {
    uint64_t v14 = ~v9;
    do
    {
      unint64_t v10 = (v10 + 1) & v14;
      if (((*(void *)(v6 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        goto LABEL_11;
      }
      float v12 = *(float *)(v11 + 4 * v10);
    }
    while (v12 != v4);
  }
  uint64_t result = 0;
  float v4 = v12;
LABEL_12:
  *a1 = v4;
  return result;
}

uint64_t sub_2347C1ED0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v8 = sub_2347EECC0();
    swift_release();
    if (v8)
    {
      swift_bridgeObjectRelease();
      swift_release();
      type metadata accessor for HullPointUUID();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_2347EECB0();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v23 = sub_2347C2E1C(v7, result + 1);
    uint64_t v30 = v23;
    if (*(void *)(v23 + 24) <= *(void *)(v23 + 16))
    {
      swift_retain();
      sub_2347C33E8();
      uint64_t v24 = v30;
    }
    else
    {
      uint64_t v24 = v23;
      swift_retain();
    }
    sub_2347C43E0(a2, v24);
    uint64_t *v3 = v24;
    swift_bridgeObjectRelease();
    *a1 = a2;
  }
  else
  {
    uint64_t v25 = v2;
    sub_2347EF1C0();
    unint64_t v10 = &OBJC_IVAR____TtC8RoomPlan13HullPointUUID_uuid;
    uint64_t v27 = a2;
    swift_bridgeObjectRetain();
    sub_2347ED590();
    uint64_t v11 = sub_2347EF200();
    uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v13 = v11 & ~v12;
    if ((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
    {
      uint64_t v14 = ~v12;
      uint64_t v15 = OBJC_IVAR____TtC8RoomPlan13HullPointUUID_type;
      do
      {
        uint64_t v16 = *(void *)(*(void *)(v6 + 48) + 8 * v13);
        swift_retain();
        if (sub_2347ED570())
        {
          int v17 = *(unsigned __int8 *)(v16 + OBJC_IVAR____TtC8RoomPlan13HullPointUUID_type);
          char v18 = v10;
          int v19 = *(unsigned __int8 *)(v27 + v15);
          swift_release();
          BOOL v20 = v17 == v19;
          unint64_t v10 = v18;
          if (v20)
          {
            swift_release();
            swift_bridgeObjectRelease();
            *a1 = *(void *)(*(void *)(*v25 + 48) + 8 * v13);
            swift_retain();
            return 0;
          }
        }
        else
        {
          swift_release();
        }
        unint64_t v13 = (v13 + 1) & v14;
      }
      while (((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v29 = *v25;
    *uint64_t v25 = 0x8000000000000000;
    uint64_t v22 = swift_retain();
    sub_2347C482C(v22, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v25 = v29;
    swift_bridgeObjectRelease();
    *a1 = v27;
  }
  return 1;
}

uint64_t sub_2347C21C4(double *a1, float32x2_t a2)
{
  uint64_t v5 = *v2;
  sub_2347EF1C0();
  sub_23470B9E8();
  uint64_t v6 = sub_2347EF200();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if ((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
  {
    uint64_t v9 = ~v7;
    while (1)
    {
      int32x2_t v10 = vceq_f32(*(float32x2_t *)(*(void *)(v5 + 48) + 8 * v8), a2);
      if (v10.i32[0] & v10.i32[1]) {
        break;
      }
      unint64_t v8 = (v8 + 1) & v9;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_5;
      }
    }
    uint64_t result = 0;
    a2 = *(float32x2_t *)(*(void *)(*v2 + 48) + 8 * v8);
  }
  else
  {
LABEL_5:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v13 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_2347C49FC(v8, isUniquelyReferenced_nonNull_native, a2);
    *uint64_t v2 = v13;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
  }
  *a1 = *(double *)&a2;
  return result;
}

uint64_t sub_2347C22EC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) == 0)
  {
    sub_2347EF1C0();
    uint64_t v10 = *(void *)(*(void *)(a2 + 48) + 16);
    if (v10)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v11 = 0;
      do
      {
        ++v11;
        __swift_instantiateConcreteTypeFromMangledName(&qword_2687AD2F8);
        sub_2347EF150();
        sub_2347EF1D0();
      }
      while (v10 != v11);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    uint64_t v14 = sub_2347EF200();
    uint64_t v15 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v16 = v14 & ~v15;
    if ((*(void *)(v6 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16))
    {
      uint64_t v17 = ~v15;
      char v18 = *(float32x2_t **)(a2 + 48);
      float32x2_t v19 = v18[2];
      do
      {
        BOOL v20 = *(float32x2_t **)(*(void *)(*(void *)(v6 + 48) + 8 * v16) + 48);
        if (*(void *)&v20[2] == *(void *)&v19)
        {
          if (!*(void *)&v19 || v20 == v18)
          {
LABEL_24:
            swift_release();
            swift_bridgeObjectRelease();
            *a1 = *(void *)(*(void *)(*v2 + 48) + 8 * v16);
            swift_retain();
            return 0;
          }
          uint64_t v21 = v20 + 4;
          uint64_t v22 = v18 + 4;
          float32x2_t v23 = v18[2];
          while (1)
          {
            int32x2_t v24 = vceq_f32(*v21, *v22);
            if ((v24.i32[0] & v24.i32[1] & 1) == 0) {
              break;
            }
            ++v21;
            ++v22;
            if (!--*(void *)&v23) {
              goto LABEL_24;
            }
          }
        }
        unint64_t v16 = (v16 + 1) & v17;
      }
      while (((*(void *)(v6 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16) & 1) != 0);
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v29 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    uint64_t v26 = swift_retain();
    sub_2347C4B50(v26, v16, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v29;
    goto LABEL_28;
  }
  if (v6 < 0) {
    uint64_t v7 = *v2;
  }
  else {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
  }
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v8 = sub_2347EECC0();
  swift_release();
  if (v8)
  {
    swift_bridgeObjectRelease();
    swift_release();
    type metadata accessor for CDTTriangle();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    *a1 = v27;
    swift_unknownObjectRelease();
    return 0;
  }
  uint64_t result = sub_2347EECB0();
  if (!__OFADD__(result, 1))
  {
    uint64_t v12 = sub_2347C3030(v7, result + 1);
    uint64_t v28 = v12;
    if (*(void *)(v12 + 24) <= *(void *)(v12 + 16))
    {
      swift_retain();
      sub_2347C3984();
      uint64_t v13 = v28;
    }
    else
    {
      uint64_t v13 = v12;
      swift_retain();
    }
    sub_2347C4490(a2, v13);
    uint64_t *v3 = v13;
LABEL_28:
    swift_bridgeObjectRelease();
    *a1 = a2;
    return 1;
  }
  __break(1u);
  return result;
}

uint64_t sub_2347C2600(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  sub_2347EF1C0();
  sub_2346A1DCC(a2, (uint64_t)&v21);
  __swift_project_boxed_opaque_existential_1(&v21, v22);
  uint64_t DynamicType = swift_getDynamicType();
  uint64_t v8 = v23;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
  v19[0] = DynamicType;
  v19[1] = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2687ACED0);
  sub_2347EE690();
  sub_2347EE6C0();
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1((void *)a2, *(void *)(a2 + 24));
  sub_2347EE750();
  sub_2347EE6C0();
  swift_bridgeObjectRelease();
  uint64_t v9 = sub_2347EF200();
  uint64_t v10 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v11 = v9 & ~v10;
  char v18 = v3;
  if ((*(void *)(v6 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11))
  {
    uint64_t v12 = ~v10;
    while (1)
    {
      sub_23470BA38(*(void *)(v6 + 48) + 40 * v11, (uint64_t)&v21);
      sub_2347EF1C0();
      sub_2346A1DCC((uint64_t)&v21, (uint64_t)v19);
      __swift_project_boxed_opaque_existential_1(v19, v20);
      swift_getDynamicType();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
      sub_2347EE690();
      sub_2347EE6C0();
      swift_bridgeObjectRelease();
      __swift_project_boxed_opaque_existential_1(&v21, v22);
      sub_2347EE750();
      sub_2347EE6C0();
      swift_bridgeObjectRelease();
      uint64_t v13 = sub_2347EF200();
      sub_2347EF1C0();
      sub_2346A1DCC(a2, (uint64_t)v19);
      __swift_project_boxed_opaque_existential_1(v19, v20);
      swift_getDynamicType();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
      sub_2347EE690();
      sub_2347EE6C0();
      swift_bridgeObjectRelease();
      __swift_project_boxed_opaque_existential_1((void *)a2, *(void *)(a2 + 24));
      sub_2347EE750();
      sub_2347EE6C0();
      swift_bridgeObjectRelease();
      uint64_t v14 = sub_2347EF200();
      sub_23470BA94((uint64_t)&v21);
      if (v13 == v14) {
        break;
      }
      unint64_t v11 = (v11 + 1) & v12;
      if (((*(void *)(v6 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
        goto LABEL_5;
      }
    }
    swift_bridgeObjectRelease();
    sub_23470BA94(a2);
    sub_23470BA38(*(void *)(*v18 + 48) + 40 * v11, a1);
    return 0;
  }
  else
  {
LABEL_5:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_23470BA38(a2, (uint64_t)v24);
    uint64_t v21 = *v18;
    *char v18 = 0x8000000000000000;
    sub_2347C4D54((uint64_t)v24, v11, isUniquelyReferenced_nonNull_native);
    *char v18 = v21;
    swift_bridgeObjectRelease();
    long long v16 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v16;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    return 1;
  }
}

uint64_t sub_2347C29AC(unsigned char *a1, uint64_t a2)
{
  return sub_2347C29C0(a1, a2, (uint64_t *)&unk_2687AE1A0);
}

uint64_t sub_2347C29C0(unsigned char *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v7 = *v3;
  sub_2347EF1C0();
  sub_2347EF1D0();
  uint64_t v8 = sub_2347EF200();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v15 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    sub_2347C50F0(a2, v10, isUniquelyReferenced_nonNull_native, a3);
    uint64_t *v3 = v15;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v11 = *(void *)(v7 + 48);
  if (*(unsigned __int8 *)(v11 + v10) != a2)
  {
    uint64_t v12 = ~v9;
    do
    {
      unint64_t v10 = (v10 + 1) & v12;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(unsigned __int8 *)(v11 + v10) != a2);
  }
  uint64_t result = 0;
  LOBYTE(a2) = *(unsigned char *)(*(void *)(*v3 + 48) + v10);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_2347C2AF8(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_2347ED490();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_2347C9FF4(&qword_2687AEFF0, MEMORY[0x263F06EA8]);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = sub_2347EE530();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    long long v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_2347C9FF4(&qword_2687AEEE8, MEMORY[0x263F06EA8]);
      char v21 = sub_2347EE570();
      uint64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      uint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    int32x2_t v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    sub_2347C524C((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    uint64_t *v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_2347C2E1C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2687ADF20);
    uint64_t v2 = sub_2347EED30();
    uint64_t v14 = v2;
    sub_2347EEC70();
    if (sub_2347EECE0())
    {
      type metadata accessor for HullPointUUID();
      do
      {
        swift_dynamicCast();
        uint64_t v2 = v14;
        if (*(void *)(v14 + 24) <= *(void *)(v14 + 16))
        {
          sub_2347C33E8();
          uint64_t v2 = v14;
        }
        sub_2347EF1C0();
        sub_2347ED590();
        uint64_t result = sub_2347EF200();
        uint64_t v4 = v2 + 56;
        uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v6 = result & ~v5;
        unint64_t v7 = v6 >> 6;
        if (((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v9 = 0;
          unint64_t v10 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v10 && (v9 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v11 = v7 == v10;
            if (v7 == v10) {
              unint64_t v7 = 0;
            }
            v9 |= v11;
            uint64_t v12 = *(void *)(v4 + 8 * v7);
          }
          while (v12 == -1);
          unint64_t v8 = __clz(__rbit64(~v12)) + (v7 << 6);
        }
        *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(void *)(*(void *)(v2 + 48) + 8 * v8) = v13;
        ++*(void *)(v2 + 16);
      }
      while (sub_2347EECE0());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x263F8EE88];
  }
  return v2;
}

uint64_t sub_2347C3030(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2687AEEC8);
    uint64_t v2 = sub_2347EED30();
    uint64_t v5 = v2;
    sub_2347EEC70();
    if (sub_2347EECE0())
    {
      type metadata accessor for CDTTriangle();
      do
      {
        swift_dynamicCast();
        uint64_t v2 = v5;
        if (*(void *)(v5 + 24) <= *(void *)(v5 + 16))
        {
          sub_2347C3984();
          uint64_t v2 = v5;
        }
        sub_2347C4490(v4, v2);
      }
      while (sub_2347EECE0());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x263F8EE88];
  }
  return v2;
}

uint64_t sub_2347C314C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2687AEEF0);
  uint64_t result = sub_2347EED20();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    uint64_t v28 = v1;
    int64_t v5 = 0;
    unint64_t v6 = (uint64_t *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v27 = -1 << v7;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_36;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_36;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_36;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_36:
                if (v29 >= 64) {
                  bzero((void *)(v2 + 56), 8 * v10);
                }
                else {
                  *unint64_t v6 = v27;
                }
                uint64_t v1 = v28;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_42;
                  }
                  if (v5 >= v10) {
                    goto LABEL_36;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      unsigned int v18 = *(_DWORD *)(*(void *)(v2 + 48) + 4 * v14);
      if ((v18 & 0x7FFFFFFF) != 0) {
        uint64_t v19 = v18;
      }
      else {
        uint64_t v19 = 0;
      }
      uint64_t result = MEMORY[0x237DC7120](*(void *)(v4 + 40), v19, 4);
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v25 = v22 == v24;
          if (v22 == v24) {
            unint64_t v22 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v11 + 8 * v22);
        }
        while (v26 == -1);
        unint64_t v12 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_DWORD *)(*(void *)(v4 + 48) + 4 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_2347C33E8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2687ADF20);
  uint64_t v3 = sub_2347EED20();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    unint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v17 = v6[v12];
          if (!v17)
          {
            int64_t v12 = v16 + 2;
            if (v16 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v17 = v6[v12];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
                if (v27 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v6 = -1 << v27;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v12 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v12 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v6[v12];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      uint64_t v19 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
      sub_2347EF1C0();
      sub_2347ED590();
      uint64_t result = sub_2347EF200();
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v25 = v22 == v24;
          if (v22 == v24) {
            unint64_t v22 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_2347C36B0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2687AEEC0);
  uint64_t result = sub_2347EED20();
  uint64_t v5 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v6 = 0;
    uint64_t v7 = (void *)(v2 + 56);
    uint64_t v8 = 1 << *(unsigned char *)(v2 + 32);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v2 + 56);
    int64_t v11 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v12 = result + 56;
    while (1)
    {
      if (v10)
      {
        unint64_t v14 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v15 = v14 | (v6 << 6);
      }
      else
      {
        int64_t v16 = v6 + 1;
        if (__OFADD__(v6, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v11) {
          goto LABEL_33;
        }
        unint64_t v17 = v7[v16];
        ++v6;
        if (!v17)
        {
          int64_t v6 = v16 + 1;
          if (v16 + 1 >= v11) {
            goto LABEL_33;
          }
          unint64_t v17 = v7[v6];
          if (!v17)
          {
            int64_t v6 = v16 + 2;
            if (v16 + 2 >= v11) {
              goto LABEL_33;
            }
            unint64_t v17 = v7[v6];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v11)
              {
LABEL_33:
                uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
                if (v26 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v7 = -1 << v26;
                }
                uint64_t v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v7[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v6 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v6 >= v11) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v7[v6];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v6 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v6 << 6);
      }
      *(void *)&long long v4 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
      long long v27 = v4;
      sub_2347EF1C0();
      sub_2347EF1F0();
      sub_2347EF1F0();
      uint64_t result = sub_2347EF200();
      uint64_t v19 = -1 << *(unsigned char *)(v5 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v12 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v13 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *((void *)&v4 + 1) = *((void *)&v27 + 1);
      *(void *)(*(void *)(v5 + 48) + 8 * v13) = v27;
      ++*(void *)(v5 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v5;
  return result;
}

unint64_t sub_2347C3984()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2687AEEC8);
  uint64_t v3 = sub_2347EED20();
  if (*(void *)(v2 + 16))
  {
    uint64_t v4 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v5 = (void *)(v2 + 56);
    uint64_t v6 = -1;
    if (v4 < 64) {
      uint64_t v6 = ~(-1 << v4);
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v4 + 63) >> 6;
    unint64_t result = swift_retain();
    int64_t v10 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v11 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v12 = v11 | (v10 << 6);
      }
      else
      {
        int64_t v13 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
          __break(1u);
LABEL_28:
          __break(1u);
          return result;
        }
        if (v13 >= v8) {
          goto LABEL_22;
        }
        unint64_t v14 = v5[v13];
        ++v10;
        if (!v14)
        {
          int64_t v10 = v13 + 1;
          if (v13 + 1 >= v8) {
            goto LABEL_22;
          }
          unint64_t v14 = v5[v10];
          if (!v14)
          {
            int64_t v10 = v13 + 2;
            if (v13 + 2 >= v8) {
              goto LABEL_22;
            }
            unint64_t v14 = v5[v10];
            if (!v14)
            {
              int64_t v15 = v13 + 3;
              if (v15 >= v8)
              {
LABEL_22:
                swift_release();
                uint64_t v16 = 1 << *(unsigned char *)(v2 + 32);
                if (v16 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v16 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v5 = -1 << v16;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v14 = v5[v15];
              if (!v14)
              {
                while (1)
                {
                  int64_t v10 = v15 + 1;
                  if (__OFADD__(v15, 1)) {
                    goto LABEL_28;
                  }
                  if (v10 >= v8) {
                    goto LABEL_22;
                  }
                  unint64_t v14 = v5[v10];
                  ++v15;
                  if (v14) {
                    goto LABEL_21;
                  }
                }
              }
              int64_t v10 = v15;
            }
          }
        }
LABEL_21:
        unint64_t v7 = (v14 - 1) & v14;
        unint64_t v12 = __clz(__rbit64(v14)) + (v10 << 6);
      }
      unint64_t result = sub_2347C4490(*(void *)(*(void *)(v2 + 48) + 8 * v12), v3);
    }
  }
  unint64_t result = swift_release();
  *uint64_t v1 = v3;
  return result;
}

void sub_2347C3B50()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2687AEF10);
  uint64_t v3 = sub_2347EED20();
  if (*(void *)(v2 + 16))
  {
    uint64_t v4 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v5 = (void *)(v2 + 56);
    uint64_t v6 = -1;
    if (v4 < 64) {
      uint64_t v6 = ~(-1 << v4);
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v4 + 63) >> 6;
    swift_retain();
    int64_t v9 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v10 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v11 = v10 | (v9 << 6);
      }
      else
      {
        int64_t v14 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
LABEL_28:
          __break(1u);
          return;
        }
        if (v14 >= v8) {
          goto LABEL_22;
        }
        unint64_t v15 = v5[v14];
        ++v9;
        if (!v15)
        {
          int64_t v9 = v14 + 1;
          if (v14 + 1 >= v8) {
            goto LABEL_22;
          }
          unint64_t v15 = v5[v9];
          if (!v15)
          {
            int64_t v9 = v14 + 2;
            if (v14 + 2 >= v8) {
              goto LABEL_22;
            }
            unint64_t v15 = v5[v9];
            if (!v15)
            {
              int64_t v16 = v14 + 3;
              if (v16 >= v8)
              {
LABEL_22:
                swift_release();
                uint64_t v17 = 1 << *(unsigned char *)(v2 + 32);
                if (v17 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v17 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v5 = -1 << v17;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v15 = v5[v16];
              if (!v15)
              {
                while (1)
                {
                  int64_t v9 = v16 + 1;
                  if (__OFADD__(v16, 1)) {
                    goto LABEL_28;
                  }
                  if (v9 >= v8) {
                    goto LABEL_22;
                  }
                  unint64_t v15 = v5[v9];
                  ++v16;
                  if (v15) {
                    goto LABEL_21;
                  }
                }
              }
              int64_t v9 = v16;
            }
          }
        }
LABEL_21:
        unint64_t v7 = (v15 - 1) & v15;
        unint64_t v11 = __clz(__rbit64(v15)) + (v9 << 6);
      }
      uint64_t v12 = *(void *)(v2 + 48) + 40 * v11;
      __n128 v13 = *(__n128 *)(v12 + 16);
      v18[0] = *(__n128 *)v12;
      v18[1] = v13;
      uint64_t v19 = *(void *)(v12 + 32);
      sub_2347C4590(v18, v3);
    }
  }
  swift_release();
  *uint64_t v1 = v3;
}

uint64_t sub_2347C3D3C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t result = sub_2347EED20();
  uint64_t v6 = result;
  if (*(void *)(v4 + 16))
  {
    int64_t v7 = 0;
    int64_t v8 = (void *)(v4 + 56);
    uint64_t v9 = 1 << *(unsigned char *)(v4 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v4 + 56);
    int64_t v12 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v13 = result + 56;
    while (1)
    {
      if (v11)
      {
        unint64_t v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v16 = v15 | (v7 << 6);
      }
      else
      {
        int64_t v17 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v17 >= v12) {
          goto LABEL_33;
        }
        unint64_t v18 = v8[v17];
        ++v7;
        if (!v18)
        {
          int64_t v7 = v17 + 1;
          if (v17 + 1 >= v12) {
            goto LABEL_33;
          }
          unint64_t v18 = v8[v7];
          if (!v18)
          {
            int64_t v7 = v17 + 2;
            if (v17 + 2 >= v12) {
              goto LABEL_33;
            }
            unint64_t v18 = v8[v7];
            if (!v18)
            {
              int64_t v19 = v17 + 3;
              if (v19 >= v12)
              {
LABEL_33:
                uint64_t v28 = 1 << *(unsigned char *)(v4 + 32);
                if (v28 > 63) {
                  bzero((void *)(v4 + 56), ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *int64_t v8 = -1 << v28;
                }
                uint64_t v3 = v2;
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v18 = v8[v19];
              if (!v18)
              {
                while (1)
                {
                  int64_t v7 = v19 + 1;
                  if (__OFADD__(v19, 1)) {
                    goto LABEL_39;
                  }
                  if (v7 >= v12) {
                    goto LABEL_33;
                  }
                  unint64_t v18 = v8[v7];
                  ++v19;
                  if (v18) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v7 = v19;
            }
          }
        }
LABEL_23:
        unint64_t v11 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v7 << 6);
      }
      char v20 = *(unsigned char *)(*(void *)(v4 + 48) + v16);
      sub_2347EF1C0();
      sub_2347EF1D0();
      uint64_t result = sub_2347EF200();
      uint64_t v21 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v22 = result & ~v21;
      unint64_t v23 = v22 >> 6;
      if (((-1 << v22) & ~*(void *)(v13 + 8 * (v22 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v22) & ~*(void *)(v13 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v26 = v23 == v25;
          if (v23 == v25) {
            unint64_t v23 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v13 + 8 * v23);
        }
        while (v27 == -1);
        unint64_t v14 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(void *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(unsigned char *)(*(void *)(v6 + 48) + v14) = v20;
      ++*(void *)(v6 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v3 = v6;
  return result;
}

uint64_t sub_2347C3FE4()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_2347ED490();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  float v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2687AEF08);
  uint64_t v5 = sub_2347EED20();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    char v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    unint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *char v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      BOOL v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_2347C9FF4(&qword_2687AEFF0, MEMORY[0x263F06EA8]);
      uint64_t result = sub_2347EE530();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

unint64_t sub_2347C43E0(uint64_t a1, uint64_t a2)
{
  sub_2347EF1C0();
  sub_2347ED590();
  sub_2347EF200();
  unint64_t result = sub_2347EEC50();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

unint64_t sub_2347C4490(uint64_t a1, uint64_t a2)
{
  sub_2347EF1C0();
  uint64_t v4 = *(void *)(*(void *)(a1 + 48) + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = 0;
    do
    {
      ++v5;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2687AD2F8);
      sub_2347EF150();
      sub_2347EF1D0();
    }
    while (v4 != v5);
    swift_bridgeObjectRelease();
  }
  sub_2347EF200();
  unint64_t result = sub_2347EEC50();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

__n128 sub_2347C4590(__n128 *a1, uint64_t a2)
{
  sub_2347EF1C0();
  sub_2346A1DCC((uint64_t)a1, (uint64_t)v8);
  __swift_project_boxed_opaque_existential_1(v8, v8[3]);
  swift_getDynamicType();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2687ACED0);
  sub_2347EE690();
  sub_2347EE6C0();
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1(a1, a1[1].n128_i64[1]);
  sub_2347EE750();
  sub_2347EE6C0();
  swift_bridgeObjectRelease();
  sub_2347EF200();
  unint64_t v4 = sub_2347EEC50();
  *(void *)(a2 + 56 + ((v4 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v4;
  uint64_t v5 = *(void *)(a2 + 48) + 40 * v4;
  unint64_t v6 = a1[2].n128_u64[0];
  __n128 result = a1[1];
  *(__n128 *)uint64_t v5 = *a1;
  *(__n128 *)(v5 + 16) = result;
  *(void *)(v5 + 32) = v6;
  ++*(void *)(a2 + 16);
  return result;
}

uint64_t sub_2347C46F4(uint64_t result, char a2, float a3)
{
  unint64_t v4 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a2 & 1) != 0) {
    goto LABEL_17;
  }
  if (a2)
  {
    sub_2347C314C();
  }
  else
  {
    if (v7 > v6)
    {
      __n128 result = (uint64_t)sub_2347C54EC();
      goto LABEL_17;
    }
    sub_2347C5FCC();
  }
  uint64_t v8 = *v3;
  if ((LODWORD(a3) & 0x7FFFFFFF) != 0) {
    uint64_t v9 = LODWORD(a3);
  }
  else {
    uint64_t v9 = 0;
  }
  __n128 result = MEMORY[0x237DC7120](*(void *)(*v3 + 40), v9, 4);
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  unint64_t v4 = result & ~v10;
  if ((*(void *)(v8 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v11 = *(void *)(v8 + 48);
    if (*(float *)(v11 + 4 * v4) == a3)
    {
LABEL_16:
      __n128 result = sub_2347EF0E0();
      __break(1u);
    }
    else
    {
      uint64_t v12 = ~v10;
      while (1)
      {
        unint64_t v4 = (v4 + 1) & v12;
        if (((*(void *)(v8 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
          break;
        }
        if (*(float *)(v11 + 4 * v4) == a3) {
          goto LABEL_16;
        }
      }
    }
  }
LABEL_17:
  uint64_t v13 = *v3;
  *(void *)(*v3 + 8 * (v4 >> 6) + 56) |= 1 << v4;
  *(float *)(*(void *)(v13 + 48) + 4 * v4) = a3;
  uint64_t v14 = *(void *)(v13 + 16);
  BOOL v15 = __OFADD__(v14, 1);
  uint64_t v16 = v14 + 1;
  if (v15) {
    __break(1u);
  }
  else {
    *(void *)(v13 + 16) = v16;
  }
  return result;
}

uint64_t sub_2347C482C(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v19 = result;
  unint64_t v5 = *(void *)(*v3 + 16);
  unint64_t v6 = *(void *)(*v3 + 24);
  if (v6 > v5 && (a3 & 1) != 0) {
    goto LABEL_15;
  }
  if (a3)
  {
    sub_2347C33E8();
  }
  else
  {
    if (v6 > v5)
    {
      __n128 result = (uint64_t)sub_2347C5828(&qword_2687ADF20);
      goto LABEL_15;
    }
    sub_2347C6244();
  }
  uint64_t v7 = *v3;
  sub_2347EF1C0();
  sub_2347ED590();
  __n128 result = sub_2347EF200();
  uint64_t v8 = -1 << *(unsigned char *)(v7 + 32);
  a2 = result & ~v8;
  if ((*(void *)(v7 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v9 = ~v8;
    type metadata accessor for HullPointUUID();
    uint64_t v10 = OBJC_IVAR____TtC8RoomPlan13HullPointUUID_type;
    do
    {
      uint64_t v11 = *(void *)(*(void *)(v7 + 48) + 8 * a2);
      swift_retain();
      if (sub_2347ED570())
      {
        int v12 = *(unsigned __int8 *)(v11 + OBJC_IVAR____TtC8RoomPlan13HullPointUUID_type);
        int v13 = *(unsigned __int8 *)(v19 + v10);
        __n128 result = swift_release();
        if (v12 == v13)
        {
          __n128 result = sub_2347EF0E0();
          __break(1u);
          break;
        }
      }
      else
      {
        __n128 result = swift_release();
      }
      a2 = (a2 + 1) & v9;
    }
    while (((*(void *)(v7 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_15:
  uint64_t v14 = *v18;
  *(void *)(*v18 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v14 + 48) + 8 * a2) = v19;
  uint64_t v15 = *(void *)(v14 + 16);
  BOOL v16 = __OFADD__(v15, 1);
  uint64_t v17 = v15 + 1;
  if (v16) {
    __break(1u);
  }
  else {
    *(void *)(v14 + 16) = v17;
  }
  return result;
}

uint64_t sub_2347C49FC(uint64_t result, char a2, float32x2_t a3)
{
  unint64_t v4 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a2 & 1) != 0) {
    goto LABEL_12;
  }
  if (a2)
  {
    sub_2347C36B0();
  }
  else
  {
    if (v7 > v6)
    {
      __n128 result = (uint64_t)sub_2347C5690();
      goto LABEL_12;
    }
    sub_2347C64E0();
  }
  uint64_t v8 = *v3;
  sub_2347EF1C0();
  sub_23470B9E8();
  __n128 result = sub_2347EF200();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  unint64_t v4 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v10 = ~v9;
    do
    {
      int32x2_t v11 = vceq_f32(*(float32x2_t *)(*(void *)(v8 + 48) + 8 * v4), a3);
      if (v11.i32[0] & v11.i32[1]) {
        goto LABEL_15;
      }
      unint64_t v4 = (v4 + 1) & v10;
    }
    while (((*(void *)(v8 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
LABEL_12:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (v4 >> 6) + 56) |= 1 << v4;
  *(double *)(*(void *)(v12 + 48) + 8 * v4) = *(double *)&a3;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (!v14)
  {
    *(void *)(v12 + 16) = v15;
    return result;
  }
  __break(1u);
LABEL_15:
  __swift_instantiateConcreteTypeFromMangledName(&qword_2687AD2F8);
  __n128 result = sub_2347EF0E0();
  __break(1u);
  return result;
}

uint64_t sub_2347C4B50(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_22;
  }
  if (a3)
  {
    sub_2347C3984();
  }
  else
  {
    if (v7 > v6)
    {
      __n128 result = (uint64_t)sub_2347C5828(&qword_2687AEEC8);
      goto LABEL_22;
    }
    sub_2347C6784();
  }
  uint64_t v8 = *v3;
  sub_2347EF1C0();
  uint64_t v9 = *(void *)(*(void *)(v5 + 48) + 16);
  if (v9)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = 0;
    do
    {
      ++v10;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2687AD2F8);
      sub_2347EF150();
      sub_2347EF1D0();
    }
    while (v9 != v10);
    swift_bridgeObjectRelease();
  }
  __n128 result = sub_2347EF200();
  uint64_t v11 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v11;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v12 = ~v11;
    __n128 result = type metadata accessor for CDTTriangle();
    uint64_t v13 = *(float32x2_t **)(v5 + 48);
    float32x2_t v14 = v13[2];
    do
    {
      uint64_t v15 = *(float32x2_t **)(*(void *)(*(void *)(v8 + 48) + 8 * a2) + 48);
      if (*(void *)&v15[2] == *(void *)&v14)
      {
        if (!*(void *)&v14 || v15 == v13)
        {
LABEL_21:
          __n128 result = sub_2347EF0E0();
          __break(1u);
          break;
        }
        BOOL v16 = v15 + 4;
        uint64_t v17 = v13 + 4;
        float32x2_t v18 = v13[2];
        while (1)
        {
          int32x2_t v19 = vceq_f32(*v16, *v17);
          if ((v19.i32[0] & v19.i32[1] & 1) == 0) {
            break;
          }
          ++v16;
          ++v17;
          if (!--*(void *)&v18) {
            goto LABEL_21;
          }
        }
      }
      a2 = (a2 + 1) & v12;
    }
    while (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_22:
  uint64_t v20 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v20 + 48) + 8 * a2) = v5;
  uint64_t v21 = *(void *)(v20 + 16);
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v23;
  }
  return result;
}

uint64_t sub_2347C4D54(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_2347C3B50();
  }
  else
  {
    if (v7 > v6)
    {
      __n128 result = (uint64_t)sub_2347C59CC();
      goto LABEL_12;
    }
    sub_2347C6918();
  }
  uint64_t v8 = *v3;
  sub_2347EF1C0();
  sub_2346A1DCC(v5, (uint64_t)&v25);
  __swift_project_boxed_opaque_existential_1(&v25, v26);
  uint64_t DynamicType = swift_getDynamicType();
  uint64_t v10 = v27;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v25);
  v23[0] = DynamicType;
  v23[1] = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2687ACED0);
  sub_2347EE690();
  sub_2347EE6C0();
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1((void *)v5, *(void *)(v5 + 24));
  sub_2347EE750();
  sub_2347EE6C0();
  swift_bridgeObjectRelease();
  __n128 result = sub_2347EF200();
  uint64_t v11 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v11;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v12 = ~v11;
    do
    {
      sub_23470BA38(*(void *)(v8 + 48) + 40 * a2, (uint64_t)&v25);
      sub_2347EF1C0();
      sub_2346A1DCC((uint64_t)&v25, (uint64_t)v23);
      __swift_project_boxed_opaque_existential_1(v23, v24);
      swift_getDynamicType();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
      sub_2347EE690();
      sub_2347EE6C0();
      swift_bridgeObjectRelease();
      __swift_project_boxed_opaque_existential_1(&v25, v26);
      sub_2347EE750();
      sub_2347EE6C0();
      swift_bridgeObjectRelease();
      uint64_t v13 = sub_2347EF200();
      sub_2347EF1C0();
      sub_2346A1DCC(v5, (uint64_t)v23);
      __swift_project_boxed_opaque_existential_1(v23, v24);
      swift_getDynamicType();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
      sub_2347EE690();
      sub_2347EE6C0();
      swift_bridgeObjectRelease();
      __swift_project_boxed_opaque_existential_1((void *)v5, *(void *)(v5 + 24));
      sub_2347EE750();
      sub_2347EE6C0();
      swift_bridgeObjectRelease();
      uint64_t v14 = sub_2347EF200();
      __n128 result = sub_23470BA94((uint64_t)&v25);
      if (v13 == v14) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v12;
    }
    while (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v15 = *v22;
  *(void *)(*v22 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t v16 = *(void *)(v15 + 48) + 40 * a2;
  long long v17 = *(_OWORD *)v5;
  long long v18 = *(_OWORD *)(v5 + 16);
  *(void *)(v16 + 32) = *(void *)(v5 + 32);
  *(_OWORD *)uint64_t v16 = v17;
  *(_OWORD *)(v16 + 16) = v18;
  uint64_t v19 = *(void *)(v15 + 16);
  BOOL v20 = __OFADD__(v19, 1);
  uint64_t v21 = v19 + 1;
  if (!v20)
  {
    *(void *)(v15 + 16) = v21;
    return result;
  }
  __break(1u);
LABEL_15:
  __n128 result = sub_2347EF0E0();
  __break(1u);
  return result;
}

uint64_t sub_2347C50F0(uint64_t result, unint64_t a2, char a3, uint64_t *a4)
{
  int v6 = result;
  unint64_t v7 = *(void *)(*v4 + 16);
  unint64_t v8 = *(void *)(*v4 + 24);
  if (v8 > v7 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v9 = v7 + 1;
  if (a3)
  {
    sub_2347C3D3C(v9, a4);
  }
  else
  {
    if (v8 > v7)
    {
      __n128 result = (uint64_t)sub_2347C5B9C(a4);
      goto LABEL_14;
    }
    sub_2347C6AC8(v9, a4);
  }
  uint64_t v10 = *v4;
  sub_2347EF1C0();
  sub_2347EF1D0();
  __n128 result = sub_2347EF200();
  uint64_t v11 = -1 << *(unsigned char *)(v10 + 32);
  a2 = result & ~v11;
  if ((*(void *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v12 = *(void *)(v10 + 48);
    if (*(unsigned __int8 *)(v12 + a2) == v6)
    {
LABEL_13:
      __n128 result = sub_2347EF0E0();
      __break(1u);
    }
    else
    {
      uint64_t v13 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(void *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(unsigned __int8 *)(v12 + a2) == v6) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v14 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v14 + 48) + a2) = v6;
  uint64_t v15 = *(void *)(v14 + 16);
  BOOL v16 = __OFADD__(v15, 1);
  uint64_t v17 = v15 + 1;
  if (v16) {
    __break(1u);
  }
  else {
    *(void *)(v14 + 16) = v17;
  }
  return result;
}

uint64_t sub_2347C524C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v32 = a1;
  uint64_t v6 = sub_2347ED490();
  uint64_t v7 = *(void *)(v6 - 8);
  v8.n128_f64[0] = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v11 = *(void *)(*v3 + 16);
  unint64_t v12 = *(void *)(*v3 + 24);
  unint64_t v29 = v3;
  uint64_t v30 = v7;
  if (v12 > v11 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_2347C3FE4();
  }
  else
  {
    if (v12 > v11)
    {
      sub_2347C5D28();
      goto LABEL_12;
    }
    sub_2347C6D40();
  }
  uint64_t v13 = *v3;
  sub_2347C9FF4(&qword_2687AEFF0, MEMORY[0x263F06EA8]);
  uint64_t v14 = sub_2347EE530();
  uint64_t v15 = -1 << *(unsigned char *)(v13 + 32);
  a2 = v14 & ~v15;
  uint64_t v31 = v13;
  uint64_t v16 = v13 + 56;
  if ((*(void *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v17 = ~v15;
    BOOL v20 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v19 = v7 + 16;
    long long v18 = v20;
    uint64_t v21 = *(void *)(v19 + 56);
    do
    {
      v18(v10, *(void *)(v31 + 48) + v21 * a2, v6);
      sub_2347C9FF4(&qword_2687AEEE8, MEMORY[0x263F06EA8]);
      char v22 = sub_2347EE570();
      (*(void (**)(char *, uint64_t))(v19 - 8))(v10, v6);
      if (v22) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v17;
    }
    while (((*(void *)(v16 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v23 = v30;
  uint64_t v24 = *v29;
  *(void *)(v24 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, __n128))(v23 + 32))(*(void *)(v24 + 48) + *(void *)(v23 + 72) * a2, v32, v6, v8);
  uint64_t v26 = *(void *)(v24 + 16);
  BOOL v27 = __OFADD__(v26, 1);
  uint64_t v28 = v26 + 1;
  if (!v27)
  {
    *(void *)(v24 + 16) = v28;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_2347EF0E0();
  __break(1u);
  return result;
}

void *sub_2347C54EC()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2687AEEF0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2347EED10();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_DWORD *)(*(void *)(v4 + 48) + 4 * v15) = *(_DWORD *)(*(void *)(v2 + 48) + 4 * v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_2347C5684()
{
  return sub_2347C5828(&qword_2687ADF20);
}

void *sub_2347C5690()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2687AEEC0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2347EED10();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_2347C5828(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_2347EED10();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  uint64_t result = (void *)(v4 + 56);
  uint64_t v7 = v3 + 56;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8) {
    uint64_t result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 56);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v7 + 8 * v17);
    ++v10;
    if (!v18)
    {
      int64_t v10 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v7 + 8 * v10);
      if (!v18)
      {
        int64_t v10 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v7 + 8 * v10);
        if (!v18) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v13 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_12:
    *(void *)(*(void *)(v5 + 48) + 8 * v16) = *(void *)(*(void *)(v3 + 48) + 8 * v16);
    uint64_t result = (void *)swift_retain();
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v7 + 8 * v19);
  if (v18)
  {
    int64_t v10 = v19;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v10 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v7 + 8 * v10);
    ++v19;
    if (v18) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_2347C59CC()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2687AEF10);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2347EED10();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 40 * v15;
    uint64_t result = (void *)sub_23470BA38(*(void *)(v2 + 48) + 40 * v15, (uint64_t)v23);
    uint64_t v17 = *(void *)(v4 + 48) + v16;
    long long v18 = v23[0];
    long long v19 = v23[1];
    *(void *)(v17 + 32) = v24;
    *(_OWORD *)uint64_t v17 = v18;
    *(_OWORD *)(v17 + 16) = v19;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_2347C5B9C(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_2347EED10();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  uint64_t result = (void *)(v4 + 56);
  uint64_t v7 = v3 + 56;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8) {
    uint64_t result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 56);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v7 + 8 * v17);
    ++v10;
    if (!v18)
    {
      int64_t v10 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v7 + 8 * v10);
      if (!v18)
      {
        int64_t v10 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v7 + 8 * v10);
        if (!v18) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v13 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_12:
    *(unsigned char *)(*(void *)(v5 + 48) + v16) = *(unsigned char *)(*(void *)(v3 + 48) + v16);
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v7 + 8 * v19);
  if (v18)
  {
    int64_t v10 = v19;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v10 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v7 + 8 * v10);
    ++v19;
    if (v18) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_2347C5D28()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_2347ED490();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2687AEF08);
  uint64_t v6 = *v0;
  uint64_t v7 = sub_2347EED10();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_27:
    *uint64_t v1 = v8;
    return result;
  }
  int64_t v22 = v1;
  uint64_t result = (void *)(v7 + 56);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v10) {
    uint64_t result = memmove(result, (const void *)(v6 + 56), 8 * v10);
  }
  uint64_t v23 = v6 + 56;
  int64_t v11 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v6 + 56);
  int64_t v24 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v16 = v15 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v18 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v18 >= v24) {
      goto LABEL_25;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v18);
    ++v11;
    if (!v19)
    {
      int64_t v11 = v18 + 1;
      if (v18 + 1 >= v24) {
        goto LABEL_25;
      }
      unint64_t v19 = *(void *)(v23 + 8 * v11);
      if (!v19)
      {
        int64_t v11 = v18 + 2;
        if (v18 + 2 >= v24) {
          goto LABEL_25;
        }
        unint64_t v19 = *(void *)(v23 + 8 * v11);
        if (!v19) {
          break;
        }
      }
    }
LABEL_24:
    unint64_t v14 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v11 << 6);
LABEL_9:
    unint64_t v17 = *(void *)(v3 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(void *)(v6 + 48) + v17, v2);
    uint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(v8 + 48) + v17, v5, v2);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v24)
  {
LABEL_25:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v22;
    goto LABEL_27;
  }
  unint64_t v19 = *(void *)(v23 + 8 * v20);
  if (v19)
  {
    int64_t v11 = v20;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v11 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v11 >= v24) {
      goto LABEL_25;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v11);
    ++v20;
    if (v19) {
      goto LABEL_24;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_2347C5FCC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2687AEEF0);
  uint64_t result = sub_2347EED20();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_38:
    *uint64_t v1 = v4;
    return result;
  }
  BOOL v27 = v1;
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v15 >= v10) {
      goto LABEL_36;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_36;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_36;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    unsigned int v18 = *(_DWORD *)(*(void *)(v2 + 48) + 4 * v14);
    if ((v18 & 0x7FFFFFFF) != 0) {
      uint64_t v19 = v18;
    }
    else {
      uint64_t v19 = 0;
    }
    uint64_t result = MEMORY[0x237DC7120](*(void *)(v4 + 40), v19, 4);
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v11 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v12 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_DWORD *)(*(void *)(v4 + 48) + 4 * v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_36:
    uint64_t result = swift_release();
    uint64_t v1 = v27;
    goto LABEL_38;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_36;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_2347C6244()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2687ADF20);
  uint64_t v3 = sub_2347EED20();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v9) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    uint64_t v19 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    sub_2347EF1C0();
    swift_retain();
    sub_2347ED590();
    uint64_t result = sub_2347EF200();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2347C64E0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2687AEEC0);
  uint64_t result = sub_2347EED20();
  uint64_t v5 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v5;
    return result;
  }
  int64_t v6 = 0;
  uint64_t v7 = v2 + 56;
  uint64_t v8 = 1 << *(unsigned char *)(v2 + 32);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v2 + 56);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      unint64_t v14 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v15 = v14 | (v6 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v11) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v7 + 8 * v16);
    ++v6;
    if (!v17)
    {
      int64_t v6 = v16 + 1;
      if (v16 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v7 + 8 * v6);
      if (!v17)
      {
        int64_t v6 = v16 + 2;
        if (v16 + 2 >= v11) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v7 + 8 * v6);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v6 << 6);
LABEL_24:
    *(void *)&long long v4 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    long long v26 = v4;
    sub_2347EF1C0();
    sub_2347EF1F0();
    sub_2347EF1F0();
    uint64_t result = sub_2347EF200();
    uint64_t v19 = -1 << *(unsigned char *)(v5 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v12 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v13 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *((void *)&v4 + 1) = *((void *)&v26 + 1);
    *(void *)(*(void *)(v5 + 48) + 8 * v13) = v26;
    ++*(void *)(v5 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v11)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v7 + 8 * v18);
  if (v17)
  {
    int64_t v6 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v6 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v6 >= v11) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v7 + 8 * v6);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

unint64_t sub_2347C6784()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2687AEEC8);
  uint64_t v3 = sub_2347EED20();
  if (!*(void *)(v2 + 16))
  {
LABEL_23:
    unint64_t result = swift_release();
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v4 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v5 = v2 + 56;
  uint64_t v6 = -1;
  if (v4 < 64) {
    uint64_t v6 = ~(-1 << v4);
  }
  uint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v8 = (unint64_t)(v4 + 63) >> 6;
  unint64_t result = swift_retain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      v7 &= v7 - 1;
      goto LABEL_6;
    }
    int64_t v12 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v12 >= v8) {
      goto LABEL_22;
    }
    uint64_t v13 = *(void *)(v5 + 8 * v12);
    ++v10;
    if (!v13)
    {
      int64_t v10 = v12 + 1;
      if (v12 + 1 >= v8) {
        goto LABEL_22;
      }
      uint64_t v13 = *(void *)(v5 + 8 * v10);
      if (!v13)
      {
        int64_t v10 = v12 + 2;
        if (v12 + 2 >= v8) {
          goto LABEL_22;
        }
        uint64_t v13 = *(void *)(v5 + 8 * v10);
        if (!v13) {
          break;
        }
      }
    }
LABEL_21:
    uint64_t v7 = (v13 - 1) & v13;
LABEL_6:
    uint64_t v11 = swift_retain();
    unint64_t result = sub_2347C4490(v11, v3);
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v8)
  {
LABEL_22:
    swift_release();
    goto LABEL_23;
  }
  uint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
    int64_t v10 = v14;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v10 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v10 >= v8) {
      goto LABEL_22;
    }
    uint64_t v13 = *(void *)(v5 + 8 * v10);
    ++v14;
    if (v13) {
      goto LABEL_21;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_2347C6918()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2687AEF10);
  uint64_t v3 = sub_2347EED20();
  if (!*(void *)(v2 + 16))
  {
    swift_release();
LABEL_24:
    *uint64_t v1 = v3;
    return;
  }
  uint64_t v4 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v5 = v2 + 56;
  uint64_t v6 = -1;
  if (v4 < 64) {
    uint64_t v6 = ~(-1 << v4);
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v8 = (unint64_t)(v4 + 63) >> 6;
  swift_retain();
  int64_t v9 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v10 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v11 = v10 | (v9 << 6);
      goto LABEL_6;
    }
    int64_t v12 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v12 >= v8) {
      goto LABEL_22;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v12);
    ++v9;
    if (!v13)
    {
      int64_t v9 = v12 + 1;
      if (v12 + 1 >= v8) {
        goto LABEL_22;
      }
      unint64_t v13 = *(void *)(v5 + 8 * v9);
      if (!v13)
      {
        int64_t v9 = v12 + 2;
        if (v12 + 2 >= v8) {
          goto LABEL_22;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v9);
        if (!v13) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v7 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v9 << 6);
LABEL_6:
    sub_23470BA38(*(void *)(v2 + 48) + 40 * v11, (uint64_t)v15);
    sub_2347C4590(v15, v3);
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v8)
  {
LABEL_22:
    swift_release_n();
    goto LABEL_24;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
    int64_t v9 = v14;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v9 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v9 >= v8) {
      goto LABEL_22;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v9);
    ++v14;
    if (v13) {
      goto LABEL_21;
    }
  }
LABEL_26:
  __break(1u);
}

uint64_t sub_2347C6AC8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t result = sub_2347EED20();
  uint64_t v6 = result;
  if (!*(void *)(v4 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v3 = v6;
    return result;
  }
  int64_t v7 = 0;
  uint64_t v8 = v4 + 56;
  uint64_t v9 = 1 << *(unsigned char *)(v4 + 32);
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v4 + 56);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = result + 56;
  while (1)
  {
    if (v11)
    {
      unint64_t v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v16 = v15 | (v7 << 6);
      goto LABEL_24;
    }
    int64_t v17 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v17 >= v12) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v8 + 8 * v17);
    ++v7;
    if (!v18)
    {
      int64_t v7 = v17 + 1;
      if (v17 + 1 >= v12) {
        goto LABEL_33;
      }
      unint64_t v18 = *(void *)(v8 + 8 * v7);
      if (!v18)
      {
        int64_t v7 = v17 + 2;
        if (v17 + 2 >= v12) {
          goto LABEL_33;
        }
        unint64_t v18 = *(void *)(v8 + 8 * v7);
        if (!v18) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v11 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v7 << 6);
LABEL_24:
    char v20 = *(unsigned char *)(*(void *)(v4 + 48) + v16);
    sub_2347EF1C0();
    sub_2347EF1D0();
    uint64_t result = sub_2347EF200();
    uint64_t v21 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v13 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v22) & ~*(void *)(v13 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v13 + 8 * v23);
      }
      while (v27 == -1);
      unint64_t v14 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(unsigned char *)(*(void *)(v6 + 48) + v14) = v20;
    ++*(void *)(v6 + 16);
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v12)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v3 = v2;
    goto LABEL_35;
  }
  unint64_t v18 = *(void *)(v8 + 8 * v19);
  if (v18)
  {
    int64_t v7 = v19;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v7 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v7 >= v12) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v8 + 8 * v7);
    ++v19;
    if (v18) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2347C6D40()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_2347ED490();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2687AEF08);
  uint64_t v7 = sub_2347EED20();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_2347C9FF4(&qword_2687AEFF0, MEMORY[0x263F06EA8]);
    uint64_t result = sub_2347EE530();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2347C70F0(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = a2;
  uint64_t v7 = (void *)result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    sub_2347EEC70();
    type metadata accessor for HullPointUUID();
    sub_2347C9FF4((unint64_t *)&qword_2687ADF18, (void (*)(uint64_t))type metadata accessor for HullPointUUID);
    uint64_t result = sub_2347EE900();
    uint64_t v4 = v27;
    uint64_t v8 = v28;
    uint64_t v9 = v29;
    int64_t v10 = v30;
    unint64_t v11 = v31;
    uint64_t v24 = v7;
    if (v6) {
      goto LABEL_3;
    }
LABEL_36:
    uint64_t v12 = 0;
LABEL_46:
    *uint64_t v24 = v4;
    v24[1] = v8;
    v24[2] = v9;
    v24[3] = v10;
    v24[4] = v11;
    return v12;
  }
  int64_t v10 = 0;
  uint64_t v20 = -1 << *(unsigned char *)(a4 + 32);
  uint64_t v8 = a4 + 56;
  uint64_t v9 = ~v20;
  uint64_t v21 = -v20;
  if (v21 < 64) {
    uint64_t v22 = ~(-1 << v21);
  }
  else {
    uint64_t v22 = -1;
  }
  unint64_t v11 = v22 & *(void *)(a4 + 56);
  uint64_t v24 = (void *)result;
  if (!a2) {
    goto LABEL_36;
  }
LABEL_3:
  if (!a3)
  {
    uint64_t v12 = 0;
    goto LABEL_46;
  }
  if (a3 < 0) {
    goto LABEL_48;
  }
  uint64_t v12 = 0;
  int64_t v25 = (unint64_t)(v9 + 64) >> 6;
  uint64_t v23 = v9;
  while (1)
  {
    if (v4 < 0)
    {
      if (!sub_2347EECE0()) {
        goto LABEL_45;
      }
      type metadata accessor for HullPointUUID();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      uint64_t v15 = v26;
      uint64_t result = swift_unknownObjectRelease();
      if (!v26) {
        goto LABEL_45;
      }
      goto LABEL_8;
    }
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v10 << 6);
      goto LABEL_7;
    }
    int64_t v16 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      break;
    }
    if (v16 >= v25)
    {
      unint64_t v11 = 0;
      goto LABEL_45;
    }
    unint64_t v17 = *(void *)(v8 + 8 * v16);
    if (v17) {
      goto LABEL_23;
    }
    int64_t v18 = v10 + 2;
    if (v10 + 2 >= v25)
    {
      unint64_t v11 = 0;
      ++v10;
      goto LABEL_45;
    }
    unint64_t v17 = *(void *)(v8 + 8 * v18);
    if (!v17)
    {
      if (v10 + 3 >= v25) {
        goto LABEL_42;
      }
      unint64_t v17 = *(void *)(v8 + 8 * (v10 + 3));
      if (v17)
      {
        int64_t v16 = v10 + 3;
        goto LABEL_23;
      }
      int64_t v18 = v10 + 4;
      if (v10 + 4 >= v25)
      {
        unint64_t v11 = 0;
        v10 += 3;
        goto LABEL_45;
      }
      unint64_t v17 = *(void *)(v8 + 8 * v18);
      if (!v17)
      {
        int64_t v16 = v10 + 5;
        if (v10 + 5 >= v25)
        {
LABEL_42:
          unint64_t v11 = 0;
          int64_t v10 = v18;
          goto LABEL_45;
        }
        unint64_t v17 = *(void *)(v8 + 8 * v16);
        if (!v17)
        {
          int64_t v19 = v10 + 6;
          while (v25 != v19)
          {
            unint64_t v17 = *(void *)(v8 + 8 * v19++);
            if (v17)
            {
              int64_t v16 = v19 - 1;
              goto LABEL_23;
            }
          }
          unint64_t v11 = 0;
          int64_t v10 = v25 - 1;
          goto LABEL_45;
        }
        goto LABEL_23;
      }
    }
    int64_t v16 = v18;
LABEL_23:
    unint64_t v11 = (v17 - 1) & v17;
    unint64_t v14 = __clz(__rbit64(v17)) + (v16 << 6);
    int64_t v10 = v16;
LABEL_7:
    uint64_t v15 = *(void *)(*(void *)(v4 + 48) + 8 * v14);
    uint64_t result = swift_retain();
    if (!v15) {
      goto LABEL_45;
    }
LABEL_8:
    ++v12;
    *v6++ = v15;
    if (v12 == a3)
    {
      uint64_t v12 = a3;
LABEL_45:
      uint64_t v9 = v23;
      goto LABEL_46;
    }
  }
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

void *sub_2347C740C(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4 + 56;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v8 = 0;
    a3 = 0;
LABEL_35:
    *uint64_t result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (void *)a3;
  }
  if (!a3)
  {
    int64_t v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  int64_t v8 = 0;
  uint64_t v9 = 0;
  int64_t v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(void *)(*(void *)(a4 + 48) + 8 * v12);
    if (v9 == a3) {
      goto LABEL_35;
    }
  }
  int64_t v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v13);
  if (v14) {
    goto LABEL_19;
  }
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    int64_t v13 = v8;
LABEL_19:
    unint64_t v16 = __clz(__rbit64(v14));
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = v16 + (v13 << 6);
    int64_t v8 = v13;
    goto LABEL_8;
  }
  int64_t v15 = v13 + 2;
  if (v13 + 2 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    int64_t v13 = v15;
    goto LABEL_19;
  }
  int64_t v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13 + 2;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14) {
    goto LABEL_15;
  }
  int64_t v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    unint64_t v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14) {
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v13 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v13 >= v10)
    {
      unint64_t v7 = 0;
      int64_t v8 = v10 - 1;
      goto LABEL_34;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v13);
    ++v15;
    if (v14) {
      goto LABEL_19;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

void *sub_2347C75A0(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4 + 64;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v8 = 0;
    a3 = 0;
LABEL_35:
    *uint64_t result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (void *)a3;
  }
  if (!a3)
  {
    int64_t v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  int64_t v8 = 0;
  uint64_t v9 = 0;
  int64_t v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(void *)(*(void *)(a4 + 56) + 8 * v12);
    if (v9 == a3) {
      goto LABEL_35;
    }
  }
  int64_t v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v13);
  if (v14) {
    goto LABEL_19;
  }
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    int64_t v13 = v8;
LABEL_19:
    unint64_t v16 = __clz(__rbit64(v14));
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = v16 + (v13 << 6);
    int64_t v8 = v13;
    goto LABEL_8;
  }
  int64_t v15 = v13 + 2;
  if (v13 + 2 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    int64_t v13 = v15;
    goto LABEL_19;
  }
  int64_t v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13 + 2;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14) {
    goto LABEL_15;
  }
  int64_t v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    unint64_t v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14) {
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v13 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v13 >= v10)
    {
      unint64_t v7 = 0;
      int64_t v8 = v10 - 1;
      goto LABEL_34;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v13);
    ++v15;
    if (v14) {
      goto LABEL_19;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_2347C7734(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  unint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    *unint64_t v11 = *(void *)(*(void *)(a4 + 48) + 8 * v16);
    if (v13 == v10)
    {
      swift_retain();
      goto LABEL_38;
    }
    ++v11;
    uint64_t result = swift_retain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_2347C7930(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  unint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    *unint64_t v11 = *(void *)(*(void *)(a4 + 56) + 8 * v16);
    if (v13 == v10)
    {
      swift_retain();
      goto LABEL_38;
    }
    ++v11;
    uint64_t result = swift_retain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

void sub_2347C7B2C(void *a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2687AEB70);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_2347ED5C0();
  uint64_t v42 = *(void *)(v11 - 8);
  v12.n128_f64[0] = MEMORY[0x270FA5388](v11);
  float v41 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = a4;
  uint64_t v15 = a4 + 64;
  uint64_t v14 = *(void *)(a4 + 64);
  uint64_t v33 = -1 << *(unsigned char *)(a4 + 32);
  if (-v33 < 64) {
    uint64_t v16 = ~(-1 << -(char)v33);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v14;
  if (!a2)
  {
    int64_t v18 = 0;
LABEL_39:
    uint64_t v29 = ~v33;
    *a1 = v43;
    a1[1] = v15;
    a1[2] = v29;
    a1[3] = v18;
    a1[4] = v17;
    return;
  }
  if (!a3)
  {
    int64_t v18 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v37 = a3;
  int64_t v18 = 0;
  uint64_t v19 = 0;
  uint64_t v20 = v41;
  uint64_t v39 = v42 + 16;
  int64_t v40 = (void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v42 + 56);
  uint64_t v38 = v42 + 48;
  int64_t v36 = (void (**)(char *, char *, uint64_t))(v42 + 32);
  uint64_t v34 = v15;
  int64_t v35 = (unint64_t)(63 - v33) >> 6;
  int64_t v31 = v35 - 1;
  uint64_t v32 = a1;
  if (!v17) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v21 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  unint64_t v22 = v21 | (v18 << 6);
  while (1)
  {
    uint64_t v26 = v42;
    uint64_t v27 = *(void *)(v42 + 72);
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v42 + 16))(v10, *(void *)(v43 + 48) + v27 * v22, v11, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v10, 0, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v10, 1, v11) == 1)
    {
      uint64_t v15 = v34;
      goto LABEL_38;
    }
    ++v19;
    uint64_t v28 = *v36;
    (*v36)(v20, v10, v11);
    v28(a2, v20, v11);
    if (v19 == v37)
    {
      a1 = v32;
      uint64_t v15 = v34;
      goto LABEL_39;
    }
    a2 += v27;
    if (v17) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v23 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    uint64_t v15 = v34;
    if (v23 >= v35) {
      goto LABEL_37;
    }
    unint64_t v24 = *(void *)(v34 + 8 * v23);
    if (!v24)
    {
      int64_t v25 = v18 + 2;
      ++v18;
      if (v23 + 1 >= v35) {
        goto LABEL_37;
      }
      unint64_t v24 = *(void *)(v34 + 8 * v25);
      if (v24) {
        goto LABEL_14;
      }
      int64_t v18 = v23 + 1;
      if (v23 + 2 >= v35) {
        goto LABEL_37;
      }
      unint64_t v24 = *(void *)(v34 + 8 * (v23 + 2));
      if (v24)
      {
        v23 += 2;
      }
      else
      {
        int64_t v18 = v23 + 2;
        if (v23 + 3 >= v35) {
          goto LABEL_37;
        }
        unint64_t v24 = *(void *)(v34 + 8 * (v23 + 3));
        if (!v24)
        {
          int64_t v25 = v23 + 4;
          int64_t v18 = v23 + 3;
          if (v23 + 4 < v35)
          {
            unint64_t v24 = *(void *)(v34 + 8 * v25);
            if (!v24)
            {
              while (1)
              {
                int64_t v23 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_42;
                }
                if (v23 >= v35)
                {
                  int64_t v18 = v31;
                  goto LABEL_37;
                }
                unint64_t v24 = *(void *)(v34 + 8 * v23);
                ++v25;
                if (v24) {
                  goto LABEL_21;
                }
              }
            }
LABEL_14:
            int64_t v23 = v25;
            goto LABEL_21;
          }
LABEL_37:
          (*v40)(v10, 1, 1, v11, v12);
          unint64_t v17 = 0;
LABEL_38:
          sub_2346A7C30((uint64_t)v10, (uint64_t *)&unk_2687AEB70);
          a1 = v32;
          goto LABEL_39;
        }
        v23 += 3;
      }
    }
LABEL_21:
    unint64_t v17 = (v24 - 1) & v24;
    unint64_t v22 = __clz(__rbit64(v24)) + (v23 << 6);
    int64_t v18 = v23;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
}

void *sub_2347C7F20(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4 + 64;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v8 = 0;
    a3 = 0;
LABEL_35:
    *uint64_t result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (void *)a3;
  }
  if (!a3)
  {
    int64_t v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  int64_t v8 = 0;
  uint64_t v9 = 0;
  int64_t v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(void *)(*(void *)(a4 + 48) + 8 * v12);
    if (v9 == a3) {
      goto LABEL_35;
    }
  }
  int64_t v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v13);
  if (v14) {
    goto LABEL_19;
  }
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    int64_t v13 = v8;
LABEL_19:
    unint64_t v16 = __clz(__rbit64(v14));
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = v16 + (v13 << 6);
    int64_t v8 = v13;
    goto LABEL_8;
  }
  int64_t v15 = v13 + 2;
  if (v13 + 2 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    int64_t v13 = v15;
    goto LABEL_19;
  }
  int64_t v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13 + 2;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14) {
    goto LABEL_15;
  }
  int64_t v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    unint64_t v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14) {
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v13 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v13 >= v10)
    {
      unint64_t v7 = 0;
      int64_t v8 = v10 - 1;
      goto LABEL_34;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v13);
    ++v15;
    if (v14) {
      goto LABEL_19;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

void sub_2347C80B4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  uint64_t v38 = a6;
  uint64_t v12 = a5(0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12 - 8);
  int64_t v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  int64_t v18 = (char *)&v32 - v17;
  uint64_t v39 = a4;
  uint64_t v20 = a4 + 64;
  uint64_t v19 = *(void *)(a4 + 64);
  uint64_t v35 = -1 << *(unsigned char *)(a4 + 32);
  if (-v35 < 64) {
    uint64_t v21 = ~(-1 << -(char)v35);
  }
  else {
    uint64_t v21 = -1;
  }
  unint64_t v22 = v21 & v19;
  if (!a2)
  {
    int64_t v23 = 0;
LABEL_34:
    uint64_t v31 = ~v35;
    *a1 = v39;
    a1[1] = v20;
    a1[2] = v31;
    a1[3] = v23;
    a1[4] = v22;
    return;
  }
  if (!a3)
  {
    int64_t v23 = 0;
    goto LABEL_34;
  }
  if (a3 < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  uint64_t v34 = a1;
  int64_t v23 = 0;
  uint64_t v24 = 0;
  uint64_t v36 = v20;
  int64_t v37 = (unint64_t)(63 - v35) >> 6;
  int64_t v33 = v37 - 1;
  if (!v22) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v25 = __clz(__rbit64(v22));
  v22 &= v22 - 1;
  unint64_t v26 = v25 | (v23 << 6);
  while (1)
  {
    ++v24;
    uint64_t v30 = *(void *)(v13 + 72);
    sub_2347C9F38(*(void *)(v39 + 56) + v30 * v26, (uint64_t)v15, v38);
    sub_2347901BC((uint64_t)v15, (uint64_t)v18, a7);
    sub_2347901BC((uint64_t)v18, a2, a7);
    if (v24 == a3) {
      goto LABEL_33;
    }
    a2 += v30;
    if (v22) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v27 = v23 + 1;
    if (__OFADD__(v23, 1))
    {
      __break(1u);
      goto LABEL_41;
    }
    if (v27 >= v37)
    {
      unint64_t v22 = 0;
LABEL_33:
      a1 = v34;
      uint64_t v20 = v36;
      goto LABEL_34;
    }
    uint64_t v20 = v36;
    unint64_t v28 = *(void *)(v36 + 8 * v27);
    if (!v28) {
      break;
    }
LABEL_18:
    unint64_t v22 = (v28 - 1) & v28;
    unint64_t v26 = __clz(__rbit64(v28)) + (v27 << 6);
    int64_t v23 = v27;
  }
  v23 += 2;
  if (v27 + 1 >= v37)
  {
    unint64_t v22 = 0;
    int64_t v23 = v27;
LABEL_39:
    a1 = v34;
    goto LABEL_34;
  }
  unint64_t v28 = *(void *)(v36 + 8 * v23);
  if (v28) {
    goto LABEL_14;
  }
  int64_t v29 = v27 + 2;
  if (v27 + 2 >= v37) {
    goto LABEL_36;
  }
  unint64_t v28 = *(void *)(v36 + 8 * v29);
  if (v28) {
    goto LABEL_17;
  }
  int64_t v23 = v27 + 3;
  if (v27 + 3 >= v37)
  {
    unint64_t v22 = 0;
    int64_t v23 = v27 + 2;
    goto LABEL_39;
  }
  unint64_t v28 = *(void *)(v36 + 8 * v23);
  if (v28)
  {
LABEL_14:
    int64_t v27 = v23;
    goto LABEL_18;
  }
  int64_t v29 = v27 + 4;
  if (v27 + 4 >= v37)
  {
LABEL_36:
    unint64_t v22 = 0;
    goto LABEL_39;
  }
  unint64_t v28 = *(void *)(v36 + 8 * v29);
  if (v28)
  {
LABEL_17:
    int64_t v27 = v29;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v27 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v27 >= v37)
    {
      unint64_t v22 = 0;
      int64_t v23 = v33;
      goto LABEL_39;
    }
    unint64_t v28 = *(void *)(v36 + 8 * v27);
    ++v29;
    if (v28) {
      goto LABEL_18;
    }
  }
LABEL_42:
  __break(1u);
}

void sub_2347C83BC(void *a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2687AE940);
  MEMORY[0x270FA5388](v8 - 8);
  int64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_2347ED490();
  uint64_t v42 = *(void *)(v11 - 8);
  v12.n128_f64[0] = MEMORY[0x270FA5388](v11);
  float v41 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = a4;
  uint64_t v15 = a4 + 56;
  uint64_t v14 = *(void *)(a4 + 56);
  uint64_t v33 = -1 << *(unsigned char *)(a4 + 32);
  if (-v33 < 64) {
    uint64_t v16 = ~(-1 << -(char)v33);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v14;
  if (!a2)
  {
    int64_t v18 = 0;
LABEL_39:
    uint64_t v29 = ~v33;
    *a1 = v43;
    a1[1] = v15;
    a1[2] = v29;
    a1[3] = v18;
    a1[4] = v17;
    return;
  }
  if (!a3)
  {
    int64_t v18 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v37 = a3;
  int64_t v18 = 0;
  uint64_t v19 = 0;
  uint64_t v20 = v41;
  uint64_t v39 = v42 + 16;
  int64_t v40 = (void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v42 + 56);
  uint64_t v38 = v42 + 48;
  uint64_t v36 = (void (**)(char *, char *, uint64_t))(v42 + 32);
  uint64_t v34 = v15;
  int64_t v35 = (unint64_t)(63 - v33) >> 6;
  int64_t v31 = v35 - 1;
  uint64_t v32 = a1;
  if (!v17) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v21 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  unint64_t v22 = v21 | (v18 << 6);
  while (1)
  {
    uint64_t v26 = v42;
    uint64_t v27 = *(void *)(v42 + 72);
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v42 + 16))(v10, *(void *)(v43 + 48) + v27 * v22, v11, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v10, 0, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v10, 1, v11) == 1)
    {
      uint64_t v15 = v34;
      goto LABEL_38;
    }
    ++v19;
    unint64_t v28 = *v36;
    (*v36)(v20, v10, v11);
    v28(a2, v20, v11);
    if (v19 == v37)
    {
      a1 = v32;
      uint64_t v15 = v34;
      goto LABEL_39;
    }
    a2 += v27;
    if (v17) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v23 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    uint64_t v15 = v34;
    if (v23 >= v35) {
      goto LABEL_37;
    }
    unint64_t v24 = *(void *)(v34 + 8 * v23);
    if (!v24)
    {
      int64_t v25 = v18 + 2;
      ++v18;
      if (v23 + 1 >= v35) {
        goto LABEL_37;
      }
      unint64_t v24 = *(void *)(v34 + 8 * v25);
      if (v24) {
        goto LABEL_14;
      }
      int64_t v18 = v23 + 1;
      if (v23 + 2 >= v35) {
        goto LABEL_37;
      }
      unint64_t v24 = *(void *)(v34 + 8 * (v23 + 2));
      if (v24)
      {
        v23 += 2;
      }
      else
      {
        int64_t v18 = v23 + 2;
        if (v23 + 3 >= v35) {
          goto LABEL_37;
        }
        unint64_t v24 = *(void *)(v34 + 8 * (v23 + 3));
        if (!v24)
        {
          int64_t v25 = v23 + 4;
          int64_t v18 = v23 + 3;
          if (v23 + 4 < v35)
          {
            unint64_t v24 = *(void *)(v34 + 8 * v25);
            if (!v24)
            {
              while (1)
              {
                int64_t v23 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_42;
                }
                if (v23 >= v35)
                {
                  int64_t v18 = v31;
                  goto LABEL_37;
                }
                unint64_t v24 = *(void *)(v34 + 8 * v23);
                ++v25;
                if (v24) {
                  goto LABEL_21;
                }
              }
            }
LABEL_14:
            int64_t v23 = v25;
            goto LABEL_21;
          }
LABEL_37:
          (*v40)(v10, 1, 1, v11, v12);
          unint64_t v17 = 0;
LABEL_38:
          sub_2346A7C30((uint64_t)v10, &qword_2687AE940);
          a1 = v32;
          goto LABEL_39;
        }
        v23 += 3;
      }
    }
LABEL_21:
    unint64_t v17 = (v24 - 1) & v24;
    unint64_t v22 = __clz(__rbit64(v24)) + (v23 << 6);
    int64_t v18 = v23;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
}

uint64_t sub_2347C87B0(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v22 = result + 56;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(result + 56);
  int64_t v23 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = a2 + 56;
  if (!v7) {
    goto LABEL_9;
  }
LABEL_7:
  uint64_t v24 = (v7 - 1) & v7;
  int64_t v25 = v4;
  for (unint64_t i = __clz(__rbit64(v7)) | (v4 << 6); ; unint64_t i = __clz(__rbit64(v11)) + (v12 << 6))
  {
    sub_23470BA38(*(void *)(v3 + 48) + 40 * i, (uint64_t)v34);
    long long v31 = v34[0];
    long long v32 = v34[1];
    uint64_t v33 = v35;
    sub_2347EF1C0();
    sub_2346A1DCC((uint64_t)&v31, (uint64_t)&v28);
    __swift_project_boxed_opaque_existential_1(&v28, v29);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t v15 = v30;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v28);
    v26[0] = DynamicType;
    v26[1] = v15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2687ACED0);
    sub_2347EE690();
    sub_2347EE6C0();
    swift_bridgeObjectRelease();
    __swift_project_boxed_opaque_existential_1(&v31, *((uint64_t *)&v32 + 1));
    sub_2347EE750();
    sub_2347EE6C0();
    swift_bridgeObjectRelease();
    uint64_t v16 = sub_2347EF200();
    uint64_t v17 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v18 = v16 & ~v17;
    if (((*(void *)(v8 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
    {
LABEL_27:
      sub_23470BA94((uint64_t)&v31);
      return 0;
    }
    uint64_t v19 = ~v17;
    while (1)
    {
      sub_23470BA38(*(void *)(a2 + 48) + 40 * v18, (uint64_t)&v28);
      sub_2347EF1C0();
      sub_2346A1DCC((uint64_t)&v28, (uint64_t)v26);
      __swift_project_boxed_opaque_existential_1(v26, v27);
      swift_getDynamicType();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
      sub_2347EE690();
      sub_2347EE6C0();
      swift_bridgeObjectRelease();
      __swift_project_boxed_opaque_existential_1(&v28, v29);
      sub_2347EE750();
      sub_2347EE6C0();
      swift_bridgeObjectRelease();
      uint64_t v20 = sub_2347EF200();
      sub_2347EF1C0();
      sub_2346A1DCC((uint64_t)&v31, (uint64_t)v26);
      __swift_project_boxed_opaque_existential_1(v26, v27);
      swift_getDynamicType();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
      sub_2347EE690();
      sub_2347EE6C0();
      swift_bridgeObjectRelease();
      __swift_project_boxed_opaque_existential_1(&v31, *((uint64_t *)&v32 + 1));
      sub_2347EE750();
      sub_2347EE6C0();
      swift_bridgeObjectRelease();
      uint64_t v21 = sub_2347EF200();
      sub_23470BA94((uint64_t)&v28);
      if (v20 == v21) {
        break;
      }
      unint64_t v18 = (v18 + 1) & v19;
      if (((*(void *)(v8 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
        goto LABEL_27;
      }
    }
    uint64_t result = sub_23470BA94((uint64_t)&v31);
    unint64_t v7 = v24;
    int64_t v4 = v25;
    if (v24) {
      goto LABEL_7;
    }
LABEL_9:
    int64_t v10 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v10 >= v23) {
      return 1;
    }
    unint64_t v11 = *(void *)(v22 + 8 * v10);
    int64_t v12 = v4 + 1;
    if (!v11)
    {
      int64_t v12 = v10 + 1;
      if (v10 + 1 >= v23) {
        return 1;
      }
      unint64_t v11 = *(void *)(v22 + 8 * v12);
      if (!v11)
      {
        int64_t v12 = v10 + 2;
        if (v10 + 2 >= v23) {
          return 1;
        }
        unint64_t v11 = *(void *)(v22 + 8 * v12);
        if (!v11) {
          break;
        }
      }
    }
LABEL_22:
    uint64_t v24 = (v11 - 1) & v11;
    int64_t v25 = v12;
  }
  int64_t v13 = v10 + 3;
  if (v13 >= v23) {
    return 1;
  }
  unint64_t v11 = *(void *)(v22 + 8 * v13);
  if (v11)
  {
    int64_t v12 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v12 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v12 >= v23) {
      return 1;
    }
    unint64_t v11 = *(void *)(v22 + 8 * v12);
    ++v13;
    if (v11) {
      goto LABEL_22;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_2347C8C3C(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_2347EEEC0();
    swift_bridgeObjectRelease();
  }
  type metadata accessor for HullPointUUID();
  sub_2347C9FF4((unint64_t *)&qword_2687ADF18, (void (*)(uint64_t))type metadata accessor for HullPointUUID);
  uint64_t result = sub_2347EE8E0();
  uint64_t v10 = result;
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_2347EEEC0();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v4) {
      return v10;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v4) {
      return v10;
    }
  }
  if (v4 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        uint64_t v6 = MEMORY[0x237DC6CF0](i, a1);
        sub_2347C1ED0(&v9, v6);
        swift_release();
      }
    }
    else
    {
      unint64_t v7 = (uint64_t *)(a1 + 32);
      do
      {
        uint64_t v8 = *v7++;
        swift_retain();
        sub_2347C1ED0(&v9, v8);
        swift_release();
        --v4;
      }
      while (v4);
    }
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_2347C8DB4(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_2347EEEC0();
    swift_bridgeObjectRelease();
  }
  type metadata accessor for CDTTriangle();
  sub_2347C9FF4((unint64_t *)&qword_2687ADF40, (void (*)(uint64_t))type metadata accessor for CDTTriangle);
  uint64_t result = sub_2347EE8E0();
  uint64_t v10 = result;
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_2347EEEC0();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v4) {
      return v10;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v4) {
      return v10;
    }
  }
  if (v4 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        uint64_t v6 = MEMORY[0x237DC6CF0](i, a1);
        sub_2347C22EC(&v9, v6);
        swift_release();
      }
    }
    else
    {
      unint64_t v7 = (uint64_t *)(a1 + 32);
      do
      {
        uint64_t v8 = *v7++;
        swift_retain();
        sub_2347C22EC(&v9, v8);
        swift_release();
        --v4;
      }
      while (v4);
    }
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_2347C8F2C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_2347C118C();
  uint64_t result = sub_2347EE8E0();
  uint64_t v7 = result;
  if (v2)
  {
    uint64_t v4 = a1 + 32;
    do
    {
      sub_23470BA38(v4, (uint64_t)v5);
      sub_2347C2600((uint64_t)v6, (uint64_t)v5);
      sub_23470BA94((uint64_t)v6);
      v4 += 40;
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_2347C8FB8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_2347C9FA0();
  uint64_t result = sub_2347EE8E0();
  uint64_t v7 = result;
  if (v2)
  {
    uint64_t v4 = (unsigned __int8 *)(a1 + 32);
    do
    {
      unsigned int v5 = *v4++;
      sub_2347C29C0(&v6, v5, &qword_2687AEEE0);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_2347C904C(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    uint64_t v25 = MEMORY[0x263F8EE78];
    sub_23474584C(0, v2, 0);
    uint64_t v3 = a1 + 32;
    uint64_t v4 = v25;
    do
    {
      sub_2346A1DCC(v3, (uint64_t)v20);
      uint64_t v5 = v21;
      uint64_t v6 = v22;
      uint64_t v7 = __swift_project_boxed_opaque_existential_1(v20, v21);
      double v8 = MEMORY[0x270FA5388](v7);
      uint64_t v10 = (char *)&v20[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, double))(v11 + 16))(v10, v8);
      sub_2346F83D8((uint64_t)v10, v5, v6, (uint64_t *)v23);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23474584C(0, *(void *)(v4 + 16) + 1, 1);
        uint64_t v4 = v25;
      }
      unint64_t v13 = *(void *)(v4 + 16);
      unint64_t v12 = *(void *)(v4 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_23474584C(v12 > 1, v13 + 1, 1);
        uint64_t v4 = v25;
      }
      *(void *)(v4 + 16) = v13 + 1;
      uint64_t v14 = v4 + 40 * v13;
      long long v15 = v23[0];
      long long v16 = v23[1];
      *(void *)(v14 + 64) = v24;
      *(_OWORD *)(v14 + 32) = v15;
      *(_OWORD *)(v14 + 48) = v16;
      v3 += 40;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = MEMORY[0x263F8EE78];
  }
  uint64_t v17 = sub_2347C8F2C(v4);
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t type metadata accessor for CapturedRoom.ModelProvider.Error()
{
  uint64_t result = qword_2687AEEA0;
  if (!qword_2687AEEA0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2347C9290(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2687AE940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2347C92F8()
{
  return sub_2347C9FF4(&qword_2687AEE98, (void (*)(uint64_t))type metadata accessor for CapturedRoom.ModelProvider.Error);
}

uint64_t _s13ModelProviderVwxx()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s13ModelProviderVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s13ModelProviderVwca(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *_s13ModelProviderVwta(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s13ModelProviderVwet(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s13ModelProviderVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CapturedRoom.ModelProvider()
{
  return &type metadata for CapturedRoom.ModelProvider;
}

uint64_t *_s13ModelProviderV5ErrorOwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2687AEE90);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v10 = sub_2347ED490();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t _s13ModelProviderV5ErrorOwxx(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2687AEE90);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 1, v2);
  if (!result)
  {
    uint64_t v4 = sub_2347ED490();
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
    return v5(a1, v4);
  }
  return result;
}

void *_s13ModelProviderV5ErrorOwcp(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2687AEE90);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = sub_2347ED490();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *_s13ModelProviderV5ErrorOwca(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2687AEE90);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v13 = sub_2347ED490();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 24))(a1, a2, v13);
      return a1;
    }
    sub_2346A7C30((uint64_t)a1, &qword_2687AEE90);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v11 = sub_2347ED490();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

void *_s13ModelProviderV5ErrorOwtk(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2687AEE90);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = sub_2347ED490();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *_s13ModelProviderV5ErrorOwta(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2687AEE90);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v13 = sub_2347ED490();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 40))(a1, a2, v13);
      return a1;
    }
    sub_2346A7C30((uint64_t)a1, &qword_2687AEE90);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v11 = sub_2347ED490();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t _s13ModelProviderV5ErrorOwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2347C9CD8);
}

uint64_t sub_2347C9CD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2687AEE90);
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2) {
    return v5 - 1;
  }
  else {
    return 0;
  }
}

uint64_t _s13ModelProviderV5ErrorOwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2347C9D5C);
}

uint64_t sub_2347C9D5C(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 1);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2687AEE90);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(a1, v5, a3, v6);
}

uint64_t sub_2347C9DE0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2687AEE90);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);

  return v3(a1, 1, v2);
}

uint64_t sub_2347C9E4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2687AEE90);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, 1, v4);
}

uint64_t sub_2347C9EC0()
{
  uint64_t result = sub_2347ED490();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t sub_2347C9F38(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_2347C9FA0()
{
  unint64_t result = qword_2687AEED8;
  if (!qword_2687AEED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2687AEED8);
  }
  return result;
}

uint64_t sub_2347C9FF4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2347CA03C()
{
  type metadata accessor for HitPointUtility();
  uint64_t result = swift_initStaticObject();
  qword_2687BE4E0 = result;
  return result;
}

uint64_t sub_2347CA068()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for HitPointUtility()
{
  return self;
}

int8x8_t sub_2347CA09C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, simd_float4x4 a9)
{
  char v9 = a2;
  long long v39 = *(_OWORD *)(a1 + OBJC_IVAR____TtC8RoomPlan8ScanItem_rawDimensions);
  simd_float4 v35 = *(simd_float4 *)(a1 + OBJC_IVAR____TtC8RoomPlan8ScanItem_rawTransform);
  simd_float4 v36 = *(simd_float4 *)(a1 + OBJC_IVAR____TtC8RoomPlan8ScanItem_rawTransform + 16);
  float32x4_t v38 = *(float32x4_t *)(a1 + OBJC_IVAR____TtC8RoomPlan8ScanItem_rawTransform + 32);
  float32x4_t v37 = *(float32x4_t *)(a1 + OBJC_IVAR____TtC8RoomPlan8ScanItem_rawTransform + 48);
  double v11 = sub_2347497B4(a9, v35, v36, v38, v37, a1, a2, a3, a4, a5, a6, a7, a8, 0, *(float32x2_t *)(a1 + OBJC_IVAR____TtC8RoomPlan8ScanItem_rawDimensions));
  double v12 = *(double *)&v39;
  LODWORD(v11) = 0;
  v14.i32[0] = v13 & 1;
  int8x8_t result = vand_s8(v15, vdup_lane_s8(vceq_s8(v14, *(int8x8_t *)&v11), 0));
  int v17 = *(_DWORD *)(a1 + OBJC_IVAR____TtC8RoomPlan8ScanItem_completedSides);
  float v18 = 0.0 - (float)(0.5 * *(float *)&v39);
  float v19 = vabds_f32(*(float *)result.i32, v18);
  float v20 = 3.4028e38;
  if ((v17 & 1) == 0) {
    float v19 = 3.4028e38;
  }
  float v21 = (float)(0.5 * *(float *)&v39) + 0.0;
  float v22 = vabds_f32(*(float *)result.i32, v21);
  if ((v17 & 2) == 0) {
    float v22 = 3.4028e38;
  }
  float v23 = vmuls_lane_f32(0.5, *(float32x2_t *)&v39, 1);
  float v24 = v23 + 0.0;
  float v25 = vabds_f32(*(float *)&result.i32[1], v23 + 0.0);
  if ((v17 & 8) != 0) {
    float v20 = v25;
  }
  float v26 = 0.0 - v23;
  if ((v17 & 4) != 0)
  {
    float v27 = vabds_f32(*(float *)&result.i32[1], v26);
    if (v22 >= v19) {
      float v28 = v19;
    }
    else {
      float v28 = v22;
    }
    if (v20 < v28) {
      float v28 = v20;
    }
    if (v27 >= v28) {
      float v27 = v28;
    }
    goto LABEL_23;
  }
  if (v22 < v19)
  {
    if (v20 >= v22)
    {
      float v27 = v22;
      if (v22 > 3.4028e38) {
        return result;
      }
      goto LABEL_23;
    }
    goto LABEL_20;
  }
  if (v20 < v19)
  {
LABEL_20:
    float v27 = v20;
    if (v20 > 3.4028e38) {
      return result;
    }
    goto LABEL_23;
  }
  float v27 = v19;
  if (v19 > 3.4028e38) {
    return result;
  }
LABEL_23:
  if (v27 != 3.4028e38)
  {
    if (v27 == v19)
    {
      float v29 = v18 + 0.1;
    }
    else
    {
      if (v27 != v22)
      {
        if (v27 == v20) {
          float v33 = v24 + -0.1;
        }
        else {
          float v33 = v26 + 0.1;
        }
        unint64_t v30 = __PAIR64__(LODWORD(v33), result.u32[0]);
        if ((v9 & 1) == 0)
        {
LABEL_30:
          int8x8_t v40 = result;
          unint64_t v34 = v30;
          BOOL v31 = sub_234749760(*(double *)&result, 0.0, v12);
          unint64_t v30 = v34;
          float32x2_t v32 = (float32x2_t)v40;
          if (v31) {
            return (int8x8_t)vaddq_f32(v37, vmlaq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v35, v32.f32[0]), (float32x4_t)v36, v32, 1), (float32x4_t)0, v38)).u64[0];
          }
        }
LABEL_36:
        float32x2_t v32 = (float32x2_t)v30;
        return (int8x8_t)vaddq_f32(v37, vmlaq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v35, v32.f32[0]), (float32x4_t)v36, v32, 1), (float32x4_t)0, v38)).u64[0];
      }
      float v29 = v21 + -0.1;
    }
    unint64_t v30 = __PAIR64__(result.u32[1], LODWORD(v29));
    if ((v9 & 1) == 0) {
      goto LABEL_30;
    }
    goto LABEL_36;
  }
  return result;
}

uint64_t sub_2347CA2E8(uint64_t a1, char a2, __n128 a3, __n128 a4, __n128 a5, __n128 a6)
{
  *(__n128 *)&v74[32] = a5;
  *(__n128 *)&v74[48] = a6;
  *(__n128 *)double v74 = a3;
  *(__n128 *)&v74[16] = a4;
  float32x4_t v7 = *(float32x4_t *)(a1 + OBJC_IVAR____TtC8RoomPlan8ScanItem_rawTransform);
  float32x4_t v8 = *(float32x4_t *)(a1 + OBJC_IVAR____TtC8RoomPlan8ScanItem_rawTransform + 16);
  long long v9 = *(_OWORD *)(a1 + OBJC_IVAR____TtC8RoomPlan8ScanItem_rawTransform + 32);
  long long v10 = *(_OWORD *)(a1 + OBJC_IVAR____TtC8RoomPlan8ScanItem_rawTransform + 48);
  int32x2_t v11 = (int32x2_t)vextq_s8(*(int8x16_t *)(a1 + OBJC_IVAR____TtC8RoomPlan8ScanItem_rawDimensions), *(int8x16_t *)(a1 + OBJC_IVAR____TtC8RoomPlan8ScanItem_rawDimensions), 8uLL).u64[0];
  float32x4_t v12 = *(float32x4_t *)(a1 + OBJC_IVAR____TtC8RoomPlan8ScanItem_rawDimensions);
  float32x4_t v13 = v12;
  v12.i32[0] = v11.i32[0];
  uint64_t v86 = v12.i64[0];
  *(float32x2_t *)&long long v14 = vsub_f32(0, *(float32x2_t *)v8.f32);
  float v15 = vmuls_lane_f32(0.5, *(float32x2_t *)v13.f32, 1);
  float v16 = vmuls_lane_f32(v15, v8, 2);
  float32x2_t v17 = vmul_n_f32(*(float32x2_t *)v8.f32, v15);
  v8.i32[3] = 0;
  float32x4_t v82 = v8;
  float v18 = vmuls_lane_f32(0.5 * v13.f32[0], v7, 2);
  *(float32x2_t *)&long long v19 = vsub_f32(0, *(float32x2_t *)v7.f32);
  *(float32x2_t *)v8.f32 = vmul_n_f32(*(float32x2_t *)v7.f32, 0.5 * v13.f32[0]);
  v7.i32[3] = 0;
  float32x4_t v73 = v7;
  *(float32x2_t *)&long long v20 = vadd_f32(*(float32x2_t *)&v9, 0);
  *((float *)&v20 + 2) = *((float *)&v9 + 2) + 0.0;
  HIDWORD(v20) = 0;
  *((float *)&v19 + 2) = 0.0 - v7.f32[2];
  HIDWORD(v19) = 0;
  long long v75 = v20;
  long long v77 = v19;
  *(float32x2_t *)&long long v19 = vsub_f32(*(float32x2_t *)&v10, *(float32x2_t *)v8.f32);
  *((float *)&v19 + 2) = *((float *)&v10 + 2) - v18;
  HIDWORD(v19) = 1.0;
  long long v67 = v19;
  *(float32x2_t *)&long long v21 = vadd_f32(*(float32x2_t *)&v10, *(float32x2_t *)v8.f32);
  *((float *)&v21 + 2) = *((float *)&v10 + 2) + v18;
  long long v84 = *(_OWORD *)(a1 + OBJC_IVAR____TtC8RoomPlan8ScanItem_rawDimensions);
  int32x2_t v22 = vzip1_s32(*(int32x2_t *)v13.f32, v11);
  HIDWORD(v21) = 1.0;
  long long v70 = v21;
  *((float *)&v14 + 2) = 0.0 - v8.f32[2];
  HIDWORD(v14) = 0;
  long long v80 = v14;
  *(float32x2_t *)v12.f32 = vadd_f32(*(float32x2_t *)&v10, v17);
  v12.f32[2] = *((float *)&v10 + 2) + v16;
  v12.i32[3] = 1.0;
  float32x4_t v69 = v12;
  *(float32x2_t *)v12.f32 = vsub_f32(*(float32x2_t *)&v10, v17);
  v12.f32[2] = *((float *)&v10 + 2) - v16;
  v12.i32[3] = 1.0;
  float32x4_t v71 = v12;
  v12.f32[0] = vmuls_lane_f32(0.5, v13, 2);
  float v23 = -(float)(*((float *)&v9 + 2) * v12.f32[0]);
  *(float32x2_t *)&long long v9 = vneg_f32(*(float32x2_t *)&v9);
  *(float32x2_t *)v12.f32 = vmul_n_f32(*(float32x2_t *)&v9, v12.f32[0]);
  *((float *)&v9 + 2) = -*((float *)&v9 + 2);
  HIDWORD(v9) = 0;
  long long v65 = v9;
  *(float32x2_t *)&long long v24 = vadd_f32(*(float32x2_t *)&v10, *(float32x2_t *)v12.f32);
  *((float *)&v24 + 2) = *((float *)&v10 + 2) + v23;
  HIDWORD(v24) = 1.0;
  long long v66 = v24;
  *(float32x2_t *)&long long v24 = vsub_f32(*(float32x2_t *)&v10, *(float32x2_t *)v12.f32);
  *((float *)&v24 + 2) = *((float *)&v10 + 2) - v23;
  HIDWORD(v24) = 1.0;
  long long v68 = v24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2687AEF18);
  uint64_t isUniquelyReferenced_nonNull_native = swift_allocObject();
  uint64_t v33 = isUniquelyReferenced_nonNull_native;
  uint64_t v34 = 0;
  *(_OWORD *)(isUniquelyReferenced_nonNull_native + 16) = xmmword_2347F8130;
  *(_OWORD *)(isUniquelyReferenced_nonNull_native + 32) = v65;
  *(float32x4_t *)(isUniquelyReferenced_nonNull_native + 48) = v82;
  *(float32x4_t *)(isUniquelyReferenced_nonNull_native + 64) = v73;
  *(_OWORD *)(isUniquelyReferenced_nonNull_native + 80) = v67;
  *(void *)(isUniquelyReferenced_nonNull_native + 96) = 0;
  *(void *)(isUniquelyReferenced_nonNull_native + 104) = v86;
  *(_OWORD *)(isUniquelyReferenced_nonNull_native + 112) = v75;
  *(float32x4_t *)(isUniquelyReferenced_nonNull_native + 128) = v82;
  *(_OWORD *)(isUniquelyReferenced_nonNull_native + 144) = v77;
  *(_OWORD *)(isUniquelyReferenced_nonNull_native + 160) = v70;
  *(void *)(isUniquelyReferenced_nonNull_native + 176) = 0;
  *(void *)(isUniquelyReferenced_nonNull_native + 184) = v86;
  *(float32x4_t *)(isUniquelyReferenced_nonNull_native + 192) = v73;
  *(_OWORD *)(isUniquelyReferenced_nonNull_native + 208) = v75;
  *(_OWORD *)(isUniquelyReferenced_nonNull_native + 224) = v80;
  *(float32x4_t *)(isUniquelyReferenced_nonNull_native + 240) = v69;
  *(void *)(isUniquelyReferenced_nonNull_native + 256) = 0;
  *(int32x2_t *)(isUniquelyReferenced_nonNull_native + 264) = v22;
  *(float32x4_t *)(isUniquelyReferenced_nonNull_native + 272) = v73;
  *(_OWORD *)(isUniquelyReferenced_nonNull_native + 288) = v65;
  *(float32x4_t *)(isUniquelyReferenced_nonNull_native + 304) = v82;
  *(float32x4_t *)(isUniquelyReferenced_nonNull_native + 320) = v71;
  *(void *)(isUniquelyReferenced_nonNull_native + 336) = 0;
  *(int32x2_t *)(isUniquelyReferenced_nonNull_native + 344) = v22;
  *(float32x4_t *)(isUniquelyReferenced_nonNull_native + 352) = v73;
  *(float32x4_t *)(isUniquelyReferenced_nonNull_native + 368) = v82;
  *(_OWORD *)(isUniquelyReferenced_nonNull_native + 384) = v75;
  *(_OWORD *)(isUniquelyReferenced_nonNull_native + 400) = v66;
  *(void *)(isUniquelyReferenced_nonNull_native + 416) = 0;
  *(void *)(isUniquelyReferenced_nonNull_native + 424) = v84;
  *(_OWORD *)(isUniquelyReferenced_nonNull_native + 432) = v77;
  *(float32x4_t *)(isUniquelyReferenced_nonNull_native + 448) = v82;
  *(_OWORD *)(isUniquelyReferenced_nonNull_native + 464) = v65;
  *(_OWORD *)(isUniquelyReferenced_nonNull_native + 480) = v68;
  char v35 = a2 ^ 1;
  *(void *)(isUniquelyReferenced_nonNull_native + 496) = 0;
  *(void *)(isUniquelyReferenced_nonNull_native + 504) = v84;
  simd_float4 v36 = (void *)MEMORY[0x263F8EE78];
  do
  {
    float32x2_t v76 = *(float32x2_t *)(v33 + v34 + 104);
    float32x2_t v78 = *(float32x2_t *)(v33 + v34 + 96);
    simd_float4 v81 = *(simd_float4 *)(v33 + v34 + 32);
    simd_float4 v83 = *(simd_float4 *)(v33 + v34 + 48);
    float32x4_t v85 = *(float32x4_t *)(v33 + v34 + 80);
    float32x4_t v87 = *(float32x4_t *)(v33 + v34 + 64);
    sub_2347497B4(*(simd_float4x4 *)v74, v81, v83, v87, v85, isUniquelyReferenced_nonNull_native, v26, v27, v28, v29, v30, v31, v32, v78, v76);
    if ((v26 & 1) == 0)
    {
      uint64_t v39 = isUniquelyReferenced_nonNull_native;
      float v40 = v78.f32[0] - (float)(0.5 * v76.f32[0]);
      float v41 = vabds_f32(*(float *)&isUniquelyReferenced_nonNull_native, v40);
      float v42 = v78.f32[0] + (float)(0.5 * v76.f32[0]);
      float v43 = vabds_f32(*(float *)&isUniquelyReferenced_nonNull_native, v42);
      float v44 = vmuls_lane_f32(0.5, v76, 1);
      float v45 = v78.f32[1] + v44;
      float v46 = vabds_f32(*((float *)&isUniquelyReferenced_nonNull_native + 1), v78.f32[1] + v44);
      float v47 = v78.f32[1] - v44;
      float v48 = vabds_f32(*((float *)&isUniquelyReferenced_nonNull_native + 1), v78.f32[1] - v44);
      if (v43 >= v41) {
        float v49 = v41;
      }
      else {
        float v49 = v43;
      }
      if (v46 < v49) {
        float v49 = v46;
      }
      if (v48 >= v49) {
        float v48 = v49;
      }
      uint64_t v72 = isUniquelyReferenced_nonNull_native;
      if (v48 == v41)
      {
        *(float *)&uint64_t v39 = v40 + 0.1;
      }
      else if (v48 == v43)
      {
        *(float *)&uint64_t v39 = v42 + -0.1;
      }
      else
      {
        if (v48 == v46) {
          float v50 = v45 + -0.1;
        }
        else {
          float v50 = v47 + 0.1;
        }
        *((float *)&v39 + 1) = v50;
      }
      int8x8_t v79 = (int8x8_t)v39;
      unsigned __int8 v51 = v35 & (v40 <= *(float *)&isUniquelyReferenced_nonNull_native);
      if (v42 < *(float *)&isUniquelyReferenced_nonNull_native) {
        unsigned __int8 v51 = 0;
      }
      if (v47 > *((float *)&isUniquelyReferenced_nonNull_native + 1)) {
        unsigned __int8 v51 = 0;
      }
      if ((v51 & (*((float *)&isUniquelyReferenced_nonNull_native + 1) <= v45)) != 0) {
        unsigned int v52 = -1;
      }
      else {
        unsigned int v52 = 0;
      }
      uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)sub_2346FA354(0, v36[2] + 1, 1, v36);
        simd_float4 v36 = (void *)isUniquelyReferenced_nonNull_native;
      }
      unint64_t v54 = v36[2];
      unint64_t v53 = v36[3];
      int8x8_t v55 = (int8x8_t)v72;
      __int32 v56 = v73.i32[3];
      if (v54 >= v53 >> 1)
      {
        uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)sub_2346FA354((void *)(v53 > 1), v54 + 1, 1, v36);
        int8x8_t v55 = (int8x8_t)v72;
        __int32 v56 = v73.i32[3];
        simd_float4 v36 = (void *)isUniquelyReferenced_nonNull_native;
      }
      float32x2_t v37 = (float32x2_t)vbsl_s8((int8x8_t)vdup_n_s32(v52), v55, v79);
      float32x4_t v38 = vaddq_f32(v85, vmlaq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v81, v37.f32[0]), (float32x4_t)v83, v37, 1), (float32x4_t)0, v87));
      v38.i32[3] = v56;
      v36[2] = v54 + 1;
      *(float32x4_t *)&v36[2 * v54 + 4] = v38;
      v73.i32[3] = v56;
    }
    v34 += 80;
  }
  while (v34 != 480);
  swift_bridgeObjectRelease();
  simd_float4x4 v88 = __invert_f4(*(simd_float4x4 *)v74);
  uint64_t v57 = v36[2];
  if (v57)
  {
    uint64_t v58 = 0;
    float v59 = 3.4028e38;
    do
    {
      while (1)
      {
        uint64_t v60 = v58 + 1;
        float32x4_t v61 = vaddq_f32((float32x4_t)v88.columns[3], vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v88.columns[0], COERCE_FLOAT(*(_OWORD *)&v36[2 * v58 + 4])), (float32x4_t)v88.columns[1], (float32x2_t)v36[2 * v58 + 4], 1), (float32x4_t)v88.columns[2], *(float32x4_t *)&v36[2 * v58 + 4], 2));
        float v62 = sqrtf(vaddv_f32((float32x2_t)*(_OWORD *)&vmulq_f32(v61, v61)));
        if (v62 < v59) {
          break;
        }
        ++v58;
        if (v57 == v60) {
          return swift_bridgeObjectRelease();
        }
      }
      float v59 = v62;
    }
    while (v57 - 1 != v58++);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_2347CA800(void *a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2687AEF28);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_2347EDCB0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  long long v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  float v46 = (char *)&v39 - v12;
  MEMORY[0x270FA5388](v13);
  float v45 = (char *)&v39 - v14;
  MEMORY[0x270FA5388](v15);
  float32x2_t v17 = (char *)&v39 - v16;
  sub_2347E107C(v47);
  if (v47[0]) {
    float v18 = 30.0;
  }
  else {
    float v18 = 0.0;
  }
  sub_2347E02DC(v47);
  sub_2347CC4C8();
  double v20 = v19;
  sub_2347EDE30();
  if (v21 != v18)
  {
    sub_2347EDE40();
    sub_2347EDE60();
  }
  sub_2347CC368(a1, v20);
  id v22 = objc_msgSend(a1, sel_layer);
  id v23 = objc_msgSend(v22, sel_sublayers);

  if (v23)
  {
    sub_2346A9D9C(0, &qword_2687AEF20);
    unint64_t v24 = sub_2347EE7D0();

    if (v24 >> 62) {
      goto LABEL_23;
    }
    uint64_t v25 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v25; uint64_t v25 = sub_2347EEEC0())
    {
      float v40 = v17;
      float v41 = v10;
      float v42 = v6;
      uint64_t v43 = v8;
      uint64_t v44 = v7;
      uint64_t v6 = (char *)(v24 & 0xC000000000000001);
      uint64_t v8 = 4;
      long long v10 = (char *)0x263F15000;
      while (1)
      {
        float32x2_t v17 = (char *)(v8 - 4);
        id v26 = v6 ? (id)MEMORY[0x237DC6CF0](v8 - 4, v24) : *(id *)(v24 + 8 * v8);
        uint64_t v27 = v26;
        uint64_t v7 = v8 - 3;
        if (__OFADD__(v17, 1)) {
          break;
        }
        self;
        uint64_t v28 = swift_dynamicCastObjCClass();
        if (v28)
        {
          uint64_t v29 = (void *)v28;
          swift_bridgeObjectRelease_n();
          swift_beginAccess();
          if (*(unsigned char *)(a2 + 141)) {
            uint64_t v30 = 81;
          }
          else {
            uint64_t v30 = 553;
          }
          objc_msgSend(v29, sel_setPixelFormat_, v30);

          goto LABEL_21;
        }

        ++v8;
        if (v7 == v25)
        {
          swift_bridgeObjectRelease_n();
LABEL_21:
          uint64_t v8 = v43;
          uint64_t v7 = v44;
          long long v10 = v41;
          uint64_t v6 = v42;
          float32x2_t v17 = v40;
          goto LABEL_25;
        }
      }
      __break(1u);
LABEL_23:
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease_n();
  }
LABEL_25:
  swift_beginAccess();
  sub_2347EDE20();
  swift_beginAccess();
  if (*(unsigned char *)(a2 + 143) == 1)
  {
    uint64_t v31 = (uint64_t)v45;
    sub_2347EDCA0();
    uint64_t v32 = (uint64_t (*)(BOOL *, void))sub_2347EDCC0();
    sub_234794180(v17, v31);
    uint64_t v33 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v33(v31, v7);
    v33((uint64_t)v17, v7);
    return v32(v47, 0);
  }
  else
  {
    char v35 = v46;
    sub_2347EDCA0();
    simd_float4 v36 = (uint64_t (*)(BOOL *, void))sub_2347EDCC0();
    (*(void (**)(char *))(v8 + 16))(v17);
    sub_2347CC5C8();
    sub_2347EEBE0();
    if (sub_2347EEBF0())
    {
      float32x2_t v37 = v10;
      float32x4_t v38 = *(void (**)(char *, uint64_t))(v8 + 8);
      v38(v37, v7);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
    }
    else
    {
      sub_2347EEC00();
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v6, v10, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
      float32x4_t v38 = *(void (**)(char *, uint64_t))(v8 + 8);
    }
    v38(v35, v7);
    sub_2347CC620((uint64_t)v6);
    return v36(v47, 0);
  }
}

void *sub_2347CAD80(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_beginAccess();
  int v4 = *(unsigned __int8 *)(a1 + 178);
  uint64_t v5 = (unsigned char *)(v1 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_isModelEnabled);
  swift_beginAccess();
  *uint64_t v5 = v4;
  uint64_t v6 = OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_coachingOverlayView;
  uint64_t v7 = *(void *)(v2 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_coachingOverlayView);
  if (!v7) {
    goto LABEL_52;
  }
  *(unsigned char *)(v7 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_isModelEnabled) = v4;
  int8x8_t result = *(void **)(v7 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_dollHouseARView);
  if (!result)
  {
    __break(1u);
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  objc_msgSend(result, sel_setHidden_, v4 ^ 1u);
  uint64_t v9 = *(void *)(v2 + v6);
  if (!v9) {
    goto LABEL_52;
  }
  int8x8_t result = *(void **)(v9 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_dollHouseARView);
  if (!result)
  {
LABEL_72:
    __break(1u);
    goto LABEL_73;
  }
  id v10 = objc_msgSend(result, sel_layer);
  id v11 = objc_msgSend(v10, sel_sublayers);

  if (v11)
  {
    sub_2346A9D9C(0, &qword_2687AEF20);
    unint64_t v12 = sub_2347EE7D0();

    if (v12 >> 62) {
      goto LABEL_50;
    }
    uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v13; uint64_t v13 = sub_2347EEEC0())
    {
      uint64_t v68 = v6;
      uint64_t v6 = 4;
      while (1)
      {
        id v14 = (v12 & 0xC000000000000001) != 0
            ? (id)MEMORY[0x237DC6CF0](v6 - 4, v12)
            : *(id *)(v12 + 8 * v6);
        uint64_t v15 = v14;
        uint64_t v16 = v6 - 3;
        if (__OFADD__(v6 - 4, 1)) {
          break;
        }
        self;
        uint64_t v17 = swift_dynamicCastObjCClass();
        if (v17)
        {
          float v18 = (void *)v17;
          swift_bridgeObjectRelease_n();
          swift_beginAccess();
          if (*(unsigned char *)(a1 + 141)) {
            uint64_t v19 = 81;
          }
          else {
            uint64_t v19 = 553;
          }
          objc_msgSend(v18, sel_setPixelFormat_, v19);

          goto LABEL_20;
        }

        ++v6;
        if (v16 == v13)
        {
          swift_bridgeObjectRelease_n();
LABEL_20:
          uint64_t v6 = v68;
          goto LABEL_21;
        }
      }
      __break(1u);
LABEL_50:
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease_n();
    double v20 = *(void **)(v2 + v6);
    if (!v20) {
      goto LABEL_52;
    }
  }
  else
  {
LABEL_21:
    double v20 = *(void **)(v2 + v6);
    if (!v20)
    {
LABEL_52:
      unint64_t v23 = 0;
      goto LABEL_53;
    }
  }
  swift_beginAccess();
  char v21 = *(unsigned char *)(a1 + 179);
  id v22 = v20;
  sub_2347B9B18(v21);

  unint64_t v23 = *(void *)(v2 + v6);
  if (!v23) {
    goto LABEL_53;
  }
  int8x8_t result = (void *)swift_beginAccess();
  uint64_t v24 = *(void *)(v23 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_dollHouse);
  if (!v24)
  {
LABEL_73:
    __break(1u);
    goto LABEL_74;
  }
  *(_DWORD *)(v24 + qword_2687AC010) = *(_DWORD *)(a1 + 180);
  id v25 = (id)v23;
  swift_retain();
  sub_23469F8AC();

  swift_release();
  id v26 = *(void **)(v2 + v6);
  if (!v26) {
    goto LABEL_52;
  }
  swift_beginAccess();
  float v27 = *(float *)(a1 + 184);
  id v28 = v26;
  sub_2347B9C44(v27);

  uint64_t v29 = *(void **)(v2 + v6);
  if (!v29) {
    goto LABEL_52;
  }
  swift_beginAccess();
  float v30 = *(float *)(a1 + 188);
  id v31 = v29;
  sub_2347B9C8C(v30);

  unint64_t v23 = *(void *)(v2 + v6);
  if (v23)
  {
    int8x8_t result = (void *)swift_beginAccess();
    if (!*(void *)(v23 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_ambientLight))
    {
LABEL_74:
      __break(1u);
      goto LABEL_75;
    }
    id v32 = (id)v23;
    swift_retain();
    sub_2347ED6A0();
    uint64_t v33 = (void (*)(unsigned char *, void))sub_2347EE290();
    sub_2347EDB40();
    v33(v70, 0);

    swift_release();
    unint64_t v23 = *(void *)(v2 + v6);
    if (v23)
    {
      int8x8_t result = (void *)swift_beginAccess();
      long long v34 = *(_OWORD *)(a1 + 208);
      *(_OWORD *)(v23 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_directionalLightDirection) = v34;
      if (!*(void *)(v23 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_directionalLight))
      {
LABEL_75:
        __break(1u);
        goto LABEL_76;
      }
      float v67 = *(float *)&v34;
      __sincosf_stret(vmuls_lane_f32(0.5, *(float32x2_t *)&v34, 1));
      __sincosf_stret(0.5 * v67);
      sub_2347EDA20();
      id v35 = (id)v23;
      swift_retain();
      sub_2347ED740();

      swift_release();
      simd_float4 v36 = *(char **)(v2 + v6);
      if (!v36) {
        goto LABEL_52;
      }
      uint64_t v37 = v6;
      int8x8_t result = (void *)swift_beginAccess();
      if (!*(void *)&v36[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_directionalLight])
      {
LABEL_76:
        __break(1u);
        goto LABEL_77;
      }
      float32x4_t v38 = v36;
      swift_retain();
      uint64_t v39 = (void (*)(unsigned char *, void))sub_2347EDB00();
      sub_2347EDBB0();
      v39(v70, 0);

      swift_release();
      float v40 = *(char **)(v2 + v6);
      if (!v40) {
        goto LABEL_52;
      }
      int8x8_t result = (void *)swift_beginAccess();
      if (!*(void *)&v40[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_dollHouse])
      {
LABEL_77:
        __break(1u);
        goto LABEL_78;
      }
      unint64_t v41 = *(void *)(a1 + 232);
      float v42 = v40;
      swift_retain();
      v43.n128_u64[0] = v41;
      sub_23469FEB0(v43);

      swift_release();
      uint64_t v44 = *(char **)(v2 + v6);
      if (!v44) {
        goto LABEL_52;
      }
      int8x8_t result = (void *)swift_beginAccess();
      if (!*(void *)&v44[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_directionalLight])
      {
LABEL_78:
        __break(1u);
        goto LABEL_79;
      }
      float v45 = v44;
      swift_retain();
      float v46 = (void (*)(unsigned char *, void))sub_2347EDB10();
      uint64_t v48 = v47;
      uint64_t v49 = sub_2347EDBA0();
      float32x4_t v69 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 48);
      if (!v69(v48, 1, v49)) {
        sub_2347EDB90();
      }
      v46(v70, 0);

      swift_release();
      uint64_t v6 = v37;
      float v50 = *(char **)(v2 + v37);
      if (!v50) {
        goto LABEL_52;
      }
      int8x8_t result = (void *)swift_beginAccess();
      if (!*(void *)&v50[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_dollHouse])
      {
LABEL_79:
        __break(1u);
        goto LABEL_80;
      }
      unint64_t v51 = *(void *)(a1 + 240);
      unsigned int v52 = v50;
      swift_retain();
      v53.n128_u64[0] = v51;
      sub_2346A03A0(v53);

      swift_release();
      unint64_t v54 = *(char **)(v2 + v37);
      if (!v54) {
        goto LABEL_52;
      }
      int8x8_t result = (void *)swift_beginAccess();
      if (!*(void *)&v54[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_directionalLight])
      {
LABEL_80:
        __break(1u);
        goto LABEL_81;
      }
      int8x8_t v55 = v54;
      swift_retain();
      __int32 v56 = (void (*)(unsigned char *, void))sub_2347EDB10();
      if (!v69(v57, 1, v49)) {
        sub_2347EDB80();
      }
      v56(v70, 0);

      swift_release();
      uint64_t v6 = v37;
      unint64_t v23 = *(void *)(v2 + v37);
      if (v23)
      {
        int8x8_t result = (void *)swift_beginAccess();
        uint64_t v58 = *(void *)(v23 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_dollHouse);
        if (!v58)
        {
LABEL_81:
          __break(1u);
          goto LABEL_82;
        }
        *(unsigned char *)(v58 + qword_2687AC000) = *(unsigned char *)(a1 + 177);
        id v59 = (id)v23;
        swift_retain();
        sub_23469E6F8();

        int8x8_t result = (void *)swift_release();
        uint64_t v60 = *(void *)(v2 + v37);
        if (!v60) {
          goto LABEL_52;
        }
        if (!*(void *)(v60 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_dollHouse))
        {
LABEL_82:
          __break(1u);
          return result;
        }
        swift_retain();
        unint64_t v23 = *(void *)(sub_23469DCC8() + 16);
        swift_release();
        swift_release();
      }
    }
  }
LABEL_53:
  swift_beginAccess();
  if (*(unsigned char *)(a1 + 176) == 1)
  {
    swift_beginAccess();
    unint64_t v61 = v23 & 0xFFFFFFFFFFFFFFF9 | 2;
    if ((v23 & 4) == 0) {
      unint64_t v61 = v23 | 2;
    }
    uint64_t v62 = v23 | 6;
    if ((v23 & 4) != 0) {
      uint64_t v62 = v23 | 2;
    }
    if (*(unsigned char *)(a1 + 177) == 1) {
      unint64_t v63 = v62;
    }
    else {
      unint64_t v63 = v61;
    }
  }
  else if ((v23 & 4) != 0)
  {
    unint64_t v63 = (v23 & 0xFFFFFFFFFFFFFFFDLL ^ 4) & v23;
  }
  else
  {
    unint64_t v63 = v23 & 0xFFFFFFFFFFFFFFFDLL;
  }
  int8x8_t result = (void *)swift_beginAccess();
  uint64_t v64 = *(void *)(v2 + v6);
  if (v64)
  {
    if (*(void *)(v64 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_dollHouse))
    {
      unint64_t v65 = v63 & 0xFFFFFFFFFFFFFFFELL | (*(unsigned char *)(a1 + 177) == 1);
      swift_retain();
      uint64_t v66 = sub_23469DCC8();
      *(void *)(v66 + 16) = v65;
      sub_23470C1CC((v63 & 2) != 0);
      if ((*(unsigned char *)(v66 + 16) & 1) == 0)
      {
        sub_23470F4EC();
        sub_2346B2EA8();
        swift_release();
      }
      swift_release();
      return (void *)swift_release();
    }
    goto LABEL_71;
  }
  return result;
}

uint64_t sub_2347CB750(uint64_t result)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_worldSpaceManager);
  if (v2)
  {
    uint64_t v3 = result;
    uint64_t v4 = *(void *)(*(void *)(v2 + OBJC_IVAR____TtC8RoomPlan17WorldSpaceManager_worldViewManager) + 24);
    uint64_t v5 = *(void **)(v1 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_roomCaptureARView);
    swift_retain();
    swift_retain();
    if (v5)
    {
      id v6 = v5;
      objc_msgSend(v6, sel_contentScaleFactor);
      float v8 = v7;
      *(float *)(v4 + 140) = v8;
      swift_beginAccess();
      *(float *)(v4 + 156) = *(float *)(v3 + 172) * v8;
      sub_2346B3250();
    }
    swift_beginAccess();
    unsigned __int8 v9 = *(unsigned char *)(v3 + 177);
    sub_234789508(&v9);
    swift_release();
    return swift_release();
  }
  return result;
}

void *sub_2347CB870(unsigned char *a1)
{
  uint64_t v2 = v1;
  swift_beginAccess();
  uint64_t v4 = (void *)(v1 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_captureSession);
  if (a1[166] == 1)
  {
    int8x8_t result = (void *)swift_beginAccess();
    if (!*v4)
    {
LABEL_54:
      __break(1u);
      goto LABEL_55;
    }
    swift_retain();
    uint64_t v6 = sub_23479DFA0();
    swift_release();
    char v7 = *(unsigned char *)(v6 + 17) | 3;
    goto LABEL_7;
  }
  int8x8_t result = (void *)swift_beginAccess();
  if (!*v4)
  {
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  swift_retain();
  uint64_t v6 = sub_23479DFA0();
  swift_release();
  if ((*(unsigned char *)(v6 + 17) & 3) != 0)
  {
    char v7 = *(unsigned char *)(v6 + 17) & 0xFC;
LABEL_7:
    *(unsigned char *)(v6 + 17) = v7;
  }
  swift_release();
  swift_beginAccess();
  float v8 = (void *)(v2 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_captureSession);
  if (a1[168] == 1)
  {
    int8x8_t result = (void *)swift_beginAccess();
    if (!*v8)
    {
LABEL_56:
      __break(1u);
      goto LABEL_57;
    }
    swift_retain();
    uint64_t v9 = sub_23479DFA0();
    swift_release();
    char v10 = *(unsigned char *)(v9 + 17) | 0x38;
    goto LABEL_14;
  }
  int8x8_t result = (void *)swift_beginAccess();
  if (!*v8)
  {
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  swift_retain();
  uint64_t v9 = sub_23479DFA0();
  swift_release();
  if ((*(unsigned char *)(v9 + 17) & 0x38) != 0)
  {
    char v10 = *(unsigned char *)(v9 + 17) & 0xC7;
LABEL_14:
    *(unsigned char *)(v9 + 17) = v10;
  }
  swift_release();
  swift_beginAccess();
  id v11 = (void *)(v2 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_captureSession);
  if (a1[167] == 1)
  {
    int8x8_t result = (void *)swift_beginAccess();
    if (!*v11)
    {
LABEL_58:
      __break(1u);
      goto LABEL_59;
    }
    swift_retain();
    uint64_t v12 = sub_23479DFA0();
    swift_release();
    char v13 = *(unsigned char *)(v12 + 17) | 4;
    goto LABEL_21;
  }
  int8x8_t result = (void *)swift_beginAccess();
  if (!*v11)
  {
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
  swift_retain();
  uint64_t v12 = sub_23479DFA0();
  swift_release();
  if ((*(unsigned char *)(v12 + 17) & 4) != 0)
  {
    char v13 = *(unsigned char *)(v12 + 17) & 0xFB;
LABEL_21:
    *(unsigned char *)(v12 + 17) = v13;
  }
  swift_release();
  swift_beginAccess();
  id v14 = (void *)(v2 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_captureSession);
  if (a1[170] == 1)
  {
    int8x8_t result = (void *)swift_beginAccess();
    if (!*v14)
    {
LABEL_60:
      __break(1u);
      goto LABEL_61;
    }
    swift_retain();
    uint64_t v15 = sub_23479DFA0();
    swift_release();
    char v16 = *(unsigned char *)(v15 + 17) | 2;
    goto LABEL_28;
  }
  int8x8_t result = (void *)swift_beginAccess();
  if (!*v14)
  {
LABEL_61:
    __break(1u);
    goto LABEL_62;
  }
  swift_retain();
  uint64_t v15 = sub_23479DFA0();
  swift_release();
  if ((*(unsigned char *)(v15 + 17) & 2) != 0)
  {
    char v16 = *(unsigned char *)(v15 + 17) & 0xFD;
LABEL_28:
    *(unsigned char *)(v15 + 17) = v16;
  }
  swift_release();
  swift_beginAccess();
  uint64_t v17 = (void *)(v2 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_captureSession);
  if (a1[158] == 1)
  {
    int8x8_t result = (void *)swift_beginAccess();
    if (!*v17)
    {
LABEL_62:
      __break(1u);
      goto LABEL_63;
    }
    int8x8_t result = *(void **)(*v17 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_arWorldTrackingConfiguration);
    if (!result)
    {
LABEL_63:
      __break(1u);
      goto LABEL_64;
    }
    uint64_t v18 = 24;
LABEL_36:
    objc_msgSend(result, sel_setFrameSemantics_, v18);
    uint64_t v19 = (uint64_t *)(v2 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_captureSession);
    int8x8_t result = (void *)swift_beginAccess();
    if (*v19)
    {
      swift_retain();
      uint64_t v20 = sub_23479DFA0();
      swift_release();
      swift_beginAccess();
      *(unsigned char *)(v20 + 16) = a1[159] == 1;
      swift_release();
      if (qword_2687ABEA8 != -1) {
        swift_once();
      }
      uint64_t v21 = qword_2687BE550;
      BOOL v22 = a1[159] == 2;
      *(unsigned char *)(qword_2687BE550 + 16) = v22;
      if (v22)
      {
        unint64_t v23 = &off_26E776BC0;
        if (!*v19) {
          unint64_t v23 = 0;
        }
        *(void *)(v21 + 32) = v23;
        swift_unknownObjectWeakAssign();
      }
      if (qword_2687ABE10 != -1) {
        swift_once();
      }
      uint64_t v24 = qword_2687BE180;
      swift_beginAccess();
      *(unsigned char *)(v24 + 32) = a1[162];
      if (qword_2687ABD80 != -1) {
        swift_once();
      }
      uint64_t v25 = qword_2687BDFF8;
      int8x8_t result = (void *)swift_beginAccess();
      *(unsigned char *)(v25 + 32) = a1[163];
      uint64_t v26 = *v19;
      if (*v19)
      {
        int8x8_t result = (void *)swift_beginAccess();
        *(unsigned char *)(v26 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_enableLiveDump) = a1[164];
        uint64_t v27 = *v19;
        if (*v19)
        {
          swift_beginAccess();
          char v28 = a1[165];
          int8x8_t result = (void *)swift_beginAccess();
          *(unsigned char *)(v27 + 64) = v28;
          return result;
        }
        goto LABEL_53;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  int8x8_t result = (void *)swift_beginAccess();
  if (!*v17)
  {
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
  int8x8_t result = *(void **)(*v17 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_arWorldTrackingConfiguration);
  if (result)
  {
    uint64_t v18 = 8;
    goto LABEL_36;
  }
LABEL_65:
  __break(1u);
  return result;
}

void sub_2347CBE28(float a1)
{
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_roomCaptureARView);
  if (v2)
  {
    uint64_t v4 = qword_2687ABE90;
    id v5 = v2;
    if (v4 != -1) {
      swift_once();
    }
    uint64_t v6 = (float *)off_2687AF0E8;
    swift_beginAccess();
    float v7 = v6[37];
    swift_beginAccess();
    int v8 = *((unsigned __int8 *)v6 + 152);
    sub_2347E107C(&v13);
    BOOL v9 = v13;
    sub_2347EDE30();
    if (v7 <= a1) {
      BOOL v11 = !v9;
    }
    else {
      BOOL v11 = v8 == 0;
    }
    if (v11) {
      float v12 = 0.0;
    }
    else {
      float v12 = 30.0;
    }
    if (v10 != v12)
    {
      sub_2347EDE40();
      sub_2347EDE60();
    }
  }
}

void sub_2347CBF3C(float a1)
{
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_roomCaptureARView);
  if (v2)
  {
    uint64_t v4 = qword_2687ABE90;
    id v5 = v2;
    if (v4 != -1) {
      swift_once();
    }
    uint64_t v6 = (float *)off_2687AF0E8;
    swift_beginAccess();
    float v7 = v6[36];
    swift_beginAccess();
    char v18 = *((unsigned char *)v6 + 154);
    sub_2347CC4C8();
    double v9 = v8;
    sub_2347E02DC(&v18);
    sub_2347CC4C8();
    double v11 = v10;
    objc_msgSend(v5, sel_contentScaleFactor);
    double v13 = v12;
    id v14 = objc_msgSend(self, sel_mainScreen);
    objc_msgSend(v14, sel_scale);
    double v16 = v15;

    double v17 = v13 / v16;
    if (v7 <= a1)
    {
      if (v17 != v9) {
        goto LABEL_8;
      }
    }
    else if (v17 != v11)
    {
      double v9 = v11;
LABEL_8:
      sub_2347CC368(v5, v9);
    }
  }
}

uint64_t sub_2347CC0B4()
{
  uint64_t result = sub_2347CC0D4();
  dword_2687BE4E8 = result;
  return result;
}

uint64_t sub_2347CC0D4()
{
  uint64_t v0 = sub_2347EE370();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2346A9D9C(0, &qword_2687ADF10);
  id v4 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_configurableCaptureDeviceForPrimaryCamera);
  if (!v4) {
    return 60;
  }
  id v5 = v4;
  objc_msgSend(v4, sel_activeVideoMinFrameDuration);
  unsigned int v6 = v16;
  objc_msgSend(v5, sel_activeVideoMinFrameDuration);
  unsigned int v7 = v16;
  if (v16 == v6)
  {
  }
  else
  {
    type metadata accessor for Constants();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v10 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    id v11 = objc_msgSend(v10, sel_bundleIdentifier);

    if (v11)
    {
      sub_2347EE620();
    }
    sub_2346A9D9C(0, (unint64_t *)&qword_2687AD270);
    sub_2347EEAF0();
    sub_2347EE380();
    double v12 = sub_2347EE350();
    os_log_type_t v13 = sub_2347EE960();
    if (os_log_type_enabled(v12, v13))
    {
      id v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v14 = 0;
      _os_log_impl(&dword_23468B000, v12, v13, "Varying framerate, taking max framerate as native value", v14, 2u);
      MEMORY[0x237DC8070](v14, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  if ((int)v6 <= (int)v7) {
    return v7;
  }
  else {
    return v6;
  }
}

id sub_2347CC368(void *a1, double a2)
{
  objc_msgSend(a1, sel_contentScaleFactor);
  double v6 = v5;
  id v7 = objc_msgSend(self, sel_mainScreen);
  objc_msgSend(v7, sel_scale);
  double v9 = v8;

  objc_msgSend(a1, sel_setContentScaleFactor_, v9 * a2);
  id result = objc_msgSend(a1, sel_contentScaleFactor);
  if (v11 != v6)
  {
    uint64_t v12 = *(void *)(v2 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_worldSpaceManager);
    if (v12)
    {
      uint64_t v13 = *(void *)(*(void *)(v12 + OBJC_IVAR____TtC8RoomPlan17WorldSpaceManager_worldViewManager) + 24);
      swift_retain();
      objc_msgSend(a1, sel_contentScaleFactor);
      *(float *)&double v14 = v14;
      *(_DWORD *)(v13 + 140) = LODWORD(v14);
      if (qword_2687ABE90 != -1) {
        swift_once();
      }
      uint64_t v15 = (float *)off_2687AF0E8;
      swift_beginAccess();
      *(float *)(v13 + 156) = v15[43] * *(float *)(v13 + 140);
      sub_2346B3250();
      return (id)swift_release();
    }
  }
  return result;
}

void sub_2347CC4C8()
{
  id v0 = objc_msgSend(self, sel_mainScreen);
  objc_msgSend(v0, sel_bounds);
  CGRectGetWidth(v1);
  objc_msgSend(v0, sel_bounds);
  CGRectGetHeight(v2);
  objc_msgSend(v0, sel_scale);
}

unint64_t sub_2347CC5C8()
{
  unint64_t result = qword_2687AE8F0;
  if (!qword_2687AE8F0)
  {
    sub_2347EDCB0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2687AE8F0);
  }
  return result;
}

uint64_t sub_2347CC620(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2687AEF28);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for FloorEntity()
{
  uint64_t result = qword_2687AEF30;
  if (!qword_2687AEF30) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2347CC6CC()
{
  return swift_initClassMetadata2();
}

uint64_t sub_2347CC70C()
{
  if (*(void *)(v0 + qword_2687BDFC8))
  {
    type metadata accessor for ScanEntity();
    swift_retain();
    sub_2347ED6E0();
    swift_release();
  }
  if (qword_2687ABDC8 != -1) {
    swift_once();
  }
  if (qword_2687BE090)
  {
    swift_beginAccess();
    uint64_t v1 = swift_retain();
    sub_2347CC9F0(v1, (uint64_t)sub_2347BF9DC, (void (*)(uint64_t, uint64_t))sub_2347D2F74, (void (*)(void))sub_2347D48EC, sub_2347CCD14);
    swift_endAccess();
    swift_release();
    swift_release();
  }
  uint64_t v2 = sub_2347EDFC0();
  uint64_t v3 = v2 + qword_2687BDFA8;
  uint64_t v4 = sub_2347ED5C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  __swift_destroy_boxed_opaque_existential_1(v2 + qword_2687BDFB0);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_2347CC940()
{
  return type metadata accessor for FloorEntity();
}

uint64_t sub_2347CC948(uint64_t a1)
{
  return sub_2347CC9F0(a1, (uint64_t)sub_2347BF9DC, (void (*)(uint64_t, uint64_t))sub_2347D2F74, (void (*)(void))sub_2347D48EC, sub_2347CCD14);
}

uint64_t sub_2347CC99C(uint64_t a1)
{
  return sub_2347CC9F0(a1, (uint64_t)sub_2347C01D0, (void (*)(uint64_t, uint64_t))sub_2347D3A28, (void (*)(void))sub_2347D6E04, (uint64_t (*)(uint64_t, uint64_t))sub_2347CCF88);
}

uint64_t sub_2347CC9F0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t), void (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t))
{
  double v8 = v5;
  uint64_t v10 = *v8;
  if ((*v8 & 0xC000000000000001) == 0)
  {
LABEL_8:
    double v17 = a4;
    swift_bridgeObjectRetain();
    a2 = ((uint64_t (*)(uint64_t))a2)(a1);
    char v19 = v18;
    swift_bridgeObjectRelease();
    if (v19)
    {
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v15 = *v8;
      uint64_t v23 = *v8;
      *double v8 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        v17();
        uint64_t v15 = v23;
      }
      goto LABEL_11;
    }
    return 0;
  }
  if (v10 < 0) {
    uint64_t v12 = *v8;
  }
  else {
    uint64_t v12 = v10 & 0xFFFFFFFFFFFFFF8;
  }
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v13 = sub_2347EEE70();
  swift_release();
  if (!v13)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_unknownObjectRelease();
  uint64_t v14 = sub_2347EECB0();
  uint64_t v15 = a5(v12, v14);
  swift_retain();
  a2 = ((uint64_t (*)(uint64_t))a2)(a1);
  a1 = v16;
  swift_release();
  if ((a1 & 1) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
LABEL_11:
  swift_release();
  uint64_t v21 = *(void *)(*(void *)(v15 + 56) + 8 * a2);
  a3(a2, v15);
  *double v8 = v15;
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t sub_2347CCB78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_2347BFFDC(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v19 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_2347D7C10();
      uint64_t v9 = v19;
    }
    swift_bridgeObjectRelease();
    uint64_t v10 = *(void *)(v9 + 56);
    uint64_t v11 = sub_2347ED490();
    uint64_t v18 = *(void *)(v11 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v18 + 32))(a2, v10 + *(void *)(v18 + 72) * v6, v11);
    sub_2347D417C(v6, v9);
    uint64_t *v3 = v9;
    swift_bridgeObjectRelease();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
    uint64_t v13 = a2;
    uint64_t v14 = 0;
    uint64_t v15 = v11;
  }
  else
  {
    uint64_t v16 = sub_2347ED490();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
    uint64_t v15 = v16;
    uint64_t v13 = a2;
    uint64_t v14 = 1;
  }

  return v12(v13, v14, 1, v15);
}

uint64_t sub_2347CCD14(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2687AEF40);
    uint64_t v2 = sub_2347EEEF0();
    uint64_t v18 = v2;
    sub_2347EEE50();
    uint64_t v3 = sub_2347EEE80();
    if (v3)
    {
      uint64_t v4 = v3;
      type metadata accessor for ScanEntity();
      do
      {
        swift_dynamicCast();
        type metadata accessor for ScanEntityDebugUtility();
        swift_dynamicCast();
        uint64_t v2 = v18;
        unint64_t v12 = *(void *)(v18 + 16);
        if (*(void *)(v18 + 24) <= v12)
        {
          sub_2347CD0D4(v12 + 1, 1);
          uint64_t v2 = v18;
        }
        sub_2347D8130(&qword_2687AEEB0, (void (*)(uint64_t))type metadata accessor for ScanEntity);
        uint64_t result = sub_2347EE530();
        uint64_t v6 = v2 + 64;
        uint64_t v7 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v8 = result & ~v7;
        unint64_t v9 = v8 >> 6;
        if (((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6))) != 0)
        {
          unint64_t v10 = __clz(__rbit64((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6)))) | v8 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v13 = 0;
          unint64_t v14 = (unint64_t)(63 - v7) >> 6;
          do
          {
            if (++v9 == v14 && (v13 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v15 = v9 == v14;
            if (v9 == v14) {
              unint64_t v9 = 0;
            }
            v13 |= v15;
            uint64_t v16 = *(void *)(v6 + 8 * v9);
          }
          while (v16 == -1);
          unint64_t v10 = __clz(__rbit64(~v16)) + (v9 << 6);
        }
        *(void *)(v6 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
        uint64_t v11 = 8 * v10;
        *(void *)(*(void *)(v2 + 48) + v11) = v17;
        *(void *)(*(void *)(v2 + 56) + v11) = v4;
        ++*(void *)(v2 + 16);
        uint64_t v4 = sub_2347EEE80();
      }
      while (v4);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x263F8EE80];
  }
  return v2;
}

void *sub_2347CCF88(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2687AEFC8);
    uint64_t v2 = (void *)sub_2347EEEF0();
    unint64_t v8 = v2;
    sub_2347EEE50();
    uint64_t v3 = sub_2347EEE80();
    if (v3)
    {
      uint64_t v4 = v3;
      type metadata accessor for PixelBufferFormat();
      do
      {
        swift_dynamicCast();
        type metadata accessor for CVPixelBufferPool(0);
        swift_dynamicCast();
        uint64_t v2 = v8;
        unint64_t v5 = v8[2];
        if (v8[3] <= v5)
        {
          sub_2347D116C(v5 + 1, 1);
          uint64_t v2 = v8;
        }
        sub_2347D4814(v7, v4, v2);
        uint64_t v4 = sub_2347EEE80();
      }
      while (v4);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return (void *)MEMORY[0x263F8EE80];
  }
  return v2;
}

uint64_t sub_2347CD0D4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2687AEF40);
  char v35 = a2;
  uint64_t v6 = sub_2347EEEE0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v34 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v33 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v33) {
      break;
    }
    BOOL v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v34 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v33) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v34 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v33)
        {
LABEL_33:
          swift_release();
          if ((v35 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v34 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v33) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v34 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = 8 * v20;
    uint64_t v30 = *(void *)(*(void *)(v5 + 48) + v29);
    uint64_t v31 = *(void *)(*(void *)(v5 + 56) + v29);
    if ((v35 & 1) == 0)
    {
      swift_retain();
      swift_retain();
    }
    type metadata accessor for ScanEntity();
    sub_2347D8130(&qword_2687AEEB0, (void (*)(uint64_t))type metadata accessor for ScanEntity);
    uint64_t result = sub_2347EE530();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 8 * v17;
    *(void *)(*(void *)(v7 + 48) + v18) = v30;
    *(void *)(*(void *)(v7 + 56) + v18) = v31;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  BOOL v22 = (void *)(v5 + 64);
  if ((v35 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
  if (v32 >= 64) {
    bzero(v22, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *BOOL v22 = -1 << v32;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_2347CD424(uint64_t a1, char a2)
{
  return sub_2347D17A8(a1, a2, &qword_2687AF028);
}

uint64_t sub_2347CD430(uint64_t a1, int a2)
{
  return sub_2347CD448(a1, a2, (uint64_t *)&unk_2687AF050);
}

uint64_t sub_2347CD43C(uint64_t a1, int a2)
{
  return sub_2347CD448(a1, a2, (uint64_t *)&unk_2687AF030);
}

uint64_t sub_2347CD448(uint64_t a1, int a2, uint64_t *a3)
{
  uint64_t v5 = v3;
  uint64_t v7 = sub_2347ED5C0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  unint64_t v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  int v48 = a2;
  uint64_t v12 = sub_2347EEEE0();
  uint64_t v13 = v11;
  uint64_t v14 = v12;
  if (!*(void *)(v13 + 16)) {
    goto LABEL_41;
  }
  uint64_t v15 = 1 << *(unsigned char *)(v13 + 32);
  uint64_t v16 = *(void *)(v13 + 64);
  uint64_t v44 = (void *)(v13 + 64);
  if (v15 < 64) {
    uint64_t v17 = ~(-1 << v15);
  }
  else {
    uint64_t v17 = -1;
  }
  unint64_t v18 = v17 & v16;
  float v42 = v5;
  int64_t v43 = (unint64_t)(v15 + 63) >> 6;
  float v45 = (void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  uint64_t v47 = v8;
  unint64_t v19 = (void (**)(char *, unint64_t, uint64_t))(v8 + 32);
  uint64_t v20 = v12 + 64;
  uint64_t result = swift_retain();
  int64_t v22 = 0;
  for (i = v13; ; uint64_t v13 = i)
  {
    if (v18)
    {
      unint64_t v24 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v25 = v24 | (v22 << 6);
      goto LABEL_22;
    }
    int64_t v26 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v26 >= v43) {
      break;
    }
    BOOL v27 = v44;
    unint64_t v28 = v44[v26];
    ++v22;
    if (!v28)
    {
      int64_t v22 = v26 + 1;
      if (v26 + 1 >= v43) {
        goto LABEL_34;
      }
      unint64_t v28 = v44[v22];
      if (!v28)
      {
        int64_t v29 = v26 + 2;
        if (v29 >= v43)
        {
LABEL_34:
          swift_release();
          uint64_t v5 = v42;
          if ((v48 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v28 = v44[v29];
        if (!v28)
        {
          while (1)
          {
            int64_t v22 = v29 + 1;
            if (__OFADD__(v29, 1)) {
              goto LABEL_43;
            }
            if (v22 >= v43) {
              goto LABEL_34;
            }
            unint64_t v28 = v44[v22];
            ++v29;
            if (v28) {
              goto LABEL_21;
            }
          }
        }
        int64_t v22 = v29;
      }
    }
LABEL_21:
    unint64_t v18 = (v28 - 1) & v28;
    unint64_t v25 = __clz(__rbit64(v28)) + (v22 << 6);
LABEL_22:
    uint64_t v30 = *(void *)(v47 + 72);
    unint64_t v31 = *(void *)(v13 + 48) + v30 * v25;
    if (v48)
    {
      (*v19)(v10, v31, v7);
      uint64_t v32 = *(void *)(*(void *)(v13 + 56) + 8 * v25);
    }
    else
    {
      (*v45)(v10, v31, v7);
      uint64_t v32 = *(void *)(*(void *)(v13 + 56) + 8 * v25);
      swift_retain();
    }
    sub_2347D8130(&qword_2687ACDD0, MEMORY[0x263F07508]);
    uint64_t result = sub_2347EE530();
    uint64_t v33 = -1 << *(unsigned char *)(v14 + 32);
    unint64_t v34 = result & ~v33;
    unint64_t v35 = v34 >> 6;
    if (((-1 << v34) & ~*(void *)(v20 + 8 * (v34 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1 << v34) & ~*(void *)(v20 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v36 = 0;
      unint64_t v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v38 = v35 == v37;
        if (v35 == v37) {
          unint64_t v35 = 0;
        }
        v36 |= v38;
        uint64_t v39 = *(void *)(v20 + 8 * v35);
      }
      while (v39 == -1);
      unint64_t v23 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(void *)(v20 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v19)(*(void *)(v14 + 48) + v30 * v23, v10, v7);
    *(void *)(*(void *)(v14 + 56) + 8 * v23) = v32;
    ++*(void *)(v14 + 16);
  }
  swift_release();
  uint64_t v5 = v42;
  BOOL v27 = v44;
  if ((v48 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v40 = 1 << *(unsigned char *)(v13 + 32);
  if (v40 >= 64) {
    bzero(v27, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *BOOL v27 = -1 << v40;
  }
  *(void *)(v13 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v5 = v14;
  return result;
}

uint64_t sub_2347CD870(uint64_t a1, int a2)
{
  return sub_2347CD448(a1, a2, &qword_2687AF040);
}

uint64_t sub_2347CD87C(uint64_t a1, int a2)
{
  return sub_2347CD448(a1, a2, &qword_2687AF048);
}

uint64_t sub_2347CD888(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2687AEF78);
  uint64_t v6 = sub_2347EEEE0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v33 = v2;
  uint64_t v34 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v11) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v34 + 8 * v21);
    ++v14;
    if (!v23)
    {
      int64_t v14 = v21 + 1;
      if (v21 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v34 + 8 * v14);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v33;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v34 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v14 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v34 + 8 * v14);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_31:
    uint64_t v29 = *(void *)(*(void *)(v5 + 48) + 8 * v20);
    long long v35 = *(_OWORD *)(*(void *)(v5 + 56) + 16 * v20);
    if ((a2 & 1) == 0)
    {
      swift_retain();
      id v30 = (id)v35;
      id v31 = *((id *)&v35 + 1);
    }
    sub_2347EF1C0();
    sub_2347ED590();
    uint64_t result = sub_2347EF200();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v17 == v26;
        if (v17 == v26) {
          unint64_t v17 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v12 + 8 * v17);
      }
      while (v28 == -1);
      unint64_t v18 = __clz(__rbit64(~v28)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(void *)(*(void *)(v7 + 48) + 8 * v18) = v29;
    *(_OWORD *)(*(void *)(v7 + 56) + 16 * v18) = v35;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v33;
  int64_t v22 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
  if (v32 >= 64) {
    bzero(v22, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v22 = -1 << v32;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_2347CDB98(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2687AEF80);
  uint64_t v6 = sub_2347EEEE0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v34 = v2;
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    unint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v35 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v35 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v34;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v35 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v35 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = 8 * v21;
    uint64_t v31 = *(void *)(*(void *)(v5 + 48) + v30);
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + v30);
    if ((a2 & 1) == 0) {
      swift_retain();
    }
    sub_2347EF1C0();
    sub_2347ED590();
    uint64_t result = sub_2347EF200();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = 8 * v18;
    *(void *)(*(void *)(v7 + 48) + v19) = v31;
    *(void *)(*(void *)(v7 + 56) + v19) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  unint64_t v23 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v23, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_2347CDE98(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2687AECA0);
  uint64_t result = sub_2347EEEE0();
  uint64_t v8 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v9 = 0;
    uint64_t v32 = (void *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v13 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v20 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v21 = v20 | (v9 << 6);
      }
      else
      {
        int64_t v22 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v22 >= v13) {
          goto LABEL_33;
        }
        unint64_t v23 = v32[v22];
        ++v9;
        if (!v23)
        {
          int64_t v9 = v22 + 1;
          if (v22 + 1 >= v13) {
            goto LABEL_33;
          }
          unint64_t v23 = v32[v9];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v13)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_40;
              }
              uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
              if (v31 >= 64) {
                bzero(v32, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v32 = -1 << v31;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v23 = v32[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v9 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_42;
                }
                if (v9 >= v13) {
                  goto LABEL_33;
                }
                unint64_t v23 = v32[v9];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v9 = v24;
          }
        }
LABEL_30:
        unint64_t v12 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v9 << 6);
      }
      uint64_t v29 = 8 * v21;
      *(void *)&long long v7 = *(void *)(*(void *)(v5 + 48) + v29);
      long long v33 = v7;
      uint64_t v30 = *(void *)(*(void *)(v5 + 56) + v29);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_2347EF1C0();
      sub_2347EF1F0();
      sub_2347EF1F0();
      uint64_t result = sub_2347EF200();
      uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v16 = result & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v14 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v14 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
        long long v7 = v33;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v15) >> 6;
        long long v7 = v33;
        do
        {
          if (++v17 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v27 = v17 == v26;
          if (v17 == v26) {
            unint64_t v17 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v14 + 8 * v17);
        }
        while (v28 == -1);
        unint64_t v18 = __clz(__rbit64(~v28)) + (v17 << 6);
      }
      *(void *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      uint64_t v19 = 8 * v18;
      *(void *)(*(void *)(v8 + 48) + v19) = v7;
      *(void *)(*(void *)(v8 + 56) + v19) = v30;
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  uint64_t *v3 = v8;
  return result;
}

uint64_t sub_2347CE19C(uint64_t a1, char a2)
{
  return sub_2347CF45C(a1, a2, &qword_2687AEFA8);
}

uint64_t sub_2347CE1A8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2687AEFA0);
  uint64_t result = sub_2347EEEE0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v36 = a2;
    uint64_t v35 = v3;
    int64_t v8 = 0;
    int64_t v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v33 = -1 << v10;
    uint64_t v34 = v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v13 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v17 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v18 = v17 | (v8 << 6);
      }
      else
      {
        int64_t v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v19 >= v13) {
          goto LABEL_31;
        }
        unint64_t v20 = v9[v19];
        ++v8;
        if (!v20)
        {
          int64_t v8 = v19 + 1;
          if (v19 + 1 >= v13) {
            goto LABEL_31;
          }
          unint64_t v20 = v9[v8];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v13)
            {
LABEL_31:
              if ((v36 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v35;
                goto LABEL_38;
              }
              if (v34 >= 64) {
                bzero((void *)(v5 + 64), 8 * v13);
              }
              else {
                *int64_t v9 = v33;
              }
              uint64_t v3 = v35;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v9[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v8 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_40;
                }
                if (v8 >= v13) {
                  goto LABEL_31;
                }
                unint64_t v20 = v9[v8];
                ++v21;
                if (v20) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v21;
          }
        }
LABEL_21:
        unint64_t v12 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      uint64_t v22 = *(void *)(*(void *)(v5 + 48) + 8 * v18);
      uint64_t v23 = *(void *)(v5 + 56) + 16 * v18;
      uint64_t v24 = *(void *)(v23 + 8);
      char v25 = *(unsigned char *)v23;
      uint64_t result = sub_2347EF1B0();
      uint64_t v26 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v27 = result & ~v26;
      unint64_t v28 = v27 >> 6;
      if (((-1 << v27) & ~*(void *)(v14 + 8 * (v27 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v27) & ~*(void *)(v14 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v29 = 0;
        unint64_t v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v31 = v28 == v30;
          if (v28 == v30) {
            unint64_t v28 = 0;
          }
          v29 |= v31;
          uint64_t v32 = *(void *)(v14 + 8 * v28);
        }
        while (v32 == -1);
        unint64_t v15 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(void *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(void *)(*(void *)(v7 + 48) + 8 * v15) = v22;
      uint64_t v16 = *(void *)(v7 + 56) + 16 * v15;
      *(unsigned char *)uint64_t v16 = v25;
      *(void *)(v16 + 8) = v24;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  uint64_t *v3 = v7;
  return result;
}

unint64_t sub_2347CE460(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2687AEFD0);
  uint64_t v6 = (void *)sub_2347EEEE0();
  if (*(void *)(v5 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v5 + 32);
    int64_t v8 = (void *)(v5 + 64);
    uint64_t v9 = -1;
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v11 = (unint64_t)(v7 + 63) >> 6;
    unint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v14 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v15 = v14 | (v13 << 6);
      }
      else
      {
        int64_t v16 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return result;
        }
        if (v16 >= v11) {
          goto LABEL_22;
        }
        unint64_t v17 = v8[v16];
        ++v13;
        if (!v17)
        {
          int64_t v13 = v16 + 1;
          if (v16 + 1 >= v11) {
            goto LABEL_22;
          }
          unint64_t v17 = v8[v13];
          if (!v17)
          {
            int64_t v18 = v16 + 2;
            if (v18 >= v11)
            {
LABEL_22:
              swift_release();
              if (a2)
              {
                uint64_t v22 = 1 << *(unsigned char *)(v5 + 32);
                if (v22 > 63) {
                  bzero((void *)(v5 + 64), ((unint64_t)(v22 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *int64_t v8 = -1 << v22;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v17 = v8[v18];
            if (!v17)
            {
              while (1)
              {
                int64_t v13 = v18 + 1;
                if (__OFADD__(v18, 1)) {
                  goto LABEL_29;
                }
                if (v13 >= v11) {
                  goto LABEL_22;
                }
                unint64_t v17 = v8[v13];
                ++v18;
                if (v17) {
                  goto LABEL_19;
                }
              }
            }
            int64_t v13 = v18;
          }
        }
LABEL_19:
        unint64_t v10 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v13 << 6);
      }
      uint64_t v19 = 8 * v15;
      uint64_t v20 = *(void *)(*(void *)(v5 + 48) + v19);
      double v21 = *(double *)(*(void *)(v5 + 56) + v19);
      if ((a2 & 1) == 0) {
        uint64_t v20 = swift_retain();
      }
      unint64_t result = sub_2347D4578(v20, v6, v21);
    }
  }
  unint64_t result = swift_release();
  void *v3 = v6;
  return result;
}

uint64_t sub_2347CE640(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2687AEFE0);
  uint64_t result = sub_2347EEEE0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v31 = -1 << v10;
    uint64_t v32 = v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v20 = v19 | (v8 << 6);
      }
      else
      {
        int64_t v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v33) {
          goto LABEL_33;
        }
        unint64_t v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          int64_t v8 = v21 + 1;
          if (v21 + 1 >= v33) {
            goto LABEL_33;
          }
          unint64_t v22 = v9[v8];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v33)
            {
LABEL_33:
              if (a2)
              {
                if (v32 >= 64) {
                  bzero((void *)(v5 + 64), 8 * v33);
                }
                else {
                  *uint64_t v9 = v31;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v8 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_41;
                }
                if (v8 >= v33) {
                  goto LABEL_33;
                }
                unint64_t v22 = v9[v8];
                ++v23;
                if (v22) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v23;
          }
        }
LABEL_30:
        unint64_t v12 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      uint64_t v28 = 8 * v20;
      uint64_t v29 = *(void *)(*(void *)(v5 + 48) + v28);
      uint64_t v30 = *(void *)(*(void *)(v5 + 56) + v28);
      if ((a2 & 1) == 0) {
        swift_retain();
      }
      uint64_t result = sub_2347EF1B0();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v26 = v16 == v25;
          if (v16 == v25) {
            unint64_t v16 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        unint64_t v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t v18 = 8 * v17;
      *(void *)(*(void *)(v7 + 48) + v18) = v29;
      *(void *)(*(void *)(v7 + 56) + v18) = v30;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_2347CE8F8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2687AF020);
  uint64_t result = sub_2347EEEE0();
  uint64_t v8 = result;
  if (*(void *)(v5 + 16))
  {
    char v31 = a2;
    int64_t v9 = 0;
    uint64_t v10 = (void *)(v5 + 64);
    uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
    if (v11 < 64) {
      uint64_t v12 = ~(-1 << v11);
    }
    else {
      uint64_t v12 = -1;
    }
    unint64_t v13 = v12 & *(void *)(v5 + 64);
    int64_t v14 = (unint64_t)(v11 + 63) >> 6;
    uint64_t v15 = result + 64;
    while (1)
    {
      if (v13)
      {
        unint64_t v17 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        unint64_t v18 = v17 | (v9 << 6);
      }
      else
      {
        int64_t v19 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v19 >= v14) {
          goto LABEL_31;
        }
        unint64_t v20 = v10[v19];
        ++v9;
        if (!v20)
        {
          int64_t v9 = v19 + 1;
          if (v19 + 1 >= v14) {
            goto LABEL_31;
          }
          unint64_t v20 = v10[v9];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v14)
            {
LABEL_31:
              if ((v31 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_38;
              }
              uint64_t v30 = 1 << *(unsigned char *)(v5 + 32);
              if (v30 >= 64) {
                bzero((void *)(v5 + 64), ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                void *v10 = -1 << v30;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v10[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v9 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_40;
                }
                if (v9 >= v14) {
                  goto LABEL_31;
                }
                unint64_t v20 = v10[v9];
                ++v21;
                if (v20) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v9 = v21;
          }
        }
LABEL_21:
        unint64_t v13 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v9 << 6);
      }
      *(void *)&long long v7 = *(void *)(*(void *)(v5 + 48) + 8 * v18);
      long long v32 = v7;
      int v22 = *(_DWORD *)(*(void *)(v5 + 56) + 4 * v18);
      sub_2347EF1C0();
      sub_2347EF1F0();
      sub_2347EF1F0();
      uint64_t result = sub_2347EF200();
      uint64_t v23 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v24 = result & ~v23;
      unint64_t v25 = v24 >> 6;
      if (((-1 << v24) & ~*(void *)(v15 + 8 * (v24 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v24) & ~*(void *)(v15 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v28 = v25 == v27;
          if (v25 == v27) {
            unint64_t v25 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v15 + 8 * v25);
        }
        while (v29 == -1);
        unint64_t v16 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(void *)(v15 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *((void *)&v7 + 1) = *((void *)&v32 + 1);
      *(void *)(*(void *)(v8 + 48) + 8 * v16) = v32;
      *(_DWORD *)(*(void *)(v8 + 56) + 4 * v16) = v22;
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  uint64_t *v3 = v8;
  return result;
}

uint64_t sub_2347CEBE8(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_2347ED5C0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2687AEFC0);
  int v46 = a2;
  uint64_t v10 = sub_2347EEEE0();
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v14 = *(void *)(v11 + 64);
  float v42 = (void *)(v11 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  uint64_t v40 = v3;
  int64_t v41 = (unint64_t)(v13 + 63) >> 6;
  int64_t v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v45 = v6;
  unint64_t v17 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v18 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v16)
    {
      unint64_t v22 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41) {
      break;
    }
    unint64_t v25 = v42;
    unint64_t v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v26 = v42[v20];
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v40;
          if ((v46 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            int64_t v20 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v41) {
              goto LABEL_34;
            }
            unint64_t v26 = v42[v20];
            ++v27;
            if (v26) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v27;
      }
    }
LABEL_21:
    unint64_t v16 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    uint64_t v28 = *(void *)(v45 + 72);
    unint64_t v29 = *(void *)(v11 + 48) + v28 * v23;
    if (v46)
    {
      (*v17)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
    }
    else
    {
      (*v43)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
      swift_bridgeObjectRetain();
    }
    sub_2347D8130(&qword_2687ACDD0, MEMORY[0x263F07508]);
    uint64_t result = sub_2347EE530();
    uint64_t v31 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v17)(*(void *)(v12 + 48) + v28 * v21, v8, v5);
    *(void *)(*(void *)(v12 + 56) + 8 * v21) = v30;
    ++*(void *)(v12 + 16);
  }
  swift_release();
  uint64_t v3 = v40;
  unint64_t v25 = v42;
  if ((v46 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v11 + 32);
  if (v38 >= 64) {
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v25 = -1 << v38;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v3 = v12;
  return result;
}

uint64_t sub_2347CF00C(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_2347ED5C0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2687AEF90);
  int v45 = a2;
  uint64_t v10 = sub_2347EEEE0();
  uint64_t v11 = v10;
  if (*(void *)(v9 + 16))
  {
    uint64_t v40 = v2;
    uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
    uint64_t v13 = *(void *)(v9 + 64);
    float v42 = (void *)(v9 + 64);
    if (v12 < 64) {
      uint64_t v14 = ~(-1 << v12);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v15 = v14 & v13;
    int64_t v41 = (unint64_t)(v12 + 63) >> 6;
    int64_t v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    int v46 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
    uint64_t v16 = v10 + 64;
    uint64_t result = swift_retain();
    int64_t v18 = 0;
    uint64_t v48 = v5;
    for (i = v6; ; uint64_t v6 = i)
    {
      if (v15)
      {
        unint64_t v21 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        unint64_t v22 = v21 | (v18 << 6);
      }
      else
      {
        int64_t v23 = v18 + 1;
        if (__OFADD__(v18, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v23 >= v41) {
          goto LABEL_34;
        }
        unint64_t v24 = v42[v23];
        ++v18;
        if (!v24)
        {
          int64_t v18 = v23 + 1;
          if (v23 + 1 >= v41) {
            goto LABEL_34;
          }
          unint64_t v24 = v42[v18];
          if (!v24)
          {
            int64_t v25 = v23 + 2;
            if (v25 >= v41)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v40;
              if (v45)
              {
                uint64_t v38 = 1 << *(unsigned char *)(v9 + 32);
                if (v38 >= 64) {
                  bzero(v42, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *float v42 = -1 << v38;
                }
                *(void *)(v9 + 16) = 0;
              }
              break;
            }
            unint64_t v24 = v42[v25];
            if (!v24)
            {
              while (1)
              {
                int64_t v18 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_41;
                }
                if (v18 >= v41) {
                  goto LABEL_34;
                }
                unint64_t v24 = v42[v18];
                ++v25;
                if (v24) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v18 = v25;
          }
        }
LABEL_21:
        unint64_t v15 = (v24 - 1) & v24;
        unint64_t v22 = __clz(__rbit64(v24)) + (v18 << 6);
      }
      uint64_t v26 = *(void *)(v6 + 72);
      unint64_t v27 = *(void *)(v9 + 48) + v26 * v22;
      if (v45) {
        (*v46)(v8, v27, v48);
      }
      else {
        (*v43)(v8, v27, v48);
      }
      uint64_t v28 = v9;
      uint64_t v29 = *(void *)(v9 + 56) + 32 * v22;
      char v30 = *(unsigned char *)(v29 + 16);
      long long v47 = *(_OWORD *)v29;
      sub_2347D8130(&qword_2687ACDD0, MEMORY[0x263F07508]);
      uint64_t result = sub_2347EE530();
      uint64_t v31 = -1 << *(unsigned char *)(v11 + 32);
      unint64_t v32 = result & ~v31;
      unint64_t v33 = v32 >> 6;
      if (((-1 << v32) & ~*(void *)(v16 + 8 * (v32 >> 6))) != 0)
      {
        unint64_t v19 = __clz(__rbit64((-1 << v32) & ~*(void *)(v16 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v34 = 0;
        unint64_t v35 = (unint64_t)(63 - v31) >> 6;
        do
        {
          if (++v33 == v35 && (v34 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v36 = v33 == v35;
          if (v33 == v35) {
            unint64_t v33 = 0;
          }
          v34 |= v36;
          uint64_t v37 = *(void *)(v16 + 8 * v33);
        }
        while (v37 == -1);
        unint64_t v19 = __clz(__rbit64(~v37)) + (v33 << 6);
      }
      *(void *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v46)(*(void *)(v11 + 48) + v26 * v19, v8, v48);
      uint64_t v20 = *(void *)(v11 + 56) + 32 * v19;
      *(_OWORD *)uint64_t v20 = v47;
      *(unsigned char *)(v20 + 16) = v30;
      ++*(void *)(v11 + 16);
      uint64_t v9 = v28;
    }
  }
  uint64_t result = swift_release();
  uint64_t *v3 = v11;
  return result;
}

uint64_t sub_2347CF450(uint64_t a1, char a2)
{
  return sub_2347CF45C(a1, a2, &qword_2687AEF98);
}

uint64_t sub_2347CF45C(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t result = sub_2347EEEE0();
  uint64_t v8 = result;
  if (*(void *)(v6 + 16))
  {
    int64_t v9 = 0;
    uint64_t v10 = (uint64_t *)(v6 + 64);
    uint64_t v11 = 1 << *(unsigned char *)(v6 + 32);
    uint64_t v32 = -1 << v11;
    uint64_t v33 = v11;
    if (v11 < 64) {
      uint64_t v12 = ~(-1 << v11);
    }
    else {
      uint64_t v12 = -1;
    }
    unint64_t v13 = v12 & *(void *)(v6 + 64);
    int64_t v34 = (unint64_t)(v11 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v13)
      {
        unint64_t v20 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        unint64_t v21 = v20 | (v9 << 6);
      }
      else
      {
        int64_t v22 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v22 >= v34) {
          goto LABEL_33;
        }
        unint64_t v23 = v10[v22];
        ++v9;
        if (!v23)
        {
          int64_t v9 = v22 + 1;
          if (v22 + 1 >= v34) {
            goto LABEL_33;
          }
          unint64_t v23 = v10[v9];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v34)
            {
LABEL_33:
              if (a2)
              {
                if (v33 >= 64) {
                  bzero((void *)(v6 + 64), 8 * v34);
                }
                else {
                  uint64_t *v10 = v32;
                }
                *(void *)(v6 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v10[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v9 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_41;
                }
                if (v9 >= v34) {
                  goto LABEL_33;
                }
                unint64_t v23 = v10[v9];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v9 = v24;
          }
        }
LABEL_30:
        unint64_t v13 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v9 << 6);
      }
      uint64_t v29 = 8 * v21;
      uint64_t v30 = *(void *)(*(void *)(v6 + 48) + v29);
      uint64_t v31 = *(void *)(*(void *)(v6 + 56) + v29);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      uint64_t result = sub_2347EF1B0();
      uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v16 = result & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v14 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v14 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v27 = v17 == v26;
          if (v17 == v26) {
            unint64_t v17 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v14 + 8 * v17);
        }
        while (v28 == -1);
        unint64_t v18 = __clz(__rbit64(~v28)) + (v17 << 6);
      }
      *(void *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      uint64_t v19 = 8 * v18;
      *(void *)(*(void *)(v8 + 48) + v19) = v30;
      *(void *)(*(void *)(v8 + 56) + v19) = v31;
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_2347CF710(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2687AEC38);
  char v38 = a2;
  uint64_t result = sub_2347EEEE0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    BOOL v36 = (void *)(v5 + 64);
    uint64_t v37 = v5;
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v35 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v36;
        if (v20 >= v35) {
          goto LABEL_33;
        }
        unint64_t v21 = v36[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v35) {
            goto LABEL_33;
          }
          unint64_t v21 = v36[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v35)
            {
LABEL_33:
              if ((v38 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_40;
              }
              uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
              if (v34 >= 64) {
                bzero(v36, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *BOOL v36 = -1 << v34;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v21 = v36[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v35) {
                  goto LABEL_33;
                }
                unint64_t v21 = v36[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v22;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      char v27 = *(unsigned char *)(*(void *)(v5 + 48) + v19);
      uint64_t v28 = *(void *)(v5 + 56) + 40 * v19;
      uint64_t v29 = *(void *)v28;
      char v30 = *(unsigned char *)(v28 + 8);
      uint64_t v31 = *(void *)(v28 + 16);
      uint64_t v32 = *(void *)(v28 + 24);
      int v33 = *(_DWORD *)(v28 + 32);
      if ((v38 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_2347EF1C0();
      sub_2347EF1D0();
      uint64_t result = sub_2347EF200();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v25 = v15 == v24;
          if (v15 == v24) {
            unint64_t v15 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        unint64_t v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(unsigned char *)(*(void *)(v7 + 48) + v16) = v27;
      uint64_t v17 = *(void *)(v7 + 56) + 40 * v16;
      *(void *)uint64_t v17 = v29;
      *(unsigned char *)(v17 + 8) = v30;
      *(void *)(v17 + 16) = v31;
      *(void *)(v17 + 24) = v32;
      *(_DWORD *)(v17 + 32) = v33;
      ++*(void *)(v7 + 16);
      uint64_t v5 = v37;
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_2347CFA38(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2687AF068);
  uint64_t result = sub_2347EEEE0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    char v30 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v29 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v18 = v17 | (v8 << 6);
      }
      else
      {
        int64_t v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v19 >= v29) {
          goto LABEL_33;
        }
        unint64_t v20 = v30[v19];
        ++v8;
        if (!v20)
        {
          int64_t v8 = v19 + 1;
          if (v19 + 1 >= v29) {
            goto LABEL_33;
          }
          unint64_t v20 = v30[v8];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v29)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_40;
              }
              uint64_t v28 = 1 << *(unsigned char *)(v5 + 32);
              if (v28 >= 64) {
                bzero(v30, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *char v30 = -1 << v28;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v30[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v8 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v29) {
                  goto LABEL_33;
                }
                unint64_t v20 = v30[v8];
                ++v21;
                if (v20) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v21;
          }
        }
LABEL_30:
        unint64_t v11 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      char v26 = *(unsigned char *)(*(void *)(v5 + 48) + v18);
      uint64_t v27 = *(void *)(*(void *)(v5 + 56) + 8 * v18);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_2347EF1C0();
      sub_2347EF1D0();
      uint64_t result = sub_2347EF200();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v24 = v15 == v23;
          if (v15 == v23) {
            unint64_t v15 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v12 + 8 * v15);
        }
        while (v25 == -1);
        unint64_t v16 = __clz(__rbit64(~v25)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(unsigned char *)(*(void *)(v7 + 48) + v16) = v26;
      *(void *)(*(void *)(v7 + 56) + 8 * v16) = v27;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_2347CFD0C(uint64_t a1, int a2)
{
  return sub_2347CD448(a1, a2, &qword_2687AF060);
}

uint64_t sub_2347CFD18(uint64_t a1, int a2)
{
  return sub_2347CD448(a1, a2, &qword_2687AEC48);
}

uint64_t sub_2347CFD24(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2687AEC68);
  uint64_t v6 = sub_2347EEEE0();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v34 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v13 << 6);
      }
      else
      {
        int64_t v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33) {
          goto LABEL_34;
        }
        unint64_t v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          int64_t v13 = v18 + 1;
          if (v18 + 1 >= v33) {
            goto LABEL_34;
          }
          unint64_t v19 = v34[v13];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v2;
              if (a2)
              {
                uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
                if (v32 >= 64) {
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v34 = -1 << v32;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v13 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_34;
                }
                unint64_t v19 = v34[v13];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v13 = v20;
          }
        }
LABEL_21:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      int64_t v21 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
      uint64_t v23 = *v21;
      uint64_t v22 = v21[1];
      BOOL v24 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v17);
      if (a2)
      {
        sub_2346C3738(v24, v35);
      }
      else
      {
        sub_234776E60((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_2347EF1C0();
      sub_2347EE6C0();
      uint64_t result = sub_2347EF200();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      unint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
      *unint64_t v15 = v23;
      v15[1] = v22;
      uint64_t result = (uint64_t)sub_2346C3738(v35, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_2347D0024(uint64_t a1, int a2)
{
  return sub_2347D1F08(a1, a2, (uint64_t (*)(void))type metadata accessor for ScanItemStrut, &qword_2687AEFF8, (uint64_t (*)(void))type metadata accessor for ScanItemStrut);
}

uint64_t sub_2347D0058(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2687AF018);
  uint64_t result = sub_2347EEEE0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v30 = a2;
    int64_t v8 = 0;
    uint64_t v31 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v12 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v16 = v15 | (v8 << 6);
      }
      else
      {
        int64_t v17 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v17 >= v12) {
          goto LABEL_31;
        }
        unint64_t v18 = v31[v17];
        ++v8;
        if (!v18)
        {
          int64_t v8 = v17 + 1;
          if (v17 + 1 >= v12) {
            goto LABEL_31;
          }
          unint64_t v18 = v31[v8];
          if (!v18)
          {
            int64_t v19 = v17 + 2;
            if (v19 >= v12)
            {
LABEL_31:
              if ((v30 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_38;
              }
              uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
              if (v29 >= 64) {
                bzero(v31, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v31 = -1 << v29;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v18 = v31[v19];
            if (!v18)
            {
              while (1)
              {
                int64_t v8 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_40;
                }
                if (v8 >= v12) {
                  goto LABEL_31;
                }
                unint64_t v18 = v31[v8];
                ++v19;
                if (v18) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v19;
          }
        }
LABEL_21:
        unint64_t v11 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v8 << 6);
      }
      char v20 = *(unsigned char *)(*(void *)(v5 + 48) + v16);
      uint64_t v21 = *(void *)(*(void *)(v5 + 56) + 8 * v16);
      sub_2347EF1C0();
      sub_2347EF1D0();
      uint64_t result = sub_2347EF200();
      uint64_t v22 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v13 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v23) & ~*(void *)(v13 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v13 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v14 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(unsigned char *)(*(void *)(v7 + 48) + v14) = v20;
      *(void *)(*(void *)(v7 + 56) + 8 * v14) = v21;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_2347D0320(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_2347ED5C0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  int64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2687AF010);
  int v47 = a2;
  uint64_t v10 = sub_2347EEEE0();
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16)) {
    goto LABEL_41;
  }
  uint64_t v49 = v8;
  uint64_t v50 = v5;
  uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v13 = *(void *)(v9 + 64);
  int64_t v43 = (void *)(v9 + 64);
  if (v12 < 64) {
    uint64_t v14 = ~(-1 << v12);
  }
  else {
    uint64_t v14 = -1;
  }
  unint64_t v15 = v14 & v13;
  int64_t v41 = v2;
  int64_t v42 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v44 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v48 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v16 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v18 = 0;
  uint64_t v45 = v9;
  uint64_t v46 = v6;
  while (1)
  {
    if (v15)
    {
      unint64_t v21 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v22 = v21 | (v18 << 6);
      goto LABEL_22;
    }
    int64_t v23 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v23 >= v42) {
      break;
    }
    unint64_t v24 = v43;
    unint64_t v25 = v43[v23];
    ++v18;
    if (!v25)
    {
      int64_t v18 = v23 + 1;
      if (v23 + 1 >= v42) {
        goto LABEL_34;
      }
      unint64_t v25 = v43[v18];
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v42)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v41;
          if ((v47 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v25 = v43[v26];
        if (!v25)
        {
          while (1)
          {
            int64_t v18 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_43;
            }
            if (v18 >= v42) {
              goto LABEL_34;
            }
            unint64_t v25 = v43[v18];
            ++v26;
            if (v25) {
              goto LABEL_21;
            }
          }
        }
        int64_t v18 = v26;
      }
    }
LABEL_21:
    unint64_t v15 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v18 << 6);
LABEL_22:
    uint64_t v27 = *(void *)(v6 + 72);
    unint64_t v28 = *(void *)(v9 + 48) + v27 * v22;
    if (v47)
    {
      (*v48)(v49, v28, v50);
      uint64_t v29 = (uint64_t *)(*(void *)(v9 + 56) + 16 * v22);
      uint64_t v31 = *v29;
      uint64_t v30 = v29[1];
    }
    else
    {
      (*v44)(v49, v28, v50);
      uint64_t v32 = (uint64_t *)(*(void *)(v9 + 56) + 16 * v22);
      uint64_t v31 = *v32;
      uint64_t v30 = v32[1];
      swift_bridgeObjectRetain();
    }
    sub_2347D8130(&qword_2687ACDD0, MEMORY[0x263F07508]);
    uint64_t result = sub_2347EE530();
    uint64_t v33 = -1 << *(unsigned char *)(v11 + 32);
    unint64_t v34 = result & ~v33;
    unint64_t v35 = v34 >> 6;
    if (((-1 << v34) & ~*(void *)(v16 + 8 * (v34 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v34) & ~*(void *)(v16 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
      uint64_t v6 = v46;
    }
    else
    {
      char v36 = 0;
      unint64_t v37 = (unint64_t)(63 - v33) >> 6;
      uint64_t v6 = v46;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v38 = v35 == v37;
        if (v35 == v37) {
          unint64_t v35 = 0;
        }
        v36 |= v38;
        uint64_t v39 = *(void *)(v16 + 8 * v35);
      }
      while (v39 == -1);
      unint64_t v19 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(void *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v48)(*(void *)(v11 + 48) + v27 * v19, v49, v50);
    char v20 = (void *)(*(void *)(v11 + 56) + 16 * v19);
    *char v20 = v31;
    v20[1] = v30;
    ++*(void *)(v11 + 16);
    uint64_t v9 = v45;
  }
  swift_release();
  uint64_t v3 = v41;
  unint64_t v24 = v43;
  if ((v47 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v40 = 1 << *(unsigned char *)(v9 + 32);
  if (v40 >= 64) {
    bzero(v24, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v24 = -1 << v40;
  }
  *(void *)(v9 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v3 = v11;
  return result;
}

unint64_t sub_2347D0760(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2687AF000);
  uint64_t v6 = (void *)sub_2347EEEE0();
  if (*(void *)(v5 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v5 + 32);
    int64_t v8 = (void *)(v5 + 64);
    uint64_t v9 = -1;
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v11 = (unint64_t)(v7 + 63) >> 6;
    unint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v14 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v15 = v14 | (v13 << 6);
      }
      else
      {
        int64_t v16 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return result;
        }
        if (v16 >= v11) {
          goto LABEL_22;
        }
        unint64_t v17 = v8[v16];
        ++v13;
        if (!v17)
        {
          int64_t v13 = v16 + 1;
          if (v16 + 1 >= v11) {
            goto LABEL_22;
          }
          unint64_t v17 = v8[v13];
          if (!v17)
          {
            int64_t v18 = v16 + 2;
            if (v18 >= v11)
            {
LABEL_22:
              swift_release();
              if (a2)
              {
                uint64_t v21 = 1 << *(unsigned char *)(v5 + 32);
                if (v21 > 63) {
                  bzero((void *)(v5 + 64), ((unint64_t)(v21 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *int64_t v8 = -1 << v21;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v17 = v8[v18];
            if (!v17)
            {
              while (1)
              {
                int64_t v13 = v18 + 1;
                if (__OFADD__(v18, 1)) {
                  goto LABEL_29;
                }
                if (v13 >= v11) {
                  goto LABEL_22;
                }
                unint64_t v17 = v8[v13];
                ++v18;
                if (v17) {
                  goto LABEL_19;
                }
              }
            }
            int64_t v13 = v18;
          }
        }
LABEL_19:
        unint64_t v10 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v13 << 6);
      }
      char v19 = *(unsigned char *)(*(void *)(v5 + 48) + v15);
      uint64_t v20 = *(void *)(*(void *)(v5 + 56) + 8 * v15);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      unint64_t result = sub_2347D4690(v19, v20, v6);
    }
  }
  unint64_t result = swift_release();
  void *v3 = v6;
  return result;
}

uint64_t sub_2347D0944(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_2347ED490();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  int64_t v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2687AEFE8);
  int v46 = a2;
  uint64_t v10 = sub_2347EEEE0();
  uint64_t v11 = v10;
  if (*(void *)(v9 + 16))
  {
    uint64_t v50 = v5;
    int64_t v42 = v2;
    uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
    uint64_t v13 = *(void *)(v9 + 64);
    uint64_t v44 = (void *)(v9 + 64);
    if (v12 < 64) {
      uint64_t v14 = ~(-1 << v12);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v15 = v14 & v13;
    int64_t v43 = (unint64_t)(v12 + 63) >> 6;
    uint64_t v45 = (void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    int v47 = (void (**)(char *, uint64_t, uint64_t))(v6 + 32);
    uint64_t v16 = v10 + 64;
    uint64_t result = swift_retain();
    int64_t v18 = 0;
    while (1)
    {
      if (v15)
      {
        unint64_t v22 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        unint64_t v23 = v22 | (v18 << 6);
      }
      else
      {
        int64_t v24 = v18 + 1;
        if (__OFADD__(v18, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v24 >= v43) {
          goto LABEL_34;
        }
        unint64_t v25 = v44[v24];
        ++v18;
        if (!v25)
        {
          int64_t v18 = v24 + 1;
          if (v24 + 1 >= v43) {
            goto LABEL_34;
          }
          unint64_t v25 = v44[v18];
          if (!v25)
          {
            int64_t v26 = v24 + 2;
            if (v26 >= v43)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v42;
              if (v46)
              {
                uint64_t v41 = 1 << *(unsigned char *)(v9 + 32);
                if (v41 >= 64) {
                  bzero(v44, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v44 = -1 << v41;
                }
                *(void *)(v9 + 16) = 0;
              }
              break;
            }
            unint64_t v25 = v44[v26];
            if (!v25)
            {
              while (1)
              {
                int64_t v18 = v26 + 1;
                if (__OFADD__(v26, 1)) {
                  goto LABEL_41;
                }
                if (v18 >= v43) {
                  goto LABEL_34;
                }
                unint64_t v25 = v44[v18];
                ++v26;
                if (v25) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v18 = v26;
          }
        }
LABEL_21:
        unint64_t v15 = (v25 - 1) & v25;
        unint64_t v23 = __clz(__rbit64(v25)) + (v18 << 6);
      }
      uint64_t v27 = v9;
      uint64_t v28 = *(void *)(v9 + 48);
      uint64_t v29 = v6;
      uint64_t v30 = *(void *)(v6 + 72);
      uint64_t v31 = v28 + v30 * v23;
      if (v46) {
        (*v47)(v8, v31, v50);
      }
      else {
        (*v45)(v8, v31, v50);
      }
      uint64_t v32 = (long long *)(*(void *)(v27 + 56) + 32 * v23);
      long long v33 = v32[1];
      long long v48 = *v32;
      long long v49 = v33;
      sub_2347D8130(&qword_2687AEFF0, MEMORY[0x263F06EA8]);
      uint64_t result = sub_2347EE530();
      uint64_t v34 = -1 << *(unsigned char *)(v11 + 32);
      unint64_t v35 = result & ~v34;
      unint64_t v36 = v35 >> 6;
      if (((-1 << v35) & ~*(void *)(v16 + 8 * (v35 >> 6))) != 0)
      {
        unint64_t v19 = __clz(__rbit64((-1 << v35) & ~*(void *)(v16 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v37 = 0;
        unint64_t v38 = (unint64_t)(63 - v34) >> 6;
        do
        {
          if (++v36 == v38 && (v37 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v39 = v36 == v38;
          if (v36 == v38) {
            unint64_t v36 = 0;
          }
          v37 |= v39;
          uint64_t v40 = *(void *)(v16 + 8 * v36);
        }
        while (v40 == -1);
        unint64_t v19 = __clz(__rbit64(~v40)) + (v36 << 6);
      }
      *(void *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v47)(*(void *)(v11 + 48) + v30 * v19, v8, v50);
      uint64_t v20 = (_OWORD *)(*(void *)(v11 + 56) + 32 * v19);
      long long v21 = v49;
      *uint64_t v20 = v48;
      v20[1] = v21;
      ++*(void *)(v11 + 16);
      uint64_t v6 = v29;
      uint64_t v9 = v27;
    }
  }
  uint64_t result = swift_release();
  uint64_t *v3 = v11;
  return result;
}

uint64_t sub_2347D0D84(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v49 = sub_2347ED5C0();
  uint64_t v5 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  long long v48 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2687ACD50);
  int v47 = a2;
  uint64_t v8 = sub_2347EEEE0();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16)) {
    goto LABEL_41;
  }
  uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v11 = *(void *)(v7 + 64);
  uint64_t v44 = (void *)(v7 + 64);
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & v11;
  int64_t v42 = v2;
  int64_t v43 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v45 = (void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v46 = v5;
  uint64_t v14 = (void (**)(char *, uint64_t, uint64_t))(v5 + 32);
  uint64_t v15 = v8 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v13)
    {
      unint64_t v20 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v21 = v20 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v43) {
      break;
    }
    unint64_t v23 = v44;
    unint64_t v24 = v44[v22];
    ++v17;
    if (!v24)
    {
      int64_t v17 = v22 + 1;
      if (v22 + 1 >= v43) {
        goto LABEL_34;
      }
      unint64_t v24 = v44[v17];
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v43)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v42;
          if ((v47 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v24 = v44[v25];
        if (!v24)
        {
          while (1)
          {
            int64_t v17 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v43) {
              goto LABEL_34;
            }
            unint64_t v24 = v44[v17];
            ++v25;
            if (v24) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v25;
      }
    }
LABEL_21:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_22:
    uint64_t v26 = *(void *)(v7 + 56);
    uint64_t v27 = v7;
    uint64_t v28 = (uint64_t *)(*(void *)(v7 + 48) + 16 * v21);
    uint64_t v29 = *v28;
    uint64_t v30 = v28[1];
    uint64_t v31 = *(void *)(v46 + 72);
    uint64_t v32 = v26 + v31 * v21;
    if (v47)
    {
      (*v14)(v48, v32, v49);
    }
    else
    {
      (*v45)(v48, v32, v49);
      swift_bridgeObjectRetain();
    }
    sub_2347EF1C0();
    sub_2347EE6C0();
    uint64_t result = sub_2347EF200();
    uint64_t v33 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v34 = result & ~v33;
    unint64_t v35 = v34 >> 6;
    if (((-1 << v34) & ~*(void *)(v15 + 8 * (v34 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v34) & ~*(void *)(v15 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v36 = 0;
      unint64_t v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v38 = v35 == v37;
        if (v35 == v37) {
          unint64_t v35 = 0;
        }
        v36 |= v38;
        uint64_t v39 = *(void *)(v15 + 8 * v35);
      }
      while (v39 == -1);
      unint64_t v18 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    unint64_t v19 = (void *)(*(void *)(v9 + 48) + 16 * v18);
    *unint64_t v19 = v29;
    v19[1] = v30;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v14)(*(void *)(v9 + 56) + v31 * v18, v48, v49);
    ++*(void *)(v9 + 16);
    uint64_t v7 = v27;
  }
  swift_release();
  uint64_t v3 = v42;
  unint64_t v23 = v44;
  if ((v47 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v40 = 1 << *(unsigned char *)(v7 + 32);
  if (v40 >= 64) {
    bzero(v23, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v40;
  }
  *(void *)(v7 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v3 = v9;
  return result;
}

uint64_t sub_2347D116C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2687AEFC8);
  uint64_t v6 = sub_2347EEEE0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  unint64_t v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v34;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = 8 * v20;
    uint64_t v30 = *(void *)(*(void *)(v5 + 48) + v29);
    uint64_t v31 = *(void **)(*(void *)(v5 + 56) + v29);
    if ((a2 & 1) == 0)
    {
      swift_retain();
      id v32 = v31;
    }
    sub_2347EF1C0();
    sub_2347EE920();
    sub_2347EF1D0();
    sub_2347EE920();
    sub_2347EF1D0();
    sub_2347EF210();
    sub_2347EF1D0();
    uint64_t result = sub_2347EF200();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 8 * v17;
    *(void *)(*(void *)(v7 + 48) + v18) = v30;
    *(void *)(*(void *)(v7 + 56) + v18) = v31;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  int64_t v22 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_2347D148C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2687AEFB0);
  char v38 = a2;
  uint64_t v6 = sub_2347EEEE0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v35 = v2;
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v37 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v35;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v36) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v37 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    id v32 = *(void **)(*(void *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v33 = v32;
    }
    sub_2347EF1C0();
    sub_2347EE6C0();
    uint64_t result = sub_2347EF200();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *uint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  int64_t v22 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v22 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_2347D179C(uint64_t a1, char a2)
{
  return sub_2347D17A8(a1, a2, &qword_2687AEC60);
}

uint64_t sub_2347D17A8(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  char v38 = a2;
  uint64_t v7 = sub_2347EEEE0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v37 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  int64_t v35 = v3;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v36) {
      break;
    }
    unint64_t v23 = (void *)(v6 + 64);
    unint64_t v24 = *(void *)(v37 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v37 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v36)
        {
LABEL_33:
          swift_release();
          uint64_t v4 = v35;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v36) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v37 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v11 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *(void *)(*(void *)(v6 + 56) + 8 * v21);
    if ((v38 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_2347EF1C0();
    sub_2347EE6C0();
    uint64_t result = sub_2347EF200();
    uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    unint64_t v19 = (void *)(*(void *)(v8 + 48) + 16 * v18);
    *unint64_t v19 = v32;
    v19[1] = v31;
    *(void *)(*(void *)(v8 + 56) + 8 * v18) = v33;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  uint64_t v4 = v35;
  unint64_t v23 = (void *)(v6 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v6 + 32);
  if (v34 >= 64) {
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v34;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_2347D1AB0(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_2347ED5C0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2687AEF70);
  int v42 = a2;
  uint64_t v10 = sub_2347EEEE0();
  uint64_t v11 = v10;
  if (*(void *)(v9 + 16))
  {
    uint64_t v37 = v2;
    uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
    uint64_t v13 = *(void *)(v9 + 64);
    uint64_t v39 = (void *)(v9 + 64);
    if (v12 < 64) {
      uint64_t v14 = ~(-1 << v12);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v15 = v14 & v13;
    int64_t v38 = (unint64_t)(v12 + 63) >> 6;
    uint64_t v40 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    int64_t v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
    uint64_t v16 = v10 + 64;
    uint64_t result = swift_retain();
    int64_t v18 = 0;
    uint64_t v44 = v5;
    for (i = v6; ; uint64_t v6 = i)
    {
      if (v15)
      {
        unint64_t v20 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        unint64_t v21 = v20 | (v18 << 6);
      }
      else
      {
        int64_t v22 = v18 + 1;
        if (__OFADD__(v18, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v22 >= v38) {
          goto LABEL_34;
        }
        unint64_t v23 = v39[v22];
        ++v18;
        if (!v23)
        {
          int64_t v18 = v22 + 1;
          if (v22 + 1 >= v38) {
            goto LABEL_34;
          }
          unint64_t v23 = v39[v18];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v38)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v37;
              if (v42)
              {
                uint64_t v36 = 1 << *(unsigned char *)(v9 + 32);
                if (v36 >= 64) {
                  bzero(v39, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v39 = -1 << v36;
                }
                *(void *)(v9 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v39[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v18 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_41;
                }
                if (v18 >= v38) {
                  goto LABEL_34;
                }
                unint64_t v23 = v39[v18];
                ++v24;
                if (v23) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v18 = v24;
          }
        }
LABEL_21:
        unint64_t v15 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v18 << 6);
      }
      uint64_t v25 = *(void *)(v6 + 72);
      unint64_t v26 = *(void *)(v9 + 48) + v25 * v21;
      if (v42) {
        (*v43)(v8, v26, v44);
      }
      else {
        (*v40)(v8, v26, v44);
      }
      uint64_t v27 = v9;
      char v28 = *(unsigned char *)(*(void *)(v9 + 56) + v21);
      sub_2347D8130(&qword_2687ACDD0, MEMORY[0x263F07508]);
      uint64_t result = sub_2347EE530();
      uint64_t v29 = -1 << *(unsigned char *)(v11 + 32);
      unint64_t v30 = result & ~v29;
      unint64_t v31 = v30 >> 6;
      if (((-1 << v30) & ~*(void *)(v16 + 8 * (v30 >> 6))) != 0)
      {
        unint64_t v19 = __clz(__rbit64((-1 << v30) & ~*(void *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v32 = 0;
        unint64_t v33 = (unint64_t)(63 - v29) >> 6;
        do
        {
          if (++v31 == v33 && (v32 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v34 = v31 == v33;
          if (v31 == v33) {
            unint64_t v31 = 0;
          }
          v32 |= v34;
          uint64_t v35 = *(void *)(v16 + 8 * v31);
        }
        while (v35 == -1);
        unint64_t v19 = __clz(__rbit64(~v35)) + (v31 << 6);
      }
      *(void *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v43)(*(void *)(v11 + 48) + v25 * v19, v8, v44);
      *(unsigned char *)(*(void *)(v11 + 56) + v19) = v28;
      ++*(void *)(v11 + 16);
      uint64_t v9 = v27;
    }
  }
  uint64_t result = swift_release();
  uint64_t *v3 = v11;
  return result;
}

uint64_t sub_2347D1ED4(uint64_t a1, int a2)
{
  return sub_2347D1F08(a1, a2, type metadata accessor for CapturedRoom.Surface, (uint64_t *)&unk_2687AEF60, type metadata accessor for CapturedRoom.Surface);
}

uint64_t sub_2347D1F08(uint64_t a1, int a2, uint64_t (*a3)(void), uint64_t *a4, uint64_t (*a5)(void))
{
  uint64_t v58 = a5;
  uint64_t v7 = v5;
  uint64_t v9 = a3(0);
  uint64_t v52 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v57 = (uint64_t)&v47 - v10;
  uint64_t v11 = sub_2347ED5C0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  unint64_t v54 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *v5;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  int v53 = a2;
  uint64_t v15 = v14;
  uint64_t v16 = sub_2347EEEE0();
  uint64_t v17 = v16;
  if (!*(void *)(v14 + 16)) {
    goto LABEL_41;
  }
  uint64_t v18 = 1 << *(unsigned char *)(v14 + 32);
  uint64_t v19 = *(void *)(v14 + 64);
  uint64_t v49 = (void *)(v14 + 64);
  if (v18 < 64) {
    uint64_t v20 = ~(-1 << v18);
  }
  else {
    uint64_t v20 = -1;
  }
  unint64_t v21 = v20 & v19;
  int v47 = v5;
  int64_t v48 = (unint64_t)(v18 + 63) >> 6;
  uint64_t v50 = (void (**)(char *, unint64_t, uint64_t))(v12 + 16);
  int8x8_t v55 = (void (**)(char *, unint64_t, uint64_t))(v12 + 32);
  uint64_t v56 = v11;
  uint64_t v22 = v16 + 64;
  uint64_t result = swift_retain();
  int64_t v24 = 0;
  uint64_t v51 = v15;
  uint64_t v25 = v54;
  while (1)
  {
    if (v21)
    {
      unint64_t v27 = __clz(__rbit64(v21));
      v21 &= v21 - 1;
      unint64_t v28 = v27 | (v24 << 6);
      goto LABEL_22;
    }
    int64_t v29 = v24 + 1;
    if (__OFADD__(v24, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v29 >= v48) {
      break;
    }
    unint64_t v30 = v49;
    unint64_t v31 = v49[v29];
    ++v24;
    if (!v31)
    {
      int64_t v24 = v29 + 1;
      if (v29 + 1 >= v48) {
        goto LABEL_34;
      }
      unint64_t v31 = v49[v24];
      if (!v31)
      {
        int64_t v32 = v29 + 2;
        if (v32 >= v48)
        {
LABEL_34:
          swift_release();
          uint64_t v7 = v47;
          if ((v53 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v31 = v49[v32];
        if (!v31)
        {
          while (1)
          {
            int64_t v24 = v32 + 1;
            if (__OFADD__(v32, 1)) {
              goto LABEL_43;
            }
            if (v24 >= v48) {
              goto LABEL_34;
            }
            unint64_t v31 = v49[v24];
            ++v32;
            if (v31) {
              goto LABEL_21;
            }
          }
        }
        int64_t v24 = v32;
      }
    }
LABEL_21:
    unint64_t v21 = (v31 - 1) & v31;
    unint64_t v28 = __clz(__rbit64(v31)) + (v24 << 6);
    uint64_t v25 = v54;
LABEL_22:
    uint64_t v33 = v12;
    uint64_t v34 = *(void *)(v12 + 72);
    unint64_t v35 = *(void *)(v15 + 48) + v34 * v28;
    if (v53)
    {
      (*v55)(v25, v35, v56);
      uint64_t v36 = *(void *)(v15 + 56);
      uint64_t v37 = *(void *)(v52 + 72);
      sub_2347D81E0(v36 + v37 * v28, v57, v58);
    }
    else
    {
      (*v50)(v25, v35, v56);
      uint64_t v38 = *(void *)(v15 + 56);
      uint64_t v37 = *(void *)(v52 + 72);
      sub_2347D8178(v38 + v37 * v28, v57, v58);
    }
    sub_2347D8130(&qword_2687ACDD0, MEMORY[0x263F07508]);
    uint64_t result = sub_2347EE530();
    uint64_t v39 = -1 << *(unsigned char *)(v17 + 32);
    unint64_t v40 = result & ~v39;
    unint64_t v41 = v40 >> 6;
    if (((-1 << v40) & ~*(void *)(v22 + 8 * (v40 >> 6))) != 0)
    {
      unint64_t v26 = __clz(__rbit64((-1 << v40) & ~*(void *)(v22 + 8 * (v40 >> 6)))) | v40 & 0x7FFFFFFFFFFFFFC0;
      uint64_t v25 = v54;
    }
    else
    {
      char v42 = 0;
      unint64_t v43 = (unint64_t)(63 - v39) >> 6;
      uint64_t v25 = v54;
      do
      {
        if (++v41 == v43 && (v42 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v44 = v41 == v43;
        if (v41 == v43) {
          unint64_t v41 = 0;
        }
        v42 |= v44;
        uint64_t v45 = *(void *)(v22 + 8 * v41);
      }
      while (v45 == -1);
      unint64_t v26 = __clz(__rbit64(~v45)) + (v41 << 6);
    }
    *(void *)(v22 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
    (*v55)((char *)(*(void *)(v17 + 48) + v34 * v26), (unint64_t)v25, v56);
    uint64_t result = sub_2347D81E0(v57, *(void *)(v17 + 56) + v37 * v26, v58);
    ++*(void *)(v17 + 16);
    uint64_t v15 = v51;
    uint64_t v12 = v33;
  }
  swift_release();
  uint64_t v7 = v47;
  unint64_t v30 = v49;
  if ((v53 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v46 = 1 << *(unsigned char *)(v15 + 32);
  if (v46 >= 64) {
    bzero(v30, ((unint64_t)(v46 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v30 = -1 << v46;
  }
  *(void *)(v15 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v7 = v17;
  return result;
}

uint64_t sub_2347D23E8(uint64_t a1, int a2)
{
  return sub_2347D1F08(a1, a2, type metadata accessor for CapturedRoom.Object, (uint64_t *)&unk_2687AEF50, type metadata accessor for CapturedRoom.Object);
}

uint64_t sub_2347D241C(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_2347ED5C0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2687AECE8);
  int v46 = a2;
  uint64_t v10 = sub_2347EEEE0();
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v14 = *(void *)(v11 + 64);
  char v42 = (void *)(v11 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  unint64_t v40 = v3;
  int64_t v41 = (unint64_t)(v13 + 63) >> 6;
  unint64_t v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v45 = v6;
  uint64_t v17 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v18 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v16)
    {
      unint64_t v22 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41) {
      break;
    }
    uint64_t v25 = v42;
    unint64_t v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v26 = v42[v20];
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v40;
          if ((v46 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            int64_t v20 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v41) {
              goto LABEL_34;
            }
            unint64_t v26 = v42[v20];
            ++v27;
            if (v26) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v27;
      }
    }
LABEL_21:
    unint64_t v16 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    uint64_t v28 = *(void *)(v45 + 72);
    unint64_t v29 = *(void *)(v11 + 48) + v28 * v23;
    if (v46)
    {
      (*v17)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
    }
    else
    {
      (*v43)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
      swift_unknownObjectRetain();
    }
    sub_2347D8130(&qword_2687ACDD0, MEMORY[0x263F07508]);
    uint64_t result = sub_2347EE530();
    uint64_t v31 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v17)(*(void *)(v12 + 48) + v28 * v21, v8, v5);
    *(void *)(*(void *)(v12 + 56) + 8 * v21) = v30;
    ++*(void *)(v12 + 16);
  }
  swift_release();
  uint64_t v3 = v40;
  uint64_t v25 = v42;
  if ((v46 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v11 + 32);
  if (v38 >= 64) {
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v25 = -1 << v38;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v3 = v12;
  return result;
}

uint64_t sub_2347D2840(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_2347ED490();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2687AF080);
  int v42 = a2;
  uint64_t v10 = sub_2347EEEE0();
  uint64_t v11 = (void *)v10;
  if (*(void *)(v9 + 16))
  {
    char v34 = v2;
    uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
    uint64_t v13 = *(void *)(v9 + 64);
    BOOL v36 = (void *)(v9 + 64);
    if (v12 < 64) {
      uint64_t v14 = ~(-1 << v12);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v15 = v14 & v13;
    int64_t v35 = (unint64_t)(v12 + 63) >> 6;
    uint64_t v37 = (void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    uint64_t v38 = (void (**)(char *, uint64_t, uint64_t))(v6 + 32);
    uint64_t v39 = v8;
    uint64_t v40 = v10 + 64;
    uint64_t v41 = v6;
    uint64_t result = swift_retain();
    int64_t v17 = 0;
    while (1)
    {
      if (v15)
      {
        unint64_t v22 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        unint64_t v23 = v22 | (v17 << 6);
      }
      else
      {
        int64_t v24 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
          __break(1u);
LABEL_33:
          __break(1u);
          return result;
        }
        uint64_t v25 = v36;
        if (v24 >= v35) {
          goto LABEL_24;
        }
        unint64_t v26 = v36[v24];
        ++v17;
        if (!v26)
        {
          int64_t v17 = v24 + 1;
          if (v24 + 1 >= v35) {
            goto LABEL_24;
          }
          unint64_t v26 = v36[v17];
          if (!v26)
          {
            int64_t v27 = v24 + 2;
            if (v27 >= v35)
            {
LABEL_24:
              swift_release();
              if ((v42 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v34;
                goto LABEL_31;
              }
              uint64_t v33 = 1 << *(unsigned char *)(v9 + 32);
              if (v33 >= 64) {
                bzero(v25, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v25 = -1 << v33;
              }
              uint64_t v3 = v34;
              *(void *)(v9 + 16) = 0;
              break;
            }
            unint64_t v26 = v36[v27];
            if (!v26)
            {
              while (1)
              {
                int64_t v17 = v27 + 1;
                if (__OFADD__(v27, 1)) {
                  goto LABEL_33;
                }
                if (v17 >= v35) {
                  goto LABEL_24;
                }
                unint64_t v26 = v36[v17];
                ++v27;
                if (v26) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v17 = v27;
          }
        }
LABEL_21:
        unint64_t v15 = (v26 - 1) & v26;
        unint64_t v23 = __clz(__rbit64(v26)) + (v17 << 6);
      }
      uint64_t v28 = *(void *)(v9 + 56);
      uint64_t v29 = v9;
      uint64_t v30 = *(void *)(*(void *)(v9 + 48) + 8 * v23);
      uint64_t v31 = *(void *)(v41 + 72);
      uint64_t v32 = v28 + v31 * v23;
      if (v42)
      {
        uint64_t v19 = (uint64_t (**)(unint64_t, char *, uint64_t))v38;
        uint64_t v18 = v39;
        (*v38)(v39, v32, v5);
      }
      else
      {
        uint64_t v18 = v39;
        (*v37)(v39, v32, v5);
        swift_bridgeObjectRetain();
        uint64_t v19 = (uint64_t (**)(unint64_t, char *, uint64_t))v38;
      }
      sub_2347EF1C0();
      sub_2347D8248(v43, v30);
      sub_2347EF200();
      uint64_t v20 = v40;
      unint64_t v21 = sub_2347EEC50();
      *(void *)(v20 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
      *(void *)(v11[6] + 8 * v21) = v30;
      uint64_t result = (*v19)(v11[7] + v31 * v21, v18, v5);
      ++v11[2];
      uint64_t v9 = v29;
    }
  }
  uint64_t result = swift_release();
LABEL_31:
  void *v3 = v11;
  return result;
}

uint64_t sub_2347D2BBC(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v43 = sub_2347ED490();
  uint64_t v5 = *(void *)(v43 - 8);
  MEMORY[0x270FA5388](v43);
  int v42 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2687AF078);
  int v41 = a2;
  uint64_t result = sub_2347EEEE0();
  uint64_t v9 = result;
  if (*(void *)(v7 + 16))
  {
    uint64_t v37 = v2;
    int64_t v10 = 0;
    uint64_t v11 = *(void *)(v7 + 64);
    uint64_t v39 = (void *)(v7 + 64);
    uint64_t v12 = 1 << *(unsigned char *)(v7 + 32);
    if (v12 < 64) {
      uint64_t v13 = ~(-1 << v12);
    }
    else {
      uint64_t v13 = -1;
    }
    unint64_t v14 = v13 & v11;
    int64_t v38 = (unint64_t)(v12 + 63) >> 6;
    uint64_t v40 = (void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    unint64_t v15 = (void (**)(char *, uint64_t, uint64_t))(v5 + 32);
    uint64_t v16 = result + 64;
    while (1)
    {
      if (v14)
      {
        unint64_t v18 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        unint64_t v19 = v18 | (v10 << 6);
      }
      else
      {
        int64_t v20 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v39;
        if (v20 >= v38) {
          goto LABEL_34;
        }
        unint64_t v21 = v39[v20];
        ++v10;
        if (!v21)
        {
          int64_t v10 = v20 + 1;
          if (v20 + 1 >= v38) {
            goto LABEL_34;
          }
          unint64_t v21 = v39[v10];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v38)
            {
LABEL_34:
              if ((v41 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v37;
                goto LABEL_41;
              }
              uint64_t v36 = 1 << *(unsigned char *)(v7 + 32);
              if (v36 >= 64) {
                bzero(v39, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v39 = -1 << v36;
              }
              uint64_t v3 = v37;
              *(void *)(v7 + 16) = 0;
              break;
            }
            unint64_t v21 = v39[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v10 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_43;
                }
                if (v10 >= v38) {
                  goto LABEL_34;
                }
                unint64_t v21 = v39[v10];
                ++v22;
                if (v21) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v10 = v22;
          }
        }
LABEL_21:
        unint64_t v14 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v10 << 6);
      }
      uint64_t v23 = *(void *)(v7 + 56);
      uint64_t v24 = v7;
      char v25 = *(unsigned char *)(*(void *)(v7 + 48) + v19);
      uint64_t v26 = v5;
      uint64_t v27 = *(void *)(v5 + 72);
      uint64_t v28 = v23 + v27 * v19;
      if (v41) {
        (*v15)(v42, v28, v43);
      }
      else {
        (*v40)(v42, v28, v43);
      }
      sub_2347EF1C0();
      sub_2347EF1D0();
      uint64_t result = sub_2347EF200();
      uint64_t v29 = -1 << *(unsigned char *)(v9 + 32);
      unint64_t v30 = result & ~v29;
      unint64_t v31 = v30 >> 6;
      if (((-1 << v30) & ~*(void *)(v16 + 8 * (v30 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v30) & ~*(void *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v32 = 0;
        unint64_t v33 = (unint64_t)(63 - v29) >> 6;
        do
        {
          if (++v31 == v33 && (v32 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          BOOL v34 = v31 == v33;
          if (v31 == v33) {
            unint64_t v31 = 0;
          }
          v32 |= v34;
          uint64_t v35 = *(void *)(v16 + 8 * v31);
        }
        while (v35 == -1);
        unint64_t v17 = __clz(__rbit64(~v35)) + (v31 << 6);
      }
      *(void *)(v16 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(unsigned char *)(*(void *)(v9 + 48) + v17) = v25;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v15)(*(void *)(v9 + 56) + v27 * v17, v42, v43);
      ++*(void *)(v9 + 16);
      uint64_t v5 = v26;
      uint64_t v7 = v24;
    }
  }
  uint64_t result = swift_release();
LABEL_41:
  uint64_t *v3 = v9;
  return result;
}

unint64_t sub_2347D2F74(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_2347EEC40();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      type metadata accessor for ScanEntity();
      sub_2347D8130(&qword_2687AEEB0, (void (*)(uint64_t))type metadata accessor for ScanEntity);
      do
      {
        uint64_t result = sub_2347EE530();
        unint64_t v9 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v9 >= v8 && v3 >= (uint64_t)v9)
          {
LABEL_16:
            uint64_t v12 = *(void *)(a2 + 48);
            uint64_t v13 = (void *)(v12 + 8 * v3);
            unint64_t v14 = (void *)(v12 + 8 * v6);
            if (v3 != v6 || v13 >= v14 + 1) {
              *uint64_t v13 = *v14;
            }
            uint64_t v15 = *(void *)(a2 + 56);
            uint64_t v16 = (void *)(v15 + 8 * v3);
            unint64_t v17 = (void *)(v15 + 8 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 1))
            {
              void *v16 = *v17;
              int64_t v3 = v6;
            }
          }
        }
        else if (v9 >= v8 || v3 >= (uint64_t)v9)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unint64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *unint64_t v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_2347D3178(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2347ED5C0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(void *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    uint64_t v10 = ~v8;
    uint64_t v33 = a2 + 64;
    uint64_t v11 = sub_2347EEC40();
    uint64_t v12 = v33;
    if ((*(void *)(v33 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      unint64_t v30 = (v11 + 1) & v10;
      unint64_t v31 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v32 = v5 + 16;
      uint64_t v13 = (void (**)(char *, uint64_t))(v5 + 8);
      uint64_t v14 = *(void *)(v5 + 72);
      do
      {
        uint64_t v15 = v14;
        int64_t v16 = v14 * v9;
        v31(v7, *(void *)(a2 + 48) + v14 * v9, v4);
        sub_2347D8130(&qword_2687ACDD0, MEMORY[0x263F07508]);
        uint64_t v17 = sub_2347EE530();
        (*v13)(v7, v4);
        unint64_t v18 = v17 & v10;
        if (a1 >= (uint64_t)v30)
        {
          if (v18 >= v30 && a1 >= (uint64_t)v18)
          {
LABEL_16:
            uint64_t v14 = v15;
            if (v15 * a1 < v16
              || *(void *)(a2 + 48) + v15 * a1 >= (unint64_t)(*(void *)(a2 + 48) + v16 + v15))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v16)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v21 = *(void *)(a2 + 56);
            BOOL v22 = (void *)(v21 + 8 * a1);
            uint64_t v23 = (void *)(v21 + 8 * v9);
            uint64_t v12 = v33;
            if (a1 != v9 || (a1 = v9, v22 >= v23 + 1))
            {
              *BOOL v22 = *v23;
              a1 = v9;
            }
            goto LABEL_5;
          }
        }
        else if (v18 >= v30 || a1 >= (uint64_t)v18)
        {
          goto LABEL_16;
        }
        uint64_t v12 = v33;
        uint64_t v14 = v15;
LABEL_5:
        unint64_t v9 = (v9 + 1) & v10;
      }
      while (((*(void *)(v12 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    uint64_t v24 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v25 = *v24;
    uint64_t v26 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v24 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v26 = *v24;
    uint64_t v25 = (-1 << a1) - 1;
  }
  *uint64_t v24 = v26 & v25;
  uint64_t v27 = *(void *)(a2 + 16);
  BOOL v28 = __OFSUB__(v27, 1);
  uint64_t v29 = v27 - 1;
  if (v28)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v29;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_2347D3470(unint64_t result, uint64_t a2)
{
  uint64_t v2 = a2;
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_2347EEC40();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      uint64_t v27 = v2;
      unint64_t v28 = (result + 1) & v7;
      do
      {
        uint64_t v8 = *(void *)(*(void *)(v2 + 48) + 8 * v6);
        sub_2347EF1C0();
        uint64_t v9 = *(void *)(*(void *)(v8 + 48) + 16);
        if (v9)
        {
          uint64_t v10 = v7;
          uint64_t v11 = v4;
          swift_retain();
          swift_bridgeObjectRetain();
          uint64_t v12 = 0;
          do
          {
            ++v12;
            __swift_instantiateConcreteTypeFromMangledName(&qword_2687AD2F8);
            sub_2347EF150();
            sub_2347EF1D0();
          }
          while (v9 != v12);
          swift_bridgeObjectRelease();
          uint64_t v4 = v11;
          uint64_t v7 = v10;
          uint64_t v2 = v27;
        }
        else
        {
          swift_retain();
        }
        uint64_t v13 = sub_2347EF200();
        uint64_t result = swift_release();
        unint64_t v14 = v13 & v7;
        if (v3 >= (uint64_t)v28)
        {
          if (v14 < v28) {
            goto LABEL_5;
          }
        }
        else if (v14 >= v28)
        {
          goto LABEL_16;
        }
        if (v3 >= (uint64_t)v14)
        {
LABEL_16:
          uint64_t v15 = *(void *)(v2 + 48);
          int64_t v16 = (void *)(v15 + 8 * v3);
          uint64_t v17 = (void *)(v15 + 8 * v6);
          if (v3 != v6 || v16 >= v17 + 1) {
            void *v16 = *v17;
          }
          uint64_t v18 = *(void *)(v2 + 56);
          uint64_t v19 = (void *)(v18 + 8 * v3);
          uint64_t v20 = (void *)(v18 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v19 >= v20 + 1))
          {
            *uint64_t v19 = *v20;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v22 = *v21;
    uint64_t v23 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v23 = *v21;
    uint64_t v22 = (-1 << result) - 1;
  }
  uint64_t *v21 = v23 & v22;
  uint64_t v24 = *(void *)(v2 + 16);
  BOOL v25 = __OFSUB__(v24, 1);
  uint64_t v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v2 + 16) = v26;
    ++*(_DWORD *)(v2 + 36);
  }
  return result;
}

unint64_t sub_2347D36BC(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_2347EEC40();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = *(void *)(a2 + 48);
        uint64_t v10 = (void *)(v9 + 8 * v6);
        uint64_t result = sub_2347EF1B0();
        unint64_t v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            unint64_t v14 = (void *)(v9 + 8 * v3);
            if (v3 != v6 || v14 >= v10 + 1) {
              void *v14 = *v10;
            }
            uint64_t v15 = *(void *)(a2 + 56);
            int64_t v16 = (void *)(v15 + 8 * v3);
            uint64_t v17 = (void *)(v15 + 8 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 1))
            {
              void *v16 = *v17;
              int64_t v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *uint64_t v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_2347D3854(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_2347EEC40();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_2347EF1C0();
        sub_2347EF1D0();
        uint64_t result = sub_2347EF200();
        unint64_t v9 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v9 < v8) {
            goto LABEL_5;
          }
        }
        else if (v9 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v9)
        {
LABEL_11:
          uint64_t v10 = *(void *)(a2 + 48);
          unint64_t v11 = (unsigned char *)(v10 + v3);
          uint64_t v12 = (unsigned char *)(v10 + v6);
          if (v3 != v6 || v11 >= v12 + 1) {
            *unint64_t v11 = *v12;
          }
          uint64_t v13 = *(void *)(a2 + 56);
          unint64_t v14 = (void *)(v13 + 8 * v3);
          uint64_t v15 = (void *)(v13 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v14 >= v15 + 1))
          {
            void *v14 = *v15;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    int64_t v16 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v17 = *v16;
    uint64_t v18 = (-1 << v3) - 1;
  }
  else
  {
    int64_t v16 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v18 = *v16;
    uint64_t v17 = (-1 << result) - 1;
  }
  uint64_t *v16 = v18 & v17;
  uint64_t v19 = *(void *)(a2 + 16);
  BOOL v20 = __OFSUB__(v19, 1);
  uint64_t v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v21;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_2347D3A10(int64_t a1, uint64_t a2)
{
  return sub_2347D3E10(a1, a2, (uint64_t (*)(void))type metadata accessor for ScanItemStrut);
}

unint64_t sub_2347D3A28(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_2347EEC40();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_2347EF1C0();
        swift_retain();
        sub_2347EE920();
        sub_2347EF1D0();
        sub_2347EE920();
        sub_2347EF1D0();
        sub_2347EF210();
        sub_2347EF1D0();
        uint64_t v9 = sub_2347EF200();
        uint64_t result = swift_release();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (void *)(v11 + 8 * v3);
          uint64_t v13 = (void *)(v11 + 8 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *uint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (void *)(v14 + 8 * v3);
          int64_t v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *uint64_t v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  uint64_t *v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_2347D3C20(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_2347EEC40();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_2347EF1C0();
        swift_bridgeObjectRetain();
        sub_2347EE6C0();
        uint64_t v9 = sub_2347EF200();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *uint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (void *)(v14 + 8 * v3);
          int64_t v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *uint64_t v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  uint64_t *v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_2347D3DF8(int64_t a1, uint64_t a2)
{
  return sub_2347D3E10(a1, a2, type metadata accessor for CapturedRoom.Surface);
}

unint64_t sub_2347D3E10(int64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v37 = a3;
  uint64_t v5 = sub_2347ED5C0();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t result = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = a2 + 64;
  uint64_t v11 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v12 = (a1 + 1) & ~v11;
  if (((1 << v12) & *(void *)(a2 + 64 + 8 * (v12 >> 6))) != 0)
  {
    uint64_t v13 = ~v11;
    unint64_t result = sub_2347EEC40();
    if ((*(void *)(v10 + 8 * (v12 >> 6)) & (1 << v12)) != 0)
    {
      unint64_t v40 = (result + 1) & v13;
      uint64_t v15 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
      uint64_t v14 = v6 + 16;
      uint64_t v16 = *(void *)(v14 + 56);
      uint64_t v41 = v14;
      int64_t v38 = (uint64_t (**)(char *, uint64_t))(v14 - 8);
      uint64_t v39 = v15;
      uint64_t v36 = v13;
      do
      {
        uint64_t v17 = v10;
        uint64_t v18 = v16;
        int64_t v19 = v16 * v12;
        v39(v9, *(void *)(a2 + 48) + v16 * v12, v5);
        sub_2347D8130(&qword_2687ACDD0, MEMORY[0x263F07508]);
        uint64_t v20 = sub_2347EE530();
        unint64_t result = (*v38)(v9, v5);
        unint64_t v21 = v20 & v13;
        if (a1 >= (uint64_t)v40)
        {
          if (v21 >= v40 && a1 >= (uint64_t)v21)
          {
LABEL_16:
            if (v18 * a1 < v19
              || *(void *)(a2 + 48) + v18 * a1 >= (unint64_t)(*(void *)(a2 + 48) + v19 + v18))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v18 * a1 != v19)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v24 = *(void *)(a2 + 56);
            uint64_t v25 = *(void *)(*(void *)(v37(0) - 8) + 72);
            int64_t v26 = v25 * a1;
            unint64_t result = v24 + v25 * a1;
            int64_t v27 = v25 * v12;
            unint64_t v28 = v24 + v25 * v12 + v25;
            BOOL v29 = v26 < v27 || result >= v28;
            uint64_t v10 = v17;
            if (v29)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
              a1 = v12;
              uint64_t v13 = v36;
            }
            else
            {
              a1 = v12;
              uint64_t v13 = v36;
              if (v26 != v27)
              {
                unint64_t result = swift_arrayInitWithTakeBackToFront();
                a1 = v12;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v21 >= v40 || a1 >= (uint64_t)v21)
        {
          goto LABEL_16;
        }
        uint64_t v10 = v17;
LABEL_5:
        unint64_t v12 = (v12 + 1) & v13;
        uint64_t v16 = v18;
      }
      while (((*(void *)(v10 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) != 0);
    }
    unint64_t v30 = (uint64_t *)(v10 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v31 = *v30;
    uint64_t v32 = (-1 << a1) - 1;
  }
  else
  {
    unint64_t v30 = (uint64_t *)(v10 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v32 = *v30;
    uint64_t v31 = (-1 << a1) - 1;
  }
  *unint64_t v30 = v32 & v31;
  uint64_t v33 = *(void *)(a2 + 16);
  BOOL v34 = __OFSUB__(v33, 1);
  uint64_t v35 = v33 - 1;
  if (v34)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v35;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_2347D4164(int64_t a1, uint64_t a2)
{
  return sub_2347D3E10(a1, a2, type metadata accessor for CapturedRoom.Object);
}

unint64_t sub_2347D417C(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_2347EEC40();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      while (1)
      {
        uint64_t v9 = *(void *)(*(void *)(a2 + 48) + 8 * v6);
        sub_2347EF1C0();
        swift_bridgeObjectRetain();
        sub_2347D8248(v27, v9);
        uint64_t v10 = sub_2347EF200();
        unint64_t result = swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v3 >= (uint64_t)v8) {
          break;
        }
        if (v11 < v8) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v12 = *(void *)(a2 + 48);
        uint64_t v13 = (void *)(v12 + 8 * v3);
        uint64_t v14 = (void *)(v12 + 8 * v6);
        if (v3 != v6 || v13 >= v14 + 1) {
          *uint64_t v13 = *v14;
        }
        uint64_t v15 = *(void *)(a2 + 56);
        uint64_t v16 = *(void *)(*(void *)(sub_2347ED490() - 8) + 72);
        int64_t v17 = v16 * v3;
        unint64_t result = v15 + v16 * v3;
        int64_t v18 = v16 * v6;
        unint64_t v19 = v15 + v16 * v6 + v16;
        if (v17 < v18 || result >= v19)
        {
          unint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v17 == v18) {
            goto LABEL_6;
          }
          unint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v11 < v8) {
        goto LABEL_6;
      }
LABEL_11:
      if (v3 < (uint64_t)v11) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    unint64_t v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v22 = *v21;
    uint64_t v23 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v23 = *v21;
    uint64_t v22 = (-1 << result) - 1;
  }
  uint64_t *v21 = v23 & v22;
  uint64_t v24 = *(void *)(a2 + 16);
  BOOL v25 = __OFSUB__(v24, 1);
  uint64_t v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_2347D4384(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_2347EEC40();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      while (1)
      {
        sub_2347EF1C0();
        sub_2347EF1D0();
        unint64_t result = sub_2347EF200();
        unint64_t v9 = result & v7;
        if (v3 >= (uint64_t)v8) {
          break;
        }
        if (v9 < v8) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v10 = *(void *)(a2 + 48);
        unint64_t v11 = (unsigned char *)(v10 + v3);
        uint64_t v12 = (unsigned char *)(v10 + v6);
        if (v3 != v6 || v11 >= v12 + 1) {
          *unint64_t v11 = *v12;
        }
        uint64_t v13 = *(void *)(a2 + 56);
        uint64_t v14 = *(void *)(*(void *)(sub_2347ED490() - 8) + 72);
        int64_t v15 = v14 * v3;
        unint64_t result = v13 + v14 * v3;
        int64_t v16 = v14 * v6;
        unint64_t v17 = v13 + v14 * v6 + v14;
        if (v15 < v16 || result >= v17)
        {
          unint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v15 == v16) {
            goto LABEL_6;
          }
          unint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v9 < v8) {
        goto LABEL_6;
      }
LABEL_11:
      if (v3 < (uint64_t)v9) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    unint64_t v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v20 = *v19;
    uint64_t v21 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v21 = *v19;
    uint64_t v20 = (-1 << result) - 1;
  }
  *unint64_t v19 = v21 & v20;
  uint64_t v22 = *(void *)(a2 + 16);
  BOOL v23 = __OFSUB__(v22, 1);
  uint64_t v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_2347D4578(uint64_t a1, void *a2, double a3)
{
  sub_2347EF1C0();
  uint64_t v6 = *(void *)(*(void *)(a1 + 48) + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = 0;
    do
    {
      ++v7;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2687AD2F8);
      sub_2347EF150();
      sub_2347EF1D0();
    }
    while (v6 != v7);
    swift_bridgeObjectRelease();
  }
  sub_2347EF200();
  unint64_t result = sub_2347EEC50();
  *(void *)((char *)a2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
  uint64_t v9 = 8 * result;
  *(void *)(a2[6] + v9) = a1;
  *(double *)(a2[7] + v9) = a3;
  ++a2[2];
  return result;
}

unint64_t sub_2347D4690(char a1, uint64_t a2, void *a3)
{
  sub_2347EF1C0();
  sub_2347EE6C0();
  swift_bridgeObjectRelease();
  sub_2347EF200();
  unint64_t result = sub_2347EEC50();
  *(void *)((char *)a3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
  *(unsigned char *)(a3[6] + result) = a1;
  *(void *)(a3[7] + 8 * result) = a2;
  ++a3[2];
  return result;
}

unint64_t sub_2347D4814(uint64_t a1, uint64_t a2, void *a3)
{
  sub_2347EF1C0();
  sub_2347EE920();
  sub_2347EF1D0();
  sub_2347EE920();
  sub_2347EF1D0();
  sub_2347EF210();
  sub_2347EF1D0();
  sub_2347EF200();
  unint64_t result = sub_2347EEC50();
  *(void *)((char *)a3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
  uint64_t v7 = 8 * result;
  *(void *)(a3[6] + v7) = a1;
  *(void *)(a3[7] + v7) = a2;
  ++a3[2];
  return result;
}

void *sub_2347D48EC()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2687AEF40);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2347EEED0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    swift_retain();
    unint64_t result = (void *)swift_retain();
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2347D4A98()
{
  return sub_2347D716C(&qword_2687AF028);
}

void *sub_2347D4AA4()
{
  return sub_2347D5DD0((uint64_t *)&unk_2687AF050);
}

void *sub_2347D4AB0()
{
  return sub_2347D5DD0((uint64_t *)&unk_2687AF030);
}

void *sub_2347D4ABC()
{
  return sub_2347D5DD0(&qword_2687AF040);
}

void *sub_2347D4AC8()
{
  return sub_2347D5DD0(&qword_2687AF048);
}

id sub_2347D4AD4()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2687AEF78);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2347EEED0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 16 * v15;
    long long v23 = *(_OWORD *)(*(void *)(v2 + 56) + v18);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(_OWORD *)(*(void *)(v4 + 56) + v18) = v23;
    swift_retain();
    id v19 = (id)v23;
    id result = *((id *)&v23 + 1);
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2347D4CA0()
{
  return sub_2347D500C((uint64_t *)&unk_2687AEF80);
}

void *sub_2347D4CAC()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2687AECA0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2347EEED0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2347D4E50()
{
  return sub_2347D5A30(&qword_2687AEFA8);
}

void *sub_2347D4E5C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2687AEFA0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2347EEED0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v26 = __clz(__rbit64(v24));
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = v26 + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 16 * v15;
    uint64_t v19 = *(void *)(v2 + 56) + v18;
    char v20 = *(unsigned char *)v19;
    uint64_t v21 = *(void *)(v19 + 8);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    uint64_t v22 = *(void *)(v4 + 56) + v18;
    *(unsigned char *)uint64_t v22 = v20;
    *(void *)(v22 + 8) = v21;
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2347D5000()
{
  return sub_2347D500C((uint64_t *)&unk_2687AEFD0);
}

void *sub_2347D500C(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_2347EEED0();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v14) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v7 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    uint64_t v18 = *(void *)(*(void *)(v3 + 56) + v17);
    *(void *)(*(void *)(v5 + 48) + v17) = *(void *)(*(void *)(v3 + 48) + v17);
    *(void *)(*(void *)(v5 + 56) + v17) = v18;
    id result = (void *)swift_retain();
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v14) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v7 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2347D51A8()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2687AEFE0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2347EEED0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    id result = (void *)swift_retain();
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2347D534C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2687AF020);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2347EEED0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v23 = __clz(__rbit64(v21));
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = v23 + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 4 * v15;
    int v19 = *(_DWORD *)(*(void *)(v2 + 56) + v18);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(_DWORD *)(*(void *)(v4 + 56) + v18) = v19;
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2347D54E0()
{
  uint64_t v1 = sub_2347ED5C0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2687AEFC0);
  unint64_t v23 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_2347EEED0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    id result = (void *)swift_release();
    *unint64_t v23 = v7;
    return result;
  }
  id result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v24 = v5 + 64;
  int64_t v25 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v26 = v2 + 32;
  uint64_t v27 = v2 + 16;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v25) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_9:
    unint64_t v16 = *(void *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 48) + v16, v1);
    uint64_t v17 = 8 * v15;
    uint64_t v18 = *(void *)(*(void *)(v5 + 56) + 8 * v15);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 48) + v16, v4, v1);
    *(void *)(*(void *)(v7 + 56) + v17) = v18;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v25) {
    goto LABEL_23;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_2347D5778()
{
  uint64_t v1 = sub_2347ED5C0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2687AEF90);
  int64_t v25 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_2347EEED0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    id result = (void *)swift_release();
    *int64_t v25 = v7;
    return result;
  }
  id result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v26 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v29 = v2 + 16;
  int64_t v27 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v28 = v2 + 32;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v21 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v21 >= v27) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v26 + 8 * v21);
    ++v10;
    if (!v22)
    {
      int64_t v10 = v21 + 1;
      if (v21 + 1 >= v27) {
        goto LABEL_23;
      }
      unint64_t v22 = *(void *)(v26 + 8 * v10);
      if (!v22) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v22 - 1) & v22;
    unint64_t v15 = __clz(__rbit64(v22)) + (v10 << 6);
LABEL_9:
    unint64_t v16 = *(void *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 48) + v16, v1);
    uint64_t v17 = 32 * v15;
    uint64_t v18 = *(void *)(v5 + 56) + v17;
    long long v30 = *(_OWORD *)v18;
    char v19 = *(unsigned char *)(v18 + 16);
    id result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 48) + v16, v4, v1);
    uint64_t v20 = *(void *)(v7 + 56) + v17;
    *(_OWORD *)uint64_t v20 = v30;
    *(unsigned char *)(v20 + 16) = v19;
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v27) {
    goto LABEL_23;
  }
  unint64_t v22 = *(void *)(v26 + 8 * v23);
  if (v22)
  {
    int64_t v10 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v10 >= v27) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v26 + 8 * v10);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_2347D5A24()
{
  return sub_2347D5A30(&qword_2687AEF98);
}

void *sub_2347D5A30(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_2347EEED0();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v14) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v7 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    uint64_t v18 = *(void *)(*(void *)(v3 + 56) + v17);
    *(void *)(*(void *)(v5 + 48) + v17) = *(void *)(*(void *)(v3 + 48) + v17);
    *(void *)(*(void *)(v5 + 56) + v17) = v18;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v14) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v7 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2347D5BCC()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2687AEC38);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2347EEED0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void *)(v2 + 56) + 40 * v15;
    uint64_t v17 = *(void *)v16;
    char v18 = *(unsigned char *)(v16 + 8);
    uint64_t v19 = *(void *)(v16 + 16);
    uint64_t v20 = *(void *)(v16 + 24);
    int v21 = *(_DWORD *)(v16 + 32);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    uint64_t v22 = *(void *)(v4 + 56) + 40 * v15;
    *(void *)uint64_t v22 = v17;
    *(unsigned char *)(v22 + 8) = v18;
    *(void *)(v22 + 16) = v19;
    *(void *)(v22 + 24) = v20;
    *(_DWORD *)(v22 + 32) = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2347D5DAC()
{
  return sub_2347D66F4((uint64_t *)&unk_2687AF068);
}

void *sub_2347D5DB8()
{
  return sub_2347D5DD0(&qword_2687AF060);
}

void *sub_2347D5DC4()
{
  return sub_2347D5DD0(&qword_2687AEC48);
}

void *sub_2347D5DD0(uint64_t *a1)
{
  uint64_t v3 = sub_2347ED5C0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v26 = v1;
  uint64_t v7 = *v1;
  uint64_t v8 = sub_2347EEED0();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v26 = v9;
    return result;
  }
  id result = (void *)(v8 + 64);
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v9 + 32)) + 63) >> 6;
  if (v9 != v7 || (unint64_t)result >= v7 + 64 + 8 * v11) {
    id result = memmove(result, (const void *)(v7 + 64), 8 * v11);
  }
  int64_t v13 = 0;
  *(void *)(v9 + 16) = *(void *)(v7 + 16);
  uint64_t v14 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(v7 + 64);
  uint64_t v27 = v7 + 64;
  int64_t v28 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v29 = v4 + 32;
  uint64_t v30 = v4 + 16;
  while (1)
  {
    if (v16)
    {
      unint64_t v17 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v18 = v17 | (v13 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v28) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v27 + 8 * v22);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v22 + 1;
      if (v22 + 1 >= v28) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v27 + 8 * v13);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v16 = (v23 - 1) & v23;
    unint64_t v18 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_12:
    unint64_t v19 = *(void *)(v4 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v6, *(void *)(v7 + 48) + v19, v3);
    uint64_t v20 = 8 * v18;
    uint64_t v21 = *(void *)(*(void *)(v7 + 56) + 8 * v18);
    (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(*(void *)(v9 + 48) + v19, v6, v3);
    *(void *)(*(void *)(v9 + 56) + v20) = v21;
    id result = (void *)swift_retain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v28) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v27 + 8 * v24);
  if (v23)
  {
    int64_t v13 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v13 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v13 >= v28) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v27 + 8 * v13);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2347D6064()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2687AEC68);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2347EEED0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v25 = v1;
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    sub_234776E60(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    void *v21 = v19;
    v21[1] = v18;
    sub_2346C3738(v26, (_OWORD *)(*(void *)(v4 + 56) + v20));
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_2347D624C()
{
  return sub_2347D75D8((uint64_t (*)(void))type metadata accessor for ScanItemStrut, &qword_2687AEFF8, (uint64_t (*)(void))type metadata accessor for ScanItemStrut);
}

void *sub_2347D6280()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2687AF018);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2347EEED0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v20 = __clz(__rbit64(v18));
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = v20 + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2347D6410()
{
  uint64_t v38 = sub_2347ED5C0();
  uint64_t v1 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v37 = (char *)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2687AF010);
  uint64_t v32 = v0;
  uint64_t v3 = *v0;
  uint64_t v4 = sub_2347EEED0();
  uint64_t v5 = *(void *)(v3 + 16);
  uint64_t v40 = v4;
  if (!v5)
  {
    id result = (void *)swift_release();
    uint64_t v30 = v40;
    uint64_t v29 = v32;
LABEL_25:
    *uint64_t v29 = v30;
    return result;
  }
  uint64_t v6 = v4;
  id result = (void *)(v4 + 64);
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v6 + 32)) + 63) >> 6;
  if (v6 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
  {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
    uint64_t v6 = v40;
  }
  int64_t v9 = 0;
  *(void *)(v6 + 16) = *(void *)(v3 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v39 = v3;
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v3 + 64);
  uint64_t v33 = v3 + 64;
  int64_t v34 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v35 = v1 + 32;
  uint64_t v36 = v1 + 16;
  unint64_t v14 = v37;
  uint64_t v13 = v38;
  uint64_t v15 = v40;
  while (1)
  {
    if (v12)
    {
      unint64_t v16 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v17 = v16 | (v9 << 6);
      uint64_t v18 = v39;
      goto LABEL_9;
    }
    int64_t v26 = v9 + 1;
    uint64_t v18 = v39;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v26 >= v34) {
      goto LABEL_23;
    }
    unint64_t v27 = *(void *)(v33 + 8 * v26);
    ++v9;
    if (!v27)
    {
      int64_t v9 = v26 + 1;
      if (v26 + 1 >= v34) {
        goto LABEL_23;
      }
      unint64_t v27 = *(void *)(v33 + 8 * v9);
      if (!v27) {
        break;
      }
    }
LABEL_22:
    unint64_t v12 = (v27 - 1) & v27;
    unint64_t v17 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_9:
    unint64_t v19 = *(void *)(v1 + 72) * v17;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v14, *(void *)(v18 + 48) + v19, v13);
    uint64_t v20 = *(void *)(v18 + 56);
    uint64_t v21 = 16 * v17;
    int64_t v22 = (uint64_t *)(v20 + 16 * v17);
    uint64_t v23 = *v22;
    uint64_t v24 = v22[1];
    (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(void *)(v15 + 48) + v19, v14, v13);
    uint64_t v25 = (void *)(*(void *)(v15 + 56) + v21);
    *uint64_t v25 = v23;
    v25[1] = v24;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v34)
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t v29 = v32;
    uint64_t v30 = v40;
    goto LABEL_25;
  }
  unint64_t v27 = *(void *)(v33 + 8 * v28);
  if (v27)
  {
    int64_t v9 = v28;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v9 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v9 >= v34) {
      goto LABEL_23;
    }
    unint64_t v27 = *(void *)(v33 + 8 * v9);
    ++v28;
    if (v27) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_2347D66E8()
{
  return sub_2347D66F4((uint64_t *)&unk_2687AF000);
}

void *sub_2347D66F4(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_2347EEED0();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v14) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v7 + 8 * v18);
    ++v10;
    if (!v19)
    {
      int64_t v10 = v18 + 1;
      if (v18 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v7 + 8 * v10);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = *(void *)(*(void *)(v3 + 56) + 8 * v16);
    *(unsigned char *)(*(void *)(v5 + 48) + v16) = *(unsigned char *)(*(void *)(v3 + 48) + v16);
    *(void *)(*(void *)(v5 + 56) + 8 * v16) = v17;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v14) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v7 + 8 * v20);
  if (v19)
  {
    int64_t v10 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v7 + 8 * v10);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2347D6890()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_2347ED490();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2687AEFE8);
  uint64_t v6 = *v0;
  uint64_t v7 = sub_2347EEED0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    id result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v8;
    return result;
  }
  int64_t v26 = v1;
  id result = (void *)(v7 + 64);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10) {
    id result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  }
  uint64_t v27 = v6 + 64;
  int64_t v11 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v6 + 64);
  int64_t v28 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v29 = v3 + 16;
  while (1)
  {
    if (v14)
    {
      unint64_t v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v16 = v15 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v23 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v23 >= v28) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v27 + 8 * v23);
    ++v11;
    if (!v24)
    {
      int64_t v11 = v23 + 1;
      if (v23 + 1 >= v28) {
        goto LABEL_23;
      }
      unint64_t v24 = *(void *)(v27 + 8 * v11);
      if (!v24) {
        break;
      }
    }
LABEL_22:
    unint64_t v14 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v11 << 6);
LABEL_9:
    unint64_t v17 = *(void *)(v3 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(void *)(v6 + 48) + v17, v2);
    uint64_t v18 = 32 * v16;
    unint64_t v19 = (long long *)(*(void *)(v6 + 56) + v18);
    long long v20 = *v19;
    long long v30 = v19[1];
    long long v31 = v20;
    id result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(v8 + 48) + v17, v5, v2);
    uint64_t v21 = (_OWORD *)(*(void *)(v8 + 56) + v18);
    long long v22 = v30;
    _OWORD *v21 = v31;
    v21[1] = v22;
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v28)
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t v1 = v26;
    goto LABEL_25;
  }
  unint64_t v24 = *(void *)(v27 + 8 * v25);
  if (v24)
  {
    int64_t v11 = v25;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v11 >= v28) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v27 + 8 * v11);
    ++v25;
    if (v24) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_2347D6B40()
{
  uint64_t v35 = sub_2347ED5C0();
  uint64_t v1 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35);
  uint64_t v3 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2687ACD50);
  long long v30 = v0;
  uint64_t v4 = *v0;
  uint64_t v5 = sub_2347EEED0();
  uint64_t v6 = *(void *)(v4 + 16);
  uint64_t v36 = v5;
  if (!v6)
  {
    id result = (void *)swift_release();
    uint64_t v28 = v36;
    uint64_t v27 = v30;
LABEL_25:
    *uint64_t v27 = v28;
    return result;
  }
  uint64_t v7 = v5;
  id result = (void *)(v5 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v4 || (unint64_t)result >= v4 + 64 + 8 * v9)
  {
    id result = memmove(result, (const void *)(v4 + 64), 8 * v9);
    uint64_t v7 = v36;
  }
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v4 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v4 + 64);
  uint64_t v31 = v4 + 64;
  int64_t v32 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v33 = v1 + 32;
  uint64_t v34 = v1 + 16;
  uint64_t v14 = v35;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v24 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v24 >= v32) {
      goto LABEL_23;
    }
    unint64_t v25 = *(void *)(v31 + 8 * v24);
    ++v10;
    if (!v25)
    {
      int64_t v10 = v24 + 1;
      if (v24 + 1 >= v32) {
        goto LABEL_23;
      }
      unint64_t v25 = *(void *)(v31 + 8 * v10);
      if (!v25) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v25 - 1) & v25;
    unint64_t v16 = __clz(__rbit64(v25)) + (v10 << 6);
LABEL_9:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v16);
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    unint64_t v21 = *(void *)(v1 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v3, *(void *)(v4 + 56) + v21, v14);
    uint64_t v22 = v36;
    int64_t v23 = (void *)(*(void *)(v36 + 48) + v17);
    *int64_t v23 = v19;
    v23[1] = v20;
    (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(void *)(v22 + 56) + v21, v3, v14);
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v32)
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t v27 = v30;
    uint64_t v28 = v36;
    goto LABEL_25;
  }
  unint64_t v25 = *(void *)(v31 + 8 * v26);
  if (v25)
  {
    int64_t v10 = v26;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v10 >= v32) {
      goto LABEL_23;
    }
    unint64_t v25 = *(void *)(v31 + 8 * v10);
    ++v26;
    if (v25) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

id sub_2347D6E04()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2687AEFC8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2347EEED0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    swift_retain();
    id result = v17;
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_2347D6FAC()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2687AEFB0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2347EEED0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    int64_t v20 = *(void **)(*(void *)(v2 + 56) + v19);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    void *v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = v20;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2347D7160()
{
  return sub_2347D716C(&qword_2687AEC60);
}

void *sub_2347D716C(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_2347EEED0();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v14) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v7 + 8 * v24);
    ++v10;
    if (!v25)
    {
      int64_t v10 = v24 + 1;
      if (v24 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v7 + 8 * v10);
      if (!v25) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v25 - 1) & v25;
    unint64_t v16 = __clz(__rbit64(v25)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v16);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    uint64_t v21 = 8 * v16;
    uint64_t v22 = *(void *)(*(void *)(v3 + 56) + v21);
    unint64_t v23 = (void *)(*(void *)(v5 + 48) + v17);
    *unint64_t v23 = v20;
    v23[1] = v19;
    *(void *)(*(void *)(v5 + 56) + v21) = v22;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v14) {
    goto LABEL_26;
  }
  unint64_t v25 = *(void *)(v7 + 8 * v26);
  if (v25)
  {
    int64_t v10 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v7 + 8 * v10);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2347D7314()
{
  uint64_t v1 = sub_2347ED5C0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2687AEF70);
  uint64_t v22 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_2347EEED0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    id result = (void *)swift_release();
    *uint64_t v22 = v7;
    return result;
  }
  id result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v23 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v26 = v2 + 16;
  int64_t v24 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v25 = v2 + 32;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v18 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v18 >= v24) {
      goto LABEL_23;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v18);
    ++v10;
    if (!v19)
    {
      int64_t v10 = v18 + 1;
      if (v18 + 1 >= v24) {
        goto LABEL_23;
      }
      unint64_t v19 = *(void *)(v23 + 8 * v10);
      if (!v19) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v10 << 6);
LABEL_9:
    unint64_t v16 = *(void *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 48) + v16, v1);
    char v17 = *(unsigned char *)(*(void *)(v5 + 56) + v15);
    id result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 48) + v16, v4, v1);
    *(unsigned char *)(*(void *)(v7 + 56) + v15) = v17;
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v24) {
    goto LABEL_23;
  }
  unint64_t v19 = *(void *)(v23 + 8 * v20);
  if (v19)
  {
    int64_t v10 = v20;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v10 >= v24) {
      goto LABEL_23;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v10);
    ++v20;
    if (v19) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_2347D75A4()
{
  return sub_2347D75D8(type metadata accessor for CapturedRoom.Surface, (uint64_t *)&unk_2687AEF60, type metadata accessor for CapturedRoom.Surface);
}

void *sub_2347D75D8(uint64_t (*a1)(void), uint64_t *a2, uint64_t (*a3)(void))
{
  BOOL v44 = a3;
  uint64_t v5 = a1(0);
  uint64_t v43 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  int v42 = (char *)&v35 - v6;
  uint64_t v41 = sub_2347ED5C0();
  uint64_t v7 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  uint64_t v40 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v35 = v3;
  uint64_t v9 = *v3;
  uint64_t v10 = sub_2347EEED0();
  uint64_t v11 = *(void *)(v9 + 16);
  uint64_t v46 = v10;
  if (!v11)
  {
    id result = (void *)swift_release();
    uint64_t v34 = v46;
    uint64_t v33 = v35;
LABEL_25:
    *uint64_t v33 = v34;
    return result;
  }
  uint64_t v12 = v10;
  id result = (void *)(v10 + 64);
  unint64_t v14 = (unint64_t)((1 << *(unsigned char *)(v12 + 32)) + 63) >> 6;
  if (v12 != v9 || (unint64_t)result >= v9 + 64 + 8 * v14)
  {
    id result = memmove(result, (const void *)(v9 + 64), 8 * v14);
    uint64_t v12 = v46;
  }
  uint64_t v36 = v9 + 64;
  int64_t v15 = 0;
  *(void *)(v12 + 16) = *(void *)(v9 + 16);
  uint64_t v16 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v45 = v9;
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & *(void *)(v9 + 64);
  uint64_t v39 = v7 + 16;
  int64_t v37 = (unint64_t)(v16 + 63) >> 6;
  uint64_t v38 = v7 + 32;
  int64_t v20 = v40;
  uint64_t v19 = v41;
  uint64_t v21 = (uint64_t)v42;
  for (i = v46; ; id result = (void *)sub_2347D81E0(v21, *(void *)(i + 56) + v29, v28))
  {
    if (v18)
    {
      unint64_t v23 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v24 = v23 | (v15 << 6);
      uint64_t v25 = v45;
      goto LABEL_9;
    }
    int64_t v30 = v15 + 1;
    uint64_t v25 = v45;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v30 >= v37) {
      goto LABEL_23;
    }
    unint64_t v31 = *(void *)(v36 + 8 * v30);
    ++v15;
    if (!v31)
    {
      int64_t v15 = v30 + 1;
      if (v30 + 1 >= v37) {
        goto LABEL_23;
      }
      unint64_t v31 = *(void *)(v36 + 8 * v15);
      if (!v31) {
        break;
      }
    }
LABEL_22:
    unint64_t v18 = (v31 - 1) & v31;
    unint64_t v24 = __clz(__rbit64(v31)) + (v15 << 6);
LABEL_9:
    unint64_t v26 = *(void *)(v7 + 72) * v24;
    (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v20, *(void *)(v25 + 48) + v26, v19);
    uint64_t v27 = *(void *)(v25 + 56);
    uint64_t v28 = v44;
    unint64_t v29 = *(void *)(v43 + 72) * v24;
    sub_2347D8178(v27 + v29, v21, v44);
    (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(*(void *)(i + 48) + v26, v20, v19);
  }
  int64_t v32 = v30 + 2;
  if (v32 >= v37)
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t v33 = v35;
    uint64_t v34 = v46;
    goto LABEL_25;
  }
  unint64_t v31 = *(void *)(v36 + 8 * v32);
  if (v31)
  {
    int64_t v15 = v32;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v15 = v32 + 1;
    if (__OFADD__(v32, 1)) {
      break;
    }
    if (v15 >= v37) {
      goto LABEL_23;
    }
    unint64_t v31 = *(void *)(v36 + 8 * v15);
    ++v32;
    if (v31) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_2347D7944()
{
  return sub_2347D75D8(type metadata accessor for CapturedRoom.Object, (uint64_t *)&unk_2687AEF50, type metadata accessor for CapturedRoom.Object);
}

void *sub_2347D7978()
{
  uint64_t v1 = sub_2347ED5C0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2687AECE8);
  unint64_t v23 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_2347EEED0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    id result = (void *)swift_release();
    *unint64_t v23 = v7;
    return result;
  }
  id result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v24 = v5 + 64;
  int64_t v25 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v26 = v2 + 32;
  uint64_t v27 = v2 + 16;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v25) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_9:
    unint64_t v16 = *(void *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 48) + v16, v1);
    uint64_t v17 = 8 * v15;
    uint64_t v18 = *(void *)(*(void *)(v5 + 56) + 8 * v15);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 48) + v16, v4, v1);
    *(void *)(*(void *)(v7 + 56) + v17) = v18;
    id result = (void *)swift_unknownObjectRetain();
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v25) {
    goto LABEL_23;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_2347D7C10()
{
  uint64_t v1 = sub_2347ED490();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2687AF080);
  unint64_t v23 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_2347EEED0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    id result = (void *)swift_release();
    *unint64_t v23 = v7;
    return result;
  }
  id result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v24 = v5 + 64;
  int64_t v25 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v26 = v2 + 32;
  uint64_t v27 = v2 + 16;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v25) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_9:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v5 + 48) + 8 * v15);
    unint64_t v18 = *(void *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 56) + v18, v1);
    *(void *)(*(void *)(v7 + 48) + v16) = v17;
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 56) + v18, v4, v1);
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v25) {
    goto LABEL_23;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_2347D7EA4()
{
  uint64_t v1 = sub_2347ED490();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2687AF078);
  uint64_t v22 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_2347EEED0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    id result = (void *)swift_release();
    *uint64_t v22 = v7;
    return result;
  }
  id result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v23 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v26 = v2 + 16;
  int64_t v24 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v25 = v2 + 32;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v18 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v18 >= v24) {
      goto LABEL_23;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v18);
    ++v10;
    if (!v19)
    {
      int64_t v10 = v18 + 1;
      if (v18 + 1 >= v24) {
        goto LABEL_23;
      }
      unint64_t v19 = *(void *)(v23 + 8 * v10);
      if (!v19) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v10 << 6);
LABEL_9:
    char v16 = *(unsigned char *)(*(void *)(v5 + 48) + v15);
    unint64_t v17 = *(void *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 56) + v17, v1);
    *(unsigned char *)(*(void *)(v7 + 48) + v15) = v16;
    id result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 56) + v17, v4, v1);
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v24) {
    goto LABEL_23;
  }
  unint64_t v19 = *(void *)(v23 + 8 * v20);
  if (v19)
  {
    int64_t v10 = v20;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v10 >= v24) {
      goto LABEL_23;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v10);
    ++v20;
    if (v19) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_2347D8130(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2347D8178(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2347D81E0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2347D8248(long long *a1, uint64_t a2)
{
  uint64_t v3 = *((void *)a1 + 8);
  long long v4 = a1[1];
  long long v26 = *a1;
  long long v27 = v4;
  long long v5 = a1[3];
  long long v28 = a1[2];
  long long v29 = v5;
  uint64_t v30 = v3;
  sub_2347EF200();
  uint64_t v6 = a2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v12 = 0;
  int64_t v13 = 0;
  while (1)
  {
    if (v9)
    {
      unint64_t v14 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v15 = v14 | (v13 << 6);
      goto LABEL_5;
    }
    if (__OFADD__(v13++, 1)) {
      goto LABEL_19;
    }
    if (v13 >= v10)
    {
LABEL_17:
      swift_release();
      return sub_2347EF1D0();
    }
    unint64_t v18 = *(void *)(v6 + 8 * v13);
    if (!v18) {
      break;
    }
LABEL_16:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v13 << 6);
LABEL_5:
    sub_23470BA38(*(void *)(a2 + 48) + 40 * v15, (uint64_t)v24);
    long long v21 = v24[0];
    long long v22 = v24[1];
    uint64_t v23 = v25;
    sub_2347EF1C0();
    sub_2346A1DCC((uint64_t)&v21, (uint64_t)v20);
    __swift_project_boxed_opaque_existential_1(v20, v20[3]);
    swift_getDynamicType();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2687ACED0);
    sub_2347EE690();
    sub_2347EE6C0();
    swift_bridgeObjectRelease();
    __swift_project_boxed_opaque_existential_1(&v21, *((uint64_t *)&v22 + 1));
    sub_2347EE750();
    sub_2347EE6C0();
    swift_bridgeObjectRelease();
    uint64_t v16 = sub_2347EF200();
    uint64_t result = sub_23470BA94((uint64_t)&v21);
    v12 ^= v16;
  }
  int64_t v19 = v13 + 1;
  if (v13 + 1 >= v10) {
    goto LABEL_17;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    ++v13;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v13 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v13 >= v10) {
      goto LABEL_17;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v13);
    ++v19;
    if (v18) {
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for PlaceholderEntity()
{
  uint64_t result = qword_2687AF088;
  if (!qword_2687AF088) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2347D84E0()
{
  uint64_t result = sub_2347ED5C0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_2347D8590(uint64_t a1, char a2)
{
  int v27 = a2 & 1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2687ADFA8);
  MEMORY[0x270FA5388](v4 - 8);
  long long v28 = &v26[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_2347ED9B0();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v7 = sub_2347EDAB0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  int64_t v10 = &v26[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2687AF098);
  MEMORY[0x270FA5388](v11 - 8);
  int64_t v13 = &v26[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = sub_2347ED5C0();
  uint64_t v15 = *(void *)(v14 - 8);
  double v16 = MEMORY[0x270FA5388](v14);
  unint64_t v18 = &v26[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  int64_t v19 = (void *)(v2 + qword_2687BE510);
  v19[1] = 0;
  *int64_t v19 = 0;
  (*(void (**)(unsigned char *, uint64_t, uint64_t, double))(v15 + 16))(v18, a1 + OBJC_IVAR____TtC8RoomPlan8ScanItem_uuid, v14, v16);
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v15 + 32))(v2 + qword_2687BE500, v18, v14);
  *(unsigned char *)(v2 + qword_2687BE508) = v27;
  uint64_t v20 = sub_2347ED690();
  (*(void (**)(unsigned char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F16208], v7);
  swift_retain();
  sub_2347ED9A0();
  sub_2347EDAC0();
  uint64_t v21 = sub_2347EDAE0();
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v13, 0, 1, v21);
  long long v22 = (void (*)(unsigned char *, void))sub_2347EDEB0();
  sub_2347EDF20();
  v22(v29, 0);
  sub_2347ED8E0();
  sub_2347ED8C0();
  uint64_t v23 = v28;
  sub_2347ED960();
  uint64_t v24 = sub_2347ED990();
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v23, 0, 1, v24);
  type metadata accessor for PlaceholderEntity();
  sub_2347D9378();
  sub_2347EDFF0();
  swift_release();
  swift_release();
  return v20;
}

void sub_2347D89A0()
{
  uint64_t v0 = (void *)(swift_allocObject() + qword_2687BE510);
  *uint64_t v0 = 0;
  v0[1] = 0;
  swift_release();
  sub_2347EEEA0();
  __break(1u);
}

uint64_t sub_2347D8A20()
{
  uint64_t v1 = v0;
  *(void *)&long long v62 = sub_2347ED670();
  *(void *)&long long v61 = *(void *)(v62 - 8);
  MEMORY[0x270FA5388](v62);
  unint64_t v65 = (char *)&v58 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v64 = sub_2347EDF00();
  *(void *)&long long v63 = *(void *)(v64 - 8);
  MEMORY[0x270FA5388](v64);
  uint64_t v4 = (char *)&v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2687AF098);
  MEMORY[0x270FA5388](v5 - 8);
  *(void *)&long long v60 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v58 - v8;
  uint64_t v10 = sub_2347EDAE0();
  *(void *)&long long v66 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  id v59 = (char *)&v58 - v14;
  uint64_t v15 = sub_2347ED5C0();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  unint64_t v18 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2687ABCC8 != -1) {
    swift_once();
  }
  uint64_t v19 = qword_2687BDE30;
  uint64_t v20 = v1;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v1 + qword_2687BE500, v15);
  swift_beginAccess();
  uint64_t v21 = *(void *)(v19 + 24);
  if (!*(void *)(v21 + 16)) {
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
  swift_bridgeObjectRetain();
  unint64_t v22 = sub_2347BFA88((uint64_t)v18);
  if ((v23 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
  uint64_t v24 = *(void *)(*(void *)(v21 + 56) + 8 * v22);
  swift_retain();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  uint64_t v25 = 0;
  __n128 v26 = *(__n128 *)(v24 + OBJC_IVAR____TtC8RoomPlan8ScanItem_rawDimensions);
  uint64_t v27 = v20;
  long long v28 = (__n128 *)(v20 + qword_2687BE510);
  long long v29 = *(_OWORD *)(v20 + qword_2687BE510);
  uint64_t v30 = v66;
  while (1)
  {
    __n128 v67 = v26;
    float v33 = *(float *)((unint64_t)&v67 & 0xFFFFFFFFFFFFFFF3 | (4 * (v25 & 3)));
    long long v68 = v29;
    float v34 = *(float *)((unint64_t)&v68 & 0xFFFFFFFFFFFFFFF3 | (4 * (v25 & 3)));
    BOOL v31 = v33 == v34;
    if (v25 == 2) {
      break;
    }
    while (1)
    {
      ++v25;
      if (v31) {
        break;
      }
      if (v25 == 2) {
        goto LABEL_13;
      }
      BOOL v31 = 0;
    }
  }
  if (v33 != v34)
  {
LABEL_13:
    *long long v28 = v26;
    sub_2347EDEC0();
    sub_2347EDF10();
    (*(void (**)(char *, void))(v63 + 8))(v4, v64);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v9, 1, v10) == 1)
    {
      uint64_t v35 = sub_2347D9318((uint64_t)v9);
    }
    else
    {
      uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
      v36(v12, v9, v10);
      int64_t v37 = v59;
      v36(v59, v12, v10);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2687AE8B0);
      uint64_t v38 = swift_allocObject();
      *(_OWORD *)(v38 + 16) = xmmword_2347F19B0;
      sub_2347ED900();
      *(void *)(v38 + 32) = MEMORY[0x237DC5870](*v28);
      v69[0] = v38;
      sub_2347EE7F0();
      sub_2347EDAD0();
      uint64_t v39 = v60;
      (*(void (**)(void, char *, uint64_t))(v30 + 16))(v60, v37, v10);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v30 + 56))(v39, 0, 1, v10);
      uint64_t v40 = (void (*)(void *, void))sub_2347EDEB0();
      sub_2347EDF20();
      v40(v69, 0);
      uint64_t v35 = (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v37, v10);
    }
    uint64_t v41 = v62;
    uint64_t v42 = v61;
    if (*(unsigned char *)(v27 + qword_2687BE508)) {
      uint64_t v43 = &OBJC_IVAR____TtC8RoomPlan8ScanItem_dollhousePosition;
    }
    else {
      uint64_t v43 = &OBJC_IVAR____TtC8RoomPlan8ScanItem_worldSpacePosition;
    }
    __n128 v44 = *(__n128 *)(v24 + *v43);
    uint64_t v45 = &OBJC_IVAR____TtC8RoomPlan8ScanItem_dollhouseOrientation;
    if (!*(unsigned char *)(v27 + qword_2687BE508)) {
      uint64_t v45 = &OBJC_IVAR____TtC8RoomPlan8ScanItem_worldSpaceOrientation;
    }
    *(double *)&long long v46 = MEMORY[0x237DC6930](v35, v44, *(__n128 *)(v24 + *v45), (__n128)xmmword_2347F1A00);
    long long v63 = v47;
    long long v64 = v46;
    long long v62 = v48;
    long long v66 = v49;
    type metadata accessor for PlaceholderEntity();
    uint64_t v50 = (void (*)(void *, void))sub_2347ED790();
    uint64_t v52 = v51;
    sub_2347EF180();
    long long v61 = v53;
    sub_2347EE9A0();
    long long v60 = v54;
    sub_2347EE990();
    *uint64_t v52 = v55;
    long long v56 = v61;
    v52[1] = v60;
    v52[2] = v56;
    v50(v69, 0);
    uint64_t v57 = v65;
    sub_2347EDEA0();
    sub_2347ED600();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v57, v41);
    REMeshComponentGetComponentType();
    if (REEntityGetComponentByClass()) {
      REMeshComponentSetBoundsMargin();
    }
  }
  return swift_release();
}

uint64_t sub_2347D9188()
{
  uint64_t v1 = v0 + qword_2687BE500;
  uint64_t v2 = sub_2347ED5C0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(v1, v2);
}

uint64_t sub_2347D91F4()
{
  uint64_t v0 = sub_2347EDFC0() + qword_2687BE500;
  uint64_t v1 = sub_2347ED5C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0, v1);

  return swift_deallocClassInstance();
}

uint64_t sub_2347D929C()
{
  return type metadata accessor for PlaceholderEntity();
}

uint64_t sub_2347D92A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + qword_2687BE500;
  uint64_t v4 = sub_2347ED5C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_2347D9318(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2687AF098);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_2347D9378()
{
  unint64_t result = qword_2687AF0A0;
  if (!qword_2687AF0A0)
  {
    type metadata accessor for PlaceholderEntity();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2687AF0A0);
  }
  return result;
}

uint64_t sub_2347D93D0(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  v145[3] = *MEMORY[0x263EF8340];
  swift_unknownObjectWeakInit();
  __asm { FMOV            V0.2S, #16.0 }
  *(void *)(v4 + 56) = _D0;
  type metadata accessor for GlyphState();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(unsigned char *)(v15 + 32) = 1;
  *(_OWORD *)(v15 + 48) = 0u;
  *(_OWORD *)(v15 + 64) = 0u;
  *(_OWORD *)(v15 + 80) = 0u;
  *(_OWORD *)(v15 + 96) = 0u;
  *(_OWORD *)(v15 + 112) = 0u;
  *(_OWORD *)(v15 + 128) = 0u;
  *(void *)(v4 + 64) = v15;
  type metadata accessor for AnimTime();
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_2347F1FC0;
  *(void *)(v16 + 32) = 0;
  *(void *)(v4 + 72) = v16;
  *(_DWORD *)(v4 + 80) = 1024416809;
  *(void *)(v4 + 88) = sub_2346BF9D4();
  *(void *)(v4 + 96) = v17;
  *(void *)(v4 + 104) = v18;
  *(void *)(v4 + 112) = sub_2346BFBBC();
  double v125 = (uint64_t *)(v4 + 112);
  *(void *)(v4 + 120) = v19;
  *(void *)(v4 + 128) = v20;
  *(void *)(v4 + 136) = sub_2346BFBBC();
  uint64_t v21 = v4 + 136;
  *(void *)(v4 + 144) = v22;
  *(void *)(v4 + 152) = v23;
  type metadata accessor for StateSpring();
  uint64_t ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  *(void *)(v21 + 24) = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), sel_init);
  *(void *)(v21 + 32) = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), sel_init);
  *(void *)(v21 + 40) = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), sel_init);
  *(_OWORD *)(v21 + 120) = 0u;
  *(_OWORD *)(v21 + 104) = 0u;
  *(_OWORD *)(v21 + 56) = 0u;
  *(_OWORD *)(v21 + 72) = 0u;
  *(void *)(v21 + 88) = 0;
  long long v25 = *MEMORY[0x263EF89A8];
  long long v26 = *(_OWORD *)(MEMORY[0x263EF89A8] + 16);
  long long v27 = *(_OWORD *)(MEMORY[0x263EF89A8] + 32);
  long long v28 = *(_OWORD *)(MEMORY[0x263EF89A8] + 48);
  *(_OWORD *)(v21 + 136) = *MEMORY[0x263EF89A8];
  *(_OWORD *)(v21 + 152) = v26;
  *(_OWORD *)(v21 + 168) = v27;
  *(_OWORD *)(v21 + 184) = v28;
  *(_OWORD *)(v21 + 200) = v25;
  *(_OWORD *)(v21 + 216) = v26;
  *(_OWORD *)(v21 + 232) = v27;
  *(_OWORD *)(v21 + 248) = v28;
  *(_OWORD *)(v21 + 264) = v25;
  *(_OWORD *)(v21 + 280) = v26;
  *(_OWORD *)(v21 + 296) = v27;
  *(_OWORD *)(v21 + 312) = v28;
  *(_OWORD *)(v21 + 328) = v25;
  *(_OWORD *)(v21 + 344) = v26;
  *(_OWORD *)(v21 + 360) = v27;
  *(_OWORD *)(v21 + 376) = v28;
  type metadata accessor for DeviceController();
  *(void *)(v21 + 416) = 0;
  *(void *)(v21 + 424) = 0;
  *(void *)(v21 + 408) = 0;
  swift_allocObject();
  sub_2347143C8();
  *(void *)(v21 + 432) = v29;
  *(_DWORD *)(v21 + 440) = 0;
  *(unsigned char *)(v21 + 444) = 1;
  *(void *)(v21 + 448) = 0xBFF0000000000000;
  *(void *)(v21 + 456) = 0xBFF0000000000000;
  *(void *)(v21 - 120) = a2;
  *(void *)(v21 - 112) = a3;
  uint64_t v135 = a4;
  *(void *)(v21 - 104) = a4;
  swift_unknownObjectWeakAssign();
  type metadata accessor for MetalConstants();
  swift_unknownObjectRetain();
  swift_initStaticObject();
  *(void *)(v21 - 96) = sub_2346FFD78();
  type metadata accessor for DotsRenderer();
  swift_allocObject();
  uint64_t v30 = (void *)swift_unknownObjectRetain();
  uint64_t v129 = a3;
  uint64_t v31 = sub_234768D50(v30, a3);
  if (v143)
  {

    uint64_t v31 = 0;
  }
  *(void *)(v5 + 560) = v31;
  swift_release();
  objc_msgSend(a1, sel_addSublayer_, *(void *)(*(void *)(v5 + 568) + 32));
  objc_msgSend(a1, sel_addSublayer_, *(void *)(*(void *)(v5 + 568) + 40));
  objc_msgSend(a1, sel_addSublayer_, *(void *)(*(void *)(v5 + 568) + 56));
  objc_msgSend(a1, sel_setAllowsGroupBlending_, 1);
  int64_t v32 = *(void **)(v5 + 40);
  float v33 = (void *)sub_2347EE5F0();
  id v34 = objc_msgSend(v32, sel_newFunctionWithName_, v33);

  id v142 = v34;
  if (!v34) {
    goto LABEL_70;
  }
  uint64_t v35 = *(void **)(v5 + 40);
  uint64_t v36 = (void *)sub_2347EE5F0();
  id v37 = objc_msgSend(v35, sel_newFunctionWithName_, v36);

  id v141 = v37;
  if (!v37)
  {
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  uint64_t v38 = *(void **)(v5 + 40);
  uint64_t v39 = (void *)sub_2347EE5F0();
  id v40 = objc_msgSend(v38, sel_newFunctionWithName_, v39);

  id v144 = v40;
  if (!v40)
  {
LABEL_72:
    __break(1u);
    goto LABEL_73;
  }
  id v128 = a1;
  id v41 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F12A80]), sel_init);
  id v42 = objc_msgSend(v41, sel_attributes);
  uint64_t v43 = (char **)&off_264BF8000;
  id v44 = objc_msgSend(v42, sel_objectAtIndexedSubscript_, 0);

  if (!v44)
  {
LABEL_73:
    __break(1u);
    goto LABEL_74;
  }
  objc_msgSend(v44, sel_setFormat_, 30);

  id v45 = objc_msgSend(v41, sel_attributes);
  id v46 = objc_msgSend(v45, sel_objectAtIndexedSubscript_, 0);

  if (!v46)
  {
LABEL_74:
    __break(1u);
    goto LABEL_75;
  }
  objc_msgSend(v46, sel_setOffset_, 0);

  id v47 = objc_msgSend(v41, sel_attributes);
  id v48 = objc_msgSend(v47, sel_objectAtIndexedSubscript_, 0);

  if (!v48)
  {
LABEL_75:
    __break(1u);
    goto LABEL_76;
  }
  objc_msgSend(v48, sel_setBufferIndex_, 0);

  id v49 = objc_msgSend(v41, sel_attributes);
  id v50 = objc_msgSend(v49, sel_objectAtIndexedSubscript_, 1);

  if (!v50)
  {
LABEL_76:
    __break(1u);
    goto LABEL_77;
  }
  objc_msgSend(v50, sel_setFormat_, 28);

  id v51 = objc_msgSend(v41, sel_attributes);
  id v52 = objc_msgSend(v51, sel_objectAtIndexedSubscript_, 1);

  if (!v52)
  {
LABEL_77:
    __break(1u);
    goto LABEL_78;
  }
  objc_msgSend(v52, sel_setOffset_, 16);

  id v53 = objc_msgSend(v41, sel_attributes);
  id v54 = objc_msgSend(v53, sel_objectAtIndexedSubscript_, 1);

  if (!v54)
  {
LABEL_78:
    __break(1u);
    goto LABEL_79;
  }
  objc_msgSend(v54, sel_setBufferIndex_, 0);

  id v55 = objc_msgSend(v41, sel_layouts);
  id v56 = objc_msgSend(v55, sel_objectAtIndexedSubscript_, 0);

  if (!v56)
  {
LABEL_79:
    __break(1u);
    goto LABEL_80;
  }
  objc_msgSend(v56, sel_setStepFunction_, 4);

  id v57 = objc_msgSend(v41, sel_layouts);
  id v58 = objc_msgSend(v57, sel_objectAtIndexedSubscript_, 0);

  if (!v58)
  {
LABEL_80:
    __break(1u);
    goto LABEL_81;
  }
  objc_msgSend(v58, sel_setStepRate_, 1);

  id v59 = objc_msgSend(v41, sel_layouts);
  id v60 = objc_msgSend(v59, sel_objectAtIndexedSubscript_, 0);

  if (!v60)
  {
LABEL_81:
    __break(1u);
    goto LABEL_82;
  }
  objc_msgSend(v60, sel_setStride_, 32);

  id v61 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F129C0]), sel_init);
  objc_msgSend(v61, sel_setVertexDescriptor_, v41);
  objc_msgSend(v61, sel_setTessellationFactorScaleEnabled_, 0);
  objc_msgSend(v61, sel_setTessellationFactorFormat_, 0);
  objc_msgSend(v61, sel_setTessellationControlPointIndexType_, 1);
  objc_msgSend(v61, sel_setTessellationFactorStepFunction_, 1);
  objc_msgSend(v61, sel_setTessellationOutputWindingOrder_, 0);
  objc_msgSend(v61, sel_setTessellationPartitionMode_, 3);
  objc_msgSend(v61, sel_setMaxTessellationFactor_, 16);
  objc_msgSend(v61, sel_setVertexFunction_, v141);
  objc_msgSend(v61, sel_setFragmentFunction_, v144);
  id v62 = objc_msgSend(v61, sel_colorAttachments);
  id v63 = objc_msgSend(v62, sel_objectAtIndexedSubscript_, 0);

  if (!v63)
  {
LABEL_82:
    __break(1u);
    goto LABEL_83;
  }
  objc_msgSend(v63, sel_setBlendingEnabled_, 1);

  id v64 = objc_msgSend(v61, sel_colorAttachments);
  id v65 = objc_msgSend(v64, sel_objectAtIndexedSubscript_, 0);

  if (!v65)
  {
LABEL_83:
    __break(1u);
    goto LABEL_84;
  }
  objc_msgSend(v65, sel_setRgbBlendOperation_, 4);

  id v66 = objc_msgSend(v61, sel_colorAttachments);
  id v67 = objc_msgSend(v66, sel_objectAtIndexedSubscript_, 0);

  if (!v67)
  {
LABEL_84:
    __break(1u);
    goto LABEL_85;
  }
  objc_msgSend(v67, sel_setAlphaBlendOperation_, 4);

  id v68 = objc_msgSend(v61, sel_colorAttachments);
  id v69 = objc_msgSend(v68, sel_objectAtIndexedSubscript_, 0);

  if (!v69)
  {
LABEL_85:
    __break(1u);
    goto LABEL_86;
  }
  objc_msgSend(v69, sel_setSourceRGBBlendFactor_, 1);

  id v70 = objc_msgSend(v61, sel_colorAttachments);
  id v71 = objc_msgSend(v70, sel_objectAtIndexedSubscript_, 0);

  if (!v71)
  {
LABEL_86:
    __break(1u);
    goto LABEL_87;
  }
  objc_msgSend(v71, sel_setSourceAlphaBlendFactor_, 1);

  id v72 = objc_msgSend(v61, sel_colorAttachments);
  id v73 = objc_msgSend(v72, sel_objectAtIndexedSubscript_, 0);

  if (!v73)
  {
LABEL_87:
    __break(1u);
    goto LABEL_88;
  }
  objc_msgSend(v73, sel_setDestinationRGBBlendFactor_, 5);

  id v74 = objc_msgSend(v61, sel_colorAttachments);
  id v75 = objc_msgSend(v74, sel_objectAtIndexedSubscript_, 0);

  if (!v75)
  {
LABEL_88:
    __break(1u);
LABEL_89:
    __break(1u);
  }
  objc_msgSend(v75, sel_setDestinationAlphaBlendFactor_, 5);

  id v76 = objc_msgSend(v61, sel_colorAttachments);
  id v77 = objc_msgSend(v76, sel_objectAtIndexedSubscript_, 0);

  if (!v77) {
    goto LABEL_89;
  }
  objc_msgSend(v77, sel_setPixelFormat_, v129);

  objc_msgSend(v61, sel_setRasterSampleCount_, v135);
  v145[0] = 0;
  id v78 = objc_msgSend(a2, sel_newRenderPipelineStateWithDescriptor_error_, v61, v145);
  id v79 = v78;
  long long v80 = (void *)v145[0];
  if (!v78
    || (*(void *)(v5 + 536) = v78,
        v145[0] = 0,
        id v81 = v80,
        id v82 = objc_msgSend(a2, sel_newComputePipelineStateWithFunction_error_, v142, v145),
        long long v80 = (void *)v145[0],
        !v82))
  {
    id v98 = v80;
    sub_2347ED350();

    swift_willThrow();
    swift_unknownObjectRelease();

    swift_unknownObjectRelease();
    swift_unknownObjectRelease();

    swift_willThrow();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectWeakDestroy();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    if (v79) {
      swift_unknownObjectRelease();
    }
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    type metadata accessor for GlyphRenderer();
    swift_deallocPartialClassInstance();
    return v5;
  }
  *(void *)(v5 + 528) = v82;
  type metadata accessor for MetalSplineData();
  swift_allocObject();
  swift_unknownObjectRetain();
  id v83 = v80;
  sub_2347B78E4(a2);
  *(void *)(v5 + 552) = v84;
  uint64_t result = swift_release();
  uint64_t v86 = *(void *)(v5 + 552);
  if (v86)
  {
    unint64_t v87 = *(void *)(v86 + 72);
    if (v87)
    {
      swift_beginAccess();
      uint64_t v88 = *(void *)(v87 + 16);
      if (*(void *)(v88 + 16) < 3uLL)
      {
        __break(1u);
      }
      else
      {
        int v89 = *(char **)(v88 + 48);
        swift_bridgeObjectRetain();
        swift_retain();
        sub_2347B8770(v89);
        swift_bridgeObjectRelease();
        swift_release();
        v90.n128_f64[0] = sub_2347B8ED8();
        __n128 v130 = v91;
        __n128 v136 = v90;
        swift_beginAccess();
        sub_2346BF868(v136, v130);
        swift_endAccess();
        swift_beginAccess();
        sub_2346BF708(*(void *)(v5 + 88));
        __n128 v131 = v93;
        __n128 v137 = v92;
        swift_endAccess();
        swift_beginAccess();
        sub_2346BF6FC(v137, v131);
        swift_endAccess();
        swift_beginAccess();
        sub_2346BF708(*(void *)(v5 + 88));
        long long v132 = v95;
        long long v138 = v94;
        swift_endAccess();
        *(_OWORD *)(v5 + 192) = v138;
        *(_OWORD *)(v5 + 208) = v132;
        swift_beginAccess();
        *(void *)(v5 + 120) = 0x3FE6666666666666;
        sub_2346BF444();
        if (*(unsigned __int8 *)(*(void *)(v5 + 64) + 32) - 1 >= 2)
        {
          if (*(unsigned char *)(*(void *)(v5 + 64) + 32))
          {
            __n128 v96 = (__n128)xmmword_2347FA400;
            unint64_t v99 = 0x3FD3333333333333;
          }
          else
          {
            __n128 v96 = (__n128)xmmword_2347FA3F0;
            unint64_t v99 = 0x3FC3333333333333;
          }
          _Q0 = (__n128)vdupq_n_s64(v99);
        }
        else
        {
          __n128 v96 = (__n128)xmmword_2347F0F20;
          __asm { FMOV            V0.2D, #1.0 }
        }
        sub_2346BF320(_Q0, v96);
        swift_endAccess();
        swift_beginAccess();
        uint64_t v86 = *v125;
        unint64_t v87 = *v125 & 0xC000000000000001;
        if (!v87)
        {
          if (!*(void *)((v86 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_64;
          }
          id v100 = *(id *)(v86 + 32);
LABEL_40:
          id v101 = v100;
          uint64_t v43 = &selRef_setOpaque_;
          objc_msgSend(v100, sel_target);
          unint64_t v139 = v102;

          if (v87)
          {
            id v103 = (id)MEMORY[0x237DC6CF0](1, v86);
          }
          else
          {
            if (*(void *)((v86 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL)
            {
LABEL_66:
              __break(1u);
              goto LABEL_67;
            }
            id v103 = *(id *)(v86 + 40);
          }
          float v104 = v103;
          objc_msgSend(v103, sel_target);
          unint64_t v133 = v105;

          if (v87)
          {
            id v106 = (id)MEMORY[0x237DC6CF0](2, v86);
          }
          else
          {
            if (*(void *)((v86 & 0xFFFFFFFFFFFFFF8) + 0x10) < 3uLL)
            {
LABEL_67:
              __break(1u);
              goto LABEL_68;
            }
            id v106 = *(id *)(v86 + 48);
          }
          int v107 = v106;
          objc_msgSend(v106, sel_target);
          unint64_t v126 = v108;
          swift_endAccess();

          swift_beginAccess();
          v109.n128_u64[0] = v139;
          v109.n128_u64[1] = v133;
          sub_2346BF314(v109, (__n128)v126);
          swift_endAccess();
          swift_beginAccess();
          *(void *)(v5 + 144) = 0x3FE6666666666666;
          sub_2346BF444();
          v110.i32[0] = 2;
          v111.i32[0] = *(unsigned __int8 *)(*(void *)(v5 + 64) + 32) - 1;
          sub_2346BF320((__n128)vandq_s8((int8x16_t)xmmword_2347F0F10, (int8x16_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vcgtq_u32(v110, v111), 0)), (__n128)0);
          swift_endAccess();
          swift_beginAccess();
          uint64_t v86 = *(void *)(v5 + 136);
          unint64_t v87 = v86 & 0xC000000000000001;
          if ((v86 & 0xC000000000000001) == 0)
          {
            if (*(void *)((v86 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              id v112 = *(id *)(v86 + 32);
LABEL_51:
              id v113 = v112;
              [v112 v43[36]];
              unint64_t v140 = v114;

              if (v87)
              {
                id v115 = (id)MEMORY[0x237DC6CF0](1, v86);
LABEL_55:
                double v116 = v115;
                [v115 v43[36]];
                unint64_t v134 = v117;

                if (v87)
                {
                  id v118 = (id)MEMORY[0x237DC6CF0](2, v86);
LABEL_59:
                  float v119 = v118;
                  [v118 v43[36]];
                  unint64_t v127 = v120;
                  swift_endAccess();

                  swift_beginAccess();
                  v121.n128_u64[0] = v140;
                  v121.n128_u64[1] = v134;
                  sub_2346BF314(v121, (__n128)v127);
                  swift_endAccess();
                  id v122 = *(id *)(v5 + 160);
                  objc_msgSend(v122, sel_parameters);
                  objc_msgSend(v122, sel_setParameters_);

                  objc_msgSend(*(id *)(v5 + 160), sel_setTarget_, 0.0);
                  objc_msgSend(*(id *)(v5 + 160), sel_setValue_, 0.0);
                  id v123 = *(id *)(v5 + 168);
                  objc_msgSend(v123, sel_parameters);
                  objc_msgSend(v123, sel_setParameters_);

                  objc_msgSend(*(id *)(v5 + 168), sel_setTarget_, 0.0);
                  objc_msgSend(*(id *)(v5 + 168), sel_setValue_, 0.0);
                  objc_msgSend(*(id *)(v5 + 176), sel_setTarget_, 0.0);
                  id v124 = *(id *)(v5 + 176);
                  objc_msgSend(v124, sel_setValue_, 0.0);

                  swift_unknownObjectRelease();
                  swift_unknownObjectRelease();
                  swift_unknownObjectRelease();

                  swift_unknownObjectRelease();
                  *(void *)(*(void *)(v5 + 64) + 24) = &off_26E7777A0;
                  swift_unknownObjectWeakAssign();
                  return v5;
                }
                if (*(void *)((v86 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 3uLL)
                {
                  id v118 = *(id *)(v86 + 48);
                  goto LABEL_59;
                }
                goto LABEL_69;
              }
              if (*(void *)((v86 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 2uLL)
              {
                id v115 = *(id *)(v86 + 40);
                goto LABEL_55;
              }
LABEL_68:
              __break(1u);
LABEL_69:
              __break(1u);
LABEL_70:
              __break(1u);
              goto LABEL_71;
            }
            __break(1u);
            goto LABEL_66;
          }
LABEL_64:
          id v112 = (id)MEMORY[0x237DC6CF0](0, v86);
          goto LABEL_51;
        }
      }
      id v100 = (id)MEMORY[0x237DC6CF0](0, v86);
      goto LABEL_40;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_2347DA5F8()
{
  uint64_t v1 = v0;
  if (*(void *)(v0 + 552))
  {
    swift_retain();
    sub_2347B8434();
    swift_release();
    *(_DWORD *)(*(void *)(v0 + 72) + 20) = *(_DWORD *)(*(void *)(v0 + 72) + 16);
    if (*(unsigned char *)(*(void *)(v0 + 64) + 32) == 1) {
      double v2 = 0.0;
    }
    else {
      double v2 = 1.0;
    }
    objc_msgSend(*(id *)(v0 + 168), sel_setTarget_, v2);
    int v3 = *(unsigned __int8 *)(*(void *)(v0 + 64) + 32);
    if (v3 == 3 || v3 == 0) {
      double v5 = 1.0;
    }
    else {
      double v5 = 0.0;
    }
    objc_msgSend(*(id *)(v0 + 160), sel_setTarget_, v5);
    if (*(unsigned char *)(*(void *)(v0 + 64) + 32)) {
      double v6 = 1.0;
    }
    else {
      double v6 = 0.0;
    }
    objc_msgSend(*(id *)(v0 + 176), sel_setTarget_, v6);
    if (*(unsigned char *)(*(void *)(v0 + 64) + 32) == 1)
    {
      id v7 = *(id *)(v0 + 168);
      objc_msgSend(v7, sel_target);
      objc_msgSend(v7, sel_setValue_);

      id v8 = *(id *)(v1 + 160);
      objc_msgSend(v8, sel_target);
      objc_msgSend(v8, sel_setValue_);

      id v9 = *(id *)(v1 + 176);
      objc_msgSend(v9, sel_target);
      objc_msgSend(v9, sel_setValue_);

      *(_DWORD *)(*(void *)(v1 + 72) + 16) = 0;
      sub_2347B8F84();
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_2347DA748()
{
  uint64_t v1 = (__n128 *)v0[4].n128_u64[0];
  __n128 v6 = v1[3];
  __n128 v8 = v1[4];
  swift_beginAccess();
  sub_2346BF868(v6, v8);
  sub_2346BF6FC(v0[12], v0[13]);
  uint64_t result = swift_endAccess();
  if (*(unsigned char *)(v0[4].n128_u64[0] + 32) == 1)
  {
    unint64_t v3 = swift_bridgeObjectRetain();
    sub_2346BF708(v3);
    __n128 v7 = v5;
    __n128 v9 = v4;
    swift_bridgeObjectRelease();
    swift_beginAccess();
    sub_2346BF6FC(v9, v7);
    return swift_endAccess();
  }
  return result;
}

void sub_2347DA81C()
{
  uint64_t v1 = v0;
  double v2 = *(__n128 **)(v0 + 64);
  __n128 v18 = v2[5];
  __n128 v20 = v2[6];
  unint64_t v3 = (uint64_t *)(v0 + 112);
  swift_beginAccess();
  sub_2346BF320(v18, v20);
  swift_endAccess();
  if (*(unsigned char *)(*(void *)(v1 + 64) + 32) == 1)
  {
    uint64_t v4 = *v3;
    unint64_t v5 = *v3 & 0xC000000000000001;
    if (v5)
    {
      swift_bridgeObjectRetain();
      id v7 = (id)MEMORY[0x237DC6CF0](0, v4);
    }
    else
    {
      if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_17;
      }
      __n128 v6 = *(void **)(v4 + 32);
      swift_bridgeObjectRetain();
      id v7 = v6;
    }
    __n128 v8 = v7;
    objc_msgSend(v7, sel_target);
    unint64_t v21 = v9;

    if (v5)
    {
      id v10 = (id)MEMORY[0x237DC6CF0](1, v4);
LABEL_9:
      uint64_t v11 = v10;
      objc_msgSend(v10, sel_target);
      unint64_t v19 = v12;

      if (v5)
      {
        id v13 = (id)MEMORY[0x237DC6CF0](2, v4);
LABEL_13:
        uint64_t v14 = v13;
        objc_msgSend(v13, sel_target);
        unint64_t v17 = v15;
        swift_bridgeObjectRelease();

        swift_beginAccess();
        v16.n128_u64[0] = v21;
        v16.n128_u64[1] = v19;
        sub_2346BF314(v16, (__n128)v17);
        swift_endAccess();
        return;
      }
      if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 3uLL)
      {
        id v13 = *(id *)(v4 + 48);
        goto LABEL_13;
      }
LABEL_18:
      __break(1u);
      return;
    }
    if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 2uLL)
    {
      id v10 = *(id *)(v4 + 40);
      goto LABEL_9;
    }
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
}

void sub_2347DA9BC()
{
  uint64_t v1 = v0;
  double v2 = *(__n128 **)(v0 + 64);
  __n128 v18 = v2[7];
  __n128 v20 = v2[8];
  unint64_t v3 = (uint64_t *)(v0 + 136);
  swift_beginAccess();
  sub_2346BF320(v18, v20);
  swift_endAccess();
  if (*(unsigned char *)(*(void *)(v1 + 64) + 32) == 1)
  {
    uint64_t v4 = *v3;
    unint64_t v5 = *v3 & 0xC000000000000001;
    if (v5)
    {
      swift_bridgeObjectRetain();
      id v7 = (id)MEMORY[0x237DC6CF0](0, v4);
    }
    else
    {
      if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_17;
      }
      __n128 v6 = *(void **)(v4 + 32);
      swift_bridgeObjectRetain();
      id v7 = v6;
    }
    __n128 v8 = v7;
    objc_msgSend(v7, sel_target);
    unint64_t v21 = v9;

    if (v5)
    {
      id v10 = (id)MEMORY[0x237DC6CF0](1, v4);
LABEL_9:
      uint64_t v11 = v10;
      objc_msgSend(v10, sel_target);
      unint64_t v19 = v12;

      if (v5)
      {
        id v13 = (id)MEMORY[0x237DC6CF0](2, v4);
LABEL_13:
        uint64_t v14 = v13;
        objc_msgSend(v13, sel_target);
        unint64_t v17 = v15;
        swift_bridgeObjectRelease();

        swift_beginAccess();
        v16.n128_u64[0] = v21;
        v16.n128_u64[1] = v19;
        sub_2346BF314(v16, (__n128)v17);
        swift_endAccess();
        return;
      }
      if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 3uLL)
      {
        id v13 = *(id *)(v4 + 48);
        goto LABEL_13;
      }
LABEL_18:
      __break(1u);
      return;
    }
    if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 2uLL)
    {
      id v10 = *(id *)(v4 + 40);
      goto LABEL_9;
    }
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
}

void sub_2347DAB5C(double a1, double a2)
{
  unint64_t v3 = v2;
  if (a1 == 0.0 && a2 == 0.0) {
    return;
  }
  uint64_t v4 = v2[4];
  if (v4 != 1)
  {
    if (a1 <= -9.22337204e18)
    {
      __break(1u);
    }
    else if (a1 < 9.22337204e18)
    {
      if ((*(void *)&a1 & 0x7FF0000000000000) != 0x7FF0000000000000
        && (*(void *)&a2 & 0x7FF0000000000000) != 0x7FF0000000000000)
      {
        if (a2 > -9.22337204e18)
        {
          if (a2 < 9.22337204e18)
          {
            uint64_t v5 = (uint64_t)a1;
            uint64_t v6 = (uint64_t)a2;
            __swift_instantiateConcreteTypeFromMangledName(&qword_2687AD118);
            uint64_t v7 = swift_allocObject();
            *(_OWORD *)(v7 + 16) = xmmword_2347F0FA0;
            sub_2347EED50();
            swift_bridgeObjectRelease();
            sub_2347EF070();
            sub_2347EE6F0();
            swift_bridgeObjectRelease();
            sub_2347EE6F0();
            sub_2347EF070();
            sub_2347EE6F0();
            swift_bridgeObjectRelease();
            *(void *)(v7 + 56) = MEMORY[0x263F8D310];
            *(void *)(v7 + 32) = 0xD000000000000026;
            *(void *)(v7 + 40) = 0x80000002348031F0;
            sub_2347EF190();
            swift_bridgeObjectRelease();
            id v8 = objc_msgSend(self, sel_texture2DDescriptorWithPixelFormat_width_height_mipmapped_, v2[3], v5, v6, 0);
            objc_msgSend(v8, sel_setUsage_, 4);
            objc_msgSend(v8, sel_setTextureType_, 4);
            objc_msgSend(v8, sel_setSampleCount_, v4);
            objc_msgSend(v8, sel_setStorageMode_, 2);
            id v9 = objc_msgSend((id)v3[2], sel_newTextureWithDescriptor_, v8);

            v3[68] = v9;
            swift_unknownObjectRelease();
            return;
          }
LABEL_19:
          __break(1u);
          return;
        }
LABEL_18:
        __break(1u);
        goto LABEL_19;
      }
LABEL_17:
      __break(1u);
      goto LABEL_18;
    }
    __break(1u);
    goto LABEL_17;
  }
  v2[68] = 0;

  swift_unknownObjectRelease();
}

uint64_t sub_2347DAE2C(void *a1)
{
  uint64_t v18 = *MEMORY[0x263EF8340];
  id v2 = objc_msgSend(a1, sel_computeCommandEncoder);
  if (!v2)
  {
    __break(1u);
    goto LABEL_7;
  }
  unint64_t v3 = v2;
  uint64_t v4 = (void *)sub_2347EE5F0();
  objc_msgSend(v3, sel_setLabel_, v4);

  uint64_t v5 = (void *)sub_2347EE5F0();
  objc_msgSend(v3, sel_pushDebugGroup_, v5);

  objc_msgSend(v3, sel_setComputePipelineState_, *(void *)(v1 + 528));
  LODWORD(v16) = *(_DWORD *)(v1 + 56);
  objc_msgSend(v3, sel_setBytes_length_atIndex_, &v16, 4, 0);
  LODWORD(v16) = *(_DWORD *)(v1 + 60);
  objc_msgSend(v3, sel_setBytes_length_atIndex_, &v16, 4, 1);
  uint64_t v6 = *(void *)(v1 + 552);
  if (!v6)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  objc_msgSend(v3, sel_setBuffer_offset_atIndex_, *(void *)(v6 + 40), 0, 2);
  uint64_t v7 = *(void *)(v1 + 552);
  if (!v7)
  {
LABEL_8:
    __break(1u);
LABEL_9:
    __break(1u);
  }
  objc_msgSend(v3, sel_setBuffer_offset_atIndex_, *(void *)(v7 + 32), 0, 3);
  MTLSizeMake_0(1, (uint64_t)&v16);
  uint64_t v8 = *(void *)(v1 + 552);
  if (!v8) {
    goto LABEL_9;
  }
  long long v9 = v16;
  uint64_t v10 = v17;
  MTLSizeMake_0(*(void *)(v8 + 56), (uint64_t)&v16);
  uint64_t v11 = v17;
  long long v12 = v16;
  long long v16 = v9;
  uint64_t v17 = v10;
  long long v14 = v12;
  uint64_t v15 = v11;
  objc_msgSend(v3, sel_dispatchThreadgroups_threadsPerThreadgroup_, &v16, &v14);
  objc_msgSend(v3, sel_popDebugGroup);
  objc_msgSend(v3, sel_endEncoding);
  return swift_unknownObjectRelease();
}

uint64_t sub_2347DB040(void *a1, void *a2)
{
  uint64_t v3 = v2;
  v87[1] = *MEMORY[0x263EF8340];
  uint64_t v6 = (char **)&off_264BF8000;
  objc_msgSend(*(id *)(v3 + 168), sel_value);
  float64_t v78 = v7;
  objc_msgSend(*(id *)(v3 + 160), sel_value);
  _Q1.f64[0] = v78;
  _Q1.f64[1] = v9;
  float32x2_t v10 = vmaxnm_f32(vcvt_f32_f64(_Q1), 0);
  __asm { FMOV            V1.2S, #1.0 }
  float32x2_t v79 = vminnm_f32(v10, *(float32x2_t *)&_Q1.f64[0]);
  v87[0] = v79;
  objc_msgSend(*(id *)(v3 + 176), sel_value);
  *(float *)&double v15 = v15;
  float v86 = fminf(fmaxf(*(float *)&v15, 0.0), 1.0);
  float32x4_t v16 = vaddq_f32(*(float32x4_t *)(v3 + 480), vmulq_lane_f32(vsubq_f32(*(float32x4_t *)(v3 + 416), *(float32x4_t *)(v3 + 480)), v79, 1));
  *(float32x4_t *)(v3 + 336) = vaddq_f32(*(float32x4_t *)(v3 + 464), vmulq_lane_f32(vsubq_f32(*(float32x4_t *)(v3 + 400), *(float32x4_t *)(v3 + 464)), v79, 1));
  *(float32x4_t *)(v3 + 352) = v16;
  float32x4_t v17 = vaddq_f32(*(float32x4_t *)(v3 + 512), vmulq_lane_f32(vsubq_f32(*(float32x4_t *)(v3 + 448), *(float32x4_t *)(v3 + 512)), v79, 1));
  *(float32x4_t *)(v3 + 368) = vaddq_f32(*(float32x4_t *)(v3 + 496), vmulq_lane_f32(vsubq_f32(*(float32x4_t *)(v3 + 432), *(float32x4_t *)(v3 + 496)), v79, 1));
  *(float32x4_t *)(v3 + 384) = v17;
  id v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F129A0]), sel_init);
  id v19 = objc_msgSend(v18, sel_colorAttachments);
  id v20 = objc_msgSend(v19, sel_objectAtIndexedSubscript_, 0);

  if (!v20)
  {
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  uint64_t v21 = *(void *)(v3 + 32);
  if (v21 < 2)
  {
    id v22 = objc_msgSend(a1, sel_texture);
  }
  else
  {
    id v22 = *(id *)(v3 + 544);
    swift_unknownObjectRetain();
  }
  objc_msgSend(v20, sel_setTexture_, v22);

  swift_unknownObjectRelease();
  id v23 = objc_msgSend(v18, sel_colorAttachments);
  id v24 = objc_msgSend(v23, sel_objectAtIndexedSubscript_, 0);

  if (!v24) {
    goto LABEL_38;
  }
  if (v21 < 2) {
    id v25 = 0;
  }
  else {
    id v25 = objc_msgSend(a1, sel_texture);
  }
  objc_msgSend(v24, sel_setResolveTexture_, v25);

  swift_unknownObjectRelease();
  id v26 = objc_msgSend(v18, sel_colorAttachments);
  id v27 = objc_msgSend(v26, sel_objectAtIndexedSubscript_, 0);

  if (!v27) {
    goto LABEL_39;
  }
  objc_msgSend(v27, sel_setClearColor_, 0.0, 0.0, 0.0, 0.0);

  id v28 = objc_msgSend(v18, sel_colorAttachments);
  id v29 = objc_msgSend(v28, sel_objectAtIndexedSubscript_, 0);

  if (!v29)
  {
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  if (v21 <= 1) {
    uint64_t v30 = 1;
  }
  else {
    uint64_t v30 = 2;
  }
  objc_msgSend(v29, sel_setStoreAction_, v30);

  id v31 = objc_msgSend(v18, sel_colorAttachments);
  id v32 = objc_msgSend(v31, sel_objectAtIndexedSubscript_, 0);

  if (!v32) {
    goto LABEL_41;
  }
  objc_msgSend(v32, sel_setLoadAction_, 2);

  id v33 = objc_msgSend(a2, sel_renderCommandEncoderWithDescriptor_, v18);
  if (!v33)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  id v34 = v33;
  uint64_t v35 = (void *)sub_2347EE5F0();
  objc_msgSend(v34, sel_setLabel_, v35);

  uint64_t v36 = (void *)sub_2347EE5F0();
  objc_msgSend(v34, sel_pushDebugGroup_, v36);

  uint64_t v37 = *(void *)(v3 + 552);
  if (!v37)
  {
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  float32x4_t v72 = *(float32x4_t *)(v3 + 336);
  float32x4_t v74 = *(float32x4_t *)(v3 + 352);
  float32x4_t v76 = *(float32x4_t *)(v3 + 368);
  float32x4_t v80 = *(float32x4_t *)(v3 + 384);
  float32x4_t v68 = *(float32x4_t *)(v3 + 272);
  float32x4_t v69 = *(float32x4_t *)(v3 + 288);
  float32x4_t v70 = *(float32x4_t *)(v3 + 304);
  float32x4_t v71 = *(float32x4_t *)(v3 + 320);
  unint64_t v38 = *(void *)(v37 + 64);
  if (!(v38 >> 62))
  {
    uint64_t v39 = *(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v39) {
      goto LABEL_19;
    }
LABEL_33:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_34;
  }
  swift_bridgeObjectRetain();
  if (!sub_2347EEEC0()) {
    goto LABEL_33;
  }
LABEL_19:
  if ((v38 & 0xC000000000000001) != 0)
  {
LABEL_34:
    id v40 = (float32x4_t *)MEMORY[0x237DC6CF0](0, v38);
    goto LABEL_22;
  }
  if (!*(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_36;
  }
  id v40 = *(float32x4_t **)(v38 + 32);
  swift_retain();
LABEL_22:
  swift_bridgeObjectRelease();
  float32x4_t v64 = v40[5];
  float32x4_t v65 = v40[6];
  float32x4_t v66 = v40[7];
  float32x4_t v67 = v40[8];
  swift_release();
  if (*(void *)(v3 + 560))
  {
    float32x4_t v41 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v72, v68.f32[0]), v74, *(float32x2_t *)v68.f32, 1), v76, v68, 2), v80, v68, 3);
    float32x4_t v42 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v72, v69.f32[0]), v74, *(float32x2_t *)v69.f32, 1), v76, v69, 2), v80, v69, 3);
    float32x4_t v43 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v72, v70.f32[0]), v74, *(float32x2_t *)v70.f32, 1), v76, v70, 2), v80, v70, 3);
    float32x4_t v44 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v72, v71.f32[0]), v74, *(float32x2_t *)v71.f32, 1), v76, v71, 2), v80, v71, 3);
    __n128 v81 = (__n128)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v41, v64.f32[0]), v42, *(float32x2_t *)v64.f32, 1), v43, v64, 2), v44, v64, 3);
    __n128 v77 = (__n128)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v41, v65.f32[0]), v42, *(float32x2_t *)v65.f32, 1), v43, v65, 2), v44, v65, 3);
    __n128 v73 = (__n128)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v41, v67.f32[0]), v42, *(float32x2_t *)v67.f32, 1), v43, v67, 2), v44, v67, 3);
    __n128 v75 = (__n128)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v41, v66.f32[0]), v42, *(float32x2_t *)v66.f32, 1), v43, v66, 2), v44, v66, 3);
    id v45 = *(void **)(v3 + 160);
    swift_retain();
    objc_msgSend(v45, sel_value);
    double v47 = 1.0 - v46;
    objc_msgSend(*(id *)(v3 + 168), sel_value);
    float v49 = v47 * v48;
    sub_234769274(v34, v81, v77, v75, v73, v49, *(float *)(*(void *)(v3 + 72) + 16) + -0.3);
    swift_release();
  }
  uint64_t v6 = &selRef_setOpaque_;
  objc_msgSend(v34, sel_popDebugGroup);
  id v50 = (void *)sub_2347EE5F0();
  objc_msgSend(v34, sel_pushDebugGroup_, v50);

  objc_msgSend(v34, sel_setRenderPipelineState_, *(void *)(v3 + 536));
  uint64_t v51 = *(void *)(v3 + 552);
  if (!v51) {
    goto LABEL_44;
  }
  objc_msgSend(v34, sel_setVertexBuffer_offset_atIndex_, *(void *)(v51 + 16), 0, 0);
  uint64_t v52 = *(void *)(v3 + 552);
  if (!v52)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  objc_msgSend(v34, sel_setVertexBuffer_offset_atIndex_, *(void *)(v52 + 48), 0, 1);
  long long v53 = *(_OWORD *)(v3 + 288);
  long long v54 = *(_OWORD *)(v3 + 304);
  long long v55 = *(_OWORD *)(v3 + 320);
  long long v82 = *(_OWORD *)(v3 + 272);
  long long v83 = v53;
  long long v84 = v54;
  long long v85 = v55;
  objc_msgSend(v34, sel_setVertexBytes_length_atIndex_, &v82, 64, 2);
  long long v56 = *(_OWORD *)(v3 + 352);
  long long v57 = *(_OWORD *)(v3 + 368);
  long long v58 = *(_OWORD *)(v3 + 384);
  long long v82 = *(_OWORD *)(v3 + 336);
  long long v83 = v56;
  long long v84 = v57;
  long long v85 = v58;
  objc_msgSend(v34, sel_setVertexBytes_length_atIndex_, &v82, 64, 3);
  LODWORD(v82) = *(_DWORD *)(v3 + 80);
  objc_msgSend(v34, sel_setVertexBytes_length_atIndex_, &v82, 4, 4);
  objc_msgSend(v34, sel_setVertexBytes_length_atIndex_, v87, 8, 5);
  objc_msgSend(v34, sel_setVertexBytes_length_atIndex_, &v86, 4, 6);
  uint64_t v59 = *(void *)(v3 + 552);
  if (!v59)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  objc_msgSend(v34, sel_setTessellationFactorBuffer_offset_instanceStride_, *(void *)(v59 + 40), 0, 0);
  id v60 = *(void **)(v3 + 552);
  if (!v60)
  {
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
  }
  unint64_t v38 = v60[3];
  if (!v38) {
    goto LABEL_48;
  }
  uint64_t v3 = v60[7];
  unint64_t v61 = v60[8];
  if (v61 >> 62)
  {
LABEL_36:
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v62 = sub_2347EEEC0();
    swift_bridgeObjectRelease();
    goto LABEL_31;
  }
  uint64_t v62 = *(void *)((v61 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_unknownObjectRetain();
LABEL_31:
  objc_msgSend(v34, sel_drawIndexedPatches_patchStart_patchCount_patchIndexBuffer_patchIndexBufferOffset_controlPointIndexBuffer_controlPointIndexBufferOffset_instanceCount_baseInstance_, 4, 0, v3, 0, 0, v38, 0, v62, 0);
  swift_unknownObjectRelease();
  [v34 v6[413]];
  objc_msgSend(v34, sel_endEncoding);

  return swift_unknownObjectRelease();
}

void sub_2347DB894(double a1)
{
  swift_beginAccess();
  unint64_t v4 = swift_bridgeObjectRetain();
  sub_2346BF590(v4, a1);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v5 = *(void *)(v1 + 112);
  unint64_t v6 = v5 & 0xC000000000000001;
  if ((v5 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    id v8 = (id)MEMORY[0x237DC6CF0](0, v5);
  }
  else
  {
    if (!*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_26;
    }
    double v7 = *(void **)(v5 + 32);
    swift_bridgeObjectRetain();
    id v8 = v7;
  }
  float64_t v9 = v8;
  uint64_t v2 = &selRef_setOpaque_;
  objc_msgSend(v8, sel_step_, a1);

  if (v6)
  {
    id v10 = (id)MEMORY[0x237DC6CF0](1, v5);
  }
  else
  {
    if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL)
    {
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
    id v10 = *(id *)(v5 + 40);
  }
  uint64_t v11 = v10;
  objc_msgSend(v10, sel_step_, a1);

  if (v6)
  {
    id v12 = (id)MEMORY[0x237DC6CF0](2, v5);
  }
  else
  {
    if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10) < 3uLL)
    {
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    id v12 = *(id *)(v5 + 48);
  }
  id v13 = v12;
  objc_msgSend(v12, sel_step_, a1);
  swift_bridgeObjectRelease();

  swift_beginAccess();
  uint64_t v5 = *(void *)(v1 + 136);
  unint64_t v6 = v5 & 0xC000000000000001;
  if ((v5 & 0xC000000000000001) == 0)
  {
    if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      long long v14 = *(void **)(v5 + 32);
      swift_bridgeObjectRetain();
      id v15 = v14;
      goto LABEL_15;
    }
    __break(1u);
    goto LABEL_28;
  }
LABEL_26:
  swift_bridgeObjectRetain();
  id v15 = (id)MEMORY[0x237DC6CF0](0, v5);
LABEL_15:
  float32x4_t v16 = v15;
  objc_msgSend(v15, v2[33], a1);

  if (!v6)
  {
    if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 2uLL)
    {
      id v17 = *(id *)(v5 + 40);
      goto LABEL_19;
    }
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  id v17 = (id)MEMORY[0x237DC6CF0](1, v5);
LABEL_19:
  id v18 = v17;
  objc_msgSend(v17, v2[33], a1);

  if (v6)
  {
    id v19 = (id)MEMORY[0x237DC6CF0](2, v5);
LABEL_23:
    id v20 = v19;
    objc_msgSend(v19, v2[33], a1);
    swift_bridgeObjectRelease();

    objc_msgSend(*(id *)(v1 + 160), v2[33], a1);
    objc_msgSend(*(id *)(v1 + 168), v2[33], a1);
    objc_msgSend(*(id *)(v1 + 176), v2[33], a1);
    unint64_t v21 = swift_bridgeObjectRetain();
    sub_2346BF6F0(v21);
    long long v24 = v23;
    long long v25 = v22;
    swift_bridgeObjectRelease();
    *(_OWORD *)(v1 + 192) = v25;
    *(_OWORD *)(v1 + 208) = v24;
    return;
  }
  if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 3uLL)
  {
    id v19 = *(id *)(v5 + 48);
    goto LABEL_23;
  }
LABEL_31:
  __break(1u);
}

void sub_2347DBB78(void *a1, void *a2, double a3)
{
  uint64_t v6 = v3;
  uint64_t v10 = MEMORY[0x237DC8170](v3 + 48);
  if (!v10) {
    return;
  }
  uint64_t v11 = (void *)v10;
  sub_2347DB894(a3);
  uint64_t v12 = *(void *)(v3 + 72);
  float v13 = a3;
  if (*(unsigned char *)(*(void *)(v6 + 64) + 32) == 1) {
    float v13 = 0.0;
  }
  *(float *)(v12 + 16) = *(float *)(v12 + 16) + v13;
  *(float *)&double v14 = sub_2347B8F84();
  objc_msgSend(*(id *)(v6 + 160), sel_value, v14);
  if (!*(void *)(v6 + 552)) {
    goto LABEL_130;
  }
  double v16 = v15;
  float v17 = *(float *)(*(void *)(v6 + 72) + 28);
  swift_beginAccess();
  uint64_t v18 = *(void *)(v6 + 112);
  unint64_t v19 = v18 & 0xC000000000000001;
  if ((v18 & 0xC000000000000001) != 0)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    id v21 = (id)MEMORY[0x237DC6CF0](0, v18);
  }
  else
  {
    if (!*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_101:
      swift_retain();
      swift_bridgeObjectRetain();
      id v40 = (id)MEMORY[0x237DC6CF0](0, v4);
      goto LABEL_20;
    }
    id v20 = *(void **)(v18 + 32);
    swift_retain();
    swift_bridgeObjectRetain();
    id v21 = v20;
  }
  long long v22 = v21;
  objc_msgSend(v21, sel_value);
  double v24 = v23;

  if (v19)
  {
    id v25 = (id)MEMORY[0x237DC6CF0](1, v18);
  }
  else
  {
    if (*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL)
    {
LABEL_116:
      __break(1u);
      goto LABEL_117;
    }
    id v25 = *(id *)(v18 + 40);
  }
  id v26 = v25;
  objc_msgSend(v25, sel_value);
  double v28 = v27;

  if (v19)
  {
    id v29 = (id)MEMORY[0x237DC6CF0](2, v18);
  }
  else
  {
    if (*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) < 3uLL)
    {
LABEL_117:
      __break(1u);
      goto LABEL_118;
    }
    id v29 = *(id *)(v18 + 48);
  }
  uint64_t v30 = v29;
  float v31 = v16;
  float v32 = fminf(fmaxf(v31, 0.0), 1.0) * (float)(v17 * 0.05);
  objc_msgSend(v29, sel_value);
  double v34 = v33;
  swift_bridgeObjectRelease();

  float v35 = v24;
  float v36 = v28;
  float v37 = v34;
  v38.n128_u32[3] = 0;
  v38.n128_f32[0] = v32 + v35;
  v38.n128_f32[1] = v32 + v36;
  v38.n128_f32[2] = v32 + v37;
  sub_2347B87EC(v38);
  swift_release();
  if (!*(void *)(v6 + 552))
  {
LABEL_131:
    __break(1u);
    goto LABEL_132;
  }
  uint64_t v18 = v6 + 136;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v6 + 136);
  unint64_t v5 = v4 & 0xC000000000000001;
  if ((v4 & 0xC000000000000001) != 0) {
    goto LABEL_101;
  }
  if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
LABEL_103:
    swift_retain();
    swift_bridgeObjectRetain();
    id v57 = (id)MEMORY[0x237DC6CF0](0, v4);
    goto LABEL_32;
  }
  uint64_t v39 = *(void **)(v4 + 32);
  swift_retain();
  swift_bridgeObjectRetain();
  id v40 = v39;
LABEL_20:
  float32x4_t v41 = v40;
  objc_msgSend(v40, sel_value);
  double v43 = v42;

  if (v5)
  {
    id v44 = (id)MEMORY[0x237DC6CF0](1, v4);
  }
  else
  {
    if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL)
    {
LABEL_118:
      __break(1u);
      goto LABEL_119;
    }
    id v44 = *(id *)(v4 + 40);
  }
  id v45 = v44;
  objc_msgSend(v44, sel_value);
  double v47 = v46;

  if (v5)
  {
    id v48 = (id)MEMORY[0x237DC6CF0](2, v4);
  }
  else
  {
    if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10) < 3uLL)
    {
LABEL_119:
      __break(1u);
      goto LABEL_120;
    }
    id v48 = *(id *)(v4 + 48);
  }
  float v49 = v48;
  objc_msgSend(v48, sel_value);
  double v51 = v50;
  swift_bridgeObjectRelease();

  *(float *)&unsigned int v52 = v43;
  *(float *)&unsigned int v53 = v47;
  *(float *)&unsigned int v54 = v51;
  v55.n128_u64[0] = __PAIR64__(v53, v52);
  v55.n128_u64[1] = v54;
  sub_2347B8AAC(0, v55);
  swift_release();
  if (!*(void *)(v6 + 552))
  {
LABEL_132:
    __break(1u);
    goto LABEL_133;
  }
  uint64_t v4 = *(void *)v18;
  unint64_t v5 = *(void *)v18 & 0xC000000000000001;
  if (v5) {
    goto LABEL_103;
  }
  if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
LABEL_105:
    swift_retain();
    swift_bridgeObjectRetain();
    id v70 = (id)MEMORY[0x237DC6CF0](0, v4);
    goto LABEL_44;
  }
  long long v56 = *(void **)(v4 + 32);
  swift_retain();
  swift_bridgeObjectRetain();
  id v57 = v56;
LABEL_32:
  long long v58 = v57;
  objc_msgSend(v57, sel_value);
  float64_t v163 = v59;

  if (v5)
  {
    id v60 = (id)MEMORY[0x237DC6CF0](1, v4);
  }
  else
  {
    if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL)
    {
LABEL_120:
      __break(1u);
      goto LABEL_121;
    }
    id v60 = *(id *)(v4 + 40);
  }
  unint64_t v61 = v60;
  objc_msgSend(v60, sel_value);
  long long v161 = v62;

  if (v5)
  {
    id v63 = (id)MEMORY[0x237DC6CF0](2, v4);
  }
  else
  {
    if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10) < 3uLL)
    {
LABEL_121:
      __break(1u);
      goto LABEL_122;
    }
    id v63 = *(id *)(v4 + 48);
  }
  float32x4_t v64 = v63;
  objc_msgSend(v63, sel_value, v161);
  double v66 = v65;
  swift_bridgeObjectRelease();

  v67.f64[0] = v163;
  v67.f64[1] = v162;
  v68.n128_u64[0] = (unint64_t)vcvt_f32_f64(vsubq_f64((float64x2_t)0, v67));
  *(float *)v67.f64 = 0.0 - v66;
  v68.n128_u64[1] = LODWORD(v67.f64[0]);
  sub_2347B8AAC(1, v68);
  swift_release();
  if (!*(void *)(v6 + 552))
  {
LABEL_133:
    __break(1u);
    goto LABEL_134;
  }
  uint64_t v4 = *(void *)v18;
  unint64_t v5 = *(void *)v18 & 0xC000000000000001;
  if (v5) {
    goto LABEL_105;
  }
  if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
LABEL_107:
    swift_retain();
    swift_bridgeObjectRetain();
    id v87 = (id)MEMORY[0x237DC6CF0](0, v4);
    goto LABEL_56;
  }
  float32x4_t v69 = *(void **)(v4 + 32);
  swift_retain();
  swift_bridgeObjectRetain();
  id v70 = v69;
LABEL_44:
  float32x4_t v71 = v70;
  objc_msgSend(v70, sel_value);
  double v73 = v72;

  if (v5)
  {
    id v74 = (id)MEMORY[0x237DC6CF0](1, v4);
  }
  else
  {
    if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL)
    {
LABEL_122:
      __break(1u);
      goto LABEL_123;
    }
    id v74 = *(id *)(v4 + 40);
  }
  __n128 v75 = v74;
  objc_msgSend(v74, sel_value);
  double v77 = v76;

  if (v5)
  {
    id v78 = (id)MEMORY[0x237DC6CF0](2, v4);
  }
  else
  {
    if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10) < 3uLL)
    {
LABEL_123:
      __break(1u);
      goto LABEL_124;
    }
    id v78 = *(id *)(v4 + 48);
  }
  float32x2_t v79 = v78;
  objc_msgSend(v78, sel_value);
  double v81 = v80;
  swift_bridgeObjectRelease();

  *(float *)&unsigned int v82 = v73;
  *(float *)&unsigned int v83 = v77;
  *(float *)&unsigned int v84 = v81;
  v85.n128_u64[0] = __PAIR64__(v83, v82);
  v85.n128_u64[1] = v84;
  sub_2347B8AAC(2, v85);
  swift_release();
  if (!*(void *)(v6 + 552))
  {
LABEL_134:
    __break(1u);
    goto LABEL_135;
  }
  uint64_t v4 = *(void *)v18;
  unint64_t v5 = *(void *)v18 & 0xC000000000000001;
  if (v5) {
    goto LABEL_107;
  }
  if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
LABEL_109:
    swift_retain();
    swift_bridgeObjectRetain();
    id v104 = (id)MEMORY[0x237DC6CF0](0, v4);
    goto LABEL_68;
  }
  float v86 = *(void **)(v4 + 32);
  swift_retain();
  swift_bridgeObjectRetain();
  id v87 = v86;
LABEL_56:
  uint64_t v88 = v87;
  objc_msgSend(v87, sel_value);
  double v90 = v89;

  if (v5)
  {
    id v91 = (id)MEMORY[0x237DC6CF0](1, v4);
  }
  else
  {
    if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL)
    {
LABEL_124:
      __break(1u);
      goto LABEL_125;
    }
    id v91 = *(id *)(v4 + 40);
  }
  __n128 v92 = v91;
  objc_msgSend(v91, sel_value);
  double v94 = v93;

  if (v5)
  {
    id v95 = (id)MEMORY[0x237DC6CF0](2, v4);
  }
  else
  {
    if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10) < 3uLL)
    {
LABEL_125:
      __break(1u);
      goto LABEL_126;
    }
    id v95 = *(id *)(v4 + 48);
  }
  __n128 v96 = v95;
  objc_msgSend(v95, sel_value);
  double v98 = v97;
  swift_bridgeObjectRelease();

  *(float *)&unsigned int v99 = v90;
  *(float *)&unsigned int v100 = v94;
  *(float *)&unsigned int v101 = v98;
  v102.n128_u64[0] = __PAIR64__(v100, v99);
  v102.n128_u64[1] = v101;
  sub_2347B8AAC(3, v102);
  swift_release();
  if (!*(void *)(v6 + 552))
  {
LABEL_135:
    __break(1u);
    goto LABEL_136;
  }
  uint64_t v4 = *(void *)v18;
  unint64_t v5 = *(void *)v18 & 0xC000000000000001;
  if (v5) {
    goto LABEL_109;
  }
  if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
LABEL_111:
    swift_retain();
    swift_bridgeObjectRetain();
    id v121 = (id)MEMORY[0x237DC6CF0](0, v18);
    goto LABEL_80;
  }
  id v103 = *(void **)(v4 + 32);
  swift_retain();
  swift_bridgeObjectRetain();
  id v104 = v103;
LABEL_68:
  unint64_t v105 = v104;
  objc_msgSend(v104, sel_value);
  double v107 = v106;

  if (v5)
  {
    id v108 = (id)MEMORY[0x237DC6CF0](1, v4);
  }
  else
  {
    if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL)
    {
LABEL_126:
      __break(1u);
      goto LABEL_127;
    }
    id v108 = *(id *)(v4 + 40);
  }
  __n128 v109 = v108;
  objc_msgSend(v108, sel_value);
  double v111 = v110;

  if (v5)
  {
    id v112 = (id)MEMORY[0x237DC6CF0](2, v4);
  }
  else
  {
    if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10) < 3uLL)
    {
LABEL_127:
      __break(1u);
      goto LABEL_128;
    }
    id v112 = *(id *)(v4 + 48);
  }
  id v113 = v112;
  objc_msgSend(v112, sel_value);
  double v115 = v114;
  swift_bridgeObjectRelease();

  *(float *)&unsigned int v116 = v107;
  *(float *)&unsigned int v117 = v111;
  *(float *)&unsigned int v118 = v115;
  v119.n128_u64[0] = __PAIR64__(v117, v116);
  v119.n128_u64[1] = v118;
  sub_2347B8AAC(4, v119);
  swift_release();
  if (!*(void *)(v6 + 552))
  {
LABEL_136:
    __break(1u);
    goto LABEL_137;
  }
  uint64_t v18 = *(void *)v18;
  __n128 v96 = (void *)(v18 & 0xC000000000000001);
  if ((v18 & 0xC000000000000001) != 0) {
    goto LABEL_111;
  }
  if (!*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
LABEL_113:
    __break(1u);
    goto LABEL_114;
  }
  unint64_t v120 = *(void **)(v18 + 32);
  swift_retain();
  swift_bridgeObjectRetain();
  id v121 = v120;
LABEL_80:
  id v122 = v121;
  objc_msgSend(v121, sel_value);
  double v124 = v123;

  if (v96)
  {
    id v125 = (id)MEMORY[0x237DC6CF0](1, v18);
  }
  else
  {
    if (*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL)
    {
LABEL_128:
      __break(1u);
      goto LABEL_129;
    }
    id v125 = *(id *)(v18 + 40);
  }
  unint64_t v126 = v125;
  objc_msgSend(v125, sel_value);
  double v128 = v127;

  if (v96)
  {
    id v129 = (id)MEMORY[0x237DC6CF0](2, v18);
  }
  else
  {
    if (*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) < 3uLL)
    {
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
      goto LABEL_131;
    }
    id v129 = *(id *)(v18 + 48);
  }
  __n128 v130 = v129;
  objc_msgSend(v129, sel_value);
  double v132 = v131;
  swift_bridgeObjectRelease();

  *(float *)&unsigned int v133 = v124;
  *(float *)&unsigned int v134 = v128;
  *(float *)&unsigned int v135 = v132;
  v136.n128_u64[0] = __PAIR64__(v134, v133);
  v136.n128_u64[1] = v135;
  sub_2347B8AAC(5, v136);
  swift_release();
  uint64_t v137 = *(void *)(v6 + 552);
  if (!v137)
  {
LABEL_137:
    __break(1u);
    goto LABEL_138;
  }
  uint64_t v138 = *(void *)(v137 + 72);
  if (!v138)
  {
LABEL_138:
    __break(1u);
    goto LABEL_139;
  }
  uint64_t v139 = v138 + 16;
  swift_beginAccess();
  uint64_t v140 = *(void *)(v138 + 16);
  if (*(void *)(v140 + 16) < 2uLL) {
    goto LABEL_113;
  }
  id v141 = *(void **)(v140 + 40);
  swift_beginAccess();
  if (!*(void *)(*(void *)v139 + 16))
  {
LABEL_114:
    __break(1u);
LABEL_115:
    __break(1u);
    goto LABEL_116;
  }
  uint64_t v142 = *(void *)(*(void *)v139 + 32);
  int v143 = *(_DWORD *)(*(void *)(v6 + 72) + 28);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  LODWORD(v144) = v143;
  uint64_t v145 = sub_2347B9178(v141, v142, v144);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v146 = *(void *)(v6 + 552);
  if (!v146)
  {
LABEL_139:
    __break(1u);
    goto LABEL_140;
  }
  uint64_t v147 = *(void *)(v146 + 72);
  if (!v147)
  {
LABEL_140:
    __break(1u);
    return;
  }
  swift_beginAccess();
  uint64_t v148 = *(void *)(v147 + 16);
  if (*(void *)(v148 + 16) < 3uLL) {
    goto LABEL_115;
  }
  uint64_t v149 = *(float32x4_t **)(v148 + 48);
  uint64_t v150 = *(void **)(v6 + 160);
  swift_retain();
  swift_bridgeObjectRetain();
  objc_msgSend(v150, sel_value);
  double v152 = v151;
  objc_msgSend(*(id *)(v6 + 176), sel_value);
  double v154 = v152 * v153;
  objc_msgSend(*(id *)(v6 + 176), sel_value);
  double v156 = v154 * v155;
  objc_msgSend(*(id *)(v6 + 176), sel_value);
  double v158 = v156 * v157;
  *(float *)&double v158 = v158;
  sub_2347B86A0(v149, (uint64_t)v145, v158);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  *(long double *)(v6 + 224) = fmod(*(double *)(v6 + 224) + *(float *)(v6 + 576), 1.57079637);
  *(void *)(v6 + 256) = 0;
  *(void *)(v6 + 264) = 0;
  *(_OWORD *)(v6 + 240) = xmmword_2347F0F20;
  sub_2347DCA20();
  if (*(unsigned char *)(v6 + 580) == 1) {
    sub_2347DAE2C(a2);
  }
  *(unsigned char *)(v6 + 580) = 0;
  sub_2347DB040(a1, a2);
  float v159 = *(float *)(*(void *)(v6 + 72) + 16);
  uint64_t v160 = *(void **)(v6 + 160);
  swift_retain();
  objc_msgSend(v160, sel_value);
  objc_msgSend(*(id *)(v6 + 168), sel_value);
  sub_234714820(v11, v159);

  swift_release();
}

void sub_2347DC720(void *a1)
{
  id v3 = objc_msgSend(objc_msgSend(a1, sel_texture), sel_width);
  swift_unknownObjectRelease();
  id v4 = objc_msgSend(objc_msgSend(a1, sel_texture), sel_height);
  swift_unknownObjectRelease();
  double v5 = (double)(uint64_t)v3;
  double v6 = (double)(uint64_t)v4;
  if (*(double *)(v1 + 584) != (double)(uint64_t)v3 || *(double *)(v1 + 592) != v6)
  {
    *(double *)(v1 + 584) = v5;
    *(double *)(v1 + 592) = v6;
    sub_2347DAB5C((double)(uint64_t)v3, (double)(uint64_t)v4);
    float v8 = v5 / v6;
    v9.f32[0] = sub_2347B98EC(v8 * -1.5, v8 * 1.5);
    float32x4_t v25 = v9;
    float32x4_t v27 = v10;
    float32x4_t v29 = v11;
    float32x4_t v31 = v12;
    *(double *)v13.i64 = sub_2347B9940((float32x4_t)xmmword_2347FAA50, (float32x4_t)0, (float32x4_t)xmmword_2347F2000);
    *(float32x4_t *)(v1 + 400) = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v25, v13.f32[0]), v27, *(float32x2_t *)v13.f32, 1), v29, v13, 2), v31, v13, 3);
    *(float32x4_t *)(v1 + 416) = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v25, v14.f32[0]), v27, *(float32x2_t *)v14.f32, 1), v29, v14, 2), v31, v14, 3);
    *(float32x4_t *)(v1 + 432) = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v25, v15.f32[0]), v27, *(float32x2_t *)v15.f32, 1), v29, v15, 2), v31, v15, 3);
    *(float32x4_t *)(v1 + 448) = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v25, v16.f32[0]), v27, *(float32x2_t *)v16.f32, 1), v29, v16, 2), v31, v16, 3);
    v17.f32[0] = sub_2347B9A8C(85.0, v8);
    float32x4_t v26 = v17;
    float32x4_t v28 = v18;
    float32x4_t v30 = v19;
    float32x4_t v32 = v20;
    *(double *)v21.i64 = sub_2347B9940((float32x4_t)xmmword_2347FAA60, (float32x4_t)xmmword_2347FAA70, (float32x4_t)xmmword_2347F2000);
    *(float32x4_t *)(v1 + 464) = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v26, v21.f32[0]), v28, *(float32x2_t *)v21.f32, 1), v30, v21, 2), v32, v21, 3);
    *(float32x4_t *)(v1 + 480) = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v26, v22.f32[0]), v28, *(float32x2_t *)v22.f32, 1), v30, v22, 2), v32, v22, 3);
    *(float32x4_t *)(v1 + 496) = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v26, v23.f32[0]), v28, *(float32x2_t *)v23.f32, 1), v30, v23, 2), v32, v23, 3);
    *(float32x4_t *)(v1 + 512) = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v26, v24.f32[0]), v28, *(float32x2_t *)v24.f32, 1), v30, v24, 2), v32, v24, 3);
    *(unsigned char *)(v1 + 580) = 1;
  }
}

id *sub_2347DC928()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectWeakDestroy();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_2347DC9C8()
{
  sub_2347DC928();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for GlyphRenderer()
{
  return self;
}

void sub_2347DCA20()
{
  float64x2_t v1 = *(float64x2_t *)(v0 + 208);
  v20[0] = *(float64x2_t *)(v0 + 192);
  v20[1] = v1;
  v19[0] = v20[0];
  v19[1] = v1;
  simd_slerp(v20, v19, &v17);
  float64x2_t v2 = v18;
  float64x2_t v15 = v17;
  float64x2_t v16 = v18;
  *(float64x2_t *)(v0 + 192) = v17;
  *(float64x2_t *)(v0 + 208) = v2;
  float64x2_t v13 = *(float64x2_t *)(v0 + 256);
  float64x2_t v14 = *(float64x2_t *)(v0 + 240);
  __double2 v4 = __sincos_stret(*(double *)(v0 + 224) * 0.5);
  v3.f64[0] = v4.__sinval;
  v5.i64[0] = *(_OWORD *)&vmulq_f64(v13, v3);
  v5.i64[1] = *(void *)&v4.__cosval;
  float64x2_t v6 = vmulq_n_f64(v14, v4.__sinval);
  float64x2_t v7 = vnegq_f64(v6);
  float64x2_t v8 = (float64x2_t)vextq_s8(v5, (int8x16_t)vnegq_f64((float64x2_t)v5), 8uLL);
  *(double *)&long long v9 = MEMORY[0x237DC6900]((__n128)vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(vaddq_f64(vmlaq_n_f64(vmulq_laneq_f64(v6, v16, 1), (float64x2_t)vextq_s8((int8x16_t)v7, (int8x16_t)v6, 8uLL), v16.f64[0]), vmlaq_n_f64(vmulq_laneq_f64((float64x2_t)v5, v15, 1), v8, v15.f64[0]))), vaddq_f64(vmlaq_n_f64(vmulq_laneq_f64((float64x2_t)v5, v16, 1), v8, v16.f64[0]), vmlaq_n_f64(vmulq_laneq_f64(v7, v15, 1), (float64x2_t)vextq_s8((int8x16_t)v6, (int8x16_t)v7, 8uLL), v15.f64[0]))));
  *(_OWORD *)(v0 + 272) = v9;
  *(_OWORD *)(v0 + 288) = v10;
  *(_OWORD *)(v0 + 304) = v11;
  *(_OWORD *)(v0 + 320) = v12;
}

void simd_slerp(float64x2_t *a1@<X0>, float64x2_t *a2@<X1>, float64x2_t *a3@<X8>)
{
  float64x2_t v3 = a2[1];
  if (vaddvq_f64(vaddq_f64(vmulq_f64(*a1, *a2), vmulq_f64(a1[1], v3))) >= 0.0)
  {
    float64x2_t v6 = a1[1];
    float64x2_t v10 = *a1;
    float64x2_t v11 = v6;
    float64x2_t v7 = a2[1];
    v9[0] = *a2;
    v9[1] = v7;
    int8x16_t v5 = (float64x2_t *)v9;
  }
  else
  {
    v8[0] = vnegq_f64(*a2);
    v8[1] = vnegq_f64(v3);
    float64x2_t v4 = a1[1];
    float64x2_t v10 = *a1;
    float64x2_t v11 = v4;
    int8x16_t v5 = (float64x2_t *)v8;
  }
  _simd_slerp_internal(&v10, v5, a3);
}

int64x2_t MTLSizeMake_0@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = a1;
  int64x2_t result = vdupq_n_s64(1uLL);
  *(int64x2_t *)(a2 + 8) = result;
  return result;
}

void _simd_slerp_internal(float64x2_t *a1@<X0>, float64x2_t *a2@<X1>, float64x2_t *a3@<X8>)
{
  float64x2_t v4 = a1[1];
  float64x2_t v5 = a2[1];
  float64x2_t v6 = vsubq_f64(*a1, *a2);
  float64x2_t v7 = vsubq_f64(v4, v5);
  v6.f64[0] = sqrt(vaddvq_f64(vaddq_f64(vmulq_f64(v6, v6), vmulq_f64(v7, v7))));
  float64x2_t v29 = *a2;
  float64x2_t v30 = *a1;
  float64x2_t v8 = vaddq_f64(*a1, *a2);
  float64x2_t v31 = v4;
  float64x2_t v28 = v5;
  float64x2_t v9 = vaddq_f64(v4, v5);
  long double v10 = atan2(v6.f64[0], sqrt(vaddvq_f64(vaddq_f64(vmulq_f64(v8, v8), vmulq_f64(v9, v9)))));
  double v11 = v10 + v10;
  double v12 = 1.0;
  BOOL v13 = v10 + v10 == 0.0;
  double v14 = 1.0;
  if (!v13) {
    double v14 = sin(v11) / v11;
  }
  double v15 = 1.0 / v14;
  if (v11 * 0.0 != 0.0) {
    double v12 = sin(v11 * 0.0) / (v11 * 0.0);
  }
  float64x2_t v16 = (float64x2_t)vdupq_lane_s64(COERCE__INT64(v15 * v12 * 0.0), 0);
  double v17 = 1.0;
  if (v11 != 0.0)
  {
    float64x2_t v27 = v16;
    long double v18 = sin(v11);
    float64x2_t v16 = v27;
    double v17 = v18 / v11;
  }
  double v19 = v15 * v17;
  float64x2_t v20 = vmulq_n_f64(v28, v19);
  float64x2_t v21 = vmlaq_f64(vmulq_n_f64(v29, v19), v30, v16);
  float64x2_t v22 = vmlaq_f64(v20, v31, v16);
  double v23 = vaddvq_f64(vaddq_f64(vmulq_f64(v21, v21), vmulq_f64(v22, v22)));
  if (v23 == 0.0)
  {
    float64x2_t v24 = (float64x2_t)xmmword_2347F0F10;
    float64x2_t v25 = 0uLL;
  }
  else
  {
    double v26 = 1.0 / sqrt(v23);
    float64x2_t v24 = vmulq_n_f64(v22, v26);
    float64x2_t v25 = vmulq_n_f64(v21, v26);
  }
  *a3 = v25;
  a3[1] = v24;
}

uint64_t sub_2347DCCD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t sub_2347DCCE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t sub_2347DCCF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t sub_2347DCD0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t sub_2347DCD20(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t sub_2347DCD34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t type metadata accessor for ScanContainer()
{
  uint64_t result = qword_2687AF0A8;
  if (!qword_2687AF0A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2347DCD94()
{
  return swift_initClassMetadata2();
}

uint64_t sub_2347DCDD4(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_2347EEEC0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (!v2) {
    return v3;
  }
  uint64_t v12 = MEMORY[0x263F8EE78];
  uint64_t result = sub_2347457C8(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        MEMORY[0x237DC6CF0](i, a1);
        sub_2347EDFB0();
        swift_retain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_2687ADDE0);
        swift_dynamicCast();
        swift_release();
        uint64_t v3 = v12;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_2347457C8(0, *(void *)(v12 + 16) + 1, 1);
          uint64_t v3 = v12;
        }
        unint64_t v7 = *(void *)(v3 + 16);
        unint64_t v6 = *(void *)(v3 + 24);
        if (v7 >= v6 >> 1)
        {
          sub_2347457C8(v6 > 1, v7 + 1, 1);
          uint64_t v3 = v12;
        }
        *(void *)(v3 + 16) = v7 + 1;
        *(_OWORD *)(v3 + 16 * v7 + 32) = v11;
      }
    }
    else
    {
      unint64_t v8 = a1 + 32;
      sub_2347EDFB0();
      do
      {
        swift_retain_n();
        __swift_instantiateConcreteTypeFromMangledName(&qword_2687ADDE0);
        swift_dynamicCast();
        swift_release();
        uint64_t v3 = v12;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_2347457C8(0, *(void *)(v12 + 16) + 1, 1);
          uint64_t v3 = v12;
        }
        unint64_t v10 = *(void *)(v3 + 16);
        unint64_t v9 = *(void *)(v3 + 24);
        if (v10 >= v9 >> 1)
        {
          sub_2347457C8(v9 > 1, v10 + 1, 1);
          uint64_t v3 = v12;
        }
        *(void *)(v3 + 16) = v10 + 1;
        *(_OWORD *)(v3 + 16 * v10 + 32) = v11;
        v8 += 8;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_2347DD040(unint64_t a1)
{
  if (a1 >> 62)
  {
    sub_2346DC09C();
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_2347EEEB0();
    swift_bridgeObjectRelease();
    return v3;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_2347EF0A0();
    sub_2346DC09C();
    return a1;
  }
}

uint64_t sub_2347DD0CC()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2687AC928);
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_2347EDF50();
  MEMORY[0x270FA5388](v4);
  type metadata accessor for ScanContainer();
  sub_2347ED710();
  uint64_t v11 = MEMORY[0x263F8EE78];
  sub_2347DD5A4();
  sub_2347EE740();
  sub_2347DD5FC();
  sub_2347EEB20();
  if (v10)
  {
    type metadata accessor for ScanEntity();
    do
    {
      if (swift_dynamicCastClass())
      {
        sub_2347EEDF0();
        sub_2347EEE20();
        sub_2347EEE30();
        sub_2347EEE00();
      }
      else
      {
        swift_release();
      }
      sub_2347EEB20();
    }
    while (v10);
  }
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  swift_release();
  uint64_t v5 = v11;
  if (v11 < 0 || (v11 & 0x4000000000000000) != 0)
  {
    type metadata accessor for ScanEntity();
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_2347EEEB0();
    swift_release_n();
    return v9;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_2347EF0A0();
    type metadata accessor for ScanEntity();
    if (swift_dynamicCastMetatype() || (uint64_t v7 = *(void *)(v5 + 16)) == 0)
    {
LABEL_10:
      swift_release();
    }
    else
    {
      uint64_t v8 = 0;
      while (swift_dynamicCastClass())
      {
        if (v7 == ++v8) {
          goto LABEL_10;
        }
      }
      swift_release();
      return v5 | 1;
    }
  }
  return v5;
}

uint64_t sub_2347DD378()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2687AC928);
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_2347EDF50();
  MEMORY[0x270FA5388](v4);
  type metadata accessor for ScanContainer();
  sub_2347ED710();
  unint64_t v10 = MEMORY[0x263F8EE78];
  sub_2347DD5A4();
  sub_2347EE740();
  sub_2347DD5FC();
  while (1)
  {
    sub_2347EEB20();
    uint64_t v5 = v9;
    if (!v9) {
      break;
    }
    if (swift_conformsToProtocol2()) {
      uint64_t v6 = v5;
    }
    else {
      uint64_t v6 = 0;
    }
    if (v6)
    {
      sub_2347EEDF0();
      sub_2347EEE20();
      sub_2347EEE30();
      sub_2347EEE00();
    }
    else
    {
      swift_release();
    }
  }
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  swift_release();
  uint64_t v7 = sub_2347DCDD4(v10);
  swift_release();
  return v7;
}

uint64_t sub_2347DD59C()
{
  return type metadata accessor for ScanContainer();
}

unint64_t sub_2347DD5A4()
{
  unint64_t result = qword_2687AF0B8;
  if (!qword_2687AF0B8)
  {
    sub_2347EDF50();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2687AF0B8);
  }
  return result;
}

unint64_t sub_2347DD5FC()
{
  unint64_t result = qword_2687AF0C0;
  if (!qword_2687AF0C0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2687AC928);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2687AF0C0);
  }
  return result;
}

uint64_t sub_2347DD658(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

BOOL sub_2347DD66C(unsigned __int8 *a1, double a2)
{
  *(double *)&long long v70 = a2;
  uint64_t v4 = sub_2347ED5C0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  float32x4_t v69 = (char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2687ACD38);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2687AEB70);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  double v15 = (char *)&v66 - v14;
  MEMORY[0x270FA5388](v16);
  long double v18 = (char *)&v66 - v17;
  uint64_t v19 = type metadata accessor for CapturedRoom.Object(0);
  if (*(__int32 *)((char *)v2->i32 + *(int *)(v19 + 48)) != *(_DWORD *)&a1[*(int *)(v19 + 48)]) {
    return 0;
  }
  uint64_t v20 = v19;
  uint64_t v21 = *(int *)(v19 + 44);
  __n128 v68 = v2;
  sub_2346BDD0C((uint64_t)v2 + v21, (uint64_t)v18);
  uint64_t v66 = v20;
  float64x2_t v67 = a1;
  sub_2346BDD0C((uint64_t)&a1[*(int *)(v20 + 44)], (uint64_t)v15);
  uint64_t v22 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_2346BDD0C((uint64_t)v18, (uint64_t)v9);
  sub_2346BDD0C((uint64_t)v15, v22);
  double v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v23((uint64_t)v9, 1, v4) != 1)
  {
    sub_2346BDD0C((uint64_t)v9, (uint64_t)v12);
    if (v23(v22, 1, v4) != 1)
    {
      double v26 = v69;
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v69, v22, v4);
      sub_23472B4D8();
      char v27 = sub_2347EE570();
      float64x2_t v28 = *(void (**)(char *, uint64_t))(v5 + 8);
      v28(v26, v4);
      sub_2346A7C30((uint64_t)v15, (uint64_t *)&unk_2687AEB70);
      sub_2346A7C30((uint64_t)v18, (uint64_t *)&unk_2687AEB70);
      v28(v12, v4);
      sub_2346A7C30((uint64_t)v9, (uint64_t *)&unk_2687AEB70);
      if ((v27 & 1) == 0) {
        return 0;
      }
      goto LABEL_9;
    }
    sub_2346A7C30((uint64_t)v15, (uint64_t *)&unk_2687AEB70);
    sub_2346A7C30((uint64_t)v18, (uint64_t *)&unk_2687AEB70);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v12, v4);
LABEL_7:
    sub_2346A7C30((uint64_t)v9, &qword_2687ACD38);
    return 0;
  }
  sub_2346A7C30((uint64_t)v15, (uint64_t *)&unk_2687AEB70);
  sub_2346A7C30((uint64_t)v18, (uint64_t *)&unk_2687AEB70);
  if (v23(v22, 1, v4) != 1) {
    goto LABEL_7;
  }
  sub_2346A7C30((uint64_t)v9, (uint64_t *)&unk_2687AEB70);
LABEL_9:
  float64x2_t v29 = v67;
  if (v68->u8[0] != *v67) {
    return 0;
  }
  *(float32x2_t *)v24.f32 = vsub_f32(v68[2], *(float32x2_t *)(v67 + 16));
  v24.f32[2] = v68[3].f32[0] - *((float *)v67 + 6);
  float32x4_t v30 = vabsq_f32(v24);
  if (vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v30, 2), vaddq_f32((float32x4_t)vdupq_lane_s32(*(int32x2_t *)v30.f32, 1), v30)).f32[0] >= *(float *)&v70)return 0; {
  simd_float4x4 v78 = __invert_f4(*(simd_float4x4 *)(v67 + 32));
  }
  float32x4_t v31 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)&v70, 0);
  if ((vminvq_u32((uint32x4_t)vandq_s8(vandq_s8((int8x16_t)vcgeq_f32(v31, vabdq_f32(*(float32x4_t *)(MEMORY[0x263EF89A8] + 16), vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v78.columns[0], COERCE_FLOAT(*(_OWORD *)v68[6].f32)), (float32x4_t)v78.columns[1], v68[6], 1), (float32x4_t)v78.columns[2], *(float32x4_t *)v68[6].f32, 2), (float32x4_t)v78.columns[3], *(float32x4_t *)v68[6].f32,
                                                    3))),
                                   (int8x16_t)vcgeq_f32(v31, vabdq_f32(*MEMORY[0x263EF89A8], vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v78.columns[0], COERCE_FLOAT(*(_OWORD *)v68[4].f32)), (float32x4_t)v78.columns[1], v68[4], 1), (float32x4_t)v78.columns[2], *(float32x4_t *)v68[4].f32, 2), (float32x4_t)v78.columns[3], *(float32x4_t *)v68[4].f32, 3)))), vandq_s8(
                                   (int8x16_t)vcgeq_f32(v31, vabdq_f32(*(float32x4_t *)(MEMORY[0x263EF89A8] + 32), vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v78.columns[0], COERCE_FLOAT(*(_OWORD *)v68[8].f32)), (float32x4_t)v78.columns[1], v68[8], 1), (float32x4_t)v78.columns[2], *(float32x4_t *)v68[8].f32, 2), (float32x4_t)v78.columns[3], *(float32x4_t *)v68[8].f32, 3))), (int8x16_t)vcgeq_f32(
                                                v31,
                                                vabdq_f32(*(float32x4_t *)(MEMORY[0x263EF89A8] + 48), vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v78.columns[0], COERCE_FLOAT(*(_OWORD *)v68[10].f32)), (float32x4_t)v78.columns[1], v68[10], 1), (float32x4_t)v78.columns[2], *(float32x4_t *)v68[10].f32, 2), (float32x4_t)v78.columns[3], *(float32x4_t *)v68[10].f32, 3)))))) & 0x80000000) == 0)return 0;
  uint64_t v33 = *(int *)(v66 + 36);
  uint64_t v34 = *(uint64_t *)((char *)v68 + v33);
  int64_t v35 = *(void *)(v34 + 16);
  uint64_t v36 = MEMORY[0x263F8EE78];
  if (v35)
  {
    uint64_t v77 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_23474584C(0, v35, 0);
    uint64_t v37 = v34 + 32;
    uint64_t v36 = v77;
    do
    {
      sub_2346A1DCC(v37, (uint64_t)v71);
      uint64_t v38 = v72;
      uint64_t v39 = v73;
      id v40 = __swift_project_boxed_opaque_existential_1(v71, v72);
      double v41 = MEMORY[0x270FA5388](v40);
      double v43 = (char *)&v66 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, double))(v44 + 16))(v43, v41);
      sub_2346F83D8((uint64_t)v43, v38, v39, (uint64_t *)&v74);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v71);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23474584C(0, *(void *)(v36 + 16) + 1, 1);
        uint64_t v36 = v77;
      }
      unint64_t v46 = *(void *)(v36 + 16);
      unint64_t v45 = *(void *)(v36 + 24);
      if (v46 >= v45 >> 1)
      {
        sub_23474584C(v45 > 1, v46 + 1, 1);
        uint64_t v36 = v77;
      }
      *(void *)(v36 + 16) = v46 + 1;
      uint64_t v47 = v36 + 40 * v46;
      long long v48 = v74;
      long long v49 = v75;
      *(void *)(v47 + 64) = v76;
      *(_OWORD *)(v47 + 32) = v48;
      *(_OWORD *)(v47 + 48) = v49;
      v37 += 40;
      --v35;
    }
    while (v35);
    swift_bridgeObjectRelease();
    float64x2_t v29 = v67;
    uint64_t v33 = *(int *)(v66 + 36);
  }
  uint64_t v50 = *(void *)&v29[v33];
  int64_t v51 = *(void *)(v50 + 16);
  uint64_t v52 = MEMORY[0x263F8EE78];
  if (v51)
  {
    uint64_t v77 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_23474584C(0, v51, 0);
    uint64_t v53 = v50 + 32;
    uint64_t v52 = v77;
    do
    {
      sub_2346A1DCC(v53, (uint64_t)v71);
      uint64_t v54 = v72;
      uint64_t v55 = v73;
      long long v56 = __swift_project_boxed_opaque_existential_1(v71, v72);
      double v57 = MEMORY[0x270FA5388](v56);
      double v59 = (char *)&v66 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, double))(v60 + 16))(v59, v57);
      sub_2346F83D8((uint64_t)v59, v54, v55, (uint64_t *)&v74);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v71);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23474584C(0, *(void *)(v52 + 16) + 1, 1);
        uint64_t v52 = v77;
      }
      unint64_t v62 = *(void *)(v52 + 16);
      unint64_t v61 = *(void *)(v52 + 24);
      if (v62 >= v61 >> 1)
      {
        sub_23474584C(v61 > 1, v62 + 1, 1);
        uint64_t v52 = v77;
      }
      *(void *)(v52 + 16) = v62 + 1;
      uint64_t v63 = v52 + 40 * v62;
      long long v64 = v74;
      long long v65 = v75;
      *(void *)(v63 + 64) = v76;
      *(_OWORD *)(v63 + 32) = v64;
      *(_OWORD *)(v63 + 48) = v65;
      v53 += 40;
      --v51;
    }
    while (v51);
    swift_bridgeObjectRelease();
  }
  BOOL v25 = sub_23470A6F0(v36, v52);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v25;
}

uint64_t sub_2347DDE64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t sub_2347DDE78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t sub_2347DDE8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t sub_2347DDEA0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_2347DDEB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_2347DDEC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t sub_2347DDEDC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t sub_2347DDEF0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t sub_2347DDF04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t sub_2347DDF18(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t sub_2347DDF2C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t sub_2347DDF40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t sub_2347DDF54(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t sub_2347DDF88(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(a5 + 96))(a1, a2, a3 & 1);
}

uint64_t sub_2347DDFA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 104))();
}

uint64_t sub_2347DDFB4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t type metadata accessor for DebugFrameEntity()
{
  uint64_t result = qword_2687AF0D8;
  if (!qword_2687AF0D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2347DE014()
{
  return swift_initClassMetadata2();
}

uint64_t sub_2347DE06C()
{
  return sub_2347DE0A0();
}

uint64_t sub_2347DE0A0()
{
  *(void *)(v0 + qword_2687AF0C8) = 0;
  *(_DWORD *)(v0 + qword_2687AF0D0) = 1065353216;
  uint64_t v1 = sub_2347ED690();
  sub_2347ED8E0();
  swift_retain();
  MEMORY[0x237DC5820](0, 1.0, 0.1, 0.1, 0.05);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2687ACB30);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_2347F0FA0;
  uint64_t v3 = self;
  swift_retain();
  id v4 = objc_msgSend(v3, sel_redColor);
  uint64_t v5 = sub_2347ED930();
  uint64_t v6 = MEMORY[0x263F16178];
  *(void *)(v2 + 56) = v5;
  *(void *)(v2 + 64) = v6;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v2 + 32));
  sub_2347ED920();
  sub_2347ED650();
  swift_allocObject();
  sub_2347ED640();
  uint64_t v7 = (void (*)(unsigned char *, void))sub_2347ED790();
  *(_OWORD *)(v8 + 32) = xmmword_2347FAD60;
  v7(v18, 0);
  type metadata accessor for DebugFrameEntity();
  sub_2347ED700();
  MEMORY[0x237DC5820](0, 0.1, 1.0, 0.1, 0.05);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_2347F0FA0;
  swift_retain();
  id v10 = objc_msgSend(v3, sel_greenColor);
  *(void *)(v9 + 56) = v5;
  *(void *)(v9 + 64) = MEMORY[0x263F16178];
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v9 + 32));
  sub_2347ED920();
  swift_allocObject();
  sub_2347ED640();
  uint64_t v11 = (void (*)(unsigned char *, void))sub_2347ED790();
  *(_OWORD *)(v12 + 32) = xmmword_2347FAD70;
  v11(v18, 0);
  sub_2347ED700();
  MEMORY[0x237DC5820](0, 0.1, 0.1, 1.0, 0.05);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_2347F0FA0;
  swift_retain();
  id v14 = objc_msgSend(v3, sel_blueColor);
  *(void *)(v13 + 56) = v5;
  *(void *)(v13 + 64) = MEMORY[0x263F16178];
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v13 + 32));
  sub_2347ED920();
  swift_allocObject();
  sub_2347ED640();
  double v15 = (void (*)(unsigned char *, void))sub_2347ED790();
  *(_OWORD *)(v16 + 32) = xmmword_2347FAD80;
  v15(v18, 0);
  sub_2347ED700();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_2347DE4E8()
{
  return swift_release();
}

uint64_t sub_2347DE4F8()
{
  sub_2347EDFC0();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_2347DE548()
{
  return type metadata accessor for DebugFrameEntity();
}

BOOL static PostProcessStage.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t PostProcessStage.hash(into:)()
{
  return sub_2347EF1D0();
}

uint64_t PostProcessStage.hashValue.getter()
{
  return sub_2347EF200();
}

RoomPlan::ARKitFramerate_optional __swiftcall ARKitFramerate.init(rawValue:)(Swift::Int rawValue)
{
  if (rawValue == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (!rawValue) {
    char v2 = 0;
  }
  *uint64_t v1 = v2;
  return (RoomPlan::ARKitFramerate_optional)rawValue;
}

uint64_t ARKitFramerate.rawValue.getter()
{
  return *v0;
}

void *sub_2347DE5FC@<X0>(void *result@<X0>, char *a2@<X8>)
{
  if (*result == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (*result) {
    char v3 = v2;
  }
  else {
    char v3 = 0;
  }
  *a2 = v3;
  return result;
}

RoomPlan::ARViewResolution_optional __swiftcall ARViewResolution.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 5;
  if ((unint64_t)rawValue < 5) {
    char v2 = rawValue;
  }
  *uint64_t v1 = v2;
  return (RoomPlan::ARViewResolution_optional)rawValue;
}

RoomPlan::ARViewResolution_optional sub_2347DE630(Swift::Int *a1)
{
  return ARViewResolution.init(rawValue:)(*a1);
}

RoomPlan::ItemColorMode_optional __swiftcall ItemColorMode.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 4;
  if ((unint64_t)rawValue < 4) {
    char v2 = rawValue;
  }
  *uint64_t v1 = v2;
  return (RoomPlan::ItemColorMode_optional)rawValue;
}

uint64_t ItemColorMode.rawValue.getter()
{
  return *v0;
}

RoomPlan::ItemColorMode_optional sub_2347DE654(Swift::Int *a1)
{
  return ItemColorMode.init(rawValue:)(*a1);
}

RoomPlan::DebugIndividualMode_optional __swiftcall DebugIndividualMode.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 3;
  if ((unint64_t)rawValue < 3) {
    char v2 = rawValue;
  }
  *uint64_t v1 = v2;
  return (RoomPlan::DebugIndividualMode_optional)rawValue;
}

RoomPlan::DebugIndividualMode_optional sub_2347DE670(Swift::Int *a1)
{
  return DebugIndividualMode.init(rawValue:)(*a1);
}

uint64_t sub_2347DE678()
{
  type metadata accessor for SettingsManager();
  uint64_t v0 = (void *)swift_allocObject();
  uint64_t result = sub_2347E3C3C();
  off_2687AF0E8 = v0;
  return result;
}

uint64_t static SettingsManager.shared.getter()
{
  if (qword_2687ABE90 != -1) {
    swift_once();
  }

  return swift_retain();
}

uint64_t sub_2347DE710()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t sub_2347DE744(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 32) = a1;
  return result;
}

uint64_t (*sub_2347DE784())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_2347DE7D8()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 33);
}

uint64_t sub_2347DE80C(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 33) = a1;
  return result;
}

uint64_t (*sub_2347DE84C())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_2347DE8A0()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 34);
}

uint64_t sub_2347DE8D4(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 34) = a1;
  return result;
}

uint64_t (*sub_2347DE914())()
{
  return j_j__swift_endAccess;
}

float sub_2347DE968()
{
  swift_beginAccess();
  return *(float *)(v0 + 36);
}

uint64_t sub_2347DE99C(float a1)
{
  uint64_t result = swift_beginAccess();
  *(float *)(v1 + 36) = a1;
  return result;
}

uint64_t (*sub_2347DE9DC())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_2347DEA30@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_beginAccess();
  *a1 = *(unsigned char *)(v1 + 40);
  return result;
}

uint64_t sub_2347DEA74(char *a1)
{
  char v2 = *a1;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 40) = v2;
  return result;
}

uint64_t (*sub_2347DEAB4())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_2347DEB08()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 41);
}

uint64_t sub_2347DEB3C(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 41) = a1;
  return result;
}

uint64_t (*sub_2347DEB7C())()
{
  return j_j__swift_endAccess;
}

float sub_2347DEBD0()
{
  swift_beginAccess();
  return *(float *)(v0 + 44);
}

uint64_t sub_2347DEC04(float a1)
{
  uint64_t result = swift_beginAccess();
  *(float *)(v1 + 44) = a1;
  return result;
}

uint64_t (*sub_2347DEC44())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_2347DEC98()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t sub_2347DECCC(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 48) = a1;
  return result;
}

uint64_t (*sub_2347DED0C())()
{
  return j_j__swift_endAccess;
}

float sub_2347DED60()
{
  swift_beginAccess();
  return *(float *)(v0 + 52);
}

uint64_t sub_2347DED94(float a1)
{
  uint64_t result = swift_beginAccess();
  *(float *)(v1 + 52) = a1;
  return result;
}

uint64_t (*sub_2347DEDD4())()
{
  return j_j__swift_endAccess;
}

float sub_2347DEE28()
{
  swift_beginAccess();
  return *(float *)(v0 + 56);
}

uint64_t sub_2347DEE5C(float a1)
{
  uint64_t result = swift_beginAccess();
  *(float *)(v1 + 56) = a1;
  return result;
}

uint64_t (*sub_2347DEE9C())()
{
  return j_j__swift_endAccess;
}

float sub_2347DEEF0()
{
  swift_beginAccess();
  return *(float *)(v0 + 60);
}

uint64_t sub_2347DEF24(float a1)
{
  uint64_t result = swift_beginAccess();
  *(float *)(v1 + 60) = a1;
  return result;
}

uint64_t (*sub_2347DEF64())()
{
  return j_j__swift_endAccess;
}

float sub_2347DEFB8()
{
  swift_beginAccess();
  return *(float *)(v0 + 68);
}

uint64_t sub_2347DEFEC(float a1)
{
  uint64_t result = swift_beginAccess();
  *(float *)(v1 + 68) = a1;
  return result;
}

uint64_t (*sub_2347DF02C())()
{
  return j_j__swift_endAccess;
}

float sub_2347DF080()
{
  swift_beginAccess();
  return *(float *)(v0 + 72);
}

uint64_t sub_2347DF0B4(float a1)
{
  uint64_t result = swift_beginAccess();
  *(float *)(v1 + 72) = a1;
  return result;
}

uint64_t (*sub_2347DF0F4())()
{
  return j_j__swift_endAccess;
}

float sub_2347DF148()
{
  swift_beginAccess();
  return *(float *)(v0 + 76);
}

uint64_t sub_2347DF17C(float a1)
{
  uint64_t result = swift_beginAccess();
  *(float *)(v1 + 76) = a1;
  return result;
}

uint64_t (*sub_2347DF1BC())()
{
  return j_j__swift_endAccess;
}

float sub_2347DF210()
{
  swift_beginAccess();
  return *(float *)(v0 + 80);
}

uint64_t sub_2347DF244(float a1)
{
  uint64_t result = swift_beginAccess();
  *(float *)(v1 + 80) = a1;
  return result;
}

uint64_t (*sub_2347DF284())()
{
  return j_j__swift_endAccess;
}

float sub_2347DF2D8()
{
  swift_beginAccess();
  return *(float *)(v0 + 84);
}

uint64_t sub_2347DF30C(float a1)
{
  uint64_t result = swift_beginAccess();
  *(float *)(v1 + 84) = a1;
  return result;
}

uint64_t (*sub_2347DF34C())()
{
  return j_j__swift_endAccess;
}

float sub_2347DF3A0()
{
  swift_beginAccess();
  return *(float *)(v0 + 88);
}

uint64_t sub_2347DF3D4(float a1)
{
  uint64_t result = swift_beginAccess();
  *(float *)(v1 + 88) = a1;
  return result;
}

uint64_t (*sub_2347DF414())()
{
  return j_j__swift_endAccess;
}

double sub_2347DF468()
{
  swift_beginAccess();
  return *(double *)(v0 + 96);
}

uint64_t sub_2347DF49C(double a1)
{
  uint64_t result = swift_beginAccess();
  *(double *)(v1 + 96) = a1;
  return result;
}

uint64_t (*sub_2347DF4DC())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_2347DF530()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 104);
}

uint64_t sub_2347DF564(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 104) = a1;
  return result;
}

uint64_t (*sub_2347DF5A4())()
{
  return j_j__swift_endAccess;
}

float sub_2347DF5F8()
{
  swift_beginAccess();
  return *(float *)(v0 + 108);
}

uint64_t sub_2347DF62C(float a1)
{
  uint64_t result = swift_beginAccess();
  *(float *)(v1 + 108) = a1;
  return result;
}

uint64_t (*sub_2347DF66C())()
{
  return j_j__swift_endAccess;
}

float sub_2347DF6C0()
{
  swift_beginAccess();
  return *(float *)(v0 + 112);
}

uint64_t sub_2347DF6F4(float a1)
{
  uint64_t result = swift_beginAccess();
  *(float *)(v1 + 112) = a1;
  return result;
}

uint64_t (*sub_2347DF734())()
{
  return j_j__swift_endAccess;
}

float sub_2347DF788()
{
  swift_beginAccess();
  return *(float *)(v0 + 116);
}

uint64_t sub_2347DF7BC(float a1)
{
  uint64_t result = swift_beginAccess();
  *(float *)(v1 + 116) = a1;
  return result;
}

uint64_t (*sub_2347DF7FC())()
{
  return j_j__swift_endAccess;
}

float sub_2347DF850()
{
  swift_beginAccess();
  return *(float *)(v0 + 120);
}

uint64_t sub_2347DF884(float a1)
{
  uint64_t result = swift_beginAccess();
  *(float *)(v1 + 120) = a1;
  return result;
}

uint64_t (*sub_2347DF8C4())()
{
  return j_j__swift_endAccess;
}

float sub_2347DF918()
{
  swift_beginAccess();
  return *(float *)(v0 + 124);
}

uint64_t sub_2347DF94C(float a1)
{
  uint64_t result = swift_beginAccess();
  *(float *)(v1 + 124) = a1;
  return result;
}

uint64_t (*sub_2347DF98C())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_2347DF9E0()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 128);
}

uint64_t sub_2347DFA14(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 128) = a1;
  return result;
}

uint64_t (*sub_2347DFA54())()
{
  return j_j__swift_endAccess;
}

float sub_2347DFAA8()
{
  swift_beginAccess();
  return *(float *)(v0 + 132);
}

uint64_t sub_2347DFADC(float a1)
{
  uint64_t result = swift_beginAccess();
  *(float *)(v1 + 132) = a1;
  return result;
}

uint64_t (*sub_2347DFB1C())()
{
  return j__swift_endAccess;
}

uint64_t sub_2347DFB70()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 136);
}

uint64_t sub_2347DFBA4(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 136) = a1;
  return result;
}

uint64_t (*sub_2347DFBE4())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_2347DFC38()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 137);
}

uint64_t sub_2347DFC6C(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 137) = a1;
  return result;
}

uint64_t (*sub_2347DFCAC())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_2347DFD00()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 138);
}

uint64_t sub_2347DFD34(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 138) = a1;
  return result;
}

uint64_t (*sub_2347DFD74())()
{
  return j_j__swift_endAccess;
}

BOOL sub_2347DFDC8()
{
  int v1 = *(unsigned __int8 *)(v0 + 139);
  if (v1 != 2) {
    return v1 & 1;
  }
  uint64_t v2 = v0;
  id v3 = objc_msgSend(self, sel_currentDevice);
  if (qword_2687ABE18 != -1) {
    swift_once();
  }
  uint64_t v4 = *(void *)algn_2687ADFD8;
  swift_bridgeObjectRetain();

  BOOL result = 1;
  if (v4)
  {
    sub_2347DFEE4();
    sub_2347DFF38();
    char v5 = sub_2347EE550();
    swift_bridgeObjectRelease();
    if (v5) {
      BOOL result = 0;
    }
  }
  *(unsigned char *)(v2 + 139) = result;
  return result;
}

unint64_t sub_2347DFEE4()
{
  unint64_t result = qword_2687AF0F0;
  if (!qword_2687AF0F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2687AF0F0);
  }
  return result;
}

unint64_t sub_2347DFF38()
{
  unint64_t result = qword_2687AF0F8;
  if (!qword_2687AF0F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2687AF0F8);
  }
  return result;
}

uint64_t sub_2347DFF8C(uint64_t result)
{
  *(unsigned char *)(v1 + 139) = result;
  return result;
}

unsigned char *(*sub_2347DFF94(uint64_t a1))(unsigned char *result)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = sub_2347DFDC8();
  return sub_2347DFFE0;
}

unsigned char *sub_2347DFFE0(unsigned char *result)
{
  *(unsigned char *)(*(void *)result + 139) = result[8];
  return result;
}

uint64_t sub_2347DFFF0()
{
  swift_beginAccess();
  if (*(unsigned char *)(v0 + 142)) {
    return 1;
  }
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 33);
}

char *sub_2347E0048()
{
  if (sub_2347DFDC8() && (swift_beginAccess(), v0[34] == 1))
  {
    uint64_t v1 = sub_2346FC128(0, 1, 1, MEMORY[0x263F8EE78]);
    unint64_t v2 = *((void *)v1 + 2);
    unint64_t v3 = *((void *)v1 + 3);
    unint64_t v4 = v2 + 1;
    if (v2 >= v3 >> 1)
    {
      uint64_t v12 = v1;
      unint64_t v13 = *((void *)v1 + 2);
      id v14 = sub_2346FC128((char *)(v3 > 1), v2 + 1, 1, v12);
      unint64_t v2 = v13;
      uint64_t v1 = v14;
    }
    *((void *)v1 + 2) = v4;
    v1[v2 + 32] = 0;
  }
  else
  {
    uint64_t v1 = (char *)MEMORY[0x263F8EE78];
  }
  swift_beginAccess();
  if (v0[128] == 1)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v1 = sub_2346FC128(0, *((void *)v1 + 2) + 1, 1, v1);
    }
    unint64_t v6 = *((void *)v1 + 2);
    unint64_t v5 = *((void *)v1 + 3);
    if (v6 >= v5 >> 1) {
      uint64_t v1 = sub_2346FC128((char *)(v5 > 1), v6 + 1, 1, v1);
    }
    *((void *)v1 + 2) = v6 + 1;
    v1[v6 + 32] = 1;
  }
  if ((v0[139] & 1) == 0)
  {
    swift_beginAccess();
    if ((v0[142] & 1) != 0 || (swift_beginAccess(), v0[34] == 1))
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v1 = sub_2346FC128(0, *((void *)v1 + 2) + 1, 1, v1);
      }
      unint64_t v8 = *((void *)v1 + 2);
      unint64_t v7 = *((void *)v1 + 3);
      if (v8 >= v7 >> 1) {
        uint64_t v1 = sub_2346FC128((char *)(v7 > 1), v8 + 1, 1, v1);
      }
      *((void *)v1 + 2) = v8 + 1;
      v1[v8 + 32] = 3;
    }
  }
  if (v0[139])
  {
    swift_beginAccess();
    if (v0[142] == 1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v1 = sub_2346FC128(0, *((void *)v1 + 2) + 1, 1, v1);
      }
      unint64_t v10 = *((void *)v1 + 2);
      unint64_t v9 = *((void *)v1 + 3);
      if (v10 >= v9 >> 1) {
        uint64_t v1 = sub_2346FC128((char *)(v9 > 1), v10 + 1, 1, v1);
      }
      *((void *)v1 + 2) = v10 + 1;
      v1[v10 + 32] = 2;
    }
  }
  return v1;
}

void sub_2347E02DC(unsigned char *a1@<X8>)
{
  int v3 = *(unsigned __int8 *)(v1 + 140);
  if (v3 == 5)
  {
    uint64_t v4 = v1;
    id v5 = objc_msgSend(self, sel_currentDevice);
    if (qword_2687ABE18 != -1) {
      swift_once();
    }
    uint64_t v6 = *(void *)algn_2687ADFD8;
    swift_bridgeObjectRetain();

    if (v6 && (sub_2347DFEE4(), sub_2347DFF38(), char v7 = sub_2347EE550(), swift_bridgeObjectRelease(), (v7 & 1) != 0)) {
      LOBYTE(v3) = 3;
    }
    else {
      LOBYTE(v3) = 4;
    }
    *(unsigned char *)(v4 + 140) = v3;
  }
  *a1 = v3;
}

void sub_2347E0400(unsigned char *a1)
{
  *(unsigned char *)(v1 + 140) = *a1;
  uint64_t v2 = MEMORY[0x237DC8170](v1 + 16);
  if (v2)
  {
    int v3 = *(void **)(v2 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_roomCaptureARView);
    if (v3)
    {
      id v4 = v3;
      sub_2347CA800(v4, v1);
      swift_unknownObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
}

uint64_t (*sub_2347E04B4(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  sub_2347E02DC((unsigned char *)(a1 + 8));
  return sub_2347E0508;
}

uint64_t sub_2347E0508(uint64_t a1)
{
  uint64_t v1 = *(void *)a1;
  *(unsigned char *)(v1 + 140) = *(unsigned char *)(a1 + 8);
  uint64_t result = MEMORY[0x237DC8170](v1 + 16);
  if (result)
  {
    int v3 = *(void **)(result + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_roomCaptureARView);
    if (v3)
    {
      id v4 = v3;
      sub_2347CA800(v4, v1);
    }
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_2347E0598@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_beginAccess();
  *a1 = *(unsigned char *)(v1 + 141);
  return result;
}

uint64_t sub_2347E05DC(char *a1)
{
  uint64_t v2 = v1;
  char v3 = *a1;
  swift_beginAccess();
  *(unsigned char *)(v2 + 141) = v3;
  uint64_t v4 = MEMORY[0x237DC8170](v2 + 16);
  if (v4)
  {
    id v5 = *(void **)(v4 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_roomCaptureARView);
    if (v5)
    {
      id v6 = v5;
      sub_2347CA800(v6, v2);
      swift_unknownObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  uint64_t result = MEMORY[0x237DC8170](v2 + 16);
  if (result)
  {
    sub_2347CAD80(v2);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t (*sub_2347E0698(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_2347E06F0;
}

uint64_t sub_2347E06F0(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v5 = *(void *)(a1 + 24) + 16;
    uint64_t v6 = MEMORY[0x237DC8170](v5);
    if (v6)
    {
      char v7 = *(void **)(v6 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_roomCaptureARView);
      if (v7)
      {
        uint64_t v8 = *(void *)(a1 + 24);
        id v9 = v7;
        sub_2347CA800(v9, v8);
      }
      swift_unknownObjectRelease();
    }
    uint64_t result = MEMORY[0x237DC8170](v5);
    if (result)
    {
      sub_2347CAD80(*(void *)(a1 + 24));
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_2347E07B8()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 142);
}

void sub_2347E07EC(char a1)
{
  swift_beginAccess();
  *(unsigned char *)(v1 + 142) = a1;
  uint64_t v3 = MEMORY[0x237DC8170](v1 + 16);
  if (v3)
  {
    uint64_t v4 = *(void **)(v3 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_roomCaptureARView);
    if (v4)
    {
      id v5 = v4;
      sub_2347CA800(v5, v1);
      swift_unknownObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
}

uint64_t (*sub_2347E0884(uint64_t a1))()
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_2347E08DC;
}

uint64_t sub_2347E08E0()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 143);
}

void sub_2347E0914(char a1)
{
  swift_beginAccess();
  *(unsigned char *)(v1 + 143) = a1;
  uint64_t v3 = MEMORY[0x237DC8170](v1 + 16);
  if (v3)
  {
    uint64_t v4 = *(void **)(v3 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_roomCaptureARView);
    if (v4)
    {
      id v5 = v4;
      sub_2347CA800(v5, v1);
      swift_unknownObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
}

uint64_t (*sub_2347E09AC(uint64_t a1))()
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_2347E08DC;
}

uint64_t sub_2347E0A04(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t result = MEMORY[0x237DC8170](*(void *)(a1 + 24) + 16);
    if (result)
    {
      id v5 = *(void **)(result + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_roomCaptureARView);
      if (v5)
      {
        uint64_t v6 = *(void *)(a1 + 24);
        id v7 = v5;
        sub_2347CA800(v7, v6);
      }
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

float sub_2347E0A9C()
{
  swift_beginAccess();
  return *(float *)(v0 + 144);
}

uint64_t sub_2347E0AD0(float a1)
{
  uint64_t result = swift_beginAccess();
  *(float *)(v1 + 144) = a1;
  return result;
}

uint64_t (*sub_2347E0B10())()
{
  return j_j__swift_endAccess;
}

float sub_2347E0B64()
{
  swift_beginAccess();
  return *(float *)(v0 + 148);
}

uint64_t sub_2347E0B98(float a1)
{
  uint64_t result = swift_beginAccess();
  *(float *)(v1 + 148) = a1;
  return result;
}

uint64_t (*sub_2347E0BD8())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_2347E0C2C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_beginAccess();
  *a1 = *(unsigned char *)(v1 + 152);
  return result;
}

uint64_t sub_2347E0C70(char *a1)
{
  char v2 = *a1;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 152) = v2;
  return result;
}

uint64_t (*sub_2347E0CB0())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_2347E0D04@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_beginAccess();
  *a1 = *(unsigned char *)(v1 + 153);
  return result;
}

uint64_t sub_2347E0D48(char *a1)
{
  char v2 = *a1;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 153) = v2;
  return result;
}

uint64_t (*sub_2347E0D88())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_2347E0DDC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_beginAccess();
  *a1 = *(unsigned char *)(v1 + 154);
  return result;
}

uint64_t sub_2347E0E20(char *a1)
{
  char v2 = *a1;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 154) = v2;
  return result;
}

uint64_t (*sub_2347E0E60())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_2347E0EB4()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 155);
}

void sub_2347E0EE8(char a1)
{
  swift_beginAccess();
  *(unsigned char *)(v1 + 155) = a1;
  if ((a1 & 1) == 0)
  {
    uint64_t v3 = MEMORY[0x237DC8170](v1 + 16);
    if (v3)
    {
      uint64_t v4 = *(void **)(v3 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_roomCaptureARView);
      if (v4)
      {
        id v5 = v4;
        sub_2347CA800(v5, v1);
        swift_unknownObjectRelease();
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
  }
}

uint64_t (*sub_2347E0F84(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_2347E0FDC;
}

uint64_t sub_2347E0FDC(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v5 = *(void *)(a1 + 24);
    if ((*(unsigned char *)(v5 + 155) & 1) == 0)
    {
      uint64_t result = MEMORY[0x237DC8170](v5 + 16);
      if (result)
      {
        uint64_t v6 = *(void **)(result + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_roomCaptureARView);
        if (v6)
        {
          uint64_t v7 = *(void *)(a1 + 24);
          id v8 = v6;
          sub_2347CA800(v8, v7);
        }
        return swift_unknownObjectRelease();
      }
    }
  }
  return result;
}

void sub_2347E107C(BOOL *a1@<X8>)
{
  int v3 = *(unsigned __int8 *)(v1 + 156);
  if (v3 == 2)
  {
    uint64_t v4 = v1;
    id v5 = objc_msgSend(self, sel_currentDevice);
    if (qword_2687ABE18 != -1) {
      swift_once();
    }
    uint64_t v6 = *(void *)algn_2687ADFD8;
    swift_bridgeObjectRetain();

    BOOL v8 = 0;
    if (v6)
    {
      sub_2347DFEE4();
      sub_2347DFF38();
      char v7 = sub_2347EE550();
      swift_bridgeObjectRelease();
      if (v7) {
        BOOL v8 = 1;
      }
    }
    *(unsigned char *)(v4 + 156) = v8;
  }
  else
  {
    BOOL v8 = v3 & 1;
  }
  *a1 = v8;
}

void sub_2347E11A8(unsigned char *a1)
{
  *(unsigned char *)(v1 + 156) = *a1;
  uint64_t v2 = MEMORY[0x237DC8170](v1 + 16);
  if (v2)
  {
    int v3 = *(void **)(v2 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_roomCaptureARView);
    if (v3)
    {
      id v4 = v3;
      sub_2347CA800(v4, v1);
      swift_unknownObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
}

uint64_t (*sub_2347E125C(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  sub_2347E107C((BOOL *)(a1 + 8));
  return sub_2347E12B0;
}

uint64_t sub_2347E12B0(uint64_t a1)
{
  uint64_t v1 = *(void *)a1;
  *(unsigned char *)(v1 + 156) = *(unsigned char *)(a1 + 8);
  uint64_t result = MEMORY[0x237DC8170](v1 + 16);
  if (result)
  {
    int v3 = *(void **)(result + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_roomCaptureARView);
    if (v3)
    {
      id v4 = v3;
      sub_2347CA800(v4, v1);
    }
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_2347E1340(BOOL *a1@<X8>)
{
  int v3 = *(unsigned __int8 *)(v1 + 157);
  if (v3 == 2)
  {
    uint64_t v4 = v1;
    id v5 = objc_msgSend(self, sel_currentDevice);
    if (qword_2687ABE18 != -1) {
      swift_once();
    }
    uint64_t v6 = *(void *)algn_2687ADFD8;
    swift_bridgeObjectRetain();

    BOOL v8 = 0;
    if (v6)
    {
      sub_2347DFEE4();
      sub_2347DFF38();
      char v7 = sub_2347EE550();
      swift_bridgeObjectRelease();
      if (v7) {
        BOOL v8 = 1;
      }
    }
    *(unsigned char *)(v4 + 157) = v8;
  }
  else
  {
    BOOL v8 = v3 & 1;
  }
  *a1 = v8;
}

unsigned char *sub_2347E146C(unsigned char *result)
{
  *(unsigned char *)(v1 + 157) = *result;
  return result;
}

unsigned char *(*sub_2347E1478(uint64_t a1))(unsigned char *result)
{
  *(void *)a1 = v1;
  sub_2347E1340((BOOL *)(a1 + 8));
  return sub_2347E14CC;
}

unsigned char *sub_2347E14CC(unsigned char *result)
{
  *(unsigned char *)(*(void *)result + 157) = result[8];
  return result;
}

uint64_t sub_2347E14DC(char *a1, unsigned char **a2)
{
  char v2 = *a1;
  int v3 = *a2;
  swift_beginAccess();
  v3[158] = v2;
  uint64_t result = MEMORY[0x237DC8170](v3 + 16);
  if (result)
  {
    sub_2347CB870(v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_2347E1540()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 158);
}

uint64_t sub_2347E1574(char a1)
{
  swift_beginAccess();
  v1[158] = a1;
  uint64_t result = MEMORY[0x237DC8170](v1 + 16);
  if (result)
  {
    sub_2347CB870(v1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t (*sub_2347E15D8(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_2347E1630;
}

uint64_t sub_2347E1630(uint64_t a1, char a2)
{
  return sub_2347E3A9C(a1, a2, (void (*)(void))sub_2347CB870);
}

uint64_t sub_2347E1648(char *a1, unsigned char **a2)
{
  char v2 = *a1;
  int v3 = *a2;
  swift_beginAccess();
  v3[159] = v2;
  uint64_t result = MEMORY[0x237DC8170](v3 + 16);
  if (result)
  {
    sub_2347CB870(v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_2347E16AC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_beginAccess();
  *a1 = *(unsigned char *)(v1 + 159);
  return result;
}

uint64_t sub_2347E16F0(char *a1)
{
  char v2 = *a1;
  swift_beginAccess();
  v1[159] = v2;
  uint64_t result = MEMORY[0x237DC8170](v1 + 16);
  if (result)
  {
    sub_2347CB870(v1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t (*sub_2347E1754(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_2347E1630;
}

uint64_t sub_2347E17AC()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 160);
}

uint64_t sub_2347E17E0(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 160) = a1;
  return result;
}

uint64_t (*sub_2347E1820())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_2347E1874()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 161);
}

uint64_t sub_2347E18A8(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 161) = a1;
  return result;
}

uint64_t (*sub_2347E18E8())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_2347E193C(char *a1, unsigned char **a2)
{
  char v2 = *a1;
  int v3 = *a2;
  swift_beginAccess();
  v3[162] = v2;
  uint64_t result = MEMORY[0x237DC8170](v3 + 16);
  if (result)
  {
    sub_2347CB870(v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_2347E19A0()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 162);
}

uint64_t sub_2347E19D4(char a1)
{
  swift_beginAccess();
  v1[162] = a1;
  uint64_t result = MEMORY[0x237DC8170](v1 + 16);
  if (result)
  {
    sub_2347CB870(v1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t (*sub_2347E1A38(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_2347E1630;
}

uint64_t sub_2347E1A90(char *a1, unsigned char **a2)
{
  char v2 = *a1;
  int v3 = *a2;
  swift_beginAccess();
  v3[163] = v2;
  uint64_t result = MEMORY[0x237DC8170](v3 + 16);
  if (result)
  {
    sub_2347CB870(v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_2347E1AF4()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 163);
}

uint64_t sub_2347E1B28(char a1)
{
  swift_beginAccess();
  v1[163] = a1;
  uint64_t result = MEMORY[0x237DC8170](v1 + 16);
  if (result)
  {
    sub_2347CB870(v1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t (*sub_2347E1B8C(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_2347E1630;
}

uint64_t sub_2347E1BE4(char *a1, unsigned char **a2)
{
  char v2 = *a1;
  int v3 = *a2;
  swift_beginAccess();
  v3[164] = v2;
  uint64_t result = MEMORY[0x237DC8170](v3 + 16);
  if (result)
  {
    sub_2347CB870(v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_2347E1C48()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 164);
}

uint64_t sub_2347E1C7C(char a1)
{
  swift_beginAccess();
  v1[164] = a1;
  uint64_t result = MEMORY[0x237DC8170](v1 + 16);
  if (result)
  {
    sub_2347CB870(v1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t (*sub_2347E1CE0(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_2347E1630;
}

uint64_t sub_2347E1D38(char *a1, unsigned char **a2)
{
  char v2 = *a1;
  int v3 = *a2;
  swift_beginAccess();
  v3[165] = v2;
  uint64_t result = MEMORY[0x237DC8170](v3 + 16);
  if (result)
  {
    sub_2347CB870(v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_2347E1D9C()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 165);
}

uint64_t sub_2347E1DD0(char a1)
{
  swift_beginAccess();
  v1[165] = a1;
  uint64_t result = MEMORY[0x237DC8170](v1 + 16);
  if (result)
  {
    sub_2347CB870(v1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t (*sub_2347E1E34(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_2347E1630;
}

uint64_t sub_2347E1E8C(char *a1, unsigned char **a2)
{
  char v2 = *a1;
  int v3 = *a2;
  swift_beginAccess();
  v3[166] = v2;
  uint64_t result = MEMORY[0x237DC8170](v3 + 16);
  if (result)
  {
    sub_2347CB870(v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_2347E1EF0()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 166);
}

uint64_t sub_2347E1F24(char a1)
{
  swift_beginAccess();
  v1[166] = a1;
  uint64_t result = MEMORY[0x237DC8170](v1 + 16);
  if (result)
  {
    sub_2347CB870(v1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t (*sub_2347E1F88(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_2347E1630;
}

uint64_t sub_2347E1FE0(char *a1, unsigned char **a2)
{
  char v2 = *a1;
  int v3 = *a2;
  swift_beginAccess();
  v3[167] = v2;
  uint64_t result = MEMORY[0x237DC8170](v3 + 16);
  if (result)
  {
    sub_2347CB870(v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_2347E2044()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 167);
}

uint64_t sub_2347E2078(char a1)
{
  swift_beginAccess();
  v1[167] = a1;
  uint64_t result = MEMORY[0x237DC8170](v1 + 16);
  if (result)
  {
    sub_2347CB870(v1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t (*sub_2347E20DC(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_2347E1630;
}

uint64_t sub_2347E2134(char *a1, unsigned char **a2)
{
  char v2 = *a1;
  int v3 = *a2;
  swift_beginAccess();
  v3[168] = v2;
  uint64_t result = MEMORY[0x237DC8170](v3 + 16);
  if (result)
  {
    sub_2347CB870(v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_2347E2198()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 168);
}

uint64_t sub_2347E21CC(char a1)
{
  swift_beginAccess();
  v1[168] = a1;
  uint64_t result = MEMORY[0x237DC8170](v1 + 16);
  if (result)
  {
    sub_2347CB870(v1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t (*sub_2347E2230(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_2347E1630;
}

uint64_t sub_2347E2288(char *a1, unsigned char **a2)
{
  char v2 = *a1;
  int v3 = *a2;
  swift_beginAccess();
  v3[169] = v2;
  uint64_t result = MEMORY[0x237DC8170](v3 + 16);
  if (result)
  {
    sub_2347CB870(v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_2347E22EC()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 169);
}

uint64_t sub_2347E2320(char a1)
{
  swift_beginAccess();
  v1[169] = a1;
  uint64_t result = MEMORY[0x237DC8170](v1 + 16);
  if (result)
  {
    sub_2347CB870(v1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t (*sub_2347E2384(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_2347E1630;
}

uint64_t sub_2347E23DC(char *a1, unsigned char **a2)
{
  char v2 = *a1;
  int v3 = *a2;
  swift_beginAccess();
  v3[170] = v2;
  uint64_t result = MEMORY[0x237DC8170](v3 + 16);
  if (result)
  {
    sub_2347CB870(v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_2347E2440()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 170);
}

uint64_t sub_2347E2474(char a1)
{
  swift_beginAccess();
  v1[170] = a1;
  uint64_t result = MEMORY[0x237DC8170](v1 + 16);
  if (result)
  {
    sub_2347CB870(v1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t (*sub_2347E24D8(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_2347E1630;
}

float sub_2347E2530()
{
  swift_beginAccess();
  return *(float *)(v0 + 172);
}

uint64_t sub_2347E2564(float a1)
{
  swift_beginAccess();
  *(float *)(v1 + 172) = a1;
  uint64_t result = MEMORY[0x237DC8170](v1 + 16);
  if (result)
  {
    if (*(void *)(result + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_roomCaptureARView)) {
      sub_2347CB750(v1);
    }
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t (*sub_2347E25E4(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_2347E263C;
}

uint64_t sub_2347E263C(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t result = MEMORY[0x237DC8170](*(void *)(a1 + 24) + 16);
    if (result)
    {
      if (*(void *)(result + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_roomCaptureARView)) {
        sub_2347CB750(*(void *)(a1 + 24));
      }
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_2347E26B8(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(unsigned char *)(v3 + 176) = v2;
  uint64_t result = MEMORY[0x237DC8170](v3 + 16);
  if (result)
  {
    sub_2347CAD80(v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_2347E271C()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 176);
}

uint64_t sub_2347E2750(char a1)
{
  swift_beginAccess();
  *(unsigned char *)(v1 + 176) = a1;
  uint64_t result = MEMORY[0x237DC8170](v1 + 16);
  if (result)
  {
    sub_2347CAD80(v1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t (*sub_2347E27B4(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_2347E280C;
}

uint64_t sub_2347E280C(uint64_t a1, char a2)
{
  return sub_2347E3A9C(a1, a2, (void (*)(void))sub_2347CAD80);
}

uint64_t sub_2347E2824@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_beginAccess();
  *a1 = *(unsigned char *)(v1 + 177);
  return result;
}

uint64_t sub_2347E2868(char *a1)
{
  uint64_t v2 = v1;
  char v3 = *a1;
  swift_beginAccess();
  *(unsigned char *)(v2 + 177) = v3;
  uint64_t v4 = MEMORY[0x237DC8170](v2 + 16);
  if (v4)
  {
    if (*(void *)(v4 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_roomCaptureARView)) {
      sub_2347CB750(v2);
    }
    swift_unknownObjectRelease();
  }
  uint64_t result = MEMORY[0x237DC8170](v2 + 16);
  if (result)
  {
    sub_2347CAD80(v2);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t (*sub_2347E290C(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_2347E2964;
}

uint64_t sub_2347E2964(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v5 = *(void *)(a1 + 24) + 16;
    uint64_t v6 = MEMORY[0x237DC8170](v5);
    if (v6)
    {
      if (*(void *)(v6 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_roomCaptureARView)) {
        sub_2347CB750(*(void *)(a1 + 24));
      }
      swift_unknownObjectRelease();
    }
    uint64_t result = MEMORY[0x237DC8170](v5);
    if (result)
    {
      sub_2347CAD80(*(void *)(a1 + 24));
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_2347E2A10(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(unsigned char *)(v3 + 178) = v2;
  uint64_t result = MEMORY[0x237DC8170](v3 + 16);
  if (result)
  {
    sub_2347CAD80(v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_2347E2A74()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 178);
}

uint64_t sub_2347E2AA8(char a1)
{
  swift_beginAccess();
  *(unsigned char *)(v1 + 178) = a1;
  uint64_t result = MEMORY[0x237DC8170](v1 + 16);
  if (result)
  {
    sub_2347CAD80(v1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t (*sub_2347E2B0C(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_2347E280C;
}

uint64_t sub_2347E2B64(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(unsigned char *)(v3 + 179) = v2;
  uint64_t result = MEMORY[0x237DC8170](v3 + 16);
  if (result)
  {
    sub_2347CAD80(v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_2347E2BC8()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 179);
}

uint64_t sub_2347E2BFC(char a1)
{
  swift_beginAccess();
  *(unsigned char *)(v1 + 179) = a1;
  uint64_t result = MEMORY[0x237DC8170](v1 + 16);
  if (result)
  {
    sub_2347CAD80(v1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t (*sub_2347E2C60(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_2347E280C;
}

uint64_t sub_2347E2CB8(int *a1, uint64_t *a2)
{
  int v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(_DWORD *)(v3 + 180) = v2;
  uint64_t result = MEMORY[0x237DC8170](v3 + 16);
  if (result)
  {
    sub_2347CAD80(v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

float sub_2347E2D24()
{
  swift_beginAccess();
  return *(float *)(v0 + 180);
}

uint64_t sub_2347E2D58(float a1)
{
  swift_beginAccess();
  *(float *)(v1 + 180) = a1;
  uint64_t result = MEMORY[0x237DC8170](v1 + 16);
  if (result)
  {
    sub_2347CAD80(v1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t (*sub_2347E2DC4(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_2347E280C;
}

uint64_t sub_2347E2E1C(int *a1, uint64_t *a2)
{
  int v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(_DWORD *)(v3 + 184) = v2;
  uint64_t result = MEMORY[0x237DC8170](v3 + 16);
  if (result)
  {
    sub_2347CAD80(v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

float sub_2347E2E88()
{
  swift_beginAccess();
  return *(float *)(v0 + 184);
}

uint64_t sub_2347E2EBC(float a1)
{
  swift_beginAccess();
  *(float *)(v1 + 184) = a1;
  uint64_t result = MEMORY[0x237DC8170](v1 + 16);
  if (result)
  {
    sub_2347CAD80(v1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t (*sub_2347E2F28(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_2347E280C;
}

uint64_t sub_2347E2F80(int *a1, uint64_t *a2)
{
  int v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(_DWORD *)(v3 + 188) = v2;
  uint64_t result = MEMORY[0x237DC8170](v3 + 16);
  if (result)
  {
    sub_2347CAD80(v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

float sub_2347E2FEC()
{
  swift_beginAccess();
  return *(float *)(v0 + 188);
}

uint64_t sub_2347E3020(float a1)
{
  swift_beginAccess();
  *(float *)(v1 + 188) = a1;
  uint64_t result = MEMORY[0x237DC8170](v1 + 16);
  if (result)
  {
    sub_2347CAD80(v1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t (*sub_2347E308C(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_2347E280C;
}

uint64_t sub_2347E30E4(int *a1, uint64_t *a2)
{
  int v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(_DWORD *)(v3 + 192) = v2;
  uint64_t result = MEMORY[0x237DC8170](v3 + 16);
  if (result)
  {
    sub_2347CAD80(v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

float sub_2347E3150()
{
  swift_beginAccess();
  return *(float *)(v0 + 192);
}

uint64_t sub_2347E3184(float a1)
{
  swift_beginAccess();
  *(float *)(v1 + 192) = a1;
  uint64_t result = MEMORY[0x237DC8170](v1 + 16);
  if (result)
  {
    sub_2347CAD80(v1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t (*sub_2347E31F0(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_2347E280C;
}

uint64_t sub_2347E3248(long long *a1, uint64_t *a2)
{
  long long v4 = *a1;
  uint64_t v2 = *a2;
  swift_beginAccess();
  *(_OWORD *)(v2 + 208) = v4;
  uint64_t result = MEMORY[0x237DC8170](v2 + 16);
  if (result)
  {
    sub_2347CAD80(v2);
    return swift_unknownObjectRelease();
  }
  return result;
}

__n128 sub_2347E32B4()
{
  swift_beginAccess();
  return v0[13];
}

uint64_t sub_2347E32E8(__n128 a1)
{
  swift_beginAccess();
  v1[13] = a1;
  uint64_t result = MEMORY[0x237DC8170](&v1[1]);
  if (result)
  {
    sub_2347CAD80((uint64_t)v1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t (*sub_2347E3350(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_2347E280C;
}

uint64_t sub_2347E33A8(int *a1, uint64_t *a2)
{
  int v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(_DWORD *)(v3 + 224) = v2;
  uint64_t result = MEMORY[0x237DC8170](v3 + 16);
  if (result)
  {
    sub_2347CAD80(v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

float sub_2347E3414()
{
  swift_beginAccess();
  return *(float *)(v0 + 224);
}

uint64_t sub_2347E3448(float a1)
{
  swift_beginAccess();
  *(float *)(v1 + 224) = a1;
  uint64_t result = MEMORY[0x237DC8170](v1 + 16);
  if (result)
  {
    sub_2347CAD80(v1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t (*sub_2347E34B4(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_2347E280C;
}

uint64_t sub_2347E350C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 232) = v2;
  uint64_t result = MEMORY[0x237DC8170](v3 + 16);
  if (result)
  {
    sub_2347CAD80(v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

double sub_2347E3578()
{
  swift_beginAccess();
  return *(double *)(v0 + 232);
}

uint64_t sub_2347E35AC(double a1)
{
  swift_beginAccess();
  *(double *)(v1 + 232) = a1;
  uint64_t result = MEMORY[0x237DC8170](v1 + 16);
  if (result)
  {
    sub_2347CAD80(v1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t (*sub_2347E3618(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_2347E280C;
}

uint64_t sub_2347E3670(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 240) = v2;
  uint64_t result = MEMORY[0x237DC8170](v3 + 16);
  if (result)
  {
    sub_2347CAD80(v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

double sub_2347E36DC()
{
  swift_beginAccess();
  return *(double *)(v0 + 240);
}

uint64_t sub_2347E3710(double a1)
{
  swift_beginAccess();
  *(double *)(v1 + 240) = a1;
  uint64_t result = MEMORY[0x237DC8170](v1 + 16);
  if (result)
  {
    sub_2347CAD80(v1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t (*sub_2347E377C(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_2347E280C;
}

uint64_t sub_2347E37D4(int *a1, uint64_t *a2)
{
  int v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(_DWORD *)(v3 + 248) = v2;
  uint64_t result = MEMORY[0x237DC8170](v3 + 16);
  if (result)
  {
    sub_2347CAD80(v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

float sub_2347E3840()
{
  swift_beginAccess();
  return *(float *)(v0 + 248);
}

uint64_t sub_2347E3874(float a1)
{
  swift_beginAccess();
  *(float *)(v1 + 248) = a1;
  uint64_t result = MEMORY[0x237DC8170](v1 + 16);
  if (result)
  {
    sub_2347CAD80(v1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t (*sub_2347E38E0(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_2347E280C;
}

uint64_t sub_2347E3938(int *a1, uint64_t *a2)
{
  int v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(_DWORD *)(v3 + 252) = v2;
  uint64_t result = MEMORY[0x237DC8170](v3 + 16);
  if (result)
  {
    sub_2347CAD80(v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

float sub_2347E39A4()
{
  swift_beginAccess();
  return *(float *)(v0 + 252);
}

uint64_t sub_2347E39D8(float a1)
{
  swift_beginAccess();
  *(float *)(v1 + 252) = a1;
  uint64_t result = MEMORY[0x237DC8170](v1 + 16);
  if (result)
  {
    sub_2347CAD80(v1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t (*sub_2347E3A44(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_2347E280C;
}

uint64_t sub_2347E3A9C(uint64_t a1, char a2, void (*a3)(void))
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t result = MEMORY[0x237DC8170](*(void *)(a1 + 24) + 16);
    if (result)
    {
      a3(*(void *)(a1 + 24));
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_2347E3B1C()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 256);
}

uint64_t sub_2347E3B50(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 256) = a1;
  return result;
}

uint64_t (*sub_2347E3B90())()
{
  return j_j__swift_endAccess;
}

uint64_t SettingsManager.deinit()
{
  sub_2346BBA5C(v0 + 16);
  return v0;
}

uint64_t SettingsManager.__deallocating_deinit()
{
  sub_2346BBA5C(v0 + 16);

  return swift_deallocClassInstance();
}

uint64_t sub_2347E3C3C()
{
  *(void *)(v0 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(_WORD *)(v0 + 32) = 0;
  *(unsigned char *)(v0 + 34) = 1;
  *(_DWORD *)(v0 + 36) = 1145569280;
  *(_WORD *)(v0 + 40) = 258;
  *(_DWORD *)(v0 + 44) = 1028443341;
  *(unsigned char *)(v0 + 48) = 1;
  *(void *)(v0 + 52) = 0x3DCCCCCD3F4CCCCDLL;
  *(_DWORD *)(v0 + 60) = 1028443341;
  *(unsigned char *)(v0 + 64) = 0;
  *(_OWORD *)(v0 + 68) = xmmword_2347FAE30;
  __asm { FMOV            V0.2S, #0.75 }
  *(void *)(v0 + 84) = _D0;
  *(void *)(v0 + 96) = 0xBFF0000000000000;
  *(unsigned char *)(v0 + 104) = 1;
  *(_OWORD *)(v0 + 108) = xmmword_2347FAE40;
  *(_DWORD *)(v0 + 124) = 1057384038;
  *(unsigned char *)(v0 + 128) = 1;
  *(_DWORD *)(v0 + 132) = 1094713344;
  *(void *)(v0 + 136) = 0x1010502010001;
  *(void *)(v0 + 144) = 0x3D4CCCCD3FA00000;
  *(void *)(v0 + 152) = 0x1020200010101;
  *(_DWORD *)(v0 + 160) = 256;
  *(unsigned char *)(v0 + 164) = 0;
  *(_WORD *)(v0 + 169) = 1;
  *(_DWORD *)(v0 + 165) = 16843009;
  *(_DWORD *)(v0 + 172) = 1077936128;
  *(_WORD *)(v0 + 176) = 0;
  *(unsigned char *)(v0 + 178) = 1;
  *(void *)(v0 + 179) = 0;
  *(unsigned char *)(v0 + 187) = 0;
  *(void *)(v0 + 188) = 0x438980003F800000;
  *(_OWORD *)(v0 + 208) = xmmword_2347FAE50;
  *(_DWORD *)(v0 + 224) = 1153138688;
  *(void *)(v0 + 232) = 0x3F7333333F400000;
  *(void *)(v0 + 240) = 0x3F6A3D713F5851ECLL;
  *(void *)(v0 + 248) = 0x427000003FA00000;
  *(unsigned char *)(v0 + 256) = 0;
  return v0;
}

unint64_t sub_2347E3D84()
{
  unint64_t result = qword_2687AF100;
  if (!qword_2687AF100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2687AF100);
  }
  return result;
}

unint64_t sub_2347E3DDC()
{
  unint64_t result = qword_2687AF108;
  if (!qword_2687AF108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2687AF108);
  }
  return result;
}

unint64_t sub_2347E3E34()
{
  unint64_t result = qword_2687AF110;
  if (!qword_2687AF110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2687AF110);
  }
  return result;
}

unint64_t sub_2347E3E8C()
{
  unint64_t result = qword_2687AF118;
  if (!qword_2687AF118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2687AF118);
  }
  return result;
}

unint64_t sub_2347E3EE4()
{
  unint64_t result = qword_2687AF120;
  if (!qword_2687AF120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2687AF120);
  }
  return result;
}

unint64_t sub_2347E3F3C()
{
  unint64_t result = qword_2687AF128;
  if (!qword_2687AF128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2687AF128);
  }
  return result;
}

unint64_t sub_2347E3F94()
{
  unint64_t result = qword_2687AF130;
  if (!qword_2687AF130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2687AF130);
  }
  return result;
}

unint64_t sub_2347E3FEC()
{
  unint64_t result = qword_2687AF138;
  if (!qword_2687AF138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2687AF138);
  }
  return result;
}

uint64_t sub_2347E4040@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 32);
  return result;
}

uint64_t sub_2347E4088(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v3 + 32) = v2;
  return result;
}

uint64_t sub_2347E40CC@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 33);
  return result;
}

uint64_t sub_2347E4114(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v3 + 33) = v2;
  return result;
}

uint64_t sub_2347E4158@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 34);
  return result;
}

uint64_t sub_2347E41A0(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v3 + 34) = v2;
  return result;
}

float sub_2347E41E4@<S0>(uint64_t *a1@<X0>, float *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  float result = *(float *)(v3 + 36);
  *a2 = result;
  return result;
}

uint64_t sub_2347E422C(int *a1, uint64_t *a2)
{
  int v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v3 + 36) = v2;
  return result;
}

uint64_t sub_2347E4278@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 40);
  return result;
}

uint64_t sub_2347E42C0(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v3 + 40) = v2;
  return result;
}

uint64_t sub_2347E4304@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 41);
  return result;
}

uint64_t sub_2347E434C(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v3 + 41) = v2;
  return result;
}

float sub_2347E4390@<S0>(uint64_t *a1@<X0>, float *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  float result = *(float *)(v3 + 44);
  *a2 = result;
  return result;
}

uint64_t sub_2347E43D8(int *a1, uint64_t *a2)
{
  int v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v3 + 44) = v2;
  return result;
}

uint64_t sub_2347E4424@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 48);
  return result;
}

uint64_t sub_2347E446C(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v3 + 48) = v2;
  return result;
}

float sub_2347E44B0@<S0>(uint64_t *a1@<X0>, float *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  float result = *(float *)(v3 + 52);
  *a2 = result;
  return result;
}

uint64_t sub_2347E44F8(int *a1, uint64_t *a2)
{
  int v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v3 + 52) = v2;
  return result;
}

float sub_2347E4544@<S0>(uint64_t *a1@<X0>, float *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  float result = *(float *)(v3 + 56);
  *a2 = result;
  return result;
}

uint64_t sub_2347E458C(int *a1, uint64_t *a2)
{
  int v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v3 + 56) = v2;
  return result;
}

float sub_2347E45D8@<S0>(uint64_t *a1@<X0>, float *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  float result = *(float *)(v3 + 60);
  *a2 = result;
  return result;
}

uint64_t sub_2347E4620(int *a1, uint64_t *a2)
{
  int v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v3 + 60) = v2;
  return result;
}

uint64_t sub_2347E466C@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 64);
  return result;
}

uint64_t sub_2347E46B4(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v3 + 64) = v2;
  return result;
}

float sub_2347E46F8@<S0>(uint64_t *a1@<X0>, float *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  float result = *(float *)(v3 + 68);
  *a2 = result;
  return result;
}

uint64_t sub_2347E4740(int *a1, uint64_t *a2)
{
  int v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v3 + 68) = v2;
  return result;
}

float sub_2347E478C@<S0>(uint64_t *a1@<X0>, float *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  float result = *(float *)(v3 + 72);
  *a2 = result;
  return result;
}

uint64_t sub_2347E47D4(int *a1, uint64_t *a2)
{
  int v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v3 + 72) = v2;
  return result;
}

float sub_2347E4820@<S0>(uint64_t *a1@<X0>, float *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  float result = *(float *)(v3 + 76);
  *a2 = result;
  return result;
}

uint64_t sub_2347E4868(int *a1, uint64_t *a2)
{
  int v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v3 + 76) = v2;
  return result;
}

float sub_2347E48B4@<S0>(uint64_t *a1@<X0>, float *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  float result = *(float *)(v3 + 80);
  *a2 = result;
  return result;
}

uint64_t sub_2347E48FC(int *a1, uint64_t *a2)
{
  int v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v3 + 80) = v2;
  return result;
}

float sub_2347E4948@<S0>(uint64_t *a1@<X0>, float *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  float result = *(float *)(v3 + 84);
  *a2 = result;
  return result;
}

uint64_t sub_2347E4990(int *a1, uint64_t *a2)
{
  int v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v3 + 84) = v2;
  return result;
}

float sub_2347E49DC@<S0>(uint64_t *a1@<X0>, float *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  float result = *(float *)(v3 + 88);
  *a2 = result;
  return result;
}

uint64_t sub_2347E4A24(int *a1, uint64_t *a2)
{
  int v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v3 + 88) = v2;
  return result;
}

double sub_2347E4A70@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  double result = *(double *)(v3 + 96);
  *a2 = result;
  return result;
}

uint64_t sub_2347E4AB8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(void *)(v3 + 96) = v2;
  return result;
}

uint64_t sub_2347E4B04@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 104);
  return result;
}

uint64_t sub_2347E4B4C(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v3 + 104) = v2;
  return result;
}

float sub_2347E4B90@<S0>(uint64_t *a1@<X0>, float *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  float result = *(float *)(v3 + 108);
  *a2 = result;
  return result;
}

uint64_t sub_2347E4BD8(int *a1, uint64_t *a2)
{
  int v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v3 + 108) = v2;
  return result;
}

float sub_2347E4C24@<S0>(uint64_t *a1@<X0>, float *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  float result = *(float *)(v3 + 112);
  *a2 = result;
  return result;
}

uint64_t sub_2347E4C6C(int *a1, uint64_t *a2)
{
  int v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v3 + 112) = v2;
  return result;
}

float sub_2347E4CB8@<S0>(uint64_t *a1@<X0>, float *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  float result = *(float *)(v3 + 116);
  *a2 = result;
  return result;
}

uint64_t sub_2347E4D00(int *a1, uint64_t *a2)
{
  int v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v3 + 116) = v2;
  return result;
}

float sub_2347E4D4C@<S0>(uint64_t *a1@<X0>, float *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  float result = *(float *)(v3 + 120);
  *a2 = result;
  return result;
}

uint64_t sub_2347E4D94(int *a1, uint64_t *a2)
{
  int v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v3 + 120) = v2;
  return result;
}

float sub_2347E4DE0@<S0>(uint64_t *a1@<X0>, float *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  float result = *(float *)(v3 + 124);
  *a2 = result;
  return result;
}

uint64_t sub_2347E4E28(int *a1, uint64_t *a2)
{
  int v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v3 + 124) = v2;
  return result;
}

uint64_t sub_2347E4E74@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 128);
  return result;
}

uint64_t sub_2347E4EBC(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v3 + 128) = v2;
  return result;
}

float sub_2347E4F00@<S0>(uint64_t *a1@<X0>, float *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  float result = *(float *)(v3 + 132);
  *a2 = result;
  return result;
}

uint64_t sub_2347E4F48(int *a1, uint64_t *a2)
{
  int v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v3 + 132) = v2;
  return result;
}

uint64_t sub_2347E4F94@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 136);
  return result;
}

uint64_t sub_2347E4FDC(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v3 + 136) = v2;
  return result;
}

uint64_t sub_2347E5020@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 137);
  return result;
}

uint64_t sub_2347E5068(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v3 + 137) = v2;
  return result;
}

uint64_t sub_2347E50AC@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 138);
  return result;
}

uint64_t sub_2347E50F4(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v3 + 138) = v2;
  return result;
}

BOOL sub_2347E5138@<W0>(unsigned char *a1@<X8>)
{
  BOOL result = sub_2347DFDC8();
  *a1 = result;
  return result;
}

unsigned char *sub_2347E5168(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(*(void *)a2 + 139) = *result;
  return result;
}

void sub_2347E5178(unsigned char *a1@<X8>)
{
  sub_2347E02DC(&v2);
  *a1 = v2;
}

void sub_2347E51B4(char *a1)
{
  char v1 = *a1;
  sub_2347E0400(&v1);
}

uint64_t sub_2347E51EC@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 141);
  return result;
}

uint64_t sub_2347E5234(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_124Tm(a1, a2, a3, a4, sub_2347E05DC);
}

uint64_t sub_2347E524C@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 142);
  return result;
}

void sub_2347E5294(char *a1)
{
}

uint64_t sub_2347E52BC@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 143);
  return result;
}

void sub_2347E5304(char *a1)
{
}

float sub_2347E532C@<S0>(uint64_t *a1@<X0>, float *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  float result = *(float *)(v3 + 144);
  *a2 = result;
  return result;
}

uint64_t sub_2347E5374(int *a1, uint64_t *a2)
{
  int v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v3 + 144) = v2;
  return result;
}

float sub_2347E53C0@<S0>(uint64_t *a1@<X0>, float *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  float result = *(float *)(v3 + 148);
  *a2 = result;
  return result;
}

uint64_t sub_2347E5408(int *a1, uint64_t *a2)
{
  int v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v3 + 148) = v2;
  return result;
}

uint64_t sub_2347E5454@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 152);
  return result;
}

uint64_t sub_2347E549C(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v3 + 152) = v2;
  return result;
}

uint64_t sub_2347E54E0@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 153);
  return result;
}

uint64_t sub_2347E5528(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v3 + 153) = v2;
  return result;
}

uint64_t sub_2347E556C@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 154);
  return result;
}

uint64_t sub_2347E55B4(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v3 + 154) = v2;
  return result;
}

uint64_t sub_2347E55F8@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 155);
  return result;
}

void sub_2347E5640(char *a1)
{
}

void *sub_2347E5668@<X0>(unsigned char *a1@<X8>)
{
  return keypath_get_141Tm((void *(*)(uint64_t *__return_ptr))sub_2347E107C, a1);
}

uint64_t sub_2347E5680(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_124Tm(a1, a2, a3, a4, (uint64_t (*)(char *))sub_2347E11A8);
}

uint64_t keypath_set_124Tm(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(char *))
{
  char v6 = *a1;
  return a5(&v6);
}

void *sub_2347E56D4@<X0>(unsigned char *a1@<X8>)
{
  return keypath_get_141Tm((void *(*)(uint64_t *__return_ptr))sub_2347E1340, a1);
}

void *keypath_get_141Tm@<X0>(void *(*a1)(uint64_t *__return_ptr)@<X3>, unsigned char *a2@<X8>)
{
  uint64_t result = a1(&v4);
  *a2 = v4;
  return result;
}

unsigned char *sub_2347E572C(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(*(void *)a2 + 157) = *result;
  return result;
}

uint64_t sub_2347E573C@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 158);
  return result;
}

uint64_t sub_2347E5788@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 159);
  return result;
}

uint64_t sub_2347E57D4@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 160);
  return result;
}

uint64_t sub_2347E581C(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v3 + 160) = v2;
  return result;
}

uint64_t sub_2347E5860@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 161);
  return result;
}

uint64_t sub_2347E58A8(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v3 + 161) = v2;
  return result;
}

uint64_t sub_2347E58EC@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 162);
  return result;
}

uint64_t sub_2347E5938@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 163);
  return result;
}

uint64_t sub_2347E5984@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 164);
  return result;
}

uint64_t sub_2347E59D0@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 165);
  return result;
}

uint64_t sub_2347E5A1C@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 166);
  return result;
}

uint64_t sub_2347E5A68@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 167);
  return result;
}

uint64_t sub_2347E5AB4@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 168);
  return result;
}

uint64_t sub_2347E5B00@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 169);
  return result;
}

uint64_t sub_2347E5B4C@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 170);
  return result;
}

float sub_2347E5B98@<S0>(uint64_t *a1@<X0>, float *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  float result = *(float *)(v3 + 172);
  *a2 = result;
  return result;
}

uint64_t sub_2347E5BE0(float *a1)
{
  return sub_2347E2564(*a1);
}

uint64_t sub_2347E5C08@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 176);
  return result;
}

uint64_t sub_2347E5C54@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 177);
  return result;
}

uint64_t sub_2347E5C9C(char *a1)
{
  char v2 = *a1;
  return sub_2347E2868(&v2);
}

uint64_t sub_2347E5CD4@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 178);
  return result;
}

uint64_t sub_2347E5D20@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 179);
  return result;
}

float sub_2347E5D6C@<S0>(uint64_t *a1@<X0>, float *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  float result = *(float *)(v3 + 180);
  *a2 = result;
  return result;
}

float sub_2347E5DB8@<S0>(uint64_t *a1@<X0>, float *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  float result = *(float *)(v3 + 184);
  *a2 = result;
  return result;
}

float sub_2347E5E04@<S0>(uint64_t *a1@<X0>, float *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  float result = *(float *)(v3 + 188);
  *a2 = result;
  return result;
}

float sub_2347E5E50@<S0>(uint64_t *a1@<X0>, float *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  float result = *(float *)(v3 + 192);
  *a2 = result;
  return result;
}

__n128 sub_2347E5E9C@<Q0>(__n128 **a1@<X0>, __n128 *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  __n128 result = v3[13];
  *a2 = result;
  return result;
}

float sub_2347E5EE8@<S0>(uint64_t *a1@<X0>, float *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  float result = *(float *)(v3 + 224);
  *a2 = result;
  return result;
}

double sub_2347E5F34@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  double result = *(double *)(v3 + 232);
  *a2 = result;
  return result;
}

double sub_2347E5F80@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  double result = *(double *)(v3 + 240);
  *a2 = result;
  return result;
}

float sub_2347E5FCC@<S0>(uint64_t *a1@<X0>, float *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  float result = *(float *)(v3 + 248);
  *a2 = result;
  return result;
}

float sub_2347E6018@<S0>(uint64_t *a1@<X0>, float *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  float result = *(float *)(v3 + 252);
  *a2 = result;
  return result;
}

uint64_t sub_2347E6064@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 256);
  return result;
}

uint64_t sub_2347E60AC(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v3 + 256) = v2;
  return result;
}

ValueMetadata *type metadata accessor for PostProcessStage()
{
  return &type metadata for PostProcessStage;
}

ValueMetadata *type metadata accessor for ObjectRenderingMode()
{
  return &type metadata for ObjectRenderingMode;
}

ValueMetadata *type metadata accessor for ARKitFramerate()
{
  return &type metadata for ARKitFramerate;
}

ValueMetadata *type metadata accessor for ARViewFramerate()
{
  return &type metadata for ARViewFramerate;
}

unsigned char *storeEnumTagSinglePayload for ARViewResolution(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2347E6208);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ARViewResolution()
{
  return &type metadata for ARViewResolution;
}

unsigned char *_s8RoomPlan17ARViewPixelFormatOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2347E630CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ARViewPixelFormat()
{
  return &type metadata for ARViewPixelFormat;
}

unsigned char *_s8RoomPlan13ItemColorModeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2347E6410);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ItemColorMode()
{
  return &type metadata for ItemColorMode;
}

unsigned char *_s8RoomPlan19ObjectRenderingModeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2347E6514);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugIndividualMode()
{
  return &type metadata for DebugIndividualMode;
}

uint64_t sub_2347E654C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_2347E6560(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_2347E6574(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_2347E6588(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t type metadata accessor for SettingsManager()
{
  return self;
}

uint64_t method lookup function for SettingsManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SettingsManager);
}

uint64_t dispatch thunk of SettingsManager.useDeterministicFPSMode.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 688))();
}

uint64_t dispatch thunk of SettingsManager.useDeterministicFPSMode.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 696))();
}

uint64_t dispatch thunk of SettingsManager.useDeterministicFPSMode.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 704))();
}

uint64_t dispatch thunk of SettingsManager.upscaleDepth.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 712))();
}

uint64_t dispatch thunk of SettingsManager.upscaleDepth.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 720))();
}

uint64_t dispatch thunk of SettingsManager.upscaleDepth.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 728))();
}

uint64_t dispatch thunk of SettingsManager.isOcclusionEnabled.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 736))();
}

uint64_t dispatch thunk of SettingsManager.isOcclusionEnabled.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 744))();
}

uint64_t dispatch thunk of SettingsManager.isOcclusionEnabled.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 752))();
}

uint64_t dispatch thunk of SettingsManager.lineFeatheringMaxDistance.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 760))();
}

uint64_t dispatch thunk of SettingsManager.lineFeatheringMaxDistance.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 768))();
}

uint64_t dispatch thunk of SettingsManager.lineFeatheringMaxDistance.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 776))();
}

uint64_t dispatch thunk of SettingsManager.objectRenderingMode.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 784))();
}

uint64_t dispatch thunk of SettingsManager.objectRenderingMode.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 792))();
}

uint64_t dispatch thunk of SettingsManager.objectRenderingMode.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 800))();
}

uint64_t dispatch thunk of SettingsManager.hideSelectiveObjects.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 808))();
}

uint64_t dispatch thunk of SettingsManager.hideSelectiveObjects.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 816))();
}

uint64_t dispatch thunk of SettingsManager.hideSelectiveObjects.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 824))();
}

uint64_t dispatch thunk of SettingsManager.sinkOverlapPercentage.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 832))();
}

uint64_t dispatch thunk of SettingsManager.sinkOverlapPercentage.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 840))();
}

uint64_t dispatch thunk of SettingsManager.sinkOverlapPercentage.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 848))();
}

uint64_t dispatch thunk of SettingsManager.wallAlignInWorld.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 856))();
}

uint64_t dispatch thunk of SettingsManager.wallAlignInWorld.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 864))();
}

uint64_t dispatch thunk of SettingsManager.wallAlignInWorld.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 872))();
}

uint64_t dispatch thunk of SettingsManager.chairSizeLimitationPercentage.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 880))();
}

uint64_t dispatch thunk of SettingsManager.chairSizeLimitationPercentage.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 888))();
}

uint64_t dispatch thunk of SettingsManager.chairSizeLimitationPercentage.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 896))();
}

uint64_t dispatch thunk of SettingsManager.worldSpaceTableThickness.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 904))();
}

uint64_t dispatch thunk of SettingsManager.worldSpaceTableThickness.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 912))();
}

uint64_t dispatch thunk of SettingsManager.worldSpaceTableThickness.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 920))();
}

uint64_t dispatch thunk of SettingsManager.worldSpaceChairThickness.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 928))();
}

uint64_t dispatch thunk of SettingsManager.worldSpaceChairThickness.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 936))();
}

uint64_t dispatch thunk of SettingsManager.worldSpaceChairThickness.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 944))();
}

uint64_t dispatch thunk of SettingsManager.animateIncompleteState.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 952))();
}

uint64_t dispatch thunk of SettingsManager.animateIncompleteState.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 960))();
}

uint64_t dispatch thunk of SettingsManager.animateIncompleteState.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 968))();
}

uint64_t dispatch thunk of SettingsManager.lineFadeInDuration.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 976))();
}

uint64_t dispatch thunk of SettingsManager.lineFadeInDuration.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 984))();
}

uint64_t dispatch thunk of SettingsManager.lineFadeInDuration.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 992))();
}

uint64_t dispatch thunk of SettingsManager.lineFadeOutDuration.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1000))();
}

uint64_t dispatch thunk of SettingsManager.lineFadeOutDuration.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1008))();
}

uint64_t dispatch thunk of SettingsManager.lineFadeOutDuration.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1016))();
}

uint64_t dispatch thunk of SettingsManager.wallAnimationDuration.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1024))();
}

uint64_t dispatch thunk of SettingsManager.wallAnimationDuration.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1032))();
}

uint64_t dispatch thunk of SettingsManager.wallAnimationDuration.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1040))();
}

uint64_t dispatch thunk of SettingsManager.floorAnimationDuration.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1048))();
}

uint64_t dispatch thunk of SettingsManager.floorAnimationDuration.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1056))();
}

uint64_t dispatch thunk of SettingsManager.floorAnimationDuration.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1064))();
}

uint64_t dispatch thunk of SettingsManager.objectAnimationDuration.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1072))();
}

uint64_t dispatch thunk of SettingsManager.objectAnimationDuration.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1080))();
}

uint64_t dispatch thunk of SettingsManager.objectAnimationDuration.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1088))();
}

uint64_t dispatch thunk of SettingsManager.openingAnimationDuration.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1096))();
}

uint64_t dispatch thunk of SettingsManager.openingAnimationDuration.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1104))();
}

uint64_t dispatch thunk of SettingsManager.openingAnimationDuration.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1112))();
}

uint64_t dispatch thunk of SettingsManager.cornerCompletionTimeout.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1120))();
}

uint64_t dispatch thunk of SettingsManager.cornerCompletionTimeout.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1128))();
}

uint64_t dispatch thunk of SettingsManager.cornerCompletionTimeout.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1136))();
}

uint64_t dispatch thunk of SettingsManager.useAlphaOcclusion.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1144))();
}

uint64_t dispatch thunk of SettingsManager.useAlphaOcclusion.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1152))();
}

uint64_t dispatch thunk of SettingsManager.useAlphaOcclusion.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1160))();
}

uint64_t dispatch thunk of SettingsManager.mediumConfidenceOcclusionFactor.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1168))();
}

uint64_t dispatch thunk of SettingsManager.mediumConfidenceOcclusionFactor.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1176))();
}

uint64_t dispatch thunk of SettingsManager.mediumConfidenceOcclusionFactor.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1184))();
}

uint64_t dispatch thunk of SettingsManager.lowConfidenceOcclusionFactor.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1192))();
}

uint64_t dispatch thunk of SettingsManager.lowConfidenceOcclusionFactor.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1200))();
}

uint64_t dispatch thunk of SettingsManager.lowConfidenceOcclusionFactor.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1208))();
}

uint64_t dispatch thunk of SettingsManager.occlusionTolerance.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1216))();
}

uint64_t dispatch thunk of SettingsManager.occlusionTolerance.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1224))();
}

uint64_t dispatch thunk of SettingsManager.occlusionTolerance.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1232))();
}

uint64_t dispatch thunk of SettingsManager.occlusionAlphaMinValue.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1240))();
}

uint64_t dispatch thunk of SettingsManager.occlusionAlphaMinValue.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1248))();
}

uint64_t dispatch thunk of SettingsManager.occlusionAlphaMinValue.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1256))();
}

uint64_t dispatch thunk of SettingsManager.cameraDimmingFactor.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1264))();
}

uint64_t dispatch thunk of SettingsManager.cameraDimmingFactor.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1272))();
}

uint64_t dispatch thunk of SettingsManager.cameraDimmingFactor.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1280))();
}

uint64_t dispatch thunk of SettingsManager.renderBloom.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1288))();
}

uint64_t dispatch thunk of SettingsManager.renderBloom.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1296))();
}

uint64_t dispatch thunk of SettingsManager.renderBloom.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1304))();
}

uint64_t dispatch thunk of SettingsManager.bloomSigma.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1312))();
}

uint64_t dispatch thunk of SettingsManager.bloomSigma.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1320))();
}

uint64_t dispatch thunk of SettingsManager.bloomSigma.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1328))();
}

uint64_t dispatch thunk of SettingsManager.exportDoorsWindows.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1336))();
}

uint64_t dispatch thunk of SettingsManager.exportDoorsWindows.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1344))();
}

uint64_t dispatch thunk of SettingsManager.exportDoorsWindows.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1352))();
}

uint64_t dispatch thunk of SettingsManager.exportOpenings.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1360))();
}

uint64_t dispatch thunk of SettingsManager.exportOpenings.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1368))();
}

uint64_t dispatch thunk of SettingsManager.exportOpenings.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1376))();
}

uint64_t dispatch thunk of SettingsManager.enableNonUniformWallHeight.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1384))();
}

uint64_t dispatch thunk of SettingsManager.enableNonUniformWallHeight.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1392))();
}

uint64_t dispatch thunk of SettingsManager.enableNonUniformWallHeight.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1400))();
}

uint64_t dispatch thunk of SettingsManager.isBloomRenderedIn2Passes.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1408))();
}

uint64_t dispatch thunk of SettingsManager.isBloomRenderedIn2Passes.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1416))();
}

uint64_t dispatch thunk of SettingsManager.isBloomRenderedIn2Passes.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1424))();
}

uint64_t dispatch thunk of SettingsManager.postProcessNeedsColor.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1432))();
}

uint64_t dispatch thunk of SettingsManager.postProcessStages.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1440))();
}

uint64_t dispatch thunk of SettingsManager.arViewResolution.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1448))();
}

uint64_t dispatch thunk of SettingsManager.arViewResolution.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1456))();
}

uint64_t dispatch thunk of SettingsManager.arViewResolution.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1464))();
}

uint64_t dispatch thunk of SettingsManager.arViewPixelFormat.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1472))();
}

uint64_t dispatch thunk of SettingsManager.arViewPixelFormat.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1480))();
}

uint64_t dispatch thunk of SettingsManager.arViewPixelFormat.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1488))();
}

uint64_t dispatch thunk of SettingsManager.isVideoCompositingEnabled.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1504))();
}

uint64_t dispatch thunk of SettingsManager.isVideoCompositingEnabled.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1512))();
}

uint64_t dispatch thunk of SettingsManager.isVideoCompositingEnabled.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1520))();
}

uint64_t dispatch thunk of SettingsManager.showStatistics.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1528))();
}

uint64_t dispatch thunk of SettingsManager.showStatistics.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1536))();
}

uint64_t dispatch thunk of SettingsManager.showStatistics.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1544))();
}

uint64_t dispatch thunk of SettingsManager.resolutionVelocityThreshold.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1552))();
}

uint64_t dispatch thunk of SettingsManager.resolutionVelocityThreshold.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1560))();
}

uint64_t dispatch thunk of SettingsManager.resolutionVelocityThreshold.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1568))();
}

uint64_t dispatch thunk of SettingsManager.framerateVelocityThreshold.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1576))();
}

uint64_t dispatch thunk of SettingsManager.framerateVelocityThreshold.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1584))();
}

uint64_t dispatch thunk of SettingsManager.framerateVelocityThreshold.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1592))();
}

uint64_t dispatch thunk of SettingsManager.arViewFramerateLowerBound.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1600))();
}

uint64_t dispatch thunk of SettingsManager.arViewFramerateLowerBound.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1608))();
}

uint64_t dispatch thunk of SettingsManager.arViewFramerateLowerBound.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1616))();
}

uint64_t dispatch thunk of SettingsManager.arKitFramerateLowerBound.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1624))();
}

uint64_t dispatch thunk of SettingsManager.arKitFramerateLowerBound.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1632))();
}

uint64_t dispatch thunk of SettingsManager.arKitFramerateLowerBound.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1640))();
}

uint64_t dispatch thunk of SettingsManager.arViewResolutionLowerBound.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1648))();
}

uint64_t dispatch thunk of SettingsManager.arViewResolutionLowerBound.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1656))();
}

uint64_t dispatch thunk of SettingsManager.arViewResolutionLowerBound.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1664))();
}

uint64_t dispatch thunk of SettingsManager.useDynamicArViewFormat.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1672))();
}

uint64_t dispatch thunk of SettingsManager.useDynamicArViewFormat.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1680))();
}

uint64_t dispatch thunk of SettingsManager.useDynamicArViewFormat.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1688))();
}

uint64_t dispatch thunk of SettingsManager.arViewFramerate.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1696))();
}

uint64_t dispatch thunk of SettingsManager.arViewFramerate.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1704))();
}

uint64_t dispatch thunk of SettingsManager.arViewFramerate.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1712))();
}

uint64_t dispatch thunk of SettingsManager.arKitFramerate.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1720))();
}

uint64_t dispatch thunk of SettingsManager.arKitFramerate.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1728))();
}

uint64_t dispatch thunk of SettingsManager.arKitFramerate.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1736))();
}

uint64_t dispatch thunk of SettingsManager.isSmoothedSceneDepthEnabled.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1744))();
}

uint64_t dispatch thunk of SettingsManager.isSmoothedSceneDepthEnabled.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1752))();
}

uint64_t dispatch thunk of SettingsManager.isSmoothedSceneDepthEnabled.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1760))();
}

uint64_t dispatch thunk of SettingsManager.debugIndividualMode.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1768))();
}

uint64_t dispatch thunk of SettingsManager.debugIndividualMode.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1776))();
}

uint64_t dispatch thunk of SettingsManager.debugIndividualMode.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1784))();
}

uint64_t dispatch thunk of SettingsManager.isARQATracingEnabled.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1792))();
}

uint64_t dispatch thunk of SettingsManager.isARQATracingEnabled.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1800))();
}

uint64_t dispatch thunk of SettingsManager.isARQATracingEnabled.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1808))();
}

uint64_t dispatch thunk of SettingsManager.areCurvedWallsEnabled.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1816))();
}

uint64_t dispatch thunk of SettingsManager.areCurvedWallsEnabled.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1824))();
}

uint64_t dispatch thunk of SettingsManager.areCurvedWallsEnabled.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1832))();
}

uint64_t dispatch thunk of SettingsManager.isARFrameLogEnabled.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1840))();
}

uint64_t dispatch thunk of SettingsManager.isARFrameLogEnabled.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1848))();
}

uint64_t dispatch thunk of SettingsManager.isARFrameLogEnabled.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1856))();
}

uint64_t dispatch thunk of SettingsManager.isFramerateLogEnabled.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1864))();
}

uint64_t dispatch thunk of SettingsManager.isFramerateLogEnabled.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1872))();
}

uint64_t dispatch thunk of SettingsManager.isFramerateLogEnabled.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1880))();
}

uint64_t dispatch thunk of SettingsManager.isLiveDumpEnabled.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1888))();
}

uint64_t dispatch thunk of SettingsManager.isLiveDumpEnabled.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1896))();
}

uint64_t dispatch thunk of SettingsManager.isLiveDumpEnabled.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1904))();
}

uint64_t dispatch thunk of SettingsManager.isOURGBRefinementEnabled.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1912))();
}

uint64_t dispatch thunk of SettingsManager.isOURGBRefinementEnabled.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1920))();
}

uint64_t dispatch thunk of SettingsManager.isOURGBRefinementEnabled.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1928))();
}

uint64_t dispatch thunk of SettingsManager.renderWalls.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1936))();
}

uint64_t dispatch thunk of SettingsManager.renderWalls.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1944))();
}

uint64_t dispatch thunk of SettingsManager.renderWalls.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1952))();
}

uint64_t dispatch thunk of SettingsManager.renderObjects.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1960))();
}

uint64_t dispatch thunk of SettingsManager.renderObjects.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1968))();
}

uint64_t dispatch thunk of SettingsManager.renderObjects.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1976))();
}

uint64_t dispatch thunk of SettingsManager.renderOpenings.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1984))();
}

uint64_t dispatch thunk of SettingsManager.renderOpenings.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1992))();
}

uint64_t dispatch thunk of SettingsManager.renderOpenings.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 2000))();
}

uint64_t dispatch thunk of SettingsManager.renderFloors.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 2008))();
}

uint64_t dispatch thunk of SettingsManager.renderFloors.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 2016))();
}

uint64_t dispatch thunk of SettingsManager.renderFloors.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 2024))();
}

uint64_t dispatch thunk of SettingsManager.renderARMarkers.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 2032))();
}

uint64_t dispatch thunk of SettingsManager.renderARMarkers.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 2040))();
}

uint64_t dispatch thunk of SettingsManager.renderARMarkers.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 2048))();
}

uint64_t dispatch thunk of SettingsManager.lineWidth.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 2064))();
}

uint64_t dispatch thunk of SettingsManager.lineWidth.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 2072))();
}

uint64_t dispatch thunk of SettingsManager.lineWidth.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 2080))();
}

uint64_t dispatch thunk of SettingsManager.isPerimeterDebugVisualizationEnabled.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 2088))();
}

uint64_t dispatch thunk of SettingsManager.isPerimeterDebugVisualizationEnabled.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 2096))();
}

uint64_t dispatch thunk of SettingsManager.isPerimeterDebugVisualizationEnabled.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 2104))();
}

uint64_t dispatch thunk of SettingsManager.itemColorMode.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 2112))();
}

uint64_t dispatch thunk of SettingsManager.itemColorMode.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 2120))();
}

uint64_t dispatch thunk of SettingsManager.itemColorMode.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 2128))();
}

uint64_t dispatch thunk of SettingsManager.isModelEnabled.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 2136))();
}

uint64_t dispatch thunk of SettingsManager.isModelEnabled.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 2144))();
}

uint64_t dispatch thunk of SettingsManager.isModelEnabled.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 2152))();
}

uint64_t dispatch thunk of SettingsManager.isLightingDebugEnabled.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 2160))();
}

uint64_t dispatch thunk of SettingsManager.isLightingDebugEnabled.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 2168))();
}

uint64_t dispatch thunk of SettingsManager.isLightingDebugEnabled.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 2176))();
}

uint64_t dispatch thunk of SettingsManager.dollHouseEmissive.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 2184))();
}

uint64_t dispatch thunk of SettingsManager.dollHouseEmissive.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 2192))();
}

uint64_t dispatch thunk of SettingsManager.dollHouseEmissive.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 2200))();
}

uint64_t dispatch thunk of SettingsManager.dollHouseMetallic.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 2208))();
}

uint64_t dispatch thunk of SettingsManager.dollHouseMetallic.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 2216))();
}

uint64_t dispatch thunk of SettingsManager.dollHouseMetallic.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 2224))();
}

uint64_t dispatch thunk of SettingsManager.dollHouseRoughness.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 2232))();
}

uint64_t dispatch thunk of SettingsManager.dollHouseRoughness.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 2240))();
}

uint64_t dispatch thunk of SettingsManager.dollHouseRoughness.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 2248))();
}

uint64_t dispatch thunk of SettingsManager.dollHouseAmbientLightIntensity.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 2256))();
}

uint64_t dispatch thunk of SettingsManager.dollHouseAmbientLightIntensity.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 2264))();
}

uint64_t dispatch thunk of SettingsManager.dollHouseAmbientLightIntensity.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 2272))();
}

uint64_t dispatch thunk of SettingsManager.dollHouseDirectionalLightDirection.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 2280))();
}

uint64_t dispatch thunk of SettingsManager.dollHouseDirectionalLightDirection.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 2288))();
}

uint64_t dispatch thunk of SettingsManager.dollHouseDirectionalLightDirection.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 2296))();
}

uint64_t dispatch thunk of SettingsManager.dollHouseDirectionalLightIntensity.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 2304))();
}

uint64_t dispatch thunk of SettingsManager.dollHouseDirectionalLightIntensity.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 2312))();
}

uint64_t dispatch thunk of SettingsManager.dollHouseDirectionalLightIntensity.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 2320))();
}

uint64_t dispatch thunk of SettingsManager.dollHouseGradient.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 2328))();
}

uint64_t dispatch thunk of SettingsManager.dollHouseGradient.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 2336))();
}

uint64_t dispatch thunk of SettingsManager.dollHouseGradient.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 2344))();
}

uint64_t dispatch thunk of SettingsManager.dollHouseHemi.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 2352))();
}

uint64_t dispatch thunk of SettingsManager.dollHouseHemi.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 2360))();
}

uint64_t dispatch thunk of SettingsManager.dollHouseHemi.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 2368))();
}

uint64_t dispatch thunk of SettingsManager.dollHouseShadowBias.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 2376))();
}

uint64_t dispatch thunk of SettingsManager.dollHouseShadowBias.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 2384))();
}

uint64_t dispatch thunk of SettingsManager.dollHouseShadowBias.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 2392))();
}

uint64_t dispatch thunk of SettingsManager.dollHouseShadowDistance.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 2400))();
}

uint64_t dispatch thunk of SettingsManager.dollHouseShadowDistance.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 2408))();
}

uint64_t dispatch thunk of SettingsManager.dollHouseShadowDistance.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 2416))();
}

uint64_t dispatch thunk of SettingsManager.isPerimeterLogDumpingEnabled.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 2424))();
}

uint64_t dispatch thunk of SettingsManager.isPerimeterLogDumpingEnabled.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 2432))();
}

uint64_t dispatch thunk of SettingsManager.isPerimeterLogDumpingEnabled.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 2440))();
}

double sub_2347E8B50()
{
  uint64_t v0 = self;
  id v1 = objc_msgSend(v0, sel_mainScreen);
  objc_msgSend(v1, sel_scale);
  double v3 = v2;

  id v4 = objc_msgSend(v0, sel_mainScreen);
  objc_msgSend(v4, sel_scale);

  id v5 = objc_msgSend(v0, sel_mainScreen);
  objc_msgSend(v5, sel_scale);

  id v6 = objc_msgSend(v0, sel_mainScreen);
  objc_msgSend(v6, sel_scale);

  return -1.0 / v3;
}

uint64_t sub_2347E8C90(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_2347E8CA4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_2347E8CB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t sub_2347E8CCC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t sub_2347E8CE0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t sub_2347E8CF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t sub_2347E8D08(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t sub_2347E8D1C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t sub_2347E8D30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t sub_2347E8D44(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t sub_2347E8D58(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t sub_2347E8D6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 112))();
}

uint64_t sub_2347E8D80(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 120))();
}

uint64_t sub_2347E8D94(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 128))();
}

uint64_t sub_2347E8DA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 136))();
}

uint64_t sub_2347E8DBC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 144))();
}

uint64_t sub_2347E8DD0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 152))();
}

uint64_t sub_2347E8DE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 160))();
}

uint64_t sub_2347E8DF8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 168))();
}

uint64_t sub_2347E8E0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 176))();
}

uint64_t sub_2347E8E20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 184))();
}

BOOL sub_2347E8E34(BOOL result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  int v3 = result;
  if (*(unsigned char *)(a2 + 32) == result) {
    return 1;
  }
  if (v2 == 1) {
    return 0;
  }
  for (uint64_t i = 33; ; ++i)
  {
    uint64_t v5 = i - 31;
    if (__OFADD__(i - 32, 1)) {
      break;
    }
    int v6 = *(unsigned __int8 *)(a2 + i);
    uint64_t result = v6 == v3;
    if (v6 == v3 || v5 == v2) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2347E8E94(uint64_t a1, char a2)
{
  switch(a2)
  {
    case 6:
    case 16:
      BOOL v4 = sub_2347E8E34(18, a1);
      type metadata accessor for RoomCaptureMeshDimensionsRestriction();
      uint64_t result = swift_allocObject();
      if (!v4) {
        goto LABEL_3;
      }
      goto LABEL_5;
    case 7:
    case 11:
    case 14:
    case 15:
    case 19:
    case 20:
      type metadata accessor for RoomCaptureMeshDimensionsRestriction();
      uint64_t result = swift_allocObject();
LABEL_3:
      *(unsigned char *)(result + 16) = 4;
      *(_DWORD *)(result + 20) = 0;
      *(unsigned char *)(result + 24) = 1;
      *(_DWORD *)(result + 28) = 0;
      *(unsigned char *)(result + 32) = 1;
      *(_DWORD *)(result + 36) = 0;
      *(unsigned char *)(result + 40) = 0;
      return result;
    case 8:
    case 9:
    case 10:
    case 13:
      type metadata accessor for RoomCaptureMeshDimensionsRestriction();
      uint64_t result = swift_allocObject();
LABEL_5:
      char v3 = 2;
      goto LABEL_7;
    case 12:
    case 17:
    case 18:
      type metadata accessor for RoomCaptureMeshDimensionsRestriction();
      uint64_t result = swift_allocObject();
      char v3 = 3;
LABEL_7:
      *(unsigned char *)(result + 16) = v3;
      *(_DWORD *)(result + 20) = 0;
      *(unsigned char *)(result + 24) = 1;
      *(_DWORD *)(result + 28) = 0;
      *(unsigned char *)(result + 32) = 0;
      *(_DWORD *)(result + 36) = 0;
      *(unsigned char *)(result + 40) = 1;
      break;
    default:
      type metadata accessor for RoomCaptureMeshDimensionsRestriction();
      uint64_t result = swift_initStaticObject();
      break;
  }
  return result;
}

uint64_t sub_2347E9008(uint64_t a1, int a2)
{
  HIDWORD(v2) = a2;
  LODWORD(v2) = (a2 << 24) - 100663296;
  switch((v2 >> 25))
  {
    case 0u:
    case 5u:
      uint64_t v3 = *(void *)(a1 + 16);
      if (!v3) {
        goto LABEL_18;
      }
      if (*(unsigned char *)(a1 + 32) != 18)
      {
        if (v3 == 1) {
          goto LABEL_18;
        }
        if (*(unsigned char *)(a1 + 33) != 18)
        {
          if (v3 == 2) {
            goto LABEL_18;
          }
          uint64_t v8 = 34;
          while (1)
          {
            uint64_t v9 = v8 - 31;
            if (__OFADD__(v8 - 32, 1))
            {
              __break(1u);
              goto LABEL_22;
            }
            if (*(unsigned char *)(a1 + v8) == 18) {
              break;
            }
            ++v8;
            if (v9 == v3) {
              goto LABEL_18;
            }
          }
        }
      }
      if (qword_2687ABE90 != -1) {
        swift_once();
      }
      BOOL v4 = off_2687AF0E8;
      swift_beginAccess();
      LODWORD(v4) = v4[14];
      type metadata accessor for RoomCaptureMeshDimensionsRestriction();
      uint64_t result = swift_allocObject();
      *(unsigned char *)(result + 16) = 2;
      *(_DWORD *)(result + 20) = 0;
      *(unsigned char *)(result + 24) = 1;
      *(_DWORD *)(result + 28) = v4;
      goto LABEL_11;
    case 6u:
      if (qword_2687ABE90 != -1) {
LABEL_22:
      }
        swift_once();
      int v6 = (float *)off_2687AF0E8;
      swift_beginAccess();
      float v7 = -v6[15];
      type metadata accessor for RoomCaptureMeshDimensionsRestriction();
      uint64_t result = swift_allocObject();
      *(unsigned char *)(result + 16) = 3;
      *(_DWORD *)(result + 20) = 0;
      *(unsigned char *)(result + 24) = 1;
      *(float *)(result + 28) = v7;
LABEL_11:
      *(unsigned char *)(result + 32) = 0;
      *(_DWORD *)(result + 36) = 0;
      *(unsigned char *)(result + 40) = 1;
      break;
    case 7u:
      type metadata accessor for RoomCaptureMeshDimensionsRestriction();
      uint64_t result = swift_allocObject();
      *(unsigned char *)(result + 16) = 4;
      *(_DWORD *)(result + 20) = 0;
      *(unsigned char *)(result + 24) = 1;
      *(_DWORD *)(result + 28) = 0;
      *(unsigned char *)(result + 32) = 1;
      *(_DWORD *)(result + 36) = 0;
      *(unsigned char *)(result + 40) = 0;
      break;
    default:
LABEL_18:
      type metadata accessor for RoomCaptureMeshDimensionsRestriction();
      uint64_t result = swift_initStaticObject();
      break;
  }
  return result;
}

uint64_t sub_2347E9268(unsigned __int8 a1)
{
  if (qword_2687ABE90 != -1) {
    swift_once();
  }
  unint64_t v2 = off_2687AF0E8;
  swift_beginAccess();
  if (!v2[40]) {
    goto LABEL_13;
  }
  if (v2[40] != 1)
  {
    if (a1 != 20)
    {
      if (a1 == 18)
      {
LABEL_20:
        if (qword_2687ABDB0 != -1) {
          swift_once();
        }
        uint64_t v3 = &qword_2687BE050;
        return *v3;
      }
      goto LABEL_13;
    }
    goto LABEL_16;
  }
  if (a1 > 0x14u)
  {
LABEL_13:
    if (qword_2687ABDB8 != -1) {
      swift_once();
    }
    uint64_t v3 = &qword_2687BE058;
    return *v3;
  }
  if (((1 << a1) & 0x18C8C0) == 0)
  {
    if (((1 << a1) & 0x12700) != 0)
    {
      if (qword_2687ABDA8 != -1) {
        swift_once();
      }
      uint64_t v3 = &qword_2687BE048;
      return *v3;
    }
    if (((1 << a1) & 0x61000) != 0) {
      goto LABEL_20;
    }
    goto LABEL_13;
  }
LABEL_16:
  if (qword_2687ABDA0 != -1) {
    swift_once();
  }
  uint64_t v3 = &qword_2687BE040;
  return *v3;
}

id sub_2347E943C()
{
  id v1 = objc_msgSend(v0, sel_smoothedSceneDepth);
  if (!v1 || (unint64_t v2 = v1, v3 = objc_msgSend(v1, sel_depthMap), v2, !v3))
  {
    id v4 = objc_msgSend(v0, sel_sceneDepth);
    if (v4)
    {
      uint64_t v5 = v4;
      id v3 = objc_msgSend(v4, sel_depthMap);
    }
    else
    {
      return 0;
    }
  }
  return v3;
}

void sub_2347E94E4(void *a1, double a2, double a3, double a4, double a5)
{
  int v6 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2687AE8B0);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_2347F1EE0;
  id v13 = objc_msgSend(v6, sel_topAnchor);
  id v14 = objc_msgSend(a1, sel_topAnchor);
  id v15 = objc_msgSend(v13, sel_constraintEqualToAnchor_constant_, v14, a2);

  *(void *)(v12 + 32) = v15;
  id v16 = objc_msgSend(v6, sel_bottomAnchor);
  id v17 = objc_msgSend(a1, sel_bottomAnchor);
  id v18 = objc_msgSend(v16, sel_constraintEqualToAnchor_constant_, v17, -a4);

  *(void *)(v12 + 40) = v18;
  id v19 = objc_msgSend(v6, sel_leftAnchor);
  id v20 = objc_msgSend(a1, sel_leftAnchor);
  id v21 = objc_msgSend(v19, sel_constraintEqualToAnchor_constant_, v20, a3);

  *(void *)(v12 + 48) = v21;
  id v22 = objc_msgSend(v6, sel_rightAnchor);
  id v23 = objc_msgSend(a1, sel_rightAnchor);
  id v24 = objc_msgSend(v22, sel_constraintEqualToAnchor_constant_, v23, -a5);

  *(void *)(v12 + 56) = v24;
  sub_2347EE7F0();
  BOOL v25 = self;
  sub_2346A9D9C(0, (unint64_t *)&qword_2687AE8B8);
  id v26 = (id)sub_2347EE7C0();
  swift_bridgeObjectRelease();
  objc_msgSend(v25, sel_activateConstraints_, v26);
}

void sub_2347E976C()
{
  id v1 = v0;
  id v2 = objc_msgSend(v0, sel_superview);
  if (v2)
  {
    id v3 = v2;
    do
    {
      id v4 = v3;
      id v5 = objc_msgSend(v4, sel_constraints);
      sub_2346A9D9C(0, (unint64_t *)&qword_2687AE8B8);
      unint64_t v6 = sub_2347EE7D0();

      if (v6 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v7 = sub_2347EEEC0();
        swift_bridgeObjectRelease();
        if (!v7) {
          goto LABEL_3;
        }
      }
      else
      {
        uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v7) {
          goto LABEL_3;
        }
      }
      if (v7 < 1)
      {
        __break(1u);
        return;
      }
      for (uint64_t i = 0; i != v7; ++i)
      {
        if ((v6 & 0xC000000000000001) != 0) {
          id v9 = (id)MEMORY[0x237DC6CF0](i, v6);
        }
        else {
          id v9 = *(id *)(v6 + 8 * i + 32);
        }
        unint64_t v10 = v9;
        if (objc_msgSend(v9, sel_firstItem))
        {
          self;
          if (swift_dynamicCastObjCClass())
          {
            sub_2346A9D9C(0, &qword_2687ACD08);
            if (sub_2347EEAE0()) {
              objc_msgSend(v4, sel_removeConstraint_, v10);
            }
          }
          swift_unknownObjectRelease();
        }
        if (objc_msgSend(v10, sel_secondItem))
        {
          self;
          if (swift_dynamicCastObjCClass())
          {
            sub_2346A9D9C(0, &qword_2687ACD08);
            if (sub_2347EEAE0()) {
              objc_msgSend(v4, sel_removeConstraint_, v10);
            }
          }
          swift_unknownObjectRelease();
        }
      }
LABEL_3:
      swift_bridgeObjectRelease();
      id v3 = objc_msgSend(v4, sel_superview);
    }
    while (v3);
  }
  id v11 = objc_msgSend(v1, sel_constraints);
  if (!v11)
  {
    sub_2346A9D9C(0, (unint64_t *)&qword_2687AE8B8);
    sub_2347EE7D0();
    id v12 = (id)sub_2347EE7C0();
    swift_bridgeObjectRelease();
    id v11 = v12;
  }
  id v13 = v11;
  objc_msgSend(v1, sel_removeConstraints_);
}

uint64_t sub_2347E9A80(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_2347E9AA8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_2347E9AD0()
{
  type metadata accessor for DeviceVelocityManager();
  uint64_t v0 = swift_allocObject();
  uint64_t result = sub_2347EA630();
  qword_2687BE548 = v0;
  return result;
}

unint64_t sub_2347E9B0C()
{
  unsigned int v10 = 0;
  char v11 = 1;
  id v1 = *(NSObject **)(v0 + 96);
  uint64_t v2 = swift_allocObject();
  swift_weakInit();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = &v10;
  *(void *)(v3 + 24) = v2;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = sub_2347EA5F0;
  *(void *)(v4 + 24) = v3;
  aBlock[4] = sub_2347EA608;
  aBlock[5] = v4;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2347E9AA8;
  aBlock[3] = &block_descriptor_30;
  id v5 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  dispatch_sync(v1, v5);
  _Block_release(v5);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation();
  unint64_t result = swift_release();
  if (v1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v7 = v10;
    unsigned __int8 v8 = v11;
    swift_release();
    LOBYTE(aBlock[0]) = v8;
    return v7 | ((unint64_t)v8 << 32);
  }
  return result;
}

uint64_t sub_2347E9CA0(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    int v3 = *(_DWORD *)(result + 84);
    char v4 = *(unsigned char *)(result + 88);
    uint64_t result = swift_release();
  }
  else
  {
    int v3 = 0;
    char v4 = 1;
  }
  *(_DWORD *)a1 = v3;
  *(unsigned char *)(a1 + 4) = v4;
  return result;
}

uint64_t sub_2347E9D14()
{
  uint64_t v1 = sub_2347EE3B0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  char v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_2347EE410();
  uint64_t v5 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0;
  *(unsigned char *)(v0 + 32) = 1;
  *(void *)(v0 + 48) = 0;
  *(void *)(v0 + 56) = 0;
  *(unsigned char *)(v0 + 64) = 1;
  *(void *)(v0 + 72) = 0;
  *(unsigned char *)(v0 + 80) = 1;
  v11[1] = *(void *)(v0 + 96);
  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_2347EA5B0;
  aBlock[5] = v8;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23477C05C;
  aBlock[3] = &block_descriptor_20;
  id v9 = _Block_copy(aBlock);
  swift_retain();
  sub_2347EE3D0();
  uint64_t v13 = MEMORY[0x263F8EE78];
  sub_234723240((unint64_t *)&qword_2687AD498, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2687AE930);
  sub_234723288((unint64_t *)&qword_2687AD4A0, (uint64_t *)&unk_2687AE930);
  sub_2347EEC30();
  MEMORY[0x237DC6990](0, v7, v4, v9);
  _Block_release(v9);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v12);
  swift_release();
  return swift_release();
}

uint64_t sub_2347E9FF0()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    *(_DWORD *)(result + 84) = 0;
    *(unsigned char *)(result + 88) = 1;
    return swift_release();
  }
  return result;
}

double sub_2347EA048(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_2347EE3B0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_2347EE410();
  uint64_t v9 = *(void *)(v8 - 8);
  double v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = objc_msgSend(a1, sel_camera, v10);
  objc_msgSend(v13, sel_transform);
  float32x4_t v37 = v14;
  float32x4_t v38 = v15;

  float32x4_t v16 = vsubq_f32(v38, v37);
  v16.i32[3] = 0;
  float32x4_t v37 = v16;
  if ((*(unsigned char *)(v2 + 32) & 1) == 0 && (*(unsigned char *)(v2 + 64) & 1) == 0 && (*(unsigned char *)(v2 + 80) & 1) == 0)
  {
    double v17 = *(double *)(v2 + 72);
    float32x4_t v18 = vsubq_f32(*(float32x4_t *)(v2 + 16), v38);
    float32x4_t v19 = vmulq_f32(v18, v18);
    float32x4_t v20 = vsubq_f32(*(float32x4_t *)(v2 + 48), v37);
    float32x4_t v21 = vmulq_f32(v20, v20);
    float v22 = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v19, 2), vaddq_f32(v19, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v19.f32, 1))).f32[0]);
    float v23 = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v21, 2), vaddq_f32(v21, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v21.f32, 1))).f32[0]);
    if (v22 > v23) {
      float v24 = v22;
    }
    else {
      float v24 = v23;
    }
    objc_msgSend(a1, sel_timestamp);
    double v26 = v25 - v17;
    uint64_t v36 = *(void *)(v2 + 96);
    uint64_t v27 = swift_allocObject();
    swift_weakInit();
    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = v27;
    uint64_t v35 = v27;
    *(float *)(v28 + 24) = v24;
    *(double *)(v28 + 32) = v26;
    aBlock[4] = sub_2347EA588;
    aBlock[5] = v28;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_23477C05C;
    aBlock[3] = &block_descriptor_9;
    uint64_t v34 = _Block_copy(aBlock);
    swift_retain();
    sub_2347EE3D0();
    uint64_t v39 = MEMORY[0x263F8EE78];
    uint64_t v33 = sub_234723240((unint64_t *)&qword_2687AD498, MEMORY[0x263F8F030]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2687AE930);
    sub_234723288((unint64_t *)&qword_2687AD4A0, (uint64_t *)&unk_2687AE930);
    sub_2347EEC30();
    float64x2_t v29 = v34;
    MEMORY[0x237DC6990](0, v12, v7, v34);
    _Block_release(v29);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    swift_release();
    swift_release();
  }
  float32x4_t v30 = v38;
  v30.i32[3] = 0;
  float32x4_t v38 = v30;
  objc_msgSend(a1, sel_timestamp);
  *(void *)(v2 + 72) = v31;
  *(unsigned char *)(v2 + 80) = 0;
  *(float32x4_t *)(v2 + 16) = v38;
  *(unsigned char *)(v2 + 32) = 0;
  double result = *(double *)v37.i64;
  *(float32x4_t *)(v2 + 48) = v37;
  *(unsigned char *)(v2 + 64) = 0;
  return result;
}

uint64_t sub_2347EA450(float a1, double a2)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    float v5 = a2;
    *(float *)(result + 84) = a1 / v5;
    *(unsigned char *)(result + 88) = 0;
    return swift_release();
  }
  return result;
}

uint64_t sub_2347EA4BC()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DeviceVelocityManager()
{
  return self;
}

uint64_t sub_2347EA518()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2347EA550()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_2347EA588()
{
  return sub_2347EA450(*(float *)(v0 + 24), *(double *)(v0 + 32));
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t sub_2347EA5B0()
{
  return sub_2347E9FF0();
}

uint64_t sub_2347EA5B8()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2347EA5F0()
{
  return sub_2347E9CA0(*(void *)(v0 + 16));
}

uint64_t sub_2347EA5F8()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2347EA608()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_2347EA630()
{
  v7[0] = sub_2347EE9F0();
  uint64_t v1 = *(void *)(v7[0] - 8);
  MEMORY[0x270FA5388](v7[0]);
  uint64_t v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_2347EE9D0();
  MEMORY[0x270FA5388](v4);
  uint64_t v5 = sub_2347EE410();
  MEMORY[0x270FA5388](v5 - 8);
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0;
  *(unsigned char *)(v0 + 32) = 1;
  *(void *)(v0 + 48) = 0;
  *(void *)(v0 + 56) = 0;
  *(unsigned char *)(v0 + 64) = 1;
  *(void *)(v0 + 72) = 0;
  *(unsigned char *)(v0 + 80) = 1;
  *(_DWORD *)(v0 + 84) = 0;
  *(unsigned char *)(v0 + 88) = 1;
  sub_2346DEFA8();
  sub_2347EE3D0();
  v7[1] = MEMORY[0x263F8EE78];
  sub_234723240((unint64_t *)&qword_2687AE910, MEMORY[0x263F8F0F8]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2687AD2C0);
  sub_234723288((unint64_t *)&qword_2687AE920, (uint64_t *)&unk_2687AD2C0);
  sub_2347EEC30();
  (*(void (**)(char *, void, void))(v1 + 104))(v3, *MEMORY[0x263F8F130], v7[0]);
  *(void *)(v0 + 96) = sub_2347EEA20();
  *(void *)(v0 + 104) = 0x4014000000000000;
  return v0;
}

uint64_t sub_2347EA8AC(unint64_t a1, unint64_t a2, char a3)
{
  switch(a3)
  {
    case 1:
      sub_2347EED50();
      swift_bridgeObjectRelease();
      unint64_t v8 = 0xD000000000000015;
      sub_2347EE6F0();
      goto LABEL_7;
    case 2:
      sub_2347EED50();
      swift_bridgeObjectRelease();
      unint64_t v6 = 0xD000000000000021;
      goto LABEL_6;
    case 3:
      sub_2347EED50();
      swift_bridgeObjectRelease();
      unint64_t v6 = 0xD000000000000022;
LABEL_6:
      unint64_t v8 = v6;
LABEL_7:
      sub_2347EE6F0();
      return v8;
    case 4:
      if (a1 | a2) {
        return 0xD00000000000001ALL;
      }
      else {
        return 0xD000000000000019;
      }
    default:
      unint64_t v8 = 0;
      id v5 = (id)a1;
      sub_2347EED50();
      sub_2347EE6F0();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2687ACDD8);
      sub_2347EEE40();
      sub_2347EB3BC((void *)a1, (id)a2, 0);
      return v8;
  }
}

uint64_t sub_2347EAADC()
{
  return sub_2347EA8AC(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
}

void sub_2347EAAE8()
{
  off_2687AF140 = (_UNKNOWN *)MEMORY[0x263F8EE80];
}

uint64_t sub_2347EAAFC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_2347ED490();
  uint64_t v27 = *(void *)(v5 - 8);
  uint64_t v28 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2347EDA80();
  sub_2347EDA70();
  sub_2347EDA40();
  swift_release();
  __swift_project_boxed_opaque_existential_1(v30, v31);
  sub_2347EDA30();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  sub_2347EDA70();
  sub_2347EDA50();
  swift_release();
  __swift_project_boxed_opaque_existential_1(v30, v31);
  uint64_t v8 = sub_2347ED9E0();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  if (qword_2687ABEA0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v9 = off_2687AF140;
  if (*((void *)off_2687AF140 + 2))
  {
    swift_bridgeObjectRetain();
    unint64_t v10 = sub_2347BFB5C(a1, a2);
    if (v11)
    {
      uint64_t AssetHandleForURL = *(void *)(v9[7] + 8 * v10);
      swift_endAccess();
      swift_bridgeObjectRelease();
      goto LABEL_10;
    }
    swift_bridgeObjectRelease();
  }
  v26[1] = v8;
  swift_endAccess();
  type metadata accessor for RERoomsMaterial();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v14 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  float32x4_t v15 = (void *)sub_2347EE5F0();
  id v16 = objc_msgSend(v14, sel_pathForResource_ofType_, v15, 0);

  if (!v16)
  {
    sub_2346BB03C();
    swift_allocError();
    *(void *)uint64_t v22 = a1;
    *(void *)(v22 + 8) = a2;
    *(unsigned char *)(v22 + 16) = 1;
    swift_willThrow();

LABEL_15:
    uint64_t v19 = v29;
    goto LABEL_16;
  }
  v26[0] = v2;
  sub_2347EE620();

  sub_2347ED3C0();
  swift_bridgeObjectRelease();
  double v17 = (void *)sub_2347ED3F0();
  uint64_t AssetHandleForURL = REAssetManagerCreateAssetHandleForURL();

  if (!AssetHandleForURL)
  {
    sub_2346BB03C();
    swift_allocError();
    *(void *)uint64_t v24 = a1;
    *(void *)(v24 + 8) = a2;
    *(unsigned char *)(v24 + 16) = 2;
    swift_willThrow();

    (*(void (**)(char *, uint64_t))(v27 + 8))(v7, v28);
    goto LABEL_15;
  }
  swift_beginAccess();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  float32x4_t v32 = off_2687AF140;
  off_2687AF140 = (_UNKNOWN *)0x8000000000000000;
  sub_2347AA2B0(AssetHandleForURL, a1, a2, isUniquelyReferenced_nonNull_native);
  off_2687AF140 = v32;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();

  (*(void (**)(char *, uint64_t))(v27 + 8))(v7, v28);
LABEL_10:
  uint64_t v19 = v29;
  *(void *)(v29 + 16) = AssetHandleForURL;
  uint64_t v20 = RERenderManagerMaterialParameterBlockCreateWithAsset();
  if (!v20)
  {
    sub_2346BB03C();
    swift_allocError();
    *(void *)uint64_t v23 = a1;
    *(void *)(v23 + 8) = a2;
    *(unsigned char *)(v23 + 16) = 3;
    swift_willThrow();
LABEL_16:
    type metadata accessor for RERoomsMaterial();
    swift_deallocPartialClassInstance();
    return v19;
  }
  uint64_t v21 = v20;
  swift_bridgeObjectRelease();
  *(void *)(v19 + 24) = v21;
  return v19;
}

uint64_t sub_2347EAF68()
{
  sub_2347ED680();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RERoomsMaterial()
{
  return self;
}

uint64_t sub_2347EAFC4()
{
  uint64_t v0 = sub_2347ED670();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2347EDEA0();
  sub_2347ED600();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  REMeshComponentGetComponentType();
  if (REEntityGetComponentByClass())
  {
    REMeshComponentRemoveAllMaterials();
    REMeshComponentAddMaterial();
    REMaterialParameterBlockArrayComponentGetComponentType();
    REEntityGetOrAddComponentByClass();
    if (REMaterialParameterBlockArrayComponentSize() != 1) {
      REMaterialParameterBlockArrayComponentResize();
    }
    return REMaterialParameterBlockArrayComponentSetBlockAtIndex();
  }
  else
  {
    sub_2346BB03C();
    swift_allocError();
    *(void *)uint64_t v5 = 0;
    *(void *)(v5 + 8) = 0;
    *(unsigned char *)(v5 + 16) = 4;
    return swift_willThrow();
  }
}

uint64_t sub_2347EB158(float32x2_t a1)
{
  sub_2347EE6A0();
  REMaterialParameterBlockGetFloat2();
  swift_release();
  int8x8_t v2 = vmvn_s8((int8x8_t)vceq_f32(0, a1));
  char v3 = v2.i8[0] | v2.i8[4];
  if ((v2.i8[0] | v2.i8[4]))
  {
    sub_2347EE6A0();
    REMaterialParameterBlockSetFloat2();
    swift_release();
  }
  return v3 & 1;
}

uint64_t sub_2347EB234(__n128 a1)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  long long v9 = 0uLL;
  sub_2347EE6A0();
  REMaterialParameterBlockGetFloat4();
  swift_release();
  uint64_t v1 = 0;
  while (1)
  {
    __n128 v7 = a1;
    float v3 = *(float *)((unint64_t)&v7 & 0xFFFFFFFFFFFFFFF3 | (4 * (v1 & 3)));
    long long v8 = v9;
    float v4 = *(float *)((unint64_t)&v8 & 0xFFFFFFFFFFFFFFF3 | (4 * (v1 & 3)));
    BOOL v2 = v3 == v4;
    if (v1 == 3) {
      break;
    }
    while (1)
    {
      ++v1;
      if (v2) {
        break;
      }
      if (v1 == 3) {
        goto LABEL_8;
      }
      BOOL v2 = 0;
    }
  }
  if (v3 == v4) {
    return 0;
  }
LABEL_8:
  sub_2347EE6A0();
  REMaterialParameterBlockSetFloat4();
  swift_release();
  return 1;
}

id sub_2347EB35C(id result, id a2, char a3)
{
  switch(a3)
  {
    case 0:
      uint64_t result = result;
      break;
    case 1:
    case 2:
    case 3:
      uint64_t result = (id)swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

void destroy for RERoomsMaterialError(uint64_t a1)
{
}

void sub_2347EB3BC(void *a1, id a2, char a3)
{
  switch(a3)
  {
    case 0:

      break;
    case 1:
    case 2:
    case 3:
      swift_bridgeObjectRelease();
      break;
    default:
      return;
  }
}

uint64_t _s8RoomPlan20RERoomsMaterialErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  float v4 = *(void **)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_2347EB35C(*(id *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for RERoomsMaterialError(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  float v4 = *(void **)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_2347EB35C(*(id *)a2, v4, v5);
  uint64_t v6 = *(void **)a1;
  __n128 v7 = *(void **)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_2347EB3BC(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for RERoomsMaterialError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  float v4 = *(void **)a1;
  char v5 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_2347EB3BC(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for RERoomsMaterialError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 252);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 4) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for RERoomsMaterialError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 252;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_2347EB584(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 3u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 4);
  }
}

uint64_t sub_2347EB59C(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(void *)uint64_t result = a2 - 4;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 4;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for RERoomsMaterialError()
{
  return &type metadata for RERoomsMaterialError;
}

__n128 __swift_memcpy200_16(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  long long v5 = *(_OWORD *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  __n128 result = *(__n128 *)(a2 + 144);
  long long v9 = *(_OWORD *)(a2 + 160);
  long long v10 = *(_OWORD *)(a2 + 176);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 176) = v10;
  *(__n128 *)(a1 + 144) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ARCameraParameters(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 200)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ARCameraParameters(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 200) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ARCameraParameters()
{
  return &type metadata for ARCameraParameters;
}

id sub_2347EB698(void *a1, uint64_t a2, double a3, double a4)
{
  id v9 = objc_msgSend(a1, sel_camera);
  objc_msgSend(v9, sel_viewMatrixForOrientation_, a2);
  simd_float4 v25 = v11;
  simd_float4 v27 = v10;
  simd_float4 v21 = v13;
  simd_float4 v23 = v12;

  v32.columns[1] = v25;
  v32.columns[0] = v27;
  v32.columns[3] = v21;
  v32.columns[2] = v23;
  *(simd_float4x4 *)uint64_t v4 = __invert_f4(v32);
  id v14 = objc_msgSend(a1, sel_camera);
  objc_msgSend(v14, sel_projectionMatrixForOrientation_viewportSize_zNear_zFar_, a2, a3, a4, *(double *)(v4 + 184), *(double *)(v4 + 192));
  float32x4_t v22 = v15;
  float32x4_t v24 = v16;
  float32x4_t v26 = v17;
  float32x4_t v28 = v18;

  *(float32x4_t *)(v4 + 64) = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)xmmword_2347F1FE0, v22.f32[0]), (float32x4_t)xmmword_2347F2000, *(float32x2_t *)v22.f32, 1), (float32x4_t)xmmword_2347F1FD0, v22, 2), (float32x4_t)xmmword_2347FB820, v22, 3);
  *(float32x4_t *)(v4 + 80) = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)xmmword_2347F1FE0, v24.f32[0]), (float32x4_t)xmmword_2347F2000, *(float32x2_t *)v24.f32, 1), (float32x4_t)xmmword_2347F1FD0, v24, 2), (float32x4_t)xmmword_2347FB820, v24, 3);
  *(float32x4_t *)(v4 + 96) = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)xmmword_2347F1FE0, v26.f32[0]), (float32x4_t)xmmword_2347F2000, *(float32x2_t *)v26.f32, 1), (float32x4_t)xmmword_2347F1FD0, v26, 2), (float32x4_t)xmmword_2347FB820, v26, 3);
  *(float32x4_t *)(v4 + 112) = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)xmmword_2347F1FE0, v28.f32[0]), (float32x4_t)xmmword_2347F2000, *(float32x2_t *)v28.f32, 1), (float32x4_t)xmmword_2347F1FD0, v28, 2), (float32x4_t)xmmword_2347FB820, v28, 3);
  objc_msgSend(a1, sel_displayTransformForOrientation_viewportSize_, a2, a3, a4);
  *(_OWORD *)(v4 + 136) = v29;
  *(_OWORD *)(v4 + 152) = v30;
  *(_OWORD *)(v4 + 168) = v31;
  id result = objc_msgSend(a1, sel_timestamp);
  *(void *)(v4 + 128) = v20;
  return result;
}

float32x2_t *sub_2347EB82C(float32x2_t a1, float32x2_t a2, float32x2_t a3, float a4)
{
  id result = v4;
  float32x2_t v6 = vmul_f32(a3, (float32x2_t)0x3F0000003F000000);
  float32x2_t v7 = vneg_f32(v6);
  float32x2_t v8 = (float32x2_t)vbsl_s8((int8x8_t)vcgt_f32(a1, a2), (int8x8_t)a2, (int8x8_t)a1);
  float32x2_t v9 = (float32x2_t)vbsl_s8((int8x8_t)vcge_f32(a2, a1), (int8x8_t)a2, (int8x8_t)a1);
  __int32 v10 = v8.f32[0] <= (float)(a4 - v6.f32[0]);
  if (v8.f32[1] <= (float)(a4 - v6.f32[1])) {
    v10 |= 4u;
  }
  if ((float)(v6.f32[0] - a4) <= v9.f32[0]) {
    v10 |= 2u;
  }
  BOOL v11 = (float)(v6.f32[1] - a4) > v9.f32[1];
  float32x2_t v13 = vminnm_f32(vmaxnm_f32(v8, v7), v6);
  float32x2_t v12 = vminnm_f32(vmaxnm_f32(v9, v7), v6);
  v4[2] = v13;
  v4[3] = (float32x2_t)__PAIR64__(v13.u32[1], v12.u32[0]);
  long long v4[4] = v12;
  v13.i32[1] = v12.i32[1];
  if (!v11) {
    v10 |= 8u;
  }
  v4[5] = v13;
  v4[6].i32[0] = v10;
  return result;
}

uint64_t sub_2347EB8C8()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for OpeningElement()
{
  return self;
}

uint64_t sub_2347EB8FC(float32x4_t a1, float32x4_t a2, float32x4_t a3, float32x4_t a4, float32x4_t a5, float32x4_t a6, float32x4_t a7, float32x4_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, float32x4_t a17, float32x2_t a18)
{
  float32x4_t v18 = vaddq_f32(vmlaq_n_f32(vmlaq_n_f32(vmulq_n_f32(a1, -0.5 * a5.f32[0]), a2, vmuls_lane_f32(-0.5, *(float32x2_t *)a5.f32, 1)), a3, vmuls_lane_f32(-0.5, a5, 2)), a4);
  float32x4_t v19 = vaddq_f32(vmlaq_n_f32(vmlaq_n_f32(vmulq_n_f32(a1, 0.5 * a5.f32[0]), a2, vmuls_lane_f32(0.5, *(float32x2_t *)a5.f32, 1)), a3, vmuls_lane_f32(0.5, a5, 2)), a4);
  float32x2_t v23 = (float32x2_t)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a6, v18.f32[0]), a7, *(float32x2_t *)v18.f32, 1), a8, v18, 2), a17, v18, 3).u64[0];
  float32x2_t v22 = (float32x2_t)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a6, v19.f32[0]), a7, *(float32x2_t *)v19.f32, 1), a8, v19, 2), a17, v19, 3).u64[0];
  type metadata accessor for OpeningElement();
  uint64_t v20 = swift_allocObject();
  sub_2347EB82C(v23, v22, a18, 0.03);
  return v20;
}

uint64_t sub_2347EB9D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t sub_2347EB9E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2347ECB80(a1, a2, a3, (uint64_t *)&unk_2687AF180);
}

uint64_t sub_2347EB9F0()
{
  return sub_2347EE540();
}

void sub_2347EBA38()
{
}

void sub_2347EBA60()
{
}

dispatch_semaphore_t sub_2347EBA7C()
{
  type metadata accessor for OULogManager();
  uint64_t v0 = swift_allocObject();
  *(unsigned char *)(v0 + 16) = 0;
  *(void *)(v0 + 32) = 0;
  swift_unknownObjectWeakInit();
  dispatch_semaphore_t result = dispatch_semaphore_create(1);
  uint64_t v2 = MEMORY[0x263F8EE78];
  *(void *)(v0 + 40) = result;
  *(void *)(v0 + 48) = v2;
  qword_2687BE550 = v0;
  return result;
}

uint64_t sub_2347EBADC()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtCC8RoomPlan12OULogManagerP33_32039FB16B3B97E8BBC711C9428C4A1610OULogEntry_uuid;
  uint64_t v2 = sub_2347ED5C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_2347EBB94(uint64_t a1)
{
  uint64_t v3 = sub_2347ED5C0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  float32x2_t v6 = (char *)v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = type metadata accessor for CapturedRoom.Object(0);
  uint64_t v7 = *(void *)(v44 - 8);
  MEMORY[0x270FA5388](v44);
  float32x2_t v9 = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __int32 v10 = (void *)(v1 + 48);
  swift_beginAccess();
  *(void *)(v1 + 48) = MEMORY[0x263F8EE78];
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a1 + 40);
  uint64_t v45 = *(void *)(v11 + 16);
  if (v45)
  {
    v34[1] = v1;
    uint64_t v12 = v11 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    uint64_t v39 = (void (**)(char *, char *, uint64_t))(v4 + 16);
    float32x4_t v38 = (void (**)(uint64_t, char *, uint64_t))(v4 + 32);
    swift_bridgeObjectRetain();
    unint64_t v13 = 0;
    uint64_t v14 = v45;
    uint64_t v37 = v3;
    uint64_t v36 = v6;
    uint64_t v35 = v7;
    uint64_t v42 = v10;
    double v43 = v9;
    uint64_t v40 = v12;
    uint64_t v41 = v11;
    do
    {
      if (v13 >= *(void *)(v11 + 16))
      {
        __break(1u);
        JUMPOUT(0x2347EC09CLL);
      }
      sub_2347ECF20(v12 + *(void *)(v7 + 72) * v13, (uint64_t)v9);
      uint64_t v15 = 0x7269616843;
      unint64_t v16 = 0xE500000000000000;
      switch(*v9)
      {
        case 0:
          uint64_t v15 = 0x656761726F7453;
          unint64_t v16 = 0xE700000000000000;
          goto LABEL_10;
        case 10:
          uint64_t v15 = 0x656C626154;
          goto LABEL_10;
        case 11:
          unint64_t v16 = 0xE400000000000000;
          uint64_t v15 = 1634103123;
          goto LABEL_10;
        case 12:
LABEL_10:
          uint64_t v48 = v15;
          if (sub_2347EF090()) {
            goto LABEL_3;
          }
          uint64_t v17 = v44;
          (*v39)(v6, &v9[*(int *)(v44 + 32)], v3);
          long long v47 = *((_OWORD *)v9 + 1);
          uint64_t v18 = *(void *)&v9[*(int *)(v17 + 36)];
          int64_t v19 = *(void *)(v18 + 16);
          if (v19)
          {
            uint64_t v52 = MEMORY[0x263F8EE78];
            swift_bridgeObjectRetain();
            sub_234745930(0, v19, 0);
            uint64_t v46 = v18;
            uint64_t v20 = v18 + 32;
            uint64_t v21 = v52;
            do
            {
              sub_2346A1DCC(v20, (uint64_t)v49);
              uint64_t v22 = v50;
              uint64_t v23 = v51;
              __swift_project_boxed_opaque_existential_1(v49, v50);
              uint64_t v24 = sub_2346F874C(v22, v23);
              uint64_t v26 = v25;
              __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_234745930(0, *(void *)(v21 + 16) + 1, 1);
                uint64_t v21 = v52;
              }
              unint64_t v28 = *(void *)(v21 + 16);
              unint64_t v27 = *(void *)(v21 + 24);
              if (v28 >= v27 >> 1)
              {
                sub_234745930(v27 > 1, v28 + 1, 1);
                uint64_t v21 = v52;
              }
              *(void *)(v21 + 16) = v28 + 1;
              uint64_t v29 = v21 + 16 * v28;
              *(void *)(v29 + 32) = v24;
              *(void *)(v29 + 40) = v26;
              v20 += 40;
              --v19;
            }
            while (v19);
            swift_bridgeObjectRelease();
            uint64_t v3 = v37;
            float32x2_t v6 = v36;
            uint64_t v7 = v35;
          }
          else
          {
            uint64_t v21 = MEMORY[0x263F8EE78];
          }
          type metadata accessor for OULogManager.OULogEntry();
          uint64_t v30 = swift_allocObject();
          *(void *)(v30 + 16) = v48;
          *(void *)(v30 + 24) = v16;
          (*v38)(v30 + OBJC_IVAR____TtCC8RoomPlan12OULogManagerP33_32039FB16B3B97E8BBC711C9428C4A1610OULogEntry_uuid, v6, v3);
          *(_OWORD *)(v30
                    + OBJC_IVAR____TtCC8RoomPlan12OULogManagerP33_32039FB16B3B97E8BBC711C9428C4A1610OULogEntry_dimensions) = v47;
          *(void *)(v30
                    + OBJC_IVAR____TtCC8RoomPlan12OULogManagerP33_32039FB16B3B97E8BBC711C9428C4A1610OULogEntry_attributes) = v21;
          long long v31 = v42;
          swift_beginAccess();
          uint64_t v32 = swift_retain();
          MEMORY[0x237DC6730](v32);
          if (*(void *)((*v31 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v31 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_2347EE800();
          }
          sub_2347EE820();
          sub_2347EE7F0();
          swift_endAccess();
          swift_release();
          float32x2_t v9 = v43;
          uint64_t v12 = v40;
          uint64_t v11 = v41;
          uint64_t v14 = v45;
          break;
        default:
LABEL_3:
          swift_bridgeObjectRelease();
          break;
      }
      ++v13;
      sub_2347ECF84((uint64_t)v9);
    }
    while (v13 != v14);
    swift_bridgeObjectRelease();
  }
  return sub_2347EC0D0();
}

uint64_t sub_2347EC0D0()
{
  uint64_t v1 = sub_2347EE3B0();
  uint64_t v17 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_2347EE410();
  uint64_t v4 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  float32x2_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_2347EE430();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  __int32 v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = *(id *)(v0 + 40);
  sub_2347EE420();
  sub_2347EEA40();

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t result = sub_2347EE3A0();
  if ((result & 1) == 0)
  {
    sub_2346DEFA8();
    unint64_t v13 = (void *)sub_2347EEA00();
    uint64_t v14 = swift_allocObject();
    swift_weakInit();
    aBlock[4] = sub_2347ECF00;
    aBlock[5] = v14;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_23477C05C;
    aBlock[3] = &block_descriptor_10;
    uint64_t v15 = _Block_copy(aBlock);
    swift_release();
    sub_2347EE3D0();
    aBlock[0] = MEMORY[0x263F8EE78];
    sub_234729628();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2687AE930);
    sub_234729680();
    sub_2347EEC30();
    MEMORY[0x237DC6990](0, v6, v3, v15);
    _Block_release(v15);

    (*(void (**)(char *, uint64_t))(v17 + 8))(v3, v1);
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v16);
  }
  return result;
}

uint64_t sub_2347EC41C()
{
  uint64_t v0 = sub_2347ED2C0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = &v11[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v5 = result;
    sub_2347EC5BC((uint64_t)v3);
    uint64_t v6 = MEMORY[0x237DC8170](v5 + 24);
    if (v6)
    {
      uint64_t v7 = v6 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_debugDelegate;
      swift_beginAccess();
      if (MEMORY[0x237DC8170](v7))
      {
        uint64_t v8 = *(void *)(v7 + 8);
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(unsigned char *, uint64_t, uint64_t))(v8 + 16))(v3, ObjectType, v8);
        swift_unknownObjectRelease();
      }
      swift_unknownObjectRelease();
    }
    id v10 = *(id *)(v5 + 40);
    sub_2347EEA50();
    swift_release();

    return (*(uint64_t (**)(unsigned char *, uint64_t))(v1 + 8))(v3, v0);
  }
  return result;
}

uint64_t sub_2347EC5BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_2347ED300();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v55 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_2347ED2C0();
  uint64_t v5 = *(void *)(v54 - 8);
  MEMORY[0x270FA5388](v54);
  uint64_t v53 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = a1;
  sub_2347ED2B0();
  swift_beginAccess();
  unint64_t v7 = *(void *)(v1 + 48);
  if (!(v7 >> 62))
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_3;
    }
LABEL_11:
    swift_bridgeObjectRelease();
    uint64_t KeyPath = swift_getKeyPath();
    MEMORY[0x270FA5388](KeyPath);
    *(&v46 - 2) = v44;
    swift_getKeyPath();
    id v61 = objc_msgSend(self, sel_systemFontOfSize_, 30.0);
    sub_2347ECDCC();
    return sub_2347ED270();
  }
LABEL_13:
  swift_bridgeObjectRetain_n();
  uint64_t v8 = sub_2347EEEC0();
  swift_bridgeObjectRelease();
  if (!v8) {
    goto LABEL_11;
  }
LABEL_3:
  unint64_t v52 = v7 & 0xC000000000000001;
  long long v49 = (void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v9 = 4;
  uint64_t v10 = MEMORY[0x263F8D310];
  long long v60 = xmmword_2347F4BC0;
  unint64_t v47 = 0x8000000234803E60;
  unint64_t v48 = 0x80000002347FF840;
  uint64_t v50 = v8;
  unint64_t v51 = v7;
  while (1)
  {
    uint64_t v5 = v9 - 4;
    if (v52)
    {
      uint64_t v11 = MEMORY[0x237DC6CF0](v9 - 4, v7);
      uint64_t v12 = v9 - 3;
      if (__OFADD__(v5, 1)) {
        goto LABEL_12;
      }
    }
    else
    {
      uint64_t v11 = *(void *)(v7 + 8 * v9);
      swift_retain();
      uint64_t v12 = v9 - 3;
      if (__OFADD__(v5, 1))
      {
LABEL_12:
        __break(1u);
        goto LABEL_13;
      }
    }
    uint64_t v58 = v12;
    uint64_t v59 = v9;
    id v61 = (id)sub_2347ED550();
    uint64_t v62 = v13;
    sub_2346EFB68();
    uint64_t v14 = sub_2347EEBC0();
    swift_bridgeObjectRelease();
    uint64_t v15 = *(void *)(v14 + 16);
    if (!v15) {
      break;
    }
    uint64_t v16 = (uint64_t *)(v14 + 32 * v15);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    uint64_t v19 = v16[2];
    uint64_t v20 = v16[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v57 = MEMORY[0x237DC6630](v17, v18, v19, v20);
    swift_bridgeObjectRelease();
    uint64_t v21 = v11;
    uint64_t v22 = *(void **)(v11 + 16);
    uint64_t v23 = *(void *)(v21 + 24);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2687ACCE0);
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = v60;
    uint64_t v25 = v21 + OBJC_IVAR____TtCC8RoomPlan12OULogManagerP33_32039FB16B3B97E8BBC711C9428C4A1610OULogEntry_dimensions;
    int v26 = *(_DWORD *)(v21
                    + OBJC_IVAR____TtCC8RoomPlan12OULogManagerP33_32039FB16B3B97E8BBC711C9428C4A1610OULogEntry_dimensions);
    uint64_t v27 = MEMORY[0x263F8D5C8];
    *(void *)(v24 + 56) = MEMORY[0x263F8D5C8];
    uint64_t v28 = MEMORY[0x263F8D648];
    *(void *)(v24 + 64) = MEMORY[0x263F8D648];
    *(_DWORD *)(v24 + 32) = v26;
    int v29 = *(_DWORD *)(v25 + 4);
    *(void *)(v24 + 96) = v27;
    *(void *)(v24 + 104) = v28;
    *(_DWORD *)(v24 + 72) = v29;
    int v30 = *(_DWORD *)(v25 + 8);
    *(void *)(v24 + 136) = v27;
    *(void *)(v24 + 144) = v28;
    *(_DWORD *)(v24 + 112) = v30;
    swift_bridgeObjectRetain();
    uint64_t v31 = sub_2347EE650();
    uint64_t v33 = v32;
    uint64_t v34 = swift_bridgeObjectRetain();
    uint64_t v35 = MEMORY[0x237DC6760](v34, v10);
    uint64_t v37 = v36;
    swift_bridgeObjectRelease();
    id v61 = v22;
    uint64_t v62 = v23;
    sub_2347EE6F0();
    sub_2347EE6F0();
    swift_bridgeObjectRelease();
    sub_2347EE6F0();
    sub_2347EE6F0();
    sub_2347EE6F0();
    sub_2347EE6F0();
    sub_2347EE6F0();
    sub_2347ED2F0();
    float32x4_t v38 = v53;
    sub_2347ED2D0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2687AD118);
    uint64_t v39 = swift_allocObject();
    *(_OWORD *)(v39 + 16) = v60;
    unint64_t v40 = v47;
    *(void *)(v39 + 32) = 0xD000000000000014;
    *(void *)(v39 + 40) = v40;
    *(void *)(v39 + 56) = v10;
    *(void *)(v39 + 64) = v31;
    *(void *)(v39 + 72) = v33;
    *(void *)(v39 + 120) = v10;
    *(void *)(v39 + 88) = v10;
    *(void *)(v39 + 96) = v35;
    *(void *)(v39 + 104) = v37;
    sub_2347EF190();
    swift_bridgeObjectRelease();
    uint64_t v41 = swift_getKeyPath();
    MEMORY[0x270FA5388](v41);
    *(&v46 - 2) = v42;
    swift_getKeyPath();
    id v61 = objc_msgSend(self, sel_systemGreenColor);
    sub_234729544();
    sub_2347ED270();
    sub_2347ED2A0();
    swift_release();
    (*v49)(v38, v54);
    uint64_t v9 = v59 + 1;
    unint64_t v7 = v51;
    if (v58 == v50) {
      goto LABEL_11;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_2347ECB80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  return sub_2347EE570() & 1;
}

uint64_t type metadata accessor for OULogManager()
{
  return self;
}

uint64_t sub_2347ECBFC()
{
  return type metadata accessor for OULogManager.OULogEntry();
}

uint64_t type metadata accessor for OULogManager.OULogEntry()
{
  uint64_t result = qword_2687AF160;
  if (!qword_2687AF160) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2347ECC50()
{
  uint64_t result = sub_2347ED5C0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void sub_2347ECD08()
{
}

void sub_2347ECD28()
{
}

uint64_t sub_2347ECD50()
{
  return 8;
}

uint64_t sub_2347ECD5C()
{
  return swift_release();
}

uint64_t sub_2347ECD64(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_2347ECD70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2347ECB80(a1, a2, a3, (uint64_t *)&unk_2687AF180) & 1;
}

uint64_t sub_2347ECD94(uint64_t a1, uint64_t a2)
{
  return keypath_hashTm(a1, a2, (uint64_t *)&unk_2687AF180);
}

void *sub_2347ECDA0(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

void sub_2347ECDAC()
{
}

unint64_t sub_2347ECDCC()
{
  unint64_t result = qword_2687AF170;
  if (!qword_2687AF170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2687AF170);
  }
  return result;
}

void sub_2347ECE20()
{
}

uint64_t sub_2347ECE48()
{
  return 8;
}

uint64_t sub_2347ECE54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2347ECB80(a1, a2, a3, &qword_2687AF178) & 1;
}

uint64_t sub_2347ECE78(uint64_t a1, uint64_t a2)
{
  return keypath_hashTm(a1, a2, &qword_2687AF178);
}

uint64_t keypath_hashTm(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_2347EE540();
}

uint64_t sub_2347ECEC8()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2347ECF00()
{
  return sub_2347EC41C();
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

uint64_t sub_2347ECF20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CapturedRoom.Object(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2347ECF84(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CapturedRoom.Object(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2347ECFEC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_2347ED000()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DistanceAngleHullPoint()
{
  return self;
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return self;
}

uint64_t sub_2347ED080()
{
  return MEMORY[0x270EEDE28]();
}

uint64_t sub_2347ED090()
{
  return MEMORY[0x270EEDE38]();
}

uint64_t sub_2347ED0A0()
{
  return MEMORY[0x270EEDE58]();
}

uint64_t sub_2347ED0B0()
{
  return MEMORY[0x270EEDE70]();
}

uint64_t sub_2347ED0C0()
{
  return MEMORY[0x270EEDEE8]();
}

uint64_t sub_2347ED0D0()
{
  return MEMORY[0x270EEDF30]();
}

uint64_t sub_2347ED0E0()
{
  return MEMORY[0x270EEDF38]();
}

uint64_t sub_2347ED0F0()
{
  return MEMORY[0x270EEDF80]();
}

uint64_t sub_2347ED100()
{
  return MEMORY[0x270EEDFA0]();
}

uint64_t sub_2347ED110()
{
  return MEMORY[0x270EEDFA8]();
}

uint64_t sub_2347ED120()
{
  return MEMORY[0x270EEDFC0]();
}

uint64_t sub_2347ED130()
{
  return MEMORY[0x270EEE040]();
}

uint64_t sub_2347ED140()
{
  return MEMORY[0x270EEE068]();
}

uint64_t sub_2347ED150()
{
  return MEMORY[0x270EEE0B0]();
}

uint64_t sub_2347ED160()
{
  return MEMORY[0x270EEE1A8]();
}

uint64_t sub_2347ED170()
{
  return MEMORY[0x270EEE1D0]();
}

uint64_t sub_2347ED180()
{
  return MEMORY[0x270EEE208]();
}

uint64_t sub_2347ED190()
{
  return MEMORY[0x270EEE238]();
}

uint64_t sub_2347ED1A0()
{
  return MEMORY[0x270EEE258]();
}

uint64_t sub_2347ED1B0()
{
  return MEMORY[0x270EEE378]();
}

uint64_t sub_2347ED1C0()
{
  return MEMORY[0x270EEE3D0]();
}

uint64_t sub_2347ED1D0()
{
  return MEMORY[0x270EEE628]();
}

uint64_t sub_2347ED1E0()
{
  return MEMORY[0x270EEE638]();
}

uint64_t sub_2347ED1F0()
{
  return MEMORY[0x270EEE658]();
}

uint64_t sub_2347ED200()
{
  return MEMORY[0x270EEE670]();
}

uint64_t sub_2347ED210()
{
  return MEMORY[0x270EEE688]();
}

uint64_t sub_2347ED220()
{
  return MEMORY[0x270EEE920]();
}

uint64_t sub_2347ED230()
{
  return MEMORY[0x270EEE930]();
}

uint64_t sub_2347ED240()
{
  return MEMORY[0x270EEE950]();
}

uint64_t sub_2347ED250()
{
  return MEMORY[0x270F816B0]();
}

uint64_t sub_2347ED260()
{
  return MEMORY[0x270F816C0]();
}

uint64_t sub_2347ED270()
{
  return MEMORY[0x270EEEB18]();
}

uint64_t sub_2347ED280()
{
  return MEMORY[0x270EEEB40]();
}

uint64_t sub_2347ED290()
{
  return MEMORY[0x270EEEBE0]();
}

uint64_t sub_2347ED2A0()
{
  return MEMORY[0x270EEEC40]();
}

uint64_t sub_2347ED2B0()
{
  return MEMORY[0x270EEEDD0]();
}

uint64_t sub_2347ED2C0()
{
  return MEMORY[0x270EEEDD8]();
}

uint64_t sub_2347ED2D0()
{
  return MEMORY[0x270EEEDF0]();
}

uint64_t sub_2347ED2E0()
{
  return MEMORY[0x270EEEEC0]();
}

uint64_t sub_2347ED2F0()
{
  return MEMORY[0x270EEF060]();
}

uint64_t sub_2347ED300()
{
  return MEMORY[0x270EEF070]();
}

uint64_t sub_2347ED310()
{
  return MEMORY[0x270EEF288]();
}

uint64_t sub_2347ED320()
{
  return MEMORY[0x270EEF2A8]();
}

uint64_t sub_2347ED330()
{
  return MEMORY[0x270EEF2B8]();
}

uint64_t sub_2347ED340()
{
  return MEMORY[0x270F816D8]();
}

uint64_t sub_2347ED350()
{
  return MEMORY[0x270EEF840]();
}

uint64_t sub_2347ED360()
{
  return MEMORY[0x270EEFA08]();
}

uint64_t sub_2347ED370()
{
  return MEMORY[0x270EEFA18]();
}

uint64_t sub_2347ED380()
{
  return MEMORY[0x270EEFBC0]();
}

uint64_t sub_2347ED390()
{
  return MEMORY[0x270EEFC10]();
}

uint64_t sub_2347ED3A0()
{
  return MEMORY[0x270EEFC48]();
}

uint64_t sub_2347ED3B0()
{
  return MEMORY[0x270EEFC58]();
}

uint64_t sub_2347ED3C0()
{
  return MEMORY[0x270EEFCB0]();
}

uint64_t sub_2347ED3D0()
{
  return MEMORY[0x270EEFCD0]();
}

uint64_t sub_2347ED3E0()
{
  return MEMORY[0x270EEFCE0]();
}

uint64_t sub_2347ED3F0()
{
  return MEMORY[0x270EEFD28]();
}

uint64_t sub_2347ED400()
{
  return MEMORY[0x270EEFD30]();
}

uint64_t sub_2347ED410()
{
  return MEMORY[0x270EEFD58]();
}

uint64_t sub_2347ED420()
{
  return MEMORY[0x270EEFD78]();
}

uint64_t sub_2347ED430()
{
  return MEMORY[0x270EEFD90]();
}

uint64_t sub_2347ED440()
{
  return MEMORY[0x270EEFDC0]();
}

uint64_t sub_2347ED450()
{
  return MEMORY[0x270EEFE20]();
}

uint64_t sub_2347ED460()
{
  return MEMORY[0x270EEFE68]();
}

uint64_t sub_2347ED470()
{
  return MEMORY[0x270EEFE80]();
}

uint64_t sub_2347ED480()
{
  return MEMORY[0x270EEFF40]();
}

uint64_t sub_2347ED490()
{
  return MEMORY[0x270EEFF68]();
}

uint64_t sub_2347ED4A0()
{
  return MEMORY[0x270EEFF90]();
}

uint64_t sub_2347ED4B0()
{
  return MEMORY[0x270EF0070]();
}

uint64_t sub_2347ED4C0()
{
  return MEMORY[0x270EF0178]();
}

uint64_t sub_2347ED4D0()
{
  return MEMORY[0x270EF01C0]();
}

uint64_t sub_2347ED4E0()
{
  return MEMORY[0x270EF02D8]();
}

uint64_t sub_2347ED4F0()
{
  return MEMORY[0x270EF07E0]();
}

uint64_t sub_2347ED500()
{
  return MEMORY[0x270EF0898]();
}

uint64_t sub_2347ED510()
{
  return MEMORY[0x270EF0998]();
}

uint64_t sub_2347ED520()
{
  return MEMORY[0x270EF0BB8]();
}

uint64_t sub_2347ED530()
{
  return MEMORY[0x270EF0C30]();
}

uint64_t sub_2347ED540()
{
  return MEMORY[0x270EF0C40]();
}

uint64_t sub_2347ED550()
{
  return MEMORY[0x270EF0C68]();
}

uint64_t sub_2347ED560()
{
  return MEMORY[0x270EF0C88]();
}

uint64_t sub_2347ED570()
{
  return MEMORY[0x270EF0CB0]();
}

uint64_t sub_2347ED580()
{
  return MEMORY[0x270EF0CB8]();
}

uint64_t sub_2347ED590()
{
  return MEMORY[0x270EF0CC8]();
}

uint64_t sub_2347ED5A0()
{
  return MEMORY[0x270EF0CE0]();
}

uint64_t sub_2347ED5B0()
{
  return MEMORY[0x270EF0D08]();
}

uint64_t sub_2347ED5C0()
{
  return MEMORY[0x270EF0D18]();
}

uint64_t sub_2347ED5D0()
{
  return MEMORY[0x270EF0D20]();
}

uint64_t sub_2347ED5E0()
{
  return MEMORY[0x270EF0FA0]();
}

uint64_t sub_2347ED5F0()
{
  return MEMORY[0x270EF10A8]();
}

uint64_t sub_2347ED600()
{
  return MEMORY[0x270EFB9F8]();
}

uint64_t sub_2347ED610()
{
  return MEMORY[0x270EFBA00]();
}

uint64_t sub_2347ED620()
{
  return MEMORY[0x270EFBA28]();
}

uint64_t sub_2347ED630()
{
  return MEMORY[0x270EFBA30]();
}

uint64_t sub_2347ED640()
{
  return MEMORY[0x270EFBA58]();
}

uint64_t sub_2347ED650()
{
  return MEMORY[0x270EFBA68]();
}

uint64_t sub_2347ED660()
{
  return MEMORY[0x270EFBAA0]();
}

uint64_t sub_2347ED670()
{
  return MEMORY[0x270EFBAA8]();
}

uint64_t sub_2347ED680()
{
  return MEMORY[0x270EFBAB0]();
}

uint64_t sub_2347ED690()
{
  return MEMORY[0x270EFBAB8]();
}

uint64_t sub_2347ED6A0()
{
  return MEMORY[0x270EFBAC0]();
}

uint64_t sub_2347ED6B0()
{
  return MEMORY[0x270EFBAD0]();
}

uint64_t sub_2347ED6C0()
{
  return MEMORY[0x270EFBAD8]();
}

uint64_t sub_2347ED6D0()
{
  return MEMORY[0x270EFBAE0]();
}

uint64_t sub_2347ED6E0()
{
  return MEMORY[0x270EFBAE8]();
}

uint64_t sub_2347ED6F0()
{
  return MEMORY[0x270EFBAF0]();
}

uint64_t sub_2347ED700()
{
  return MEMORY[0x270EFBB00]();
}

uint64_t sub_2347ED710()
{
  return MEMORY[0x270EFBB08]();
}

uint64_t sub_2347ED720()
{
  return MEMORY[0x270EFBB18]();
}

uint64_t sub_2347ED730()
{
  return MEMORY[0x270EFBB30]();
}

uint64_t sub_2347ED740()
{
  return MEMORY[0x270EFBB38]();
}

uint64_t sub_2347ED750()
{
  return MEMORY[0x270EFBB58]();
}

uint64_t sub_2347ED760()
{
  return MEMORY[0x270EFBB98]();
}

uint64_t sub_2347ED770()
{
  return MEMORY[0x270EFBBA0]();
}

uint64_t sub_2347ED780()
{
  return MEMORY[0x270EFBBA8]();
}

uint64_t sub_2347ED790()
{
  return MEMORY[0x270EFBBB8]();
}

uint64_t sub_2347ED7A0()
{
  return MEMORY[0x270EFBBC8]();
}

uint64_t sub_2347ED7B0()
{
  return MEMORY[0x270EFBBE8]();
}

uint64_t sub_2347ED7C0()
{
  return MEMORY[0x270EFBBF0]();
}

uint64_t sub_2347ED7D0()
{
  return MEMORY[0x270EFBBF8]();
}

uint64_t sub_2347ED7E0()
{
  return MEMORY[0x270EFBC00]();
}

uint64_t sub_2347ED7F0()
{
  return MEMORY[0x270EFBC08]();
}

uint64_t sub_2347ED800()
{
  return MEMORY[0x270EFBC10]();
}

uint64_t sub_2347ED810()
{
  return MEMORY[0x270EFBC18]();
}

uint64_t sub_2347ED820()
{
  return MEMORY[0x270EFBC20]();
}

uint64_t sub_2347ED830()
{
  return MEMORY[0x270EFBC28]();
}

uint64_t sub_2347ED840()
{
  return MEMORY[0x270EFBC30]();
}

uint64_t sub_2347ED850()
{
  return MEMORY[0x270EFBC38]();
}

uint64_t sub_2347ED860()
{
  return MEMORY[0x270EFBC40]();
}

uint64_t sub_2347ED870()
{
  return MEMORY[0x270EFBC48]();
}

uint64_t sub_2347ED880()
{
  return MEMORY[0x270EFBC60]();
}

uint64_t sub_2347ED890()
{
  return MEMORY[0x270EFBC68]();
}

uint64_t sub_2347ED8A0()
{
  return MEMORY[0x270EFBC70]();
}

uint64_t sub_2347ED8B0()
{
  return MEMORY[0x270EFCF38]();
}

uint64_t sub_2347ED8C0()
{
  return MEMORY[0x270EFBC78]();
}

uint64_t sub_2347ED8D0()
{
  return MEMORY[0x270EFBC88]();
}

uint64_t sub_2347ED8E0()
{
  return MEMORY[0x270EFBC90]();
}

uint64_t sub_2347ED8F0()
{
  return MEMORY[0x270EFBC98]();
}

uint64_t sub_2347ED900()
{
  return MEMORY[0x270EFBCA8]();
}

uint64_t sub_2347ED910()
{
  return MEMORY[0x270EFBCB0]();
}

uint64_t sub_2347ED920()
{
  return MEMORY[0x270EFCF40]();
}

uint64_t sub_2347ED930()
{
  return MEMORY[0x270EFBCB8]();
}

uint64_t sub_2347ED940()
{
  return MEMORY[0x270EFBCC0]();
}

uint64_t sub_2347ED950()
{
  return MEMORY[0x270EFBCC8]();
}

uint64_t sub_2347ED960()
{
  return MEMORY[0x270EFBCD0]();
}

uint64_t sub_2347ED970()
{
  return MEMORY[0x270EFBCD8]();
}

uint64_t sub_2347ED980()
{
  return MEMORY[0x270EFBCE0]();
}

uint64_t sub_2347ED990()
{
  return MEMORY[0x270EFBCE8]();
}

uint64_t sub_2347ED9A0()
{
  return MEMORY[0x270EFBCF8]();
}

uint64_t sub_2347ED9B0()
{
  return MEMORY[0x270EFBD00]();
}

uint64_t sub_2347ED9C0()
{
  return MEMORY[0x270EFBD10]();
}

uint64_t sub_2347ED9D0()
{
  return MEMORY[0x270EFBD18]();
}

uint64_t sub_2347ED9E0()
{
  return MEMORY[0x270EFBDB0]();
}

uint64_t sub_2347ED9F0()
{
  return MEMORY[0x270EFBDB8]();
}

uint64_t sub_2347EDA00()
{
  return MEMORY[0x270EFBDD8]();
}

uint64_t sub_2347EDA10()
{
  return MEMORY[0x270EFBDE0]();
}

uint64_t sub_2347EDA20()
{
  return MEMORY[0x270EFBDE8]();
}

uint64_t sub_2347EDA30()
{
  return MEMORY[0x270EFBDF0]();
}

uint64_t sub_2347EDA40()
{
  return MEMORY[0x270EFBE18]();
}

uint64_t sub_2347EDA50()
{
  return MEMORY[0x270EFBE28]();
}

uint64_t sub_2347EDA60()
{
  return MEMORY[0x270EFBE30]();
}

uint64_t sub_2347EDA70()
{
  return MEMORY[0x270EFBE38]();
}

uint64_t sub_2347EDA80()
{
  return MEMORY[0x270EFBE40]();
}

uint64_t sub_2347EDA90()
{
  return MEMORY[0x270EFBE80]();
}

uint64_t sub_2347EDAA0()
{
  return MEMORY[0x270EFBE88]();
}

uint64_t sub_2347EDAB0()
{
  return MEMORY[0x270EFBE90]();
}

uint64_t sub_2347EDAC0()
{
  return MEMORY[0x270EFBE98]();
}

uint64_t sub_2347EDAD0()
{
  return MEMORY[0x270EFBEA0]();
}

uint64_t sub_2347EDAE0()
{
  return MEMORY[0x270EFBEA8]();
}

uint64_t sub_2347EDAF0()
{
  return MEMORY[0x270EFBEB0]();
}

uint64_t sub_2347EDB00()
{
  return MEMORY[0x270EFBF58]();
}

uint64_t sub_2347EDB10()
{
  return MEMORY[0x270EFBF60]();
}

uint64_t sub_2347EDB20()
{
  return MEMORY[0x270EFBF98]();
}

uint64_t sub_2347EDB30()
{
  return MEMORY[0x270EFC008]();
}

uint64_t sub_2347EDB40()
{
  return MEMORY[0x270EFC010]();
}

uint64_t sub_2347EDB50()
{
  return MEMORY[0x270EFC040]();
}

uint64_t sub_2347EDB60()
{
  return MEMORY[0x270EFC048]();
}

uint64_t sub_2347EDB70()
{
  return MEMORY[0x270EFCF60]();
}

uint64_t sub_2347EDB80()
{
  return MEMORY[0x270EFC060]();
}

uint64_t sub_2347EDB90()
{
  return MEMORY[0x270EFC068]();
}

uint64_t sub_2347EDBA0()
{
  return MEMORY[0x270EFC070]();
}

uint64_t sub_2347EDBB0()
{
  return MEMORY[0x270EFC080]();
}

uint64_t sub_2347EDBC0()
{
  return MEMORY[0x270EFC468]();
}

uint64_t sub_2347EDBD0()
{
  return MEMORY[0x270EFC490]();
}

uint64_t sub_2347EDBE0()
{
  return MEMORY[0x270EFC4D0]();
}

uint64_t sub_2347EDBF0()
{
  return MEMORY[0x270EFC4E8]();
}

uint64_t sub_2347EDC00()
{
  return MEMORY[0x270EFC4F0]();
}

uint64_t sub_2347EDC10()
{
  return MEMORY[0x270EFCF78]();
}

uint64_t sub_2347EDC20()
{
  return MEMORY[0x270EFCF80]();
}

uint64_t sub_2347EDC30()
{
  return MEMORY[0x270EFCFA0]();
}

uint64_t sub_2347EDC40()
{
  return MEMORY[0x270EFCFB0]();
}

uint64_t sub_2347EDC50()
{
  return MEMORY[0x270EFCFB8]();
}

uint64_t sub_2347EDC60()
{
  return MEMORY[0x270EFCFC0]();
}

uint64_t sub_2347EDC70()
{
  return MEMORY[0x270EFCFC8]();
}

uint64_t sub_2347EDC80()
{
  return MEMORY[0x270EFCFF0]();
}

uint64_t sub_2347EDC90()
{
  return MEMORY[0x270EFD000]();
}

uint64_t sub_2347EDCA0()
{
  return MEMORY[0x270EFD020]();
}

uint64_t sub_2347EDCB0()
{
  return MEMORY[0x270EFD058]();
}

uint64_t sub_2347EDCC0()
{
  return MEMORY[0x270EFD060]();
}

uint64_t sub_2347EDCD0()
{
  return MEMORY[0x270EFD078]();
}

uint64_t sub_2347EDCE0()
{
  return MEMORY[0x270EFD080]();
}

uint64_t sub_2347EDCF0()
{
  return MEMORY[0x270EFD088]();
}

uint64_t sub_2347EDD00()
{
  return MEMORY[0x270EFD090]();
}

uint64_t sub_2347EDD10()
{
  return MEMORY[0x270EFD098]();
}

uint64_t sub_2347EDD20()
{
  return MEMORY[0x270EFD0A8]();
}

uint64_t sub_2347EDD30()
{
  return MEMORY[0x270EFD0B0]();
}

uint64_t sub_2347EDD40()
{
  return MEMORY[0x270EFD0B8]();
}

uint64_t sub_2347EDD50()
{
  return MEMORY[0x270EFD0C0]();
}

uint64_t sub_2347EDD60()
{
  return MEMORY[0x270EFD0E8]();
}

uint64_t sub_2347EDD70()
{
  return MEMORY[0x270EFD110]();
}

uint64_t sub_2347EDD80()
{
  return MEMORY[0x270EFD118]();
}

uint64_t sub_2347EDD90()
{
  return MEMORY[0x270EFD128]();
}

uint64_t sub_2347EDDA0()
{
  return MEMORY[0x270EFD148]();
}

uint64_t sub_2347EDDB0()
{
  return MEMORY[0x270EFD150]();
}

uint64_t sub_2347EDDC0()
{
  return MEMORY[0x270EFD158]();
}

uint64_t sub_2347EDDD0()
{
  return MEMORY[0x270EFD160]();
}

uint64_t sub_2347EDDE0()
{
  return MEMORY[0x270EFD168]();
}

uint64_t sub_2347EDDF0()
{
  return MEMORY[0x270EFD178]();
}

uint64_t sub_2347EDE00()
{
  return MEMORY[0x270EFD180]();
}

uint64_t sub_2347EDE10()
{
  return MEMORY[0x270EFD188]();
}

uint64_t sub_2347EDE20()
{
  return MEMORY[0x270EFD198]();
}

uint64_t sub_2347EDE30()
{
  return MEMORY[0x270EFD1A0]();
}

uint64_t sub_2347EDE40()
{
  return MEMORY[0x270EFD1A8]();
}

uint64_t sub_2347EDE50()
{
  return MEMORY[0x270EFD1C8]();
}

uint64_t sub_2347EDE60()
{
  return MEMORY[0x270EFD1D0]();
}

uint64_t sub_2347EDE70()
{
  return MEMORY[0x270EFD1F8]();
}

uint64_t sub_2347EDE80()
{
  return MEMORY[0x270EFD200]();
}

uint64_t sub_2347EDE90()
{
  return MEMORY[0x270EFD240]();
}

uint64_t sub_2347EDEA0()
{
  return MEMORY[0x270EFC508]();
}

uint64_t sub_2347EDEB0()
{
  return MEMORY[0x270EFC5D8]();
}

uint64_t sub_2347EDEC0()
{
  return MEMORY[0x270EFC5E0]();
}

uint64_t sub_2347EDED0()
{
  return MEMORY[0x270F0EBA8]();
}

uint64_t sub_2347EDEE0()
{
  return MEMORY[0x270EFC620]();
}

uint64_t sub_2347EDEF0()
{
  return MEMORY[0x270EFC630]();
}

uint64_t sub_2347EDF00()
{
  return MEMORY[0x270EFC638]();
}

uint64_t sub_2347EDF10()
{
  return MEMORY[0x270EFC648]();
}

uint64_t sub_2347EDF20()
{
  return MEMORY[0x270EFC650]();
}

uint64_t sub_2347EDF30()
{
  return MEMORY[0x270EFC688]();
}

uint64_t sub_2347EDF40()
{
  return MEMORY[0x270EFC690]();
}

uint64_t sub_2347EDF50()
{
  return MEMORY[0x270EFC6A8]();
}

uint64_t sub_2347EDF60()
{
  return MEMORY[0x270EFC6E8]();
}

uint64_t sub_2347EDF70()
{
  return MEMORY[0x270EFC6F0]();
}

uint64_t sub_2347EDF80()
{
  return MEMORY[0x270EFC710]();
}

uint64_t sub_2347EDF90()
{
  return MEMORY[0x270EFC718]();
}

uint64_t sub_2347EDFA0()
{
  return MEMORY[0x270EFC720]();
}

uint64_t sub_2347EDFB0()
{
  return MEMORY[0x270EFC728]();
}

uint64_t sub_2347EDFC0()
{
  return MEMORY[0x270EFC730]();
}

uint64_t sub_2347EDFD0()
{
  return MEMORY[0x270EFC738]();
}

uint64_t sub_2347EDFE0()
{
  return MEMORY[0x270EFC740]();
}

uint64_t sub_2347EDFF0()
{
  return MEMORY[0x270EFC748]();
}

uint64_t sub_2347EE000()
{
  return MEMORY[0x270EFC750]();
}

uint64_t sub_2347EE010()
{
  return MEMORY[0x270EFC7E0]();
}

uint64_t sub_2347EE020()
{
  return MEMORY[0x270EFC7E8]();
}

uint64_t sub_2347EE030()
{
  return MEMORY[0x270FA06B8]();
}

uint64_t sub_2347EE040()
{
  return MEMORY[0x270FA06C8]();
}

uint64_t sub_2347EE050()
{
  return MEMORY[0x270FA06D8]();
}

uint64_t sub_2347EE060()
{
  return MEMORY[0x270EFC880]();
}

uint64_t sub_2347EE070()
{
  return MEMORY[0x270EFC888]();
}

uint64_t sub_2347EE080()
{
  return MEMORY[0x270EFC890]();
}

uint64_t sub_2347EE090()
{
  return MEMORY[0x270EFC928]();
}

uint64_t sub_2347EE0A0()
{
  return MEMORY[0x270EFC930]();
}

uint64_t sub_2347EE0B0()
{
  return MEMORY[0x270EFC938]();
}

uint64_t sub_2347EE0C0()
{
  return MEMORY[0x270EFC940]();
}

uint64_t sub_2347EE0D0()
{
  return MEMORY[0x270EFC948]();
}

uint64_t sub_2347EE0E0()
{
  return MEMORY[0x270EFD248]();
}

uint64_t sub_2347EE0F0()
{
  return MEMORY[0x270EFC950]();
}

uint64_t sub_2347EE100()
{
  return MEMORY[0x270EFC958]();
}

uint64_t sub_2347EE110()
{
  return MEMORY[0x270EFC960]();
}

uint64_t sub_2347EE120()
{
  return MEMORY[0x270EFC968]();
}

uint64_t sub_2347EE130()
{
  return MEMORY[0x270EFC970]();
}

uint64_t sub_2347EE140()
{
  return MEMORY[0x270EFC978]();
}

uint64_t sub_2347EE150()
{
  return MEMORY[0x270EFC980]();
}

uint64_t sub_2347EE160()
{
  return MEMORY[0x270EFC988]();
}

uint64_t sub_2347EE170()
{
  return MEMORY[0x270EFC990]();
}

uint64_t sub_2347EE180()
{
  return MEMORY[0x270EFC998]();
}

uint64_t sub_2347EE190()
{
  return MEMORY[0x270EFC9A0]();
}

uint64_t sub_2347EE1A0()
{
  return MEMORY[0x270EFC9A8]();
}

uint64_t sub_2347EE1B0()
{
  return MEMORY[0x270EFC9B0]();
}

uint64_t sub_2347EE1C0()
{
  return MEMORY[0x270EFC9B8]();
}

uint64_t sub_2347EE1D0()
{
  return MEMORY[0x270EFC9C0]();
}

uint64_t sub_2347EE1E0()
{
  return MEMORY[0x270EFC9C8]();
}

uint64_t sub_2347EE1F0()
{
  return MEMORY[0x270EFC9D0]();
}

uint64_t sub_2347EE200()
{
  return MEMORY[0x270EFC9D8]();
}

uint64_t sub_2347EE210()
{
  return MEMORY[0x270EFC9E0]();
}

uint64_t sub_2347EE220()
{
  return MEMORY[0x270EFC9E8]();
}

uint64_t sub_2347EE230()
{
  return MEMORY[0x270EFD250]();
}

uint64_t sub_2347EE240()
{
  return MEMORY[0x270EFC9F0]();
}

uint64_t sub_2347EE250()
{
  return MEMORY[0x270EFC9F8]();
}

uint64_t sub_2347EE260()
{
  return MEMORY[0x270EFCA00]();
}

uint64_t sub_2347EE270()
{
  return MEMORY[0x270EFCA08]();
}

uint64_t sub_2347EE280()
{
  return MEMORY[0x270EFCA10]();
}

uint64_t sub_2347EE290()
{
  return MEMORY[0x270EFCAB0]();
}

uint64_t sub_2347EE2A0()
{
  return MEMORY[0x270EFCBD8]();
}

uint64_t sub_2347EE2B0()
{
  return MEMORY[0x270EFCC20]();
}

uint64_t sub_2347EE2C0()
{
  return MEMORY[0x270EFCC28]();
}

uint64_t sub_2347EE2D0()
{
  return MEMORY[0x270EFCC30]();
}

uint64_t sub_2347EE2E0()
{
  return MEMORY[0x270EFCC38]();
}

uint64_t sub_2347EE2F0()
{
  return MEMORY[0x270EFCC40]();
}

uint64_t sub_2347EE300()
{
  return MEMORY[0x270EFCC48]();
}

uint64_t sub_2347EE310()
{
  return MEMORY[0x270EFCCE0]();
}

uint64_t sub_2347EE320()
{
  return MEMORY[0x270EFCDE8]();
}

uint64_t sub_2347EE330()
{
  return MEMORY[0x270EFD260]();
}

uint64_t sub_2347EE340()
{
  return MEMORY[0x270EFCDF0]();
}

uint64_t sub_2347EE350()
{
  return MEMORY[0x270FA2E00]();
}

uint64_t sub_2347EE360()
{
  return MEMORY[0x270FA2E18]();
}

uint64_t sub_2347EE370()
{
  return MEMORY[0x270FA2E20]();
}

uint64_t sub_2347EE380()
{
  return MEMORY[0x270FA2E30]();
}

uint64_t sub_2347EE390()
{
  return MEMORY[0x270EE3AF8]();
}

uint64_t sub_2347EE3A0()
{
  return MEMORY[0x270FA0988]();
}

uint64_t sub_2347EE3B0()
{
  return MEMORY[0x270FA09A8]();
}

uint64_t sub_2347EE3C0()
{
  return MEMORY[0x270FA09D0]();
}

uint64_t sub_2347EE3D0()
{
  return MEMORY[0x270FA09E8]();
}

uint64_t sub_2347EE3E0()
{
  return MEMORY[0x270FA0A10]();
}

uint64_t sub_2347EE3F0()
{
  return MEMORY[0x270FA0A18]();
}

uint64_t sub_2347EE400()
{
  return MEMORY[0x270FA0A28]();
}

uint64_t sub_2347EE410()
{
  return MEMORY[0x270FA0A48]();
}

uint64_t sub_2347EE420()
{
  return MEMORY[0x270FA0AC0]();
}

uint64_t sub_2347EE430()
{
  return MEMORY[0x270FA0B00]();
}

uint64_t sub_2347EE440()
{
  return MEMORY[0x270FA0BC8]();
}

uint64_t sub_2347EE450()
{
  return MEMORY[0x270EEA998]();
}

uint64_t sub_2347EE460()
{
  return MEMORY[0x270EEA9B0]();
}

uint64_t sub_2347EE470()
{
  return MEMORY[0x270EEA9C0]();
}

uint64_t sub_2347EE480()
{
  return MEMORY[0x270EEA9E8]();
}

uint64_t sub_2347EE490()
{
  return MEMORY[0x270EEAA78]();
}

uint64_t sub_2347EE4A0()
{
  return MEMORY[0x270EEAA80]();
}

uint64_t sub_2347EE4B0()
{
  return MEMORY[0x270EEAA98]();
}

uint64_t sub_2347EE4C0()
{
  return MEMORY[0x270EEAAA8]();
}

uint64_t sub_2347EE4D0()
{
  return MEMORY[0x270EEAB00]();
}

uint64_t sub_2347EE4E0()
{
  return MEMORY[0x270EEAB30]();
}

uint64_t sub_2347EE4F0()
{
  return MEMORY[0x270EEB060]();
}

uint64_t sub_2347EE500()
{
  return MEMORY[0x270EEB090]();
}

uint64_t sub_2347EE510()
{
  return MEMORY[0x270EF1818]();
}

uint64_t sub_2347EE520()
{
  return MEMORY[0x270EF1840]();
}

uint64_t sub_2347EE530()
{
  return MEMORY[0x270F9D318]();
}

uint64_t sub_2347EE540()
{
  return MEMORY[0x270F9D328]();
}

uint64_t sub_2347EE550()
{
  return MEMORY[0x270FA2B70]();
}

uint64_t sub_2347EE560()
{
  return MEMORY[0x270F9D478]();
}

uint64_t sub_2347EE570()
{
  return MEMORY[0x270F9D598]();
}

uint64_t sub_2347EE580()
{
  return MEMORY[0x270EF18D0]();
}

uint64_t sub_2347EE590()
{
  return MEMORY[0x270EF18F0]();
}

uint64_t sub_2347EE5A0()
{
  return MEMORY[0x270EF1918]();
}

uint64_t sub_2347EE5B0()
{
  return MEMORY[0x270EF1928]();
}

uint64_t sub_2347EE5C0()
{
  return MEMORY[0x270EF1938]();
}

uint64_t sub_2347EE5D0()
{
  return MEMORY[0x270EF1950]();
}

uint64_t sub_2347EE5E0()
{
  return MEMORY[0x270EF1958]();
}

uint64_t sub_2347EE5F0()
{
  return MEMORY[0x270EF19B0]();
}

uint64_t sub_2347EE600()
{
  return MEMORY[0x270EF19C8]();
}

uint64_t sub_2347EE610()
{
  return MEMORY[0x270EF19E0]();
}

uint64_t sub_2347EE620()
{
  return MEMORY[0x270EF19E8]();
}

uint64_t sub_2347EE630()
{
  return MEMORY[0x270EF19F8]();
}

uint64_t sub_2347EE640()
{
  return MEMORY[0x270EF1A10]();
}

uint64_t sub_2347EE650()
{
  return MEMORY[0x270EF1A50]();
}

uint64_t sub_2347EE660()
{
  return MEMORY[0x270EF1AA8]();
}

uint64_t sub_2347EE670()
{
  return MEMORY[0x270EF1AD0]();
}

uint64_t sub_2347EE680()
{
  return MEMORY[0x270EF1AF8]();
}

uint64_t sub_2347EE690()
{
  return MEMORY[0x270F9D5E0]();
}

uint64_t sub_2347EE6A0()
{
  return MEMORY[0x270F9D620]();
}

uint64_t sub_2347EE6B0()
{
  return MEMORY[0x270F9D648]();
}

uint64_t sub_2347EE6C0()
{
  return MEMORY[0x270F9D708]();
}

uint64_t sub_2347EE6D0()
{
  return MEMORY[0x270F9D750]();
}

uint64_t sub_2347EE6E0()
{
  return MEMORY[0x270F9D758]();
}

uint64_t sub_2347EE6F0()
{
  return MEMORY[0x270F9D798]();
}

uint64_t sub_2347EE710()
{
  return MEMORY[0x270F9D7E0]();
}

uint64_t sub_2347EE720()
{
  return MEMORY[0x270F9D8B0]();
}

uint64_t sub_2347EE740()
{
  return MEMORY[0x270F9D8F8]();
}

uint64_t sub_2347EE750()
{
  return MEMORY[0x270F9DA70]();
}

uint64_t sub_2347EE760()
{
  return MEMORY[0x270F9DA78]();
}

uint64_t sub_2347EE770()
{
  return MEMORY[0x270F9DA80]();
}

uint64_t sub_2347EE780()
{
  return MEMORY[0x270F9DAB8]();
}

uint64_t sub_2347EE790()
{
  return MEMORY[0x270F9DB00]();
}

uint64_t sub_2347EE7A0()
{
  return MEMORY[0x270F9DB38]();
}

uint64_t sub_2347EE7B0()
{
  return MEMORY[0x270F9DBA0]();
}

uint64_t sub_2347EE7C0()
{
  return MEMORY[0x270EF1B88]();
}

uint64_t sub_2347EE7D0()
{
  return MEMORY[0x270EF1BB8]();
}

uint64_t sub_2347EE7E0()
{
  return MEMORY[0x270F9DBB0]();
}

uint64_t sub_2347EE7F0()
{
  return MEMORY[0x270F9DBB8]();
}

uint64_t sub_2347EE800()
{
  return MEMORY[0x270F9DBF0]();
}

uint64_t sub_2347EE810()
{
  return MEMORY[0x270F9DC20]();
}

uint64_t sub_2347EE820()
{
  return MEMORY[0x270F9DC50]();
}

uint64_t sub_2347EE830()
{
  return MEMORY[0x270FA1DF8]();
}

uint64_t sub_2347EE840()
{
  return MEMORY[0x270FA1E18]();
}

uint64_t sub_2347EE850()
{
  return MEMORY[0x270FA1E20]();
}

uint64_t sub_2347EE860()
{
  return MEMORY[0x270FA1EA0]();
}

uint64_t sub_2347EE870()
{
  return MEMORY[0x270FA1EA8]();
}

uint64_t sub_2347EE880()
{
  return MEMORY[0x270FA1F08]();
}

uint64_t sub_2347EE890()
{
  return MEMORY[0x270FA1F10]();
}

uint64_t sub_2347EE8A0()
{
  return MEMORY[0x270EF1C18]();
}

uint64_t sub_2347EE8B0()
{
  return MEMORY[0x270F9DD60]();
}

uint64_t sub_2347EE8C0()
{
  return MEMORY[0x270F0EBB0]();
}

uint64_t sub_2347EE8D0()
{
  return MEMORY[0x270F9DE48]();
}

uint64_t sub_2347EE8E0()
{
  return MEMORY[0x270F9DEF0]();
}

uint64_t sub_2347EE8F0()
{
  return MEMORY[0x270F9DF28]();
}

uint64_t sub_2347EE900()
{
  return MEMORY[0x270F9DF80]();
}

uint64_t sub_2347EE910()
{
  return MEMORY[0x270EF1CE0]();
}

uint64_t sub_2347EE920()
{
  return MEMORY[0x270F9E010]();
}

uint64_t sub_2347EE930()
{
  return MEMORY[0x270F9C780]();
}

uint64_t sub_2347EE940()
{
  return MEMORY[0x270EF1DD0]();
}

uint64_t sub_2347EE950()
{
  return MEMORY[0x270EF1DE8]();
}

uint64_t sub_2347EE960()
{
  return MEMORY[0x270FA2E60]();
}

uint64_t sub_2347EE970()
{
  return MEMORY[0x270FA2E70]();
}

uint64_t sub_2347EE980()
{
  return MEMORY[0x270FA2F20]();
}

uint64_t sub_2347EE990()
{
  return MEMORY[0x270EFCF00]();
}

uint64_t sub_2347EE9A0()
{
  return MEMORY[0x270EFCF10]();
}

uint64_t sub_2347EE9B0()
{
  return MEMORY[0x270F0EBB8]();
}

uint64_t sub_2347EE9C0()
{
  return MEMORY[0x270EF1FA8]();
}

uint64_t sub_2347EE9D0()
{
  return MEMORY[0x270FA0C50]();
}

uint64_t sub_2347EE9E0()
{
  return MEMORY[0x270FA0C78]();
}

uint64_t sub_2347EE9F0()
{
  return MEMORY[0x270FA0D50]();
}

uint64_t sub_2347EEA00()
{
  return MEMORY[0x270FA0D70]();
}

uint64_t sub_2347EEA10()
{
  return MEMORY[0x270FA0DA0]();
}

uint64_t sub_2347EEA20()
{
  return MEMORY[0x270FA0DB8]();
}

uint64_t sub_2347EEA30()
{
  return MEMORY[0x270FA0DD0]();
}

uint64_t sub_2347EEA40()
{
  return MEMORY[0x270FA0F00]();
}

uint64_t sub_2347EEA50()
{
  return MEMORY[0x270FA0F28]();
}

uint64_t sub_2347EEA60()
{
  return MEMORY[0x270FA0868]();
}

uint64_t sub_2347EEA70()
{
  return MEMORY[0x270FA0870]();
}

uint64_t sub_2347EEA80()
{
  return MEMORY[0x270EF20D8]();
}

uint64_t sub_2347EEA90()
{
  return MEMORY[0x270EF20E0]();
}

uint64_t sub_2347EEAA0()
{
  return MEMORY[0x270F9C7C0]();
}

uint64_t sub_2347EEAB0()
{
  return MEMORY[0x270F9C7C8]();
}

uint64_t sub_2347EEAC0()
{
  return MEMORY[0x270F9C7D0]();
}

uint64_t sub_2347EEAD0()
{
  return MEMORY[0x270EF2180]();
}

uint64_t sub_2347EEAE0()
{
  return MEMORY[0x270FA1180]();
}

uint64_t sub_2347EEAF0()
{
  return MEMORY[0x270FA2F00]();
}

uint64_t sub_2347EEB00()
{
  return MEMORY[0x270F9E3B8]();
}

uint64_t sub_2347EEB10()
{
  return MEMORY[0x270F9E3C0]();
}

uint64_t sub_2347EEB20()
{
  return MEMORY[0x270F9E518]();
}

uint64_t sub_2347EEB30()
{
  return MEMORY[0x270F9E530]();
}

uint64_t sub_2347EEB40()
{
  return MEMORY[0x270F9E560]();
}

uint64_t sub_2347EEB50()
{
  return MEMORY[0x270EF23D8]();
}

uint64_t sub_2347EEB60()
{
  return MEMORY[0x270EF23E8]();
}

uint64_t sub_2347EEB70()
{
  return MEMORY[0x270EF2410]();
}

uint64_t sub_2347EEB80()
{
  return MEMORY[0x270EF2448]();
}

uint64_t sub_2347EEB90()
{
  return MEMORY[0x270EF24E0]();
}

uint64_t sub_2347EEBA0()
{
  return MEMORY[0x270EF2590]();
}

uint64_t sub_2347EEBB0()
{
  return MEMORY[0x270EF25B0]();
}

uint64_t sub_2347EEBC0()
{
  return MEMORY[0x270FA13A0]();
}

uint64_t sub_2347EEBD0()
{
  return MEMORY[0x270F9E670]();
}

uint64_t sub_2347EEBE0()
{
  return MEMORY[0x270F9E740]();
}

uint64_t sub_2347EEBF0()
{
  return MEMORY[0x270F9E778]();
}

uint64_t sub_2347EEC00()
{
  return MEMORY[0x270F9E790]();
}

uint64_t sub_2347EEC10()
{
  return MEMORY[0x270F9E798]();
}

uint64_t sub_2347EEC30()
{
  return MEMORY[0x270F9E7E8]();
}

uint64_t sub_2347EEC40()
{
  return MEMORY[0x270F9E7F0]();
}

uint64_t sub_2347EEC50()
{
  return MEMORY[0x270F9E800]();
}

uint64_t sub_2347EEC60()
{
  return MEMORY[0x270F9E810]();
}

uint64_t sub_2347EEC70()
{
  return MEMORY[0x270F9E818]();
}

uint64_t sub_2347EEC80()
{
  return MEMORY[0x270F9E820]();
}

uint64_t sub_2347EEC90()
{
  return MEMORY[0x270F9E838]();
}

uint64_t sub_2347EECA0()
{
  return MEMORY[0x270F9E840]();
}

uint64_t sub_2347EECB0()
{
  return MEMORY[0x270F9E848]();
}

uint64_t sub_2347EECC0()
{
  return MEMORY[0x270F9E858]();
}

uint64_t sub_2347EECD0()
{
  return MEMORY[0x270F9E860]();
}

uint64_t sub_2347EECE0()
{
  return MEMORY[0x270F9E870]();
}

uint64_t sub_2347EECF0()
{
  return MEMORY[0x270F9E878]();
}

uint64_t sub_2347EED00()
{
  return MEMORY[0x270F9E888]();
}

uint64_t sub_2347EED10()
{
  return MEMORY[0x270F9E958]();
}

uint64_t sub_2347EED20()
{
  return MEMORY[0x270F9E960]();
}

uint64_t sub_2347EED30()
{
  return MEMORY[0x270F9E968]();
}

uint64_t sub_2347EED40()
{
  return MEMORY[0x270F9E970]();
}

uint64_t sub_2347EED50()
{
  return MEMORY[0x270F9E9A8]();
}

uint64_t sub_2347EED60()
{
  return MEMORY[0x270F9E9B0]();
}

uint64_t sub_2347EED70()
{
  return MEMORY[0x270F9EA40]();
}

uint64_t sub_2347EED80()
{
  return MEMORY[0x270F9EA48]();
}

uint64_t sub_2347EED90()
{
  return MEMORY[0x270F9EA78]();
}

uint64_t sub_2347EEDA0()
{
  return MEMORY[0x270F9EA90]();
}

uint64_t sub_2347EEDB0()
{
  return MEMORY[0x270F9EA98]();
}

uint64_t sub_2347EEDC0()
{
  return MEMORY[0x270F9EAA0]();
}

uint64_t sub_2347EEDD0()
{
  return MEMORY[0x270F9EAB8]();
}

uint64_t sub_2347EEDE0()
{
  return MEMORY[0x270F9EB28]();
}

uint64_t sub_2347EEDF0()
{
  return MEMORY[0x270F9EB98]();
}

uint64_t sub_2347EEE00()
{
  return MEMORY[0x270F9EBC0]();
}

uint64_t sub_2347EEE10()
{
  return MEMORY[0x270F9EBE0]();
}

uint64_t sub_2347EEE20()
{
  return MEMORY[0x270F9EC08]();
}

uint64_t sub_2347EEE30()
{
  return MEMORY[0x270F9EC10]();
}

uint64_t sub_2347EEE40()
{
  return MEMORY[0x270F9ED70]();
}

uint64_t sub_2347EEE50()
{
  return MEMORY[0x270F9EF50]();
}

uint64_t sub_2347EEE60()
{
  return MEMORY[0x270F9EF88]();
}

uint64_t sub_2347EEE70()
{
  return MEMORY[0x270F9EFB0]();
}

uint64_t sub_2347EEE80()
{
  return MEMORY[0x270F9EFC0]();
}

uint64_t sub_2347EEE90()
{
  return MEMORY[0x270F9EFE8]();
}

uint64_t sub_2347EEEA0()
{
  return MEMORY[0x270F9EFF0]();
}

uint64_t sub_2347EEEB0()
{
  return MEMORY[0x270F9F000]();
}

uint64_t sub_2347EEEC0()
{
  return MEMORY[0x270F9F080]();
}

uint64_t sub_2347EEED0()
{
  return MEMORY[0x270F9F098]();
}

uint64_t sub_2347EEEE0()
{
  return MEMORY[0x270F9F0A0]();
}

uint64_t sub_2347EEEF0()
{
  return MEMORY[0x270F9F0A8]();
}

uint64_t sub_2347EEF00()
{
  return MEMORY[0x270F9F0B0]();
}

uint64_t sub_2347EEF10()
{
  return MEMORY[0x270F9F0C0]();
}

uint64_t sub_2347EEF30()
{
  return MEMORY[0x270F9F230]();
}

uint64_t sub_2347EEF40()
{
  return MEMORY[0x270F9F250]();
}

uint64_t sub_2347EEF50()
{
  return MEMORY[0x270F9F258]();
}

uint64_t sub_2347EEF60()
{
  return MEMORY[0x270F9F270]();
}

uint64_t sub_2347EEF70()
{
  return MEMORY[0x270F9F2F0]();
}

uint64_t sub_2347EEF80()
{
  return MEMORY[0x270F9F2F8]();
}

uint64_t sub_2347EEF90()
{
  return MEMORY[0x270F9F300]();
}

uint64_t sub_2347EEFA0()
{
  return MEMORY[0x270F9F308]();
}

uint64_t sub_2347EEFB0()
{
  return MEMORY[0x270F9F318]();
}

uint64_t sub_2347EEFC0()
{
  return MEMORY[0x270F9F350]();
}

uint64_t sub_2347EEFD0()
{
  return MEMORY[0x270F9F360]();
}

uint64_t sub_2347EEFE0()
{
  return MEMORY[0x270F9F390]();
}

uint64_t sub_2347EEFF0()
{
  return MEMORY[0x270F9F428]();
}

uint64_t sub_2347EF000()
{
  return MEMORY[0x270F9F430]();
}

uint64_t sub_2347EF010()
{
  return MEMORY[0x270F9F440]();
}

uint64_t sub_2347EF020()
{
  return MEMORY[0x270F9F448]();
}

uint64_t sub_2347EF030()
{
  return MEMORY[0x270F9F458]();
}

uint64_t sub_2347EF040()
{
  return MEMORY[0x270F9F490]();
}

uint64_t sub_2347EF050()
{
  return MEMORY[0x270F9F4C0]();
}

uint64_t sub_2347EF060()
{
  return MEMORY[0x270F9F4C8]();
}

uint64_t sub_2347EF070()
{
  return MEMORY[0x270F9F4E0]();
}

uint64_t sub_2347EF080()
{
  return MEMORY[0x270F9F7C0]();
}

uint64_t sub_2347EF090()
{
  return MEMORY[0x270F9F7D0]();
}

uint64_t sub_2347EF0A0()
{
  return MEMORY[0x270F9F918]();
}

uint64_t sub_2347EF0B0()
{
  return MEMORY[0x270F9F920]();
}

uint64_t sub_2347EF0D0()
{
  return MEMORY[0x270F9FA88]();
}

uint64_t sub_2347EF0E0()
{
  return MEMORY[0x270F9FB10]();
}

uint64_t sub_2347EF0F0()
{
  return MEMORY[0x270F9FB18]();
}

uint64_t sub_2347EF100()
{
  return MEMORY[0x270EF2680]();
}

uint64_t sub_2347EF110()
{
  return MEMORY[0x270F9FB30]();
}

uint64_t sub_2347EF120()
{
  return MEMORY[0x270F9FB38]();
}

uint64_t sub_2347EF130()
{
  return MEMORY[0x270F9FB40]();
}

uint64_t sub_2347EF140()
{
  return MEMORY[0x270F9FB48]();
}

uint64_t sub_2347EF150()
{
  return MEMORY[0x270F9FB80]();
}

uint64_t sub_2347EF160()
{
  return MEMORY[0x270F0EBC0]();
}

uint64_t sub_2347EF170()
{
  return MEMORY[0x270F0EBC8]();
}

uint64_t sub_2347EF180()
{
  return MEMORY[0x270EFCF28]();
}

uint64_t sub_2347EF190()
{
  return MEMORY[0x270F9FC28]();
}

uint64_t sub_2347EF1A0()
{
  return MEMORY[0x270F9FC30]();
}

uint64_t sub_2347EF1B0()
{
  return MEMORY[0x270F9FC40]();
}

uint64_t sub_2347EF1C0()
{
  return MEMORY[0x270F9FC48]();
}

uint64_t sub_2347EF1D0()
{
  return MEMORY[0x270F9FC60]();
}

uint64_t sub_2347EF1E0()
{
  return MEMORY[0x270F9FC68]();
}

uint64_t sub_2347EF1F0()
{
  return MEMORY[0x270F9FC78]();
}

uint64_t sub_2347EF200()
{
  return MEMORY[0x270F9FC90]();
}

uint64_t sub_2347EF210()
{
  return MEMORY[0x270F9FD20]();
}

uint64_t sub_2347EF220()
{
  return MEMORY[0x270F9FD70]();
}

uint64_t sub_2347EF230()
{
  return MEMORY[0x270F9FD98]();
}

uint64_t ARVisionToRenderingCoordinateTransform()
{
  return MEMORY[0x270EDDF88]();
}

uint64_t AnalyticsSendEventLazy()
{
  return MEMORY[0x270F18A48]();
}

CFTimeInterval CACurrentMediaTime(void)
{
  MEMORY[0x270EFB790]();
  return result;
}

CATransform3D *__cdecl CATransform3DRotate(CATransform3D *__return_ptr retstr, CATransform3D *t, CGFloat angle, CGFloat x, CGFloat y, CGFloat z)
{
  return (CATransform3D *)MEMORY[0x270EFB960](retstr, t, angle, x, y, z);
}

CATransform3D *__cdecl CATransform3DScale(CATransform3D *__return_ptr retstr, CATransform3D *t, CGFloat sx, CGFloat sy, CGFloat sz)
{
  return (CATransform3D *)MEMORY[0x270EFB970](retstr, t, sx, sy, sz);
}

CATransform3D *__cdecl CATransform3DTranslate(CATransform3D *__return_ptr retstr, CATransform3D *t, CGFloat tx, CGFloat ty, CGFloat tz)
{
  return (CATransform3D *)MEMORY[0x270EFB978](retstr, t, tx, ty, tz);
}

CFTypeID CFDataGetTypeID(void)
{
  return MEMORY[0x270EE4838]();
}

CFTypeID CFGetTypeID(CFTypeRef cf)
{
  return MEMORY[0x270EE4A30](cf);
}

CFTypeID CFStringGetTypeID(void)
{
  return MEMORY[0x270EE5218]();
}

CGAffineTransform *__cdecl CGAffineTransformInvert(CGAffineTransform *__return_ptr retstr, CGAffineTransform *t)
{
  return (CGAffineTransform *)MEMORY[0x270EE5978](retstr, t);
}

CGAffineTransform *__cdecl CGAffineTransformMakeRotation(CGAffineTransform *__return_ptr retstr, CGFloat angle)
{
  return (CGAffineTransform *)MEMORY[0x270EE5998](retstr, angle);
}

BOOL CGRectEqualToRect(CGRect rect1, CGRect rect2)
{
  return MEMORY[0x270EE71A0]((__n128)rect1.origin, *(__n128 *)&rect1.origin.y, (__n128)rect1.size, *(__n128 *)&rect1.size.height, (__n128)rect2.origin, *(__n128 *)&rect2.origin.y, (__n128)rect2.size, *(__n128 *)&rect2.size.height);
}

CGFloat CGRectGetHeight(CGRect rect)
{
  MEMORY[0x270EE71A8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMidX(CGRect rect)
{
  MEMORY[0x270EE71D8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMidY(CGRect rect)
{
  MEMORY[0x270EE71F0]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetWidth(CGRect rect)
{
  MEMORY[0x270EE7218]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CVReturn CVMetalTextureCacheCreate(CFAllocatorRef allocator, CFDictionaryRef cacheAttributes, id metalDevice, CFDictionaryRef textureAttributes, CVMetalTextureCacheRef *cacheOut)
{
  return MEMORY[0x270EEA0E0](allocator, cacheAttributes, metalDevice, textureAttributes, cacheOut);
}

CVReturn CVMetalTextureCacheCreateTextureFromImage(CFAllocatorRef allocator, CVMetalTextureCacheRef textureCache, CVImageBufferRef sourceImage, CFDictionaryRef textureAttributes, MTLPixelFormat pixelFormat, size_t width, size_t height, size_t planeIndex, CVMetalTextureRef *textureOut)
{
  return MEMORY[0x270EEA0F0](allocator, textureCache, sourceImage, textureAttributes, pixelFormat, width, height, planeIndex);
}

id CVMetalTextureGetTexture(CVMetalTextureRef image)
{
  return (id)MEMORY[0x270EEA110](image);
}

CVReturn CVPixelBufferCreate(CFAllocatorRef allocator, size_t width, size_t height, OSType pixelFormatType, CFDictionaryRef pixelBufferAttributes, CVPixelBufferRef *pixelBufferOut)
{
  return MEMORY[0x270EEA150](allocator, width, height, *(void *)&pixelFormatType, pixelBufferAttributes, pixelBufferOut);
}

void *__cdecl CVPixelBufferGetBaseAddress(CVPixelBufferRef pixelBuffer)
{
  return (void *)MEMORY[0x270EEA190](pixelBuffer);
}

void *__cdecl CVPixelBufferGetBaseAddressOfPlane(CVPixelBufferRef pixelBuffer, size_t planeIndex)
{
  return (void *)MEMORY[0x270EEA1A0](pixelBuffer, planeIndex);
}

size_t CVPixelBufferGetBytesPerRow(CVPixelBufferRef pixelBuffer)
{
  return MEMORY[0x270EEA1B0](pixelBuffer);
}

size_t CVPixelBufferGetBytesPerRowOfPlane(CVPixelBufferRef pixelBuffer, size_t planeIndex)
{
  return MEMORY[0x270EEA1C8](pixelBuffer, planeIndex);
}

size_t CVPixelBufferGetDataSize(CVPixelBufferRef pixelBuffer)
{
  return MEMORY[0x270EEA1D0](pixelBuffer);
}

void CVPixelBufferGetExtendedPixels(CVPixelBufferRef pixelBuffer, size_t *extraColumnsOnLeft, size_t *extraColumnsOnRight, size_t *extraRowsOnTop, size_t *extraRowsOnBottom)
{
}

size_t CVPixelBufferGetHeight(CVPixelBufferRef pixelBuffer)
{
  return MEMORY[0x270EEA1E8](pixelBuffer);
}

size_t CVPixelBufferGetHeightOfPlane(CVPixelBufferRef pixelBuffer, size_t planeIndex)
{
  return MEMORY[0x270EEA1F8](pixelBuffer, planeIndex);
}

OSType CVPixelBufferGetPixelFormatType(CVPixelBufferRef pixelBuffer)
{
  return MEMORY[0x270EEA218](pixelBuffer);
}

size_t CVPixelBufferGetPlaneCount(CVPixelBufferRef pixelBuffer)
{
  return MEMORY[0x270EEA220](pixelBuffer);
}

size_t CVPixelBufferGetWidth(CVPixelBufferRef pixelBuffer)
{
  return MEMORY[0x270EEA240](pixelBuffer);
}

size_t CVPixelBufferGetWidthOfPlane(CVPixelBufferRef pixelBuffer, size_t planeIndex)
{
  return MEMORY[0x270EEA250](pixelBuffer, planeIndex);
}

Boolean CVPixelBufferIsPlanar(CVPixelBufferRef pixelBuffer)
{
  return MEMORY[0x270EEA258](pixelBuffer);
}

CVReturn CVPixelBufferLockBaseAddress(CVPixelBufferRef pixelBuffer, CVPixelBufferLockFlags lockFlags)
{
  return MEMORY[0x270EEA260](pixelBuffer, lockFlags);
}

CVReturn CVPixelBufferPoolCreate(CFAllocatorRef allocator, CFDictionaryRef poolAttributes, CFDictionaryRef pixelBufferAttributes, CVPixelBufferPoolRef *poolOut)
{
  return MEMORY[0x270EEA278](allocator, poolAttributes, pixelBufferAttributes, poolOut);
}

CVReturn CVPixelBufferPoolCreatePixelBuffer(CFAllocatorRef allocator, CVPixelBufferPoolRef pixelBufferPool, CVPixelBufferRef *pixelBufferOut)
{
  return MEMORY[0x270EEA288](allocator, pixelBufferPool, pixelBufferOut);
}

CVReturn CVPixelBufferUnlockBaseAddress(CVPixelBufferRef pixelBuffer, CVPixelBufferLockFlags unlockFlags)
{
  return MEMORY[0x270EEA330](pixelBuffer, unlockFlags);
}

CFTypeRef IORegistryEntryCreateCFProperty(io_registry_entry_t entry, CFStringRef key, CFAllocatorRef allocator, IOOptionBits options)
{
  return (CFTypeRef)MEMORY[0x270EF49D8](*(void *)&entry, key, allocator, *(void *)&options);
}

io_service_t IOServiceGetMatchingService(mach_port_t mainPort, CFDictionaryRef matching)
{
  return MEMORY[0x270EF4AB0](*(void *)&mainPort, matching);
}

CFMutableDictionaryRef IOServiceMatching(const char *name)
{
  return (CFMutableDictionaryRef)MEMORY[0x270EF4AD0](name);
}

uint64_t MGCopyAnswer()
{
  return MEMORY[0x270F95F98]();
}

id MTLCreateSystemDefaultDevice(void)
{
  return (id)MEMORY[0x270EF5E20]();
}

uint64_t REAssetManagerCreateAssetHandleForURL()
{
  return MEMORY[0x270F1C568]();
}

uint64_t RECameraViewDescriptorsComponentAddSpecifyCommandFromLayer()
{
  return MEMORY[0x270F1CEF0]();
}

uint64_t RECameraViewDescriptorsComponentAddViewDescriptor()
{
  return MEMORY[0x270F1CF00]();
}

uint64_t RECameraViewDescriptorsComponentCameraViewDescriptorCopySettingStruct()
{
  return MEMORY[0x270F1CF08]();
}

uint64_t RECameraViewDescriptorsComponentCameraViewDescriptorSetSettingStruct()
{
  return MEMORY[0x270F1CF10]();
}

uint64_t RECameraViewDescriptorsComponentClearCameraViewDescriptors()
{
  return MEMORY[0x270F1CF20]();
}

uint64_t RECameraViewDescriptorsComponentGetComponentType()
{
  return MEMORY[0x270F1CF28]();
}

uint64_t RECheckEntityInsideCustomMatrixCameraFrustumAnyViewWithCustomViewport()
{
  return MEMORY[0x270F1D068]();
}

uint64_t REComponentGetEntity()
{
  return MEMORY[0x270F1D2F0]();
}

uint64_t RECustomMatrixCameraComponentGetComponentType()
{
  return MEMORY[0x270F1D528]();
}

uint64_t RECustomMatrixCameraComponentGetProjectionMatrix()
{
  return MEMORY[0x270F1D538]();
}

uint64_t RECustomMatrixCameraComponentSetProjectionFromMatrix()
{
  return MEMORY[0x270F1D550]();
}

uint64_t REEngineConfigurationCreateFromEngine()
{
  return MEMORY[0x270F1D978]();
}

uint64_t REEngineConfigurationGetEngineQueue()
{
  return MEMORY[0x270F1D9A0]();
}

uint64_t REEngineSetPreferredFramesPerSecond()
{
  return MEMORY[0x270F1DB30]();
}

uint64_t REEntityGetComponentByClass()
{
  return MEMORY[0x270F1DC10]();
}

uint64_t REEntityGetOrAddComponentByClass()
{
  return MEMORY[0x270F1DC40]();
}

uint64_t REMaterialParameterBlockArrayComponentGetComponentType()
{
  return MEMORY[0x270F1E850]();
}

uint64_t REMaterialParameterBlockArrayComponentResize()
{
  return MEMORY[0x270F1E868]();
}

uint64_t REMaterialParameterBlockArrayComponentSetBlockAtIndex()
{
  return MEMORY[0x270F1E878]();
}

uint64_t REMaterialParameterBlockArrayComponentSize()
{
  return MEMORY[0x270F1E888]();
}

uint64_t REMaterialParameterBlockGetFloat()
{
  return MEMORY[0x270F1E890]();
}

uint64_t REMaterialParameterBlockGetFloat2()
{
  return MEMORY[0x270F1E898]();
}

uint64_t REMaterialParameterBlockGetFloat4()
{
  return MEMORY[0x270F1E8A0]();
}

uint64_t REMaterialParameterBlockSetBuffer()
{
  return MEMORY[0x270F1E8B0]();
}

uint64_t REMaterialParameterBlockSetFloat()
{
  return MEMORY[0x270F1E8B8]();
}

uint64_t REMaterialParameterBlockSetFloat2()
{
  return MEMORY[0x270F1E8C0]();
}

uint64_t REMaterialParameterBlockSetFloat4()
{
  return MEMORY[0x270F1E8C8]();
}

uint64_t REMatrix4x4MakePerspectiveFieldOfViewReverseDepth()
{
  return MEMORY[0x270F1EB40]();
}

uint64_t REMeshComponentAddMaterial()
{
  return MEMORY[0x270F1EE30]();
}

uint64_t REMeshComponentGetComponentType()
{
  return MEMORY[0x270F1EE50]();
}

uint64_t REMeshComponentRemoveAllMaterials()
{
  return MEMORY[0x270F1EE78]();
}

uint64_t REMeshComponentSetBoundsMargin()
{
  return MEMORY[0x270F1EE80]();
}

uint64_t REOrthographicCameraComponentGetComponentType()
{
  return MEMORY[0x270F1F0A0]();
}

uint64_t REOrthographicCameraComponentSetScale()
{
  return MEMORY[0x270F1F0D8]();
}

uint64_t RERelease()
{
  return MEMORY[0x270F1F850]();
}

uint64_t RERenderGraphDataStructAddBool()
{
  return MEMORY[0x270F1F970]();
}

uint64_t RERenderGraphDataStructAddFloat4()
{
  return MEMORY[0x270F1F978]();
}

uint64_t RERenderManagerMaterialParameterBlockCreateWithAsset()
{
  return MEMORY[0x270F1F9E0]();
}

uint64_t RESceneGetComponentsOfClass()
{
  return MEMORY[0x270F1FCB8]();
}

uint64_t RS3DSurfaceTypeGetDirectionalAxis()
{
  return MEMORY[0x270F5BD58]();
}

uint64_t RSKeyframeFromDictionary()
{
  return MEMORY[0x270F5BD60]();
}

uint64_t RSKeyframeSequenceFromDictionary()
{
  return MEMORY[0x270F5BD68]();
}

uint64_t RSKeyframeSequenceToDictionary()
{
  return MEMORY[0x270F5BD70]();
}

uint64_t RSKeyframeToDictionary()
{
  return MEMORY[0x270F5BD78]();
}

BOOL UIAccessibilityIsVoiceOverRunning(void)
{
  return MEMORY[0x270F82C80]();
}

void UIAccessibilityPostNotification(UIAccessibilityNotifications notification, id argument)
{
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x270ED7CD8](aBlock);
}

void _Block_release(const void *aBlock)
{
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

std::logic_error *__cdecl std::logic_error::logic_error(std::logic_error *this, const char *a2)
{
  return (std::logic_error *)MEMORY[0x270F98330](this, a2);
}

std::bad_array_new_length *__cdecl std::bad_array_new_length::bad_array_new_length(std::bad_array_new_length *this)
{
  return (std::bad_array_new_length *)MEMORY[0x270F98428](this);
}

void operator delete(void *__p)
{
  while (1)
    ;
}

void *__cdecl operator new(size_t __sz)
{
  while (1)
    ;
}

void *__cxa_allocate_exception(size_t thrown_size)
{
  return (void *)MEMORY[0x270F98EC0](thrown_size);
}

void __cxa_free_exception(void *a1)
{
}

void __cxa_throw(void *a1, struct type_info *lptinfo, void (*a3)(void *))
{
}

uint64_t __invert_d4()
{
  return MEMORY[0x270ED7E08]();
}

simd_float4x4 __invert_f4(simd_float4x4 a1)
{
  MEMORY[0x270ED7E20]((__n128)a1.columns[0], (__n128)a1.columns[1], (__n128)a1.columns[2], (__n128)a1.columns[3]);
  result.columns[3].i64[1] = v8;
  result.columns[3].i64[0] = v7;
  result.columns[2].i64[1] = v6;
  result.columns[2].i64[0] = v5;
  result.columns[1].i64[1] = v4;
  result.columns[1].i64[0] = v3;
  result.columns[0].i64[1] = v2;
  result.columns[0].i64[0] = v1;
  return result;
}

__double2 __sincos_stret(double a1)
{
  MEMORY[0x270ED7E88](a1);
  result.__cosval = v2;
  result.__sinval = v1;
  return result;
}

__float2 __sincosf_stret(float a1)
{
  MEMORY[0x270ED7E90](a1);
  result.__cosval = v2;
  result.__sinval = v1;
  return result;
}

__float2 __sincospif_stret(float a1)
{
  MEMORY[0x270ED7E98](a1);
  result.__cosval = v2;
  result.__sinval = v1;
  return result;
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

float _simd_orient_pf2(simd_float2 a1, simd_float2 a2, simd_float2 a3)
{
  MEMORY[0x270ED82F8](*(__n128 *)a1.f32, *(__n128 *)a2.f32, *(__n128 *)a3.f32);
  return result;
}

float _simd_orient_vf2(simd_float2 a1, simd_float2 a2)
{
  MEMORY[0x270ED8308](*(__n128 *)a1.f32, *(__n128 *)a2.f32);
  return result;
}

float _simd_orient_vf3(simd_float3 a1, simd_float3 a2, simd_float3 a3)
{
  MEMORY[0x270ED8310]((__n128)a1, (__n128)a2, (__n128)a3);
  return result;
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x270FA0160]();
}

void abort(void)
{
}

long double acos(long double __x)
{
  MEMORY[0x270ED8588](__x);
  return result;
}

float acosf(float a1)
{
  MEMORY[0x270ED8598](a1);
  return result;
}

long double atan2(long double __y, long double __x)
{
  MEMORY[0x270ED86A8](__y, __x);
  return result;
}

float atan2f(float a1, float a2)
{
  MEMORY[0x270ED86B8](a1, a2);
  return result;
}

void bzero(void *a1, size_t a2)
{
}

float cosf(float a1)
{
  MEMORY[0x270ED9130](a1);
  return result;
}

long double cosh(long double __x)
{
  MEMORY[0x270ED9138](__x);
  return result;
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return (dispatch_semaphore_t)MEMORY[0x270ED94B8](value);
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
}

long double exp(long double __x)
{
  MEMORY[0x270ED9858](__x);
  return result;
}

long double fmod(long double __x, long double __y)
{
  MEMORY[0x270ED99D0](__x, __y);
  return result;
}

void free(void *a1)
{
}

long double frexp(long double __x, int *__e)
{
  MEMORY[0x270ED9A68](__e, __x);
  return result;
}

long double ldexp(long double __x, int __e)
{
  MEMORY[0x270EDA028](*(void *)&__e, __x);
  return result;
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x270EDA328](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x270EDA378](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x270EDA470](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x270EDA488](__dst, __src, __len);
}

void *__cdecl memset(void *__b, int __c, size_t __len)
{
  return (void *)MEMORY[0x270EDA498](__b, *(void *)&__c, __len);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x270F9A528](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x270F9A538](a1);
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x270F9A568](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A590](a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x270F9A5A8]();
}

void objc_enumerationMutation(id obj)
{
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6D0](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6E8](a1, a2);
}

uint64_t objc_opt_new()
{
  return MEMORY[0x270F9A710]();
}

uint64_t self
{
  return MEMORY[0x270F9A730]();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x270F9A870](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A888](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A890](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x270EDA9D0](oslog, type);
}

long double sin(long double __x)
{
  MEMORY[0x270EDB4E8](__x);
  return result;
}

float sinf(float a1)
{
  MEMORY[0x270EDB4F0](a1);
  return result;
}

long double sinh(long double __x)
{
  MEMORY[0x270EDB4F8](__x);
  return result;
}

uint64_t swift_allocBox()
{
  return MEMORY[0x270FA0180]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x270FA0190]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x270FA0198]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x270FA01C0]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x270FA01C8]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x270FA01D0]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x270FA01D8]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x270FA01E0]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x270FA01E8]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x270FA01F0]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x270FA01F8]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x270FA0200]();
}

uint64_t swift_conformsToProtocol2()
{
  return MEMORY[0x270FA0218]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x270FA0228]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x270FA0240]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x270FA0260]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x270FA0268]();
}

uint64_t swift_dynamicCastMetatype()
{
  return MEMORY[0x270FA0278]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x270FA0288]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x270FA02C0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x270FA02C8]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x270FA02D0]();
}

uint64_t swift_getDynamicType()
{
  return MEMORY[0x270FA0330]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x270FA0338]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x270FA0348]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x270FA0370]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x270FA03B8]();
}

uint64_t swift_getMetatypeMetadata()
{
  return MEMORY[0x270FA03C8]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x270FA03D0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x270FA03E0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x270FA03E8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x270FA0400]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x270FA0440]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x270FA0448]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x270FA0450]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x270FA0458]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x270FA0460]();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return MEMORY[0x270FA0470]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x270FA0478]();
}

uint64_t swift_initStaticObject()
{
  return MEMORY[0x270FA0480]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x270FA0488]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x270FA0498]();
}

uint64_t swift_isUniquelyReferenced()
{
  return MEMORY[0x270FA04A8]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x270FA04C0]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x270FA04C8]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x270FA04D8]();
}

uint64_t swift_once()
{
  return MEMORY[0x270FA04F0]();
}

uint64_t swift_release()
{
  return MEMORY[0x270FA0520]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x270FA0528]();
}

uint64_t swift_retain()
{
  return MEMORY[0x270FA0530]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x270FA0538]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x270FA0550]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x270FA0558]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x270FA0560]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x270FA0568]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x270FA0578]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x270FA2450]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x270FA2458]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x270FA2460]();
}

uint64_t swift_unexpectedError()
{
  return MEMORY[0x270FA0588]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x270FA0590]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x270FA0598]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x270FA05A0]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x270FA05A8]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x270FA05D0]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x270FA05E8]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x270FA05F0]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x270FA05F8]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x270FA0628]();
}

uint64_t swift_weakAssign()
{
  return MEMORY[0x270FA0630]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x270FA0648]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x270FA0650]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x270FA0658]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x270FA0670]();
}

long double tan(long double __x)
{
  MEMORY[0x270EDB810](__x);
  return result;
}

float tanf(float a1)
{
  MEMORY[0x270EDB818](a1);
  return result;
}