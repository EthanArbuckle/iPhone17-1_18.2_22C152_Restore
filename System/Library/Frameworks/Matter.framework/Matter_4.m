void sub_244B57A30(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_244B57A40(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 4984;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B57AB8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B57B74(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B57B84(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 4993;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B57BFC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B57CA0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5000;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B57D18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B57DD4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B57DE4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5007;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B57E5C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B57F18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B57F28(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5016;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B57FA0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B58044(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5023;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B580BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B58178(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B58188(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5030;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B58200(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B582BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B582CC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5039;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B58344(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B583E8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5046;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B58460(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5851C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5852C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5053;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B585A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B58660(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B58670(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5062;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B586E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5878C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5069;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B58804(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B588C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B588D0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5076;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B58948(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B58A04(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B58A14(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5085;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B58A8C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B58B30(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5092;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B58BA8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B58C64(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B58C74(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5099;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B58CEC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B58DA8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B58DB8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5108;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B58E30(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B58ED4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5115;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B58F4C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B59008(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B59018(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5122;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B59090(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5914C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5915C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5131;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B591D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B59278(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5138;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B592F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B593AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B593BC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5145;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B59434(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B594F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B59500(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5154;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B59578(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5961C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5161;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B59694(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B59750(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B59760(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5168;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B597D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B59894(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B598A4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5177;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5991C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B599C0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5184;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B59A38(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B59AF4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B59B04(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5191;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B59B7C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B59C38(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B59C48(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5200;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B59CC0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B59D64(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5207;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B59DDC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B59E98(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B59EA8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5214;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B59F20(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B59FDC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B59FEC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5223;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5A064(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5A108(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5230;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5A180(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5A23C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5A24C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5237;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5A2C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5A380(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5A390(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5246;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5A408(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5A4AC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5253;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5A524(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5A5E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5A5F0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5260;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5A668(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5A724(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5A734(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5269;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5A7AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5A850(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5276;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5A8C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5A984(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5A994(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5283;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5AA0C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5AAC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5AAD8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5292;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5AB50(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5ABF4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5299;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5AC6C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5AD28(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5AD38(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5306;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5ADB0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5AE6C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5AE7C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5315;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5AEF4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5AF98(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5322;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5B010(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5B0CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5B0DC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5329;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5B154(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5B210(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5B220(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5338;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5B298(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5B33C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5345;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5B3B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5B470(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5B480(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5352;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5B4F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5B5B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5B5C4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5361;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5B63C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5B6E0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5368;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5B758(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5B814(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5B824(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5375;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5B89C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5B958(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5B968(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5384;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5B9E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5BA84(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5391;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5BAFC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5BBB8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5BBC8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5398;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5BC40(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5BCFC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5BD0C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5407;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5BD84(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5BE28(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5414;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5BEA0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5BF5C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5BF6C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5421;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5BFE4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5C0A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5C0B0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5430;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5C128(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5C1CC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5437;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5C244(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5C300(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5C310(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5444;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5C388(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5C444(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5C454(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5453;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5C4CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5C570(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5460;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5C5E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5C6A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5C6B4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5467;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5C72C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5C7E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5C7F8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5476;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5C870(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5C914(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5483;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5C98C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5CA48(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5CA58(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5490;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5CAD0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5CB8C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5CB9C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5499;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5CC14(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5CCB8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5506;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5CD30(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5CDEC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5CDFC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5513;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5CE74(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5CF30(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5CF40(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5522;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5CFB8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5D05C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5529;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5D0D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5D190(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5D1A0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5536;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5D218(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5D2D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5D2E4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5545;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5D35C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5D400(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5552;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5D478(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5D534(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5D544(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5559;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5D5BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5D678(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5D688(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5568;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5D700(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5D7A4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5575;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5D81C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5D8D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5D8E8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5582;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5D960(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5DA1C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5DA2C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5591;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5DAA4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5DB48(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5598;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5DBC0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5DC7C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5DC8C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5605;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5DD04(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5DDC0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5DDD0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5614;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5DE48(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5DEEC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5621;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5DF64(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5E020(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5E030(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5628;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5E0A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5E164(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5E174(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5637;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5E1EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5E290(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5644;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5E308(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5E3C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5E3D4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5651;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5E44C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5E508(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5E518(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5660;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5E590(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5E634(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5667;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5E6AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5E768(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5E778(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5674;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5E7F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5E8AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5E8BC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5683;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5E934(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5E9D8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5690;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5EA50(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5EB0C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5EB1C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5697;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5EB94(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5EC50(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5EC60(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5706;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5ECD8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5ED7C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5713;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5EDF4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5EEB0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5EEC0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5720;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5EF38(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5EFF4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5F004(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5729;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5F07C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5F120(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5736;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5F198(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5F254(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5F264(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5743;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5F2DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5F398(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5F3A8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5752;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5F420(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5F4C4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5759;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5F53C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5F5F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5F608(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5766;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5F680(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5F73C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5F74C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5775;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5F7C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5F868(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5782;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5F8E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5F99C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5F9AC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5789;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5FA24(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5FAE0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5FAF0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5798;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5FB68(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5FC0C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5805;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5FC84(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5FD40(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5FD50(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5812;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5FDC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5FE84(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5FE94(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5821;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B5FF0C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B5FFB0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5828;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B60028(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B600E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B600F4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5835;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B6016C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B60228(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B60238(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5844;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B602B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B60354(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5851;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B603CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B60488(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B60498(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5858;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B60510(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B605CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B605DC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5867;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B60654(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B606F8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5874;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B60770(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B6082C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B6083C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5881;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B608B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B60970(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B60980(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5890;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B609F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B60A9C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5897;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B60B14(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B60BD0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B60BE0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5904;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B60C58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B60D14(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B60D24(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5913;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B60D9C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B60E40(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5920;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B60EB8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B60F74(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B60F84(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5927;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B60FFC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B610B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B610C8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5936;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B61140(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B611E4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5943;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B6125C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B61318(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B61328(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5950;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B613A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B6145C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B6146C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5959;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B614E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B61588(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5966;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B61600(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B616BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B616CC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5973;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B61744(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B61800(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B61810(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5982;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B61888(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B6192C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5989;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B619A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B61A60(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B61A70(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 5996;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B61AE8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B61BA4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B61BB4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 6005;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B61C2C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B61CD0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 6012;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B61D48(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B61E04(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B61E14(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 6019;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B61E8C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B61F48(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B61F58(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 6028;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B61FD0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B62074(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 6035;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B620EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B621A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B621B8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 6042;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B62230(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B622EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B622FC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 6051;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B62374(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B62418(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 6058;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B62490(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B6254C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B6255C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 6065;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B625D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B62690(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B626A0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 6074;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B62718(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B627BC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 6081;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B62834(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B628F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B62900(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 6088;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B62978(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B62A34(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B62A44(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 6097;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B62ABC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B62B60(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 6104;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B62BD8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B62C94(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B62CA4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 6111;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B62D1C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B62DD8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B62DE8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 6120;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B62E60(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B62F04(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 6127;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B62F7C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B63038(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B63048(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 6134;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B630C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B6317C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B6318C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 6143;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B63204(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B632A8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 6150;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B63320(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B633DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B633EC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 6157;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B63464(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B63520(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B63530(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 6166;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B635A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B6364C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 6173;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_244B636C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B6377C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B63794(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B638DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B63914(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B63A10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B63A3C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B63AE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B63AF8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B63C40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B63C78(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B63D74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B63DA0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B63E44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B63E5C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B63FA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B63FDC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B640D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B64104(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B641A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B641C0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B64308(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B64340(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6443C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B64468(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6450C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B64524(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6466C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B646A4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B647A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B647CC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B64870(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B64888(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B649D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B64A08(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B64B04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B64B30(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B64BD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B64BEC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B64D34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B64D6C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B64E68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B64E94(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B64F38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B64F50(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B65098(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B650D0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B651CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B651F8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6529C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B652B4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B653FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B65434(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B65530(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6555C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B65600(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B65618(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B65760(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B65798(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B65894(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B658C0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B65964(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6597C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B65AC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B65AFC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B65BF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B65C24(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B65CC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B65CE0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B65E28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B65E60(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B65F5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B65F88(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6602C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B66044(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6618C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B661C4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B662C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B662EC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B66390(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B663A8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B664F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B66528(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B66624(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B66650(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B666F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6670C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B66854(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6688C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B66988(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B669B4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B66A58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B66A70(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B66BB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B66BF0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B66CEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B66D18(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B66DBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B66DD4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B66F1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B66F54(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B67050(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6707C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B67120(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B67138(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B67280(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B672B8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B673B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B673E0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B67484(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6749C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B675E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6761C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B67718(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B67744(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B677E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B67800(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B67948(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B67980(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B67A7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B67AA8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B67B4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B67B64(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B67CAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B67CE4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B67DE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B67E0C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B67EB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B67EC8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B68010(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B68048(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B68144(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B68170(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B68214(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6822C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B68374(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B683AC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B684A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B684D4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B68578(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B68590(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B686D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B68710(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6880C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B68838(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B688DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B688F4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B68A3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B68A74(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B68B70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B68B9C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B68C40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B68C58(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B68DA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B68DD8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B68ED4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B68F00(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B68FA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B68FBC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B69104(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6913C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B69238(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B69264(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B69308(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B69320(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B69468(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B694A0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6959C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B695C8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6966C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B69684(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B697CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B69804(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B69900(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6992C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B699D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B699E8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B69B30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B69B68(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B69C64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B69C90(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B69D34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B69D4C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B69E94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B69ECC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B69FC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B69FF4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6A098(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6A0B0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6A1F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6A230(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6A32C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6A358(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6A3FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6A414(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6A55C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6A594(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6A690(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6A6BC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6A760(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6A778(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6A8C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6A8F8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6A9F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6AA20(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6AAC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6AADC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6AC24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6AC5C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6AD58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6AD84(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6AE28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6AE40(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6AF88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6AFC0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6B0BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6B0E8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6B18C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6B1A4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6B2EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6B324(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6B420(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6B44C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6B4F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6B508(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6B650(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6B688(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6B784(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6B7B0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6B854(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6B86C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6B9B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6B9EC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6BAE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6BB14(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6BBB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6BBD0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6BD18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6BD50(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6BE4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6BE78(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6BF1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6BF34(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6C07C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6C0B4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6C1B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6C1DC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6C280(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6C298(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6C3E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6C418(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6C514(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6C540(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6C5E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6C5FC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6C744(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6C77C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6C878(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6C8A4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6C948(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6C960(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6CAA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6CAE0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6CBDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6CC08(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6CCAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6CCC4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6CE0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6CE44(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6CF40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6CF6C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6D010(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6D028(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6D170(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6D1A8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6D2A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6D2D0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6D374(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6D38C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6D4D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6D50C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6D608(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6D634(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6D6D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6D6F0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6D838(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6D870(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6D96C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6D998(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6DA3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6DA54(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6DB9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6DBD4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6DCD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6DCFC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6DDA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6DDB8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6DF00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6DF38(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6E034(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6E060(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6E104(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6E11C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6E264(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6E29C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6E398(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6E3C4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6E468(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6E480(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6E5C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6E600(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6E6FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6E728(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6E7CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6E7E4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6E92C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6E964(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6EA60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6EA8C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6EB30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6EB48(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6EC90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6ECC8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6EDC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6EDF0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6EE94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6EEAC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6EFF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6F02C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6F128(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6F154(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6F1F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6F210(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6F358(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6F390(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6F48C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6F4B8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6F55C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6F574(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6F6BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6F6F4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6F7F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6F81C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6F8C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6F8D8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6FA20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6FA58(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6FB54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6FB80(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6FC24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6FC3C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6FD94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6FDCC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6FEC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6FEF4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B6FF98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B6FFB0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B70108(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B70140(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7023C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B70268(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7030C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B70324(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7047C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B704B4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B705B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B705DC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B70680(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B70698(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B707F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B70828(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B70924(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B70950(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B709F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B70A0C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B70B64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B70B9C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B70C98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B70CC4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B70D68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B70D80(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B70ED8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B70F10(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7100C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B71038(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B710DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B710F4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7123C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B71274(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B71370(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7139C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B71440(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B71458(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B715A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B715D8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B716D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B71700(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B717A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B717BC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B71904(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7193C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B71A38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B71A64(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B71B08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B71B20(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B71C68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B71CA0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B71D9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B71DC8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B71E6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B71E84(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B71FCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B72004(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B72100(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7212C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B721D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B721E8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B72330(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B72368(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B72464(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B72490(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B72534(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7254C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B726A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B726DC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B727D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B72804(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B728A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B728C0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B72A08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B72A40(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B72B3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B72B68(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B72C0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B72C24(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B72D6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B72DA4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B72EA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B72ECC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B72F70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B72F88(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B730E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B73118(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B73214(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B73240(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B732E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B732FC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B73444(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7347C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B73578(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B735A4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B73648(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B73660(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B737A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B737E0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B738DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B73908(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B739AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B739C4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B73B0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B73B44(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B73C40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B73C6C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B73D10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B73D28(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B73E70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B73EA8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B73FA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B73FD0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B74074(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7408C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B741D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7420C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B74308(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B74334(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B743D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B743F0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B74538(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B74570(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7466C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B74698(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7473C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B74754(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7489C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B748D4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B749D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B749FC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B74AA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B74AB8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B74C00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B74C38(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B74D34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B74D60(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B74E04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B74E1C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B74F64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B74F9C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B75098(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B750C4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B75168(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B75180(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B752C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B75300(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B753FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B75428(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B754CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B754E4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7562C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B75664(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B75760(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7578C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B75830(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B75848(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B75990(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B759C8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B75AC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B75AF0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B75B94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B75BAC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B75CF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B75D2C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B75E28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B75E54(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B75EF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B75F10(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B76058(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B76090(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7618C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B761B8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7625C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B76274(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B763BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B763F4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B764F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7651C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B765C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B765D8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B76720(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B76758(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B76854(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B76880(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B76924(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7693C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B76A84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B76ABC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B76BB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B76BE4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B76C88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B76CA0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B76DE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B76E20(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B76F1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B76F48(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B76FEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B77004(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7714C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B77184(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B77280(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B772AC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B77350(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B77368(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B774B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B774E8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B775E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B77610(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B776B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B776CC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B77814(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7784C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B77948(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B77974(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B77A18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B77A30(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B77B78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B77BB0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B77CAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B77CD8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B77D7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B77D94(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B77EDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B77F14(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B78010(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7803C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B780E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B780F8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B78240(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B78278(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B78374(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B783A0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B78444(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7845C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B785A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B785DC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B786D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B78704(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B787A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B787C0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B78908(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B78940(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B78A3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B78A68(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B78B0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B78B24(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B78C6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B78CA4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B78DA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B78DCC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B78E70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B78E88(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B78FD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B79008(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B79104(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B79130(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B791D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B791EC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B79334(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7936C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B79468(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B79494(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B79538(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B79550(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B79698(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B796D0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B797CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B797F8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7989C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B798B4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B799FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B79A34(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B79B30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B79B5C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B79C00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B79C18(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B79D60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B79D98(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B79E94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B79EC0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B79F64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B79F7C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7A0C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7A0FC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7A1F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7A224(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7A2C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7A2E0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7A428(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7A460(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7A55C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7A588(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7A62C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7A644(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7A78C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7A7C4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7A8C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7A8EC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7A990(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7A9A8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7AAF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7AB28(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7AC24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7AC50(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7ACF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7AD0C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7AE54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7AE8C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7AF88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7AFB4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7B058(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7B070(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7B1B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7B1F0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7B2EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7B318(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7B3BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7B3D4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7B51C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7B554(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7B650(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7B67C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7B720(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7B738(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7B880(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7B8B8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7B9B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7B9E0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7BA84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7BA9C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7BBE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7BC1C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7BD18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7BD44(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7BDE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7BE00(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7BF48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7BF80(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7C07C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7C0A8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7C14C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7C164(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7C2AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7C2E4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7C3E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7C40C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7C4B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7C4C8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7C610(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7C648(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7C744(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7C770(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7C814(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7C82C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7C974(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7C9AC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7CAA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7CAD4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7CB78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7CB90(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7CCD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7CD10(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7CE0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7CE38(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7CEDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7CEF4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7D03C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7D074(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7D170(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7D19C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7D240(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7D258(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7D3A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7D3D8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7D4D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7D500(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7D5A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7D5BC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7D704(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7D73C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7D838(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7D864(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7D908(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7D920(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7DA68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7DAA0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7DB9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7DBC8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7DC6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7DC84(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7DDCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7DE04(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7DF00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7DF2C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7DFD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7DFE8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7E130(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7E168(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7E264(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7E290(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7E334(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7E34C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7E494(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7E4CC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7E5C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7E5F4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7E698(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7E6B0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7E7F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7E830(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7E92C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7E958(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7E9FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7EA14(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7EB5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7EB94(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7EC90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7ECBC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7ED60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7ED78(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7EEC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7EEF8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7EFF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7F020(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7F0C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7F0DC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7F224(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7F25C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7F358(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7F384(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7F428(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7F440(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7F588(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7F5C0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7F6BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7F6E8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7F78C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7F7A4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7F8EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7F924(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7FA20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B7FA4C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B7FADC(_Unwind_Exception *a1)
{
  int v4 = v3;

  _Unwind_Resume(a1);
}

void sub_244B7FBBC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B7FBCC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 10933;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void *))(v1 + 16))(v1, v2);
}

void sub_244B7FC40(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B7FCFC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B7FD0C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 45;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRBackwardsCompatShims.mm";
  int v4 = 10940;
  v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void *))(v1 + 16))(v1, v2);
}

void sub_244B7FD80(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B7FE28(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B7FEE8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B7FFA8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B80068(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B80128(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B801E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B802A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B80368(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B80428(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B804E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B805A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B80668(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B80728(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B807E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B808A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B80968(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B80A28(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B80AE8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B80BA8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B80C68(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B80D28(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B80DE8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B80EA8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B80F68(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B81028(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B810E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B811A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B81268(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B81328(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B813E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B814A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B81568(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B81628(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B816E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B817A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B81868(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B81928(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B819E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B81AA8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B81B68(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B81C28(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B81CE8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B81DA8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B81E68(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B81F28(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B81FE8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B820A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B82168(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B82228(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B822E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B823A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B82468(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B82528(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B825E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B826A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B82768(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B82828(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B828E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B829A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B82A9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244B82B74(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B82C68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244B82D40(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B82E34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244B82F0C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B83000(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244B830D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B831CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244B832A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B83398(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244B83470(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B83530(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B835F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B836B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B83770(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B83830(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B838F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B839E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244B83ABC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B83B7C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B83C3C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B83D30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244B83E08(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B83EC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B83F88(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B84048(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B84108(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B841C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B84288(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B84348(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B84408(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B844C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B84588(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B84648(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B84708(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B847C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B84888(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B84948(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B84A08(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B84AC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B84B88(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B84C48(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B84D08(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B84DC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B84E88(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B84F48(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B85008(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B850C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B85188(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B85248(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B85308(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B853C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B85488(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B85548(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B85608(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B856C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B85788(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B85848(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B85908(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B859C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B85A88(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B85B48(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B85C08(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B85CC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B85D88(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B85E48(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B85F08(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B85FC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B86088(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B86148(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B86208(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B862C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B86388(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B86448(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B86508(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B865C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B86688(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B86748(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B86808(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B868C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B86988(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B86A30(_Unwind_Exception *a1)
{
  int v4 = v3;

  _Unwind_Resume(a1);
}

void sub_244B86B14(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B86C00(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B86CB8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B86D38(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B86EE0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B86F70(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B87114(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244B871F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B8731C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B873E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B87464(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B876D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B87788(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B87980(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244B87CD4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B87CFC(uint64_t a1)
{
  uint64_t v1 = a1 + 104;
  size_t v2 = strnlen((const char *)(a1 + 104), 0x20uLL);
  sub_24479476C(&v4, v1, v2);
  return v4;
}

BOOL sub_244B87D44(void **a1, uint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>), uint64_t a6, uint64_t a7)
{
  int v10 = a4;
  uint64_t v37 = *MEMORY[0x263EF8340];
  v31 = &v36;
  uint64_t v32 = 400;
  long long v29 = 0uLL;
  uint64_t v30 = 0;
  v13 = (void *)(a3 + (a6 >> 1));
  if (a6) {
    (*(void (**)(long long *__return_ptr, void *, uint64_t, char **))(*v13 + a5))(&v29, v13, a4, &v31);
  }
  else {
    ((void (*)(long long *__return_ptr, void *, uint64_t, char **))a5)(&v29, v13, a4, &v31);
  }
  if (v29)
  {
    v14 = sub_244CC8484(0, "NotSpecified");
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
    {
      long long v33 = v29;
      uint64_t v34 = v30;
      v15 = sub_244CB7B34((const char **)&v33, 1);
      *(_DWORD *)buf = 136315650;
      *(void *)&buf[4] = a7;
      *(_WORD *)&buf[12] = 1024;
      *(_DWORD *)&buf[14] = v10;
      *(_WORD *)&buf[18] = 2080;
      *(void *)&buf[20] = v15;
      _os_log_impl(&dword_2446BD000, v14, OS_LOG_TYPE_ERROR, "Failed to fetch %s certificate for fabric index %x: %s", buf, 0x1Cu);
    }

    BOOL result = sub_244CC4E58(1u);
    if (result)
    {
      *(_OWORD *)buf = v29;
      *(void *)&buf[16] = v30;
      sub_244CB7B34((const char **)buf, 1);
      sub_244CC4DE0(0, 1);
      return 0;
    }
    return result;
  }
  if (a6) {
    BOOL v17 = (a6 & 1 | (unint64_t)a5) == 0;
  }
  else {
    BOOL v17 = 1;
  }
  int v18 = v17;
  if (a5 == sub_244D9ED74 && v18 && !v32)
  {
    v19 = *a1;
    *a1 = 0;

    v20 = (void *)*a2;
    *a2 = 0;

    return 1;
  }
  sub_2446C1098(v28, (uint64_t)v31, v32);
  uint64_t v22 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v21, v28[0], v28[1]);
  v23 = (void *)*a2;
  *a2 = v22;

  uint64_t v25 = objc_msgSend_convertMatterCertificate_(MTRCertificates, v24, *a2);
  v26 = *a1;
  *a1 = (void *)v25;

  if (*a1) {
    return 1;
  }
  v27 = sub_244CC8484(0, "NotSpecified");
  if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 136315138;
    *(void *)&buf[4] = a7;
    _os_log_impl(&dword_2446BD000, v27, OS_LOG_TYPE_ERROR, "Failed to convert %s certificate to x509 encoding", buf, 0xCu);
  }

  BOOL result = sub_244CC4E58(1u);
  if (result)
  {
    sub_244CC4DE0(0, 1);
    return 0;
  }
  return result;
}

void sub_244B8801C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B882A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B885C4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_268EBE950);

  _Unwind_Resume(a1);
}

void sub_244B88690(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244B88780(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B88810(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B88A18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B8959C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13, void *a14, void *a15, void *a16, void *a17, void *a18, void *a19)
{
  _Unwind_Resume(a1);
}

void sub_244B89690(uint64_t a1)
{
  uint64_t v1 = sub_2446D7590(*(void *)(a1 + 32));

  sub_244BC65E8(v1);
}

void sub_244B89770(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B89850(uint64_t a1)
{
  uint64_t v2 = sub_2446D7590(*(void *)(a1 + 32));
  sub_244BC6A28(v2);
  uint64_t result = objc_msgSend_shouldAdvertiseOperational(*(void **)(a1 + 40), v3, v4);
  if (result)
  {
    uint64_t result = sub_2446D759C(*(void *)(a1 + 32));
    if (result)
    {
      char v6 = atomic_load((unsigned __int8 *)(*(void *)(a1 + 40) + 1608));
      sub_244DA45A4(result, v6, 1, (uint64_t)v7);
      return sub_2446D62DC(*(void *)(a1 + 32));
    }
  }
  return result;
}

uint64_t sub_244B89970(uint64_t a1)
{
  uint64_t v2 = sub_2446D7590(*(void *)(a1 + 32));
  sub_244BC65E8(v2);
  uint64_t result = objc_msgSend_shouldAdvertiseOperational(*(void **)(a1 + 40), v3, v4);
  if (result)
  {
    uint64_t result = sub_2446D759C(*(void *)(a1 + 32));
    if (result)
    {
      char v6 = atomic_load((unsigned __int8 *)(*(void *)(a1 + 40) + 1608));
      sub_244DA45A4(result, v6, 0, (uint64_t)v7);
      return sub_2446D62DC(*(void *)(a1 + 32));
    }
  }
  return result;
}

void sub_244B89B5C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v6);
  _Unwind_Resume(a1);
}

void sub_244B89CEC(_Unwind_Exception *exception_object)
{
}

void sub_244B89EDC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_244B8A0A8(_Unwind_Exception *exception_object)
{
}

void sub_244B8A288(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B8A4B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B8A7C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B8AD64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, ...)
{
  va_start(va, a15);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_244B8ADDC(uint64_t a1, const char *a2, uint64_t a3)
{
  uint64_t v86 = *MEMORY[0x263EF8340];
  if (objc_msgSend_isRunning(*(void **)(a1 + 32), a2, a3)) {
    return;
  }
  v8 = objc_msgSend_vendorID(*(void **)(a1 + 40), v4, v5);
  if (!v8
    || (objc_msgSend_vendorID(*(void **)(a1 + 40), v6, v7),
        v9 = objc_claimAutoreleasedReturnValue(),
        int v12 = objc_msgSend_unsignedShortValue(v9, v10, v11),
        v9,
        v8,
        !v12))
  {
    v20 = sub_244CC8484(0, "NotSpecified");
    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
    {
      uint64_t v23 = *(void *)(a1 + 32);
      v24 = objc_msgSend_vendorID(*(void **)(a1 + 40), v21, v22);
      *(_DWORD *)buf = 138412546;
      *(void *)&buf[4] = v23;
      *(_WORD *)&buf[12] = 2112;
      *(void *)&buf[14] = v24;
      _os_log_impl(&dword_2446BD000, v20, OS_LOG_TYPE_ERROR, "%@ %@ is not a valid vendorID to initialize a device controller with", buf, 0x16u);
    }
    if (sub_244CC4E58(1u))
    {
      v78 = objc_msgSend_vendorID(*(void **)(a1 + 40), v25, v26);
      sub_244CC4DE0(0, 1);
    }
    return;
  }
  v15 = objc_msgSend_operationalCertificate(*(void **)(a1 + 40), v13, v14);
  if (v15)
  {
  }
  else
  {
    v27 = objc_msgSend_nodeID(*(void **)(a1 + 40), v16, v17);

    if (!v27)
    {
      v50 = sub_244CC8484(0, "NotSpecified");
      if (os_log_type_enabled(v50, OS_LOG_TYPE_ERROR))
      {
        uint64_t v51 = *(void *)(a1 + 32);
        *(_DWORD *)buf = 138412290;
        *(void *)&buf[4] = v51;
        _os_log_impl(&dword_2446BD000, v50, OS_LOG_TYPE_ERROR, "%@ Can't start a controller if we don't know what node id it is", buf, 0xCu);
      }

      if (!sub_244CC4E58(1u)) {
        return;
      }
LABEL_21:
      sub_244CC4DE0(0, 1);
      return;
    }
  }
  if ((objc_msgSend_keypairsMatchCertificates(*(void **)(a1 + 40), v18, v19) & 1) == 0)
  {
    v48 = sub_244CC8484(0, "NotSpecified");
    if (os_log_type_enabled(v48, OS_LOG_TYPE_ERROR))
    {
      uint64_t v49 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 138412290;
      *(void *)&buf[4] = v49;
      _os_log_impl(&dword_2446BD000, v48, OS_LOG_TYPE_ERROR, "%@ Provided keypairs do not match certificates", buf, 0xCu);
    }

    if (!sub_244CC4E58(1u)) {
      return;
    }
    goto LABEL_21;
  }
  uint64_t v32 = objc_msgSend_operationalCertificate(*(void **)(a1 + 40), v28, v29);
  if (v32)
  {
    long long v33 = objc_msgSend_operationalKeypair(*(void **)(a1 + 40), v30, v31);
    if (!v33)
    {
      v67 = *(void **)(a1 + 40);
      if (v67 && (objc_msgSend_fabricIndex(v67, v34, v35), buf[0]))
      {
        uint64_t v72 = objc_msgSend_keystore(*(void **)(a1 + 40), v68, v69);
        v73 = *(void **)(a1 + 40);
        if (v73) {
          objc_msgSend_fabricIndex(v73, v70, v71);
        }
        else {
          LOWORD(v84) = 0;
        }
        v74 = sub_2446F9190(&v84);
        char v75 = (*(uint64_t (**)(uint64_t, void))(*(void *)v72 + 24))(v72, *v74);

        if (v75) {
          goto LABEL_15;
        }
      }
      else
      {
      }
      v76 = sub_244CC8484(0, "NotSpecified");
      if (os_log_type_enabled(v76, OS_LOG_TYPE_ERROR))
      {
        uint64_t v77 = *(void *)(a1 + 32);
        *(_DWORD *)buf = 138412290;
        *(void *)&buf[4] = v77;
        _os_log_impl(&dword_2446BD000, v76, OS_LOG_TYPE_ERROR, "%@ Have no operational keypair for our operational certificate", buf, 0xCu);
      }

      if (sub_244CC4E58(1u)) {
        sub_244CC4DE0(0, 1);
      }
      return;
    }
  }
LABEL_15:
  char v36 = objc_msgSend_nocSigner(*(void **)(a1 + 40), v30, v31);
  BOOL v37 = v36 == 0;

  uint64_t v40 = *(void *)(a1 + 32);
  if (v37)
  {
    uint64_t v47 = 0;
  }
  else
  {
    v41 = objc_msgSend_nocSigner(*(void **)(a1 + 40), v38, v39);
    sub_2446CC8D8(v40 + 1632, v41, (uint64_t)buf);
    uint64_t v42 = *(void *)&buf[8];
    uint64_t v43 = *(void *)buf;
    uint64_t v44 = *(void *)&buf[16];

    v45 = *(void **)(a1 + 32);
    v83[0] = v43;
    v83[1] = v42;
    v83[2] = v44;
    if (objc_msgSend_checkForStartError_logMsg_(v45, v46, (uint64_t)v83, @"Init failure while creating signing keypair bridge"))return; {
    uint64_t v40 = *(void *)(a1 + 32);
    }
    uint64_t v47 = v40 + 1632;
  }
  v52 = *(void **)(v40 + 3152);
  v53 = objc_msgSend_ipk(*(void **)(a1 + 40), v38, v39);
  v56 = objc_msgSend_rootCertificate(*(void **)(a1 + 40), v54, v55);
  v59 = objc_msgSend_intermediateCertificate(*(void **)(a1 + 40), v57, v58);
  sub_244BCBC4C(v52, v47, v53, v56, v59, (uint64_t)buf);
  int v60 = *(_DWORD *)buf;
  int v61 = *(_DWORD *)&buf[4];
  uint64_t v62 = *(void *)&buf[8];
  int v63 = *(_DWORD *)&buf[16];
  int v64 = *(_DWORD *)&buf[20];

  v65 = *(void **)(a1 + 32);
  v79[0] = v60;
  v79[1] = v61;
  uint64_t v80 = v62;
  int v81 = v63;
  int v82 = v64;
  if ((objc_msgSend_checkForStartError_logMsg_(v65, v66, (uint64_t)v79, @"Init failure while creating operational credentials delegate") & 1) == 0)operator new(); {
}
  }

void sub_244B8BED4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B8C0DC(uint64_t result, uint64_t a2)
{
  *(unsigned char *)(result + 8) = 1;
  *(void *)uint64_t result = &unk_26F95DF38;
  *(void *)(result + 16) = &unk_26F95DED0;
  for (uint64_t i = 64; i != 664; i += 120)
    *(void *)(result + i) = &unk_26F954540;
  *(void *)(result + 624) = 0;
  *(void *)(result + 632) = a2;
  *(void *)(result + 640) = 0;
  return result;
}

uint64_t sub_244B8C160@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, long long **a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  int v8 = 0x1000000;
  if (result)
  {
    if (a3[1] == (long long *)16)
    {
      if (*(void *)(a4 + 8) == 8)
      {
        uint64_t v6 = 0;
        long long v7 = **a3;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t *))(*(void *)result + 168))(result, a2, a4, &v6);
      }
      *(_DWORD *)a5 = 47;
      *(void *)(a5 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/credentials/GroupDataProvider.h";
      int v5 = 360;
    }
    else
    {
      *(_DWORD *)a5 = 47;
      *(void *)(a5 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/credentials/GroupDataProvider.h";
      int v5 = 359;
    }
  }
  else
  {
    *(_DWORD *)a5 = 47;
    *(void *)(a5 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/credentials/GroupDataProvider.h";
    int v5 = 358;
  }
  *(_DWORD *)(a5 + 16) = v5;
  return result;
}

void sub_244B8C238(uint64_t a1, void *a2)
{
  uint64_t v65 = *MEMORY[0x263EF8340];
  id v50 = a2;
  long long v3 = sub_244CC8484(0, "NotSpecified");
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v6 = *(void *)(a1 + 32);
    uint64_t v7 = objc_msgSend_count(v50, v4, v5);
    int v10 = objc_msgSend_uniqueIdentifier(*(void **)(a1 + 32), v8, v9);
    *(_DWORD *)buf = 138412802;
    uint64_t v60 = v6;
    __int16 v61 = 2048;
    uint64_t v62 = v7;
    __int16 v63 = 2112;
    int v64 = v10;
    _os_log_impl(&dword_2446BD000, v3, OS_LOG_TYPE_DEFAULT, "%@ Loaded attribute values for %lu nodes from storage for controller uuid %@", buf, 0x20u);
  }
  if (sub_244CC4E58(2u))
  {
    uint64_t v13 = *(void *)(a1 + 32);
    uint64_t v14 = objc_msgSend_count(v50, v11, v12);
    objc_msgSend_uniqueIdentifier(*(void **)(a1 + 32), v15, v16);
    uint64_t v47 = v45 = v14;
    uint64_t v43 = v13;
    sub_244CC4DE0(0, 2);
  }
  uint64_t v17 = (os_unfair_lock_s *)objc_msgSend_deviceMapLock(*(void **)(a1 + 32), v11, v12, v43, v45, v47);
  os_unfair_lock_lock(v17);
  lock = v17;
  v20 = objc_msgSend_array(MEMORY[0x263EFF980], v18, v19);
  long long v56 = 0u;
  long long v57 = 0u;
  long long v54 = 0u;
  long long v55 = 0u;
  id obj = v50;
  uint64_t v23 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v21, (uint64_t)&v54, v58, 16);
  if (v23)
  {
    uint64_t v24 = *(void *)v55;
    uint64_t v25 = "NotSpecified";
    do
    {
      for (uint64_t i = 0; i != v23; ++i)
      {
        if (*(void *)v55 != v24) {
          objc_enumerationMutation(obj);
        }
        uint64_t v27 = *(void *)(*((void *)&v54 + 1) + 8 * i);
        v28 = objc_msgSend_objectForKeyedSubscript_(obj, v22, v27);
        uint64_t v30 = objc_msgSend__setupDeviceForNodeID_prefetchedClusterData_(*(void **)(a1 + 32), v29, v27, v28);
        uint64_t v31 = sub_244CC8484(0, v25);
        if (os_log_type_enabled(v31, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v34 = v25;
          uint64_t v35 = *(void *)(a1 + 32);
          uint64_t v36 = objc_msgSend_count(v28, v32, v33);
          *(_DWORD *)buf = 138412802;
          uint64_t v60 = v35;
          __int16 v61 = 2048;
          uint64_t v62 = v36;
          __int16 v63 = 2112;
          int v64 = v30;
          _os_log_impl(&dword_2446BD000, v31, OS_LOG_TYPE_DEFAULT, "%@ Loaded %lu cluster data from storage for %@", buf, 0x20u);
          uint64_t v25 = v34;
        }

        if (sub_244CC4E58(2u))
        {
          uint64_t v39 = *(void *)(a1 + 32);
          uint64_t v46 = objc_msgSend_count(v28, v37, v38);
          v48 = v30;
          uint64_t v44 = v39;
          sub_244CC4DE0(0, 2);
        }
        objc_msgSend_addObject_(v20, v37, (uint64_t)v30, v44, v46, v48);
      }
      uint64_t v23 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v22, (uint64_t)&v54, v58, 16);
    }
    while (v23);
  }

  dispatch_time_t v40 = dispatch_time(0, 60000000000);
  v41 = dispatch_get_global_queue(21, 0);
  block[0] = MEMORY[0x263EF8330];
  block[1] = 3221225472;
  block[2] = sub_244B8C6A0;
  block[3] = &unk_265193DC8;
  block[4] = *(void *)(a1 + 32);
  id v53 = v20;
  id v42 = v20;
  dispatch_after(v40, v41, block);

  os_unfair_lock_unlock(lock);
}

void sub_244B8C60C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, os_unfair_lock_t lock, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B8C6A0(uint64_t a1)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v2 = sub_244CC8484(0, "NotSpecified");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = *(void *)(a1 + 32);
    uint64_t v6 = objc_msgSend_count(*(void **)(a1 + 40), v3, v4);
    *(_DWORD *)buf = 138412546;
    uint64_t v11 = v5;
    __int16 v12 = 2048;
    uint64_t v13 = v6;
    _os_log_impl(&dword_2446BD000, v2, OS_LOG_TYPE_DEFAULT, "%@ un-retain devices loaded at startup %lu", buf, 0x16u);
  }

  uint64_t result = sub_244CC4E58(2u);
  if (result)
  {
    objc_msgSend_count(*(void **)(a1 + 40), v8, v9);
    return sub_244CC4DE0(0, 2);
  }
  return result;
}

void sub_244B8C798(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B8CB54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, void *a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a27, 8);
  _Unwind_Resume(a1);
}

void sub_244B8CBC4(void *a1)
{
  id v1 = a1;
  uint64_t v4 = objc_msgSend_vendorID(v1, v2, v3);
  int v13 = 2;
  uint64_t v14 = "dwnfw_device_vendor_id";
  int v15 = objc_msgSend_unsignedIntValue(v4, v5, v6);
  char v16 = 2;

  sub_244D7E78C((uint64_t)&v13);
  uint64_t v9 = objc_msgSend_productID(v1, v7, v8);
  int v12 = objc_msgSend_unsignedIntValue(v9, v10, v11);
  int v13 = 2;
  uint64_t v14 = "dwnfw_device_product_id";
  int v15 = v12;
  char v16 = 2;

  sub_244D7E78C((uint64_t)&v13);
}

void sub_244B8CC68(_Unwind_Exception *a1)
{
  uint64_t v3 = v2;

  _Unwind_Resume(a1);
}

__n128 sub_244B8CC90(__n128 *a1, __n128 *a2)
{
  __n128 result = a2[3];
  a1[4].n128_u64[0] = a2[4].n128_u64[0];
  a1[3] = result;
  return result;
}

uint64_t sub_244B8CCA8(uint64_t a1)
{
  uint64_t v31 = *MEMORY[0x263EF8340];
  uint64_t v2 = *(void *)(*(void *)(a1 + 56) + 8) + 48;
  v27[0] = (uint64_t)"dwnfw_setup_with_payload";
  v27[1] = v2;
  LODWORD(v28) = 0;
  *((void *)&v28 + 1) = "dwnfw_setup_with_payload";
  BYTE4(v29) = 0;
  sub_244D7E78C((uint64_t)&v28);
  uint64_t v6 = objc_msgSend_qrCodeString_(*(void **)(a1 + 32), v3, 0);
  if (v6
    || (objc_msgSend_manualEntryCode(*(void **)(a1 + 32), v4, v5),
        (uint64_t v6 = objc_claimAutoreleasedReturnValue()) != 0))
  {
    uint64_t v7 = objc_msgSend_unsignedLongLongValue(*(void **)(a1 + 40), v4, v5);
    *(void *)(*(void *)(*(void *)(a1 + 48) + 3152) + 32) = v7;
    LODWORD(v28) = 0;
    *((void *)&v28 + 1) = "dwnfw_setup_pase_session";
    BYTE4(v29) = 0;
    sub_244D7E78C((uint64_t)&v28);
    uint64_t v8 = *(void *)(*(void *)(a1 + 48) + 3120);
    id v9 = v6;
    int v12 = (char *)objc_msgSend_UTF8String(v9, v10, v11);
    v30[0] = 0;
    sub_244DF2048(v8, v7, v12, 2, (uint64_t)v30, (uint64_t)&v28);
    uint64_t v13 = *(void *)(*(void *)(a1 + 56) + 8);
    *(_OWORD *)(v13 + 48) = v28;
    *(void *)(v13 + 64) = v29;
    int v14 = *(_DWORD *)(*(void *)(*(void *)(a1 + 56) + 8) + 48);
    if (v14)
    {
      LODWORD(v28) = 1;
      *((void *)&v28 + 1) = "dwnfw_setup_pase_session";
      LODWORD(v29) = v14;
      BYTE4(v29) = 3;
      sub_244D7E78C((uint64_t)&v28);
    }
    else
    {
      sub_2446C01A8(*(void *)(*(void *)(a1 + 48) + 3144), v7);
    }
    uint64_t v16 = *(void *)(a1 + 64);
    uint64_t v17 = *(void *)(*(void *)(a1 + 56) + 8);
    long long v23 = *(_OWORD *)(v17 + 48);
    uint64_t v24 = *(void *)(v17 + 64);
    int v18 = objc_msgSend_checkForError_logMsg_error_(MTRDeviceController_Concrete, v15, (uint64_t)&v23, @"Failure while pairing the device", v16);
  }
  else
  {
    uint64_t v20 = *(void *)(*(void *)(a1 + 56) + 8);
    *(_DWORD *)(v20 + 48) = 47;
    *(void *)(v20 + 56) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/MTRDeviceController_Concrete.mm";
    *(_DWORD *)(v20 + 64) = 841;
    uint64_t v21 = *(void *)(a1 + 64);
    uint64_t v22 = *(void *)(*(void *)(a1 + 56) + 8);
    long long v25 = *(_OWORD *)(v22 + 48);
    uint64_t v26 = *(void *)(v22 + 64);
    int v18 = objc_msgSend_checkForError_logMsg_error_(MTRDeviceController_Concrete, v4, (uint64_t)&v25, @"Generating Manual Pairing Code failed", v21);
    id v9 = 0;
  }

  sub_244855660(v27);
  return v18 ^ 1u;
}

void sub_244B8CEF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  sub_244855660((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_244B8D224(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,void *a23,void *a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a27, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_244B8D298(uint64_t a1)
{
  uint64_t v102 = *MEMORY[0x263EF8340];
  uint64_t v2 = *(void *)(*(void *)(a1 + 64) + 8) + 48;
  v64[0] = (uint64_t)"dwnfw_setup_with_discovered";
  v64[1] = v2;
  LODWORD(v87) = 0;
  *((void *)&v87 + 1) = "dwnfw_setup_with_discovered";
  BYTE4(v88) = 0;
  sub_244D7E78C((uint64_t)&v87);
  uint64_t v7 = objc_msgSend_unsignedLongLongValue(*(void **)(a1 + 32), v3, v4);
  *(void *)(*(void *)(*(void *)(a1 + 40) + 3152) + 32) = v7;
  uint64_t v8 = *(void *)(*(void *)(a1 + 64) + 8);
  *(_DWORD *)(v8 + 48) = 47;
  *(void *)(v8 + 56) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRDeviceController_Concrete.mm";
  *(_DWORD *)(v8 + 64) = 890;
  id v9 = *(void **)(a1 + 48);
  if (v9)
  {
    objc_msgSend_params(v9, v5, v6);
    if ((_BYTE)v87)
    {
      uint64_t v11 = objc_msgSend_setupPasscode(*(void **)(a1 + 56), v5, v10);
      int v14 = objc_msgSend_unsignedLongValue(v11, v12, v13);

      *((_DWORD *)sub_244B8D808(&v87) + 8) = v14;
      LODWORD(v76) = 0;
      *((void *)&v76 + 1) = "dwnfw_setup_pase_session";
      BYTE4(v77) = 0;
      sub_244D7E78C((uint64_t)&v76);
      uint64_t v15 = *(void *)(*(void *)(a1 + 40) + 3120);
      uint64_t v16 = sub_244B8D808(&v87);
      ((void (*)(long long *__return_ptr, uint64_t, uint64_t, unsigned char *))loc_244DF0F64)(&v76, v15, v7, v16);
      uint64_t v17 = *(void *)(*(void *)(a1 + 64) + 8);
      *(_OWORD *)(v17 + 48) = v76;
      *(void *)(v17 + 64) = v77;
      int v18 = *(_DWORD *)(*(void *)(*(void *)(a1 + 64) + 8) + 48);
      if (v18)
      {
        LODWORD(v76) = 1;
        *((void *)&v76 + 1) = "dwnfw_setup_pase_session";
        LODWORD(v77) = v18;
        BYTE4(v77) = 3;
        sub_244D7E78C((uint64_t)&v76);
      }
      else
      {
        sub_2446C01A8(*(void *)(*(void *)(a1 + 40) + 3144), v7);
      }
      goto LABEL_28;
    }
  }
  else
  {
    long long v100 = 0u;
    long long v101 = 0u;
    long long v98 = 0u;
    long long v99 = 0u;
    long long v96 = 0u;
    long long v97 = 0u;
    long long v94 = 0u;
    long long v95 = 0u;
    long long v92 = 0u;
    long long v93 = 0u;
    long long v90 = 0u;
    long long v91 = 0u;
    long long v88 = 0u;
    long long v89 = 0u;
    long long v87 = 0u;
  }
  uint64_t v22 = objc_msgSend_qrCodeString_(*(void **)(a1 + 56), v5, 0);
  if (!v22)
  {
    uint64_t v22 = objc_msgSend_manualEntryCode(*(void **)(a1 + 56), v20, v21);
    if (!v22)
    {
      uint64_t v50 = *(void *)(*(void *)(a1 + 64) + 8);
      *(_DWORD *)(v50 + 48) = 47;
      *(void *)(v50 + 56) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/MTRDeviceController_Concrete.mm";
      *(_DWORD *)(v50 + 64) = 911;
      uint64_t v51 = *(void *)(a1 + 72);
      uint64_t v52 = *(void *)(*(void *)(a1 + 64) + 8);
      long long v62 = *(_OWORD *)(v52 + 48);
      uint64_t v63 = *(void *)(v52 + 64);
      int v47 = objc_msgSend_checkForError_logMsg_error_(MTRDeviceController_Concrete, v20, (uint64_t)&v62, @"Generating Manual Pairing Code failed", v51);
      goto LABEL_29;
    }
  }
  long long v60 = 0u;
  long long v61 = 0u;
  long long v58 = 0u;
  long long v59 = 0u;
  long long v23 = objc_msgSend_interfaces(*(void **)(a1 + 48), v20, v21);
  id obj = v23;
  uint64_t v27 = objc_msgSend_countByEnumeratingWithState_objects_count_(v23, v24, (uint64_t)&v58, v86, 16);
  if (v27)
  {
    uint64_t v28 = *(void *)v59;
    while (2)
    {
      for (uint64_t i = 0; i != v27; ++i)
      {
        if (*(void *)v59 != v28) {
          objc_enumerationMutation(obj);
        }
        uint64_t v30 = *(void *)(*((void *)&v58 + 1) + 8 * i);
        uint64_t v31 = objc_msgSend_interfaces(*(void **)(a1 + 48), v25, v26);
        uint64_t v33 = objc_msgSend_objectForKeyedSubscript_(v31, v32, v30);
        uint64_t v36 = v33;
        if (v33)
        {
          objc_msgSend_resolutionData(v33, v34, v35);
        }
        else
        {
          memset(v85, 0, sizeof(v85));
          long long v83 = 0u;
          long long v84 = 0u;
          long long v81 = 0u;
          long long v82 = 0u;
          long long v79 = 0u;
          long long v80 = 0u;
          long long v77 = 0u;
          long long v78 = 0u;
          long long v76 = 0u;
        }

        if ((_BYTE)v76)
        {
          LODWORD(v56) = 0;
          *((void *)&v56 + 1) = "dwnfw_setup_pase_session";
          BYTE4(v57) = 0;
          sub_244D7E78C((uint64_t)&v56);
          uint64_t v37 = *(void *)(*(void *)(a1 + 40) + 3120);
          id v38 = v22;
          v41 = (char *)objc_msgSend_UTF8String(v38, v39, v40);
          v65[0] = v76;
          if ((_BYTE)v76)
          {
            int v66 = DWORD2(v76);
            long long v73 = v83;
            long long v74 = v84;
            v75[0] = v85[0];
            *(_OWORD *)((char *)v75 + 11) = *(_OWORD *)((char *)v85 + 11);
            long long v69 = v79;
            long long v70 = v80;
            long long v71 = v81;
            long long v72 = v82;
            long long v67 = v77;
            long long v68 = v78;
          }
          sub_244DF2048(v37, v7, v41, 0, (uint64_t)v65, (uint64_t)&v56);
          uint64_t v42 = *(void *)(*(void *)(a1 + 64) + 8);
          *(_OWORD *)(v42 + 48) = v56;
          *(void *)(v42 + 64) = v57;
          int v43 = *(_DWORD *)(*(void *)(*(void *)(a1 + 64) + 8) + 48);
          if (v43)
          {
            LODWORD(v56) = 1;
            *((void *)&v56 + 1) = "dwnfw_setup_pase_session";
            LODWORD(v57) = v43;
            BYTE4(v57) = 3;
            sub_244D7E78C((uint64_t)&v56);
            uint64_t v44 = obj;
            goto LABEL_25;
          }
          sub_2446C01A8(*(void *)(*(void *)(a1 + 40) + 3144), v7);
        }
      }
      uint64_t v44 = obj;
      uint64_t v27 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v25, (uint64_t)&v58, v86, 16);
      if (v27) {
        continue;
      }
      break;
    }
LABEL_25:
  }
  else
  {
  }
LABEL_28:
  uint64_t v45 = *(void *)(a1 + 72);
  uint64_t v46 = *(void *)(*(void *)(a1 + 64) + 8);
  long long v54 = *(_OWORD *)(v46 + 48);
  uint64_t v55 = *(void *)(v46 + 64);
  int v47 = objc_msgSend_checkForError_logMsg_error_(MTRDeviceController_Concrete, v19, (uint64_t)&v54, @"Failure while pairing the device", v45);
LABEL_29:
  int v48 = v47;
  sub_244855660(v64);
  return v48 ^ 1u;
}

void sub_244B8D768(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
}

unsigned char *sub_244B8D808(unsigned char *a1)
{
  if (!*a1) {
    sub_244E20788();
  }
  return a1 + 8;
}

void sub_244B8DA40(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B8DA88(uint64_t a1, const char *a2, uint64_t a3)
{
  uint64_t v211 = *MEMORY[0x263EF8340];
  char v166 = 0;
  char v167 = 0;
  char v168 = 0;
  char v169 = 0;
  char v172 = 0;
  char v175 = 0;
  char v176 = 0;
  char v177 = 0;
  char v179 = 0;
  char v181 = 0;
  char v184 = 0;
  char v186 = 0;
  char v188 = 0;
  char v189 = 0;
  char v190 = 0;
  char v191 = 0;
  v192[0] = 0;
  v192[24] = 0;
  v192[40] = 0;
  v192[64] = 0;
  v192[88] = 0;
  v192[112] = 0;
  v192[136] = 0;
  v192[152] = 0;
  v192[156] = 0;
  v192[160] = 0;
  v192[162] = 0;
  v192[164] = 0;
  int v193 = 0;
  v194 = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/controller/CommissioningDelegate.h";
  int v195 = 116;
  char v196 = 0;
  char v197 = 0;
  char v198 = 0;
  char v199 = 0;
  uint64_t v200 = 0;
  LOBYTE(v201) = 0;
  LOBYTE(v202) = 0;
  char v203 = 0;
  char v205 = 0;
  char v206 = 0;
  char v207 = 0;
  char v208 = 0;
  char v209 = 0;
  __int16 v210 = 0;
  uint64_t v4 = objc_msgSend_csrNonce(*(void **)(a1 + 32), a2, a3);

  if (v4)
  {
    objc_msgSend_csrNonce(*(void **)(a1 + 32), v5, v6);
    id v7 = objc_claimAutoreleasedReturnValue();
    uint64_t v10 = objc_msgSend_bytes(v7, v8, v9);
    uint64_t v13 = objc_msgSend_length(v7, v11, v12);
    sub_2446C1098(v165, v10, v13);

    char v177 = 1;
    long long v178 = v165[0];
  }
  int v14 = objc_msgSend_attestationNonce(*(void **)(a1 + 32), v5, v6);
  BOOL v15 = v14 == 0;

  if (!v15)
  {
    objc_msgSend_attestationNonce(*(void **)(a1 + 32), v16, v17);
    id v18 = objc_claimAutoreleasedReturnValue();
    uint64_t v21 = objc_msgSend_bytes(v18, v19, v20);
    uint64_t v24 = objc_msgSend_length(v18, v22, v23);
    sub_2446C1098(v165, v21, v24);

    char v179 = 1;
    long long v180 = v165[0];
  }
  long long v25 = objc_msgSend_threadOperationalDataset(*(void **)(a1 + 32), v16, v17);
  BOOL v26 = v25 == 0;

  if (!v26)
  {
    objc_msgSend_threadOperationalDataset(*(void **)(a1 + 32), v27, v28);
    id v29 = objc_claimAutoreleasedReturnValue();
    uint64_t v32 = objc_msgSend_bytes(v29, v30, v31);
    uint64_t v35 = objc_msgSend_length(v29, v33, v34);
    sub_2446C1098(v165, v32, v35);

    char v186 = 1;
    long long v187 = v165[0];
    __int16 v202 = 1;
  }
  char v36 = objc_msgSend_skipCommissioningComplete(*(void **)(a1 + 32), v27, v28);
  char v203 = 1;
  char v204 = v36;
  uint64_t v39 = objc_msgSend_wifiSSID(*(void **)(a1 + 32), v37, v38);
  BOOL v40 = v39 == 0;

  if (!v40)
  {
    objc_msgSend_wifiSSID(*(void **)(a1 + 32), v41, v42);
    id v43 = objc_claimAutoreleasedReturnValue();
    uint64_t v46 = objc_msgSend_bytes(v43, v44, v45);
    uint64_t v49 = objc_msgSend_length(v43, v47, v48);
    sub_2446C1098(v165, v46, v49);

    long long v50 = v165[0];
    id v53 = objc_msgSend_wifiCredentials(*(void **)(a1 + 32), v51, v52);
    LOBYTE(v43) = v53 == 0;

    if (v43)
    {
      long long v61 = 0uLL;
    }
    else
    {
      objc_msgSend_wifiCredentials(*(void **)(a1 + 32), v41, v42);
      id v54 = objc_claimAutoreleasedReturnValue();
      uint64_t v57 = objc_msgSend_bytes(v54, v55, v56);
      uint64_t v60 = objc_msgSend_length(v54, v58, v59);
      sub_2446C1098(v165, v57, v60);

      long long v146 = v165[0];
      long long v61 = v146;
    }
    char v181 = 1;
    long long v182 = v50;
    long long v183 = v61;
    __int16 v201 = 1;
  }
  long long v62 = objc_msgSend_deviceAttestationDelegate(*(void **)(a1 + 32), v41, v42);
  BOOL v63 = v62 == 0;

  if (!v63)
  {
    objc_msgSend_clearDeviceAttestationDelegateBridge(*(void **)(a1 + 40), v64, v65);
    long long v68 = objc_msgSend_failSafeTimeout(*(void **)(a1 + 32), v66, v67);
    BOOL v69 = v68 == 0;

    if (!v69)
    {
      long long v72 = objc_msgSend_failSafeTimeout(*(void **)(a1 + 32), v70, v71);
      objc_msgSend_unsignedIntValue(v72, v73, v74);
    }
    char v75 = objc_msgSend_deviceAttestationDelegate(*(void **)(a1 + 32), v70, v71);
    if ((objc_opt_respondsToSelector() & 1) == 0)
    {
      long long v78 = objc_msgSend_deviceAttestationDelegate(*(void **)(a1 + 32), v76, v77);
      objc_opt_respondsToSelector();
    }
    operator new();
  }
  long long v79 = objc_msgSend_countryCode(*(void **)(a1 + 32), v64, v65);
  BOOL v80 = v79 == 0;

  if (!v80)
  {
    objc_msgSend_countryCode(*(void **)(a1 + 32), v81, v82);
    id v83 = objc_claimAutoreleasedReturnValue();
    uint64_t v86 = objc_msgSend_UTF8String(v83, v84, v85);
    uint64_t v88 = objc_msgSend_lengthOfBytesUsingEncoding_(v83, v87, 4);
    sub_24479476C(v165, v86, v88);

    char v184 = 1;
    long long v185 = v165[0];
  }
  objc_msgSend_localTimeZone(MEMORY[0x263EFFA18], v81, v82);
  v147 = uint64_t v161 = 0;
  uint64_t v91 = objc_msgSend_secondsFromGMT(v147, v89, v90);
  objc_msgSend_daylightSavingTimeOffset(v147, v92, v93);
  int v160 = (int)((double)v91 - v94);
  objc_msgSend_name(v147, v95, v96);
  id v97 = objc_claimAutoreleasedReturnValue();
  uint64_t v100 = objc_msgSend_UTF8String(v97, v98, v99);
  uint64_t v102 = objc_msgSend_lengthOfBytesUsingEncoding_(v97, v101, 4);
  sub_24479476C(v165, v100, v102);

  char v162 = 1;
  long long v163 = v165[0];

  uint64_t v105 = 0;
  char v169 = 1;
  v170 = &v160;
  uint64_t v171 = 1;
  do
  {
    v106 = &v165[v105];
    *(_DWORD *)v106 = 0;
    *((void *)v106 + 1) = 0;
    *((unsigned char *)v106 + 16) = 0;
    *((unsigned char *)v106 + 24) = 0;
    v105 += 2;
  }
  while (v105 != 8);
  v107 = sub_244C9D794(4, v103, v104);
  v110 = v107;
  if (v107)
  {
    long long v158 = 0u;
    long long v159 = 0u;
    long long v156 = 0u;
    long long v157 = 0u;
    id v111 = v107;
    v144 = v110;
    uint64_t v115 = objc_msgSend_countByEnumeratingWithState_objects_count_(v111, v112, (uint64_t)&v156, v164, 16);
    if (v115)
    {
      unint64_t v116 = 0;
      uint64_t v117 = *(void *)v157;
      while (2)
      {
        uint64_t v118 = 0;
        unint64_t v119 = v116;
        BOOL v120 = v116 <= 4;
        unint64_t v121 = 4 - v116;
        if (v120) {
          unint64_t v122 = v121;
        }
        else {
          unint64_t v122 = 0;
        }
        unint64_t v145 = v119;
        v123 = (char *)&v165[2 * v119 + 1] + 8;
        do
        {
          if (*(void *)v157 != v117) {
            objc_enumerationMutation(v111);
          }
          if (v122 == v118)
          {
            uint64_t v139 = v145 + v118;
            goto LABEL_41;
          }
          v124 = *(void **)(*((void *)&v156 + 1) + 8 * v118);
          v125 = objc_msgSend_offset(v124, v113, v114);
          *((_DWORD *)v123 - 6) = objc_msgSend_intValue(v125, v126, v127);

          v130 = objc_msgSend_validStarting(v124, v128, v129);
          *((void *)v123 - 2) = objc_msgSend_unsignedLongLongValue(v130, v131, v132);

          v135 = objc_msgSend_validUntil(v124, v133, v134);
          LODWORD(v130) = v135 == 0;

          if (v130)
          {
            if (*v123) {
              unsigned char *v123 = 0;
            }
          }
          else
          {
            v136 = objc_msgSend_validUntil(v124, v113, v114);
            *((void *)v123 - 1) = objc_msgSend_unsignedLongLongValue(v136, v137, v138);
            unsigned char *v123 = 1;
          }
          ++v118;
          v123 += 32;
        }
        while (v115 != v118);
        uint64_t v115 = objc_msgSend_countByEnumeratingWithState_objects_count_(v111, v113, (uint64_t)&v156, v164, 16);
        unint64_t v116 = v145 + v118;
        if (v115) {
          continue;
        }
        break;
      }
      uint64_t v139 = v145 + v118;
    }
    else
    {
      uint64_t v139 = 0;
    }
LABEL_41:

    char v172 = 1;
    v173 = v165;
    uint64_t v174 = v139;
    v110 = v144;
  }
  uint64_t v140 = objc_msgSend_unsignedLongLongValue(*(void **)(a1 + 48), v108, v109);
  *(void *)(*(void *)(*(void *)(a1 + 40) + 3152) + 32) = v140;
  long long v154 = 0uLL;
  uint64_t v155 = 0;
  sub_244DF1EFC(*(void *)(*(void *)(a1 + 40) + 3120), v140, &v154);
  int v150 = 2;
  v151 = "dwnfw_commission_node";
  int v152 = v154;
  char v153 = 3;
  sub_244D7E78C((uint64_t)&v150);
  long long v148 = v154;
  uint64_t v149 = v155;
  int v142 = objc_msgSend_checkForError_logMsg_error_(MTRDeviceController_Concrete, v141, (uint64_t)&v148, @"Failure while pairing the device", *(void *)(a1 + 56));

  sub_244B94F10(v192);
  return v142 ^ 1u;
}

void sub_244B8E2C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned char *a16)
{
  sub_244B94F10(a16);
  _Unwind_Resume(a1);
}

void sub_244B8E4E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B8E4F0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(v2 + 3160);
  if (v3) {
    LODWORD(v3) = *(unsigned __int16 *)(v3 + 8);
  }
  uint64_t v4 = *(void *)(a1 + 40);
  long long v14 = 0uLL;
  uint64_t v15 = 0;
  if (*(unsigned char *)(a1 + 56)) {
    int v5 = 0;
  }
  else {
    int v5 = v3;
  }
  sub_244DF26EC(*(void *)(v2 + 3120), v4, v5, (uint64_t)&v14);
  int v10 = 2;
  uint64_t v11 = "dwnfw_commission_post_attestation";
  int v12 = v14;
  char v13 = 3;
  sub_244D7E78C((uint64_t)&v10);
  long long v8 = v14;
  uint64_t v9 = v15;
  return objc_msgSend_checkForError_logMsg_error_(MTRDeviceController_Concrete, v6, (uint64_t)&v8, @"Failure while pairing the device", *(void *)(a1 + 48)) ^ 1;
}

void sub_244B8E678(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B8E694(uint64_t a1, const char *a2, uint64_t a3)
{
  *(void *)(*(void *)(*(void *)(a1 + 32) + 3152) + 32) = 0;
  long long v14 = 0uLL;
  uint64_t v15 = 0;
  uint64_t v4 = *(void *)(*(void *)(a1 + 32) + 3120);
  uint64_t v5 = objc_msgSend_unsignedLongLongValue(*(void **)(a1 + 40), a2, a3);
  sub_244DF326C(v4, v5, (uint64_t)&v14);
  int v10 = 2;
  uint64_t v11 = "dwnfw_cancel_commissioning";
  int v12 = v14;
  char v13 = 3;
  sub_244D7E78C((uint64_t)&v10);
  long long v8 = v14;
  uint64_t v9 = v15;
  return objc_msgSend_checkForError_logMsg_error_(MTRDeviceController_Concrete, v6, (uint64_t)&v8, @"Failure while trying to stop the pairing process", *(void *)(a1 + 48)) ^ 1;
}

void sub_244B8E834(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B8E85C(void *a1)
{
  if (*(void *)(a1[4] + 3088))
  {
    int v9 = 2;
    int v10 = "dwnfw_start_browse_commissionables";
    int v11 = 0;
    char v12 = 1;
    sub_244D7E78C((uint64_t)&v9);
    return 0;
  }
  else
  {
    uint64_t v3 = [MTRCommissionableBrowser alloc];
    uint64_t v5 = objc_msgSend_initWithDelegate_controller_queue_(v3, v4, a1[5], a1[4], a1[6]);
    uint64_t v1 = objc_msgSend_start(v5, v6, v7);
    if (v1)
    {
      objc_storeStrong((id *)(a1[4] + 3088), v5);
    }
    else
    {
      int v9 = 2;
      int v10 = "dwnfw_start_browse_commissionables";
      int v11 = 0;
      char v12 = 1;
      sub_244D7E78C((uint64_t)&v9);
    }
  }
  return v1;
}

void sub_244B8E93C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B8E9E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B8E9F8(uint64_t a1)
{
  uint64_t v1 = *(void **)(*(void *)(a1 + 32) + 3088);
  if (v1)
  {
    id v3 = v1;
    uint64_t v6 = objc_msgSend_stop(v3, v4, v5);
    if (v6)
    {
      uint64_t v7 = *(void *)(a1 + 32);
      long long v8 = *(void **)(v7 + 3088);
      *(void *)(v7 + 3088) = 0;
    }
    else
    {
      int v10 = 2;
      int v11 = "dwnfw_stop_browse_commissionables";
      int v12 = 0;
      char v13 = 1;
      sub_244D7E78C((uint64_t)&v10);
    }
  }
  else
  {
    int v10 = 2;
    int v11 = "dwnfw_stop_browse_commissionables";
    int v12 = 0;
    char v13 = 1;
    sub_244D7E78C((uint64_t)&v10);
    return 0;
  }
  return v6;
}

void sub_244B8EAC4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B8ECC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19)
{
  _Unwind_Resume(a1);
}

id sub_244B8ED04(uint64_t a1, const char *a2, uint64_t a3)
{
  uint64_t v20 = 0;
  long long v18 = 0uLL;
  uint64_t v19 = 0;
  uint64_t v4 = *(void *)(*(void *)(a1 + 32) + 3120);
  uint64_t v5 = objc_msgSend_unsignedLongLongValue(*(void **)(a1 + 40), a2, a3);
  sub_244DF08D0(v4, v5, &v20, (uint64_t)&v18);
  int v14 = 2;
  uint64_t v15 = "dwnfw_dev_being_commissioned";
  int v16 = v18;
  char v17 = 3;
  sub_244D7E78C((uint64_t)&v14);
  long long v12 = v18;
  uint64_t v13 = v19;
  char v7 = objc_msgSend_checkForError_logMsg_error_(MTRDeviceController_Concrete, v6, (uint64_t)&v12, @"Failure obtaining device being commissioned", *(void *)(a1 + 48));
  long long v8 = 0;
  if ((v7 & 1) == 0)
  {
    int v9 = [MTRBaseDevice alloc];
    long long v8 = objc_msgSend_initWithPASEDevice_controller_(v9, v10, v20, *(void *)(a1 + 32));
  }

  return v8;
}

void sub_244B8EE48(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B8F098(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B8F200(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, void *a16)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B8F228(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  if (v2
    && (uint64_t v3 = a1 + 40,
        sub_244B8F2AC(*(void *)(*(void *)(a1 + 40) + 3152), v2, *(void **)(a1 + 48)),
        (objc_msgSend_shouldSkipAttestationCertificateValidation(*(void **)(a1 + 32), v4, v5) & 1) != 0))
  {
    uint64_t v6 = &OBJC_IVAR___MTRDeviceController_Concrete__partialDACVerifier;
  }
  else
  {
    uint64_t v3 = a1 + 40;
    uint64_t v6 = &OBJC_IVAR___MTRDeviceController_Concrete__defaultDACVerifier;
  }
  *(void *)(*(void *)(*(void *)v3 + 3120) + 9152) = *(void *)(*(void *)v3 + *v6);
  return 1;
}

void sub_244B8F2AC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  char v7 = *(void **)(a1 + 96);
  *(void *)(a1 + 96) = v5;
  id v9 = v5;

  long long v8 = *(void **)(a1 + 104);
  *(void *)(a1 + 104) = v6;
}

void sub_244B8F3F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

id sub_244B8F40C(uint64_t a1)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  uint64_t v21 = 0;
  long long v19 = xmmword_2651999C0;
  uint64_t v20 = 1240;
  v18[0] = (uint64_t)"dwnfw_attestation_challenge_for_device";
  v18[1] = (uint64_t)&v19;
  LODWORD(v22) = 0;
  *((void *)&v22 + 1) = "dwnfw_attestation_challenge_for_device";
  BYTE4(v23) = 0;
  sub_244D7E78C((uint64_t)&v22);
  uint64_t v2 = *(void **)(a1 + 40);
  uint64_t v3 = *(void *)(*(void *)(a1 + 32) + 3120);
  uint64_t v6 = objc_msgSend_unsignedLongLongValue(v2, v4, v5);
  sub_244DF08D0(v3, v6, &v21, (uint64_t)&v22);
  long long v19 = v22;
  uint64_t v20 = v23;
  long long v16 = v22;
  uint64_t v17 = v23;
  if (objc_msgSend_checkForError_logMsg_error_(MTRDeviceController_Concrete, v7, (uint64_t)&v16, @"Failure obtaining device being commissioned", 0) & 1) != 0|| (v14 = &v24, v15 = 16, (*(void (**)(long long *__return_ptr))(*(void *)v21 + 64))(&v22), v19 = v22, v20 = v23, long long v12 = v22, v13 = v23, (objc_msgSend_checkForError_logMsg_error_(MTRDeviceController_Concrete, v8, (uint64_t)&v12, @"Failure getting attestation challenge", 0)))
  {
    int v10 = 0;
  }
  else
  {
    int v10 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v9, (uint64_t)v14, v15);
  }
  sub_244855660(v18);

  return v10;
}

void sub_244B8F5AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  sub_244855660((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_244B8F810(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B8F85C(uint64_t a1, const char *a2)
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  objc_msgSend_addObject_(*(void **)(*(void *)(a1 + 32) + 3176), a2, *(void *)(a1 + 40));
  objc_msgSend_registerMatterEndpoint(*(void **)(a1 + 40), v3, v4);
  uint64_t v5 = sub_244CC8484(0, "NotSpecified");
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    id v9 = objc_msgSend_endpointID(*(void **)(a1 + 40), v6, v7);
    unsigned __int16 v12 = objc_msgSend_unsignedLongLongValue(v9, v10, v11);
    uint64_t v15 = objc_msgSend_uniqueIdentifier(*(void **)(a1 + 32), v13, v14);
    *(_DWORD *)buf = 138412802;
    uint64_t v25 = v8;
    __int16 v26 = 1024;
    int v27 = v12;
    __int16 v28 = 2112;
    id v29 = v15;
    _os_log_impl(&dword_2446BD000, v5, OS_LOG_TYPE_DEFAULT, "%@ Added server endpoint %u to controller %@", buf, 0x1Cu);
  }
  if (sub_244CC4E58(2u))
  {
    long long v18 = objc_msgSend_endpointID(*(void **)(a1 + 40), v16, v17);
    objc_msgSend_unsignedLongLongValue(v18, v19, v20);
    uint64_t v23 = objc_msgSend_uniqueIdentifier(*(void **)(a1 + 32), v21, v22);
    sub_244CC4DE0(0, 2);
  }
}

void sub_244B8F9E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B8FA1C(uint64_t a1)
{
  uint64_t v18 = *MEMORY[0x263EF8340];
  uint64_t v2 = sub_244CC8484(0, "NotSpecified");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
  {
    uint64_t v5 = *(void *)(a1 + 32);
    uint64_t v6 = objc_msgSend_endpointID(*(void **)(a1 + 40), v3, v4);
    *(_DWORD *)buf = 138412546;
    uint64_t v15 = v5;
    __int16 v16 = 1024;
    LOWORD(v17) = objc_msgSend_unsignedLongLongValue(v6, v7, v8);
    int v17 = (unsigned __int16)v17;
    _os_log_impl(&dword_2446BD000, v2, OS_LOG_TYPE_ERROR, "%@ Unexpected failure dispatching to Matter queue on running controller in addServerEndpoint, adding endpoint %u", buf, 0x12u);
  }
  if (sub_244CC4E58(1u))
  {
    uint64_t v11 = objc_msgSend_endpointID(*(void **)(a1 + 40), v9, v10);
    objc_msgSend_unsignedLongLongValue(v11, v12, v13);
    sub_244CC4DE0(0, 1);
  }
}

void sub_244B8FB3C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B8FCF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,void *a23,void *a24)
{
  _Unwind_Resume(a1);
}

void sub_244B8FD40(uint64_t a1, const char *a2)
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  objc_msgSend_removeServerEndpointOnMatterQueue_(*(void **)(a1 + 32), a2, *(void *)(a1 + 40));
  uint64_t v3 = sub_244CC8484(0, "NotSpecified");
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v6 = *(void *)(a1 + 32);
    uint64_t v7 = objc_msgSend_endpointID(*(void **)(a1 + 40), v4, v5);
    unsigned __int16 v10 = objc_msgSend_unsignedLongLongValue(v7, v8, v9);
    uint64_t v13 = objc_msgSend_uniqueIdentifier(*(void **)(a1 + 32), v11, v12);
    *(_DWORD *)buf = 138412802;
    uint64_t v25 = v6;
    __int16 v26 = 1024;
    int v27 = v10;
    __int16 v28 = 2112;
    id v29 = v13;
    _os_log_impl(&dword_2446BD000, v3, OS_LOG_TYPE_DEFAULT, "%@ Removed server endpoint %u from controller %@", buf, 0x1Cu);
  }
  if (sub_244CC4E58(2u))
  {
    __int16 v16 = objc_msgSend_endpointID(*(void **)(a1 + 40), v14, v15);
    objc_msgSend_unsignedLongLongValue(v16, v17, v18);
    uint64_t v23 = objc_msgSend_uniqueIdentifier(*(void **)(a1 + 32), v19, v20);
    sub_244CC4DE0(0, 2);
  }
  uint64_t v21 = *(NSObject **)(a1 + 48);
  if (v21)
  {
    uint64_t v22 = *(void **)(a1 + 56);
    if (v22) {
      dispatch_async(v21, v22);
    }
  }
}

void sub_244B8FEC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B8FF04(uint64_t a1)
{
  uint64_t v20 = *MEMORY[0x263EF8340];
  uint64_t v2 = sub_244CC8484(0, "NotSpecified");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = *(void *)(a1 + 32);
    uint64_t v6 = objc_msgSend_endpointID(*(void **)(a1 + 40), v3, v4);
    *(_DWORD *)buf = 138412546;
    uint64_t v17 = v5;
    __int16 v18 = 1024;
    LOWORD(v19) = objc_msgSend_unsignedLongLongValue(v6, v7, v8);
    int v19 = (unsigned __int16)v19;
    _os_log_impl(&dword_2446BD000, v2, OS_LOG_TYPE_DEFAULT, "%@ controller already shut down, so endpoint %u has already been removed", buf, 0x12u);
  }
  if (sub_244CC4E58(2u))
  {
    uint64_t v11 = objc_msgSend_endpointID(*(void **)(a1 + 40), v9, v10);
    objc_msgSend_unsignedLongLongValue(v11, v12, v13);
    sub_244CC4DE0(0, 2);
  }
  uint64_t v14 = *(NSObject **)(a1 + 48);
  if (v14)
  {
    uint64_t v15 = *(void **)(a1 + 56);
    if (v15) {
      dispatch_async(v14, v15);
    }
  }
}

void sub_244B90038(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B900F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244B90210(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B903DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B905BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B90784(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B90BBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19)
{
  _Unwind_Resume(a1);
}

void sub_244B90C88(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v5 = a4;
  uint64_t v9 = MEMORY[0x263EF8330];
  uint64_t v10 = 3221225472;
  uint64_t v11 = sub_244B90D74;
  uint64_t v12 = &unk_265199A30;
  id v13 = *(id *)(a1 + 40);
  id v6 = v5;
  id v14 = v6;
  uint64_t v7 = (void *)MEMORY[0x2456969D0](&v9);
  objc_msgSend_directlyGetSessionForNode_completion_(*(void **)(a1 + 32), v8, *(void *)(a1 + 48), v7, v9, v10, v11, v12);
}

void sub_244B90D50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_244B90D74(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  id v8 = a4;
  id v7 = a5;
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_244B90E0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244B91094(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B91108()
{
}

uint64_t sub_244B911B4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  v3[0] = 0;
  (*(void (**)(uint64_t))(v1 + 16))(v1);
  return sub_24479DF48((uint64_t)v3);
}

void sub_244B91204(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_244B9130C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B9132C(uint64_t a1, uint64_t a2)
{
  uint64_t v18 = 0;
  uint64_t v19 = 0;
  long long v17 = 0uLL;
  sub_244DF08D0(a2, *(void *)(a1 + 40), &v19, (uint64_t)&v17);
  if (v17)
  {
    uint64_t v3 = *(void *)(a1 + 32);
    LOBYTE(v16[0]) = 0;
    long long v14 = v17;
    uint64_t v15 = v18;
    uint64_t v4 = sub_244B26908((uint64_t)MTRError, &v14);
    (*(void (**)(uint64_t, void, void *, void *, void))(v3 + 16))(v3, 0, v16, v4, 0);
  }
  else
  {
    (*(void (**)(void *__return_ptr))(*(void *)v19 + 48))(v16);
    if (LOBYTE(v16[0]) && (id v5 = (uint64_t *)sub_24479DC08(v16), *(unsigned char *)(sub_244D879D8(*v5) + 57) == 1))
    {
      uint64_t v6 = *(void *)(a1 + 32);
      uint64_t v7 = (*(uint64_t (**)(uint64_t))(*(void *)v19 + 40))(v19);
      (*(void (**)(uint64_t, uint64_t, void *, void, void))(v6 + 16))(v6, v7, v16, 0, 0);
    }
    else
    {
      uint64_t v8 = *(void *)(a1 + 32);
      v13[0] = 0;
      LODWORD(v11) = 3;
      *((void *)&v11 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/MTRDeviceController_Concrete.mm";
      int v12 = 1467;
      uint64_t v9 = sub_244B26908((uint64_t)MTRError, &v11);
      (*(void (**)(uint64_t, void, unsigned char *, void *, void))(v8 + 16))(v8, 0, v13, v9, 0);

      sub_24479DF48((uint64_t)v13);
    }
  }
  return sub_24479DF48((uint64_t)v16);
}

void sub_244B914E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);

  sub_24479DF48((uint64_t)va);
  sub_24479DF48(v6 - 64);
  _Unwind_Resume(a1);
}

uint64_t sub_244B91524(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  v3[0] = 0;
  (*(void (**)(uint64_t))(v1 + 16))(v1);
  return sub_24479DF48((uint64_t)v3);
}

void sub_244B91574(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_244B91678(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B91688(uint64_t a1, const char *a2, uint64_t a3)
{
  uint64_t result = objc_msgSend_checkIsRunning(*(void **)(a1 + 32), a2, a3);
  if (result)
  {
    if (objc_msgSend_isPASEDevice(*(void **)(a1 + 40), v5, v6))
    {
      uint64_t v18 = 0;
      uint64_t v9 = *(void *)(*(void *)(a1 + 32) + 3120);
      uint64_t v10 = objc_msgSend_nodeID(*(void **)(a1 + 40), v7, v8);
      uint64_t result = sub_244DF08D0(v9, v10, &v18, (uint64_t)v17);
      if (!v17[0]) {
        *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = *(unsigned char *)(v18 + 56);
      }
    }
    else
    {
      uint64_t v11 = *(void *)(*(void *)(a1 + 32) + 3120);
      uint64_t v12 = objc_msgSend_nodeID(*(void **)(a1 + 40), v7, v8);
      uint64_t v13 = *(unsigned __int8 *)(v11 + 36);
      uint64_t v14 = *(void *)(*(void *)(*(void *)(a1 + 32) + 3120) + 4280);
      if (v14) {
        uint64_t v15 = *(void *)(v14 + 40);
      }
      else {
        uint64_t v15 = 0;
      }
      LOBYTE(v18) = 0;
      sub_244D8D444(v15, v12, v13, (uint64_t)&v18, 0, (uint64_t)v17);
      if (LOBYTE(v17[0]))
      {
        __int16 v16 = (uint64_t *)sub_24479DC08(v17);
        *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = *(unsigned char *)(sub_244D879D8(*v16) + 112);
      }
      return sub_24479DF48((uint64_t)v17);
    }
  }
  return result;
}

void sub_244B91798(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_244B918CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B918E4(void *a1, const char *a2)
{
  uint64_t v3 = (void *)a1[4];
  id v8 = 0;
  char v4 = objc_msgSend_checkIsRunning_(v3, a2, (uint64_t)&v8);
  id v5 = v8;
  if (v4)
  {
    uint64_t v6 = a1[6];
    id v7 = *(id *)(a1[4] + 3120);
LABEL_4:
    (*(void (**)(uint64_t, id))(v6 + 16))(v6, v7);
    goto LABEL_5;
  }
  uint64_t v6 = a1[5];
  id v7 = v5;
  if (v6) {
    goto LABEL_4;
  }
LABEL_5:
}

void sub_244B91970(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B91A40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B91A60(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B91C6C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B91C88(uint64_t a1, const char *a2)
{
  uint64_t result = objc_msgSend_checkIsRunning_(*(void **)(a1 + 32), a2, *(void *)(a1 + 48));
  if (result)
  {
    char v4 = *(uint64_t (**)(void))(*(void *)(a1 + 40) + 16);
    return v4();
  }
  return result;
}

void sub_244B91E08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  _Block_object_dispose(&a15, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_244B91E38(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_244B91E48(uint64_t a1)
{
}

void sub_244B91E50(uint64_t a1)
{
  uint64_t v2 = (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  char v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_244B91F88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, ...)
{
  va_start(va, a7);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_244B91FB0(uint64_t a1)
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = result;
  return result;
}

BOOL sub_244B9221C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 24))(a1);
  if (v4 != (*(uint64_t (**)(uint64_t))(*(void *)a2 + 24))(a2)) {
    return 0;
  }
  id v5 = (char *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 56))(a1);
  uint64_t v6 = (char *)(*(uint64_t (**)(uint64_t))(*(void *)a2 + 56))(a2);
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 24))(a1);

  return sub_244CED788(v5, v6, v7);
}

void sub_244B92400(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B9241C(uint64_t a1, const char *a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a1 + 32) + 3120);
  uint64_t v4 = *(void *)(v3 + 4280);
  if (!v4 || (uint64_t v5 = *(void *)(v4 + 40)) == 0) {
    sub_244E20844();
  }
  uint64_t v6 = objc_msgSend_unsignedLongLongValue(*(void **)(a1 + 40), a2, a3);
  uint64_t v7 = *(unsigned __int8 *)(v3 + 36);
  v10[0] = v6;
  v10[1] = v7;
  __int16 v9 = 513;
  return sub_244D8A314(v5, (uint64_t)v10, (uint64_t)&v9);
}

void sub_244B926C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B92860(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,void *a21,void *a22)
{
  _Unwind_Resume(a1);
}

void sub_244B92898(uint64_t a1)
{
}

uint64_t sub_244B928BC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B92A84(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B92DE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, void *a16)
{
  _Unwind_Resume(a1);
}

void sub_244B931F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B9337C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, void *a16)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B933AC(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), 0, *(void *)(a1 + 32));
}

void sub_244B933C4(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v5 = a4;
  v10[0] = MEMORY[0x263EF8330];
  v10[1] = 3221225472;
  void v10[2] = sub_244B93480;
  v10[3] = &unk_265199B48;
  uint64_t v6 = (void *)a1[6];
  uint64_t v14 = a1[7];
  id v8 = a1[4];
  uint64_t v7 = a1[5];
  id v11 = v5;
  uint64_t v12 = v7;
  id v13 = v6;
  id v9 = v5;
  dispatch_async(v8, v10);
}

void sub_244B93480(void *a1)
{
  if (a1[4])
  {
    id v2 = 0;
  }
  else
  {
    uint64_t v3 = [MTRBaseDevice alloc];
    id v5 = objc_msgSend_numberWithUnsignedLongLong_(NSNumber, v4, a1[7]);
    id v7 = (id)objc_msgSend_initWithNodeID_controller_(v3, v6, (uint64_t)v5, a1[5]);

    id v2 = v7;
  }
  id v8 = v2;
  (*(void (**)(void))(a1[6] + 16))();
}

void sub_244B93538(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B936EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_244B93718(uint64_t a1)
{
  uint64_t v41 = *MEMORY[0x263EF8340];
  uint64_t v2 = *(void *)(*(void *)(a1 + 40) + 8) + 48;
  v39[0] = (uint64_t)"dwnfw_pair_device";
  v39[1] = v2;
  LODWORD(v30) = 0;
  *(void *)uint64_t v31 = "dwnfw_pair_device";
  char v32 = 0;
  sub_244D7E78C((uint64_t)&v30);
  __p[0] = 0;
  __p[1] = 0;
  uint64_t v38 = 0;
  LOBYTE(v30) = 0;
  *(_WORD *)&v31[2] = 0;
  v31[4] = 0;
  *(_DWORD *)&v31[8] = 0;
  *(_DWORD *)((char *)&v30 + 2) = 0;
  HIWORD(v30) = 0;
  uint64_t v33 = v34;
  v34[0] = 0;
  v36[0] = 0;
  v36[1] = 0;
  v34[1] = 0;
  uint64_t v35 = v36;
  sub_244B93A14((uint64_t)&v31[2], *(unsigned __int16 *)(a1 + 68));
  *(_DWORD *)&v31[8] = *(_DWORD *)(a1 + 64);
  *(_DWORD *)uint64_t v22 = v30;
  *(_DWORD *)&v22[3] = *(_DWORD *)((char *)&v30 + 3);
  char v23 = HIBYTE(v30);
  if (HIBYTE(v30)) {
    char v24 = v31[0];
  }
  uint64_t v25 = *(void *)&v31[2];
  __int16 v26 = *(_WORD *)&v31[10];
  __int16 v27 = 0;
  sub_244D7F744((uint64_t)v22, (uint64_t)__p, &v28);
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  *(_OWORD *)(v3 + 48) = v28;
  *(void *)(v3 + 64) = v29;
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(*(void *)(a1 + 40) + 8);
  long long v6 = *(_OWORD *)(v5 + 48);
  uint64_t v21 = *(void *)(v5 + 64);
  long long v20 = v6;
  if (objc_msgSend_checkForError_logMsg_error_(MTRDeviceController_Concrete, v7, (uint64_t)&v20, @"Generating Manual Pairing Code failed", v4))
  {
    uint64_t v8 = 0;
  }
  else
  {
    *(void *)(*(void *)(*(void *)(a1 + 32) + 3152) + 32) = *(void *)(a1 + 56);
    LODWORD(v28) = 0;
    *((void *)&v28 + 1) = "dwnfw_setup_pase_session";
    BYTE4(v29) = 0;
    sub_244D7E78C((uint64_t)&v28);
    uint64_t v9 = *(void *)(*(void *)(a1 + 32) + 3120);
    uint64_t v10 = *(void *)(a1 + 56);
    if (v38 >= 0) {
      id v11 = (char *)__p;
    }
    else {
      id v11 = (char *)__p[0];
    }
    v40[0] = 0;
    sub_244DF2048(v9, v10, v11, 2, (uint64_t)v40, (uint64_t)&v28);
    uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 8);
    *(_OWORD *)(v12 + 48) = v28;
    *(void *)(v12 + 64) = v29;
    int v13 = *(_DWORD *)(*(void *)(*(void *)(a1 + 40) + 8) + 48);
    if (v13)
    {
      LODWORD(v28) = 1;
      *((void *)&v28 + 1) = "dwnfw_setup_pase_session";
      LODWORD(v29) = v13;
      BYTE4(v29) = 3;
      sub_244D7E78C((uint64_t)&v28);
    }
    else
    {
      sub_2446C01A8(*(void *)(*(void *)(a1 + 32) + 3144), *(void *)(a1 + 56));
    }
    uint64_t v15 = *(void *)(a1 + 48);
    uint64_t v16 = *(void *)(*(void *)(a1 + 40) + 8);
    long long v18 = *(_OWORD *)(v16 + 48);
    uint64_t v19 = *(void *)(v16 + 64);
    uint64_t v8 = objc_msgSend_checkForError_logMsg_error_(MTRDeviceController_Concrete, v14, (uint64_t)&v18, @"Failure while pairing the device", v15) ^ 1;
  }
  sub_2447E6298((uint64_t)&v35, v36[0]);
  sub_2447E6298((uint64_t)&v33, v34[0]);
  if (SHIBYTE(v38) < 0) {
    operator delete(__p[0]);
  }
  sub_244855660(v39);
  return v8;
}

void sub_244B939D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,void *__p,uint64_t a32,int a33,__int16 a34,char a35,char a36,uint64_t a37)
{
  if (a36 < 0) {
    operator delete(__p);
  }
  sub_244855660(&a37);
  _Unwind_Resume(a1);
}

uint64_t sub_244B93A14(uint64_t result, unsigned int a2)
{
  if (a2 >= 0x1000) {
    sub_244E20908();
  }
  *(_WORD *)uint64_t result = a2;
  *(unsigned char *)(result + 2) = 0;
  return result;
}

void sub_244B93BFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_244B93C40(uint64_t a1)
{
  uint64_t v39 = *MEMORY[0x263EF8340];
  uint64_t v2 = *(void *)(*(void *)(a1 + 48) + 8) + 48;
  v20[0] = (uint64_t)"dwnfw_pair_device";
  v20[1] = v2;
  v21.n128_u32[0] = 0;
  v21.n128_u64[1] = (unint64_t)"dwnfw_pair_device";
  LOBYTE(v24) = 0;
  sub_244D7E78C((uint64_t)&v21);
  id v3 = *(id *)(a1 + 32);
  long long v6 = (char *)objc_msgSend_UTF8String(v3, v4, v5);
  sub_244CBE960(v6, &v19);
  __int16 v7 = *(_WORD *)(a1 + 76);
  *(void *)(*(void *)(*(void *)(a1 + 40) + 3152) + 32) = *(void *)(a1 + 56);
  int v35 = 0;
  long long v34 = 0u;
  long long v33 = 0u;
  long long v32 = 0u;
  long long v31 = 0u;
  long long v30 = 0u;
  long long v29 = 0u;
  int v8 = *(_DWORD *)(a1 + 72);
  __n128 v21 = v19;
  char v22 = 1;
  __int16 v23 = v7;
  int v24 = 0;
  uint64_t v25 = 0;
  int v26 = v8;
  int v27 = 0;
  char v28 = 0;
  uint64_t v37 = 0;
  uint64_t v38 = 0;
  uint64_t v36 = 0;
  LODWORD(v17) = 0;
  *((void *)&v17 + 1) = "dwnfw_setup_pase_session";
  BYTE4(v18) = 0;
  sub_244D7E78C((uint64_t)&v17);
  ((void (*)(long long *__return_ptr, void, void, __n128 *))loc_244DF0F64)(&v17, *(void *)(*(void *)(a1 + 40) + 3120), *(void *)(a1 + 56), &v21);
  uint64_t v9 = *(void *)(*(void *)(a1 + 48) + 8);
  *(_OWORD *)(v9 + 48) = v17;
  *(void *)(v9 + 64) = v18;
  int v10 = *(_DWORD *)(*(void *)(*(void *)(a1 + 48) + 8) + 48);
  if (v10)
  {
    LODWORD(v17) = 1;
    *((void *)&v17 + 1) = "dwnfw_setup_pase_session";
    LODWORD(v18) = v10;
    BYTE4(v18) = 3;
    sub_244D7E78C((uint64_t)&v17);
  }
  else
  {
    sub_2446C01A8(*(void *)(*(void *)(a1 + 40) + 3144), *(void *)(a1 + 56));
  }
  uint64_t v12 = *(void *)(*(void *)(a1 + 48) + 8);
  long long v15 = *(_OWORD *)(v12 + 48);
  uint64_t v16 = *(void *)(v12 + 64);
  int v13 = objc_msgSend_checkForError_logMsg_error_(MTRDeviceController_Concrete, v11, (uint64_t)&v15, @"Failure while pairing the device", *(void *)(a1 + 64));
  sub_244855660(v20);
  return v13 ^ 1u;
}

void sub_244B93E30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  sub_244855660((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_244B94024(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_244B9406C(uint64_t a1)
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  uint64_t v2 = *(void *)(*(void *)(a1 + 48) + 8) + 48;
  v17[0] = (uint64_t)"dwnfw_pair_device";
  v17[1] = v2;
  LODWORD(v18) = 0;
  *((void *)&v18 + 1) = "dwnfw_pair_device";
  BYTE4(v19) = 0;
  sub_244D7E78C((uint64_t)&v18);
  *(void *)(*(void *)(*(void *)(a1 + 32) + 3152) + 32) = *(void *)(a1 + 56);
  LODWORD(v18) = 0;
  *((void *)&v18 + 1) = "dwnfw_setup_pase_session";
  BYTE4(v19) = 0;
  sub_244D7E78C((uint64_t)&v18);
  uint64_t v3 = *(void *)(*(void *)(a1 + 32) + 3120);
  uint64_t v4 = *(void *)(a1 + 56);
  id v5 = *(id *)(a1 + 40);
  int v8 = (char *)objc_msgSend_UTF8String(v5, v6, v7);
  v20[0] = 0;
  sub_244DF2048(v3, v4, v8, 2, (uint64_t)v20, (uint64_t)&v18);
  uint64_t v9 = *(void *)(*(void *)(a1 + 48) + 8);
  *(_OWORD *)(v9 + 48) = v18;
  *(void *)(v9 + 64) = v19;
  int v10 = *(_DWORD *)(*(void *)(*(void *)(a1 + 48) + 8) + 48);
  if (v10)
  {
    LODWORD(v18) = 1;
    *((void *)&v18 + 1) = "dwnfw_setup_pase_session";
    LODWORD(v19) = v10;
    BYTE4(v19) = 3;
    sub_244D7E78C((uint64_t)&v18);
  }
  else
  {
    sub_2446C01A8(*(void *)(*(void *)(a1 + 32) + 3144), *(void *)(a1 + 56));
  }
  uint64_t v12 = *(void *)(*(void *)(a1 + 48) + 8);
  long long v15 = *(_OWORD *)(v12 + 48);
  uint64_t v16 = *(void *)(v12 + 64);
  int v13 = objc_msgSend_checkForError_logMsg_error_(MTRDeviceController_Concrete, v11, (uint64_t)&v15, @"Failure while pairing the device", *(void *)(a1 + 64));
  sub_244855660(v17);
  return v13 ^ 1u;
}

void sub_244B94214(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_244855660((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_244B94410(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B94428(uint64_t a1)
{
  long long v8 = xmmword_265199C50;
  uint64_t v9 = 1891;
  v7[0] = (uint64_t)"dwnfw_open_pairing_window";
  v7[1] = (uint64_t)&v8;
  LODWORD(v10) = 0;
  *((void *)&v10 + 1) = "dwnfw_open_pairing_window";
  BYTE4(v11) = 0;
  sub_244D7E78C((uint64_t)&v10);
  sub_244E14534(*(void *)(*(void *)(a1 + 32) + 3120), *(void *)(a1 + 40), *(_WORD *)(a1 + 48), &v10);
  long long v8 = v10;
  uint64_t v9 = v11;
  long long v5 = v10;
  uint64_t v6 = v11;
  uint64_t v3 = objc_msgSend_checkForError_logMsg_error_(MTRDeviceController_Concrete, v2, (uint64_t)&v5, @"Open Pairing Window failed", *(void *)(a1 + 56)) ^ 1;
  sub_244855660(v7);
  return v3;
}

void sub_244B944EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_244855660((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_244B94990(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  sub_244855660(&a27);
  _Block_object_dispose((const void *)(v28 - 176), 8);
  _Unwind_Resume(a1);
}

id sub_244B949D0(uint64_t a1)
{
  uint64_t v44 = *MEMORY[0x263EF8340];
  LOBYTE(v36) = 0;
  *(_WORD *)uint64_t v38 = 0;
  v38[2] = 0;
  *(_DWORD *)&v38[6] = 0;
  *(_DWORD *)((char *)&v36 + 2) = 0;
  HIWORD(v36) = 0;
  uint64_t v39 = v40;
  v40[0] = 0;
  v42[0] = 0;
  v42[1] = 0;
  v40[1] = 0;
  uint64_t v41 = v42;
  uint64_t v2 = *(void *)(*(void *)(a1 + 32) + 3120);
  uint64_t v3 = *(void *)(a1 + 48);
  __int16 v4 = *(_WORD *)(a1 + 56);
  __int16 v5 = *(_WORD *)(a1 + 64);
  uint64_t v6 = *(void *)(a1 + 72);
  v33[0] = 1;
  int v34 = v6;
  v32[0] = 0;
  sub_244E146A4(v2, v3, v4, 1000, v5, (uint64_t)v33, (uint64_t)v32, (uint64_t)&v36, v35, 0);
  uint64_t v7 = *(void *)(*(void *)(a1 + 40) + 8);
  *(_OWORD *)(v7 + 48) = *(_OWORD *)v35;
  *(void *)(v7 + 64) = *(void *)&v35[16];
  uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8);
  long long v30 = *(_OWORD *)(v8 + 48);
  uint64_t v31 = *(void *)(v8 + 64);
  if (objc_msgSend_checkForError_logMsg_error_(MTRDeviceController_Concrete, v9, (uint64_t)&v30, @"Open Pairing Window failed", *(void *)(a1 + 80)))
  {
    long long v10 = 0;
  }
  else
  {
    *(_DWORD *)int v35 = v36;
    *(_DWORD *)&v35[3] = *(_DWORD *)((char *)&v36 + 3);
    v35[7] = HIBYTE(v36);
    if (HIBYTE(v36)) {
      v35[8] = v37;
    }
    *(void *)&v35[10] = *(void *)v38;
    *(_DWORD *)&v35[18] = *(unsigned __int16 *)&v38[8];
    __p[0] = 0;
    __p[1] = 0;
    uint64_t v29 = 0;
    sub_244D7F744((uint64_t)v35, (uint64_t)__p, buf);
    uint64_t v11 = *(void *)(*(void *)(a1 + 40) + 8);
    *(_OWORD *)(v11 + 48) = *(_OWORD *)buf;
    *(void *)(v11 + 64) = *(void *)&buf[16];
    if (*(_DWORD *)(v11 + 48))
    {
      uint64_t v12 = sub_244CC8484(0, "NotSpecified");
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
      {
        uint64_t v13 = *(void *)(a1 + 32);
        *(_DWORD *)buf = 138412290;
        *(void *)&uint8_t buf[4] = v13;
        _os_log_impl(&dword_2446BD000, v12, OS_LOG_TYPE_ERROR, "%@ Failed to get decimal setup code", buf, 0xCu);
      }

      if (sub_244CC4E58(1u)) {
        sub_244CC4DE0(0, 1);
      }
      long long v10 = 0;
    }
    else
    {
      uint64_t v14 = sub_244CC8484(0, "NotSpecified");
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        uint64_t v15 = *(void *)(a1 + 32);
        uint64_t v16 = __p;
        if (v29 < 0) {
          uint64_t v16 = (void **)__p[0];
        }
        *(_DWORD *)buf = 138412546;
        *(void *)&uint8_t buf[4] = v15;
        *(_WORD *)&buf[12] = 2080;
        *(void *)&buf[14] = v16;
        _os_log_impl(&dword_2446BD000, v14, OS_LOG_TYPE_ERROR, "%@ Setup code is %s", buf, 0x16u);
      }

      if (sub_244CC4E58(1u))
      {
        uint64_t v19 = __p;
        if (v29 < 0) {
          uint64_t v19 = (void **)__p[0];
        }
        uint64_t v26 = *(void *)(a1 + 32);
        int v27 = v19;
        sub_244CC4DE0(0, 1);
      }
      long long v20 = NSString;
      int v21 = SHIBYTE(v29);
      char v22 = __p[0];
      uint64_t v24 = objc_msgSend_defaultCStringEncoding(NSString, v17, v18, v26, v27);
      if (v21 >= 0) {
        objc_msgSend_stringWithCString_encoding_(v20, v23, (uint64_t)__p, v24);
      }
      else {
      long long v10 = objc_msgSend_stringWithCString_encoding_(v20, v23, (uint64_t)v22, v24);
      }
    }
    if (SHIBYTE(v29) < 0) {
      operator delete(__p[0]);
    }
  }
  sub_2447E6298((uint64_t)&v41, v42[0]);
  sub_2447E6298((uint64_t)&v39, v40[0]);

  return v10;
}

void sub_244B94D44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  sub_2447DD2CC((uint64_t)&a29);
  _Unwind_Resume(a1);
}

void sub_244B94E10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244B94EBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B94EE0(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 32) == 1
    && (int v1 = *(unsigned __int8 *)(a1 + 36), *(unsigned char *)(a1 + 36))
    && (uint64_t v2 = *(void *)(a1 + 4280)) != 0
    && (uint64_t v3 = *(void *)(v2 + 72)) != 0)
  {
    return sub_244D9EA90(v3, v1);
  }
  else
  {
    return 0;
  }
}

unsigned char *sub_244B94F10(unsigned char *a1)
{
  if (*a1) {
    sub_244CED784(a1 + 1, 16);
  }
  return a1;
}

uint64_t sub_244B94F4C(uint64_t a1, void *a2, void *a3, unsigned __int8 *a4, char a5)
{
  id v9 = a3;
  *(void *)a1 = &unk_26F9527F0;
  *(_WORD *)(a1 + 8) = 0;
  objc_initWeak((id *)(a1 + 16), a2);
  *(void *)(a1 + 24) = v9;
  long long v10 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  *(void *)(a1 + 32) = dispatch_queue_create("org.csa-iot.matter.framework.device_attestation.workqueue", v10);

  int v11 = *a4;
  *(unsigned char *)(a1 + 40) = v11;
  if (v11) {
    *(_WORD *)(a1 + 42) = *((_WORD *)a4 + 1);
  }
  *(unsigned char *)(a1 + 44) = a5;
  return a1;
}

void *sub_244B95008@<X0>(void *result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  if (*((_DWORD *)result + 8) == 1)
  {
    uint64_t v7 = *(void *)(result[535] + 96);
    char v8 = *((unsigned char *)result + 36);
    uint64_t v11 = a2;
    char v12 = v8;
    uint64_t result = sub_244DBAD68(v7, &v11, a3, a4, 1, 0, a5);
    int v9 = 0;
    int v10 = 286;
  }
  else
  {
    int v10 = 279;
    int v9 = 3;
  }
  *(_DWORD *)a6 = v9;
  *(void *)(a6 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/controller/CHIPDeviceController.h";
  *(_DWORD *)(a6 + 16) = v10;
  return result;
}

void sub_244B9519C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244B9564C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B9572C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  block[0] = MEMORY[0x263EF8330];
  block[1] = 3221225472;
  block[2] = sub_244B95800;
  block[3] = &unk_265194FE8;
  uint64_t v7 = *(NSObject **)(a1 + 32);
  id v8 = *(id *)(a1 + 40);
  id v13 = v6;
  id v14 = v8;
  id v12 = v5;
  id v9 = v6;
  id v10 = v5;
  dispatch_async(v7, block);
}

uint64_t sub_244B95800(void *a1)
{
  return (*(uint64_t (**)(void, void, void))(a1[6] + 16))(a1[6], a1[4], a1[5]);
}

void sub_244B95818(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v9 = v6;
  if (v6)
  {
    id v10 = objc_msgSend_proxy(v6, v7, v8);
    uint64_t v11 = *(void *)(a1 + 32);
    uint64_t v14 = objc_msgSend_unsignedLongLongValue(*(void **)(a1 + 40), v12, v13);
    uint64_t v15 = *(void *)(a1 + 48);
    uint64_t v16 = *(void *)(a1 + 56);
    v24[0] = MEMORY[0x263EF8330];
    v24[1] = 3221225472;
    v24[2] = sub_244B95A20;
    v24[3] = &unk_265199D00;
    uint64_t v17 = *(void *)(a1 + 64);
    id v26 = *(id *)(a1 + 72);
    id v25 = v9;
    objc_msgSend_readAttributeCacheWithController_nodeId_endpointId_clusterId_attributeId_completion_(v10, v18, v11, v14, v15, v16, v17, v24);

    uint64_t v19 = v26;
  }
  else
  {
    long long v20 = sub_244CC8484(0, "NotSpecified");
    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)__int16 v23 = 0;
      _os_log_impl(&dword_2446BD000, v20, OS_LOG_TYPE_ERROR, "Attribute cache read failed due to XPC connection failure", v23, 2u);
    }

    if (sub_244CC4E58(1u)) {
      sub_244CC4DE0(0, 1);
    }
    uint64_t v22 = *(void *)(a1 + 72);
    uint64_t v19 = objc_msgSend_errorWithDomain_code_userInfo_(MEMORY[0x263F087E8], v21, @"MTRErrorDomain", 1, 0);
    (*(void (**)(uint64_t, void, void *))(v22 + 16))(v22, 0, v19);
  }
}

void sub_244B959E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B95A20(uint64_t a1, uint64_t a2, void *a3)
{
  id v8 = a3;
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v7 = objc_msgSend_decodeXPCResponseValues_(MTRDeviceController, v6, a2);
  (*(void (**)(uint64_t, void *, id))(v5 + 16))(v5, v7, v8);
}

void sub_244B95AA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244B95AC0(uint64_t a1, const char *a2, uint64_t a3)
{
  if (*(void *)(a1 + 32) || *(void *)(a1 + 40))
  {
    if (objc_msgSend_cppClusterStateCache(*(void **)(a1 + 48), a2, a3))
    {
      id v6 = objc_alloc_init(MEMORY[0x263EFF980]);
      uint64_t v7 = *(void **)(a1 + 32);
      if (v7)
      {
        if (*(void *)(a1 + 40))
        {
          if (*(void *)(a1 + 56))
          {
            BYTE2(v104) = 0;
            LOWORD(v104) = objc_msgSend_unsignedShortValue(v7, v4, v5);
            unsigned int v105 = objc_msgSend_unsignedLongValue(*(void **)(a1 + 40), v8, v9);
            LODWORD(v106) = objc_msgSend_unsignedLongValue(*(void **)(a1 + 56), v10, v11);
            uint64_t v14 = objc_msgSend_cppClusterStateCache(*(void **)(a1 + 48), v12, v13);
            sub_244B96164((uint64_t)&v104, v14, v6, (uint64_t)buf);
            unsigned int v16 = *(_DWORD *)buf;
            unsigned int v15 = v110;
            uint64_t v17 = v111;
            int v19 = v112;
            int v18 = v113;
          }
          else
          {
            uint64_t v79 = objc_msgSend_cppClusterStateCache(*(void **)(a1 + 48), v4, v5);
            unsigned int v82 = objc_msgSend_unsignedShortValue(*(void **)(a1 + 32), v80, v81);
            unsigned int v85 = objc_msgSend_unsignedLongValue(*(void **)(a1 + 40), v83, v84);
            uint64_t v86 = (void *)sub_244CAC8CC(v79, v82, v85, (uint64_t)&v104);
            unsigned int v16 = v104;
            unsigned int v15 = v105;
            int v18 = v108;
            if (v104)
            {
              uint64_t v17 = v106;
              int v19 = v107;
            }
            else
            {
              long long v89 = v86 + 1;
              uint64_t v90 = (void *)*v86;
              if ((void *)*v86 == v86 + 1)
              {
                unsigned int v16 = 0;
                int v19 = 386;
                uint64_t v17 = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/ClusterStateCache.h";
              }
              else
              {
                uint64_t v17 = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/ClusterStateCache.h";
                do
                {
                  int v91 = *((_DWORD *)v90 + 8);
                  __int16 v100 = v82;
                  unsigned int v102 = v85;
                  int v103 = v91;
                  char v101 = 0;
                  uint64_t v92 = objc_msgSend_cppClusterStateCache(*(void **)(a1 + 48), v87, v88);
                  sub_244B96164((uint64_t)&v100, v92, v6, (uint64_t)buf);
                  uint64_t v93 = (void *)v90[1];
                  if (v93)
                  {
                    do
                    {
                      double v94 = v93;
                      uint64_t v93 = (void *)*v93;
                    }
                    while (v93);
                  }
                  else
                  {
                    do
                    {
                      double v94 = (void *)v90[2];
                      BOOL v40 = *v94 == (void)v90;
                      uint64_t v90 = v94;
                    }
                    while (!v40);
                  }
                  uint64_t v90 = v94;
                }
                while (v94 != v89);
                unsigned int v16 = 0;
                unsigned int v15 = 0;
                int v18 = 0;
                int v19 = 386;
              }
            }
          }
          if (v16)
          {
            uint64_t v95 = *(void *)(a1 + 64);
            *(void *)&long long v97 = __PAIR64__(v15, v16);
            *((void *)&v97 + 1) = v17;
            int v98 = v19;
            int v99 = v18;
            uint64_t v96 = sub_244B26908((uint64_t)MTRError, &v97);
            (*(void (**)(uint64_t, void, void *))(v95 + 16))(v95, 0, v96);

            goto LABEL_92;
          }
        }
        else
        {
          uint64_t v48 = objc_msgSend_cppClusterStateCache(*(void **)(a1 + 48), v4, v5);
          unsigned int v51 = objc_msgSend_unsignedShortValue(*(void **)(a1 + 32), v49, v50);
          uint64_t v54 = *(void *)(v48 + 24);
          if (!v54) {
            goto LABEL_56;
          }
          uint64_t v55 = v48 + 24;
          do
          {
            unsigned int v56 = *(unsigned __int16 *)(v54 + 32);
            BOOL v57 = v56 >= v51;
            if (v56 >= v51) {
              long long v58 = (uint64_t *)v54;
            }
            else {
              long long v58 = (uint64_t *)(v54 + 8);
            }
            if (v57) {
              uint64_t v55 = v54;
            }
            uint64_t v54 = *v58;
          }
          while (*v58);
          if (v55 == v48 + 24 || (unsigned int v59 = *(unsigned __int16 *)(v55 + 32), v59 > v51))
          {
LABEL_56:
            unsigned int v59 = *(unsigned __int16 *)(v48 + 56);
            uint64_t v55 = v48 + 24;
          }
          if (v59 == v51)
          {
            uint64_t v60 = *(void **)(v55 + 40);
            long long v61 = (void *)(v55 + 48);
            if (v60 != (void *)(v55 + 48))
            {
              do
              {
                unsigned int v62 = *((_DWORD *)v60 + 8);
                uint64_t v63 = objc_msgSend_cppClusterStateCache(*(void **)(a1 + 48), v52, v53);
                unsigned int v66 = objc_msgSend_unsignedShortValue(*(void **)(a1 + 32), v64, v65);
                __int16 v67 = v66;
                long long v68 = (void *)sub_244CAC8CC(v63, v66, v62, (uint64_t)&v104);
                if (!v104)
                {
                  BOOL v69 = v68 + 1;
                  long long v70 = (void *)*v68;
                  if ((void *)*v68 != v68 + 1)
                  {
                    do
                    {
                      int v71 = *((_DWORD *)v70 + 8);
                      __int16 v100 = v67;
                      unsigned int v102 = v62;
                      int v103 = v71;
                      char v101 = 0;
                      long long v72 = *(void **)(a1 + 56);
                      if (!v72 || (int v73 = objc_msgSend_unsignedLongValue(v72, v52, v53), v103 == v73))
                      {
                        uint64_t v74 = objc_msgSend_cppClusterStateCache(*(void **)(a1 + 48), v52, v53);
                        sub_244B96164((uint64_t)&v100, v74, v6, (uint64_t)buf);
                      }
                      char v75 = (void *)v70[1];
                      if (v75)
                      {
                        do
                        {
                          long long v76 = v75;
                          char v75 = (void *)*v75;
                        }
                        while (v75);
                      }
                      else
                      {
                        do
                        {
                          long long v76 = (void *)v70[2];
                          BOOL v40 = *v76 == (void)v70;
                          long long v70 = v76;
                        }
                        while (!v40);
                      }
                      long long v70 = v76;
                    }
                    while (v76 != v69);
                  }
                }
                uint64_t v77 = (void *)v60[1];
                if (v77)
                {
                  do
                  {
                    long long v78 = v77;
                    uint64_t v77 = (void *)*v77;
                  }
                  while (v77);
                }
                else
                {
                  do
                  {
                    long long v78 = (void *)v60[2];
                    BOOL v40 = *v78 == (void)v60;
                    uint64_t v60 = v78;
                  }
                  while (!v40);
                }
                uint64_t v60 = v78;
              }
              while (v78 != v61);
            }
          }
        }
      }
      else
      {
        uint64_t v23 = objc_msgSend_cppClusterStateCache(*(void **)(a1 + 48), v4, v5);
        unsigned int v26 = objc_msgSend_unsignedLongValue(*(void **)(a1 + 40), v24, v25);
        uint64_t v29 = *(void **)(v23 + 16);
        long long v30 = (void *)(v23 + 24);
        if (v29 != v30)
        {
          unsigned int v31 = v26;
          do
          {
            long long v32 = (void *)v29[5];
            if (v32 != v29 + 6)
            {
              do
              {
                if (*((_DWORD *)v32 + 8) == v31)
                {
                  long long v33 = (void *)v32[5];
                  if (v33 != v32 + 6)
                  {
                    do
                    {
                      int v34 = *((_DWORD *)v33 + 8);
                      LOWORD(v104) = *((_WORD *)v29 + 16);
                      unsigned int v105 = v31;
                      LODWORD(v106) = v34;
                      BYTE2(v104) = 0;
                      int v35 = *(void **)(a1 + 56);
                      if (!v35 || (int v36 = objc_msgSend_unsignedLongValue(v35, v27, v28), v106 == v36))
                      {
                        uint64_t v37 = objc_msgSend_cppClusterStateCache(*(void **)(a1 + 48), v27, v28);
                        sub_244B96164((uint64_t)&v104, v37, v6, (uint64_t)buf);
                      }
                      uint64_t v38 = (void *)v33[1];
                      if (v38)
                      {
                        do
                        {
                          uint64_t v39 = v38;
                          uint64_t v38 = (void *)*v38;
                        }
                        while (v38);
                      }
                      else
                      {
                        do
                        {
                          uint64_t v39 = (void *)v33[2];
                          BOOL v40 = *v39 == (void)v33;
                          long long v33 = v39;
                        }
                        while (!v40);
                      }
                      long long v33 = v39;
                    }
                    while (v39 != v32 + 6);
                  }
                }
                uint64_t v41 = (void *)v32[1];
                if (v41)
                {
                  do
                  {
                    uint64_t v42 = v41;
                    uint64_t v41 = (void *)*v41;
                  }
                  while (v41);
                }
                else
                {
                  do
                  {
                    uint64_t v42 = (void *)v32[2];
                    BOOL v40 = *v42 == (void)v32;
                    long long v32 = v42;
                  }
                  while (!v40);
                }
                long long v32 = v42;
              }
              while (v42 != v29 + 6);
            }
            id v43 = (void *)v29[1];
            if (v43)
            {
              do
              {
                uint64_t v44 = v43;
                id v43 = (void *)*v43;
              }
              while (v43);
            }
            else
            {
              do
              {
                uint64_t v44 = (void *)v29[2];
                BOOL v40 = *v44 == (void)v29;
                uint64_t v29 = v44;
              }
              while (!v40);
            }
            uint64_t v29 = v44;
          }
          while (v44 != v30);
        }
      }
      (*(void (**)(void))(*(void *)(a1 + 64) + 16))();
      goto LABEL_92;
    }
    long long v20 = sub_244CC8484(0, "NotSpecified");
    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_2446BD000, v20, OS_LOG_TYPE_ERROR, "Error: No attribute cache available to read from", buf, 2u);
    }

    if (sub_244CC4E58(1u)) {
      sub_244CC4DE0(0, 1);
    }
    uint64_t v22 = *(void *)(a1 + 64);
    objc_msgSend_errorWithDomain_code_userInfo_(MEMORY[0x263F087E8], v21, @"MTRErrorDomain", 1, 0);
    id v6 = (id)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, void, id))(v22 + 16))(v22, 0, v6);
  }
  else
  {
    uint64_t v45 = sub_244CC8484(0, "NotSpecified");
    if (os_log_type_enabled(v45, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_2446BD000, v45, OS_LOG_TYPE_ERROR, "Error: currently read from attribute cache does not support wildcards for both endpoint and cluster", buf, 2u);
    }

    if (sub_244CC4E58(1u)) {
      sub_244CC4DE0(0, 1);
    }
    uint64_t v47 = *(void *)(a1 + 64);
    objc_msgSend_errorWithDomain_code_userInfo_(MEMORY[0x263F087E8], v46, @"MTRErrorDomain", 4, 0);
    id v6 = (id)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, void, id))(v47 + 16))(v47, 0, v6);
  }
LABEL_92:
}

void sub_244B9611C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B96164(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  v50[2] = *MEMORY[0x263EF8340];
  id v7 = a3;
  sub_244CB3988((uint64_t)v40);
  long long v38 = 0uLL;
  uint64_t v39 = 0;
  sub_244CAF3C0(a2, (unsigned __int16 *)a1, (uint64_t)v40, &v38);
  if (v38)
  {
    id v8 = sub_244CC8484(0, "NotSpecified");
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      *(_OWORD *)uint64_t v41 = v38;
      uint64_t v42 = v39;
      uint64_t v9 = sub_244CB7B34((const char **)v41, 1);
      *(_DWORD *)buf = 136315138;
      uint64_t v46 = v9;
      _os_log_impl(&dword_2446BD000, v8, OS_LOG_TYPE_ERROR, "Error: Failed to read from attribute cache: %s", buf, 0xCu);
    }

    if (sub_244CC4E58(1u))
    {
      *(_OWORD *)uint64_t v41 = v38;
      uint64_t v42 = v39;
      sub_244CB7B34((const char **)v41, 1);
      sub_244CC4DE0(0, 1);
    }
    v43[0] = @"attributePath";
    id v10 = [MTRAttributePath alloc];
    *(void *)uint64_t v41 = *(void *)a1;
    *(_DWORD *)&v41[8] = *(_DWORD *)(a1 + 8);
    *(_WORD *)&v41[12] = 0;
    v41[14] = 0;
    LOBYTE(v42) = 0;
    id v12 = objc_msgSend_initWithPath_(v10, v11, (uint64_t)v41);
    v44[0] = v12;
    v43[1] = @"error";
    long long v34 = v38;
    uint64_t v35 = v39;
    uint64_t v13 = sub_244B26908((uint64_t)MTRError, &v34);
    v44[1] = v13;
    unsigned int v15 = objc_msgSend_dictionaryWithObjects_forKeys_count_(NSDictionary, v14, (uint64_t)v44, v43, 2);
    objc_msgSend_addObject_(v7, v16, (uint64_t)v15);

    *(_OWORD *)a4 = v38;
    *(void *)(a4 + 16) = v39;
  }
  else
  {
    uint64_t v17 = sub_2447D5B3C((uint64_t)v40, 0);
    if (v17)
    {
      v49[0] = @"attributePath";
      int v18 = [MTRAttributePath alloc];
      *(void *)uint64_t v41 = *(void *)a1;
      *(_DWORD *)&v41[8] = *(_DWORD *)(a1 + 8);
      *(_WORD *)&v41[12] = 0;
      v41[14] = 0;
      LOBYTE(v42) = 0;
      long long v20 = objc_msgSend_initWithPath_(v18, v19, (uint64_t)v41);
      v49[1] = @"data";
      v50[0] = v20;
      v50[1] = v17;
      uint64_t v22 = objc_msgSend_dictionaryWithObjects_forKeys_count_(NSDictionary, v21, (uint64_t)v50, v49, 2);
      objc_msgSend_addObject_(v7, v23, (uint64_t)v22);

      int v24 = 0;
      int v25 = 73;
    }
    else
    {
      unsigned int v26 = sub_244CC8484(0, "NotSpecified");
      if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)uint64_t v41 = 0;
        _os_log_impl(&dword_2446BD000, v26, OS_LOG_TYPE_ERROR, "Error: Cached value could not be converted to generic NSObject", v41, 2u);
      }

      if (sub_244CC4E58(1u)) {
        sub_244CC4DE0(0, 1);
      }
      v47[0] = @"attributePath";
      int v27 = [MTRAttributePath alloc];
      *(void *)uint64_t v41 = *(void *)a1;
      *(_DWORD *)&v41[8] = *(_DWORD *)(a1 + 8);
      *(_WORD *)&v41[12] = 0;
      v41[14] = 0;
      LOBYTE(v42) = 0;
      uint64_t v29 = objc_msgSend_initWithPath_(v27, v28, (uint64_t)v41);
      v48[0] = v29;
      v47[1] = @"error";
      LODWORD(v36) = 176;
      *((void *)&v36 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/MTRClusterStateCacheContainer.mm";
      int v37 = 78;
      long long v30 = sub_244B26908((uint64_t)MTRError, &v36);
      v48[1] = v30;
      long long v32 = objc_msgSend_dictionaryWithObjects_forKeys_count_(NSDictionary, v31, (uint64_t)v48, v47, 2);
      objc_msgSend_addObject_(v7, v33, (uint64_t)v32);

      int v25 = 80;
      int v24 = 176;
    }
    *(_DWORD *)a4 = v24;
    *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "MTRClusterStateCacheContainer.mm";
    *(_DWORD *)(a4 + 16) = v25;
  }
}

void sub_244B96598(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B96644(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B96894(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29,void *a30)
{
  _Unwind_Resume(a1);
}

void sub_244B968F0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  block[0] = MEMORY[0x263EF8330];
  block[1] = 3221225472;
  block[2] = sub_244B969C4;
  block[3] = &unk_265194FE8;
  id v7 = *(NSObject **)(a1 + 32);
  id v8 = *(id *)(a1 + 40);
  id v13 = v6;
  id v14 = v8;
  id v12 = v5;
  id v9 = v6;
  id v10 = v5;
  dispatch_async(v7, block);
}

uint64_t sub_244B969C4(void *a1)
{
  return (*(uint64_t (**)(void, void, void))(a1[6] + 16))(a1[6], a1[4], a1[5]);
}

void sub_244B969DC(uint64_t a1, const char *a2, uint64_t a3)
{
  if (objc_msgSend_cppClusterStateCache(*(void **)(a1 + 32), a2, a3))
  {
    __int16 v28 = *(_WORD *)(a1 + 56);
    uint64_t v30 = *(void *)(a1 + 48);
    char v29 = 0;
    id v4 = objc_alloc_init(MEMORY[0x263EFF980]);
    long long v26 = 0uLL;
    uint64_t v27 = 0;
    uint64_t v7 = objc_msgSend_cppClusterStateCache(*(void **)(a1 + 32), v5, v6);
    sub_244B96164((uint64_t)&v28, v7, v4, (uint64_t)&v26);
    if (v26)
    {
      uint64_t v9 = *(void *)(a1 + 40);
      long long v24 = v26;
      uint64_t v25 = v27;
      id v10 = sub_244B26908((uint64_t)MTRError, &v24);
      (*(void (**)(uint64_t, void, void *))(v9 + 16))(v9, 0, v10);
    }
    else
    {
      id v10 = objc_msgSend_objectAtIndexedSubscript_(v4, v8, 0);
      id v12 = [MTRAttributeReport alloc];
      id v23 = 0;
      id v14 = objc_msgSend_initWithResponseValue_error_(v12, v13, (uint64_t)v10, &v23);
      id v17 = v23;
      uint64_t v18 = *(void *)(a1 + 40);
      if (v17)
      {
        (*(void (**)(uint64_t, void, id))(v18 + 16))(v18, 0, v17);
      }
      else
      {
        int v19 = objc_msgSend_value(v14, v15, v16);
        uint64_t v22 = objc_msgSend_error(v14, v20, v21);
        (*(void (**)(uint64_t, void *, void *))(v18 + 16))(v18, v19, v22);
      }
    }
  }
  else
  {
    uint64_t v11 = *(void *)(a1 + 40);
    LODWORD(v31) = 216;
    *((void *)&v31 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/MTRClusterStateCacheContainer.mm";
    int v32 = 223;
    sub_244B26908((uint64_t)MTRError, &v31);
    id v4 = (id)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, void, id))(v11 + 16))(v11, 0, v4);
  }
}

void sub_244B96BC4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B96C14(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244B96DA0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B96E70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unsigned int v15 = v14;

  _Unwind_Resume(a1);
}

void sub_244B96F58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B970E4(_Unwind_Exception *a1)
{
  id v4 = v3;

  _Unwind_Resume(a1);
}

void sub_244B97188(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  a9.super_class = (Class)MTRDeviceConnectivityMonitor;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_244B978F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  os_unfair_lock_unlock((os_unfair_lock_t)&unk_268EBE958);
  _Unwind_Resume(a1);
}

void sub_244B97994(uint64_t a1, void *a2)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  uint64_t v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained && nw_path_get_status(v3) == nw_path_status_satisfied)
  {
    id v5 = sub_244CC8484(0, "NotSpecified");
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      id v9 = WeakRetained;
      _os_log_impl(&dword_2446BD000, v5, OS_LOG_TYPE_DEFAULT, "%@ path is satisfied", buf, 0xCu);
    }

    if (sub_244CC4E58(2u)) {
      sub_244CC4DE0(0, 2);
    }
    os_unfair_lock_lock((os_unfair_lock_t)&unk_268EBE958);
    objc_msgSend__callHandler(WeakRetained, v6, v7);
    os_unfair_lock_unlock((os_unfair_lock_t)&unk_268EBE958);
  }
}

void sub_244B97AC0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock((os_unfair_lock_t)&unk_268EBE958);

  _Unwind_Resume(a1);
}

void sub_244B97AF4(uint64_t a1, int a2)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained && a2)
  {
    os_unfair_lock_lock((os_unfair_lock_t)&unk_268EBE958);
    id v4 = sub_244CC8484(0, "NotSpecified");
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      id v9 = WeakRetained;
      _os_log_impl(&dword_2446BD000, v4, OS_LOG_TYPE_DEFAULT, "%@ connectivity now viable", buf, 0xCu);
    }

    if (sub_244CC4E58(2u))
    {
      id v7 = WeakRetained;
      sub_244CC4DE0(0, 2);
    }
    objc_msgSend__callHandler(WeakRetained, v5, v6, v7);
    os_unfair_lock_unlock((os_unfair_lock_t)&unk_268EBE958);
  }
}

void sub_244B97C00(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock((os_unfair_lock_t)&unk_268EBE958);

  _Unwind_Resume(a1);
}

void sub_244B980F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B9813C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return MEMORY[0x270F9A6D0](a10, sel_handleResolvedHostname_port_error_, a6);
}

void sub_244B982EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B98318()
{
  os_unfair_lock_lock((os_unfair_lock_t)&unk_268EBE958);
  if (qword_268EBE970) {
    BOOL v0 = 1;
  }
  else {
    BOOL v0 = qword_268EBE960 == 0;
  }
  if (!v0)
  {
    int v1 = sub_244CC8484(0, "NotSpecified");
    if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t v3 = 0;
      _os_log_impl(&dword_2446BD000, v1, OS_LOG_TYPE_DEFAULT, "MTRDeviceConnectivityMonitor: Closing shared resolver connection", v3, 2u);
    }

    if (sub_244CC4E58(2u)) {
      sub_244CC4DE0(0, 2);
    }
    DNSServiceRefDeallocate((DNSServiceRef)qword_268EBE960);
    qword_268EBE960 = 0;
    uint64_t v2 = (void *)qword_268EBE968;
    qword_268EBE968 = 0;
  }
  os_unfair_lock_unlock((os_unfair_lock_t)&unk_268EBE958);
}

void sub_244B983FC(_Unwind_Exception *a1)
{
}

void sub_244B9860C(_Unwind_Exception *a1)
{
}

void sub_244B98630(uint64_t a1)
{
  os_unfair_lock_lock((os_unfair_lock_t)&unk_268EBE958);
  objc_msgSend__stopMonitoring(*(void **)(a1 + 32), v2, v3);

  os_unfair_lock_unlock((os_unfair_lock_t)&unk_268EBE958);
}

void sub_244B9867C(_Unwind_Exception *a1)
{
}

void sub_244B98790(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  uint64_t v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)MTRDevice_XPC;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_244B989E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, void *a20,void *a21,void *a22,void *a23)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B98BCC(uint64_t a1, void *a2)
{
  return objc_msgSend_device_stateChanged_(a2, (const char *)a2, *(void *)(a1 + 32), *(void *)(a1 + 40));
}

void sub_244B98D38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B98D64(uint64_t a1, void *a2)
{
  return objc_msgSend_device_receivedAttributeReport_(a2, (const char *)a2, *(void *)(a1 + 32), *(void *)(a1 + 40));
}

void sub_244B98ED0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B98EFC(uint64_t a1, void *a2)
{
  return objc_msgSend_device_receivedEventReport_(a2, (const char *)a2, *(void *)(a1 + 32), *(void *)(a1 + 40));
}

void sub_244B99048(uint64_t a1, void *a2)
{
  id v4 = a2;
  if (objc_opt_respondsToSelector()) {
    objc_msgSend_deviceBecameActive_(v4, v3, *(void *)(a1 + 32));
  }
}

void sub_244B990A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244B9912C(uint64_t a1, void *a2)
{
  id v4 = a2;
  if (objc_opt_respondsToSelector()) {
    objc_msgSend_deviceCachePrimed_(v4, v3, *(void *)(a1 + 32));
  }
}

void sub_244B9918C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244B99210(uint64_t a1, void *a2)
{
  id v4 = a2;
  if (objc_opt_respondsToSelector()) {
    objc_msgSend_deviceConfigurationChanged_(v4, v3, *(void *)(a1 + 32));
  }
}

void sub_244B99270(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244B99378(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B994FC(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, long long buf)
{
  uint64_t v25 = v21;

  if (a2 == 1)
  {
    id v27 = objc_begin_catch(a1);
    __int16 v28 = sub_244CC8484(0, "NotSpecified");
    if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR))
    {
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v27;
      _os_log_impl(&dword_2446BD000, v28, OS_LOG_TYPE_ERROR, "Exception sending XPC messsage: %@", (uint8_t *)&buf, 0xCu);
    }

    if (sub_244CC4E58(1u)) {
      sub_244CC4DE0(0, 1);
    }
    *(void *)(a16 + 24) = 0;

    objc_end_catch();
    JUMPOUT(0x244B994ACLL);
  }

  _Block_object_dispose(&a15, 8);
  _Unwind_Resume(a1);
}

void sub_244B9963C(uint64_t a1, void *a2)
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  id v2 = a2;
  uint64_t v3 = sub_244CC8484(0, "NotSpecified");
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 138412290;
    id v5 = v2;
    _os_log_impl(&dword_2446BD000, v3, OS_LOG_TYPE_ERROR, "Error: %@", buf, 0xCu);
  }

  if (sub_244CC4E58(1u)) {
    sub_244CC4DE0(0, 1);
  }
}

void sub_244B99718(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B99734(uint64_t result, uint64_t a2)
{
  *(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = a2;
  return result;
}

void sub_244B998B4(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, long long buf)
{
  uint64_t v25 = v21;

  if (a2 == 1)
  {
    id v27 = objc_begin_catch(a1);
    __int16 v28 = sub_244CC8484(0, "NotSpecified");
    if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR))
    {
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v27;
      _os_log_impl(&dword_2446BD000, v28, OS_LOG_TYPE_ERROR, "Exception sending XPC messsage: %@", (uint8_t *)&buf, 0xCu);
    }

    if (sub_244CC4E58(1u)) {
      sub_244CC4DE0(0, 1);
    }
    *(unsigned char *)(a16 + 24) = 0;

    objc_end_catch();
    JUMPOUT(0x244B9985CLL);
  }

  _Block_object_dispose(&a15, 8);
  _Unwind_Resume(a1);
}

void sub_244B999F4(uint64_t a1, void *a2)
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  id v2 = a2;
  uint64_t v3 = sub_244CC8484(0, "NotSpecified");
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 138412290;
    id v5 = v2;
    _os_log_impl(&dword_2446BD000, v3, OS_LOG_TYPE_ERROR, "Error: %@", buf, 0xCu);
  }

  if (sub_244CC4E58(1u)) {
    sub_244CC4DE0(0, 1);
  }
}

void sub_244B99AD0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244B99AEC(uint64_t result, char a2)
{
  *(unsigned char *)(*(void *)(*(void *)(result + 32) + 8) + 24) = a2;
  return result;
}

void sub_244B99CA8(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  id v27 = v22;

  if (a2 == 1)
  {
    id v29 = objc_begin_catch(a1);
    uint64_t v30 = sub_244CC8484(0, "NotSpecified");
    if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)(v25 - 80) = 138412290;
      *(void *)(v25 - 76) = v29;
      _os_log_impl(&dword_2446BD000, v30, OS_LOG_TYPE_ERROR, "Exception sending XPC messsage: %@", (uint8_t *)(v25 - 80), 0xCu);
    }

    if (sub_244CC4E58(1u)) {
      sub_244CC4DE0(0, 1);
    }
    long long v31 = *(void **)(a16 + 40);
    *(void *)(a16 + 40) = 0;

    objc_end_catch();
    JUMPOUT(0x244B99C38);
  }

  _Block_object_dispose(&a15, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_244B99DF8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_244B99E08(uint64_t a1)
{
}

void sub_244B99E10(uint64_t a1, void *a2)
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  id v2 = a2;
  uint64_t v3 = sub_244CC8484(0, "NotSpecified");
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 138412290;
    id v5 = v2;
    _os_log_impl(&dword_2446BD000, v3, OS_LOG_TYPE_ERROR, "Error: %@", buf, 0xCu);
  }

  if (sub_244CC4E58(1u)) {
    sub_244CC4DE0(0, 1);
  }
}

void sub_244B99EEC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B99F08(uint64_t a1, void *a2)
{
}

void sub_244B9A0C4(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  id v27 = v22;

  if (a2 == 1)
  {
    id v29 = objc_begin_catch(a1);
    uint64_t v30 = sub_244CC8484(0, "NotSpecified");
    if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)(v25 - 80) = 138412290;
      *(void *)(v25 - 76) = v29;
      _os_log_impl(&dword_2446BD000, v30, OS_LOG_TYPE_ERROR, "Exception sending XPC messsage: %@", (uint8_t *)(v25 - 80), 0xCu);
    }

    if (sub_244CC4E58(1u)) {
      sub_244CC4DE0(0, 1);
    }
    long long v31 = *(void **)(a16 + 40);
    *(void *)(a16 + 40) = 0;

    objc_end_catch();
    JUMPOUT(0x244B9A054);
  }

  _Block_object_dispose(&a15, 8);
  _Unwind_Resume(a1);
}

void sub_244B9A214(uint64_t a1, void *a2)
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  id v2 = a2;
  uint64_t v3 = sub_244CC8484(0, "NotSpecified");
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 138412290;
    id v5 = v2;
    _os_log_impl(&dword_2446BD000, v3, OS_LOG_TYPE_ERROR, "Error: %@", buf, 0xCu);
  }

  if (sub_244CC4E58(1u)) {
    sub_244CC4DE0(0, 1);
  }
}

void sub_244B9A2F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B9A30C(uint64_t a1, void *a2)
{
}

void sub_244B9A528(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id a22,long long buf)
{
  if (a2 == 1)
  {
    id v33 = objc_begin_catch(a1);
    long long v34 = sub_244CC8484(0, "NotSpecified");
    if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR))
    {
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v33;
      _os_log_impl(&dword_2446BD000, v34, OS_LOG_TYPE_ERROR, "Exception sending XPC messsage: %@", (uint8_t *)&buf, 0xCu);
    }

    if (sub_244CC4E58(1u)) {
      sub_244CC4DE0(0, 1);
    }
    uint64_t v35 = *(void **)(a18 + 40);
    *(void *)(a18 + 40) = 0;

    objc_end_catch();
    JUMPOUT(0x244B9A4A0);
  }

  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

void sub_244B9A688(uint64_t a1, void *a2)
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  id v2 = a2;
  uint64_t v3 = sub_244CC8484(0, "NotSpecified");
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 138412290;
    id v5 = v2;
    _os_log_impl(&dword_2446BD000, v3, OS_LOG_TYPE_ERROR, "Error: %@", buf, 0xCu);
  }

  if (sub_244CC4E58(1u)) {
    sub_244CC4DE0(0, 1);
  }
}

void sub_244B9A764(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B9A780(uint64_t a1, void *a2)
{
}

void sub_244B9A900(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *exc_bufa, void *a14, long long buf)
{
  if (a2 == 1)
  {
    id v25 = objc_begin_catch(a1);
    long long v26 = sub_244CC8484(0, "NotSpecified");
    if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR))
    {
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v25;
      _os_log_impl(&dword_2446BD000, v26, OS_LOG_TYPE_ERROR, "Exception sending XPC messsage: %@", (uint8_t *)&buf, 0xCu);
    }

    if (sub_244CC4E58(1u)) {
      sub_244CC4DE0(0, 1);
    }

    objc_end_catch();
    JUMPOUT(0x244B9A8A4);
  }

  _Unwind_Resume(a1);
}

void sub_244B9AA34(uint64_t a1, void *a2)
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  id v2 = a2;
  uint64_t v3 = sub_244CC8484(0, "NotSpecified");
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 138412290;
    id v5 = v2;
    _os_log_impl(&dword_2446BD000, v3, OS_LOG_TYPE_ERROR, "Error: %@", buf, 0xCu);
  }

  if (sub_244CC4E58(1u)) {
    sub_244CC4DE0(0, 1);
  }
}

void sub_244B9AB10(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B9AD08(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20,long long buf)
{
  id v29 = v23;

  if (a2 == 1)
  {
    id v31 = objc_begin_catch(a1);
    int v32 = sub_244CC8484(0, "NotSpecified");
    if (os_log_type_enabled(v32, OS_LOG_TYPE_ERROR))
    {
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v31;
      _os_log_impl(&dword_2446BD000, v32, OS_LOG_TYPE_ERROR, "Exception sending XPC messsage: %@", (uint8_t *)&buf, 0xCu);
    }

    if (sub_244CC4E58(1u)) {
      sub_244CC4DE0(0, 1);
    }
    uint64_t v35 = objc_msgSend_array(*(void **)(v27 + 2240), v33, v34);
    long long v36 = *(void **)(a16 + 40);
    *(void *)(a16 + 40) = v35;

    objc_end_catch();
    JUMPOUT(0x244B9AC90);
  }

  _Block_object_dispose(&a15, 8);
  _Unwind_Resume(a1);
}

void sub_244B9AE70(uint64_t a1, void *a2)
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  id v2 = a2;
  uint64_t v3 = sub_244CC8484(0, "NotSpecified");
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 138412290;
    id v5 = v2;
    _os_log_impl(&dword_2446BD000, v3, OS_LOG_TYPE_ERROR, "Error: %@", buf, 0xCu);
  }

  if (sub_244CC4E58(1u)) {
    sub_244CC4DE0(0, 1);
  }
}

void sub_244B9AF4C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B9AF68(uint64_t a1, void *a2)
{
}

void sub_244B9B188(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *exc_buf, void *a16, void *a17, void *a18, void *a19, void *a20,void *a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26)
{
  if (a2 == 1)
  {
    id v37 = objc_begin_catch(a1);
    long long v38 = sub_244CC8484(0, "NotSpecified");
    if (os_log_type_enabled(v38, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)(v36 - 112) = 138412290;
      *(void *)(v36 - 108) = v37;
      _os_log_impl(&dword_2446BD000, v38, OS_LOG_TYPE_ERROR, "Exception sending XPC message: %@", (uint8_t *)(v36 - 112), 0xCu);
    }

    if (sub_244CC4E58(1u)) {
      sub_244CC4DE0(0, 1);
    }
    BOOL v40 = objc_msgSend_errorWithDomain_code_userInfo_(MEMORY[0x263F087E8], v39, @"MTRErrorDomain", 1, 0);
    (*(void (**)(uint64_t, void, void *))(v26 + 16))(v26, 0, v40);

    objc_end_catch();
    JUMPOUT(0x244B9B10CLL);
  }

  _Unwind_Resume(a1);
}

void sub_244B9B338(uint64_t a1, void *a2)
{
  uint64_t v11 = *MEMORY[0x263EF8340];
  id v3 = a2;
  id v4 = sub_244CC8484(0, "NotSpecified");
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 138412290;
    id v10 = v3;
    _os_log_impl(&dword_2446BD000, v4, OS_LOG_TYPE_ERROR, "Invoke error: %@", buf, 0xCu);
  }

  if (sub_244CC4E58(1u))
  {
    id v8 = v3;
    sub_244CC4DE0(0, 1);
  }
  uint64_t v6 = *(void *)(a1 + 32);
  id v7 = objc_msgSend_errorWithDomain_code_userInfo_(MEMORY[0x263F087E8], v5, @"MTRErrorDomain", 1, 0, v8);
  (*(void (**)(uint64_t, void, void *))(v6 + 16))(v6, 0, v7);
}

void sub_244B9B468(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B9B688(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t block, uint64_t a13, void (*a14)(uint64_t a1, const char *a2), void *a15, id a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,void *a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,void *a28)
{
  if (a2 == 1)
  {
    id v40 = objc_begin_catch(a1);
    uint64_t v41 = sub_244CC8484(0, "NotSpecified");
    if (os_log_type_enabled(v41, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)(v37 - 128) = 138412290;
      *(void *)(v37 - 124) = v40;
      _os_log_impl(&dword_2446BD000, v41, OS_LOG_TYPE_ERROR, "Exception sending XPC messsage: %@", (uint8_t *)(v37 - 128), 0xCu);
    }

    if (sub_244CC4E58(1u)) {
      sub_244CC4DE0(0, 1);
    }
    block = MEMORY[0x263EF8330];
    a13 = v38;
    a14 = sub_244B9BBC0;
    a15 = &unk_265194E00;
    a16 = v31;
    dispatch_async(v29, &block);

    objc_end_catch();
    JUMPOUT(0x244B9B63CLL);
  }

  _Unwind_Resume(a1);
}

void sub_244B9B834(uint64_t a1, void *a2)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  id v3 = a2;
  id v4 = sub_244CC8484(0, "NotSpecified");
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 138412290;
    id v9 = v3;
    _os_log_impl(&dword_2446BD000, v4, OS_LOG_TYPE_ERROR, "Error: %@", buf, 0xCu);
  }

  if (sub_244CC4E58(1u)) {
    sub_244CC4DE0(0, 1);
  }
  block[0] = MEMORY[0x263EF8330];
  block[1] = 3221225472;
  block[2] = sub_244B9B99C;
  block[3] = &unk_265194E00;
  id v5 = *(NSObject **)(a1 + 32);
  id v7 = *(id *)(a1 + 40);
  dispatch_async(v5, block);
}

void sub_244B9B980(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244B9B99C(uint64_t a1, const char *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  objc_msgSend_errorWithDomain_code_userInfo_(MEMORY[0x263F087E8], a2, @"MTRErrorDomain", 1, 0);
  id v3 = (id)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, void))(v2 + 16))(v2, 0);
}

void sub_244B9BA18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244B9BA2C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  block[0] = MEMORY[0x263EF8330];
  block[1] = 3221225472;
  block[2] = sub_244B9BB00;
  block[3] = &unk_265194FE8;
  id v7 = *(NSObject **)(a1 + 32);
  id v8 = *(id *)(a1 + 40);
  id v13 = v6;
  id v14 = v8;
  id v12 = v5;
  id v9 = v6;
  id v10 = v5;
  dispatch_async(v7, block);
}

void sub_244B9BB00(uint64_t a1)
{
  (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
  if (*(void *)(a1 + 32))
  {
    objc_msgSend_defaultManager(MEMORY[0x263F08850], v2, v3);
    id v8 = (id)objc_claimAutoreleasedReturnValue();
    id v6 = objc_msgSend_path(*(void **)(a1 + 32), v4, v5);
    objc_msgSend_removeItemAtPath_error_(v8, v7, (uint64_t)v6, 0);
  }
}

void sub_244B9BBA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244B9BBC0(uint64_t a1, const char *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  objc_msgSend_errorWithDomain_code_userInfo_(MEMORY[0x263F087E8], a2, @"MTRErrorDomain", 1, 0);
  id v3 = (id)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, void))(v2 + 16))(v2, 0);
}

void sub_244B9BC3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

id sub_244B9BC80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v6 = *(_DWORD *)(a1 + 8);
  if (!HIWORD(v6) && (unsigned __int16)(v6 + 4096) <= 0xFFEu)
  {
    switch(v6)
    {
      case 0xFFF8u:
        sub_244CB3988((uint64_t)v31);
        unsigned __int8 v32 = 0;
        sub_244CB39B8((uint64_t)v31, 0, 0);
        sub_24484B03C((uint64_t)v31, a2, (uint64_t)&v28);
        *(_OWORD *)a3 = v28;
        *(void *)(a3 + 16) = v29;
        if (*(_DWORD *)a3) {
          goto LABEL_47;
        }
        id v7 = objc_opt_new();
        unsigned __int8 v34 = v32;
        if (v32) {
          char v35 = v33;
        }
        sub_2446D1930((uint64_t)&v28, (uint64_t)v31, &v34);
        while (sub_244798ADC(&v28))
        {
          id v9 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v8, v28);
          objc_msgSend_addObject_(v7, v10, (uint64_t)v9);
        }
        goto LABEL_39;
      case 0xFFF9u:
        sub_244CB3988((uint64_t)v31);
        unsigned __int8 v32 = 0;
        sub_244CB39B8((uint64_t)v31, 0, 0);
        sub_24484B03C((uint64_t)v31, a2, (uint64_t)&v28);
        *(_OWORD *)a3 = v28;
        *(void *)(a3 + 16) = v29;
        if (*(_DWORD *)a3) {
          goto LABEL_47;
        }
        id v7 = objc_opt_new();
        unsigned __int8 v34 = v32;
        if (v32) {
          char v35 = v33;
        }
        sub_2446D1930((uint64_t)&v28, (uint64_t)v31, &v34);
        while (sub_244798ADC(&v28))
        {
          id v14 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v13, v28);
          objc_msgSend_addObject_(v7, v15, (uint64_t)v14);
        }
        goto LABEL_39;
      case 0xFFFAu:
        sub_244CB3988((uint64_t)v31);
        unsigned __int8 v32 = 0;
        sub_244CB39B8((uint64_t)v31, 0, 0);
        sub_24484B03C((uint64_t)v31, a2, (uint64_t)&v28);
        *(_OWORD *)a3 = v28;
        *(void *)(a3 + 16) = v29;
        if (*(_DWORD *)a3) {
          goto LABEL_47;
        }
        id v7 = objc_opt_new();
        unsigned __int8 v34 = v32;
        if (v32) {
          char v35 = v33;
        }
        sub_2446D1930((uint64_t)&v28, (uint64_t)v31, &v34);
        while (sub_244798ADC(&v28))
        {
          id v17 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v16, v28);
          objc_msgSend_addObject_(v7, v18, (uint64_t)v17);
        }
        goto LABEL_39;
      case 0xFFFBu:
        sub_244CB3988((uint64_t)v31);
        unsigned __int8 v32 = 0;
        sub_244CB39B8((uint64_t)v31, 0, 0);
        sub_24484B03C((uint64_t)v31, a2, (uint64_t)&v28);
        *(_OWORD *)a3 = v28;
        *(void *)(a3 + 16) = v29;
        if (*(_DWORD *)a3) {
          goto LABEL_47;
        }
        id v7 = objc_opt_new();
        unsigned __int8 v34 = v32;
        if (v32) {
          char v35 = v33;
        }
        sub_2446D1930((uint64_t)&v28, (uint64_t)v31, &v34);
        while (sub_244798ADC(&v28))
        {
          long long v20 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v19, v28);
          objc_msgSend_addObject_(v7, v21, (uint64_t)v20);
        }
LABEL_39:
        if (DWORD2(v28) && DWORD2(v28) != 33)
        {
          uint64_t v22 = v29;
          int v23 = HIDWORD(v28);
          *(_DWORD *)a3 = DWORD2(v28);
          *(_DWORD *)(a3 + 4) = v23;
          *(void *)(a3 + 8) = v22;
          *(void *)(a3 + 16) = v30;

LABEL_47:
          id v7 = 0;
        }
        goto LABEL_56;
      case 0xFFFCu:
        *(_DWORD *)id v31 = 0;
        sub_244CB3FB0(a2, v31, (uint64_t)&v28);
        *(_OWORD *)a3 = v28;
        *(void *)(a3 + 16) = v29;
        if (*(_DWORD *)a3) {
          goto LABEL_47;
        }
        uint64_t v12 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v24, *(unsigned int *)v31);
        goto LABEL_55;
      case 0xFFFDu:
        v31[0] = 0;
        sub_244CB3F40(a2, v31, (uint64_t)&v28);
        *(_OWORD *)a3 = v28;
        *(void *)(a3 + 16) = v29;
        if (*(_DWORD *)a3) {
          goto LABEL_47;
        }
        uint64_t v12 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v26, v31[0]);
        goto LABEL_55;
      default:
        id v7 = 0;
        *(_DWORD *)a3 = 181;
        *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/zap-generated/MTRAttributeTLVValueDecoder.mm";
        int v25 = 170;
        goto LABEL_45;
    }
  }
  int v11 = *(_DWORD *)(a1 + 4);
  if (v11 <= 256)
  {
    switch(v11)
    {
      case 3:
        uint64_t v12 = sub_244B9D224(v6, a2, a3);
        goto LABEL_55;
      case 4:
        uint64_t v12 = sub_244B9D31C(v6, a2, a3);
        goto LABEL_55;
      case 5:
      case 7:
      case 9:
      case 10:
      case 11:
      case 12:
      case 13:
      case 14:
      case 15:
      case 16:
      case 17:
      case 18:
      case 19:
      case 20:
      case 21:
      case 22:
      case 23:
      case 24:
      case 25:
      case 26:
      case 27:
      case 32:
      case 33:
      case 34:
      case 35:
      case 36:
      case 38:
      case 39:
      case 58:
      case 61:
      case 66:
      case 67:
      case 68:
      case 75:
      case 76:
      case 77:
      case 78:
      case 79:
      case 88:
      case 90:
      case 99:
      case 100:
      case 101:
      case 102:
      case 103:
      case 104:
      case 105:
      case 106:
      case 107:
      case 108:
      case 109:
      case 110:
      case 111:
      case 112:
      case 115:
      case 116:
      case 117:
      case 118:
      case 119:
      case 120:
      case 121:
      case 122:
      case 123:
      case 124:
      case 125:
      case 126:
      case 127:
      case 130:
      case 131:
      case 132:
      case 133:
      case 134:
      case 135:
      case 136:
      case 137:
      case 138:
      case 139:
      case 140:
      case 141:
      case 142:
      case 143:
      case 146:
      case 147:
      case 149:
      case 154:
        goto LABEL_88;
      case 6:
        uint64_t v12 = sub_244B9D3C8(v6, a2, a3);
        goto LABEL_55;
      case 8:
        uint64_t v12 = sub_244B9D544(v6, a2, a3);
        goto LABEL_55;
      case 28:
        id v7 = 0;
        *(_DWORD *)a3 = 181;
        *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/zap-generated/MTRAttributeTLVValueDecoder.mm";
        int v25 = 547;
        goto LABEL_45;
      case 29:
        uint64_t v12 = sub_244B9D788(v6, a2, a3);
        goto LABEL_55;
      case 30:
        uint64_t v12 = sub_244B9DE70(v6, a2, a3);
        goto LABEL_55;
      case 31:
        uint64_t v12 = sub_244B9E170(v6, a2, a3);
        goto LABEL_55;
      case 37:
        uint64_t v12 = sub_244B9ED2C(v6, a2, a3);
        goto LABEL_55;
      case 40:
        uint64_t v12 = sub_244B9F364(v6, a2, a3);
        goto LABEL_55;
      case 41:
        id v7 = 0;
        *(_DWORD *)a3 = 181;
        *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/zap-generated/MTRAttributeTLVValueDecoder.mm";
        int v25 = 1489;
        goto LABEL_45;
      case 42:
        uint64_t v12 = sub_244B9FBB8(v6, a2, a3);
        goto LABEL_55;
      case 43:
        uint64_t v12 = sub_244B9FED4(v6, a2, a3);
        goto LABEL_55;
      case 44:
        uint64_t v12 = sub_244BA0118(v6, a2, a3);
        goto LABEL_55;
      case 45:
        uint64_t v12 = sub_244BA0310(v6, a2, a3);
        goto LABEL_55;
      case 46:
        uint64_t v12 = sub_244BA03BC(v6, a2, a3);
        goto LABEL_55;
      case 47:
        uint64_t v12 = sub_244BA0544(v6, a2, a3);
        goto LABEL_55;
      case 48:
        uint64_t v12 = sub_244BA0D9C(v6, a2, a3);
        goto LABEL_55;
      case 49:
        uint64_t v12 = sub_244BA107C(v6, a2, a3);
        goto LABEL_55;
      case 50:
        id v7 = 0;
        *(_DWORD *)a3 = 181;
        *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/zap-generated/MTRAttributeTLVValueDecoder.mm";
        int v25 = 2554;
        goto LABEL_45;
      case 51:
        uint64_t v12 = sub_244BA1658(v6, a2, a3);
        goto LABEL_55;
      case 52:
        uint64_t v12 = sub_244BA1F14(v6, a2, a3);
        goto LABEL_55;
      case 53:
        uint64_t v12 = sub_244BA22DC(v6, a2, a3);
        goto LABEL_55;
      case 54:
        uint64_t v12 = sub_244BA3184(v6, a2, a3);
        goto LABEL_55;
      case 55:
        uint64_t v12 = sub_244BA3450(v6, a2, a3);
        goto LABEL_55;
      case 56:
        uint64_t v12 = sub_244BA35EC(v6, a2, a3);
        goto LABEL_55;
      case 57:
        uint64_t v12 = sub_244BA3CDC(v6, a2, a3);
        goto LABEL_55;
      case 59:
        uint64_t v12 = sub_244BA4420(v6, a2, a3);
        goto LABEL_55;
      case 60:
        uint64_t v12 = sub_244BA44DC(v6, a2, a3);
        goto LABEL_55;
      case 62:
        uint64_t v12 = sub_244BA4628(v6, a2, a3);
        goto LABEL_55;
      case 63:
        uint64_t v12 = sub_244BA4C30(v6, a2, a3);
        goto LABEL_55;
      case 64:
        uint64_t v12 = sub_244BA5184(v6, a2, a3);
        goto LABEL_55;
      case 65:
        uint64_t v12 = sub_244BA53FC(v6, a2, a3);
        goto LABEL_55;
      case 69:
        uint64_t v12 = sub_244BA5674(v6, a2, a3);
        goto LABEL_55;
      case 70:
        uint64_t v12 = sub_244BA5720(v6, a2, a3);
        goto LABEL_55;
      case 71:
        uint64_t v12 = sub_244BA5B20(v6, a2, a3);
        goto LABEL_55;
      case 72:
        uint64_t v12 = sub_244BA5C20(v6, a2, a3);
        goto LABEL_55;
      case 73:
        uint64_t v12 = sub_244BA6294(v6, a2, a3);
        goto LABEL_55;
      case 74:
        uint64_t v12 = sub_244BA66DC(v6, a2, a3);
        goto LABEL_55;
      case 80:
        uint64_t v12 = sub_244BA68C0(v6, a2, a3);
        goto LABEL_55;
      case 81:
        uint64_t v12 = sub_244BA6DD0(v6, a2, a3);
        goto LABEL_55;
      case 82:
        uint64_t v12 = sub_244BA7218(v6, a2, a3);
        goto LABEL_55;
      case 83:
        uint64_t v12 = sub_244BA7660(v6, a2, a3);
        goto LABEL_55;
      case 84:
        uint64_t v12 = sub_244BA79DC(v6, a2, a3);
        goto LABEL_55;
      case 85:
        uint64_t v12 = sub_244BA7DB8(v6, a2, a3);
        goto LABEL_55;
      case 86:
        uint64_t v12 = sub_244BA8194(v6, a2, a3);
        goto LABEL_55;
      case 87:
        uint64_t v12 = sub_244BA8424(v6, a2, a3);
        goto LABEL_55;
      case 89:
        uint64_t v12 = sub_244BA84E0(v6, a2, a3);
        goto LABEL_55;
      case 91:
        uint64_t v12 = sub_244BA8928(v6, a2, a3);
        goto LABEL_55;
      case 92:
        uint64_t v12 = sub_244BA89D4(v6, a2, a3);
        goto LABEL_55;
      case 93:
        uint64_t v12 = sub_244BA8BDC(v6, a2, a3);
        goto LABEL_55;
      case 94:
        uint64_t v12 = sub_244BA8CC0(v6, a2, a3);
        goto LABEL_55;
      case 95:
        uint64_t v12 = sub_244BA909C(v6, a2, a3);
        goto LABEL_55;
      case 96:
        uint64_t v12 = sub_244BA9340(v6, a2, a3);
        goto LABEL_55;
      case 97:
        uint64_t v12 = sub_244BA99B4(v6, a2, a3);
        goto LABEL_55;
      case 98:
        uint64_t v12 = sub_244BAA028(v6, a2, a3);
        goto LABEL_55;
      case 113:
        uint64_t v12 = sub_244BAA374(v6, a2, a3);
        goto LABEL_55;
      case 114:
        uint64_t v12 = sub_244BAA708(v6, a2, a3);
        goto LABEL_55;
      case 128:
        uint64_t v12 = sub_244BAAA9C(v6, a2, a3);
        goto LABEL_55;
      case 129:
        uint64_t v12 = sub_244BAABEC(v6, a2, a3);
        goto LABEL_55;
      case 144:
        uint64_t v12 = sub_244BAAE2C(v6, a2, a3);
        goto LABEL_55;
      case 145:
        uint64_t v12 = sub_244BABB90(v6, a2, a3);
        goto LABEL_55;
      case 148:
        uint64_t v12 = sub_244BACB04(v6, a2, a3);
        goto LABEL_55;
      case 150:
        uint64_t v12 = sub_244BACCAC(v6, a2, a3);
        goto LABEL_55;
      case 151:
        uint64_t v12 = sub_244BAE228(v6, a2, a3);
        goto LABEL_55;
      case 152:
        uint64_t v12 = sub_244BAE810(v6, a2, a3);
        goto LABEL_55;
      case 153:
        uint64_t v12 = sub_244BAF678(v6, a2, a3);
        goto LABEL_55;
      case 155:
        uint64_t v12 = sub_244BAFAB8(v6, a2, a3);
        goto LABEL_55;
      case 156:
        uint64_t v12 = sub_244BB0004(v6, a2, a3);
        goto LABEL_55;
      case 157:
        uint64_t v12 = sub_244BB0264(v6, a2, a3);
        goto LABEL_55;
      case 158:
        uint64_t v12 = sub_244BB06AC(v6, a2, a3);
        goto LABEL_55;
      case 159:
        uint64_t v12 = sub_244BB0AF4(v6, a2, a3);
        goto LABEL_55;
      default:
        if (v11 == -918523)
        {
          uint64_t v12 = sub_244BBCCE8(v6, a2, a3);
        }
        else
        {
          if (v11 != -918496) {
            goto LABEL_88;
          }
          uint64_t v12 = sub_244BBFAE8(v6, a2, a3);
        }
        break;
    }
    goto LABEL_55;
  }
  if (v11 <= 1104)
  {
    if (v11 > 768)
    {
      switch(v11)
      {
        case 1024:
          uint64_t v12 = sub_244BB42A8(v6, a2, a3);
          goto LABEL_55;
        case 1025:
        case 1031:
        case 1032:
        case 1033:
        case 1034:
        case 1035:
        case 1038:
        case 1039:
        case 1040:
        case 1041:
        case 1042:
        case 1044:
          goto LABEL_88;
        case 1026:
          uint64_t v12 = sub_244BB441C(v6, a2, a3);
          goto LABEL_55;
        case 1027:
          uint64_t v12 = sub_244BB4554(v6, a2, a3);
          goto LABEL_55;
        case 1028:
          uint64_t v12 = sub_244BB4714(v6, a2, a3);
          goto LABEL_55;
        case 1029:
          uint64_t v12 = sub_244BB4834(v6, a2, a3);
          goto LABEL_55;
        case 1030:
          uint64_t v12 = sub_244BB4954(v6, a2, a3);
          goto LABEL_55;
        case 1036:
          uint64_t v12 = sub_244BB4C40(v6, a2, a3);
          goto LABEL_55;
        case 1037:
          uint64_t v12 = sub_244BB4E38(v6, a2, a3);
          goto LABEL_55;
        case 1043:
          uint64_t v12 = sub_244BB5030(v6, a2, a3);
          goto LABEL_55;
        case 1045:
          uint64_t v12 = sub_244BB5228(v6, a2, a3);
          goto LABEL_55;
        default:
          switch(v11)
          {
            case 1066:
              uint64_t v12 = sub_244BB5420(v6, a2, a3);
              goto LABEL_55;
            case 1067:
              uint64_t v12 = sub_244BB5618(v6, a2, a3);
              goto LABEL_55;
            case 1068:
              uint64_t v12 = sub_244BB5810(v6, a2, a3);
              goto LABEL_55;
            case 1069:
              uint64_t v12 = sub_244BB5A08(v6, a2, a3);
              goto LABEL_55;
            case 1070:
              uint64_t v12 = sub_244BB5C00(v6, a2, a3);
              goto LABEL_55;
            case 1071:
              uint64_t v12 = sub_244BB5DF8(v6, a2, a3);
              goto LABEL_55;
            default:
              if (v11 != 769) {
                goto LABEL_88;
              }
              uint64_t v12 = sub_244BB3F98(v6, a2, a3);
              break;
          }
          goto LABEL_55;
      }
    }
    if (v11 > 511)
    {
      switch(v11)
      {
        case 512:
          uint64_t v12 = sub_244BB24FC(v6, a2, a3);
          goto LABEL_55;
        case 513:
          uint64_t v12 = sub_244BB279C(v6, a2, a3);
          goto LABEL_55;
        case 514:
          uint64_t v12 = sub_244BB3914(v6, a2, a3);
          goto LABEL_55;
        case 515:
          goto LABEL_88;
        case 516:
          uint64_t v12 = sub_244BB3AC8(v6, a2, a3);
          goto LABEL_55;
        default:
          if (v11 != 768) {
            goto LABEL_88;
          }
          uint64_t v12 = sub_244BB3BB4(v6, a2, a3);
          break;
      }
      goto LABEL_55;
    }
    if (v11 == 257)
    {
      uint64_t v12 = sub_244BB0F3C(v6, a2, a3);
      goto LABEL_55;
    }
    if (v11 == 258)
    {
      uint64_t v12 = sub_244BB1770(v6, a2, a3);
      goto LABEL_55;
    }
    if (v11 != 336) {
      goto LABEL_88;
    }
    uint64_t v12 = sub_244BB19E4(v6, a2, a3);
    goto LABEL_55;
  }
  if (v11 > 1359)
  {
    if (v11 <= 1871)
    {
      switch(v11)
      {
        case 1360:
          uint64_t v12 = sub_244BB9920(v6, a2, a3);
          goto LABEL_55;
        case 1361:
          uint64_t v12 = sub_244BB9E34(v6, a2, a3);
          goto LABEL_55;
        case 1363:
          uint64_t v12 = sub_244BBBB44(v6, a2, a3);
          goto LABEL_55;
        case 1364:
          uint64_t v12 = sub_244BBBE1C(v6, a2, a3);
          goto LABEL_55;
        case 1366:
          uint64_t v12 = sub_244BBC0F4(v6, a2, a3);
          goto LABEL_55;
        default:
          goto LABEL_88;
      }
    }
    if (v11 > 323615743)
    {
      if (v11 == 323615747)
      {
        uint64_t v12 = sub_244B9D178(v6, a2, a3);
        goto LABEL_55;
      }
      if (v11 == 323615744)
      {
        uint64_t v12 = sub_244B9D0CC(v6, a2, a3);
        goto LABEL_55;
      }
      goto LABEL_88;
    }
    if (v11 == 1872)
    {
      uint64_t v12 = sub_244BBC3D4(v6, a2, a3);
      goto LABEL_55;
    }
    if (v11 != 1873) {
      goto LABEL_88;
    }
    uint64_t v12 = sub_244BBCC3C(v6, a2, a3);
LABEL_55:
    id v7 = (void *)v12;
    goto LABEL_56;
  }
  if (v11 > 1282)
  {
    switch(v11)
    {
      case 1283:
        uint64_t v12 = sub_244BB66DC(v6, a2, a3);
        goto LABEL_55;
      case 1284:
        uint64_t v12 = sub_244BB6850(v6, a2, a3);
        goto LABEL_55;
      case 1285:
        uint64_t v12 = sub_244BB71DC(v6, a2, a3);
        goto LABEL_55;
      case 1286:
        uint64_t v12 = sub_244BB7470(v6, a2, a3);
        goto LABEL_55;
      case 1287:
        uint64_t v12 = sub_244BB82C4(v6, a2, a3);
        goto LABEL_55;
      case 1288:
        id v7 = 0;
        *(_DWORD *)a3 = 181;
        *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/zap-generated/MTRAttributeTLVValueDecoder.mm";
        int v25 = 16575;
        goto LABEL_45;
      case 1289:
        id v7 = 0;
        *(_DWORD *)a3 = 181;
        *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/zap-generated/MTRAttributeTLVValueDecoder.mm";
        int v25 = 16587;
        goto LABEL_45;
      case 1290:
        uint64_t v12 = sub_244BB85E8(v6, a2, a3);
        goto LABEL_55;
      case 1291:
        uint64_t v12 = sub_244BB87F4(v6, a2, a3);
        goto LABEL_55;
      case 1292:
        uint64_t v12 = sub_244BB8AB4(v6, a2, a3);
        goto LABEL_55;
      case 1293:
        uint64_t v12 = sub_244BB8E40(v6, a2, a3);
        goto LABEL_55;
      case 1294:
        id v7 = 0;
        *(_DWORD *)a3 = 181;
        *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/zap-generated/MTRAttributeTLVValueDecoder.mm";
        int v25 = 16913;
        goto LABEL_45;
      case 1295:
        uint64_t v12 = sub_244BB9344(v6, a2, a3);
        goto LABEL_55;
      case 1296:
        id v7 = 0;
        *(_DWORD *)a3 = 181;
        *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/zap-generated/MTRAttributeTLVValueDecoder.mm";
        int v25 = 17097;
        goto LABEL_45;
      default:
        goto LABEL_88;
    }
  }
  switch(v11)
  {
    case 1105:
      uint64_t v12 = sub_244BB5FF0(v6, a2, a3);
      goto LABEL_55;
    case 1106:
      uint64_t v12 = sub_244BB6108(v6, a2, a3);
      goto LABEL_55;
    case 1107:
      uint64_t v12 = sub_244BB6390(v6, a2, a3);
      goto LABEL_55;
  }
LABEL_88:
  id v7 = 0;
  *(_DWORD *)a3 = 181;
  *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/za"
                        "p-generated/MTRAttributeTLVValueDecoder.mm";
  int v25 = 20346;
LABEL_45:
  *(_DWORD *)(a3 + 16) = v25;
LABEL_56:

  return v7;
}

void sub_244B9CD00(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244B9D0CC(int a1, uint64_t a2, uint64_t a3)
{
  if (a1)
  {
    id v4 = 0;
    *(_DWORD *)a3 = 181;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "zap-generated/MTRAttributeTLVValueDecoder.mm";
    *(_DWORD *)(a3 + 16) = 194;
  }
  else
  {
    unsigned __int8 v9 = 0;
    sub_244CB3C0C(a2, (char *)&v9, (uint64_t)&v7);
    *(_OWORD *)a3 = v7;
    *(void *)(a3 + 16) = v8;
    if (*(_DWORD *)a3)
    {
      id v4 = 0;
    }
    else
    {
      id v4 = objc_msgSend_numberWithBool_(NSNumber, v5, v9);
    }
  }

  return v4;
}

id sub_244B9D178(int a1, uint64_t a2, uint64_t a3)
{
  if (a1)
  {
    id v4 = 0;
    *(_DWORD *)a3 = 181;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "zap-generated/MTRAttributeTLVValueDecoder.mm";
    *(_DWORD *)(a3 + 16) = 217;
  }
  else
  {
    unsigned __int8 v9 = 0;
    sub_24484B184(a2, &v9, &v7);
    *(_OWORD *)a3 = v7;
    *(void *)(a3 + 16) = v8;
    if (*(_DWORD *)a3)
    {
      id v4 = 0;
    }
    else
    {
      id v4 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v5, v9);
    }
  }

  return v4;
}

id sub_244B9D224(int a1, uint64_t a2, uint64_t a3)
{
  if (a1 == 1)
  {
    LOBYTE(v10) = 0;
    sub_2447F0A54(a2, &v10, &v8);
    *(_OWORD *)a3 = v8;
    *(void *)(a3 + 16) = v9;
    if (*(_DWORD *)a3)
    {
LABEL_6:
      uint64_t v5 = 0;
      goto LABEL_9;
    }
    uint64_t v5 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v6, v10);
  }
  else
  {
    if (!a1)
    {
      unsigned __int16 v10 = 0;
      sub_244CB3F40(a2, &v10, (uint64_t)&v8);
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (!*(_DWORD *)a3)
      {
        uint64_t v5 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v4, v10);
        goto LABEL_9;
      }
      goto LABEL_6;
    }
    uint64_t v5 = 0;
    *(_DWORD *)a3 = 181;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "zap-generated/MTRAttributeTLVValueDecoder.mm";
    *(_DWORD *)(a3 + 16) = 251;
  }
LABEL_9:

  return v5;
}

id sub_244B9D31C(int a1, uint64_t a2, uint64_t a3)
{
  if (a1)
  {
    id v4 = 0;
    *(_DWORD *)a3 = 181;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "zap-generated/MTRAttributeTLVValueDecoder.mm";
    *(_DWORD *)(a3 + 16) = 274;
  }
  else
  {
    unsigned __int8 v9 = 0;
    sub_24484B184(a2, &v9, &v7);
    *(_OWORD *)a3 = v7;
    *(void *)(a3 + 16) = v8;
    if (*(_DWORD *)a3)
    {
      id v4 = 0;
    }
    else
    {
      id v4 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v5, v9);
    }
  }

  return v4;
}

id sub_244B9D3C8(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 16384:
      goto LABEL_5;
    case 16385:
    case 16386:
      unsigned __int16 v10 = 0;
      sub_244CB3F40(a2, &v10, (uint64_t)&v11);
      *(_OWORD *)a3 = v11;
      *(void *)(a3 + 16) = v12;
      if (*(_DWORD *)a3) {
        goto LABEL_12;
      }
      uint64_t v5 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v4, v10);
      break;
    case 16387:
      unsigned __int16 v10 = 0;
      sub_2447F21B8(a2, (unsigned __int8 *)&v10, (uint64_t)&v11);
      *(_OWORD *)a3 = v11;
      *(void *)(a3 + 16) = v12;
      if (*(_DWORD *)a3) {
        BOOL v8 = 1;
      }
      else {
        BOOL v8 = HIBYTE(v10) == 0;
      }
      if (v8) {
        goto LABEL_12;
      }
      uint64_t v5 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v7, v10);
      break;
    default:
      if (a1)
      {
        uint64_t v5 = 0;
        *(_DWORD *)a3 = 181;
        *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/zap-generated/MTRAttributeTLVValueDecoder.mm";
        *(_DWORD *)(a3 + 16) = 345;
      }
      else
      {
LABEL_5:
        LOBYTE(v10) = 0;
        sub_244CB3C0C(a2, (char *)&v10, (uint64_t)&v11);
        *(_OWORD *)a3 = v11;
        *(void *)(a3 + 16) = v12;
        if (*(_DWORD *)a3)
        {
LABEL_12:
          uint64_t v5 = 0;
        }
        else
        {
          uint64_t v5 = objc_msgSend_numberWithBool_(NSNumber, v6, v10);
        }
      }
      break;
  }

  return v5;
}

id sub_244B9D544(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
    case 17:
    case 20:
      unsigned __int16 v10 = 0;
      sub_2447F15BC(a2, (unsigned __int8 *)&v10, (uint64_t)&v12);
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        BOOL v6 = 1;
      }
      else {
        BOOL v6 = HIBYTE(v10) == 0;
      }
      if (v6) {
        goto LABEL_22;
      }
      goto LABEL_23;
    case 1:
    case 4:
    case 5:
    case 6:
    case 16:
      unsigned __int16 v10 = 0;
      sub_244CB3F40(a2, &v10, (uint64_t)&v12);
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (!*(_DWORD *)a3) {
        goto LABEL_14;
      }
      goto LABEL_22;
    case 2:
    case 3:
      LOBYTE(v10) = 0;
      sub_244CB3E8C(a2, &v10, (uint64_t)&v12);
      goto LABEL_21;
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
      goto LABEL_19;
    case 15:
      LOBYTE(v10) = 0;
      sub_24484B184(a2, &v10, &v12);
LABEL_21:
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        goto LABEL_22;
      }
      goto LABEL_23;
    case 18:
    case 19:
      LOBYTE(v10) = 0;
      char v11 = 0;
      sub_2447EF9E0(a2, (__int16 *)&v10, (uint64_t)&v12);
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        BOOL v7 = 1;
      }
      else {
        BOOL v7 = v11 == 0;
      }
      if (v7)
      {
LABEL_22:
        BOOL v8 = 0;
      }
      else
      {
LABEL_14:
        BOOL v8 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v4, v10);
      }
      break;
    default:
      if (a1 == 0x4000)
      {
        unsigned __int16 v10 = 0;
        sub_2447F15BC(a2, (unsigned __int8 *)&v10, (uint64_t)&v12);
        BOOL v8 = 0;
        *(_OWORD *)a3 = v12;
        *(void *)(a3 + 16) = v13;
        if (!*(_DWORD *)a3 && HIBYTE(v10))
        {
LABEL_23:
          BOOL v8 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v5, v10);
        }
      }
      else
      {
LABEL_19:
        BOOL v8 = 0;
        *(_DWORD *)a3 = 181;
        *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/zap-generated/MTRAttributeTLVValueDecoder.mm";
        *(_DWORD *)(a3 + 16) = 535;
      }
      break;
  }

  return v8;
}

id sub_244B9D788(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
      sub_244CB3988((uint64_t)v59);
      unsigned __int8 v60 = 0;
      sub_244CB39B8((uint64_t)v59, 0, 0);
      sub_24484B03C((uint64_t)v59, a2, (uint64_t)&v52);
      *(_OWORD *)a3 = v52;
      *(void *)(a3 + 16) = v53;
      if (*(_DWORD *)a3) {
        goto LABEL_46;
      }
      uint64_t v5 = objc_opt_new();
      unsigned __int8 v62 = v60;
      if (v60) {
        char v63 = v61;
      }
      sub_244BBFBE4((uint64_t)&v52, (uint64_t)v59, &v62);
      while (sub_244BBFC5C((uint64_t)&v52))
      {
        BOOL v6 = objc_opt_new();
        BOOL v8 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v7, v52);
        objc_msgSend_setDeviceType_(v6, v9, (uint64_t)v8);

        char v11 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v10, WORD2(v52));
        objc_msgSend_setRevision_(v6, v12, (uint64_t)v11);

        objc_msgSend_addObject_(v5, v13, (uint64_t)v6);
      }
      goto LABEL_41;
    case 1:
      sub_244CB3988((uint64_t)v59);
      unsigned __int8 v60 = 0;
      sub_244CB39B8((uint64_t)v59, 0, 0);
      sub_24484B03C((uint64_t)v59, a2, (uint64_t)&v52);
      *(_OWORD *)a3 = v52;
      *(void *)(a3 + 16) = v53;
      if (*(_DWORD *)a3) {
        goto LABEL_46;
      }
      uint64_t v5 = objc_opt_new();
      unsigned __int8 v62 = v60;
      if (v60) {
        char v63 = v61;
      }
      sub_2446D1930((uint64_t)&v52, (uint64_t)v59, &v62);
      while (sub_244798ADC(&v52))
      {
        uint64_t v44 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v43, v52);
        objc_msgSend_addObject_(v5, v45, (uint64_t)v44);
      }
      goto LABEL_41;
    case 2:
      sub_244CB3988((uint64_t)v59);
      unsigned __int8 v60 = 0;
      sub_244CB39B8((uint64_t)v59, 0, 0);
      sub_24484B03C((uint64_t)v59, a2, (uint64_t)&v52);
      *(_OWORD *)a3 = v52;
      *(void *)(a3 + 16) = v53;
      if (*(_DWORD *)a3) {
        goto LABEL_46;
      }
      uint64_t v5 = objc_opt_new();
      unsigned __int8 v62 = v60;
      if (v60) {
        char v63 = v61;
      }
      sub_2446D1930((uint64_t)&v52, (uint64_t)v59, &v62);
      while (sub_244798ADC(&v52))
      {
        uint64_t v38 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v37, v52);
        objc_msgSend_addObject_(v5, v39, (uint64_t)v38);
      }
      goto LABEL_41;
    case 3:
      sub_244CB3988((uint64_t)v59);
      unsigned __int8 v60 = 0;
      sub_244CB39B8((uint64_t)v59, 0, 0);
      sub_24484B03C((uint64_t)v59, a2, (uint64_t)&v52);
      *(_OWORD *)a3 = v52;
      *(void *)(a3 + 16) = v53;
      if (*(_DWORD *)a3) {
        goto LABEL_46;
      }
      uint64_t v5 = objc_opt_new();
      unsigned __int8 v62 = v60;
      if (v60) {
        char v63 = v61;
      }
      sub_2446D1930((uint64_t)&v52, (uint64_t)v59, &v62);
      while (sub_244794970((uint64_t)&v52))
      {
        uint64_t v41 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v40, (unsigned __int16)v52);
        objc_msgSend_addObject_(v5, v42, (uint64_t)v41);
      }
LABEL_41:
      if (!DWORD2(v52) || DWORD2(v52) == 33) {
        goto LABEL_48;
      }
      uint64_t v46 = v53;
      int v47 = HIDWORD(v52);
      *(_DWORD *)a3 = DWORD2(v52);
      *(_DWORD *)(a3 + 4) = v47;
      *(void *)(a3 + 8) = v46;
      uint64_t v48 = v54;
      goto LABEL_44;
    case 4:
      sub_244CB3988((uint64_t)v59);
      unsigned __int8 v60 = 0;
      sub_244CB39B8((uint64_t)v59, 0, 0);
      sub_24484B03C((uint64_t)v59, a2, (uint64_t)&v52);
      *(_OWORD *)a3 = v52;
      *(void *)(a3 + 16) = v53;
      if (*(_DWORD *)a3) {
        goto LABEL_46;
      }
      uint64_t v5 = objc_opt_new();
      unsigned __int8 v62 = v60;
      if (v60) {
        char v63 = v61;
      }
      sub_244BBFD08((uint64_t)&v52, (uint64_t)v59, &v62);
      break;
    default:
      uint64_t v5 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 712;
      goto LABEL_48;
  }
  while (sub_244BBFD88((uint64_t)&v52))
  {
    id v14 = objc_opt_new();
    uint64_t v16 = v14;
    if (BYTE2(v52))
    {
      id v17 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v15, (unsigned __int16)v52);
      objc_msgSend_setMfgCode_(v16, v18, (uint64_t)v17);
    }
    else
    {
      objc_msgSend_setMfgCode_(v14, v15, 0);
    }
    long long v20 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v19, BYTE4(v52));
    objc_msgSend_setNamespaceID_(v16, v21, (uint64_t)v20);

    int v23 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v22, BYTE5(v52));
    objc_msgSend_setTag_(v16, v24, (uint64_t)v23);

    if (BYTE8(v52) && sub_2446D18A4((unsigned char *)&v52 + 8)[16])
    {
      uint64_t v26 = sub_2446D18A4((unsigned char *)&v52 + 8);
      if (!v26[16]) {
        sub_24479484C();
      }
      uint64_t v27 = *(void *)v26;
      uint64_t v28 = *((void *)v26 + 1);
      id v29 = [NSString alloc];
      id v31 = objc_msgSend_initWithBytes_length_encoding_(v29, v30, v27, v28, 4);
      objc_msgSend_setLabel_(v16, v32, (uint64_t)v31);

      char v35 = objc_msgSend_label(v16, v33, v34);

      if (!v35)
      {
        *(_OWORD *)a3 = xmmword_265199F60;
        *(void *)(a3 + 16) = 688;

        goto LABEL_45;
      }
    }
    else
    {
      objc_msgSend_setLabel_(v16, v25, 0);
    }
    objc_msgSend_addObject_(v5, v36, (uint64_t)v16);
  }
  if (!v55 || v55 == 33) {
    goto LABEL_48;
  }
  uint64_t v50 = v57;
  int v51 = v56;
  *(_DWORD *)a3 = v55;
  *(_DWORD *)(a3 + 4) = v51;
  *(void *)(a3 + 8) = v50;
  uint64_t v48 = v58;
LABEL_44:
  *(void *)(a3 + 16) = v48;
LABEL_45:

LABEL_46:
  uint64_t v5 = 0;
LABEL_48:

  return v5;
}

void sub_244B9DDA4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244B9DE70(int a1, uint64_t a2, uint64_t a3)
{
  if (a1)
  {
    id v4 = 0;
    *(_DWORD *)a3 = 181;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "zap-generated/MTRAttributeTLVValueDecoder.mm";
    *(_DWORD *)(a3 + 16) = 771;
  }
  else
  {
    sub_244CB3988((uint64_t)v46);
    unsigned __int8 v47 = 0;
    sub_244CB39B8((uint64_t)v46, 0, 0);
    sub_24484B03C((uint64_t)v46, a2, (uint64_t)&v39);
    id v4 = 0;
    *(_OWORD *)a3 = v39;
    *(void *)(a3 + 16) = v40;
    if (!*(_DWORD *)a3)
    {
      id v4 = objc_opt_new();
      v49[0] = v47;
      if (v47) {
        v49[1] = v48;
      }
      sub_244BBFE80((uint64_t)&v39, (uint64_t)v46, v49);
      while (sub_244BBFE38((uint64_t)&v39))
      {
        BOOL v7 = objc_opt_new();
        unsigned __int8 v9 = v7;
        if ((_BYTE)v39)
        {
          unsigned __int16 v10 = NSNumber;
          char v11 = (uint64_t *)sub_2446F7170(&v39);
          uint64_t v13 = objc_msgSend_numberWithUnsignedLongLong_(v10, v12, *v11);
          objc_msgSend_setNode_(v9, v14, (uint64_t)v13);
        }
        else
        {
          objc_msgSend_setNode_(v7, v8, 0);
        }
        if ((_BYTE)v40)
        {
          uint64_t v16 = NSNumber;
          id v17 = sub_2446D1880(&v40);
          int v19 = objc_msgSend_numberWithUnsignedShort_(v16, v18, *(unsigned __int16 *)v17);
          objc_msgSend_setGroup_(v9, v20, (uint64_t)v19);
        }
        else
        {
          objc_msgSend_setGroup_(v9, v15, 0);
        }
        if (BYTE4(v40))
        {
          uint64_t v22 = NSNumber;
          int v23 = sub_2446D1880((unsigned char *)&v40 + 4);
          int v25 = objc_msgSend_numberWithUnsignedShort_(v22, v24, *(unsigned __int16 *)v23);
          objc_msgSend_setEndpoint_(v9, v26, (uint64_t)v25);
        }
        else
        {
          objc_msgSend_setEndpoint_(v9, v21, 0);
        }
        if (v41[0])
        {
          uint64_t v28 = NSNumber;
          id v29 = sub_2446F12CC(v41);
          id v31 = objc_msgSend_numberWithUnsignedInt_(v28, v30, *(unsigned int *)v29);
          objc_msgSend_setCluster_(v9, v32, (uint64_t)v31);
        }
        else
        {
          objc_msgSend_setCluster_(v9, v27, 0);
        }
        uint64_t v34 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v33, v41[8]);
        objc_msgSend_setFabricIndex_(v9, v35, (uint64_t)v34);

        objc_msgSend_addObject_(v4, v36, (uint64_t)v9);
      }
      if (v42 && v42 != 33)
      {
        uint64_t v37 = v44;
        int v38 = v43;
        *(_DWORD *)a3 = v42;
        *(_DWORD *)(a3 + 4) = v38;
        *(void *)(a3 + 8) = v37;
        *(void *)(a3 + 16) = v45;

        id v4 = 0;
      }
    }
  }

  return v4;
}

void sub_244B9E134(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244B9E170(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
      sub_244CB3988((uint64_t)v132);
      char v133 = 0;
      sub_244CB39B8(v7, 0, 0);
      sub_24484B03C((uint64_t)v132, a2, (uint64_t)&v111);
      *(_OWORD *)a3 = v111;
      *(void *)(a3 + 16) = v112;
      if (*(_DWORD *)a3) {
        goto LABEL_99;
      }
      BOOL v6 = objc_opt_new();
      LOBYTE(v102) = v133;
      if (v133) {
        BYTE1(v102) = v134;
      }
      sub_244BC0094((uint64_t)&v111, (uint64_t)v132, (unsigned __int8 *)&v102);
      while (2)
      {
        if (sub_244BBFFBC((uint64_t)&v111))
        {
          BOOL v8 = objc_opt_new();
          unsigned __int16 v10 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v9, v111);
          objc_msgSend_setPrivilege_(v8, v11, (uint64_t)v10);

          uint64_t v13 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v12, BYTE1(v111));
          objc_msgSend_setAuthMode_(v8, v14, (uint64_t)v13);

          if ((_BYTE)v119)
          {
            uint64_t v16 = objc_opt_new();
            if (!(_BYTE)v119) {
              sub_24479484C();
            }
            unsigned __int8 v135 = v117;
            if (v117) {
              char v136 = v118;
            }
            sub_2446D1930((uint64_t)&v102, (uint64_t)&v111 + 8, &v135);
            while (sub_244BC02A8((uint64_t)&v102))
            {
              uint64_t v18 = objc_msgSend_numberWithUnsignedLongLong_(NSNumber, v17, v102);
              objc_msgSend_addObject_(v16, v19, (uint64_t)v18);
            }
            if (v103 && v103 != 33)
            {
              uint64_t v96 = v105;
              unsigned int v97 = v104;
              *(_DWORD *)a3 = v103;
              *(_DWORD *)(a3 + 4) = v97;
              *(void *)(a3 + 8) = v96;
              uint64_t v98 = v106;
              goto LABEL_96;
            }
            objc_msgSend_setSubjects_(v8, v17, (uint64_t)v16);
          }
          else
          {
            objc_msgSend_setSubjects_(v8, v15, 0);
          }
          if (!v126)
          {
            objc_msgSend_setTargets_(v8, v20, 0);
            goto LABEL_40;
          }
          uint64_t v16 = objc_opt_new();
          if (!v126) {
            sub_24479484C();
          }
          unsigned __int8 v135 = v124;
          if (v124) {
            char v136 = v125;
          }
          sub_244BC0350((uint64_t)&v102, (uint64_t)&v121, &v135);
          while (sub_244BC03D8((uint64_t)&v102))
          {
            uint64_t v22 = objc_opt_new();
            long long v24 = v22;
            if (BYTE4(v102))
            {
              int v25 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v23, v102);
              objc_msgSend_setCluster_(v24, v26, (uint64_t)v25);
            }
            else
            {
              objc_msgSend_setCluster_(v22, v23, 0);
            }
            if (BYTE2(v103))
            {
              uint64_t v28 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v27, (unsigned __int16)v103);
              objc_msgSend_setEndpoint_(v24, v29, (uint64_t)v28);
            }
            else
            {
              objc_msgSend_setEndpoint_(v24, v27, 0);
            }
            if ((_BYTE)v105)
            {
              id v31 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v30, v104);
              objc_msgSend_setDeviceType_(v24, v32, (uint64_t)v31);
            }
            else
            {
              objc_msgSend_setDeviceType_(v24, v30, 0);
            }
            objc_msgSend_addObject_(v16, v33, (uint64_t)v24);
          }
          if (!v106 || v106 == 33)
          {
            objc_msgSend_setTargets_(v8, v21, (uint64_t)v16);

LABEL_40:
            char v35 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v34, v127);
            objc_msgSend_setFabricIndex_(v8, v36, (uint64_t)v35);

            objc_msgSend_addObject_(v6, v37, (uint64_t)v8);
            continue;
          }
          uint64_t v99 = v107;
          int v100 = HIDWORD(v106);
          *(_DWORD *)a3 = v106;
          *(_DWORD *)(a3 + 4) = v100;
          *(void *)(a3 + 8) = v99;
          uint64_t v98 = v108;
LABEL_96:
          *(void *)(a3 + 16) = v98;

          goto LABEL_97;
        }
        break;
      }
      if (v128 && v128 != 33)
      {
        uint64_t v94 = v130;
        int v95 = v129;
        *(_DWORD *)a3 = v128;
        *(_DWORD *)(a3 + 4) = v95;
        *(void *)(a3 + 8) = v94;
        uint64_t v87 = v131;
        goto LABEL_93;
      }
LABEL_100:
      return v6;
    case 1:
      sub_244CB3988((uint64_t)&v102);
      unsigned __int8 v109 = 0;
      sub_244CB39B8((uint64_t)&v102, 0, 0);
      sub_24484B03C((uint64_t)&v102, a2, (uint64_t)&v111);
      *(_OWORD *)a3 = v111;
      *(void *)(a3 + 16) = v112;
      if (*(_DWORD *)a3) {
        goto LABEL_99;
      }
      BOOL v6 = objc_opt_new();
      v132[0] = v109;
      if (v109) {
        v132[1] = v110;
      }
      sub_244BC0484((uint64_t)&v111, (uint64_t)&v102, v132);
      while (sub_244BC0004((uint64_t)&v111))
      {
        int v38 = objc_opt_new();
        uint64_t v40 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v39, v111, *((void *)&v111 + 1));
        objc_msgSend_setData_(v38, v41, (uint64_t)v40);

        int v43 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v42, v112);
        objc_msgSend_setFabricIndex_(v38, v44, (uint64_t)v43);

        objc_msgSend_addObject_(v6, v45, (uint64_t)v38);
      }
      if (!v113 || v113 == 33) {
        goto LABEL_100;
      }
      uint64_t v85 = v115;
      int v86 = v114;
      *(_DWORD *)a3 = v113;
      *(_DWORD *)(a3 + 4) = v86;
      *(void *)(a3 + 8) = v85;
      uint64_t v87 = v116;
      goto LABEL_93;
    case 2:
    case 3:
    case 4:
      LOWORD(v102) = 0;
      sub_244CB3F40(a2, &v102, (uint64_t)&v111);
      *(_OWORD *)a3 = v111;
      *(void *)(a3 + 16) = v112;
      if (*(_DWORD *)a3) {
        goto LABEL_99;
      }
      BOOL v6 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v5, (unsigned __int16)v102);
      goto LABEL_100;
    case 5:
      sub_244CB3988((uint64_t)v132);
      char v133 = 0;
      sub_244CB39B8(v46, 0, 0);
      sub_24484B03C((uint64_t)v132, a2, (uint64_t)&v111);
      *(_OWORD *)a3 = v111;
      *(void *)(a3 + 16) = v112;
      if (*(_DWORD *)a3) {
        goto LABEL_99;
      }
      BOOL v6 = objc_opt_new();
      LOBYTE(v102) = v133;
      if (v133) {
        BYTE1(v102) = v134;
      }
      sub_244BC05A8((uint64_t)&v111, (uint64_t)v132, (unsigned __int8 *)&v102);
      while (2)
      {
        if (sub_244BC0638((uint64_t)&v111))
        {
          BOOL v8 = objc_opt_new();
          unsigned __int8 v48 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v47, (unsigned __int16)v111);
          objc_msgSend_setEndpoint_(v8, v49, (uint64_t)v48);

          int v51 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v50, DWORD1(v111));
          objc_msgSend_setCluster_(v8, v52, (uint64_t)v51);

          uint64_t v53 = objc_opt_new();
          unsigned __int8 v135 = v117;
          if (v117) {
            char v136 = v118;
          }
          sub_244BC0750((uint64_t)&v102, (uint64_t)&v111 + 8, &v135);
          while (sub_244BC07CC((uint64_t)&v102))
          {
            int v55 = objc_opt_new();
            uint64_t v57 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v56, v102);
            objc_msgSend_setType_(v55, v58, (uint64_t)v57);

            if ((_BYTE)v103)
            {
              unsigned __int8 v60 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v59, HIDWORD(v102));
              objc_msgSend_setId_(v55, v61, (uint64_t)v60);
            }
            else
            {
              objc_msgSend_setId_(v55, v59, 0);
            }
            objc_msgSend_addObject_(v53, v62, (uint64_t)v55);
          }
          int v63 = v105;
          if (!v105 || v105 == 33)
          {
            objc_msgSend_setRestrictions_(v8, v54, (uint64_t)v53);

            objc_msgSend_addObject_(v6, v64, (uint64_t)v8);
            continue;
          }
          goto LABEL_89;
        }
        break;
      }
      if (v119 && v119 != 33)
      {
        uint64_t v88 = v121;
        int v89 = v120;
        *(_DWORD *)a3 = v119;
        *(_DWORD *)(a3 + 4) = v89;
        *(void *)(a3 + 8) = v88;
        uint64_t v87 = v122;
        goto LABEL_93;
      }
      goto LABEL_100;
    case 6:
      sub_244CB3988((uint64_t)v132);
      char v133 = 0;
      sub_244CB39B8(v65, 0, 0);
      sub_24484B03C((uint64_t)v132, a2, (uint64_t)&v111);
      *(_OWORD *)a3 = v111;
      *(void *)(a3 + 16) = v112;
      if (*(_DWORD *)a3) {
        goto LABEL_99;
      }
      BOOL v6 = objc_opt_new();
      LOBYTE(v102) = v133;
      if (v133) {
        BYTE1(v102) = v134;
      }
      sub_244BC0878((uint64_t)&v111, (uint64_t)v132, (unsigned __int8 *)&v102);
      while (2)
      {
        if (sub_244BC004C((uint64_t)&v111))
        {
          BOOL v8 = objc_opt_new();
          __int16 v67 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v66, (unsigned __int16)v111);
          objc_msgSend_setEndpoint_(v8, v68, (uint64_t)v67);

          long long v70 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v69, DWORD1(v111));
          objc_msgSend_setCluster_(v8, v71, (uint64_t)v70);

          uint64_t v53 = objc_opt_new();
          unsigned __int8 v135 = v117;
          if (v117) {
            char v136 = v118;
          }
          sub_244BC0750((uint64_t)&v102, (uint64_t)&v111 + 8, &v135);
          while (sub_244BC07CC((uint64_t)&v102))
          {
            int v73 = objc_opt_new();
            char v75 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v74, v102);
            objc_msgSend_setType_(v73, v76, (uint64_t)v75);

            if ((_BYTE)v103)
            {
              long long v78 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v77, HIDWORD(v102));
              objc_msgSend_setId_(v73, v79, (uint64_t)v78);
            }
            else
            {
              objc_msgSend_setId_(v73, v77, 0);
            }
            objc_msgSend_addObject_(v53, v80, (uint64_t)v73);
          }
          int v63 = v105;
          if (!v105 || v105 == 33)
          {
            objc_msgSend_setRestrictions_(v8, v72, (uint64_t)v53);

            unsigned int v82 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v81, v119);
            objc_msgSend_setFabricIndex_(v8, v83, (uint64_t)v82);

            objc_msgSend_addObject_(v6, v84, (uint64_t)v8);
            continue;
          }
LABEL_89:
          uint64_t v92 = v106;
          int v93 = HIDWORD(v105);
          *(_DWORD *)a3 = v63;
          *(_DWORD *)(a3 + 4) = v93;
          *(void *)(a3 + 8) = v92;
          *(void *)(a3 + 16) = v107;

LABEL_97:
        }
        else
        {
          if (!v121 || v121 == 33) {
            goto LABEL_100;
          }
          uint64_t v90 = v122;
          int v91 = HIDWORD(v121);
          *(_DWORD *)a3 = v121;
          *(_DWORD *)(a3 + 4) = v91;
          *(void *)(a3 + 8) = v90;
          uint64_t v87 = v123;
LABEL_93:
          *(void *)(a3 + 16) = v87;
        }
        break;
      }

LABEL_99:
      BOOL v6 = 0;
      goto LABEL_100;
    default:
      BOOL v6 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 1029;
      goto LABEL_100;
  }
}

void sub_244B9EBBC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244B9ED2C(int a1, uint64_t a2, uint64_t a3)
{
  if (a1 == 2)
  {
    long long v68 = 0uLL;
    sub_244CB41F0(a2, &v68, &v73);
    uint64_t v5 = 0;
    *(_OWORD *)a3 = v73;
    *(void *)(a3 + 16) = v74;
    if (!*(_DWORD *)a3)
    {
      uint64_t v33 = *((void *)&v68 + 1);
      uint64_t v32 = v68;
      id v34 = [NSString alloc];
      uint64_t v36 = objc_msgSend_initWithBytes_length_encoding_(v34, v35, v32, v33, 4);
      uint64_t v5 = v36;
      if (v36)
      {
        id v37 = v36;
      }
      else
      {
        *(_OWORD *)a3 = xmmword_265199FA8;
        *(void *)(a3 + 16) = 1133;
      }
    }
    goto LABEL_44;
  }
  if (a1 != 1)
  {
    if (a1)
    {
      uint64_t v5 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 1144;
      goto LABEL_44;
    }
    sub_244CB3988((uint64_t)&v68);
    unsigned __int8 v71 = 0;
    sub_244CB39B8((uint64_t)&v68, 0, 0);
    sub_24484B03C((uint64_t)&v68, a2, (uint64_t)&v73);
    *(_OWORD *)a3 = v73;
    *(void *)(a3 + 16) = v74;
    if (!*(_DWORD *)a3)
    {
      uint64_t v5 = objc_opt_new();
      v88[0] = v71;
      if (v71) {
        v88[1] = v72;
      }
      sub_244BC0A28((uint64_t)&v73, (uint64_t)&v68, v88);
      while (sub_244BC0AAC((uint64_t)&v73))
      {
        BOOL v6 = objc_opt_new();
        BOOL v8 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v7, (unsigned __int16)v73);
        objc_msgSend_setActionID_(v6, v9, (uint64_t)v8);

        uint64_t v10 = *((void *)&v73 + 1);
        uint64_t v11 = v74;
        id v12 = [NSString alloc];
        id v14 = objc_msgSend_initWithBytes_length_encoding_(v12, v13, v10, v11, 4);
        objc_msgSend_setName_(v6, v15, (uint64_t)v14);

        uint64_t v18 = objc_msgSend_name(v6, v16, v17);

        if (!v18)
        {
          *(_OWORD *)a3 = xmmword_265199F78;
          *(void *)(a3 + 16) = 1054;

          goto LABEL_42;
        }
        long long v20 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v19, v75);
        objc_msgSend_setType_(v6, v21, (uint64_t)v20);

        int v23 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v22, v76);
        objc_msgSend_setEndpointListID_(v6, v24, (uint64_t)v23);

        uint64_t v26 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v25, v77);
        objc_msgSend_setSupportedCommands_(v6, v27, (uint64_t)v26);

        id v29 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v28, v78);
        objc_msgSend_setState_(v6, v30, (uint64_t)v29);

        objc_msgSend_addObject_(v5, v31, (uint64_t)v6);
      }
      if (v79[0] && v79[0] != 33)
      {
        uint64_t v60 = v80;
        int v61 = v79[1];
        *(_DWORD *)a3 = v79[0];
        *(_DWORD *)(a3 + 4) = v61;
        *(void *)(a3 + 8) = v60;
        uint64_t v62 = v81;
        goto LABEL_36;
      }
      goto LABEL_44;
    }
LABEL_43:
    uint64_t v5 = 0;
    goto LABEL_44;
  }
  sub_244CB3988((uint64_t)v88);
  char v89 = 0;
  sub_244CB39B8(v38, 0, 0);
  sub_24484B03C((uint64_t)v88, a2, (uint64_t)&v73);
  *(_OWORD *)a3 = v73;
  *(void *)(a3 + 16) = v74;
  if (*(_DWORD *)a3) {
    goto LABEL_43;
  }
  uint64_t v5 = objc_opt_new();
  LOBYTE(v68) = v89;
  if (v89) {
    BYTE1(v68) = v90;
  }
  sub_244BC0B5C((uint64_t)&v73, (uint64_t)v88, (unsigned __int8 *)&v68);
  while (sub_244BC0BEC((uint64_t)&v73))
  {
    long long v39 = objc_opt_new();
    uint64_t v41 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v40, (unsigned __int16)v73);
    objc_msgSend_setEndpointListID_(v39, v42, (uint64_t)v41);

    uint64_t v43 = *((void *)&v73 + 1);
    uint64_t v44 = v74;
    id v45 = [NSString alloc];
    unsigned __int8 v47 = objc_msgSend_initWithBytes_length_encoding_(v45, v46, v43, v44, 4);
    objc_msgSend_setName_(v39, v48, (uint64_t)v47);

    int v51 = objc_msgSend_name(v39, v49, v50);

    if (!v51)
    {
      *(_OWORD *)a3 = xmmword_265199F90;
      *(void *)(a3 + 16) = 1091;
      goto LABEL_41;
    }
    uint64_t v53 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v52, v75);
    objc_msgSend_setType_(v39, v54, (uint64_t)v53);

    int v55 = objc_opt_new();
    v91[0] = v82;
    if (v82) {
      v91[1] = v83;
    }
    sub_2446D1930((uint64_t)&v68, (uint64_t)v79, v91);
    while (sub_244794970((uint64_t)&v68))
    {
      uint64_t v57 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v56, (unsigned __int16)v68);
      objc_msgSend_addObject_(v55, v58, (uint64_t)v57);
    }
    if (DWORD2(v68) && DWORD2(v68) != 33)
    {
      uint64_t v65 = v69;
      int v66 = HIDWORD(v68);
      *(_DWORD *)a3 = DWORD2(v68);
      *(_DWORD *)(a3 + 4) = v66;
      *(void *)(a3 + 8) = v65;
      *(void *)(a3 + 16) = v70;

LABEL_41:
LABEL_42:

      goto LABEL_43;
    }
    objc_msgSend_setEndpoints_(v39, v56, (uint64_t)v55);

    objc_msgSend_addObject_(v5, v59, (uint64_t)v39);
  }
  if (v84 && v84 != 33)
  {
    uint64_t v63 = v86;
    int v64 = v85;
    *(_DWORD *)a3 = v84;
    *(_DWORD *)(a3 + 4) = v64;
    *(void *)(a3 + 8) = v63;
    uint64_t v62 = v87;
LABEL_36:
    *(void *)(a3 + 16) = v62;
    goto LABEL_42;
  }
LABEL_44:

  return v5;
}

void sub_244B9F2C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244B9F364(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
    case 4:
    case 7:
    case 22:
      LOWORD(v71) = 0;
      sub_244CB3F40(a2, &v71, (uint64_t)&v72);
      goto LABEL_3;
    case 1:
      long long v71 = 0uLL;
      sub_244CB41F0(a2, &v71, &v72);
      BOOL v8 = 0;
      *(_OWORD *)a3 = v72;
      *(void *)(a3 + 16) = v73;
      if (*(_DWORD *)a3) {
        break;
      }
      uint64_t v10 = *((void *)&v71 + 1);
      uint64_t v9 = v71;
      id v11 = [NSString alloc];
      BOOL v8 = objc_msgSend_initWithBytes_length_encoding_(v11, v12, v9, v10, 4);
      if (v8) {
        goto LABEL_48;
      }
      uint64_t v13 = &xmmword_265199FC0;
      goto LABEL_57;
    case 2:
      LOWORD(v71) = 0;
      long long v72 = 0uLL;
      uint64_t v73 = 0;
      sub_24484B11C(a2, &v71, &v72);
      if (!v72)
      {
        LODWORD(v72) = 0;
        *((void *)&v72 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
        LODWORD(v73) = 61;
      }
LABEL_3:
      *(_OWORD *)a3 = v72;
      *(void *)(a3 + 16) = v73;
      if (*(_DWORD *)a3) {
        goto LABEL_52;
      }
      uint64_t v5 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v4, (unsigned __int16)v71);
      goto LABEL_9;
    case 3:
      long long v71 = 0uLL;
      sub_244CB41F0(a2, &v71, &v72);
      BOOL v8 = 0;
      *(_OWORD *)a3 = v72;
      *(void *)(a3 + 16) = v73;
      if (*(_DWORD *)a3) {
        break;
      }
      uint64_t v15 = *((void *)&v71 + 1);
      uint64_t v14 = v71;
      id v16 = [NSString alloc];
      BOOL v8 = objc_msgSend_initWithBytes_length_encoding_(v16, v17, v14, v15, 4);
      if (v8) {
        goto LABEL_48;
      }
      uint64_t v13 = &xmmword_265199FD8;
      goto LABEL_57;
    case 5:
      long long v71 = 0uLL;
      sub_244CB41F0(a2, &v71, &v72);
      BOOL v8 = 0;
      *(_OWORD *)a3 = v72;
      *(void *)(a3 + 16) = v73;
      if (*(_DWORD *)a3) {
        break;
      }
      uint64_t v19 = *((void *)&v71 + 1);
      uint64_t v18 = v71;
      id v20 = [NSString alloc];
      BOOL v8 = objc_msgSend_initWithBytes_length_encoding_(v20, v21, v18, v19, 4);
      if (v8) {
        goto LABEL_48;
      }
      uint64_t v13 = &xmmword_265199FF0;
      goto LABEL_57;
    case 6:
      long long v71 = 0uLL;
      sub_244CB41F0(a2, &v71, &v72);
      BOOL v8 = 0;
      *(_OWORD *)a3 = v72;
      *(void *)(a3 + 16) = v73;
      if (*(_DWORD *)a3) {
        break;
      }
      uint64_t v23 = *((void *)&v71 + 1);
      uint64_t v22 = v71;
      id v24 = [NSString alloc];
      BOOL v8 = objc_msgSend_initWithBytes_length_encoding_(v24, v25, v22, v23, 4);
      if (v8) {
        goto LABEL_48;
      }
      uint64_t v13 = &xmmword_26519A008;
      goto LABEL_57;
    case 8:
      long long v71 = 0uLL;
      sub_244CB41F0(a2, &v71, &v72);
      BOOL v8 = 0;
      *(_OWORD *)a3 = v72;
      *(void *)(a3 + 16) = v73;
      if (*(_DWORD *)a3) {
        break;
      }
      uint64_t v27 = *((void *)&v71 + 1);
      uint64_t v26 = v71;
      id v28 = [NSString alloc];
      BOOL v8 = objc_msgSend_initWithBytes_length_encoding_(v28, v29, v26, v27, 4);
      if (v8) {
        goto LABEL_48;
      }
      uint64_t v13 = &xmmword_26519A020;
      goto LABEL_57;
    case 9:
    case 21:
      LODWORD(v71) = 0;
      sub_244CB3FB0(a2, &v71, (uint64_t)&v72);
      *(_OWORD *)a3 = v72;
      *(void *)(a3 + 16) = v73;
      if (*(_DWORD *)a3) {
        goto LABEL_52;
      }
      uint64_t v5 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v6, v71);
      goto LABEL_9;
    case 10:
      long long v71 = 0uLL;
      sub_244CB41F0(a2, &v71, &v72);
      BOOL v8 = 0;
      *(_OWORD *)a3 = v72;
      *(void *)(a3 + 16) = v73;
      if (*(_DWORD *)a3) {
        break;
      }
      uint64_t v31 = *((void *)&v71 + 1);
      uint64_t v30 = v71;
      id v32 = [NSString alloc];
      BOOL v8 = objc_msgSend_initWithBytes_length_encoding_(v32, v33, v30, v31, 4);
      if (v8) {
        goto LABEL_48;
      }
      uint64_t v13 = &xmmword_26519A038;
      goto LABEL_57;
    case 11:
      long long v71 = 0uLL;
      sub_244CB41F0(a2, &v71, &v72);
      BOOL v8 = 0;
      *(_OWORD *)a3 = v72;
      *(void *)(a3 + 16) = v73;
      if (*(_DWORD *)a3) {
        break;
      }
      uint64_t v35 = *((void *)&v71 + 1);
      uint64_t v34 = v71;
      id v36 = [NSString alloc];
      BOOL v8 = objc_msgSend_initWithBytes_length_encoding_(v36, v37, v34, v35, 4);
      if (v8) {
        goto LABEL_48;
      }
      uint64_t v13 = &xmmword_26519A050;
      goto LABEL_57;
    case 12:
      long long v71 = 0uLL;
      sub_244CB41F0(a2, &v71, &v72);
      BOOL v8 = 0;
      *(_OWORD *)a3 = v72;
      *(void *)(a3 + 16) = v73;
      if (*(_DWORD *)a3) {
        break;
      }
      uint64_t v39 = *((void *)&v71 + 1);
      uint64_t v38 = v71;
      id v40 = [NSString alloc];
      BOOL v8 = objc_msgSend_initWithBytes_length_encoding_(v40, v41, v38, v39, 4);
      if (v8) {
        goto LABEL_48;
      }
      uint64_t v13 = &xmmword_26519A068;
      goto LABEL_57;
    case 13:
      long long v71 = 0uLL;
      sub_244CB41F0(a2, &v71, &v72);
      BOOL v8 = 0;
      *(_OWORD *)a3 = v72;
      *(void *)(a3 + 16) = v73;
      if (*(_DWORD *)a3) {
        break;
      }
      uint64_t v43 = *((void *)&v71 + 1);
      uint64_t v42 = v71;
      id v44 = [NSString alloc];
      BOOL v8 = objc_msgSend_initWithBytes_length_encoding_(v44, v45, v42, v43, 4);
      if (v8) {
        goto LABEL_48;
      }
      uint64_t v13 = &xmmword_26519A080;
      goto LABEL_57;
    case 14:
      long long v71 = 0uLL;
      sub_244CB41F0(a2, &v71, &v72);
      BOOL v8 = 0;
      *(_OWORD *)a3 = v72;
      *(void *)(a3 + 16) = v73;
      if (*(_DWORD *)a3) {
        break;
      }
      uint64_t v47 = *((void *)&v71 + 1);
      uint64_t v46 = v71;
      id v48 = [NSString alloc];
      BOOL v8 = objc_msgSend_initWithBytes_length_encoding_(v48, v49, v46, v47, 4);
      if (v8) {
        goto LABEL_48;
      }
      uint64_t v13 = &xmmword_26519A098;
      goto LABEL_57;
    case 15:
      long long v71 = 0uLL;
      sub_244CB41F0(a2, &v71, &v72);
      BOOL v8 = 0;
      *(_OWORD *)a3 = v72;
      *(void *)(a3 + 16) = v73;
      if (*(_DWORD *)a3) {
        break;
      }
      uint64_t v51 = *((void *)&v71 + 1);
      uint64_t v50 = v71;
      id v52 = [NSString alloc];
      BOOL v8 = objc_msgSend_initWithBytes_length_encoding_(v52, v53, v50, v51, 4);
      if (v8) {
        goto LABEL_48;
      }
      uint64_t v13 = &xmmword_26519A0B0;
      goto LABEL_57;
    case 16:
    case 17:
      LOBYTE(v71) = 0;
      sub_244CB3C0C(a2, (char *)&v71, (uint64_t)&v72);
      *(_OWORD *)a3 = v72;
      *(void *)(a3 + 16) = v73;
      if (*(_DWORD *)a3) {
        goto LABEL_52;
      }
      uint64_t v5 = objc_msgSend_numberWithBool_(NSNumber, v7, v71);
LABEL_9:
      BOOL v8 = (void *)v5;
      break;
    case 18:
      long long v71 = 0uLL;
      sub_244CB41F0(a2, &v71, &v72);
      BOOL v8 = 0;
      *(_OWORD *)a3 = v72;
      *(void *)(a3 + 16) = v73;
      if (*(_DWORD *)a3) {
        break;
      }
      uint64_t v55 = *((void *)&v71 + 1);
      uint64_t v54 = v71;
      id v56 = [NSString alloc];
      BOOL v8 = objc_msgSend_initWithBytes_length_encoding_(v56, v57, v54, v55, 4);
      if (v8)
      {
LABEL_48:
        id v58 = v8;
      }
      else
      {
        uint64_t v13 = &xmmword_26519A0C8;
LABEL_57:
        *(_OWORD *)a3 = *v13;
        *(void *)(a3 + 16) = *((void *)v13 + 2);
      }

      break;
    case 19:
      LODWORD(v71) = 0;
      sub_2447F863C(&v71, a2, (uint64_t)&v72);
      *(_OWORD *)a3 = v72;
      *(void *)(a3 + 16) = v73;
      if (*(_DWORD *)a3) {
        goto LABEL_52;
      }
      BOOL v8 = objc_opt_new();
      uint64_t v60 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v59, (unsigned __int16)v71);
      objc_msgSend_setCaseSessionsPerFabric_(v8, v61, (uint64_t)v60);

      uint64_t v63 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v62, WORD1(v71));
      objc_msgSend_setSubscriptionsPerFabric_(v8, v64, (uint64_t)v63);
      goto LABEL_55;
    case 20:
      LOWORD(v71) = 0;
      BYTE2(v71) = 0;
      sub_2447F88BC(&v71, a2, (uint64_t)&v72);
      *(_OWORD *)a3 = v72;
      *(void *)(a3 + 16) = v73;
      if (*(_DWORD *)a3)
      {
LABEL_52:
        BOOL v8 = 0;
      }
      else
      {
        BOOL v8 = objc_opt_new();
        int v66 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v65, v71);
        objc_msgSend_setFinish_(v8, v67, (uint64_t)v66);

        if (BYTE2(v71))
        {
          uint64_t v63 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v68, BYTE1(v71));
          objc_msgSend_setPrimaryColor_(v8, v69, (uint64_t)v63);
LABEL_55:
        }
        else
        {
          objc_msgSend_setPrimaryColor_(v8, v68, 0);
        }
      }
      break;
    default:
      BOOL v8 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 1477;
      break;
  }

  return v8;
}

void sub_244B9FB28(_Unwind_Exception *a1)
{
  id v3 = v1;

  _Unwind_Resume(a1);
}

id sub_244B9FBB8(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
      sub_244CB3988((uint64_t)v28);
      unsigned __int8 v29 = 0;
      sub_244CB39B8((uint64_t)v28, 0, 0);
      sub_24484B03C((uint64_t)v28, a2, (uint64_t)&v24);
      uint64_t v5 = 0;
      *(_OWORD *)a3 = v24;
      *(void *)(a3 + 16) = v25;
      if (!*(_DWORD *)a3)
      {
        uint64_t v5 = objc_opt_new();
        v31[0] = v29;
        if (v29) {
          v31[1] = v30;
        }
        sub_244BC0D44((uint64_t)&v24, (uint64_t)v28, v31);
        while (sub_244BC0CFC((uint64_t)&v24))
        {
          BOOL v6 = objc_opt_new();
          BOOL v8 = objc_msgSend_numberWithUnsignedLongLong_(NSNumber, v7, v24);
          objc_msgSend_setProviderNodeID_(v6, v9, (uint64_t)v8);

          id v11 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v10, WORD4(v24));
          objc_msgSend_setEndpoint_(v6, v12, (uint64_t)v11);

          uint64_t v14 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v13, BYTE10(v24));
          objc_msgSend_setFabricIndex_(v6, v15, (uint64_t)v14);

          objc_msgSend_addObject_(v5, v16, (uint64_t)v6);
        }
        if (v25 && v25 != 33)
        {
          uint64_t v22 = v26;
          int v23 = HIDWORD(v25);
          *(_DWORD *)a3 = v25;
          *(_DWORD *)(a3 + 4) = v23;
          *(void *)(a3 + 8) = v22;
          *(void *)(a3 + 16) = v27;

          goto LABEL_18;
        }
      }
      break;
    case 1:
      v28[0] = 0;
      sub_244CB3C0C(a2, v28, (uint64_t)&v24);
      *(_OWORD *)a3 = v24;
      *(void *)(a3 + 16) = v25;
      if (*(_DWORD *)a3) {
        goto LABEL_18;
      }
      uint64_t v18 = objc_msgSend_numberWithBool_(NSNumber, v17, v28[0]);
      goto LABEL_20;
    case 2:
      v28[0] = 0;
      sub_2447FA994(a2, v28, &v24);
      *(_OWORD *)a3 = v24;
      *(void *)(a3 + 16) = v25;
      if (!*(_DWORD *)a3) {
        goto LABEL_19;
      }
      goto LABEL_18;
    case 3:
      *(_WORD *)id v28 = 0;
      sub_2447F15BC(a2, (unsigned __int8 *)v28, (uint64_t)&v24);
      *(_OWORD *)a3 = v24;
      *(void *)(a3 + 16) = v25;
      if (*(_DWORD *)a3) {
        BOOL v20 = 1;
      }
      else {
        BOOL v20 = v28[1] == 0;
      }
      if (v20)
      {
LABEL_18:
        uint64_t v5 = 0;
      }
      else
      {
LABEL_19:
        uint64_t v18 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v19, v28[0]);
LABEL_20:
        uint64_t v5 = (void *)v18;
      }
      break;
    default:
      uint64_t v5 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 1567;
      break;
  }

  return v5;
}

void sub_244B9FE8C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244B9FED4(int a1, uint64_t a2, uint64_t a3)
{
  if (a1 == 1)
  {
    sub_244CB3988((uint64_t)v24);
    unsigned __int8 v25 = 0;
    sub_244CB39B8((uint64_t)v24, 0, 0);
    sub_24484B03C((uint64_t)v24, a2, (uint64_t)&v20);
    uint64_t v5 = 0;
    *(_OWORD *)a3 = v20;
    *(void *)(a3 + 16) = v21;
    if (!*(_DWORD *)a3)
    {
      uint64_t v5 = objc_opt_new();
      v27[0] = v25;
      if (v25) {
        v27[1] = v26;
      }
      sub_244797544((uint64_t)&v20, (uint64_t)v24, v27);
      while (sub_2447975B4((uint64_t)&v20))
      {
        long long v12 = v20;
        id v13 = [NSString alloc];
        id v16 = objc_msgSend_initWithBytes_length_encoding_(v13, v14, v12, *((void *)&v12 + 1), 4);
        if (!v16)
        {
          *(_OWORD *)a3 = xmmword_26519A0F8;
          *(void *)(a3 + 16) = 1606;
          goto LABEL_18;
        }
        objc_msgSend_addObject_(v5, v15, (uint64_t)v16);
      }
      if (v21 && v21 != 33)
      {
        uint64_t v17 = v22;
        int v18 = HIDWORD(v21);
        *(_DWORD *)a3 = v21;
        *(_DWORD *)(a3 + 4) = v18;
        *(void *)(a3 + 8) = v17;
        *(void *)(a3 + 16) = v23;
LABEL_18:

        uint64_t v5 = 0;
      }
    }
  }
  else if (a1)
  {
    uint64_t v5 = 0;
    *(_DWORD *)a3 = 181;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "zap-generated/MTRAttributeTLVValueDecoder.mm";
    *(_DWORD *)(a3 + 16) = 1626;
  }
  else
  {
    v24[0] = 0uLL;
    sub_244CB41F0(a2, v24, &v20);
    uint64_t v5 = 0;
    *(_OWORD *)a3 = v20;
    *(void *)(a3 + 16) = v21;
    if (!*(_DWORD *)a3)
    {
      uint64_t v7 = *((void *)&v24[0] + 1);
      uint64_t v6 = *(void *)&v24[0];
      id v8 = [NSString alloc];
      uint64_t v10 = objc_msgSend_initWithBytes_length_encoding_(v8, v9, v6, v7, 4);
      uint64_t v5 = v10;
      if (v10)
      {
        id v11 = v10;
      }
      else
      {
        *(_OWORD *)a3 = xmmword_26519A0E0;
        *(void *)(a3 + 16) = 1584;
      }
    }
  }

  return v5;
}

void sub_244BA00F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BA0118(int a1, uint64_t a2, uint64_t a3)
{
  if (a1 == 2)
  {
    sub_244CB3988((uint64_t)v16);
    unsigned __int8 v17 = 0;
    sub_244CB39B8((uint64_t)v16, 0, 0);
    sub_24484B03C((uint64_t)v16, a2, (uint64_t)&v13);
    uint64_t v6 = 0;
    *(_OWORD *)a3 = v13;
    *(void *)(a3 + 16) = v14;
    if (!*(_DWORD *)a3)
    {
      uint64_t v6 = objc_opt_new();
      v19[0] = v17;
      if (v17) {
        v19[1] = v18;
      }
      sub_2446D1930((uint64_t)&v13, (uint64_t)v16, v19);
      while (sub_244BC0E70((uint64_t)&v13))
      {
        id v8 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v7, v13);
        objc_msgSend_addObject_(v6, v9, (uint64_t)v8);
      }
      if (DWORD2(v13) && DWORD2(v13) != 33)
      {
        uint64_t v11 = v14;
        int v12 = HIDWORD(v13);
        *(_DWORD *)a3 = DWORD2(v13);
        *(_DWORD *)(a3 + 4) = v12;
        *(void *)(a3 + 8) = v11;
        *(void *)(a3 + 16) = v15;

        goto LABEL_13;
      }
    }
  }
  else
  {
    if (a1 == 1)
    {
      v16[0] = 0;
      sub_2447FB508(a2, v16, &v13);
    }
    else
    {
      if (a1)
      {
        uint64_t v6 = 0;
        *(_DWORD *)a3 = 181;
        *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/zap-generated/MTRAttributeTLVValueDecoder.mm";
        *(_DWORD *)(a3 + 16) = 1686;
        goto LABEL_16;
      }
      v16[0] = 0;
      sub_2447FB49C(a2, v16, &v13);
    }
    *(_OWORD *)a3 = v13;
    *(void *)(a3 + 16) = v14;
    if (*(_DWORD *)a3)
    {
LABEL_13:
      uint64_t v6 = 0;
      goto LABEL_16;
    }
    uint64_t v6 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v5, v16[0]);
  }
LABEL_16:

  return v6;
}

void sub_244BA02F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BA0310(int a1, uint64_t a2, uint64_t a3)
{
  if (a1)
  {
    id v4 = 0;
    *(_DWORD *)a3 = 181;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "zap-generated/MTRAttributeTLVValueDecoder.mm";
    *(_DWORD *)(a3 + 16) = 1709;
  }
  else
  {
    unsigned __int8 v9 = 0;
    sub_2447F5F24(a2, &v9, &v7);
    *(_OWORD *)a3 = v7;
    *(void *)(a3 + 16) = v8;
    if (*(_DWORD *)a3)
    {
      id v4 = 0;
    }
    else
    {
      id v4 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v5, v9);
    }
  }

  return v4;
}

id sub_244BA03BC(int a1, uint64_t a2, uint64_t a3)
{
  if (a1)
  {
    id v4 = 0;
    *(_DWORD *)a3 = 181;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "zap-generated/MTRAttributeTLVValueDecoder.mm";
    *(_DWORD *)(a3 + 16) = 1747;
  }
  else
  {
    sub_244CB3988((uint64_t)v15);
    unsigned __int8 v16 = 0;
    sub_244CB39B8((uint64_t)v15, 0, 0);
    sub_24484B03C((uint64_t)v15, a2, (uint64_t)&v12);
    id v4 = 0;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
    if (!*(_DWORD *)a3)
    {
      id v4 = objc_opt_new();
      v18[0] = v16;
      if (v16) {
        v18[1] = v17;
      }
      sub_2446D1930((uint64_t)&v12, (uint64_t)v15, v18);
      while (sub_244794970((uint64_t)&v12))
      {
        uint64_t v8 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v7, (unsigned __int16)v12);
        objc_msgSend_addObject_(v4, v9, (uint64_t)v8);
      }
      if (DWORD2(v12) && DWORD2(v12) != 33)
      {
        uint64_t v10 = v13;
        int v11 = HIDWORD(v12);
        *(_DWORD *)a3 = DWORD2(v12);
        *(_DWORD *)(a3 + 4) = v11;
        *(void *)(a3 + 8) = v10;
        *(void *)(a3 + 16) = v14;

        id v4 = 0;
      }
    }
  }

  return v4;
}

void sub_244BA0524(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BA0544(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
    case 16:
    case 26:
      LOBYTE(v34[0]) = 0;
      sub_2446D1A48(a2, v34, &v31);
      goto LABEL_71;
    case 1:
    case 25:
      LOBYTE(v34[0]) = 0;
      sub_244CB3E8C(a2, v34, (uint64_t)&v31);
      goto LABEL_71;
    case 2:
      v34[0] = 0uLL;
      sub_244CB41F0(a2, v34, &v31);
      uint64_t v10 = 0;
      *(_OWORD *)a3 = v31;
      *(void *)(a3 + 16) = v32;
      if (*(_DWORD *)a3) {
        goto LABEL_75;
      }
      uint64_t v10 = sub_244BBFB94(*(uint64_t *)&v34[0], *((uint64_t *)&v34[0] + 1));
      if (v10) {
        goto LABEL_66;
      }
      int v11 = &xmmword_26519A110;
      goto LABEL_79;
    case 3:
    case 6:
    case 11:
    case 13:
    case 27:
    case 29:
      LOBYTE(v34[0]) = 0;
      BYTE4(v34[0]) = 0;
      sub_2447F4140(a2, (uint64_t)v34, (uint64_t)&v31);
      *(_OWORD *)a3 = v31;
      *(void *)(a3 + 16) = v32;
      if (*(_DWORD *)a3) {
        BOOL v6 = 1;
      }
      else {
        BOOL v6 = BYTE4(v34[0]) == 0;
      }
      if (!v6) {
        goto LABEL_11;
      }
      goto LABEL_72;
    case 4:
      LOBYTE(v34[0]) = 0;
      BYTE2(v34[0]) = 0;
      sub_2447EF9E0(a2, (__int16 *)v34, (uint64_t)&v31);
      *(_OWORD *)a3 = v31;
      *(void *)(a3 + 16) = v32;
      if (*(_DWORD *)a3) {
        BOOL v13 = 1;
      }
      else {
        BOOL v13 = BYTE2(v34[0]) == 0;
      }
      if (!v13) {
        goto LABEL_69;
      }
      goto LABEL_72;
    case 5:
      LOBYTE(v34[0]) = 0;
      sub_2447F1DCC(a2, v34, &v31);
      goto LABEL_71;
    case 7:
    case 8:
    case 24:
      LODWORD(v34[0]) = 0;
      sub_244CB3FB0(a2, v34, (uint64_t)&v31);
      *(_OWORD *)a3 = v31;
      *(void *)(a3 + 16) = v32;
      if (*(_DWORD *)a3) {
        goto LABEL_72;
      }
LABEL_11:
      uint64_t v8 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v5, LODWORD(v34[0]));
      goto LABEL_74;
    case 9:
    case 15:
    case 17:
    case 28:
      LOBYTE(v34[0]) = 0;
      sub_244CB3C0C(a2, (char *)v34, (uint64_t)&v31);
      *(_OWORD *)a3 = v31;
      *(void *)(a3 + 16) = v32;
      if (*(_DWORD *)a3) {
        goto LABEL_72;
      }
      uint64_t v8 = objc_msgSend_numberWithBool_(NSNumber, v7, LOBYTE(v34[0]));
      goto LABEL_74;
    case 10:
      sub_244CB3988((uint64_t)v34);
      unsigned __int8 v35 = 0;
      sub_244CB39B8((uint64_t)v34, 0, 0);
      sub_24484B03C((uint64_t)v34, a2, (uint64_t)&v31);
      *(_OWORD *)a3 = v31;
      *(void *)(a3 + 16) = v32;
      if (*(_DWORD *)a3) {
        goto LABEL_72;
      }
      uint64_t v10 = objc_opt_new();
      unsigned __int8 v37 = v35;
      if (v35) {
        char v38 = v36;
      }
      sub_2446D1930((uint64_t)&v31, (uint64_t)v34, &v37);
      while (sub_244BC0F18((uint64_t)&v31))
      {
        uint64_t v15 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v14, v31);
        objc_msgSend_addObject_(v10, v16, (uint64_t)v15);
      }
      goto LABEL_61;
    case 12:
      LOWORD(v34[0]) = 0;
      sub_2447F15BC(a2, (unsigned __int8 *)v34, (uint64_t)&v31);
      *(_OWORD *)a3 = v31;
      *(void *)(a3 + 16) = v32;
      if (*(_DWORD *)a3) {
        BOOL v17 = 1;
      }
      else {
        BOOL v17 = BYTE1(v34[0]) == 0;
      }
      if (!v17) {
        goto LABEL_73;
      }
      goto LABEL_72;
    case 14:
      LOBYTE(v34[0]) = 0;
      sub_2447F5F24(a2, v34, &v31);
LABEL_71:
      *(_OWORD *)a3 = v31;
      *(void *)(a3 + 16) = v32;
      if (*(_DWORD *)a3) {
        goto LABEL_72;
      }
LABEL_73:
      uint64_t v8 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v9, LOBYTE(v34[0]));
      goto LABEL_74;
    case 18:
      sub_244CB3988((uint64_t)v34);
      unsigned __int8 v35 = 0;
      sub_244CB39B8((uint64_t)v34, 0, 0);
      sub_24484B03C((uint64_t)v34, a2, (uint64_t)&v31);
      *(_OWORD *)a3 = v31;
      *(void *)(a3 + 16) = v32;
      if (*(_DWORD *)a3) {
        goto LABEL_72;
      }
      uint64_t v10 = objc_opt_new();
      unsigned __int8 v37 = v35;
      if (v35) {
        char v38 = v36;
      }
      sub_2446D1930((uint64_t)&v31, (uint64_t)v34, &v37);
      while (sub_244BC0F18((uint64_t)&v31))
      {
        unsigned __int8 v25 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v24, v31);
        objc_msgSend_addObject_(v10, v26, (uint64_t)v25);
      }
      goto LABEL_61;
    case 19:
      v34[0] = 0uLL;
      sub_244CB41F0(a2, v34, &v31);
      uint64_t v10 = 0;
      *(_OWORD *)a3 = v31;
      *(void *)(a3 + 16) = v32;
      if (*(_DWORD *)a3) {
        goto LABEL_75;
      }
      uint64_t v10 = sub_244BBFB94(*(uint64_t *)&v34[0], *((uint64_t *)&v34[0] + 1));
      if (v10) {
        goto LABEL_66;
      }
      int v11 = &xmmword_26519A128;
      goto LABEL_79;
    case 20:
      LOWORD(v34[0]) = 0;
      sub_2447FC098(a2, v34, &v31);
      goto LABEL_68;
    case 21:
      v34[0] = 0uLL;
      sub_244CB41F0(a2, v34, &v31);
      uint64_t v10 = 0;
      *(_OWORD *)a3 = v31;
      *(void *)(a3 + 16) = v32;
      if (*(_DWORD *)a3) {
        goto LABEL_75;
      }
      uint64_t v10 = sub_244BBFB94(*(uint64_t *)&v34[0], *((uint64_t *)&v34[0] + 1));
      if (v10) {
        goto LABEL_66;
      }
      int v11 = &xmmword_26519A140;
      goto LABEL_79;
    case 22:
      v34[0] = 0uLL;
      sub_244CB41F0(a2, v34, &v31);
      uint64_t v10 = 0;
      *(_OWORD *)a3 = v31;
      *(void *)(a3 + 16) = v32;
      if (*(_DWORD *)a3) {
        goto LABEL_75;
      }
      uint64_t v10 = sub_244BBFB94(*(uint64_t *)&v34[0], *((uint64_t *)&v34[0] + 1));
      if (v10)
      {
LABEL_66:
        id v29 = v10;
      }
      else
      {
        int v11 = &xmmword_26519A158;
LABEL_79:
        *(_OWORD *)a3 = *v11;
        *(void *)(a3 + 16) = *((void *)v11 + 2);
      }

      goto LABEL_75;
    case 23:
      LOWORD(v34[0]) = 0;
      sub_2447FC0FC(a2, v34, &v31);
LABEL_68:
      *(_OWORD *)a3 = v31;
      *(void *)(a3 + 16) = v32;
      if (*(_DWORD *)a3) {
        goto LABEL_72;
      }
LABEL_69:
      uint64_t v8 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v12, LOWORD(v34[0]));
LABEL_74:
      uint64_t v10 = (void *)v8;
      goto LABEL_75;
    case 30:
      sub_244CB3988((uint64_t)v34);
      unsigned __int8 v35 = 0;
      sub_244CB39B8((uint64_t)v34, 0, 0);
      sub_24484B03C((uint64_t)v34, a2, (uint64_t)&v31);
      *(_OWORD *)a3 = v31;
      *(void *)(a3 + 16) = v32;
      if (*(_DWORD *)a3) {
        goto LABEL_72;
      }
      uint64_t v10 = objc_opt_new();
      unsigned __int8 v37 = v35;
      if (v35) {
        char v38 = v36;
      }
      sub_2446D1930((uint64_t)&v31, (uint64_t)v34, &v37);
      while (sub_244BC0FC0((uint64_t)&v31))
      {
        uint64_t v19 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v18, v31);
        objc_msgSend_addObject_(v10, v20, (uint64_t)v19);
      }
      goto LABEL_61;
    case 31:
      sub_244CB3988((uint64_t)v34);
      unsigned __int8 v35 = 0;
      sub_244CB39B8((uint64_t)v34, 0, 0);
      sub_24484B03C((uint64_t)v34, a2, (uint64_t)&v31);
      *(_OWORD *)a3 = v31;
      *(void *)(a3 + 16) = v32;
      if (*(_DWORD *)a3) {
        goto LABEL_72;
      }
      uint64_t v10 = objc_opt_new();
      unsigned __int8 v37 = v35;
      if (v35) {
        char v38 = v36;
      }
      sub_2446D1930((uint64_t)&v31, (uint64_t)v34, &v37);
      while (sub_244794970((uint64_t)&v31))
      {
        uint64_t v22 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v21, (unsigned __int16)v31);
        objc_msgSend_addObject_(v10, v23, (uint64_t)v22);
      }
LABEL_61:
      if (DWORD2(v31) && DWORD2(v31) != 33)
      {
        uint64_t v27 = v32;
        int v28 = HIDWORD(v31);
        *(_DWORD *)a3 = DWORD2(v31);
        *(_DWORD *)(a3 + 4) = v28;
        *(void *)(a3 + 8) = v27;
        *(void *)(a3 + 16) = v33;

LABEL_72:
        uint64_t v10 = 0;
      }
LABEL_75:
      return v10;
    default:
      uint64_t v10 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 2223;
      goto LABEL_75;
  }
}

void sub_244BA0CB4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BA0D9C(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
      uint64_t v20 = 0;
      sub_244CB3EFC(a2, &v20, (uint64_t)&v18);
      uint64_t v8 = 0;
      *(_OWORD *)a3 = v18;
      *(void *)(a3 + 16) = v19;
      if (!*(_DWORD *)a3)
      {
        uint64_t v5 = objc_msgSend_numberWithUnsignedLongLong_(NSNumber, v9, v20);
        goto LABEL_16;
      }
      goto LABEL_17;
    case 1:
      LODWORD(v20) = 0;
      sub_2447FC828(&v20, a2, (uint64_t)&v18);
      *(_OWORD *)a3 = v18;
      *(void *)(a3 + 16) = v19;
      if (*(_DWORD *)a3) {
        goto LABEL_14;
      }
      uint64_t v8 = objc_opt_new();
      int v11 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v10, (unsigned __int16)v20);
      objc_msgSend_setFailSafeExpiryLengthSeconds_(v8, v12, (uint64_t)v11);

      uint64_t v14 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v13, WORD1(v20));
      objc_msgSend_setMaxCumulativeFailsafeSeconds_(v8, v15, (uint64_t)v14);

      goto LABEL_17;
    case 2:
    case 3:
      LOBYTE(v20) = 0;
      sub_2447F5F24(a2, &v20, &v18);
      *(_OWORD *)a3 = v18;
      *(void *)(a3 + 16) = v19;
      if (*(_DWORD *)a3) {
        goto LABEL_14;
      }
      uint64_t v5 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v6, v20);
      goto LABEL_16;
    case 4:
    case 8:
      LOBYTE(v20) = 0;
      sub_244CB3C0C(a2, (char *)&v20, (uint64_t)&v18);
      *(_OWORD *)a3 = v18;
      *(void *)(a3 + 16) = v19;
      if (*(_DWORD *)a3) {
        goto LABEL_14;
      }
      uint64_t v5 = objc_msgSend_numberWithBool_(NSNumber, v7, v20);
      goto LABEL_16;
    case 5:
    case 6:
    case 7:
      LOWORD(v20) = 0;
      sub_244CB3F40(a2, &v20, (uint64_t)&v18);
      *(_OWORD *)a3 = v18;
      *(void *)(a3 + 16) = v19;
      if (*(_DWORD *)a3) {
        goto LABEL_14;
      }
      uint64_t v5 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v4, (unsigned __int16)v20);
      goto LABEL_16;
    case 9:
      LODWORD(v20) = 0;
      sub_244CB3FB0(a2, &v20, (uint64_t)&v18);
      *(_OWORD *)a3 = v18;
      *(void *)(a3 + 16) = v19;
      if (*(_DWORD *)a3)
      {
LABEL_14:
        uint64_t v8 = 0;
      }
      else
      {
        uint64_t v5 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v16, v20);
LABEL_16:
        uint64_t v8 = (void *)v5;
      }
LABEL_17:
      return v8;
    default:
      uint64_t v8 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 2347;
      goto LABEL_17;
  }
}

void sub_244BA102C(_Unwind_Exception *a1)
{
  id v3 = v2;

  _Unwind_Resume(a1);
}

id sub_244BA107C(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
    case 2:
    case 3:
      LOBYTE(v52) = 0;
      sub_244CB3E8C(a2, &v52, (uint64_t)&v44);
      *(_OWORD *)a3 = v44;
      *(void *)(a3 + 16) = v45;
      if (!*(_DWORD *)a3) {
        goto LABEL_32;
      }
      goto LABEL_56;
    case 1:
      sub_244CB3988((uint64_t)&v52);
      unsigned __int8 v54 = 0;
      sub_244CB39B8(v9, 0, 0);
      sub_24484B03C((uint64_t)&v52, a2, (uint64_t)&v44);
      *(_OWORD *)a3 = v44;
      *(void *)(a3 + 16) = v45;
      if (*(_DWORD *)a3) {
        goto LABEL_56;
      }
      uint64_t v10 = objc_opt_new();
      unsigned __int8 v56 = v54;
      if (v54) {
        char v57 = v55;
      }
      sub_244BC1068((uint64_t)&v44, (uint64_t)&v52, &v56);
      break;
    case 4:
      LOBYTE(v52) = 0;
      sub_244CB3C0C(a2, (char *)&v52, (uint64_t)&v44);
      *(_OWORD *)a3 = v44;
      *(void *)(a3 + 16) = v45;
      if (*(_DWORD *)a3) {
        goto LABEL_56;
      }
      uint64_t v7 = objc_msgSend_numberWithBool_(NSNumber, v6, v52);
      goto LABEL_41;
    case 5:
      LOWORD(v52) = 0;
      sub_2447FFF24(a2, (unsigned __int8 *)&v52, (uint64_t)&v44);
      *(_OWORD *)a3 = v44;
      *(void *)(a3 + 16) = v45;
      if (*(_DWORD *)a3) {
        BOOL v31 = 1;
      }
      else {
        BOOL v31 = BYTE1(v52) == 0;
      }
      if (v31) {
        goto LABEL_56;
      }
LABEL_32:
      uint64_t v7 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v5, v52);
      goto LABEL_41;
    case 6:
      LOBYTE(v44) = 0;
      LOBYTE(v45) = 0;
      sub_2447FFFFC(a2, (uint64_t)&v44, &v52);
      *(_OWORD *)a3 = v52;
      *(void *)(a3 + 16) = v53;
      if (*(_DWORD *)a3) {
        BOOL v33 = 1;
      }
      else {
        BOOL v33 = v45 == 0;
      }
      if (v33) {
        goto LABEL_56;
      }
      uint64_t v7 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v32, v44, *((void *)&v44 + 1));
      goto LABEL_41;
    case 7:
      LOBYTE(v52) = 0;
      BYTE4(v52) = 0;
      sub_2447FF66C(a2, (uint64_t)&v52, (uint64_t)&v44);
      *(_OWORD *)a3 = v44;
      *(void *)(a3 + 16) = v45;
      if (*(_DWORD *)a3) {
        BOOL v30 = 1;
      }
      else {
        BOOL v30 = BYTE4(v52) == 0;
      }
      if (v30) {
        goto LABEL_56;
      }
      uint64_t v7 = objc_msgSend_numberWithInt_(NSNumber, v29, v52);
      goto LABEL_41;
    case 8:
      sub_244CB3988((uint64_t)&v52);
      unsigned __int8 v54 = 0;
      sub_244CB39B8(v34, 0, 0);
      sub_24484B03C((uint64_t)&v52, a2, (uint64_t)&v44);
      *(_OWORD *)a3 = v44;
      *(void *)(a3 + 16) = v45;
      if (*(_DWORD *)a3) {
        goto LABEL_56;
      }
      uint64_t v10 = objc_opt_new();
      unsigned __int8 v56 = v54;
      if (v54) {
        char v57 = v55;
      }
      sub_2446D1930((uint64_t)&v44, (uint64_t)&v52, &v56);
      while (sub_244BC1198((uint64_t)&v44))
      {
        char v36 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v35, v44);
        objc_msgSend_addObject_(v10, v37, (uint64_t)v36);
      }
      if (!DWORD2(v44) || DWORD2(v44) == 33) {
        goto LABEL_57;
      }
      uint64_t v38 = v45;
      int v39 = HIDWORD(v44);
      *(_DWORD *)a3 = DWORD2(v44);
      *(_DWORD *)(a3 + 4) = v39;
      *(void *)(a3 + 8) = v38;
      uint64_t v40 = v46[0];
      goto LABEL_55;
    case 9:
      LOWORD(v52) = 0;
      sub_24484B6B0(a2, &v52, &v44);
      goto LABEL_39;
    case 10:
      LOWORD(v52) = 0;
      sub_244CB3F40(a2, &v52, (uint64_t)&v44);
LABEL_39:
      *(_OWORD *)a3 = v44;
      *(void *)(a3 + 16) = v45;
      if (*(_DWORD *)a3) {
        goto LABEL_56;
      }
      uint64_t v7 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v8, (unsigned __int16)v52);
LABEL_41:
      uint64_t v10 = (void *)v7;
      goto LABEL_57;
    default:
      uint64_t v10 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 2542;
      goto LABEL_57;
  }
  while (sub_244BC10E4((uint64_t)&v44))
  {
    int v11 = objc_opt_new();
    BOOL v13 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v12, v44, *((void *)&v44 + 1));
    objc_msgSend_setNetworkID_(v11, v14, (uint64_t)v13);

    unsigned __int8 v16 = objc_msgSend_numberWithBool_(NSNumber, v15, v45);
    objc_msgSend_setConnected_(v11, v17, (uint64_t)v16);

    if (LOBYTE(v46[0]) && sub_2446F7170(v46)[16])
    {
      uint64_t v19 = sub_2446F7170(v46);
      if (!v19[16]) {
        goto LABEL_60;
      }
      uint64_t v21 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v20, *(void *)v19, *((void *)v19 + 1));
      objc_msgSend_setNetworkIdentifier_(v11, v22, (uint64_t)v21);
    }
    else
    {
      objc_msgSend_setNetworkIdentifier_(v11, v18, 0);
    }
    if (v47[0] && sub_2446F7170(v47)[16])
    {
      long long v24 = sub_2446F7170(v47);
      if (!v24[16]) {
LABEL_60:
      }
        sub_24479484C();
      unsigned __int8 v26 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v25, *(void *)v24, *((void *)v24 + 1));
      objc_msgSend_setClientIdentifier_(v11, v27, (uint64_t)v26);
    }
    else
    {
      objc_msgSend_setClientIdentifier_(v11, v23, 0);
    }
    objc_msgSend_addObject_(v10, v28, (uint64_t)v11);
  }
  if (v48 && v48 != 33)
  {
    uint64_t v41 = v50;
    int v42 = v49;
    *(_DWORD *)a3 = v48;
    *(_DWORD *)(a3 + 4) = v42;
    *(void *)(a3 + 8) = v41;
    uint64_t v40 = v51;
LABEL_55:
    *(void *)(a3 + 16) = v40;

LABEL_56:
    uint64_t v10 = 0;
  }
LABEL_57:

  return v10;
}

void sub_244BA15C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BA1658(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
      sub_244CB3988((uint64_t)&v86);
      char v88 = 0;
      sub_244CB39B8(v5, 0, 0);
      sub_24484B03C((uint64_t)&v86, a2, (uint64_t)&v71);
      *(_OWORD *)a3 = v71;
      *(void *)(a3 + 16) = v72;
      if (*(_DWORD *)a3) {
        goto LABEL_70;
      }
      BOOL v6 = objc_opt_new();
      LOBYTE(v63) = v88;
      if (v88) {
        BYTE1(v63) = v89;
      }
      sub_244BC1240((uint64_t)&v71, (uint64_t)&v86, (unsigned __int8 *)&v63);
      break;
    case 1:
      LOWORD(v63) = 0;
      sub_244CB3F40(a2, &v63, (uint64_t)&v71);
      *(_OWORD *)a3 = v71;
      *(void *)(a3 + 16) = v72;
      if (*(_DWORD *)a3) {
        goto LABEL_70;
      }
      uint64_t v41 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v40, (unsigned __int16)v63);
      goto LABEL_62;
    case 2:
      uint64_t v63 = 0;
      sub_244CB3EFC(a2, &v63, (uint64_t)&v71);
      BOOL v6 = 0;
      *(_OWORD *)a3 = v71;
      *(void *)(a3 + 16) = v72;
      if (*(_DWORD *)a3) {
        goto LABEL_71;
      }
      uint64_t v41 = objc_msgSend_numberWithUnsignedLongLong_(NSNumber, v42, v63);
      goto LABEL_62;
    case 3:
      LODWORD(v63) = 0;
      sub_244CB3FB0(a2, &v63, (uint64_t)&v71);
      *(_OWORD *)a3 = v71;
      *(void *)(a3 + 16) = v72;
      if (*(_DWORD *)a3) {
        goto LABEL_70;
      }
      uint64_t v41 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v43, v63);
      goto LABEL_62;
    case 4:
      LOBYTE(v63) = 0;
      sub_2447F6AD4(a2, &v63, &v71);
      *(_OWORD *)a3 = v71;
      *(void *)(a3 + 16) = v72;
      if (*(_DWORD *)a3) {
        goto LABEL_70;
      }
      uint64_t v41 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v44, v63);
      goto LABEL_62;
    case 5:
      sub_244CB3988((uint64_t)&v63);
      unsigned __int8 v69 = 0;
      sub_244CB39B8((uint64_t)&v63, 0, 0);
      sub_24484B03C((uint64_t)&v63, a2, (uint64_t)&v71);
      *(_OWORD *)a3 = v71;
      *(void *)(a3 + 16) = v72;
      if (*(_DWORD *)a3) {
        goto LABEL_70;
      }
      BOOL v6 = objc_opt_new();
      unsigned __int8 v86 = v69;
      if (v69) {
        char v87 = v70;
      }
      sub_2446D1930((uint64_t)&v71, (uint64_t)&v63, &v86);
      while (sub_244BC0FC0((uint64_t)&v71))
      {
        uint64_t v46 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v45, v71);
        objc_msgSend_addObject_(v6, v47, (uint64_t)v46);
      }
      goto LABEL_55;
    case 6:
      sub_244CB3988((uint64_t)&v63);
      unsigned __int8 v69 = 0;
      sub_244CB39B8((uint64_t)&v63, 0, 0);
      sub_24484B03C((uint64_t)&v63, a2, (uint64_t)&v71);
      *(_OWORD *)a3 = v71;
      *(void *)(a3 + 16) = v72;
      if (*(_DWORD *)a3) {
        goto LABEL_70;
      }
      BOOL v6 = objc_opt_new();
      unsigned __int8 v86 = v69;
      if (v69) {
        char v87 = v70;
      }
      sub_2446D1930((uint64_t)&v71, (uint64_t)&v63, &v86);
      while (sub_244BC14B8((uint64_t)&v71))
      {
        int v49 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v48, v71);
        objc_msgSend_addObject_(v6, v50, (uint64_t)v49);
      }
      goto LABEL_55;
    case 7:
      sub_244CB3988((uint64_t)&v63);
      unsigned __int8 v69 = 0;
      sub_244CB39B8((uint64_t)&v63, 0, 0);
      sub_24484B03C((uint64_t)&v63, a2, (uint64_t)&v71);
      *(_OWORD *)a3 = v71;
      *(void *)(a3 + 16) = v72;
      if (*(_DWORD *)a3) {
        goto LABEL_70;
      }
      BOOL v6 = objc_opt_new();
      unsigned __int8 v86 = v69;
      if (v69) {
        char v87 = v70;
      }
      sub_2446D1930((uint64_t)&v71, (uint64_t)&v63, &v86);
      while (sub_2446D19A0((uint64_t)&v71))
      {
        long long v52 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v51, v71);
        objc_msgSend_addObject_(v6, v53, (uint64_t)v52);
      }
LABEL_55:
      if (DWORD2(v71) && DWORD2(v71) != 33)
      {
        uint64_t v54 = v72;
        int v55 = HIDWORD(v71);
        *(_DWORD *)a3 = DWORD2(v71);
        *(_DWORD *)(a3 + 4) = v55;
        *(void *)(a3 + 8) = v54;
        uint64_t v56 = v73;
LABEL_58:
        *(void *)(a3 + 16) = v56;
LABEL_69:

LABEL_70:
        BOOL v6 = 0;
      }
      goto LABEL_71;
    case 8:
      LOBYTE(v63) = 0;
      sub_244CB3C0C(a2, (char *)&v63, (uint64_t)&v71);
      *(_OWORD *)a3 = v71;
      *(void *)(a3 + 16) = v72;
      if (*(_DWORD *)a3) {
        goto LABEL_70;
      }
      uint64_t v41 = objc_msgSend_numberWithBool_(NSNumber, v57, v63);
LABEL_62:
      BOOL v6 = (void *)v41;
      goto LABEL_71;
    default:
      BOOL v6 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 2776;
      goto LABEL_71;
  }
  while (sub_244BC1328((uint64_t)&v71))
  {
    uint64_t v7 = objc_opt_new();
    long long v8 = v71;
    id v9 = [NSString alloc];
    int v11 = objc_msgSend_initWithBytes_length_encoding_(v9, v10, v8, *((void *)&v8 + 1), 4);
    objc_msgSend_setName_(v7, v12, (uint64_t)v11);

    uint64_t v15 = objc_msgSend_name(v7, v13, v14);

    if (!v15)
    {
      *(_OWORD *)a3 = xmmword_26519A170;
      *(void *)(a3 + 16) = 2578;
LABEL_68:

      goto LABEL_69;
    }
    BOOL v17 = objc_msgSend_numberWithBool_(NSNumber, v16, v72);
    objc_msgSend_setIsOperational_(v7, v18, (uint64_t)v17);

    if (BYTE2(v72))
    {
      uint64_t v20 = objc_msgSend_numberWithBool_(NSNumber, v19, BYTE1(v72));
      objc_msgSend_setOffPremiseServicesReachableIPv4_(v7, v21, (uint64_t)v20);
    }
    else
    {
      objc_msgSend_setOffPremiseServicesReachableIPv4_(v7, v19, 0);
    }
    if (BYTE4(v72))
    {
      uint64_t v23 = objc_msgSend_numberWithBool_(NSNumber, v22, BYTE3(v72));
      objc_msgSend_setOffPremiseServicesReachableIPv6_(v7, v24, (uint64_t)v23);
    }
    else
    {
      objc_msgSend_setOffPremiseServicesReachableIPv6_(v7, v22, 0);
    }
    unsigned __int8 v26 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v25, v73, v74, v63);
    objc_msgSend_setHardwareAddress_(v7, v27, (uint64_t)v26);

    int v28 = objc_opt_new();
    unsigned __int8 v90 = v76;
    if (v76) {
      char v91 = v77;
    }
    sub_244797544((uint64_t)&v63, (uint64_t)&v75, &v90);
    while (sub_244798B84((uint64_t)&v63))
    {
      BOOL v30 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v29, v63, v64);
      objc_msgSend_addObject_(v28, v31, (uint64_t)v30);
    }
    int v32 = v65;
    if (v65 && v65 != 33) {
      goto LABEL_67;
    }
    objc_msgSend_setIPv4Addresses_(v7, v29, (uint64_t)v28);

    int v28 = objc_opt_new();
    unsigned __int8 v90 = v79;
    if (v79) {
      char v91 = v80;
    }
    sub_244797544((uint64_t)&v63, (uint64_t)&v78, &v90);
    while (sub_244798B84((uint64_t)&v63))
    {
      uint64_t v34 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v33, v63, v64);
      objc_msgSend_addObject_(v28, v35, (uint64_t)v34);
    }
    int v32 = v65;
    if (v65)
    {
      if (v65 != 33)
      {
LABEL_67:
        uint64_t v60 = v67;
        int v61 = v66;
        *(_DWORD *)a3 = v32;
        *(_DWORD *)(a3 + 4) = v61;
        *(void *)(a3 + 8) = v60;
        *(void *)(a3 + 16) = v68;

        goto LABEL_68;
      }
    }
    objc_msgSend_setIPv6Addresses_(v7, v33, (uint64_t)v28);

    unsigned __int8 v37 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v36, v81);
    objc_msgSend_setType_(v7, v38, (uint64_t)v37);

    objc_msgSend_addObject_(v6, v39, (uint64_t)v7);
  }
  if (v82 && v82 != 33)
  {
    uint64_t v58 = v84;
    int v59 = v83;
    *(_DWORD *)a3 = v82;
    *(_DWORD *)(a3 + 4) = v59;
    *(void *)(a3 + 8) = v58;
    uint64_t v56 = v85;
    goto LABEL_58;
  }
LABEL_71:

  return v6;
}

void sub_244BA1E30(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BA1F14(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
      sub_244CB3988((uint64_t)v53);
      unsigned __int8 v54 = 0;
      sub_244CB39B8((uint64_t)v53, 0, 0);
      sub_24484B03C((uint64_t)v53, a2, (uint64_t)&v44);
      BOOL v6 = 0;
      *(_OWORD *)a3 = v44;
      *(void *)(a3 + 16) = v45;
      if (*(_DWORD *)a3) {
        goto LABEL_28;
      }
      BOOL v6 = objc_opt_new();
      v56[0] = v54;
      if (v54) {
        v56[1] = v55;
      }
      sub_244BC1560((uint64_t)&v44, (uint64_t)v53, v56);
      break;
    case 1:
    case 2:
    case 3:
      v53[0] = 0;
      sub_244CB3EFC(a2, v53, (uint64_t)&v44);
      BOOL v6 = 0;
      *(_OWORD *)a3 = v44;
      *(void *)(a3 + 16) = v45;
      if (!*(_DWORD *)a3)
      {
        BOOL v6 = objc_msgSend_numberWithUnsignedLongLong_(NSNumber, v5, v53[0]);
      }
      goto LABEL_28;
    default:
      BOOL v6 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 2873;
      goto LABEL_28;
  }
  while (sub_244BC15E4((uint64_t)&v44))
  {
    uint64_t v7 = objc_opt_new();
    id v9 = objc_msgSend_numberWithUnsignedLongLong_(NSNumber, v8, v44);
    objc_msgSend_setId_(v7, v10, (uint64_t)v9);

    if (BYTE8(v44))
    {
      long long v12 = (uint64_t *)sub_2446D18A4((unsigned char *)&v44 + 8);
      uint64_t v13 = *v12;
      uint64_t v14 = v12[1];
      id v15 = [NSString alloc];
      BOOL v17 = objc_msgSend_initWithBytes_length_encoding_(v15, v16, v13, v14, 4);
      objc_msgSend_setName_(v7, v18, (uint64_t)v17);

      uint64_t v21 = objc_msgSend_name(v7, v19, v20);

      if (!v21)
      {
        *(_OWORD *)a3 = xmmword_26519A188;
        *(void *)(a3 + 16) = 2802;

LABEL_27:
        BOOL v6 = 0;
        goto LABEL_28;
      }
    }
    else
    {
      objc_msgSend_setName_(v7, v11, 0);
    }
    if (v46[0])
    {
      uint64_t v23 = NSNumber;
      long long v24 = sub_2446F12CC(v46);
      unsigned __int8 v26 = objc_msgSend_numberWithUnsignedInt_(v23, v25, *(unsigned int *)v24);
      objc_msgSend_setStackFreeCurrent_(v7, v27, (uint64_t)v26);
    }
    else
    {
      objc_msgSend_setStackFreeCurrent_(v7, v22, 0);
    }
    if (v47[0])
    {
      id v29 = NSNumber;
      BOOL v30 = sub_2446F12CC(v47);
      int v32 = objc_msgSend_numberWithUnsignedInt_(v29, v31, *(unsigned int *)v30);
      objc_msgSend_setStackFreeMinimum_(v7, v33, (uint64_t)v32);
    }
    else
    {
      objc_msgSend_setStackFreeMinimum_(v7, v28, 0);
    }
    if (v48[0])
    {
      unsigned __int8 v35 = NSNumber;
      char v36 = sub_2446F12CC(v48);
      uint64_t v38 = objc_msgSend_numberWithUnsignedInt_(v35, v37, *(unsigned int *)v36);
      objc_msgSend_setStackSize_(v7, v39, (uint64_t)v38);
    }
    else
    {
      objc_msgSend_setStackSize_(v7, v34, 0);
    }
    objc_msgSend_addObject_(v6, v40, (uint64_t)v7);
  }
  if (v49 && v49 != 33)
  {
    uint64_t v41 = v51;
    int v42 = v50;
    *(_DWORD *)a3 = v49;
    *(_DWORD *)(a3 + 4) = v42;
    *(void *)(a3 + 8) = v41;
    *(void *)(a3 + 16) = v52;
    goto LABEL_27;
  }
LABEL_28:

  return v6;
}

void sub_244BA2290(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BA22DC(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
    case 3:
    case 10:
    case 11:
    case 12:
      LOBYTE(v155) = 0;
      BYTE2(v155) = 0;
      sub_2447EF9E0(a2, (__int16 *)&v155, (uint64_t)&v148);
      *(_OWORD *)a3 = v148;
      *(void *)(a3 + 16) = v149;
      if (*(_DWORD *)a3) {
        BOOL v8 = 1;
      }
      else {
        BOOL v8 = BYTE2(v155) == 0;
      }
      if (v8) {
        goto LABEL_3;
      }
      goto LABEL_10;
    case 1:
      LOWORD(v155) = 0;
      sub_244803B80(a2, (unsigned __int8 *)&v155, (uint64_t)&v148);
      goto LABEL_78;
    case 2:
      LOBYTE(v148) = 0;
      LOBYTE(v149) = 0;
      sub_244803C58(a2, (uint64_t)&v148, &v155);
      *(_OWORD *)a3 = v155;
      *(void *)(a3 + 16) = v156;
      if (*(_DWORD *)a3) {
        BOOL v56 = 1;
      }
      else {
        BOOL v56 = v149 == 0;
      }
      if (v56) {
        goto LABEL_3;
      }
      BOOL v6 = sub_244BBFB94(v148, *((uint64_t *)&v148 + 1));
      if (!v6)
      {
        *(_OWORD *)a3 = xmmword_26519A1A0;
        *(void *)(a3 + 16) = 2923;
      }
      break;
    case 4:
    case 56:
    case 57:
      LOBYTE(v155) = 0;
      BYTE8(v155) = 0;
      sub_2447F5E48(a2, (uint64_t)&v155, (uint64_t)&v148);
      *(_OWORD *)a3 = v148;
      *(void *)(a3 + 16) = v149;
      if (*(_DWORD *)a3) {
        BOOL v11 = 1;
      }
      else {
        BOOL v11 = BYTE8(v155) == 0;
      }
      if (!v11) {
        goto LABEL_44;
      }
      goto LABEL_3;
    case 5:
    case 60:
      LOBYTE(v148) = 0;
      LOBYTE(v149) = 0;
      sub_2447FFFFC(a2, (uint64_t)&v148, &v155);
      *(_OWORD *)a3 = v155;
      *(void *)(a3 + 16) = v156;
      if (*(_DWORD *)a3) {
        BOOL v15 = 1;
      }
      else {
        BOOL v15 = v149 == 0;
      }
      if (v15) {
        goto LABEL_3;
      }
      uint64_t v9 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v14, v148, *((void *)&v148 + 1));
      goto LABEL_21;
    case 6:
      *(void *)&long long v155 = 0;
      sub_244CB3EFC(a2, &v155, (uint64_t)&v148);
      BOOL v6 = 0;
      *(_OWORD *)a3 = v148;
      *(void *)(a3 + 16) = v149;
      if (*(_DWORD *)a3) {
        break;
      }
LABEL_44:
      uint64_t v9 = objc_msgSend_numberWithUnsignedLongLong_(NSNumber, v10, v155);
      goto LABEL_21;
    case 7:
      sub_244BC12F0((uint64_t)&v155);
      sub_24484B03C((uint64_t)&v155, a2, (uint64_t)&v148);
      *(_OWORD *)a3 = v148;
      *(void *)(a3 + 16) = v149;
      if (*(_DWORD *)a3) {
        goto LABEL_3;
      }
      BOOL v6 = objc_opt_new();
      unsigned __int8 v159 = v157;
      if (v157) {
        char v160 = v158;
      }
      sub_244BC169C((uint64_t)&v148, (uint64_t)&v155, &v159);
      while (sub_244BC1720((uint64_t)&v148))
      {
        unsigned int v97 = objc_opt_new();
        uint64_t v99 = objc_msgSend_numberWithUnsignedLongLong_(NSNumber, v98, v148);
        objc_msgSend_setExtAddress_(v97, v100, (uint64_t)v99);

        uint64_t v102 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v101, DWORD2(v148));
        objc_msgSend_setAge_(v97, v103, (uint64_t)v102);

        uint64_t v105 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v104, WORD6(v148));
        objc_msgSend_setRloc16_(v97, v106, (uint64_t)v105);

        uint64_t v108 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v107, v149);
        objc_msgSend_setLinkFrameCounter_(v97, v109, (uint64_t)v108);

        long long v111 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v110, HIDWORD(v149));
        objc_msgSend_setMleFrameCounter_(v97, v112, (uint64_t)v111);

        int v114 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v113, v150);
        objc_msgSend_setLqi_(v97, v115, (uint64_t)v114);

        if (BYTE2(v150))
        {
          unsigned __int8 v117 = objc_msgSend_numberWithChar_(NSNumber, v116, SBYTE1(v150));
          objc_msgSend_setAverageRssi_(v97, v118, (uint64_t)v117);
        }
        else
        {
          objc_msgSend_setAverageRssi_(v97, v116, 0);
        }
        if (BYTE4(v150))
        {
          int v120 = objc_msgSend_numberWithChar_(NSNumber, v119, SBYTE3(v150));
          objc_msgSend_setLastRssi_(v97, v121, (uint64_t)v120);
        }
        else
        {
          objc_msgSend_setLastRssi_(v97, v119, 0);
        }
        uint64_t v123 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v122, BYTE5(v150));
        objc_msgSend_setFrameErrorRate_(v97, v124, (uint64_t)v123);

        char v126 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v125, BYTE6(v150));
        objc_msgSend_setMessageErrorRate_(v97, v127, (uint64_t)v126);

        int v129 = objc_msgSend_numberWithBool_(NSNumber, v128, HIBYTE(v150));
        objc_msgSend_setRxOnWhenIdle_(v97, v130, (uint64_t)v129);

        uint64_t v132 = objc_msgSend_numberWithBool_(NSNumber, v131, v151);
        objc_msgSend_setFullThreadDevice_(v97, v133, (uint64_t)v132);

        unsigned __int8 v135 = objc_msgSend_numberWithBool_(NSNumber, v134, BYTE1(v151));
        objc_msgSend_setFullNetworkData_(v97, v136, (uint64_t)v135);

        uint64_t v138 = objc_msgSend_numberWithBool_(NSNumber, v137, BYTE2(v151));
        objc_msgSend_setIsChild_(v97, v139, (uint64_t)v138);

        objc_msgSend_addObject_(v6, v140, (uint64_t)v97);
      }
      if (!v152 || v152 == 33) {
        break;
      }
      uint64_t v146 = v153;
      int v147 = HIDWORD(v152);
      *(_DWORD *)a3 = v152;
      *(_DWORD *)(a3 + 4) = v147;
      *(void *)(a3 + 8) = v146;
      uint64_t v143 = v154;
      goto LABEL_104;
    case 8:
      sub_244BC12F0((uint64_t)&v155);
      sub_24484B03C((uint64_t)&v155, a2, (uint64_t)&v148);
      *(_OWORD *)a3 = v148;
      *(void *)(a3 + 16) = v149;
      if (*(_DWORD *)a3) {
        goto LABEL_3;
      }
      BOOL v6 = objc_opt_new();
      unsigned __int8 v159 = v157;
      if (v157) {
        char v160 = v158;
      }
      sub_244BC17D0((uint64_t)&v148, (uint64_t)&v155, &v159);
      while (sub_244BC1848((uint64_t)&v148))
      {
        unsigned __int8 v16 = objc_opt_new();
        long long v18 = objc_msgSend_numberWithUnsignedLongLong_(NSNumber, v17, v148);
        objc_msgSend_setExtAddress_(v16, v19, (uint64_t)v18);

        uint64_t v21 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v20, WORD4(v148));
        objc_msgSend_setRloc16_(v16, v22, (uint64_t)v21);

        long long v24 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v23, BYTE10(v148));
        objc_msgSend_setRouterId_(v16, v25, (uint64_t)v24);

        uint64_t v27 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v26, BYTE11(v148));
        objc_msgSend_setNextHop_(v16, v28, (uint64_t)v27);

        BOOL v30 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v29, BYTE12(v148));
        objc_msgSend_setPathCost_(v16, v31, (uint64_t)v30);

        BOOL v33 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v32, BYTE13(v148));
        objc_msgSend_setLqiIn_(v16, v34, (uint64_t)v33);

        char v36 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v35, BYTE14(v148));
        objc_msgSend_setLqiOut_(v16, v37, (uint64_t)v36);

        int v39 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v38, HIBYTE(v148));
        objc_msgSend_setAge_(v16, v40, (uint64_t)v39);

        int v42 = objc_msgSend_numberWithBool_(NSNumber, v41, v149);
        objc_msgSend_setAllocated_(v16, v43, (uint64_t)v42);

        uint64_t v45 = objc_msgSend_numberWithBool_(NSNumber, v44, BYTE1(v149));
        objc_msgSend_setLinkEstablished_(v16, v46, (uint64_t)v45);

        objc_msgSend_addObject_(v6, v47, (uint64_t)v16);
      }
      if (!v150 || v150 == 33) {
        break;
      }
      uint64_t v144 = v151;
      int v145 = HIDWORD(v150);
      *(_DWORD *)a3 = v150;
      *(_DWORD *)(a3 + 4) = v145;
      *(void *)(a3 + 8) = v144;
      uint64_t v143 = v152;
      goto LABEL_104;
    case 9:
    case 58:
      LOBYTE(v155) = 0;
      BYTE4(v155) = 0;
      sub_2447F4140(a2, (uint64_t)&v155, (uint64_t)&v148);
      *(_OWORD *)a3 = v148;
      *(void *)(a3 + 16) = v149;
      if (*(_DWORD *)a3) {
        BOOL v12 = 1;
      }
      else {
        BOOL v12 = BYTE4(v155) == 0;
      }
      if (!v12) {
        goto LABEL_20;
      }
      goto LABEL_3;
    case 13:
      LOWORD(v155) = 0;
      sub_2447F15BC(a2, (unsigned __int8 *)&v155, (uint64_t)&v148);
LABEL_78:
      *(_OWORD *)a3 = v148;
      *(void *)(a3 + 16) = v149;
      if (*(_DWORD *)a3) {
        BOOL v96 = 1;
      }
      else {
        BOOL v96 = BYTE1(v155) == 0;
      }
      if (v96) {
        goto LABEL_3;
      }
      uint64_t v9 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v55, v155);
      goto LABEL_21;
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
      LOWORD(v155) = 0;
      sub_244CB3F40(a2, &v155, (uint64_t)&v148);
      *(_OWORD *)a3 = v148;
      *(void *)(a3 + 16) = v149;
      if (*(_DWORD *)a3) {
        goto LABEL_3;
      }
LABEL_10:
      uint64_t v9 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v7, (unsigned __int16)v155);
      goto LABEL_21;
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
      LODWORD(v155) = 0;
      sub_244CB3FB0(a2, &v155, (uint64_t)&v148);
      *(_OWORD *)a3 = v148;
      *(void *)(a3 + 16) = v149;
      if (*(_DWORD *)a3) {
        goto LABEL_3;
      }
LABEL_20:
      uint64_t v9 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v5, v155);
LABEL_21:
      BOOL v6 = (void *)v9;
      break;
    case 59:
      LOBYTE(v155) = 0;
      BYTE4(v155) = 0;
      sub_244803CEC(a2, (uint64_t)&v155, &v148);
      *(_OWORD *)a3 = v148;
      *(void *)(a3 + 16) = v149;
      if (*(_DWORD *)a3) {
        BOOL v48 = 1;
      }
      else {
        BOOL v48 = BYTE4(v155) == 0;
      }
      if (v48) {
        goto LABEL_3;
      }
      BOOL v6 = objc_opt_new();
      if (!BYTE4(v155)
        || (objc_msgSend_numberWithUnsignedShort_(NSNumber, v49, (unsigned __int16)v155),
            int v50 = objc_claimAutoreleasedReturnValue(),
            objc_msgSend_setRotationTime_(v6, v51, (uint64_t)v50),
            v50,
            !BYTE4(v155)))
      {
        sub_24479484C();
      }
      uint64_t v53 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v52, WORD1(v155));
      objc_msgSend_setFlags_(v6, v54, (uint64_t)v53);
      goto LABEL_70;
    case 61:
      LOBYTE(v155) = 0;
      BYTE12(v155) = 0;
      sub_244803D80(a2, (uint64_t)&v155, &v148);
      *(_OWORD *)a3 = v148;
      *(void *)(a3 + 16) = v149;
      if (*(_DWORD *)a3) {
        BOOL v57 = 1;
      }
      else {
        BOOL v57 = BYTE12(v155) == 0;
      }
      if (v57) {
        goto LABEL_3;
      }
      BOOL v6 = objc_opt_new();
      if (!BYTE12(v155)) {
        goto LABEL_105;
      }
      int v59 = objc_msgSend_numberWithBool_(NSNumber, v58, v155);
      objc_msgSend_setActiveTimestampPresent_(v6, v60, (uint64_t)v59);

      if (!BYTE12(v155)) {
        goto LABEL_105;
      }
      uint64_t v62 = objc_msgSend_numberWithBool_(NSNumber, v61, BYTE1(v155));
      objc_msgSend_setPendingTimestampPresent_(v6, v63, (uint64_t)v62);

      if (!BYTE12(v155)) {
        goto LABEL_105;
      }
      int v65 = objc_msgSend_numberWithBool_(NSNumber, v64, BYTE2(v155));
      objc_msgSend_setMasterKeyPresent_(v6, v66, (uint64_t)v65);

      if (!BYTE12(v155)) {
        goto LABEL_105;
      }
      uint64_t v68 = objc_msgSend_numberWithBool_(NSNumber, v67, BYTE3(v155));
      objc_msgSend_setNetworkNamePresent_(v6, v69, (uint64_t)v68);

      if (!BYTE12(v155)) {
        goto LABEL_105;
      }
      long long v71 = objc_msgSend_numberWithBool_(NSNumber, v70, BYTE4(v155));
      objc_msgSend_setExtendedPanIdPresent_(v6, v72, (uint64_t)v71);

      if (!BYTE12(v155)) {
        goto LABEL_105;
      }
      uint64_t v74 = objc_msgSend_numberWithBool_(NSNumber, v73, BYTE5(v155));
      objc_msgSend_setMeshLocalPrefixPresent_(v6, v75, (uint64_t)v74);

      if (!BYTE12(v155)) {
        goto LABEL_105;
      }
      char v77 = objc_msgSend_numberWithBool_(NSNumber, v76, BYTE6(v155));
      objc_msgSend_setDelayPresent_(v6, v78, (uint64_t)v77);

      if (!BYTE12(v155)) {
        goto LABEL_105;
      }
      char v80 = objc_msgSend_numberWithBool_(NSNumber, v79, BYTE7(v155));
      objc_msgSend_setPanIdPresent_(v6, v81, (uint64_t)v80);

      if (!BYTE12(v155)) {
        goto LABEL_105;
      }
      int v83 = objc_msgSend_numberWithBool_(NSNumber, v82, BYTE8(v155));
      objc_msgSend_setChannelPresent_(v6, v84, (uint64_t)v83);

      if (!BYTE12(v155)) {
        goto LABEL_105;
      }
      unsigned __int8 v86 = objc_msgSend_numberWithBool_(NSNumber, v85, BYTE9(v155));
      objc_msgSend_setPskcPresent_(v6, v87, (uint64_t)v86);

      if (!BYTE12(v155)
        || (objc_msgSend_numberWithBool_(NSNumber, v88, BYTE10(v155)),
            char v89 = objc_claimAutoreleasedReturnValue(),
            objc_msgSend_setSecurityPolicyPresent_(v6, v90, (uint64_t)v89),
            v89,
            !BYTE12(v155)))
      {
LABEL_105:
        sub_24479484C();
      }
      uint64_t v53 = objc_msgSend_numberWithBool_(NSNumber, v91, BYTE11(v155));
      objc_msgSend_setChannelMaskPresent_(v6, v92, (uint64_t)v53);
LABEL_70:

      break;
    case 62:
      sub_244BC12F0((uint64_t)&v155);
      sub_24484B03C((uint64_t)&v155, a2, (uint64_t)&v148);
      *(_OWORD *)a3 = v148;
      *(void *)(a3 + 16) = v149;
      if (*(_DWORD *)a3) {
        goto LABEL_3;
      }
      BOOL v6 = objc_opt_new();
      unsigned __int8 v159 = v157;
      if (v157) {
        char v160 = v158;
      }
      sub_2446D1930((uint64_t)&v148, (uint64_t)&v155, &v159);
      while (sub_2446D19A0((uint64_t)&v148))
      {
        uint64_t v94 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v93, v148);
        objc_msgSend_addObject_(v6, v95, (uint64_t)v94);
      }
      if (DWORD2(v148) && DWORD2(v148) != 33)
      {
        uint64_t v141 = v149;
        int v142 = HIDWORD(v148);
        *(_DWORD *)a3 = DWORD2(v148);
        *(_DWORD *)(a3 + 4) = v142;
        *(void *)(a3 + 8) = v141;
        uint64_t v143 = v150;
LABEL_104:
        *(void *)(a3 + 16) = v143;

LABEL_3:
        BOOL v6 = 0;
      }
      break;
    default:
      BOOL v6 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 3742;
      break;
  }

  return v6;
}

void sub_244BA2F7C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BA3184(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
      LOBYTE(v20) = 0;
      LOBYTE(v21) = 0;
      sub_2447FFFFC(a2, (uint64_t)&v20, &v18);
      *(_OWORD *)a3 = v18;
      *(void *)(a3 + 16) = v19;
      if (*(_DWORD *)a3) {
        BOOL v15 = 1;
      }
      else {
        BOOL v15 = v21 == 0;
      }
      if (v15) {
        goto LABEL_35;
      }
      BOOL v6 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v14, v20, *((void *)&v20 + 1));
      break;
    case 1:
      LOWORD(v18) = 0;
      sub_244804260(a2, (unsigned __int8 *)&v18, (uint64_t)&v20);
      goto LABEL_30;
    case 2:
      LOWORD(v18) = 0;
      sub_244803B80(a2, (unsigned __int8 *)&v18, (uint64_t)&v20);
LABEL_30:
      *(_OWORD *)a3 = v20;
      *(void *)(a3 + 16) = v21;
      if (*(_DWORD *)a3) {
        BOOL v16 = 1;
      }
      else {
        BOOL v16 = BYTE1(v18) == 0;
      }
      if (v16) {
        goto LABEL_35;
      }
      BOOL v6 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v9, v18);
      break;
    case 3:
      LOBYTE(v18) = 0;
      BYTE2(v18) = 0;
      sub_2447EF9E0(a2, (__int16 *)&v18, (uint64_t)&v20);
      *(_OWORD *)a3 = v20;
      *(void *)(a3 + 16) = v21;
      if (*(_DWORD *)a3) {
        BOOL v11 = 1;
      }
      else {
        BOOL v11 = BYTE2(v18) == 0;
      }
      if (v11) {
        goto LABEL_35;
      }
      BOOL v6 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v10, (unsigned __int16)v18);
      break;
    case 4:
      LOWORD(v18) = 0;
      sub_244802BFC(a2, (unsigned __int8 *)&v18, (uint64_t)&v20);
      *(_OWORD *)a3 = v20;
      *(void *)(a3 + 16) = v21;
      if (*(_DWORD *)a3) {
        BOOL v13 = 1;
      }
      else {
        BOOL v13 = BYTE1(v18) == 0;
      }
      if (v13) {
        goto LABEL_35;
      }
      BOOL v6 = objc_msgSend_numberWithChar_(NSNumber, v12, (char)v18);
      break;
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
      LOBYTE(v18) = 0;
      BYTE4(v18) = 0;
      sub_2447F4140(a2, (uint64_t)&v18, (uint64_t)&v20);
      *(_OWORD *)a3 = v20;
      *(void *)(a3 + 16) = v21;
      if (*(_DWORD *)a3) {
        BOOL v5 = 1;
      }
      else {
        BOOL v5 = BYTE4(v18) == 0;
      }
      if (v5) {
        goto LABEL_35;
      }
      BOOL v6 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v4, v18);
      break;
    case 11:
    case 12:
      LOBYTE(v18) = 0;
      BYTE8(v18) = 0;
      sub_2447F5E48(a2, (uint64_t)&v18, (uint64_t)&v20);
      *(_OWORD *)a3 = v20;
      *(void *)(a3 + 16) = v21;
      if (*(_DWORD *)a3) {
        BOOL v8 = 1;
      }
      else {
        BOOL v8 = BYTE8(v18) == 0;
      }
      if (v8)
      {
LABEL_35:
        BOOL v6 = 0;
      }
      else
      {
        BOOL v6 = objc_msgSend_numberWithUnsignedLongLong_(NSNumber, v7, v18);
      }
      break;
    default:
      BOOL v6 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 3949;
      break;
  }

  return v6;
}

id sub_244BA3450(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
      LOWORD(v11) = 0;
      sub_2448048C0(a2, (unsigned __int8 *)&v11, (uint64_t)&v12);
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        BOOL v9 = 1;
      }
      else {
        BOOL v9 = BYTE1(v11) == 0;
      }
      if (v9) {
        goto LABEL_14;
      }
      BOOL v5 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v8, v11);
      break;
    case 1:
    case 7:
      LOWORD(v11) = 0;
      sub_244800BF4(a2, (char *)&v11, &v12);
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        BOOL v7 = 1;
      }
      else {
        BOOL v7 = BYTE1(v11) == 0;
      }
      if (v7)
      {
LABEL_14:
        BOOL v5 = 0;
      }
      else
      {
        BOOL v5 = objc_msgSend_numberWithBool_(NSNumber, v6, v11);
      }
      break;
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 8:
      uint64_t v11 = 0;
      sub_244CB3EFC(a2, &v11, (uint64_t)&v12);
      BOOL v5 = 0;
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (!*(_DWORD *)a3)
      {
        BOOL v5 = objc_msgSend_numberWithUnsignedLongLong_(NSNumber, v4, v11);
      }
      break;
    default:
      BOOL v5 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 4072;
      break;
  }

  return v5;
}

id sub_244BA35EC(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
    case 7:
      LOBYTE(v66) = 0;
      BYTE8(v66) = 0;
      sub_2447F5E48(a2, (uint64_t)&v66, (uint64_t)&v58);
      *(_OWORD *)a3 = v58;
      *(void *)(a3 + 16) = v59;
      if (*(_DWORD *)a3) {
        BOOL v6 = 1;
      }
      else {
        BOOL v6 = BYTE8(v66) == 0;
      }
      if (v6) {
        goto LABEL_47;
      }
      uint64_t v7 = objc_msgSend_numberWithUnsignedLongLong_(NSNumber, v5, v66);
      goto LABEL_49;
    case 1:
      LOBYTE(v66) = 0;
      sub_2447FACE4(a2, &v66, &v58);
      goto LABEL_46;
    case 2:
      LOBYTE(v66) = 0;
      sub_2448061FC(a2, &v66, &v58);
      goto LABEL_46;
    case 3:
      LOBYTE(v58) = 0;
      char v60 = 0;
      sub_244806260(a2, (uint64_t)&v58, &v66);
      *(_OWORD *)a3 = v66;
      *(void *)(a3 + 16) = v67;
      if (*(_DWORD *)a3) {
        BOOL v10 = 1;
      }
      else {
        BOOL v10 = v60 == 0;
      }
      if (v10) {
        goto LABEL_47;
      }
      long long v12 = objc_opt_new();
      if (!v60) {
        goto LABEL_62;
      }
      uint64_t v13 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v11, v58);
      objc_msgSend_setFabricIndex_(v12, v14, (uint64_t)v13);

      if (!v60
        || (objc_msgSend_numberWithUnsignedLongLong_(NSNumber, v15, *((uint64_t *)&v58 + 1)),
            BOOL v16 = objc_claimAutoreleasedReturnValue(),
            objc_msgSend_setNodeID_(v12, v17, (uint64_t)v16),
            v16,
            !v60))
      {
LABEL_62:
        sub_24479484C();
      }
      uint64_t v19 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v18, (unsigned __int16)v59);
      objc_msgSend_setEndpoint_(v12, v20, (uint64_t)v19);

      goto LABEL_51;
    case 4:
      LOBYTE(v58) = 0;
      LOBYTE(v59) = 0;
      sub_244803C58(a2, (uint64_t)&v58, &v66);
      *(_OWORD *)a3 = v66;
      *(void *)(a3 + 16) = v67;
      if (*(_DWORD *)a3) {
        BOOL v32 = 1;
      }
      else {
        BOOL v32 = v59 == 0;
      }
      if (v32) {
        goto LABEL_47;
      }
      long long v12 = sub_244BBFB94(v58, *((uint64_t *)&v58 + 1));
      if (!v12)
      {
        *(_OWORD *)a3 = xmmword_26519A1B8;
        *(void *)(a3 + 16) = 4147;
      }
      goto LABEL_51;
    case 5:
      sub_244CB3988((uint64_t)&v66);
      unsigned __int8 v68 = 0;
      sub_244CB39B8((uint64_t)&v66, 0, 0);
      sub_24484B03C((uint64_t)&v66, a2, (uint64_t)&v58);
      *(_OWORD *)a3 = v58;
      *(void *)(a3 + 16) = v59;
      if (*(_DWORD *)a3) {
        goto LABEL_47;
      }
      long long v12 = objc_opt_new();
      unsigned __int8 v70 = v68;
      if (v68) {
        char v71 = v69;
      }
      sub_244BC18F4((uint64_t)&v58, (uint64_t)&v66, &v70);
      break;
    case 6:
      sub_244CB3988((uint64_t)&v66);
      unsigned __int8 v68 = 0;
      sub_244CB39B8((uint64_t)&v66, 0, 0);
      sub_24484B03C((uint64_t)&v66, a2, (uint64_t)&v58);
      *(_OWORD *)a3 = v58;
      *(void *)(a3 + 16) = v59;
      if (*(_DWORD *)a3) {
        goto LABEL_47;
      }
      long long v12 = objc_opt_new();
      unsigned __int8 v70 = v68;
      if (v68) {
        char v71 = v69;
      }
      sub_244BC1A1C((uint64_t)&v58, (uint64_t)&v66, &v70);
      while (sub_244BC1A9C((uint64_t)&v58))
      {
        uint64_t v21 = objc_opt_new();
        uint64_t v23 = objc_msgSend_numberWithInt_(NSNumber, v22, v58);
        objc_msgSend_setOffset_(v21, v24, (uint64_t)v23);

        unsigned __int8 v26 = objc_msgSend_numberWithUnsignedLongLong_(NSNumber, v25, *((uint64_t *)&v58 + 1));
        objc_msgSend_setValidStarting_(v21, v27, (uint64_t)v26);

        if (v60)
        {
          id v29 = objc_msgSend_numberWithUnsignedLongLong_(NSNumber, v28, v59);
          objc_msgSend_setValidUntil_(v21, v30, (uint64_t)v29);
        }
        else
        {
          objc_msgSend_setValidUntil_(v21, v28, 0);
        }
        objc_msgSend_addObject_(v12, v31, (uint64_t)v21);
      }
      if (!v61 || v61 == 33) {
        goto LABEL_51;
      }
      uint64_t v53 = v63;
      int v54 = v62;
      *(_DWORD *)a3 = v61;
      *(_DWORD *)(a3 + 4) = v54;
      *(void *)(a3 + 8) = v53;
      uint64_t v55 = v64;
      goto LABEL_60;
    case 8:
      LOBYTE(v66) = 0;
      sub_2447F5F24(a2, &v66, &v58);
      goto LABEL_46;
    case 9:
    case 12:
      LOBYTE(v66) = 0;
      sub_244CB3C0C(a2, (char *)&v66, (uint64_t)&v58);
      *(_OWORD *)a3 = v58;
      *(void *)(a3 + 16) = v59;
      if (*(_DWORD *)a3) {
        goto LABEL_47;
      }
      uint64_t v7 = objc_msgSend_numberWithBool_(NSNumber, v9, v66);
      goto LABEL_49;
    case 10:
    case 11:
      LOBYTE(v66) = 0;
      sub_244CB3E8C(a2, &v66, (uint64_t)&v58);
LABEL_46:
      *(_OWORD *)a3 = v58;
      *(void *)(a3 + 16) = v59;
      if (*(_DWORD *)a3) {
        goto LABEL_47;
      }
      uint64_t v7 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v8, v66);
LABEL_49:
      long long v12 = (void *)v7;
      goto LABEL_51;
    default:
      long long v12 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 4300;
      goto LABEL_51;
  }
  while (sub_244BC1970((uint64_t)&v58))
  {
    BOOL v33 = objc_opt_new();
    unsigned __int8 v35 = objc_msgSend_numberWithInt_(NSNumber, v34, v58);
    objc_msgSend_setOffset_(v33, v36, (uint64_t)v35);

    uint64_t v38 = objc_msgSend_numberWithUnsignedLongLong_(NSNumber, v37, *((uint64_t *)&v58 + 1));
    objc_msgSend_setValidAt_(v33, v39, (uint64_t)v38);

    if ((_BYTE)v59)
    {
      uint64_t v41 = (uint64_t *)sub_2446D18A4(&v59);
      uint64_t v42 = *v41;
      uint64_t v43 = v41[1];
      id v44 = [NSString alloc];
      uint64_t v46 = objc_msgSend_initWithBytes_length_encoding_(v44, v45, v42, v43, 4);
      objc_msgSend_setName_(v33, v47, (uint64_t)v46);

      int v50 = objc_msgSend_name(v33, v48, v49);

      if (!v50)
      {
        *(_OWORD *)a3 = xmmword_26519A1D0;
        *(void *)(a3 + 16) = 4174;

        goto LABEL_61;
      }
    }
    else
    {
      objc_msgSend_setName_(v33, v40, 0);
    }
    objc_msgSend_addObject_(v12, v51, (uint64_t)v33);
  }
  if (!v63 || v63 == 33) {
    goto LABEL_51;
  }
  uint64_t v56 = v64;
  int v57 = HIDWORD(v63);
  *(_DWORD *)a3 = v63;
  *(_DWORD *)(a3 + 4) = v57;
  *(void *)(a3 + 8) = v56;
  uint64_t v55 = v65;
LABEL_60:
  *(void *)(a3 + 16) = v55;
LABEL_61:

LABEL_47:
  long long v12 = 0;
LABEL_51:

  return v12;
}

void sub_244BA3C30(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BA3CDC(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 1:
      long long v64 = 0uLL;
      sub_244CB41F0(a2, &v64, &v62);
      BOOL v5 = 0;
      *(_OWORD *)a3 = v62;
      *(void *)(a3 + 16) = v63;
      if (!*(_DWORD *)a3)
      {
        uint64_t v7 = *((void *)&v64 + 1);
        uint64_t v6 = v64;
        id v8 = [NSString alloc];
        BOOL v5 = objc_msgSend_initWithBytes_length_encoding_(v8, v9, v6, v7, 4);
        if (v5) {
          goto LABEL_45;
        }
        BOOL v10 = &xmmword_26519A1E8;
        goto LABEL_51;
      }
      goto LABEL_53;
    case 2:
      LOWORD(v64) = 0;
      long long v62 = 0uLL;
      uint64_t v63 = 0;
      sub_24484B11C(a2, &v64, &v62);
      if (!v62)
      {
        LODWORD(v62) = 0;
        *((void *)&v62 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
        LODWORD(v63) = 61;
      }
      goto LABEL_8;
    case 3:
      long long v64 = 0uLL;
      sub_244CB41F0(a2, &v64, &v62);
      BOOL v5 = 0;
      *(_OWORD *)a3 = v62;
      *(void *)(a3 + 16) = v63;
      if (*(_DWORD *)a3) {
        goto LABEL_53;
      }
      uint64_t v13 = *((void *)&v64 + 1);
      uint64_t v12 = v64;
      id v14 = [NSString alloc];
      BOOL v5 = objc_msgSend_initWithBytes_length_encoding_(v14, v15, v12, v13, 4);
      if (v5) {
        goto LABEL_45;
      }
      BOOL v10 = &xmmword_26519A200;
      goto LABEL_51;
    case 4:
    case 7:
      LOWORD(v64) = 0;
      sub_244CB3F40(a2, &v64, (uint64_t)&v62);
LABEL_8:
      *(_OWORD *)a3 = v62;
      *(void *)(a3 + 16) = v63;
      if (*(_DWORD *)a3) {
        goto LABEL_47;
      }
      uint64_t v11 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v4, (unsigned __int16)v64);
      goto LABEL_42;
    case 5:
      long long v64 = 0uLL;
      sub_244CB41F0(a2, &v64, &v62);
      BOOL v5 = 0;
      *(_OWORD *)a3 = v62;
      *(void *)(a3 + 16) = v63;
      if (*(_DWORD *)a3) {
        goto LABEL_53;
      }
      uint64_t v17 = *((void *)&v64 + 1);
      uint64_t v16 = v64;
      id v18 = [NSString alloc];
      BOOL v5 = objc_msgSend_initWithBytes_length_encoding_(v18, v19, v16, v17, 4);
      if (v5) {
        goto LABEL_45;
      }
      BOOL v10 = &xmmword_26519A218;
      goto LABEL_51;
    case 8:
      long long v64 = 0uLL;
      sub_244CB41F0(a2, &v64, &v62);
      BOOL v5 = 0;
      *(_OWORD *)a3 = v62;
      *(void *)(a3 + 16) = v63;
      if (*(_DWORD *)a3) {
        goto LABEL_53;
      }
      uint64_t v21 = *((void *)&v64 + 1);
      uint64_t v20 = v64;
      id v22 = [NSString alloc];
      BOOL v5 = objc_msgSend_initWithBytes_length_encoding_(v22, v23, v20, v21, 4);
      if (v5) {
        goto LABEL_45;
      }
      BOOL v10 = &xmmword_26519A230;
      goto LABEL_51;
    case 9:
      LODWORD(v64) = 0;
      sub_244CB3FB0(a2, &v64, (uint64_t)&v62);
      *(_OWORD *)a3 = v62;
      *(void *)(a3 + 16) = v63;
      if (*(_DWORD *)a3) {
        goto LABEL_47;
      }
      uint64_t v11 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v24, v64);
      goto LABEL_42;
    case 10:
      long long v64 = 0uLL;
      sub_244CB41F0(a2, &v64, &v62);
      BOOL v5 = 0;
      *(_OWORD *)a3 = v62;
      *(void *)(a3 + 16) = v63;
      if (*(_DWORD *)a3) {
        goto LABEL_53;
      }
      uint64_t v26 = *((void *)&v64 + 1);
      uint64_t v25 = v64;
      id v27 = [NSString alloc];
      BOOL v5 = objc_msgSend_initWithBytes_length_encoding_(v27, v28, v25, v26, 4);
      if (v5) {
        goto LABEL_45;
      }
      BOOL v10 = &xmmword_26519A248;
      goto LABEL_51;
    case 11:
      long long v64 = 0uLL;
      sub_244CB41F0(a2, &v64, &v62);
      BOOL v5 = 0;
      *(_OWORD *)a3 = v62;
      *(void *)(a3 + 16) = v63;
      if (*(_DWORD *)a3) {
        goto LABEL_53;
      }
      uint64_t v30 = *((void *)&v64 + 1);
      uint64_t v29 = v64;
      id v31 = [NSString alloc];
      BOOL v5 = objc_msgSend_initWithBytes_length_encoding_(v31, v32, v29, v30, 4);
      if (v5) {
        goto LABEL_45;
      }
      BOOL v10 = &xmmword_26519A260;
      goto LABEL_51;
    case 12:
      long long v64 = 0uLL;
      sub_244CB41F0(a2, &v64, &v62);
      BOOL v5 = 0;
      *(_OWORD *)a3 = v62;
      *(void *)(a3 + 16) = v63;
      if (*(_DWORD *)a3) {
        goto LABEL_53;
      }
      uint64_t v34 = *((void *)&v64 + 1);
      uint64_t v33 = v64;
      id v35 = [NSString alloc];
      BOOL v5 = objc_msgSend_initWithBytes_length_encoding_(v35, v36, v33, v34, 4);
      if (v5) {
        goto LABEL_45;
      }
      BOOL v10 = &xmmword_26519A278;
      goto LABEL_51;
    case 13:
      long long v64 = 0uLL;
      sub_244CB41F0(a2, &v64, &v62);
      BOOL v5 = 0;
      *(_OWORD *)a3 = v62;
      *(void *)(a3 + 16) = v63;
      if (*(_DWORD *)a3) {
        goto LABEL_53;
      }
      uint64_t v38 = *((void *)&v64 + 1);
      uint64_t v37 = v64;
      id v39 = [NSString alloc];
      BOOL v5 = objc_msgSend_initWithBytes_length_encoding_(v39, v40, v37, v38, 4);
      if (v5) {
        goto LABEL_45;
      }
      BOOL v10 = &xmmword_26519A290;
      goto LABEL_51;
    case 14:
      long long v64 = 0uLL;
      sub_244CB41F0(a2, &v64, &v62);
      BOOL v5 = 0;
      *(_OWORD *)a3 = v62;
      *(void *)(a3 + 16) = v63;
      if (*(_DWORD *)a3) {
        goto LABEL_53;
      }
      uint64_t v42 = *((void *)&v64 + 1);
      uint64_t v41 = v64;
      id v43 = [NSString alloc];
      BOOL v5 = objc_msgSend_initWithBytes_length_encoding_(v43, v44, v41, v42, 4);
      if (v5) {
        goto LABEL_45;
      }
      BOOL v10 = &xmmword_26519A2A8;
      goto LABEL_51;
    case 15:
      long long v64 = 0uLL;
      sub_244CB41F0(a2, &v64, &v62);
      BOOL v5 = 0;
      *(_OWORD *)a3 = v62;
      *(void *)(a3 + 16) = v63;
      if (*(_DWORD *)a3) {
        goto LABEL_53;
      }
      uint64_t v46 = *((void *)&v64 + 1);
      uint64_t v45 = v64;
      id v47 = [NSString alloc];
      BOOL v5 = objc_msgSend_initWithBytes_length_encoding_(v47, v48, v45, v46, 4);
      if (v5) {
        goto LABEL_45;
      }
      BOOL v10 = &xmmword_26519A2C0;
      goto LABEL_51;
    case 17:
      LOBYTE(v64) = 0;
      sub_244CB3C0C(a2, (char *)&v64, (uint64_t)&v62);
      *(_OWORD *)a3 = v62;
      *(void *)(a3 + 16) = v63;
      if (*(_DWORD *)a3) {
        goto LABEL_47;
      }
      uint64_t v11 = objc_msgSend_numberWithBool_(NSNumber, v49, v64);
LABEL_42:
      BOOL v5 = (void *)v11;
      goto LABEL_53;
    case 18:
      long long v64 = 0uLL;
      sub_244CB41F0(a2, &v64, &v62);
      BOOL v5 = 0;
      *(_OWORD *)a3 = v62;
      *(void *)(a3 + 16) = v63;
      if (*(_DWORD *)a3) {
        goto LABEL_53;
      }
      uint64_t v51 = *((void *)&v64 + 1);
      uint64_t v50 = v64;
      id v52 = [NSString alloc];
      BOOL v5 = objc_msgSend_initWithBytes_length_encoding_(v52, v53, v50, v51, 4);
      if (v5)
      {
LABEL_45:
        id v54 = v5;
      }
      else
      {
        BOOL v10 = &xmmword_26519A2D8;
LABEL_51:
        *(_OWORD *)a3 = *v10;
        *(void *)(a3 + 16) = *((void *)v10 + 2);
      }

LABEL_53:
      return v5;
    case 20:
      LOWORD(v64) = 0;
      BYTE2(v64) = 0;
      sub_2448065A4(&v64, a2, (uint64_t)&v62);
      *(_OWORD *)a3 = v62;
      *(void *)(a3 + 16) = v63;
      if (*(_DWORD *)a3)
      {
LABEL_47:
        BOOL v5 = 0;
      }
      else
      {
        BOOL v5 = objc_opt_new();
        uint64_t v56 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v55, v64);
        objc_msgSend_setFinish_(v5, v57, (uint64_t)v56);

        if (BYTE2(v64))
        {
          uint64_t v59 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v58, BYTE1(v64));
          objc_msgSend_setPrimaryColor_(v5, v60, (uint64_t)v59);
        }
        else
        {
          objc_msgSend_setPrimaryColor_(v5, v58, 0);
        }
      }
      goto LABEL_53;
    default:
      BOOL v5 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 4560;
      goto LABEL_53;
  }
}

void sub_244BA43A8(_Unwind_Exception *a1)
{
  id v3 = v1;

  _Unwind_Resume(a1);
}

id sub_244BA4420(unsigned int a1, uint64_t a2, uint64_t a3)
{
  if (a1 > 2)
  {
    BOOL v5 = 0;
    *(_DWORD *)a3 = 181;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "zap-generated/MTRAttributeTLVValueDecoder.mm";
    *(_DWORD *)(a3 + 16) = 4605;
  }
  else
  {
    unsigned __int8 v9 = 0;
    sub_244CB3E8C(a2, &v9, (uint64_t)&v7);
    *(_OWORD *)a3 = v7;
    *(void *)(a3 + 16) = v8;
    if (*(_DWORD *)a3)
    {
      BOOL v5 = 0;
    }
    else
    {
      BOOL v5 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v4, v9);
    }
  }

  return v5;
}

id sub_244BA44DC(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 2:
      LOBYTE(v9) = 0;
      char v10 = 0;
      sub_2447F38E4(a2, (__int16 *)&v9, (uint64_t)&v11);
      *(_OWORD *)a3 = v11;
      *(void *)(a3 + 16) = v12;
      if (*(_DWORD *)a3) {
        BOOL v7 = 1;
      }
      else {
        BOOL v7 = v10 == 0;
      }
      if (!v7)
      {
        BOOL v5 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v6, v9);
        break;
      }
      goto LABEL_14;
    case 1:
      unsigned __int16 v9 = 0;
      sub_2447F15BC(a2, (unsigned __int8 *)&v9, (uint64_t)&v11);
      BOOL v5 = 0;
      *(_OWORD *)a3 = v11;
      *(void *)(a3 + 16) = v12;
      if (!*(_DWORD *)a3 && HIBYTE(v9)) {
        goto LABEL_8;
      }
      break;
    case 0:
      LOBYTE(v9) = 0;
      sub_2447F5F24(a2, &v9, &v11);
      *(_OWORD *)a3 = v11;
      *(void *)(a3 + 16) = v12;
      if (!*(_DWORD *)a3)
      {
LABEL_8:
        BOOL v5 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v4, v9);
        break;
      }
LABEL_14:
      BOOL v5 = 0;
      break;
    default:
      BOOL v5 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 4658;
      break;
  }

  return v5;
}

id sub_244BA4628(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
      sub_244CB3988((uint64_t)v65);
      unsigned __int8 v66 = 0;
      sub_244CB39B8((uint64_t)v65, 0, 0);
      sub_24484B03C((uint64_t)v65, a2, (uint64_t)&v55);
      *(_OWORD *)a3 = v55;
      *(void *)(a3 + 16) = v56;
      if (*(_DWORD *)a3) {
        goto LABEL_39;
      }
      uint64_t v6 = objc_opt_new();
      unsigned __int8 v68 = v66;
      if (v66) {
        char v69 = v67;
      }
      sub_244BC1BD8((uint64_t)&v55, (uint64_t)v65, &v68);
      while (sub_244BC1B48((uint64_t)&v55))
      {
        BOOL v7 = objc_opt_new();
        unsigned __int16 v9 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v8, v55, *((void *)&v55 + 1));
        objc_msgSend_setNoc_(v7, v10, (uint64_t)v9);

        if ((_BYTE)v58)
        {
          uint64_t v12 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v11, v56, v57);
          objc_msgSend_setIcac_(v7, v13, (uint64_t)v12);
        }
        else
        {
          objc_msgSend_setIcac_(v7, v11, 0);
        }
        BOOL v15 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v14, v59);
        objc_msgSend_setFabricIndex_(v7, v16, (uint64_t)v15);

        objc_msgSend_addObject_(v6, v17, (uint64_t)v7);
      }
      if (v60 && v60 != 33)
      {
        uint64_t v50 = v61;
        int v51 = HIDWORD(v60);
        *(_DWORD *)a3 = v60;
        *(_DWORD *)(a3 + 4) = v51;
        *(void *)(a3 + 8) = v50;
        uint64_t v49 = v62;
        goto LABEL_36;
      }
      goto LABEL_40;
    case 1:
      sub_244CB3988((uint64_t)v65);
      unsigned __int8 v66 = 0;
      sub_244CB39B8((uint64_t)v65, 0, 0);
      sub_24484B03C((uint64_t)v65, a2, (uint64_t)&v55);
      *(_OWORD *)a3 = v55;
      *(void *)(a3 + 16) = v56;
      if (*(_DWORD *)a3) {
        goto LABEL_39;
      }
      uint64_t v6 = objc_opt_new();
      unsigned __int8 v68 = v66;
      if (v66) {
        char v69 = v67;
      }
      sub_244BC1D44((uint64_t)&v55, (uint64_t)v65, &v68);
      while (sub_244BC1B90((uint64_t)&v55))
      {
        id v18 = objc_opt_new();
        uint64_t v20 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v19, v55, *((void *)&v55 + 1));
        objc_msgSend_setRootPublicKey_(v18, v21, (uint64_t)v20);

        uint64_t v23 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v22, (unsigned __int16)v56);
        objc_msgSend_setVendorID_(v18, v24, (uint64_t)v23);

        uint64_t v26 = objc_msgSend_numberWithUnsignedLongLong_(NSNumber, v25, v57);
        objc_msgSend_setFabricID_(v18, v27, (uint64_t)v26);

        uint64_t v29 = objc_msgSend_numberWithUnsignedLongLong_(NSNumber, v28, v58);
        objc_msgSend_setNodeID_(v18, v30, (uint64_t)v29);

        uint64_t v31 = v59;
        uint64_t v32 = v60;
        id v33 = [NSString alloc];
        id v35 = objc_msgSend_initWithBytes_length_encoding_(v33, v34, v31, v32, 4);
        objc_msgSend_setLabel_(v18, v36, (uint64_t)v35);

        id v39 = objc_msgSend_label(v18, v37, v38);

        if (!v39)
        {
          *(_OWORD *)a3 = xmmword_26519A2F0;
          *(void *)(a3 + 16) = 4719;

          goto LABEL_38;
        }
        uint64_t v41 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v40, v61);
        objc_msgSend_setFabricIndex_(v18, v42, (uint64_t)v41);

        objc_msgSend_addObject_(v6, v43, (uint64_t)v18);
      }
      if (v62 && v62 != 33)
      {
        uint64_t v52 = v63;
        int v53 = HIDWORD(v62);
        *(_DWORD *)a3 = v62;
        *(_DWORD *)(a3 + 4) = v53;
        *(void *)(a3 + 8) = v52;
        uint64_t v49 = v64;
        goto LABEL_36;
      }
      goto LABEL_40;
    case 2:
    case 3:
    case 5:
      v65[0] = 0;
      sub_244CB3E8C(a2, v65, (uint64_t)&v55);
      *(_OWORD *)a3 = v55;
      *(void *)(a3 + 16) = v56;
      if (*(_DWORD *)a3) {
        goto LABEL_39;
      }
      uint64_t v6 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v5, v65[0]);
      goto LABEL_40;
    case 4:
      sub_244CB3988((uint64_t)v65);
      unsigned __int8 v66 = 0;
      sub_244CB39B8((uint64_t)v65, 0, 0);
      sub_24484B03C((uint64_t)v65, a2, (uint64_t)&v55);
      *(_OWORD *)a3 = v55;
      *(void *)(a3 + 16) = v56;
      if (*(_DWORD *)a3) {
        goto LABEL_39;
      }
      uint64_t v6 = objc_opt_new();
      unsigned __int8 v68 = v66;
      if (v66) {
        char v69 = v67;
      }
      sub_244797544((uint64_t)&v55, (uint64_t)v65, &v68);
      while (sub_244798B84((uint64_t)&v55))
      {
        uint64_t v45 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v44, v55, *((void *)&v55 + 1));
        objc_msgSend_addObject_(v6, v46, (uint64_t)v45);
      }
      if (v56 && v56 != 33)
      {
        uint64_t v47 = v57;
        int v48 = HIDWORD(v56);
        *(_DWORD *)a3 = v56;
        *(_DWORD *)(a3 + 4) = v48;
        *(void *)(a3 + 8) = v47;
        uint64_t v49 = v58;
LABEL_36:
        *(void *)(a3 + 16) = v49;
LABEL_38:

LABEL_39:
        uint64_t v6 = 0;
      }
LABEL_40:
      return v6;
    default:
      uint64_t v6 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 4799;
      goto LABEL_40;
  }
}

void sub_244BA4B88(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BA4C30(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
      sub_244CB3988((uint64_t)&v50);
      unsigned __int8 v55 = 0;
      sub_244CB39B8((uint64_t)&v50, 0, 0);
      sub_24484B03C((uint64_t)&v50, a2, (uint64_t)&v57);
      *(_OWORD *)a3 = v57;
      *(void *)(a3 + 16) = v58;
      if (*(_DWORD *)a3) {
        goto LABEL_38;
      }
      uint64_t v6 = objc_opt_new();
      v67[0] = v55;
      if (v55) {
        v67[1] = v56;
      }
      sub_244796C7C((uint64_t)&v57, (uint64_t)&v50, v67);
      while (sub_244BC1E80((uint64_t)&v57))
      {
        BOOL v7 = objc_opt_new();
        unsigned __int16 v9 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v8, (unsigned __int16)v57);
        objc_msgSend_setGroupId_(v7, v10, (uint64_t)v9);

        uint64_t v12 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v11, WORD1(v57));
        objc_msgSend_setGroupKeySetID_(v7, v13, (uint64_t)v12);

        BOOL v15 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v14, BYTE4(v57));
        objc_msgSend_setFabricIndex_(v7, v16, (uint64_t)v15);

        objc_msgSend_addObject_(v6, v17, (uint64_t)v7);
      }
      if (DWORD2(v57) && DWORD2(v57) != 33)
      {
        uint64_t v42 = v58;
        int v43 = HIDWORD(v57);
        *(_DWORD *)a3 = DWORD2(v57);
        *(_DWORD *)(a3 + 4) = v43;
        *(void *)(a3 + 8) = v42;
        uint64_t v44 = v59;
        goto LABEL_34;
      }
      goto LABEL_39;
    case 1:
      sub_244CB3988((uint64_t)v67);
      char v68 = 0;
      sub_244CB39B8(v18, 0, 0);
      sub_24484B03C((uint64_t)v67, a2, (uint64_t)&v57);
      *(_OWORD *)a3 = v57;
      *(void *)(a3 + 16) = v58;
      if (*(_DWORD *)a3) {
        goto LABEL_38;
      }
      uint64_t v6 = objc_opt_new();
      LOBYTE(v50) = v68;
      if (v68) {
        BYTE1(v50) = v69;
      }
      sub_244BC1FBC((uint64_t)&v57, (uint64_t)v67, (unsigned __int8 *)&v50);
      break;
    case 2:
    case 3:
      LOWORD(v50) = 0;
      sub_244CB3F40(a2, &v50, (uint64_t)&v57);
      *(_OWORD *)a3 = v57;
      *(void *)(a3 + 16) = v58;
      if (*(_DWORD *)a3)
      {
LABEL_38:
        uint64_t v6 = 0;
      }
      else
      {
        uint64_t v6 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v5, (unsigned __int16)v50);
      }
      goto LABEL_39;
    default:
      uint64_t v6 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 4916;
      goto LABEL_39;
  }
  while (sub_244BC1EC8((uint64_t)&v57))
  {
    uint64_t v19 = objc_opt_new();
    uint64_t v21 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v20, (unsigned __int16)v57);
    objc_msgSend_setGroupId_(v19, v22, (uint64_t)v21);

    uint64_t v23 = objc_opt_new();
    v70[0] = v60;
    if (v60) {
      v70[1] = v61;
    }
    sub_2446D1930((uint64_t)&v50, (uint64_t)&v57 + 8, v70);
    while (sub_244794970((uint64_t)&v50))
    {
      uint64_t v25 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v24, (unsigned __int16)v50);
      objc_msgSend_addObject_(v23, v26, (uint64_t)v25);
    }
    if (v51 && v51 != 33)
    {
      uint64_t v47 = v53;
      int v48 = v52;
      *(_DWORD *)a3 = v51;
      *(_DWORD *)(a3 + 4) = v48;
      *(void *)(a3 + 8) = v47;
      *(void *)(a3 + 16) = v54;

LABEL_36:
LABEL_37:

      goto LABEL_38;
    }
    objc_msgSend_setEndpoints_(v19, v24, (uint64_t)v23, v50);

    if (v62[0])
    {
      int v28 = (uint64_t *)sub_2446D18A4(v62);
      uint64_t v29 = *v28;
      uint64_t v30 = v28[1];
      id v31 = [NSString alloc];
      id v33 = objc_msgSend_initWithBytes_length_encoding_(v31, v32, v29, v30, 4);
      objc_msgSend_setGroupName_(v19, v34, (uint64_t)v33);

      uint64_t v37 = objc_msgSend_groupName(v19, v35, v36);

      if (!v37)
      {
        *(_OWORD *)a3 = xmmword_26519A308;
        *(void *)(a3 + 16) = 4870;
        goto LABEL_36;
      }
    }
    else
    {
      objc_msgSend_setGroupName_(v19, v27, 0);
    }
    id v39 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v38, v62[24]);
    objc_msgSend_setFabricIndex_(v19, v40, (uint64_t)v39);

    objc_msgSend_addObject_(v6, v41, (uint64_t)v19);
  }
  if (v63 && v63 != 33)
  {
    uint64_t v45 = v65;
    int v46 = v64;
    *(_DWORD *)a3 = v63;
    *(_DWORD *)(a3 + 4) = v46;
    *(void *)(a3 + 8) = v45;
    uint64_t v44 = v66;
LABEL_34:
    *(void *)(a3 + 16) = v44;
    goto LABEL_37;
  }
LABEL_39:

  return v6;
}

void sub_244BA50E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BA5184(int a1, uint64_t a2, uint64_t a3)
{
  if (a1)
  {
    id v4 = 0;
    *(_DWORD *)a3 = 181;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "zap-generated/MTRAttributeTLVValueDecoder.mm";
    *(_DWORD *)(a3 + 16) = 4966;
  }
  else
  {
    sub_244CB3988((uint64_t)v36);
    unsigned __int8 v37 = 0;
    sub_244CB39B8((uint64_t)v36, 0, 0);
    sub_24484B03C((uint64_t)v36, a2, (uint64_t)&v29);
    id v4 = 0;
    *(_OWORD *)a3 = v29;
    *(void *)(a3 + 16) = v30;
    if (!*(_DWORD *)a3)
    {
      id v4 = objc_opt_new();
      v39[0] = v37;
      if (v37) {
        v39[1] = v38;
      }
      sub_244797780((uint64_t)&v29, (uint64_t)v36, v39);
      while (sub_244BC2178((uint64_t)&v29))
      {
        uint64_t v6 = objc_opt_new();
        long long v7 = v29;
        id v8 = [NSString alloc];
        char v10 = objc_msgSend_initWithBytes_length_encoding_(v8, v9, v7, *((void *)&v7 + 1), 4);
        objc_msgSend_setLabel_(v6, v11, (uint64_t)v10);

        id v14 = objc_msgSend_label(v6, v12, v13);

        if (!v14)
        {
          id v27 = &xmmword_26519A320;
          goto LABEL_16;
        }
        uint64_t v15 = v30;
        uint64_t v16 = v31;
        id v17 = [NSString alloc];
        uint64_t v19 = objc_msgSend_initWithBytes_length_encoding_(v17, v18, v15, v16, 4);
        objc_msgSend_setValue_(v6, v20, (uint64_t)v19);

        uint64_t v23 = objc_msgSend_value(v6, v21, v22);

        if (!v23)
        {
          id v27 = &xmmword_26519A338;
LABEL_16:
          *(_OWORD *)a3 = *v27;
          *(void *)(a3 + 16) = *((void *)v27 + 2);

LABEL_17:
          id v4 = 0;
          goto LABEL_18;
        }
        objc_msgSend_addObject_(v4, v24, (uint64_t)v6);
      }
      if (v32 && v32 != 33)
      {
        uint64_t v25 = v34;
        int v26 = v33;
        *(_DWORD *)a3 = v32;
        *(_DWORD *)(a3 + 4) = v26;
        *(void *)(a3 + 8) = v25;
        *(void *)(a3 + 16) = v35;
        goto LABEL_17;
      }
    }
  }
LABEL_18:

  return v4;
}

void sub_244BA53C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BA53FC(int a1, uint64_t a2, uint64_t a3)
{
  if (a1)
  {
    id v4 = 0;
    *(_DWORD *)a3 = 181;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "zap-generated/MTRAttributeTLVValueDecoder.mm";
    *(_DWORD *)(a3 + 16) = 5016;
  }
  else
  {
    sub_244CB3988((uint64_t)v36);
    unsigned __int8 v37 = 0;
    sub_244CB39B8((uint64_t)v36, 0, 0);
    sub_24484B03C((uint64_t)v36, a2, (uint64_t)&v29);
    id v4 = 0;
    *(_OWORD *)a3 = v29;
    *(void *)(a3 + 16) = v30;
    if (!*(_DWORD *)a3)
    {
      id v4 = objc_opt_new();
      v39[0] = v37;
      if (v37) {
        v39[1] = v38;
      }
      sub_244797780((uint64_t)&v29, (uint64_t)v36, v39);
      while (sub_244BC2178((uint64_t)&v29))
      {
        uint64_t v6 = objc_opt_new();
        long long v7 = v29;
        id v8 = [NSString alloc];
        char v10 = objc_msgSend_initWithBytes_length_encoding_(v8, v9, v7, *((void *)&v7 + 1), 4);
        objc_msgSend_setLabel_(v6, v11, (uint64_t)v10);

        id v14 = objc_msgSend_label(v6, v12, v13);

        if (!v14)
        {
          id v27 = &xmmword_26519A350;
          goto LABEL_16;
        }
        uint64_t v15 = v30;
        uint64_t v16 = v31;
        id v17 = [NSString alloc];
        uint64_t v19 = objc_msgSend_initWithBytes_length_encoding_(v17, v18, v15, v16, 4);
        objc_msgSend_setValue_(v6, v20, (uint64_t)v19);

        uint64_t v23 = objc_msgSend_value(v6, v21, v22);

        if (!v23)
        {
          id v27 = &xmmword_26519A368;
LABEL_16:
          *(_OWORD *)a3 = *v27;
          *(void *)(a3 + 16) = *((void *)v27 + 2);

LABEL_17:
          id v4 = 0;
          goto LABEL_18;
        }
        objc_msgSend_addObject_(v4, v24, (uint64_t)v6);
      }
      if (v32 && v32 != 33)
      {
        uint64_t v25 = v34;
        int v26 = v33;
        *(_DWORD *)a3 = v32;
        *(_DWORD *)(a3 + 4) = v26;
        *(void *)(a3 + 8) = v25;
        *(void *)(a3 + 16) = v35;
        goto LABEL_17;
      }
    }
  }
LABEL_18:

  return v4;
}

void sub_244BA5640(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BA5674(int a1, uint64_t a2, uint64_t a3)
{
  if (a1)
  {
    id v4 = 0;
    *(_DWORD *)a3 = 181;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "zap-generated/MTRAttributeTLVValueDecoder.mm";
    *(_DWORD *)(a3 + 16) = 5039;
  }
  else
  {
    unsigned __int8 v9 = 0;
    sub_244CB3C0C(a2, (char *)&v9, (uint64_t)&v7);
    *(_OWORD *)a3 = v7;
    *(void *)(a3 + 16) = v8;
    if (*(_DWORD *)a3)
    {
      id v4 = 0;
    }
    else
    {
      id v4 = objc_msgSend_numberWithBool_(NSNumber, v5, v9);
    }
  }

  return v4;
}

id sub_244BA5720(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
    case 1:
    case 4:
    case 9:
      LODWORD(v39[0]) = 0;
      sub_244CB3FB0(a2, v39, (uint64_t)&v33);
      goto LABEL_3;
    case 2:
    case 5:
      LOWORD(v39[0]) = 0;
      sub_244CB3F40(a2, v39, (uint64_t)&v33);
      *(_OWORD *)a3 = v33;
      *(void *)(a3 + 16) = v34;
      if (*(_DWORD *)a3) {
        goto LABEL_19;
      }
      uint64_t v6 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v7, LOWORD(v39[0]));
      goto LABEL_21;
    case 3:
      sub_244CB3988((uint64_t)v39);
      unsigned __int8 v40 = 0;
      sub_244CB39B8((uint64_t)v39, 0, 0);
      sub_24484B03C((uint64_t)v39, a2, (uint64_t)&v33);
      uint64_t v8 = 0;
      *(_OWORD *)a3 = v33;
      *(void *)(a3 + 16) = v34;
      if (*(_DWORD *)a3) {
        goto LABEL_22;
      }
      uint64_t v8 = objc_opt_new();
      v42[0] = v40;
      if (v40) {
        v42[1] = v41;
      }
      sub_244BC17D0((uint64_t)&v33, (uint64_t)v39, v42);
      while (sub_244BC2224((uint64_t)&v33))
      {
        unsigned __int8 v9 = objc_opt_new();
        long long v11 = objc_msgSend_numberWithUnsignedLongLong_(NSNumber, v10, v33);
        objc_msgSend_setCheckInNodeID_(v9, v12, (uint64_t)v11);

        id v14 = objc_msgSend_numberWithUnsignedLongLong_(NSNumber, v13, *((uint64_t *)&v33 + 1));
        objc_msgSend_setMonitoredSubject_(v9, v15, (uint64_t)v14);

        id v17 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v16, v34);
        objc_msgSend_setClientType_(v9, v18, (uint64_t)v17);

        uint64_t v20 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v19, BYTE1(v34));
        objc_msgSend_setFabricIndex_(v9, v21, (uint64_t)v20);

        objc_msgSend_addObject_(v8, v22, (uint64_t)v9);
      }
      if (!v35 || v35 == 33) {
        goto LABEL_22;
      }
      uint64_t v31 = v37;
      int v32 = v36;
      *(_DWORD *)a3 = v35;
      *(_DWORD *)(a3 + 4) = v32;
      *(void *)(a3 + 8) = v31;
      *(void *)(a3 + 16) = v38;

LABEL_19:
      uint64_t v8 = 0;
      goto LABEL_22;
    case 6:
      LODWORD(v39[0]) = 0;
      sub_24484B2E8(a2, v39, &v33);
LABEL_3:
      *(_OWORD *)a3 = v33;
      *(void *)(a3 + 16) = v34;
      if (*(_DWORD *)a3) {
        goto LABEL_19;
      }
      uint64_t v6 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v5, LODWORD(v39[0]));
      goto LABEL_21;
    case 7:
      v39[0] = 0uLL;
      sub_244CB41F0(a2, v39, &v33);
      uint64_t v8 = 0;
      *(_OWORD *)a3 = v33;
      *(void *)(a3 + 16) = v34;
      if (!*(_DWORD *)a3)
      {
        uint64_t v24 = *((void *)&v39[0] + 1);
        uint64_t v23 = *(void *)&v39[0];
        id v25 = [NSString alloc];
        id v27 = objc_msgSend_initWithBytes_length_encoding_(v25, v26, v23, v24, 4);
        uint64_t v8 = v27;
        if (v27)
        {
          id v28 = v27;
        }
        else
        {
          *(_OWORD *)a3 = xmmword_26519A380;
          *(void *)(a3 + 16) = 5152;
        }
      }
      goto LABEL_22;
    case 8:
      LOBYTE(v39[0]) = 0;
      sub_2447F1DCC(a2, v39, &v33);
      *(_OWORD *)a3 = v33;
      *(void *)(a3 + 16) = v34;
      if (*(_DWORD *)a3) {
        goto LABEL_19;
      }
      uint64_t v6 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v29, LOBYTE(v39[0]));
LABEL_21:
      uint64_t v8 = (void *)v6;
LABEL_22:
      return v8;
    default:
      uint64_t v8 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 5185;
      goto LABEL_22;
  }
}

void sub_244BA5ABC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BA5B20(unsigned int a1, uint64_t a2, uint64_t a3)
{
  if (a1 == 2)
  {
    LOBYTE(v10) = 0;
    sub_2446D1A48(a2, &v10, &v8);
    *(_OWORD *)a3 = v8;
    *(void *)(a3 + 16) = v9;
    if (*(_DWORD *)a3)
    {
LABEL_6:
      BOOL v5 = 0;
      goto LABEL_9;
    }
    BOOL v5 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v6, v10);
  }
  else
  {
    if (a1 <= 1)
    {
      unsigned int v10 = 0;
      sub_244CB3FB0(a2, &v10, (uint64_t)&v8);
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (!*(_DWORD *)a3)
      {
        BOOL v5 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v4, v10);
        goto LABEL_9;
      }
      goto LABEL_6;
    }
    BOOL v5 = 0;
    *(_DWORD *)a3 = 181;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "zap-generated/MTRAttributeTLVValueDecoder.mm";
    *(_DWORD *)(a3 + 16) = 5230;
  }
LABEL_9:

  return v5;
}

id sub_244BA5C20(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
      LOBYTE(v68) = 0;
      char v72 = 0;
      sub_2447F50A0(a2, (uint64_t)&v68, &v64);
      *(_OWORD *)a3 = v64;
      *(void *)(a3 + 16) = v65;
      if (*(_DWORD *)a3) {
        BOOL v5 = 1;
      }
      else {
        BOOL v5 = v72 == 0;
      }
      if (v5) {
        goto LABEL_50;
      }
      id v6 = (id)objc_opt_new();
      if (!v72) {
        sub_24479484C();
      }
      unsigned __int8 v73 = v70;
      if (v70) {
        char v74 = v71;
      }
      sub_244797544((uint64_t)&v64, (uint64_t)&v68, &v73);
      while (sub_2447975B4((uint64_t)&v64))
      {
        long long v7 = v64;
        id v8 = [NSString alloc];
        long long v11 = objc_msgSend_initWithBytes_length_encoding_(v8, v9, v7, *((void *)&v7 + 1), 4);
        if (!v11)
        {
          *(_OWORD *)a3 = xmmword_26519A398;
          *(void *)(a3 + 16) = 5256;
          goto LABEL_49;
        }
        objc_msgSend_addObject_(v6, v10, (uint64_t)v11);
      }
      if (v65 && v65 != 33)
      {
        uint64_t v49 = v66;
        int v50 = HIDWORD(v65);
        *(_DWORD *)a3 = v65;
        *(_DWORD *)(a3 + 4) = v50;
        *(void *)(a3 + 8) = v49;
        uint64_t v51 = v67[0];
        goto LABEL_48;
      }
      goto LABEL_51;
    case 1:
      LOWORD(v68) = 0;
      sub_2447F15BC(a2, (unsigned __int8 *)&v68, (uint64_t)&v64);
      *(_OWORD *)a3 = v64;
      *(void *)(a3 + 16) = v65;
      if (*(_DWORD *)a3) {
        BOOL v32 = 1;
      }
      else {
        BOOL v32 = BYTE1(v68) == 0;
      }
      if (v32) {
        goto LABEL_50;
      }
      goto LABEL_34;
    case 2:
      LOBYTE(v68) = 0;
      BYTE4(v68) = 0;
      sub_2447F4140(a2, (uint64_t)&v68, (uint64_t)&v64);
      *(_OWORD *)a3 = v64;
      *(void *)(a3 + 16) = v65;
      if (*(_DWORD *)a3) {
        BOOL v14 = 1;
      }
      else {
        BOOL v14 = BYTE4(v68) == 0;
      }
      if (v14) {
        goto LABEL_50;
      }
      uint64_t v15 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v13, v68);
      goto LABEL_35;
    case 3:
      sub_244CB3988((uint64_t)&v68);
      unsigned __int8 v70 = 0;
      sub_244CB39B8((uint64_t)&v68, 0, 0);
      sub_24484B03C((uint64_t)&v68, a2, (uint64_t)&v64);
      *(_OWORD *)a3 = v64;
      *(void *)(a3 + 16) = v65;
      if (*(_DWORD *)a3) {
        goto LABEL_50;
      }
      id v6 = (id)objc_opt_new();
      unsigned __int8 v73 = v70;
      if (v70) {
        char v74 = v71;
      }
      sub_244BC2318((uint64_t)&v64, (uint64_t)&v68, &v73);
      while (2)
      {
        if (sub_244BC2390((uint64_t)&v64))
        {
          uint64_t v16 = objc_opt_new();
          uint64_t v18 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v17, v64);
          objc_msgSend_setOperationalStateID_(v16, v19, (uint64_t)v18);

          if (BYTE8(v64))
          {
            uint64_t v21 = (uint64_t *)sub_2446D18A4((unsigned char *)&v64 + 8);
            uint64_t v22 = *v21;
            uint64_t v23 = v21[1];
            id v24 = [NSString alloc];
            int v26 = objc_msgSend_initWithBytes_length_encoding_(v24, v25, v22, v23, 4);
            objc_msgSend_setOperationalStateLabel_(v16, v27, (uint64_t)v26);

            uint64_t v30 = objc_msgSend_operationalStateLabel(v16, v28, v29);

            if (!v30)
            {
              *(_OWORD *)a3 = xmmword_26519A3B0;
              *(void *)(a3 + 16) = 5321;

LABEL_49:
LABEL_50:
              id v6 = 0;
              goto LABEL_51;
            }
          }
          else
          {
            objc_msgSend_setOperationalStateLabel_(v16, v20, 0);
          }
          objc_msgSend_addObject_(v6, v31, (uint64_t)v16);

          continue;
        }
        break;
      }
      if (!LODWORD(v67[0]) || LODWORD(v67[0]) == 33) {
        goto LABEL_51;
      }
      uint64_t v52 = v67[1];
      int v53 = HIDWORD(v67[0]);
      *(_DWORD *)a3 = v67[0];
      *(_DWORD *)(a3 + 4) = v53;
      *(void *)(a3 + 8) = v52;
      uint64_t v51 = v67[2];
LABEL_48:
      *(void *)(a3 + 16) = v51;
      goto LABEL_49;
    case 4:
      LOBYTE(v68) = 0;
      sub_2446D1A48(a2, &v68, &v64);
      *(_OWORD *)a3 = v64;
      *(void *)(a3 + 16) = v65;
      if (*(_DWORD *)a3) {
        goto LABEL_50;
      }
LABEL_34:
      uint64_t v15 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v12, v68);
LABEL_35:
      id v6 = (id)v15;
      goto LABEL_51;
    case 5:
      LOBYTE(v64) = 0;
      BYTE8(v64) = 0;
      LOBYTE(v67[0]) = 0;
      sub_2447EE994((uint64_t)&v64, a2, (uint64_t)&v68);
      *(_OWORD *)a3 = v68;
      *(void *)(a3 + 16) = v69;
      if (*(_DWORD *)a3) {
        goto LABEL_50;
      }
      long long v33 = objc_opt_new();
      int v35 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v34, v64);
      objc_msgSend_setErrorStateID_(v33, v36, (uint64_t)v35);

      if (BYTE8(v64))
      {
        uint64_t v38 = (uint64_t *)sub_24479DC08((unsigned char *)&v64 + 8);
        uint64_t v39 = *v38;
        uint64_t v40 = v38[1];
        id v41 = [NSString alloc];
        int v43 = objc_msgSend_initWithBytes_length_encoding_(v41, v42, v39, v40, 4);
        objc_msgSend_setErrorStateLabel_(v33, v44, (uint64_t)v43);

        objc_msgSend_errorStateLabel(v33, v45, v46);
        id v6 = (id)objc_claimAutoreleasedReturnValue();

        if (!v6)
        {
          int v48 = &xmmword_26519A3C8;
LABEL_58:
          *(_OWORD *)a3 = *v48;
          *(void *)(a3 + 16) = *((void *)v48 + 2);
          goto LABEL_61;
        }
      }
      else
      {
        objc_msgSend_setErrorStateLabel_(v33, v37, 0);
      }
      if (LOBYTE(v67[0]))
      {
        unsigned __int8 v55 = (uint64_t *)sub_24479DC08(v67);
        uint64_t v56 = *v55;
        uint64_t v57 = v55[1];
        id v58 = [NSString alloc];
        unsigned __int8 v60 = objc_msgSend_initWithBytes_length_encoding_(v58, v59, v56, v57, 4);
        objc_msgSend_setErrorStateDetails_(v33, v61, (uint64_t)v60);

        objc_msgSend_errorStateDetails(v33, v62, v63);
        id v6 = (id)objc_claimAutoreleasedReturnValue();

        if (!v6)
        {
          int v48 = &xmmword_26519A3E0;
          goto LABEL_58;
        }
      }
      else
      {
        objc_msgSend_setErrorStateDetails_(v33, v47, 0);
      }
      id v6 = v33;
LABEL_61:

LABEL_51:
      return v6;
    default:
      id v6 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 5387;
      goto LABEL_51;
  }
}

void sub_244BA61FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BA6294(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
      sub_244CB3988((uint64_t)v55);
      char v56 = 0;
      sub_244CB39B8(v8, 0, 0);
      sub_24484B03C((uint64_t)v55, a2, (uint64_t)&v46);
      long long v7 = 0;
      *(_OWORD *)a3 = v46;
      *(void *)(a3 + 16) = v47;
      if (*(_DWORD *)a3) {
        goto LABEL_36;
      }
      long long v7 = objc_opt_new();
      LOBYTE(v41) = v56;
      if (v56) {
        BYTE1(v41) = v57;
      }
      sub_244BC243C((uint64_t)&v46, (uint64_t)v55, (unsigned __int8 *)&v41);
      break;
    case 1:
      LOBYTE(v41) = 0;
      sub_244CB3E8C(a2, &v41, (uint64_t)&v46);
      *(_OWORD *)a3 = v46;
      *(void *)(a3 + 16) = v47;
      if (!*(_DWORD *)a3) {
        goto LABEL_27;
      }
      goto LABEL_35;
    case 2:
    case 3:
      LOWORD(v41) = 0;
      sub_2447F15BC(a2, (unsigned __int8 *)&v41, (uint64_t)&v46);
      *(_OWORD *)a3 = v46;
      *(void *)(a3 + 16) = v47;
      if (*(_DWORD *)a3) {
        BOOL v6 = 1;
      }
      else {
        BOOL v6 = BYTE1(v41) == 0;
      }
      if (v6)
      {
LABEL_35:
        long long v7 = 0;
      }
      else
      {
LABEL_27:
        long long v7 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v5, v41);
      }
      goto LABEL_36;
    default:
      long long v7 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 5495;
      goto LABEL_36;
  }
  while (sub_244BC24CC((uint64_t)&v46))
  {
    uint64_t v9 = objc_opt_new();
    long long v10 = v46;
    id v11 = [NSString alloc];
    uint64_t v13 = objc_msgSend_initWithBytes_length_encoding_(v11, v12, v10, *((void *)&v10 + 1), 4);
    objc_msgSend_setLabel_(v9, v14, (uint64_t)v13);

    id v17 = objc_msgSend_label(v9, v15, v16);

    if (!v17)
    {
      *(_OWORD *)a3 = xmmword_26519A3F8;
      *(void *)(a3 + 16) = 5411;
      goto LABEL_33;
    }
    uint64_t v19 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v18, v47);
    objc_msgSend_setMode_(v9, v20, (uint64_t)v19);

    uint64_t v21 = objc_opt_new();
    v58[0] = v49;
    if (v49) {
      v58[1] = v50;
    }
    sub_244BC25EC((uint64_t)&v41, (uint64_t)&v48, v58);
    while (sub_244BC2664((uint64_t)&v41))
    {
      uint64_t v23 = objc_opt_new();
      id v25 = v23;
      if ((_BYTE)v41)
      {
        int v26 = NSNumber;
        id v27 = sub_2446D1880(&v41);
        uint64_t v29 = objc_msgSend_numberWithUnsignedShort_(v26, v28, *(unsigned __int16 *)v27);
        objc_msgSend_setMfgCode_(v25, v30, (uint64_t)v29);
      }
      else
      {
        objc_msgSend_setMfgCode_(v23, v24, 0);
      }
      BOOL v32 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v31, WORD2(v41), v41);
      objc_msgSend_setValue_(v25, v33, (uint64_t)v32);

      objc_msgSend_addObject_(v21, v34, (uint64_t)v25);
    }
    if (v42 && v42 != 33)
    {
      uint64_t v38 = v44;
      int v39 = v43;
      *(_DWORD *)a3 = v42;
      *(_DWORD *)(a3 + 4) = v39;
      *(void *)(a3 + 8) = v38;
      *(void *)(a3 + 16) = v45;

LABEL_33:
LABEL_34:

      goto LABEL_35;
    }
    objc_msgSend_setModeTags_(v9, v22, (uint64_t)v21, v41);

    objc_msgSend_addObject_(v7, v35, (uint64_t)v9);
  }
  if (v51 && v51 != 33)
  {
    uint64_t v36 = v53;
    int v37 = v52;
    *(_DWORD *)a3 = v51;
    *(_DWORD *)(a3 + 4) = v37;
    *(void *)(a3 + 8) = v36;
    *(void *)(a3 + 16) = v54;
    goto LABEL_34;
  }
LABEL_36:

  return v7;
}

void sub_244BA6668(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BA66DC(int a1, uint64_t a2, uint64_t a3)
{
  if (a1 == 1)
  {
    *(_WORD *)id v17 = 0;
    sub_24480CBD0(a2, v17, (uint64_t)&v14);
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 16) = v15;
    if (*(_DWORD *)a3) {
      BOOL v10 = 1;
    }
    else {
      BOOL v10 = v17[1] == 0;
    }
    if (!v10)
    {
      BOOL v5 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v9, v17[0]);
      goto LABEL_16;
    }
    goto LABEL_14;
  }
  if (a1)
  {
    BOOL v5 = 0;
    *(_DWORD *)a3 = 181;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "zap-generated/MTRAttributeTLVValueDecoder.mm";
    *(_DWORD *)(a3 + 16) = 5548;
  }
  else
  {
    sub_244CB3988((uint64_t)v17);
    unsigned __int8 v18 = 0;
    sub_244CB39B8((uint64_t)v17, 0, 0);
    sub_24484B03C((uint64_t)v17, a2, (uint64_t)&v14);
    BOOL v5 = 0;
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 16) = v15;
    if (!*(_DWORD *)a3)
    {
      BOOL v5 = objc_opt_new();
      v20[0] = v18;
      if (v18) {
        v20[1] = v19;
      }
      sub_2446D1930((uint64_t)&v14, (uint64_t)v17, v20);
      while (sub_2446D19A0((uint64_t)&v14))
      {
        long long v7 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v6, v14);
        objc_msgSend_addObject_(v5, v8, (uint64_t)v7);
      }
      if (DWORD2(v14) && DWORD2(v14) != 33)
      {
        uint64_t v12 = v15;
        int v13 = HIDWORD(v14);
        *(_DWORD *)a3 = DWORD2(v14);
        *(_DWORD *)(a3 + 4) = v13;
        *(void *)(a3 + 8) = v12;
        *(void *)(a3 + 16) = v16;

LABEL_14:
        BOOL v5 = 0;
      }
    }
  }
LABEL_16:

  return v5;
}

void sub_244BA68A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BA68C0(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
      long long v46 = 0uLL;
      sub_244CB41F0(a2, &v46, &v49);
      long long v7 = 0;
      *(_OWORD *)a3 = v49;
      *(void *)(a3 + 16) = v50;
      if (!*(_DWORD *)a3)
      {
        uint64_t v9 = *((void *)&v46 + 1);
        uint64_t v8 = v46;
        id v10 = [NSString alloc];
        uint64_t v12 = objc_msgSend_initWithBytes_length_encoding_(v10, v11, v8, v9, 4);
        long long v7 = v12;
        if (v12)
        {
          id v13 = v12;
        }
        else
        {
          *(_OWORD *)a3 = xmmword_26519A410;
          *(void *)(a3 + 16) = 5565;
        }
      }
      goto LABEL_44;
    case 1:
      LOBYTE(v46) = 0;
      BYTE2(v46) = 0;
      sub_2447EF9E0(a2, (__int16 *)&v46, (uint64_t)&v49);
      *(_OWORD *)a3 = v49;
      *(void *)(a3 + 16) = v50;
      if (*(_DWORD *)a3) {
        BOOL v15 = 1;
      }
      else {
        BOOL v15 = BYTE2(v46) == 0;
      }
      if (v15) {
        goto LABEL_43;
      }
      uint64_t v16 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v14, (unsigned __int16)v46);
      goto LABEL_33;
    case 2:
      sub_244CB3988((uint64_t)v58);
      char v59 = 0;
      sub_244CB39B8(v17, 0, 0);
      sub_24484B03C((uint64_t)v58, a2, (uint64_t)&v49);
      long long v7 = 0;
      *(_OWORD *)a3 = v49;
      *(void *)(a3 + 16) = v50;
      if (*(_DWORD *)a3) {
        goto LABEL_44;
      }
      long long v7 = objc_opt_new();
      LOBYTE(v46) = v59;
      if (v59) {
        BYTE1(v46) = v60;
      }
      sub_244BC243C((uint64_t)&v49, (uint64_t)v58, (unsigned __int8 *)&v46);
      break;
    case 3:
      LOBYTE(v46) = 0;
      sub_244CB3E8C(a2, &v46, (uint64_t)&v49);
      *(_OWORD *)a3 = v49;
      *(void *)(a3 + 16) = v50;
      if (!*(_DWORD *)a3) {
        goto LABEL_32;
      }
      goto LABEL_43;
    case 4:
    case 5:
      LOWORD(v46) = 0;
      sub_2447F15BC(a2, (unsigned __int8 *)&v46, (uint64_t)&v49);
      *(_OWORD *)a3 = v49;
      *(void *)(a3 + 16) = v50;
      if (*(_DWORD *)a3) {
        BOOL v6 = 1;
      }
      else {
        BOOL v6 = BYTE1(v46) == 0;
      }
      if (v6) {
        goto LABEL_43;
      }
LABEL_32:
      uint64_t v16 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v5, v46);
LABEL_33:
      long long v7 = (void *)v16;
      goto LABEL_44;
    default:
      long long v7 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 5683;
      goto LABEL_44;
  }
  while (sub_244BC2710((uint64_t)&v49))
  {
    unsigned __int8 v18 = objc_opt_new();
    long long v19 = v49;
    id v20 = [NSString alloc];
    uint64_t v22 = objc_msgSend_initWithBytes_length_encoding_(v20, v21, v19, *((void *)&v19 + 1), 4);
    objc_msgSend_setLabel_(v18, v23, (uint64_t)v22);

    int v26 = objc_msgSend_label(v18, v24, v25);

    if (!v26)
    {
      *(_OWORD *)a3 = xmmword_26519A428;
      *(void *)(a3 + 16) = 5603;
LABEL_41:

      goto LABEL_42;
    }
    id v28 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v27, v50);
    objc_msgSend_setMode_(v18, v29, (uint64_t)v28);

    uint64_t v30 = objc_opt_new();
    v61[0] = v52;
    if (v52) {
      v61[1] = v53;
    }
    sub_244798128((uint64_t)&v46, (uint64_t)&v51, v61);
    while (sub_244BC2830((uint64_t)&v46))
    {
      BOOL v32 = objc_opt_new();
      uint64_t v34 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v33, (unsigned __int16)v46);
      objc_msgSend_setMfgCode_(v32, v35, (uint64_t)v34);

      int v37 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v36, WORD1(v46));
      objc_msgSend_setValue_(v32, v38, (uint64_t)v37);

      objc_msgSend_addObject_(v30, v39, (uint64_t)v32);
    }
    if (DWORD2(v46) && DWORD2(v46) != 33)
    {
      uint64_t v43 = v47;
      int v44 = HIDWORD(v46);
      *(_DWORD *)a3 = DWORD2(v46);
      *(_DWORD *)(a3 + 4) = v44;
      *(void *)(a3 + 8) = v43;
      *(void *)(a3 + 16) = v48;

      goto LABEL_41;
    }
    objc_msgSend_setSemanticTags_(v18, v31, (uint64_t)v30, (void)v46);

    objc_msgSend_addObject_(v7, v40, (uint64_t)v18);
  }
  if (!v54 || v54 == 33) {
    goto LABEL_44;
  }
  uint64_t v41 = v56;
  int v42 = v55;
  *(_DWORD *)a3 = v54;
  *(_DWORD *)(a3 + 4) = v42;
  *(void *)(a3 + 8) = v41;
  *(void *)(a3 + 16) = v57;
LABEL_42:

LABEL_43:
  long long v7 = 0;
LABEL_44:

  return v7;
}

void sub_244BA6D50(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BA6DD0(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
      sub_244CB3988((uint64_t)v55);
      char v56 = 0;
      sub_244CB39B8(v8, 0, 0);
      sub_24484B03C((uint64_t)v55, a2, (uint64_t)&v46);
      long long v7 = 0;
      *(_OWORD *)a3 = v46;
      *(void *)(a3 + 16) = v47;
      if (*(_DWORD *)a3) {
        goto LABEL_36;
      }
      long long v7 = objc_opt_new();
      LOBYTE(v41) = v56;
      if (v56) {
        BYTE1(v41) = v57;
      }
      sub_244BC243C((uint64_t)&v46, (uint64_t)v55, (unsigned __int8 *)&v41);
      break;
    case 1:
      LOBYTE(v41) = 0;
      sub_244CB3E8C(a2, &v41, (uint64_t)&v46);
      *(_OWORD *)a3 = v46;
      *(void *)(a3 + 16) = v47;
      if (!*(_DWORD *)a3) {
        goto LABEL_27;
      }
      goto LABEL_35;
    case 2:
    case 3:
      LOWORD(v41) = 0;
      sub_2447F15BC(a2, (unsigned __int8 *)&v41, (uint64_t)&v46);
      *(_OWORD *)a3 = v46;
      *(void *)(a3 + 16) = v47;
      if (*(_DWORD *)a3) {
        BOOL v6 = 1;
      }
      else {
        BOOL v6 = BYTE1(v41) == 0;
      }
      if (v6)
      {
LABEL_35:
        long long v7 = 0;
      }
      else
      {
LABEL_27:
        long long v7 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v5, v41);
      }
      goto LABEL_36;
    default:
      long long v7 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 5791;
      goto LABEL_36;
  }
  while (sub_244BC24CC((uint64_t)&v46))
  {
    uint64_t v9 = objc_opt_new();
    long long v10 = v46;
    id v11 = [NSString alloc];
    id v13 = objc_msgSend_initWithBytes_length_encoding_(v11, v12, v10, *((void *)&v10 + 1), 4);
    objc_msgSend_setLabel_(v9, v14, (uint64_t)v13);

    uint64_t v17 = objc_msgSend_label(v9, v15, v16);

    if (!v17)
    {
      *(_OWORD *)a3 = xmmword_26519A440;
      *(void *)(a3 + 16) = 5707;
      goto LABEL_33;
    }
    long long v19 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v18, v47);
    objc_msgSend_setMode_(v9, v20, (uint64_t)v19);

    uint64_t v21 = objc_opt_new();
    v58[0] = v49;
    if (v49) {
      v58[1] = v50;
    }
    sub_244BC25EC((uint64_t)&v41, (uint64_t)&v48, v58);
    while (sub_244BC2664((uint64_t)&v41))
    {
      uint64_t v23 = objc_opt_new();
      uint64_t v25 = v23;
      if ((_BYTE)v41)
      {
        int v26 = NSNumber;
        id v27 = sub_2446D1880(&v41);
        uint64_t v29 = objc_msgSend_numberWithUnsignedShort_(v26, v28, *(unsigned __int16 *)v27);
        objc_msgSend_setMfgCode_(v25, v30, (uint64_t)v29);
      }
      else
      {
        objc_msgSend_setMfgCode_(v23, v24, 0);
      }
      BOOL v32 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v31, WORD2(v41), v41);
      objc_msgSend_setValue_(v25, v33, (uint64_t)v32);

      objc_msgSend_addObject_(v21, v34, (uint64_t)v25);
    }
    if (v42 && v42 != 33)
    {
      uint64_t v38 = v44;
      int v39 = v43;
      *(_DWORD *)a3 = v42;
      *(_DWORD *)(a3 + 4) = v39;
      *(void *)(a3 + 8) = v38;
      *(void *)(a3 + 16) = v45;

LABEL_33:
LABEL_34:

      goto LABEL_35;
    }
    objc_msgSend_setModeTags_(v9, v22, (uint64_t)v21, v41);

    objc_msgSend_addObject_(v7, v35, (uint64_t)v9);
  }
  if (v51 && v51 != 33)
  {
    uint64_t v36 = v53;
    int v37 = v52;
    *(_DWORD *)a3 = v51;
    *(_DWORD *)(a3 + 4) = v37;
    *(void *)(a3 + 8) = v36;
    *(void *)(a3 + 16) = v54;
    goto LABEL_34;
  }
LABEL_36:

  return v7;
}

void sub_244BA71A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BA7218(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
      sub_244CB3988((uint64_t)v55);
      char v56 = 0;
      sub_244CB39B8(v8, 0, 0);
      sub_24484B03C((uint64_t)v55, a2, (uint64_t)&v46);
      long long v7 = 0;
      *(_OWORD *)a3 = v46;
      *(void *)(a3 + 16) = v47;
      if (*(_DWORD *)a3) {
        goto LABEL_36;
      }
      long long v7 = objc_opt_new();
      LOBYTE(v41) = v56;
      if (v56) {
        BYTE1(v41) = v57;
      }
      sub_244BC243C((uint64_t)&v46, (uint64_t)v55, (unsigned __int8 *)&v41);
      break;
    case 1:
      LOBYTE(v41) = 0;
      sub_244CB3E8C(a2, &v41, (uint64_t)&v46);
      *(_OWORD *)a3 = v46;
      *(void *)(a3 + 16) = v47;
      if (!*(_DWORD *)a3) {
        goto LABEL_27;
      }
      goto LABEL_35;
    case 2:
    case 3:
      LOWORD(v41) = 0;
      sub_2447F15BC(a2, (unsigned __int8 *)&v41, (uint64_t)&v46);
      *(_OWORD *)a3 = v46;
      *(void *)(a3 + 16) = v47;
      if (*(_DWORD *)a3) {
        BOOL v6 = 1;
      }
      else {
        BOOL v6 = BYTE1(v41) == 0;
      }
      if (v6)
      {
LABEL_35:
        long long v7 = 0;
      }
      else
      {
LABEL_27:
        long long v7 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v5, v41);
      }
      goto LABEL_36;
    default:
      long long v7 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 5899;
      goto LABEL_36;
  }
  while (sub_244BC24CC((uint64_t)&v46))
  {
    uint64_t v9 = objc_opt_new();
    long long v10 = v46;
    id v11 = [NSString alloc];
    id v13 = objc_msgSend_initWithBytes_length_encoding_(v11, v12, v10, *((void *)&v10 + 1), 4);
    objc_msgSend_setLabel_(v9, v14, (uint64_t)v13);

    uint64_t v17 = objc_msgSend_label(v9, v15, v16);

    if (!v17)
    {
      *(_OWORD *)a3 = xmmword_26519A458;
      *(void *)(a3 + 16) = 5815;
      goto LABEL_33;
    }
    long long v19 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v18, v47);
    objc_msgSend_setMode_(v9, v20, (uint64_t)v19);

    uint64_t v21 = objc_opt_new();
    v58[0] = v49;
    if (v49) {
      v58[1] = v50;
    }
    sub_244BC25EC((uint64_t)&v41, (uint64_t)&v48, v58);
    while (sub_244BC2664((uint64_t)&v41))
    {
      uint64_t v23 = objc_opt_new();
      uint64_t v25 = v23;
      if ((_BYTE)v41)
      {
        int v26 = NSNumber;
        id v27 = sub_2446D1880(&v41);
        uint64_t v29 = objc_msgSend_numberWithUnsignedShort_(v26, v28, *(unsigned __int16 *)v27);
        objc_msgSend_setMfgCode_(v25, v30, (uint64_t)v29);
      }
      else
      {
        objc_msgSend_setMfgCode_(v23, v24, 0);
      }
      BOOL v32 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v31, WORD2(v41), v41);
      objc_msgSend_setValue_(v25, v33, (uint64_t)v32);

      objc_msgSend_addObject_(v21, v34, (uint64_t)v25);
    }
    if (v42 && v42 != 33)
    {
      uint64_t v38 = v44;
      int v39 = v43;
      *(_DWORD *)a3 = v42;
      *(_DWORD *)(a3 + 4) = v39;
      *(void *)(a3 + 8) = v38;
      *(void *)(a3 + 16) = v45;

LABEL_33:
LABEL_34:

      goto LABEL_35;
    }
    objc_msgSend_setModeTags_(v9, v22, (uint64_t)v21, v41);

    objc_msgSend_addObject_(v7, v35, (uint64_t)v9);
  }
  if (v51 && v51 != 33)
  {
    uint64_t v36 = v53;
    int v37 = v52;
    *(_DWORD *)a3 = v51;
    *(_DWORD *)(a3 + 4) = v37;
    *(void *)(a3 + 8) = v36;
    *(void *)(a3 + 16) = v54;
    goto LABEL_34;
  }
LABEL_36:

  return v7;
}

void sub_244BA75EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BA7660(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
      sub_244CB3988((uint64_t)v26);
      unsigned __int8 v27 = 0;
      sub_244CB39B8((uint64_t)v26, 0, 0);
      sub_24484B03C((uint64_t)v26, a2, (uint64_t)&v22);
      *(_OWORD *)a3 = v22;
      *(void *)(a3 + 16) = v23;
      if (*(_DWORD *)a3) {
        goto LABEL_33;
      }
      BOOL v5 = objc_opt_new();
      unsigned __int8 v29 = v27;
      if (v27) {
        char v30 = v28;
      }
      sub_244797544((uint64_t)&v22, (uint64_t)v26, &v29);
      while (sub_2447975B4((uint64_t)&v22))
      {
        long long v6 = v22;
        id v7 = [NSString alloc];
        long long v10 = objc_msgSend_initWithBytes_length_encoding_(v7, v8, v6, *((void *)&v6 + 1), 4);
        if (!v10)
        {
          *(_OWORD *)a3 = xmmword_26519A470;
          *(void *)(a3 + 16) = 5922;
          goto LABEL_32;
        }
        objc_msgSend_addObject_(v5, v9, (uint64_t)v10);
      }
      if (v23 && v23 != 33)
      {
        uint64_t v19 = v24;
        int v20 = HIDWORD(v23);
        *(_DWORD *)a3 = v23;
        *(_DWORD *)(a3 + 4) = v20;
        *(void *)(a3 + 8) = v19;
        uint64_t v18 = v25;
        goto LABEL_30;
      }
      break;
    case 1:
      *(_WORD *)int v26 = 0;
      sub_2447F15BC(a2, v26, (uint64_t)&v22);
      *(_OWORD *)a3 = v22;
      *(void *)(a3 + 16) = v23;
      if (*(_DWORD *)a3) {
        BOOL v12 = 1;
      }
      else {
        BOOL v12 = v26[1] == 0;
      }
      if (v12) {
        goto LABEL_33;
      }
      goto LABEL_16;
    case 2:
      v26[0] = 0;
      sub_2446D1A48(a2, v26, &v22);
      *(_OWORD *)a3 = v22;
      *(void *)(a3 + 16) = v23;
      if (*(_DWORD *)a3) {
        goto LABEL_33;
      }
LABEL_16:
      BOOL v5 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v11, v26[0]);
      break;
    case 3:
      sub_244CB3988((uint64_t)v26);
      unsigned __int8 v27 = 0;
      sub_244CB39B8((uint64_t)v26, 0, 0);
      sub_24484B03C((uint64_t)v26, a2, (uint64_t)&v22);
      *(_OWORD *)a3 = v22;
      *(void *)(a3 + 16) = v23;
      if (*(_DWORD *)a3) {
        goto LABEL_33;
      }
      BOOL v5 = objc_opt_new();
      unsigned __int8 v29 = v27;
      if (v27) {
        char v30 = v28;
      }
      sub_2446D1930((uint64_t)&v22, (uint64_t)v26, &v29);
      while (sub_2446D19A0((uint64_t)&v22))
      {
        long long v14 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v13, v22);
        objc_msgSend_addObject_(v5, v15, (uint64_t)v14);
      }
      if (DWORD2(v22) && DWORD2(v22) != 33)
      {
        uint64_t v16 = v23;
        int v17 = HIDWORD(v22);
        *(_DWORD *)a3 = DWORD2(v22);
        *(_DWORD *)(a3 + 4) = v17;
        *(void *)(a3 + 8) = v16;
        uint64_t v18 = v24;
LABEL_30:
        *(void *)(a3 + 16) = v18;
LABEL_32:

LABEL_33:
        BOOL v5 = 0;
      }
      break;
    default:
      BOOL v5 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 5994;
      break;
  }

  return v5;
}

void sub_244BA7984(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BA79DC(int a1, uint64_t a2, uint64_t a3)
{
  if (a1 == 1)
  {
    LOBYTE(v40) = 0;
    sub_244CB3E8C(a2, &v40, (uint64_t)&v45);
    *(_OWORD *)a3 = v45;
    *(void *)(a3 + 16) = v46;
    if (*(_DWORD *)a3)
    {
LABEL_30:
      long long v6 = 0;
    }
    else
    {
      long long v6 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v34, v40);
    }
  }
  else if (a1)
  {
    long long v6 = 0;
    *(_DWORD *)a3 = 181;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "zap-generated/MTRAttributeTLVValueDecoder.mm";
    *(_DWORD *)(a3 + 16) = 6072;
  }
  else
  {
    sub_244CB3988((uint64_t)v54);
    char v55 = 0;
    sub_244CB39B8(v5, 0, 0);
    sub_24484B03C((uint64_t)v54, a2, (uint64_t)&v45);
    long long v6 = 0;
    *(_OWORD *)a3 = v45;
    *(void *)(a3 + 16) = v46;
    if (!*(_DWORD *)a3)
    {
      long long v6 = objc_opt_new();
      LOBYTE(v40) = v55;
      if (v55) {
        BYTE1(v40) = v56;
      }
      sub_244BC243C((uint64_t)&v45, (uint64_t)v54, (unsigned __int8 *)&v40);
      while (sub_244BC24CC((uint64_t)&v45))
      {
        id v7 = objc_opt_new();
        long long v8 = v45;
        id v9 = [NSString alloc];
        id v11 = objc_msgSend_initWithBytes_length_encoding_(v9, v10, v8, *((void *)&v8 + 1), 4);
        objc_msgSend_setLabel_(v7, v12, (uint64_t)v11);

        BOOL v15 = objc_msgSend_label(v7, v13, v14);

        if (!v15)
        {
          *(_OWORD *)a3 = xmmword_26519A488;
          *(void *)(a3 + 16) = 6018;
          goto LABEL_28;
        }
        int v17 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v16, v46);
        objc_msgSend_setMode_(v7, v18, (uint64_t)v17);

        uint64_t v19 = objc_opt_new();
        v57[0] = v48;
        if (v48) {
          v57[1] = v49;
        }
        sub_244BC25EC((uint64_t)&v40, (uint64_t)&v47, v57);
        while (sub_244BC2664((uint64_t)&v40))
        {
          uint64_t v21 = objc_opt_new();
          uint64_t v23 = v21;
          if ((_BYTE)v40)
          {
            uint64_t v24 = NSNumber;
            uint64_t v25 = sub_2446D1880(&v40);
            unsigned __int8 v27 = objc_msgSend_numberWithUnsignedShort_(v24, v26, *(unsigned __int16 *)v25);
            objc_msgSend_setMfgCode_(v23, v28, (uint64_t)v27);
          }
          else
          {
            objc_msgSend_setMfgCode_(v21, v22, 0);
          }
          char v30 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v29, WORD2(v40), v40);
          objc_msgSend_setValue_(v23, v31, (uint64_t)v30);

          objc_msgSend_addObject_(v19, v32, (uint64_t)v23);
        }
        if (v41 && v41 != 33)
        {
          uint64_t v37 = v43;
          int v38 = v42;
          *(_DWORD *)a3 = v41;
          *(_DWORD *)(a3 + 4) = v38;
          *(void *)(a3 + 8) = v37;
          *(void *)(a3 + 16) = v44;

LABEL_28:
LABEL_29:

          goto LABEL_30;
        }
        objc_msgSend_setModeTags_(v7, v20, (uint64_t)v19, v40);

        objc_msgSend_addObject_(v6, v33, (uint64_t)v7);
      }
      if (v50 && v50 != 33)
      {
        uint64_t v35 = v52;
        int v36 = v51;
        *(_DWORD *)a3 = v50;
        *(_DWORD *)(a3 + 4) = v36;
        *(void *)(a3 + 8) = v35;
        *(void *)(a3 + 16) = v53;
        goto LABEL_29;
      }
    }
  }

  return v6;
}

void sub_244BA7D54(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BA7DB8(int a1, uint64_t a2, uint64_t a3)
{
  if (a1 == 1)
  {
    LOBYTE(v40) = 0;
    sub_244CB3E8C(a2, &v40, (uint64_t)&v45);
    *(_OWORD *)a3 = v45;
    *(void *)(a3 + 16) = v46;
    if (*(_DWORD *)a3)
    {
LABEL_30:
      long long v6 = 0;
    }
    else
    {
      long long v6 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v34, v40);
    }
  }
  else if (a1)
  {
    long long v6 = 0;
    *(_DWORD *)a3 = 181;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "zap-generated/MTRAttributeTLVValueDecoder.mm";
    *(_DWORD *)(a3 + 16) = 6150;
  }
  else
  {
    sub_244CB3988((uint64_t)v54);
    char v55 = 0;
    sub_244CB39B8(v5, 0, 0);
    sub_24484B03C((uint64_t)v54, a2, (uint64_t)&v45);
    long long v6 = 0;
    *(_OWORD *)a3 = v45;
    *(void *)(a3 + 16) = v46;
    if (!*(_DWORD *)a3)
    {
      long long v6 = objc_opt_new();
      LOBYTE(v40) = v55;
      if (v55) {
        BYTE1(v40) = v56;
      }
      sub_244BC243C((uint64_t)&v45, (uint64_t)v54, (unsigned __int8 *)&v40);
      while (sub_244BC24CC((uint64_t)&v45))
      {
        id v7 = objc_opt_new();
        long long v8 = v45;
        id v9 = [NSString alloc];
        id v11 = objc_msgSend_initWithBytes_length_encoding_(v9, v10, v8, *((void *)&v8 + 1), 4);
        objc_msgSend_setLabel_(v7, v12, (uint64_t)v11);

        BOOL v15 = objc_msgSend_label(v7, v13, v14);

        if (!v15)
        {
          *(_OWORD *)a3 = xmmword_26519A4A0;
          *(void *)(a3 + 16) = 6096;
          goto LABEL_28;
        }
        int v17 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v16, v46);
        objc_msgSend_setMode_(v7, v18, (uint64_t)v17);

        uint64_t v19 = objc_opt_new();
        v57[0] = v48;
        if (v48) {
          v57[1] = v49;
        }
        sub_244BC25EC((uint64_t)&v40, (uint64_t)&v47, v57);
        while (sub_244BC2664((uint64_t)&v40))
        {
          uint64_t v21 = objc_opt_new();
          uint64_t v23 = v21;
          if ((_BYTE)v40)
          {
            uint64_t v24 = NSNumber;
            uint64_t v25 = sub_2446D1880(&v40);
            unsigned __int8 v27 = objc_msgSend_numberWithUnsignedShort_(v24, v26, *(unsigned __int16 *)v25);
            objc_msgSend_setMfgCode_(v23, v28, (uint64_t)v27);
          }
          else
          {
            objc_msgSend_setMfgCode_(v21, v22, 0);
          }
          char v30 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v29, WORD2(v40), v40);
          objc_msgSend_setValue_(v23, v31, (uint64_t)v30);

          objc_msgSend_addObject_(v19, v32, (uint64_t)v23);
        }
        if (v41 && v41 != 33)
        {
          uint64_t v37 = v43;
          int v38 = v42;
          *(_DWORD *)a3 = v41;
          *(_DWORD *)(a3 + 4) = v38;
          *(void *)(a3 + 8) = v37;
          *(void *)(a3 + 16) = v44;

LABEL_28:
LABEL_29:

          goto LABEL_30;
        }
        objc_msgSend_setModeTags_(v7, v20, (uint64_t)v19, v40);

        objc_msgSend_addObject_(v6, v33, (uint64_t)v7);
      }
      if (v50 && v50 != 33)
      {
        uint64_t v35 = v52;
        int v36 = v51;
        *(_DWORD *)a3 = v50;
        *(_DWORD *)(a3 + 4) = v36;
        *(void *)(a3 + 8) = v35;
        *(void *)(a3 + 16) = v53;
        goto LABEL_29;
      }
    }
  }

  return v6;
}

void sub_244BA8130(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BA8194(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
    case 1:
    case 2:
    case 3:
      *(_WORD *)uint64_t v21 = 0;
      sub_244CB3D8C(a2, v21, (uint64_t)&v17);
      *(_OWORD *)a3 = v17;
      *(void *)(a3 + 16) = v18;
      if (*(_DWORD *)a3) {
        goto LABEL_3;
      }
      uint64_t v7 = objc_msgSend_numberWithShort_(NSNumber, v5, *(__int16 *)v21);
      goto LABEL_8;
    case 4:
      v21[0] = 0;
      sub_244CB3E8C(a2, v21, (uint64_t)&v17);
      *(_OWORD *)a3 = v17;
      *(void *)(a3 + 16) = v18;
      if (*(_DWORD *)a3) {
        goto LABEL_3;
      }
      uint64_t v7 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v8, v21[0]);
LABEL_8:
      long long v6 = (void *)v7;
      goto LABEL_10;
    case 5:
      sub_244CB3988((uint64_t)v21);
      unsigned __int8 v22 = 0;
      sub_244CB39B8((uint64_t)v21, 0, 0);
      sub_24484B03C((uint64_t)v21, a2, (uint64_t)&v17);
      long long v6 = 0;
      *(_OWORD *)a3 = v17;
      *(void *)(a3 + 16) = v18;
      if (*(_DWORD *)a3) {
        goto LABEL_10;
      }
      long long v6 = objc_opt_new();
      v24[0] = v22;
      if (v22) {
        v24[1] = v23;
      }
      sub_244797544((uint64_t)&v17, (uint64_t)v21, v24);
      break;
    default:
      long long v6 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 6248;
      goto LABEL_10;
  }
  while (sub_2447975B4((uint64_t)&v17))
  {
    long long v10 = v17;
    id v11 = [NSString alloc];
    uint64_t v14 = objc_msgSend_initWithBytes_length_encoding_(v11, v12, v10, *((void *)&v10 + 1), 4);
    if (!v14)
    {
      *(_OWORD *)a3 = xmmword_26519A4B8;
      *(void *)(a3 + 16) = 6228;
      goto LABEL_23;
    }
    objc_msgSend_addObject_(v6, v13, (uint64_t)v14);
  }
  if (!v18 || v18 == 33) {
    goto LABEL_10;
  }
  uint64_t v15 = v19;
  int v16 = HIDWORD(v18);
  *(_DWORD *)a3 = v18;
  *(_DWORD *)(a3 + 4) = v16;
  *(void *)(a3 + 8) = v15;
  *(void *)(a3 + 16) = v20;
LABEL_23:

LABEL_3:
  long long v6 = 0;
LABEL_10:

  return v6;
}

void sub_244BA83EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BA8424(int a1, uint64_t a2, uint64_t a3)
{
  if (a1 == 3 || a1 == 2 || !a1)
  {
    unsigned int v9 = 0;
    sub_24484B2E8(a2, &v9, &v7);
    *(_OWORD *)a3 = v7;
    *(void *)(a3 + 16) = v8;
    if (*(_DWORD *)a3)
    {
      uint64_t v5 = 0;
    }
    else
    {
      uint64_t v5 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v4, v9);
    }
  }
  else
  {
    uint64_t v5 = 0;
    *(_DWORD *)a3 = 181;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "zap-generated/MTRAttributeTLVValueDecoder.mm";
    *(_DWORD *)(a3 + 16) = 6293;
  }

  return v5;
}

id sub_244BA84E0(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
      sub_244CB3988((uint64_t)v55);
      char v56 = 0;
      sub_244CB39B8(v8, 0, 0);
      sub_24484B03C((uint64_t)v55, a2, (uint64_t)&v46);
      long long v7 = 0;
      *(_OWORD *)a3 = v46;
      *(void *)(a3 + 16) = v47;
      if (*(_DWORD *)a3) {
        goto LABEL_36;
      }
      long long v7 = objc_opt_new();
      LOBYTE(v41) = v56;
      if (v56) {
        BYTE1(v41) = v57;
      }
      sub_244BC243C((uint64_t)&v46, (uint64_t)v55, (unsigned __int8 *)&v41);
      break;
    case 1:
      LOBYTE(v41) = 0;
      sub_244CB3E8C(a2, &v41, (uint64_t)&v46);
      *(_OWORD *)a3 = v46;
      *(void *)(a3 + 16) = v47;
      if (!*(_DWORD *)a3) {
        goto LABEL_27;
      }
      goto LABEL_35;
    case 2:
    case 3:
      LOWORD(v41) = 0;
      sub_2447F15BC(a2, (unsigned __int8 *)&v41, (uint64_t)&v46);
      *(_OWORD *)a3 = v46;
      *(void *)(a3 + 16) = v47;
      if (*(_DWORD *)a3) {
        BOOL v6 = 1;
      }
      else {
        BOOL v6 = BYTE1(v41) == 0;
      }
      if (v6)
      {
LABEL_35:
        long long v7 = 0;
      }
      else
      {
LABEL_27:
        long long v7 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v5, v41);
      }
      goto LABEL_36;
    default:
      long long v7 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 6401;
      goto LABEL_36;
  }
  while (sub_244BC24CC((uint64_t)&v46))
  {
    unsigned int v9 = objc_opt_new();
    long long v10 = v46;
    id v11 = [NSString alloc];
    id v13 = objc_msgSend_initWithBytes_length_encoding_(v11, v12, v10, *((void *)&v10 + 1), 4);
    objc_msgSend_setLabel_(v9, v14, (uint64_t)v13);

    long long v17 = objc_msgSend_label(v9, v15, v16);

    if (!v17)
    {
      *(_OWORD *)a3 = xmmword_26519A4D0;
      *(void *)(a3 + 16) = 6317;
      goto LABEL_33;
    }
    uint64_t v19 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v18, v47);
    objc_msgSend_setMode_(v9, v20, (uint64_t)v19);

    uint64_t v21 = objc_opt_new();
    v58[0] = v49;
    if (v49) {
      v58[1] = v50;
    }
    sub_244BC25EC((uint64_t)&v41, (uint64_t)&v48, v58);
    while (sub_244BC2664((uint64_t)&v41))
    {
      unsigned __int8 v23 = objc_opt_new();
      uint64_t v25 = v23;
      if ((_BYTE)v41)
      {
        int v26 = NSNumber;
        unsigned __int8 v27 = sub_2446D1880(&v41);
        unsigned __int8 v29 = objc_msgSend_numberWithUnsignedShort_(v26, v28, *(unsigned __int16 *)v27);
        objc_msgSend_setMfgCode_(v25, v30, (uint64_t)v29);
      }
      else
      {
        objc_msgSend_setMfgCode_(v23, v24, 0);
      }
      BOOL v32 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v31, WORD2(v41), v41);
      objc_msgSend_setValue_(v25, v33, (uint64_t)v32);

      objc_msgSend_addObject_(v21, v34, (uint64_t)v25);
    }
    if (v42 && v42 != 33)
    {
      uint64_t v38 = v44;
      int v39 = v43;
      *(_DWORD *)a3 = v42;
      *(_DWORD *)(a3 + 4) = v39;
      *(void *)(a3 + 8) = v38;
      *(void *)(a3 + 16) = v45;

LABEL_33:
LABEL_34:

      goto LABEL_35;
    }
    objc_msgSend_setModeTags_(v9, v22, (uint64_t)v21, v41);

    objc_msgSend_addObject_(v7, v35, (uint64_t)v9);
  }
  if (v51 && v51 != 33)
  {
    uint64_t v36 = v53;
    int v37 = v52;
    *(_DWORD *)a3 = v51;
    *(_DWORD *)(a3 + 4) = v37;
    *(void *)(a3 + 8) = v36;
    *(void *)(a3 + 16) = v54;
    goto LABEL_34;
  }
LABEL_36:

  return v7;
}

void sub_244BA88B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BA8928(int a1, uint64_t a2, uint64_t a3)
{
  if (a1)
  {
    id v4 = 0;
    *(_DWORD *)a3 = 181;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "zap-generated/MTRAttributeTLVValueDecoder.mm";
    *(_DWORD *)(a3 + 16) = 6424;
  }
  else
  {
    unsigned __int8 v9 = 0;
    sub_2447F6AD4(a2, &v9, &v7);
    *(_OWORD *)a3 = v7;
    *(void *)(a3 + 16) = v8;
    if (*(_DWORD *)a3)
    {
      id v4 = 0;
    }
    else
    {
      id v4 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v5, v9);
    }
  }

  return v4;
}

id sub_244BA89D4(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
      LOBYTE(v9) = 0;
      sub_2447FA994(a2, &v9, &v10);
      goto LABEL_3;
    case 1:
    case 2:
    case 3:
    case 8:
    case 9:
    case 11:
      LOBYTE(v9) = 0;
      sub_2447F5F24(a2, &v9, &v10);
      goto LABEL_3;
    case 4:
    case 7:
      LOBYTE(v9) = 0;
      sub_2447F1DCC(a2, &v9, &v10);
      goto LABEL_3;
    case 5:
    case 6:
      LOBYTE(v9) = 0;
      sub_244CB3C0C(a2, (char *)&v9, (uint64_t)&v10);
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        goto LABEL_4;
      }
      uint64_t v5 = objc_msgSend_numberWithBool_(NSNumber, v6, v9);
      break;
    case 10:
      LOBYTE(v9) = 0;
      sub_2446D1A48(a2, &v9, &v10);
LABEL_3:
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        goto LABEL_4;
      }
      uint64_t v5 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v4, v9);
      break;
    case 12:
      unsigned int v9 = 0;
      sub_244CB3FB0(a2, &v9, (uint64_t)&v10);
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3)
      {
LABEL_4:
        uint64_t v5 = 0;
      }
      else
      {
        uint64_t v5 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v7, v9);
      }
      break;
    default:
      uint64_t v5 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 6579;
      break;
  }

  return v5;
}

id sub_244BA8BDC(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
    case 1:
    case 2:
    case 3:
      unsigned int v9 = 0;
      sub_24484B2E8(a2, &v9, &v7);
      *(_OWORD *)a3 = v7;
      *(void *)(a3 + 16) = v8;
      if (*(_DWORD *)a3)
      {
        uint64_t v5 = 0;
      }
      else
      {
        uint64_t v5 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v4, v9);
      }
      break;
    default:
      uint64_t v5 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 6635;
      break;
  }

  return v5;
}

id sub_244BA8CC0(int a1, uint64_t a2, uint64_t a3)
{
  if (a1 == 1)
  {
    LOBYTE(v40) = 0;
    sub_244CB3E8C(a2, &v40, (uint64_t)&v45);
    *(_OWORD *)a3 = v45;
    *(void *)(a3 + 16) = v46;
    if (*(_DWORD *)a3)
    {
LABEL_30:
      BOOL v6 = 0;
    }
    else
    {
      BOOL v6 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v34, v40);
    }
  }
  else if (a1)
  {
    BOOL v6 = 0;
    *(_DWORD *)a3 = 181;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "zap-generated/MTRAttributeTLVValueDecoder.mm";
    *(_DWORD *)(a3 + 16) = 6713;
  }
  else
  {
    sub_244CB3988((uint64_t)v54);
    char v55 = 0;
    sub_244CB39B8(v5, 0, 0);
    sub_24484B03C((uint64_t)v54, a2, (uint64_t)&v45);
    BOOL v6 = 0;
    *(_OWORD *)a3 = v45;
    *(void *)(a3 + 16) = v46;
    if (!*(_DWORD *)a3)
    {
      BOOL v6 = objc_opt_new();
      LOBYTE(v40) = v55;
      if (v55) {
        BYTE1(v40) = v56;
      }
      sub_244BC243C((uint64_t)&v45, (uint64_t)v54, (unsigned __int8 *)&v40);
      while (sub_244BC24CC((uint64_t)&v45))
      {
        long long v7 = objc_opt_new();
        long long v8 = v45;
        id v9 = [NSString alloc];
        uint64_t v11 = objc_msgSend_initWithBytes_length_encoding_(v9, v10, v8, *((void *)&v8 + 1), 4);
        objc_msgSend_setLabel_(v7, v12, (uint64_t)v11);

        uint64_t v15 = objc_msgSend_label(v7, v13, v14);

        if (!v15)
        {
          *(_OWORD *)a3 = xmmword_26519A4E8;
          *(void *)(a3 + 16) = 6659;
          goto LABEL_28;
        }
        long long v17 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v16, v46);
        objc_msgSend_setMode_(v7, v18, (uint64_t)v17);

        uint64_t v19 = objc_opt_new();
        v57[0] = v48;
        if (v48) {
          v57[1] = v49;
        }
        sub_244BC25EC((uint64_t)&v40, (uint64_t)&v47, v57);
        while (sub_244BC2664((uint64_t)&v40))
        {
          uint64_t v21 = objc_opt_new();
          unsigned __int8 v23 = v21;
          if ((_BYTE)v40)
          {
            uint64_t v24 = NSNumber;
            uint64_t v25 = sub_2446D1880(&v40);
            unsigned __int8 v27 = objc_msgSend_numberWithUnsignedShort_(v24, v26, *(unsigned __int16 *)v25);
            objc_msgSend_setMfgCode_(v23, v28, (uint64_t)v27);
          }
          else
          {
            objc_msgSend_setMfgCode_(v21, v22, 0);
          }
          char v30 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v29, WORD2(v40), v40);
          objc_msgSend_setValue_(v23, v31, (uint64_t)v30);

          objc_msgSend_addObject_(v19, v32, (uint64_t)v23);
        }
        if (v41 && v41 != 33)
        {
          uint64_t v37 = v43;
          int v38 = v42;
          *(_DWORD *)a3 = v41;
          *(_DWORD *)(a3 + 4) = v38;
          *(void *)(a3 + 8) = v37;
          *(void *)(a3 + 16) = v44;

LABEL_28:
LABEL_29:

          goto LABEL_30;
        }
        objc_msgSend_setModeTags_(v7, v20, (uint64_t)v19, v40);

        objc_msgSend_addObject_(v6, v33, (uint64_t)v7);
      }
      if (v50 && v50 != 33)
      {
        uint64_t v35 = v52;
        int v36 = v51;
        *(_DWORD *)a3 = v50;
        *(_DWORD *)(a3 + 4) = v36;
        *(void *)(a3 + 8) = v35;
        *(void *)(a3 + 16) = v53;
        goto LABEL_29;
      }
    }
  }

  return v6;
}

void sub_244BA9038(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BA909C(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
    case 1:
      *(_DWORD *)uint64_t v19 = 0;
      sub_244CB3FB0(a2, v19, (uint64_t)&v16);
      *(_OWORD *)a3 = v16;
      *(void *)(a3 + 16) = v17;
      if (*(_DWORD *)a3) {
        goto LABEL_14;
      }
      uint64_t v6 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v7, *(unsigned int *)v19);
      goto LABEL_16;
    case 2:
    case 3:
    case 4:
    case 5:
    case 7:
      LOBYTE(v19[0]) = 0;
      sub_244CB3E8C(a2, v19, (uint64_t)&v16);
      *(_OWORD *)a3 = v16;
      *(void *)(a3 + 16) = v17;
      if (*(_DWORD *)a3) {
        goto LABEL_14;
      }
      uint64_t v6 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v5, LOBYTE(v19[0]));
      goto LABEL_16;
    case 6:
      sub_244CB3988((uint64_t)v19);
      unsigned __int8 v20 = 0;
      sub_244CB39B8((uint64_t)v19, 0, 0);
      sub_24484B03C((uint64_t)v19, a2, (uint64_t)&v16);
      long long v8 = 0;
      *(_OWORD *)a3 = v16;
      *(void *)(a3 + 16) = v17;
      if (*(_DWORD *)a3) {
        goto LABEL_17;
      }
      long long v8 = objc_opt_new();
      v22[0] = v20;
      if (v20) {
        v22[1] = v21;
      }
      sub_2446D1930((uint64_t)&v16, (uint64_t)v19, v22);
      while (sub_244794970((uint64_t)&v16))
      {
        long long v10 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v9, (unsigned __int16)v16);
        objc_msgSend_addObject_(v8, v11, (uint64_t)v10);
      }
      if (!DWORD2(v16) || DWORD2(v16) == 33) {
        goto LABEL_17;
      }
      uint64_t v14 = v17;
      int v15 = HIDWORD(v16);
      *(_DWORD *)a3 = DWORD2(v16);
      *(_DWORD *)(a3 + 4) = v15;
      *(void *)(a3 + 8) = v14;
      *(void *)(a3 + 16) = v18;

LABEL_14:
      long long v8 = 0;
      goto LABEL_17;
    case 8:
      v19[0] = 0;
      sub_244CB3F40(a2, v19, (uint64_t)&v16);
      *(_OWORD *)a3 = v16;
      *(void *)(a3 + 16) = v17;
      if (*(_DWORD *)a3) {
        goto LABEL_14;
      }
      uint64_t v6 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v12, v19[0]);
LABEL_16:
      long long v8 = (void *)v6;
LABEL_17:
      return v8;
    default:
      long long v8 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 6839;
      goto LABEL_17;
  }
}

void sub_244BA92FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BA9340(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
      LOBYTE(v68) = 0;
      char v72 = 0;
      sub_2447F50A0(a2, (uint64_t)&v68, &v64);
      *(_OWORD *)a3 = v64;
      *(void *)(a3 + 16) = v65;
      if (*(_DWORD *)a3) {
        BOOL v5 = 1;
      }
      else {
        BOOL v5 = v72 == 0;
      }
      if (v5) {
        goto LABEL_50;
      }
      id v6 = (id)objc_opt_new();
      if (!v72) {
        sub_24479484C();
      }
      unsigned __int8 v73 = v70;
      if (v70) {
        char v74 = v71;
      }
      sub_244797544((uint64_t)&v64, (uint64_t)&v68, &v73);
      while (sub_2447975B4((uint64_t)&v64))
      {
        long long v7 = v64;
        id v8 = [NSString alloc];
        uint64_t v11 = objc_msgSend_initWithBytes_length_encoding_(v8, v9, v7, *((void *)&v7 + 1), 4);
        if (!v11)
        {
          *(_OWORD *)a3 = xmmword_26519A500;
          *(void *)(a3 + 16) = 6865;
          goto LABEL_49;
        }
        objc_msgSend_addObject_(v6, v10, (uint64_t)v11);
      }
      if (v65 && v65 != 33)
      {
        uint64_t v49 = v66;
        int v50 = HIDWORD(v65);
        *(_DWORD *)a3 = v65;
        *(_DWORD *)(a3 + 4) = v50;
        *(void *)(a3 + 8) = v49;
        uint64_t v51 = v67[0];
        goto LABEL_48;
      }
      goto LABEL_51;
    case 1:
      LOWORD(v68) = 0;
      sub_2447F15BC(a2, (unsigned __int8 *)&v68, (uint64_t)&v64);
      *(_OWORD *)a3 = v64;
      *(void *)(a3 + 16) = v65;
      if (*(_DWORD *)a3) {
        BOOL v32 = 1;
      }
      else {
        BOOL v32 = BYTE1(v68) == 0;
      }
      if (v32) {
        goto LABEL_50;
      }
      goto LABEL_34;
    case 2:
      LOBYTE(v68) = 0;
      BYTE4(v68) = 0;
      sub_2447F4140(a2, (uint64_t)&v68, (uint64_t)&v64);
      *(_OWORD *)a3 = v64;
      *(void *)(a3 + 16) = v65;
      if (*(_DWORD *)a3) {
        BOOL v14 = 1;
      }
      else {
        BOOL v14 = BYTE4(v68) == 0;
      }
      if (v14) {
        goto LABEL_50;
      }
      uint64_t v15 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v13, v68);
      goto LABEL_35;
    case 3:
      sub_244CB3988((uint64_t)&v68);
      unsigned __int8 v70 = 0;
      sub_244CB39B8((uint64_t)&v68, 0, 0);
      sub_24484B03C((uint64_t)&v68, a2, (uint64_t)&v64);
      *(_OWORD *)a3 = v64;
      *(void *)(a3 + 16) = v65;
      if (*(_DWORD *)a3) {
        goto LABEL_50;
      }
      id v6 = (id)objc_opt_new();
      unsigned __int8 v73 = v70;
      if (v70) {
        char v74 = v71;
      }
      sub_244BC2318((uint64_t)&v64, (uint64_t)&v68, &v73);
      while (2)
      {
        if (sub_244BC2390((uint64_t)&v64))
        {
          long long v16 = objc_opt_new();
          uint64_t v18 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v17, v64);
          objc_msgSend_setOperationalStateID_(v16, v19, (uint64_t)v18);

          if (BYTE8(v64))
          {
            unsigned __int8 v21 = (uint64_t *)sub_2446D18A4((unsigned char *)&v64 + 8);
            uint64_t v22 = *v21;
            uint64_t v23 = v21[1];
            id v24 = [NSString alloc];
            int v26 = objc_msgSend_initWithBytes_length_encoding_(v24, v25, v22, v23, 4);
            objc_msgSend_setOperationalStateLabel_(v16, v27, (uint64_t)v26);

            char v30 = objc_msgSend_operationalStateLabel(v16, v28, v29);

            if (!v30)
            {
              *(_OWORD *)a3 = xmmword_26519A518;
              *(void *)(a3 + 16) = 6930;

LABEL_49:
LABEL_50:
              id v6 = 0;
              goto LABEL_51;
            }
          }
          else
          {
            objc_msgSend_setOperationalStateLabel_(v16, v20, 0);
          }
          objc_msgSend_addObject_(v6, v31, (uint64_t)v16);

          continue;
        }
        break;
      }
      if (!LODWORD(v67[0]) || LODWORD(v67[0]) == 33) {
        goto LABEL_51;
      }
      uint64_t v52 = v67[1];
      int v53 = HIDWORD(v67[0]);
      *(_DWORD *)a3 = v67[0];
      *(_DWORD *)(a3 + 4) = v53;
      *(void *)(a3 + 8) = v52;
      uint64_t v51 = v67[2];
LABEL_48:
      *(void *)(a3 + 16) = v51;
      goto LABEL_49;
    case 4:
      LOBYTE(v68) = 0;
      sub_2446D1A48(a2, &v68, &v64);
      *(_OWORD *)a3 = v64;
      *(void *)(a3 + 16) = v65;
      if (*(_DWORD *)a3) {
        goto LABEL_50;
      }
LABEL_34:
      uint64_t v15 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v12, v68);
LABEL_35:
      id v6 = (id)v15;
      goto LABEL_51;
    case 5:
      LOBYTE(v64) = 0;
      BYTE8(v64) = 0;
      LOBYTE(v67[0]) = 0;
      sub_2447EE994((uint64_t)&v64, a2, (uint64_t)&v68);
      *(_OWORD *)a3 = v68;
      *(void *)(a3 + 16) = v69;
      if (*(_DWORD *)a3) {
        goto LABEL_50;
      }
      long long v33 = objc_opt_new();
      uint64_t v35 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v34, v64);
      objc_msgSend_setErrorStateID_(v33, v36, (uint64_t)v35);

      if (BYTE8(v64))
      {
        int v38 = (uint64_t *)sub_24479DC08((unsigned char *)&v64 + 8);
        uint64_t v39 = *v38;
        uint64_t v40 = v38[1];
        id v41 = [NSString alloc];
        uint64_t v43 = objc_msgSend_initWithBytes_length_encoding_(v41, v42, v39, v40, 4);
        objc_msgSend_setErrorStateLabel_(v33, v44, (uint64_t)v43);

        objc_msgSend_errorStateLabel(v33, v45, v46);
        id v6 = (id)objc_claimAutoreleasedReturnValue();

        if (!v6)
        {
          unsigned __int8 v48 = &xmmword_26519A530;
LABEL_58:
          *(_OWORD *)a3 = *v48;
          *(void *)(a3 + 16) = *((void *)v48 + 2);
          goto LABEL_61;
        }
      }
      else
      {
        objc_msgSend_setErrorStateLabel_(v33, v37, 0);
      }
      if (LOBYTE(v67[0]))
      {
        char v55 = (uint64_t *)sub_24479DC08(v67);
        uint64_t v56 = *v55;
        uint64_t v57 = v55[1];
        id v58 = [NSString alloc];
        char v60 = objc_msgSend_initWithBytes_length_encoding_(v58, v59, v56, v57, 4);
        objc_msgSend_setErrorStateDetails_(v33, v61, (uint64_t)v60);

        objc_msgSend_errorStateDetails(v33, v62, v63);
        id v6 = (id)objc_claimAutoreleasedReturnValue();

        if (!v6)
        {
          unsigned __int8 v48 = &xmmword_26519A548;
          goto LABEL_58;
        }
      }
      else
      {
        objc_msgSend_setErrorStateDetails_(v33, v47, 0);
      }
      id v6 = v33;
LABEL_61:

LABEL_51:
      return v6;
    default:
      id v6 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 6996;
      goto LABEL_51;
  }
}

void sub_244BA991C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BA99B4(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
      LOBYTE(v68) = 0;
      char v72 = 0;
      sub_2447F50A0(a2, (uint64_t)&v68, &v64);
      *(_OWORD *)a3 = v64;
      *(void *)(a3 + 16) = v65;
      if (*(_DWORD *)a3) {
        BOOL v5 = 1;
      }
      else {
        BOOL v5 = v72 == 0;
      }
      if (v5) {
        goto LABEL_50;
      }
      id v6 = (id)objc_opt_new();
      if (!v72) {
        sub_24479484C();
      }
      unsigned __int8 v73 = v70;
      if (v70) {
        char v74 = v71;
      }
      sub_244797544((uint64_t)&v64, (uint64_t)&v68, &v73);
      while (sub_2447975B4((uint64_t)&v64))
      {
        long long v7 = v64;
        id v8 = [NSString alloc];
        uint64_t v11 = objc_msgSend_initWithBytes_length_encoding_(v8, v9, v7, *((void *)&v7 + 1), 4);
        if (!v11)
        {
          *(_OWORD *)a3 = xmmword_26519A560;
          *(void *)(a3 + 16) = 7022;
          goto LABEL_49;
        }
        objc_msgSend_addObject_(v6, v10, (uint64_t)v11);
      }
      if (v65 && v65 != 33)
      {
        uint64_t v49 = v66;
        int v50 = HIDWORD(v65);
        *(_DWORD *)a3 = v65;
        *(_DWORD *)(a3 + 4) = v50;
        *(void *)(a3 + 8) = v49;
        uint64_t v51 = v67[0];
        goto LABEL_48;
      }
      goto LABEL_51;
    case 1:
      LOWORD(v68) = 0;
      sub_2447F15BC(a2, (unsigned __int8 *)&v68, (uint64_t)&v64);
      *(_OWORD *)a3 = v64;
      *(void *)(a3 + 16) = v65;
      if (*(_DWORD *)a3) {
        BOOL v32 = 1;
      }
      else {
        BOOL v32 = BYTE1(v68) == 0;
      }
      if (v32) {
        goto LABEL_50;
      }
      goto LABEL_34;
    case 2:
      LOBYTE(v68) = 0;
      BYTE4(v68) = 0;
      sub_2447F4140(a2, (uint64_t)&v68, (uint64_t)&v64);
      *(_OWORD *)a3 = v64;
      *(void *)(a3 + 16) = v65;
      if (*(_DWORD *)a3) {
        BOOL v14 = 1;
      }
      else {
        BOOL v14 = BYTE4(v68) == 0;
      }
      if (v14) {
        goto LABEL_50;
      }
      uint64_t v15 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v13, v68);
      goto LABEL_35;
    case 3:
      sub_244CB3988((uint64_t)&v68);
      unsigned __int8 v70 = 0;
      sub_244CB39B8((uint64_t)&v68, 0, 0);
      sub_24484B03C((uint64_t)&v68, a2, (uint64_t)&v64);
      *(_OWORD *)a3 = v64;
      *(void *)(a3 + 16) = v65;
      if (*(_DWORD *)a3) {
        goto LABEL_50;
      }
      id v6 = (id)objc_opt_new();
      unsigned __int8 v73 = v70;
      if (v70) {
        char v74 = v71;
      }
      sub_244BC2318((uint64_t)&v64, (uint64_t)&v68, &v73);
      while (2)
      {
        if (sub_244BC2390((uint64_t)&v64))
        {
          long long v16 = objc_opt_new();
          uint64_t v18 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v17, v64);
          objc_msgSend_setOperationalStateID_(v16, v19, (uint64_t)v18);

          if (BYTE8(v64))
          {
            unsigned __int8 v21 = (uint64_t *)sub_2446D18A4((unsigned char *)&v64 + 8);
            uint64_t v22 = *v21;
            uint64_t v23 = v21[1];
            id v24 = [NSString alloc];
            int v26 = objc_msgSend_initWithBytes_length_encoding_(v24, v25, v22, v23, 4);
            objc_msgSend_setOperationalStateLabel_(v16, v27, (uint64_t)v26);

            char v30 = objc_msgSend_operationalStateLabel(v16, v28, v29);

            if (!v30)
            {
              *(_OWORD *)a3 = xmmword_26519A578;
              *(void *)(a3 + 16) = 7087;

LABEL_49:
LABEL_50:
              id v6 = 0;
              goto LABEL_51;
            }
          }
          else
          {
            objc_msgSend_setOperationalStateLabel_(v16, v20, 0);
          }
          objc_msgSend_addObject_(v6, v31, (uint64_t)v16);

          continue;
        }
        break;
      }
      if (!LODWORD(v67[0]) || LODWORD(v67[0]) == 33) {
        goto LABEL_51;
      }
      uint64_t v52 = v67[1];
      int v53 = HIDWORD(v67[0]);
      *(_DWORD *)a3 = v67[0];
      *(_DWORD *)(a3 + 4) = v53;
      *(void *)(a3 + 8) = v52;
      uint64_t v51 = v67[2];
LABEL_48:
      *(void *)(a3 + 16) = v51;
      goto LABEL_49;
    case 4:
      LOBYTE(v68) = 0;
      sub_244CB3E8C(a2, &v68, (uint64_t)&v64);
      *(_OWORD *)a3 = v64;
      *(void *)(a3 + 16) = v65;
      if (*(_DWORD *)a3) {
        goto LABEL_50;
      }
LABEL_34:
      uint64_t v15 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v12, v68);
LABEL_35:
      id v6 = (id)v15;
      goto LABEL_51;
    case 5:
      LOBYTE(v64) = 0;
      BYTE8(v64) = 0;
      LOBYTE(v67[0]) = 0;
      sub_2447EE994((uint64_t)&v64, a2, (uint64_t)&v68);
      *(_OWORD *)a3 = v68;
      *(void *)(a3 + 16) = v69;
      if (*(_DWORD *)a3) {
        goto LABEL_50;
      }
      long long v33 = objc_opt_new();
      uint64_t v35 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v34, v64);
      objc_msgSend_setErrorStateID_(v33, v36, (uint64_t)v35);

      if (BYTE8(v64))
      {
        int v38 = (uint64_t *)sub_24479DC08((unsigned char *)&v64 + 8);
        uint64_t v39 = *v38;
        uint64_t v40 = v38[1];
        id v41 = [NSString alloc];
        uint64_t v43 = objc_msgSend_initWithBytes_length_encoding_(v41, v42, v39, v40, 4);
        objc_msgSend_setErrorStateLabel_(v33, v44, (uint64_t)v43);

        objc_msgSend_errorStateLabel(v33, v45, v46);
        id v6 = (id)objc_claimAutoreleasedReturnValue();

        if (!v6)
        {
          unsigned __int8 v48 = &xmmword_26519A590;
LABEL_58:
          *(_OWORD *)a3 = *v48;
          *(void *)(a3 + 16) = *((void *)v48 + 2);
          goto LABEL_61;
        }
      }
      else
      {
        objc_msgSend_setErrorStateLabel_(v33, v37, 0);
      }
      if (LOBYTE(v67[0]))
      {
        char v55 = (uint64_t *)sub_24479DC08(v67);
        uint64_t v56 = *v55;
        uint64_t v57 = v55[1];
        id v58 = [NSString alloc];
        char v60 = objc_msgSend_initWithBytes_length_encoding_(v58, v59, v56, v57, 4);
        objc_msgSend_setErrorStateDetails_(v33, v61, (uint64_t)v60);

        objc_msgSend_errorStateDetails(v33, v62, v63);
        id v6 = (id)objc_claimAutoreleasedReturnValue();

        if (!v6)
        {
          unsigned __int8 v48 = &xmmword_26519A5A8;
          goto LABEL_58;
        }
      }
      else
      {
        objc_msgSend_setErrorStateDetails_(v33, v47, 0);
      }
      id v6 = v33;
LABEL_61:

LABEL_51:
      return v6;
    default:
      id v6 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 7153;
      goto LABEL_51;
  }
}

void sub_244BA9F90(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BAA028(int a1, uint64_t a2, uint64_t a3)
{
  if (a1 == 2)
  {
    sub_244CB3988((uint64_t)&v35);
    unsigned __int8 v37 = 0;
    sub_244CB39B8((uint64_t)&v35, 0, 0);
    sub_24484B03C((uint64_t)&v35, a2, (uint64_t)&v32);
    id v6 = 0;
    *(_OWORD *)a3 = v32;
    *(void *)(a3 + 16) = v33;
    if (*(_DWORD *)a3) {
      goto LABEL_18;
    }
    id v6 = objc_opt_new();
    v39[0] = v37;
    if (v37) {
      v39[1] = v38;
    }
    sub_244BC2920((uint64_t)&v32, (uint64_t)&v35, v39);
    while (sub_244BC28D8((uint64_t)&v32))
    {
      id v8 = objc_opt_new();
      long long v10 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v9, v32);
      objc_msgSend_setSceneCount_(v8, v11, (uint64_t)v10);

      id v13 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v12, BYTE1(v32));
      objc_msgSend_setCurrentScene_(v8, v14, (uint64_t)v13);

      long long v16 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v15, WORD1(v32));
      objc_msgSend_setCurrentGroup_(v8, v17, (uint64_t)v16);

      uint64_t v19 = objc_msgSend_numberWithBool_(NSNumber, v18, BYTE4(v32));
      objc_msgSend_setSceneValid_(v8, v20, (uint64_t)v19);

      uint64_t v22 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v21, BYTE5(v32));
      objc_msgSend_setRemainingCapacity_(v8, v23, (uint64_t)v22);

      uint64_t v25 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v24, BYTE6(v32));
      objc_msgSend_setFabricIndex_(v8, v26, (uint64_t)v25);

      objc_msgSend_addObject_(v6, v27, (uint64_t)v8);
    }
    if (!DWORD2(v32) || DWORD2(v32) == 33) {
      goto LABEL_18;
    }
    uint64_t v30 = v33;
    int v31 = HIDWORD(v32);
    *(_DWORD *)a3 = DWORD2(v32);
    *(_DWORD *)(a3 + 4) = v31;
    *(void *)(a3 + 8) = v30;
    *(void *)(a3 + 16) = v34;

LABEL_14:
    id v6 = 0;
    goto LABEL_18;
  }
  if (a1 == 1)
  {
    LOWORD(v35) = 0;
    sub_244CB3F40(a2, &v35, (uint64_t)&v32);
    *(_OWORD *)a3 = v32;
    *(void *)(a3 + 16) = v33;
    if (!*(_DWORD *)a3)
    {
      uint64_t v7 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v28, (unsigned __int16)v35);
      goto LABEL_17;
    }
    goto LABEL_14;
  }
  if (a1)
  {
    id v6 = 0;
    *(_DWORD *)a3 = 181;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "zap-generated/MTRAttributeTLVValueDecoder.mm";
    *(_DWORD *)(a3 + 16) = 7223;
    goto LABEL_18;
  }
  LOBYTE(v35) = 0;
  char v36 = 0;
  sub_2447F5E48(a2, (uint64_t)&v35, (uint64_t)&v32);
  id v6 = 0;
  *(_OWORD *)a3 = v32;
  *(void *)(a3 + 16) = v33;
  if (!*(_DWORD *)a3 && v36)
  {
    uint64_t v7 = objc_msgSend_numberWithUnsignedLongLong_(NSNumber, v5, v35);
LABEL_17:
    id v6 = (void *)v7;
  }
LABEL_18:

  return v6;
}

void sub_244BAA330(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BAA374(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
      LOBYTE(v34) = 0;
      sub_244CB3E8C(a2, &v34, (uint64_t)&v28);
      goto LABEL_6;
    case 1:
      LOBYTE(v34) = 0;
      sub_2447F1DCC(a2, &v34, &v28);
      goto LABEL_6;
    case 2:
      LOBYTE(v34) = 0;
      sub_2447F5F24(a2, &v34, &v28);
LABEL_6:
      *(_OWORD *)a3 = v28;
      *(void *)(a3 + 16) = v29;
      if (*(_DWORD *)a3) {
        goto LABEL_28;
      }
      uint64_t v7 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v5, v34);
      goto LABEL_15;
    case 3:
      LOBYTE(v34) = 0;
      sub_244CB3C0C(a2, (char *)&v34, (uint64_t)&v28);
      *(_OWORD *)a3 = v28;
      *(void *)(a3 + 16) = v29;
      if (*(_DWORD *)a3) {
        goto LABEL_28;
      }
      uint64_t v7 = objc_msgSend_numberWithBool_(NSNumber, v8, v34);
      goto LABEL_15;
    case 4:
      LOBYTE(v34) = 0;
      char v35 = 0;
      sub_2447F4140(a2, (uint64_t)&v34, (uint64_t)&v28);
      *(_OWORD *)a3 = v28;
      *(void *)(a3 + 16) = v29;
      if (*(_DWORD *)a3) {
        BOOL v10 = 1;
      }
      else {
        BOOL v10 = v35 == 0;
      }
      if (v10) {
        goto LABEL_28;
      }
      uint64_t v7 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v9, v34);
LABEL_15:
      id v6 = (void *)v7;
      goto LABEL_29;
    case 5:
      sub_244CB3988((uint64_t)&v34);
      unsigned __int8 v36 = 0;
      sub_244CB39B8((uint64_t)&v34, 0, 0);
      sub_24484B03C((uint64_t)&v34, a2, (uint64_t)&v28);
      id v6 = 0;
      *(_OWORD *)a3 = v28;
      *(void *)(a3 + 16) = v29;
      if (*(_DWORD *)a3) {
        goto LABEL_29;
      }
      id v6 = objc_opt_new();
      v38[0] = v36;
      if (v36) {
        v38[1] = v37;
      }
      sub_244BC2A44((uint64_t)&v28, (uint64_t)&v34, v38);
      break;
    default:
      id v6 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 7327;
      goto LABEL_29;
  }
  while (sub_244BC2ABC((uint64_t)&v28))
  {
    uint64_t v11 = objc_opt_new();
    id v13 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v12, v28);
    objc_msgSend_setProductIdentifierType_(v11, v14, (uint64_t)v13);

    uint64_t v15 = *((void *)&v28 + 1);
    uint64_t v16 = v29;
    id v17 = [NSString alloc];
    uint64_t v19 = objc_msgSend_initWithBytes_length_encoding_(v17, v18, v15, v16, 4);
    objc_msgSend_setProductIdentifierValue_(v11, v20, (uint64_t)v19);

    uint64_t v23 = objc_msgSend_productIdentifierValue(v11, v21, v22);

    if (!v23)
    {
      *(_OWORD *)a3 = xmmword_26519A5C0;
      *(void *)(a3 + 16) = 7307;

      goto LABEL_27;
    }
    objc_msgSend_addObject_(v6, v24, (uint64_t)v11);
  }
  if (!v30 || v30 == 33) {
    goto LABEL_29;
  }
  uint64_t v25 = v32;
  int v26 = v31;
  *(_DWORD *)a3 = v30;
  *(_DWORD *)(a3 + 4) = v26;
  *(void *)(a3 + 8) = v25;
  *(void *)(a3 + 16) = v33;
LABEL_27:

LABEL_28:
  id v6 = 0;
LABEL_29:

  return v6;
}

void sub_244BAA6BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BAA708(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
      LOBYTE(v34) = 0;
      sub_244CB3E8C(a2, &v34, (uint64_t)&v28);
      goto LABEL_6;
    case 1:
      LOBYTE(v34) = 0;
      sub_2447F1DCC(a2, &v34, &v28);
      goto LABEL_6;
    case 2:
      LOBYTE(v34) = 0;
      sub_2447F5F24(a2, &v34, &v28);
LABEL_6:
      *(_OWORD *)a3 = v28;
      *(void *)(a3 + 16) = v29;
      if (*(_DWORD *)a3) {
        goto LABEL_28;
      }
      uint64_t v7 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v5, v34);
      goto LABEL_15;
    case 3:
      LOBYTE(v34) = 0;
      sub_244CB3C0C(a2, (char *)&v34, (uint64_t)&v28);
      *(_OWORD *)a3 = v28;
      *(void *)(a3 + 16) = v29;
      if (*(_DWORD *)a3) {
        goto LABEL_28;
      }
      uint64_t v7 = objc_msgSend_numberWithBool_(NSNumber, v8, v34);
      goto LABEL_15;
    case 4:
      LOBYTE(v34) = 0;
      char v35 = 0;
      sub_2447F4140(a2, (uint64_t)&v34, (uint64_t)&v28);
      *(_OWORD *)a3 = v28;
      *(void *)(a3 + 16) = v29;
      if (*(_DWORD *)a3) {
        BOOL v10 = 1;
      }
      else {
        BOOL v10 = v35 == 0;
      }
      if (v10) {
        goto LABEL_28;
      }
      uint64_t v7 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v9, v34);
LABEL_15:
      id v6 = (void *)v7;
      goto LABEL_29;
    case 5:
      sub_244CB3988((uint64_t)&v34);
      unsigned __int8 v36 = 0;
      sub_244CB39B8((uint64_t)&v34, 0, 0);
      sub_24484B03C((uint64_t)&v34, a2, (uint64_t)&v28);
      id v6 = 0;
      *(_OWORD *)a3 = v28;
      *(void *)(a3 + 16) = v29;
      if (*(_DWORD *)a3) {
        goto LABEL_29;
      }
      id v6 = objc_opt_new();
      v38[0] = v36;
      if (v36) {
        v38[1] = v37;
      }
      sub_244BC2A44((uint64_t)&v28, (uint64_t)&v34, v38);
      break;
    default:
      id v6 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 7431;
      goto LABEL_29;
  }
  while (sub_244BC2B68((uint64_t)&v28))
  {
    uint64_t v11 = objc_opt_new();
    id v13 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v12, v28);
    objc_msgSend_setProductIdentifierType_(v11, v14, (uint64_t)v13);

    uint64_t v15 = *((void *)&v28 + 1);
    uint64_t v16 = v29;
    id v17 = [NSString alloc];
    uint64_t v19 = objc_msgSend_initWithBytes_length_encoding_(v17, v18, v15, v16, 4);
    objc_msgSend_setProductIdentifierValue_(v11, v20, (uint64_t)v19);

    uint64_t v23 = objc_msgSend_productIdentifierValue(v11, v21, v22);

    if (!v23)
    {
      *(_OWORD *)a3 = xmmword_26519A5D8;
      *(void *)(a3 + 16) = 7411;

      goto LABEL_27;
    }
    objc_msgSend_addObject_(v6, v24, (uint64_t)v11);
  }
  if (!v30 || v30 == 33) {
    goto LABEL_29;
  }
  uint64_t v25 = v32;
  int v26 = v31;
  *(_DWORD *)a3 = v30;
  *(_DWORD *)(a3 + 4) = v26;
  *(void *)(a3 + 8) = v25;
  *(void *)(a3 + 16) = v33;
LABEL_27:

LABEL_28:
  id v6 = 0;
LABEL_29:

  return v6;
}

void sub_244BAAA50(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BAAA9C(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
    case 1:
    case 2:
      LOBYTE(v8) = 0;
      sub_244CB3E8C(a2, &v8, (uint64_t)&v9);
      goto LABEL_4;
    case 3:
    case 4:
    case 5:
    case 6:
      LOBYTE(v8) = 0;
      sub_24484B184(a2, &v8, &v9);
LABEL_4:
      *(_OWORD *)a3 = v9;
      *(void *)(a3 + 16) = v10;
      if (*(_DWORD *)a3) {
        goto LABEL_5;
      }
      BOOL v5 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v4, v8);
      break;
    case 7:
      unsigned __int16 v8 = 0;
      sub_24484B6B0(a2, &v8, &v9);
      *(_OWORD *)a3 = v9;
      *(void *)(a3 + 16) = v10;
      if (*(_DWORD *)a3)
      {
LABEL_5:
        BOOL v5 = 0;
      }
      else
      {
        BOOL v5 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v6, v8);
      }
      break;
    default:
      BOOL v5 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 7531;
      break;
  }

  return v5;
}

id sub_244BAABEC(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
    case 1:
    case 3:
      LOBYTE(v13) = 0;
      BYTE4(v13) = 0;
      sub_2447F4140(a2, (uint64_t)&v13, (uint64_t)&v15);
      *(_OWORD *)a3 = v15;
      *(void *)(a3 + 16) = v16;
      if (*(_DWORD *)a3) {
        BOOL v5 = 1;
      }
      else {
        BOOL v5 = BYTE4(v13) == 0;
      }
      if (v5) {
        goto LABEL_24;
      }
      id v6 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v4, v13);
      break;
    case 2:
      LOBYTE(v13) = 0;
      char v14 = 0;
      sub_2447F5E48(a2, (uint64_t)&v13, (uint64_t)&v15);
      *(_OWORD *)a3 = v15;
      *(void *)(a3 + 16) = v16;
      if (*(_DWORD *)a3) {
        BOOL v10 = 1;
      }
      else {
        BOOL v10 = v14 == 0;
      }
      if (v10) {
        goto LABEL_24;
      }
      id v6 = objc_msgSend_numberWithUnsignedLongLong_(NSNumber, v9, v13);
      break;
    case 4:
    case 5:
      LOWORD(v13) = 0;
      sub_2447F21B8(a2, (unsigned __int8 *)&v13, (uint64_t)&v15);
      goto LABEL_9;
    case 6:
    case 7:
      LOWORD(v13) = 0;
      sub_2447F15BC(a2, (unsigned __int8 *)&v13, (uint64_t)&v15);
LABEL_9:
      *(_OWORD *)a3 = v15;
      *(void *)(a3 + 16) = v16;
      if (*(_DWORD *)a3) {
        BOOL v8 = 1;
      }
      else {
        BOOL v8 = BYTE1(v13) == 0;
      }
      if (!v8) {
        goto LABEL_16;
      }
      goto LABEL_24;
    case 8:
    case 10:
      LOBYTE(v13) = 0;
      sub_244CB3E8C(a2, &v13, (uint64_t)&v15);
      *(_OWORD *)a3 = v15;
      *(void *)(a3 + 16) = v16;
      if (*(_DWORD *)a3) {
        goto LABEL_24;
      }
LABEL_16:
      id v6 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v7, v13);
      break;
    case 9:
      LOWORD(v13) = 0;
      sub_24484B6B0(a2, &v13, &v15);
      *(_OWORD *)a3 = v15;
      *(void *)(a3 + 16) = v16;
      if (*(_DWORD *)a3)
      {
LABEL_24:
        id v6 = 0;
      }
      else
      {
        id v6 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v11, (unsigned __int16)v13);
      }
      break;
    default:
      id v6 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 7696;
      break;
  }

  return v6;
}

id sub_244BAAE2C(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
      LOBYTE(v176) = 0;
      sub_2447F5F24(a2, &v176, &v160);
      goto LABEL_75;
    case 1:
      LOBYTE(v176) = 0;
      sub_244CB3E8C(a2, &v176, (uint64_t)&v160);
LABEL_75:
      *(_OWORD *)a3 = v160;
      *(void *)(a3 + 16) = v161;
      if (*(_DWORD *)a3) {
        goto LABEL_7;
      }
      uint64_t v7 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v129, v176);
      goto LABEL_8;
    case 2:
      sub_244CB3988((uint64_t)&v190);
      char v192 = 0;
      sub_244CB39B8(v9, 0, 0);
      sub_24484B03C((uint64_t)&v190, a2, (uint64_t)&v160);
      *(_OWORD *)a3 = v160;
      *(void *)(a3 + 16) = v161;
      if (*(_DWORD *)a3) {
        goto LABEL_7;
      }
      id v159 = (id)objc_opt_new();
      LOBYTE(v176) = v192;
      if (v192) {
        BYTE1(v176) = v193;
      }
      sub_244BC2C14((uint64_t)&v160, (uint64_t)&v190, (unsigned __int8 *)&v176);
      break;
    case 3:
      sub_244CB3988((uint64_t)&v176);
      unsigned __int8 v184 = 0;
      sub_244CB39B8((uint64_t)&v176, 0, 0);
      sub_24484B03C((uint64_t)&v176, a2, (uint64_t)&v160);
      *(_OWORD *)a3 = v160;
      *(void *)(a3 + 16) = v161;
      if (*(_DWORD *)a3) {
        goto LABEL_7;
      }
      id v159 = (id)objc_opt_new();
      unsigned __int8 v190 = v184;
      if (v184) {
        char v191 = v185;
      }
      sub_244BC2F10((uint64_t)&v160, (uint64_t)&v176, &v190);
      while (sub_244BC2FA8((uint64_t)&v160))
      {
        unsigned __int8 v70 = objc_opt_new();
        char v72 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v71, (unsigned __int16)v160);
        objc_msgSend_setMeasurementType_(v70, v73, (uint64_t)v72);

        uint64_t v75 = objc_msgSend_numberWithLongLong_(NSNumber, v74, *((uint64_t *)&v160 + 1));
        objc_msgSend_setMin_(v70, v76, (uint64_t)v75);

        uint64_t v78 = objc_msgSend_numberWithLongLong_(NSNumber, v77, v161);
        objc_msgSend_setMax_(v70, v79, (uint64_t)v78);

        if (LOBYTE(v162[0]))
        {
          unsigned __int8 v81 = NSNumber;
          int v82 = sub_2446F12CC(v162);
          uint64_t v84 = objc_msgSend_numberWithUnsignedInt_(v81, v83, *(unsigned int *)v82);
          objc_msgSend_setStartTimestamp_(v70, v85, (uint64_t)v84);
        }
        else
        {
          objc_msgSend_setStartTimestamp_(v70, v80, 0);
        }
        if ((_BYTE)v163)
        {
          char v87 = NSNumber;
          char v88 = sub_2446F12CC(&v163);
          unsigned __int8 v90 = objc_msgSend_numberWithUnsignedInt_(v87, v89, *(unsigned int *)v88);
          objc_msgSend_setEndTimestamp_(v70, v91, (uint64_t)v90);
        }
        else
        {
          objc_msgSend_setEndTimestamp_(v70, v86, 0);
        }
        if ((_BYTE)v164)
        {
          int v93 = NSNumber;
          uint64_t v94 = sub_2446F12CC(&v164);
          BOOL v96 = objc_msgSend_numberWithUnsignedInt_(v93, v95, *(unsigned int *)v94);
          objc_msgSend_setMinTimestamp_(v70, v97, (uint64_t)v96);
        }
        else
        {
          objc_msgSend_setMinTimestamp_(v70, v92, 0);
        }
        if (v165[0])
        {
          uint64_t v99 = NSNumber;
          int v100 = sub_2446F12CC(v165);
          uint64_t v102 = objc_msgSend_numberWithUnsignedInt_(v99, v101, *(unsigned int *)v100);
          objc_msgSend_setMaxTimestamp_(v70, v103, (uint64_t)v102);
        }
        else
        {
          objc_msgSend_setMaxTimestamp_(v70, v98, 0);
        }
        if (v166[0])
        {
          uint64_t v105 = NSNumber;
          uint64_t v106 = (uint64_t *)sub_2446F7170(v166);
          uint64_t v108 = objc_msgSend_numberWithUnsignedLongLong_(v105, v107, *v106);
          objc_msgSend_setStartSystime_(v70, v109, (uint64_t)v108);
        }
        else
        {
          objc_msgSend_setStartSystime_(v70, v104, 0);
        }
        if (v167[0])
        {
          long long v111 = NSNumber;
          uint64_t v112 = (uint64_t *)sub_2446F7170(v167);
          int v114 = objc_msgSend_numberWithUnsignedLongLong_(v111, v113, *v112);
          objc_msgSend_setEndSystime_(v70, v115, (uint64_t)v114);
        }
        else
        {
          objc_msgSend_setEndSystime_(v70, v110, 0);
        }
        if (v168[0])
        {
          unsigned __int8 v117 = NSNumber;
          char v118 = (uint64_t *)sub_2446F7170(v168);
          int v120 = objc_msgSend_numberWithUnsignedLongLong_(v117, v119, *v118);
          objc_msgSend_setMinSystime_(v70, v121, (uint64_t)v120);
        }
        else
        {
          objc_msgSend_setMinSystime_(v70, v116, 0);
        }
        if (LOBYTE(v171[0]))
        {
          uint64_t v123 = NSNumber;
          unsigned __int8 v124 = (uint64_t *)sub_2446F7170(v171);
          char v126 = objc_msgSend_numberWithUnsignedLongLong_(v123, v125, *v124);
          objc_msgSend_setMaxSystime_(v70, v127, (uint64_t)v126);
        }
        else
        {
          objc_msgSend_setMaxSystime_(v70, v122, 0);
        }
        objc_msgSend_addObject_(v159, v128, (uint64_t)v70);
      }
      if (!v173 || v173 == 33) {
        goto LABEL_9;
      }
      uint64_t v150 = v174;
      int v151 = HIDWORD(v173);
      uint64_t v152 = a3;
      *(_DWORD *)a3 = v173;
      *(_DWORD *)(a3 + 4) = v151;
      *(void *)(a3 + 8) = v150;
      uint64_t v153 = v175;
      goto LABEL_113;
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 17:
    case 18:
      LOBYTE(v176) = 0;
      LOBYTE(v177) = 0;
      sub_2447FB200(a2, (uint64_t)&v176, (uint64_t)&v160);
      *(_OWORD *)a3 = v160;
      *(void *)(a3 + 16) = v161;
      if (*(_DWORD *)a3) {
        BOOL v6 = 1;
      }
      else {
        BOOL v6 = v177 == 0;
      }
      if (v6) {
        goto LABEL_7;
      }
      uint64_t v7 = objc_msgSend_numberWithLongLong_(NSNumber, v5, v176);
LABEL_8:
      id v159 = (id)v7;
      goto LABEL_9;
    case 15:
      LOBYTE(v176) = 0;
      LOBYTE(v186) = 0;
      sub_2447F50A0(a2, (uint64_t)&v176, &v160);
      *(_OWORD *)a3 = v160;
      *(void *)(a3 + 16) = v161;
      if (*(_DWORD *)a3) {
        BOOL v130 = 1;
      }
      else {
        BOOL v130 = v186 == 0;
      }
      if (v130) {
        goto LABEL_7;
      }
      id v159 = (id)objc_opt_new();
      if (!(_BYTE)v186) {
        sub_24479484C();
      }
      unsigned __int8 v190 = v184;
      if (v184) {
        char v191 = v185;
      }
      sub_244BC3074((uint64_t)&v160, (uint64_t)&v176, &v190);
      while (sub_244BC30F0((uint64_t)&v160))
      {
        uint64_t v131 = objc_opt_new();
        char v133 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v132, v160);
        objc_msgSend_setOrder_(v131, v134, (uint64_t)v133);

        if ((_BYTE)v161)
        {
          char v136 = objc_msgSend_numberWithLongLong_(NSNumber, v135, *((uint64_t *)&v160 + 1));
          objc_msgSend_setMeasurement_(v131, v137, (uint64_t)v136);
        }
        else
        {
          objc_msgSend_setMeasurement_(v131, v135, 0);
        }
        objc_msgSend_addObject_(v159, v138, (uint64_t)v131);
      }
      goto LABEL_104;
    case 16:
      LOBYTE(v176) = 0;
      LOBYTE(v186) = 0;
      sub_2447F50A0(a2, (uint64_t)&v176, &v160);
      *(_OWORD *)a3 = v160;
      *(void *)(a3 + 16) = v161;
      if (*(_DWORD *)a3) {
        BOOL v139 = 1;
      }
      else {
        BOOL v139 = v186 == 0;
      }
      if (v139) {
        goto LABEL_7;
      }
      id v159 = (id)objc_opt_new();
      if (!(_BYTE)v186) {
        sub_24479484C();
      }
      unsigned __int8 v190 = v184;
      if (v184) {
        char v191 = v185;
      }
      sub_244BC3074((uint64_t)&v160, (uint64_t)&v176, &v190);
      while (sub_244BC30F0((uint64_t)&v160))
      {
        uint64_t v140 = objc_opt_new();
        int v142 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v141, v160);
        objc_msgSend_setOrder_(v140, v143, (uint64_t)v142);

        if ((_BYTE)v161)
        {
          int v145 = objc_msgSend_numberWithLongLong_(NSNumber, v144, *((uint64_t *)&v160 + 1));
          objc_msgSend_setMeasurement_(v140, v146, (uint64_t)v145);
        }
        else
        {
          objc_msgSend_setMeasurement_(v140, v144, 0);
        }
        objc_msgSend_addObject_(v159, v147, (uint64_t)v140);
      }
LABEL_104:
      if (!v162[0] || v162[0] == 33) {
        goto LABEL_9;
      }
      uint64_t v148 = v163;
      int v149 = v162[1];
      *(_DWORD *)a3 = v162[0];
      *(_DWORD *)(a3 + 4) = v149;
      *(void *)(a3 + 8) = v148;
      *(void *)(a3 + 16) = v164;
      goto LABEL_115;
    default:
      id v159 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 8144;
      goto LABEL_9;
  }
  while (sub_244BC2CA8((uint64_t)&v160))
  {
    BOOL v10 = objc_opt_new();
    BOOL v12 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v11, (unsigned __int16)v160);
    char v158 = v10;
    objc_msgSend_setMeasurementType_(v10, v13, (uint64_t)v12);

    long long v15 = objc_msgSend_numberWithBool_(NSNumber, v14, BYTE2(v160));
    objc_msgSend_setMeasured_(v10, v16, (uint64_t)v15);

    uint64_t v18 = objc_msgSend_numberWithLongLong_(NSNumber, v17, *((uint64_t *)&v160 + 1));
    objc_msgSend_setMinMeasuredValue_(v10, v19, (uint64_t)v18);

    unsigned __int8 v21 = objc_msgSend_numberWithLongLong_(NSNumber, v20, v161);
    objc_msgSend_setMaxMeasuredValue_(v10, v22, (uint64_t)v21);

    uint64_t v23 = objc_opt_new();
    v194[0] = v169;
    if (v169) {
      v194[1] = v170;
    }
    sub_244BC2DC8((uint64_t)&v176, (uint64_t)v162, v194);
    while (sub_244BC2E50((uint64_t)&v176))
    {
      uint64_t v25 = objc_opt_new();
      unsigned __int8 v27 = objc_msgSend_numberWithLongLong_(NSNumber, v26, v176);
      objc_msgSend_setRangeMin_(v25, v28, (uint64_t)v27);

      int v30 = objc_msgSend_numberWithLongLong_(NSNumber, v29, v177);
      objc_msgSend_setRangeMax_(v25, v31, (uint64_t)v30);

      if (v178[0])
      {
        uint64_t v33 = NSNumber;
        unsigned int v34 = sub_2446D1880(v178);
        unsigned __int8 v36 = objc_msgSend_numberWithUnsignedShort_(v33, v35, *(unsigned __int16 *)v34);
        objc_msgSend_setPercentMax_(v25, v37, (uint64_t)v36);
      }
      else
      {
        objc_msgSend_setPercentMax_(v25, v32, 0);
      }
      if (v179[0])
      {
        uint64_t v39 = NSNumber;
        uint64_t v40 = sub_2446D1880(v179);
        int v42 = objc_msgSend_numberWithUnsignedShort_(v39, v41, *(unsigned __int16 *)v40);
        objc_msgSend_setPercentMin_(v25, v43, (uint64_t)v42);
      }
      else
      {
        objc_msgSend_setPercentMin_(v25, v38, 0);
      }
      if (v180[0])
      {
        long long v45 = NSNumber;
        uint64_t v46 = sub_2446D1880(v180);
        unsigned __int8 v48 = objc_msgSend_numberWithUnsignedShort_(v45, v47, *(unsigned __int16 *)v46);
        objc_msgSend_setPercentTypical_(v25, v49, (uint64_t)v48);
      }
      else
      {
        objc_msgSend_setPercentTypical_(v25, v44, 0);
      }
      if (v181[0])
      {
        uint64_t v51 = NSNumber;
        uint64_t v52 = (uint64_t *)sub_2446F7170(v181);
        uint64_t v54 = objc_msgSend_numberWithUnsignedLongLong_(v51, v53, *v52);
        objc_msgSend_setFixedMax_(v25, v55, (uint64_t)v54);
      }
      else
      {
        objc_msgSend_setFixedMax_(v25, v50, 0);
      }
      if (v182[0])
      {
        uint64_t v57 = NSNumber;
        id v58 = (uint64_t *)sub_2446F7170(v182);
        char v60 = objc_msgSend_numberWithUnsignedLongLong_(v57, v59, *v58);
        objc_msgSend_setFixedMin_(v25, v61, (uint64_t)v60);
      }
      else
      {
        objc_msgSend_setFixedMin_(v25, v56, 0);
      }
      if (v183[0])
      {
        uint64_t v63 = NSNumber;
        long long v64 = (uint64_t *)sub_2446F7170(v183);
        uint64_t v66 = objc_msgSend_numberWithUnsignedLongLong_(v63, v65, *v64);
        objc_msgSend_setFixedTypical_(v25, v67, (uint64_t)v66);
      }
      else
      {
        objc_msgSend_setFixedTypical_(v25, v62, 0);
      }
      objc_msgSend_addObject_(v23, v68, (uint64_t)v25);
    }
    if (v186 && v186 != 33)
    {
      uint64_t v156 = v188;
      int v157 = v187;
      *(_DWORD *)a3 = v186;
      *(_DWORD *)(a3 + 4) = v157;
      *(void *)(a3 + 8) = v156;
      *(void *)(a3 + 16) = v189;

      goto LABEL_115;
    }
    objc_msgSend_setAccuracyRanges_(v158, v24, (uint64_t)v23);

    objc_msgSend_addObject_(v159, v69, (uint64_t)v158);
  }
  if (!v171[0] || v171[0] == 33) {
    goto LABEL_9;
  }
  uint64_t v154 = v172;
  int v155 = v171[1];
  uint64_t v152 = a3;
  *(_DWORD *)a3 = v171[0];
  *(_DWORD *)(a3 + 4) = v155;
  *(void *)(a3 + 8) = v154;
  uint64_t v153 = v173;
LABEL_113:
  *(void *)(v152 + 16) = v153;
LABEL_115:

LABEL_7:
  id v159 = 0;
LABEL_9:

  return v159;
}

void sub_244BABA0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

id sub_244BABB90(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
      LOWORD(v201) = 0;
      BYTE2(v201) = 0;
      *((void *)&v201 + 1) = 0;
      uint64_t v202 = 0;
      sub_244CB3988((uint64_t)v203);
      unsigned __int8 v204 = 0;
      sub_244CB39B8(v5, 0, 0);
      sub_2447EE228((uint64_t)&v201, a2, (uint64_t)&v188);
      *(_OWORD *)a3 = v188;
      *(void *)(a3 + 16) = v189;
      if (*(_DWORD *)a3) {
        goto LABEL_63;
      }
      BOOL v6 = objc_opt_new();
      BOOL v8 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v7, (unsigned __int16)v201);
      objc_msgSend_setMeasurementType_(v6, v9, (uint64_t)v8);

      uint64_t v11 = objc_msgSend_numberWithBool_(NSNumber, v10, BYTE2(v201));
      objc_msgSend_setMeasured_(v6, v12, (uint64_t)v11);

      char v14 = objc_msgSend_numberWithLongLong_(NSNumber, v13, *((uint64_t *)&v201 + 1));
      objc_msgSend_setMinMeasuredValue_(v6, v15, (uint64_t)v14);

      id v17 = objc_msgSend_numberWithLongLong_(NSNumber, v16, v202);
      objc_msgSend_setMaxMeasuredValue_(v6, v18, (uint64_t)v17);

      uint64_t v19 = objc_opt_new();
      v206[0] = v204;
      if (v204) {
        v206[1] = v205;
      }
      sub_244BC2DC8((uint64_t)&v188, (uint64_t)v203, v206);
      while (sub_244BC2E50((uint64_t)&v188))
      {
        unsigned __int8 v21 = objc_opt_new();
        uint64_t v23 = objc_msgSend_numberWithLongLong_(NSNumber, v22, v188);
        objc_msgSend_setRangeMin_(v21, v24, (uint64_t)v23);

        int v26 = objc_msgSend_numberWithLongLong_(NSNumber, v25, *((uint64_t *)&v188 + 1));
        objc_msgSend_setRangeMax_(v21, v27, (uint64_t)v26);

        if ((_BYTE)v189)
        {
          uint64_t v29 = NSNumber;
          int v30 = sub_2446D1880(&v189);
          uint64_t v32 = objc_msgSend_numberWithUnsignedShort_(v29, v31, *(unsigned __int16 *)v30);
          objc_msgSend_setPercentMax_(v21, v33, (uint64_t)v32);
        }
        else
        {
          objc_msgSend_setPercentMax_(v21, v28, 0);
        }
        if (BYTE4(v189))
        {
          char v35 = NSNumber;
          unsigned __int8 v36 = sub_2446D1880((unsigned char *)&v189 + 4);
          unsigned __int8 v38 = objc_msgSend_numberWithUnsignedShort_(v35, v37, *(unsigned __int16 *)v36);
          objc_msgSend_setPercentMin_(v21, v39, (uint64_t)v38);
        }
        else
        {
          objc_msgSend_setPercentMin_(v21, v34, 0);
        }
        if (v190[0])
        {
          id v41 = NSNumber;
          int v42 = sub_2446D1880(v190);
          uint64_t v44 = objc_msgSend_numberWithUnsignedShort_(v41, v43, *(unsigned __int16 *)v42);
          objc_msgSend_setPercentTypical_(v21, v45, (uint64_t)v44);
        }
        else
        {
          objc_msgSend_setPercentTypical_(v21, v40, 0);
        }
        if (v191[0])
        {
          uint64_t v47 = NSNumber;
          unsigned __int8 v48 = (uint64_t *)sub_2446F7170(v191);
          int v50 = objc_msgSend_numberWithUnsignedLongLong_(v47, v49, *v48);
          objc_msgSend_setFixedMax_(v21, v51, (uint64_t)v50);
        }
        else
        {
          objc_msgSend_setFixedMax_(v21, v46, 0);
        }
        if (v193[0])
        {
          int v53 = NSNumber;
          uint64_t v54 = (uint64_t *)sub_2446F7170(v193);
          uint64_t v56 = objc_msgSend_numberWithUnsignedLongLong_(v53, v55, *v54);
          objc_msgSend_setFixedMin_(v21, v57, (uint64_t)v56);
        }
        else
        {
          objc_msgSend_setFixedMin_(v21, v52, 0);
        }
        if (v195[0])
        {
          char v59 = NSNumber;
          char v60 = (uint64_t *)sub_2446F7170(v195);
          uint64_t v62 = objc_msgSend_numberWithUnsignedLongLong_(v59, v61, *v60);
          objc_msgSend_setFixedTypical_(v21, v63, (uint64_t)v62);
        }
        else
        {
          objc_msgSend_setFixedTypical_(v21, v58, 0);
        }
        objc_msgSend_addObject_(v19, v64, (uint64_t)v21);
      }
      if (v197 && v197 != 33)
      {
        uint64_t v185 = v199;
        int v186 = v198;
        *(_DWORD *)a3 = v197;
        *(_DWORD *)(a3 + 4) = v186;
        *(void *)(a3 + 8) = v185;
        *(void *)(a3 + 16) = v200;

        id v67 = 0;
        int v119 = v6;
      }
      else
      {
        int v119 = v6;
        objc_msgSend_setAccuracyRanges_(v6, v20, (uint64_t)v19);

        id v67 = v6;
      }
      goto LABEL_147;
    case 1:
      LOBYTE(v188) = 0;
      char v194 = 0;
      sub_244815280(a2, (uint64_t)&v188, &v201);
      *(_OWORD *)a3 = v201;
      *(void *)(a3 + 16) = v202;
      if (*(_DWORD *)a3) {
        BOOL v99 = 1;
      }
      else {
        BOOL v99 = v194 == 0;
      }
      if (v99) {
        goto LABEL_63;
      }
      id v67 = (id)objc_opt_new();
      if (!v194) {
        goto LABEL_155;
      }
      char v101 = objc_msgSend_numberWithLongLong_(NSNumber, v100, v188);
      objc_msgSend_setEnergy_(v67, v102, (uint64_t)v101);

      if (!v194) {
        goto LABEL_155;
      }
      if (BYTE8(v188))
      {
        unsigned int v104 = NSNumber;
        uint64_t v105 = sub_2447A4A8C((unsigned char *)&v188 + 8);
        uint64_t v107 = objc_msgSend_numberWithUnsignedInt_(v104, v106, *(unsigned int *)v105);
        objc_msgSend_setStartTimestamp_(v67, v108, (uint64_t)v107);
      }
      else
      {
        objc_msgSend_setStartTimestamp_(v67, v103, 0);
      }
      if (!v194) {
        goto LABEL_155;
      }
      if ((_BYTE)v189)
      {
        uint64_t v154 = NSNumber;
        int v155 = sub_2447A4A8C(&v189);
        int v157 = objc_msgSend_numberWithUnsignedInt_(v154, v156, *(unsigned int *)v155);
        objc_msgSend_setEndTimestamp_(v67, v158, (uint64_t)v157);
      }
      else
      {
        objc_msgSend_setEndTimestamp_(v67, v109, 0);
      }
      if (!v194) {
        goto LABEL_155;
      }
      if (v190[0])
      {
        uint64_t v176 = NSNumber;
        uint64_t v177 = (uint64_t *)sub_24479DC08(v190);
        char v179 = objc_msgSend_numberWithUnsignedLongLong_(v176, v178, *v177);
        objc_msgSend_setStartSystime_(v67, v180, (uint64_t)v179);
      }
      else
      {
        objc_msgSend_setStartSystime_(v67, v159, 0);
      }
      if (!v194) {
LABEL_155:
      }
        sub_24479484C();
      if (v192[0]) {
        goto LABEL_143;
      }
      goto LABEL_144;
    case 2:
      LOBYTE(v188) = 0;
      char v194 = 0;
      sub_244815280(a2, (uint64_t)&v188, &v201);
      *(_OWORD *)a3 = v201;
      *(void *)(a3 + 16) = v202;
      if (*(_DWORD *)a3) {
        BOOL v77 = 1;
      }
      else {
        BOOL v77 = v194 == 0;
      }
      if (v77) {
        goto LABEL_63;
      }
      id v67 = (id)objc_opt_new();
      if (!v194) {
        goto LABEL_153;
      }
      unsigned __int8 v79 = objc_msgSend_numberWithLongLong_(NSNumber, v78, v188);
      objc_msgSend_setEnergy_(v67, v80, (uint64_t)v79);

      if (!v194) {
        goto LABEL_153;
      }
      if (BYTE8(v188))
      {
        int v82 = NSNumber;
        int v83 = sub_2447A4A8C((unsigned char *)&v188 + 8);
        uint64_t v85 = objc_msgSend_numberWithUnsignedInt_(v82, v84, *(unsigned int *)v83);
        objc_msgSend_setStartTimestamp_(v67, v86, (uint64_t)v85);
      }
      else
      {
        objc_msgSend_setStartTimestamp_(v67, v81, 0);
      }
      if (!v194) {
        goto LABEL_153;
      }
      if ((_BYTE)v189)
      {
        int v142 = NSNumber;
        uint64_t v143 = sub_2447A4A8C(&v189);
        int v145 = objc_msgSend_numberWithUnsignedInt_(v142, v144, *(unsigned int *)v143);
        objc_msgSend_setEndTimestamp_(v67, v146, (uint64_t)v145);
      }
      else
      {
        objc_msgSend_setEndTimestamp_(v67, v87, 0);
      }
      if (!v194) {
        goto LABEL_153;
      }
      if (v190[0])
      {
        char v166 = NSNumber;
        char v167 = (uint64_t *)sub_24479DC08(v190);
        unsigned __int8 v169 = objc_msgSend_numberWithUnsignedLongLong_(v166, v168, *v167);
        objc_msgSend_setStartSystime_(v67, v170, (uint64_t)v169);
      }
      else
      {
        objc_msgSend_setStartSystime_(v67, v147, 0);
      }
      if (!v194) {
LABEL_153:
      }
        sub_24479484C();
      if (v192[0]) {
        goto LABEL_143;
      }
      goto LABEL_144;
    case 3:
      LOBYTE(v188) = 0;
      char v194 = 0;
      sub_244815280(a2, (uint64_t)&v188, &v201);
      *(_OWORD *)a3 = v201;
      *(void *)(a3 + 16) = v202;
      if (*(_DWORD *)a3) {
        BOOL v88 = 1;
      }
      else {
        BOOL v88 = v194 == 0;
      }
      if (v88) {
        goto LABEL_63;
      }
      id v67 = (id)objc_opt_new();
      if (!v194) {
        goto LABEL_154;
      }
      unsigned __int8 v90 = objc_msgSend_numberWithLongLong_(NSNumber, v89, v188);
      objc_msgSend_setEnergy_(v67, v91, (uint64_t)v90);

      if (!v194) {
        goto LABEL_154;
      }
      if (BYTE8(v188))
      {
        int v93 = NSNumber;
        uint64_t v94 = sub_2447A4A8C((unsigned char *)&v188 + 8);
        BOOL v96 = objc_msgSend_numberWithUnsignedInt_(v93, v95, *(unsigned int *)v94);
        objc_msgSend_setStartTimestamp_(v67, v97, (uint64_t)v96);
      }
      else
      {
        objc_msgSend_setStartTimestamp_(v67, v92, 0);
      }
      if (!v194) {
        goto LABEL_154;
      }
      if ((_BYTE)v189)
      {
        uint64_t v148 = NSNumber;
        int v149 = sub_2447A4A8C(&v189);
        int v151 = objc_msgSend_numberWithUnsignedInt_(v148, v150, *(unsigned int *)v149);
        objc_msgSend_setEndTimestamp_(v67, v152, (uint64_t)v151);
      }
      else
      {
        objc_msgSend_setEndTimestamp_(v67, v98, 0);
      }
      if (!v194) {
        goto LABEL_154;
      }
      if (v190[0])
      {
        uint64_t v171 = NSNumber;
        uint64_t v172 = (uint64_t *)sub_24479DC08(v190);
        uint64_t v174 = objc_msgSend_numberWithUnsignedLongLong_(v171, v173, *v172);
        objc_msgSend_setStartSystime_(v67, v175, (uint64_t)v174);
      }
      else
      {
        objc_msgSend_setStartSystime_(v67, v153, 0);
      }
      if (!v194) {
LABEL_154:
      }
        sub_24479484C();
      if (v192[0]) {
        goto LABEL_143;
      }
      goto LABEL_144;
    case 4:
      LOBYTE(v188) = 0;
      char v194 = 0;
      sub_244815280(a2, (uint64_t)&v188, &v201);
      *(_OWORD *)a3 = v201;
      *(void *)(a3 + 16) = v202;
      if (*(_DWORD *)a3) {
        BOOL v65 = 1;
      }
      else {
        BOOL v65 = v194 == 0;
      }
      if (v65) {
        goto LABEL_63;
      }
      id v67 = (id)objc_opt_new();
      if (!v194) {
        goto LABEL_152;
      }
      long long v68 = objc_msgSend_numberWithLongLong_(NSNumber, v66, v188);
      objc_msgSend_setEnergy_(v67, v69, (uint64_t)v68);

      if (!v194) {
        goto LABEL_152;
      }
      if (BYTE8(v188))
      {
        char v71 = NSNumber;
        char v72 = sub_2447A4A8C((unsigned char *)&v188 + 8);
        char v74 = objc_msgSend_numberWithUnsignedInt_(v71, v73, *(unsigned int *)v72);
        objc_msgSend_setStartTimestamp_(v67, v75, (uint64_t)v74);
      }
      else
      {
        objc_msgSend_setStartTimestamp_(v67, v70, 0);
      }
      if (!v194) {
        goto LABEL_152;
      }
      if ((_BYTE)v189)
      {
        char v136 = NSNumber;
        v137 = sub_2447A4A8C(&v189);
        BOOL v139 = objc_msgSend_numberWithUnsignedInt_(v136, v138, *(unsigned int *)v137);
        objc_msgSend_setEndTimestamp_(v67, v140, (uint64_t)v139);
      }
      else
      {
        objc_msgSend_setEndTimestamp_(v67, v76, 0);
      }
      if (!v194) {
        goto LABEL_152;
      }
      if (v190[0])
      {
        long long v160 = NSNumber;
        uint64_t v161 = (uint64_t *)sub_24479DC08(v190);
        uint64_t v163 = objc_msgSend_numberWithUnsignedLongLong_(v160, v162, *v161);
        objc_msgSend_setStartSystime_(v67, v164, (uint64_t)v163);
      }
      else
      {
        objc_msgSend_setStartSystime_(v67, v141, 0);
      }
      if (!v194) {
LABEL_152:
      }
        sub_24479484C();
      if (v192[0])
      {
LABEL_143:
        char v181 = NSNumber;
        long long v182 = (uint64_t *)sub_24479DC08(v192);
        int v119 = objc_msgSend_numberWithUnsignedLongLong_(v181, v183, *v182);
        objc_msgSend_setEndSystime_(v67, v184, (uint64_t)v119);
        goto LABEL_147;
      }
LABEL_144:
      objc_msgSend_setEndSystime_(v67, v165, 0);
      goto LABEL_148;
    case 5:
      LOBYTE(v188) = 0;
      char v196 = 0;
      sub_244815320(a2, (uint64_t)&v188, &v201);
      *(_OWORD *)a3 = v201;
      *(void *)(a3 + 16) = v202;
      if (*(_DWORD *)a3) {
        BOOL v110 = 1;
      }
      else {
        BOOL v110 = v196 == 0;
      }
      if (v110)
      {
LABEL_63:
        id v67 = 0;
        goto LABEL_148;
      }
      uint64_t v111 = objc_opt_new();
      id v67 = (id)v111;
      if (!v196) {
        goto LABEL_151;
      }
      if ((_BYTE)v188 && sub_244BC319C(&v188)[4])
      {
        if (!v196) {
          goto LABEL_151;
        }
        int v113 = NSNumber;
        int v114 = sub_244BC319C(&v188);
        if (!v114[4]) {
          goto LABEL_151;
        }
        uint64_t v116 = objc_msgSend_numberWithUnsignedInt_(v113, v115, *(unsigned int *)v114);
        objc_msgSend_setImportedResetTimestamp_(v67, v117, (uint64_t)v116);
      }
      else
      {
        objc_msgSend_setImportedResetTimestamp_(v67, v112, 0);
      }
      if (!v196) {
        goto LABEL_151;
      }
      if (BYTE12(v188) && sub_244BC319C((unsigned char *)&v188 + 12)[4])
      {
        if (!v196) {
          goto LABEL_151;
        }
        int v120 = NSNumber;
        uint64_t v121 = sub_244BC319C((unsigned char *)&v188 + 12);
        if (!v121[4]) {
          goto LABEL_151;
        }
        uint64_t v123 = objc_msgSend_numberWithUnsignedInt_(v120, v122, *(unsigned int *)v121);
        objc_msgSend_setExportedResetTimestamp_(v67, v124, (uint64_t)v123);
      }
      else
      {
        objc_msgSend_setExportedResetTimestamp_(v67, v118, 0);
      }
      if (!v196) {
        goto LABEL_151;
      }
      if (v190[0] && sub_24479DC08(v190)[8])
      {
        if (!v196) {
          goto LABEL_151;
        }
        char v126 = NSNumber;
        unsigned __int8 v127 = sub_24479DC08(v190);
        if (!v127[8]) {
          goto LABEL_151;
        }
        int v129 = objc_msgSend_numberWithUnsignedLongLong_(v126, v128, *(void *)v127);
        objc_msgSend_setImportedResetSystime_(v67, v130, (uint64_t)v129);
      }
      else
      {
        objc_msgSend_setImportedResetSystime_(v67, v125, 0);
      }
      if (!v196) {
        goto LABEL_151;
      }
      if (!v193[0] || !sub_24479DC08(v193)[8])
      {
        objc_msgSend_setExportedResetSystime_(v67, v131, 0);
        goto LABEL_148;
      }
      if (!v196 || (uint64_t v132 = NSNumber, v133 = sub_24479DC08(v193), !v133[8])) {
LABEL_151:
      }
        sub_24479484C();
      int v119 = objc_msgSend_numberWithUnsignedLongLong_(v132, v134, *(void *)v133);
      objc_msgSend_setExportedResetSystime_(v67, v135, (uint64_t)v119);
LABEL_147:

LABEL_148:
      return v67;
    default:
      id v67 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 8414;
      goto LABEL_148;
  }
}

void sub_244BAC9D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BACB04(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
    case 1:
      LOBYTE(v9) = 0;
      sub_24484B184(a2, &v9, &v10);
      goto LABEL_10;
    case 2:
      LOWORD(v9) = 0;
      sub_244CB3F40(a2, &v9, (uint64_t)&v10);
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        goto LABEL_11;
      }
      uint64_t v5 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v6, (unsigned __int16)v9);
      break;
    case 3:
      uint64_t v9 = 0;
      sub_244CB3CF0(a2, &v9, (uint64_t)&v10);
      uint64_t v5 = 0;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (!*(_DWORD *)a3)
      {
        uint64_t v5 = objc_msgSend_numberWithLongLong_(NSNumber, v7, v9);
      }
      break;
    case 4:
      LOBYTE(v9) = 0;
      sub_244CB3E8C(a2, &v9, (uint64_t)&v10);
      goto LABEL_10;
    case 5:
      LOBYTE(v9) = 0;
      sub_2447F1DCC(a2, &v9, &v10);
LABEL_10:
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3)
      {
LABEL_11:
        uint64_t v5 = 0;
      }
      else
      {
        uint64_t v5 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v4, v9);
      }
      break;
    default:
      uint64_t v5 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 8492;
      break;
  }

  return v5;
}

id sub_244BACCAC(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
      sub_244CB3988((uint64_t)&v314);
      unsigned __int8 v325 = 0;
      sub_244CB39B8((uint64_t)&v314, 0, 0);
      sub_24484B03C((uint64_t)&v314, a2, (uint64_t)&v327);
      *(_OWORD *)a3 = v327;
      *(void *)(a3 + 16) = v328;
      if (*(_DWORD *)a3) {
        goto LABEL_3;
      }
      id v313 = (id)objc_opt_new();
      v347[0] = v325;
      if (v325) {
        v347[1] = v326;
      }
      sub_244BC31C0((uint64_t)&v327, (uint64_t)&v314, v347);
      while (2)
      {
        if (sub_244BC3238((uint64_t)&v327))
        {
          int v142 = objc_opt_new();
          uint64_t v144 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v143, v327, *((void *)&v327 + 1));
          objc_msgSend_setProgramID_(v142, v145, (uint64_t)v144);

          uint64_t v146 = v328;
          uint64_t v147 = v329;
          id v148 = [NSString alloc];
          uint64_t v150 = objc_msgSend_initWithBytes_length_encoding_(v148, v149, v146, v147, 4);
          objc_msgSend_setName_(v142, v151, (uint64_t)v150);

          uint64_t v154 = objc_msgSend_name(v142, v152, v153);

          if (v154)
          {
            if (v331)
            {
              uint64_t v156 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v155, v330);
              objc_msgSend_setEnrollmentGroup_(v142, v157, (uint64_t)v156);
            }
            else
            {
              objc_msgSend_setEnrollmentGroup_(v142, v155, 0);
            }
            if (v333)
            {
              id v159 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v158, v332);
              objc_msgSend_setRandomStartMinutes_(v142, v160, (uint64_t)v159);
            }
            else
            {
              objc_msgSend_setRandomStartMinutes_(v142, v158, 0);
            }
            if (v335)
            {
              char v162 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v161, v334);
              objc_msgSend_setRandomDurationMinutes_(v142, v163, (uint64_t)v162);
            }
            else
            {
              objc_msgSend_setRandomDurationMinutes_(v142, v161, 0);
            }
            objc_msgSend_addObject_(v313, v164, (uint64_t)v142);

            continue;
          }
          *(_OWORD *)a3 = xmmword_26519A5F0;
          *(void *)(a3 + 16) = 8517;

          goto LABEL_148;
        }
        break;
      }
      if (v336 && v336 != 33)
      {
        uint64_t v307 = v338;
        unsigned int v308 = v337;
        uint64_t v303 = a3;
        *(_DWORD *)a3 = v336;
        *(_DWORD *)(a3 + 4) = v308;
        *(void *)(a3 + 8) = v307;
        uint64_t v304 = v339;
        goto LABEL_146;
      }
      goto LABEL_136;
    case 1:
    case 4:
    case 5:
    case 6:
    case 7:
      LOBYTE(v314) = 0;
      sub_244CB3E8C(a2, &v314, (uint64_t)&v327);
      *(_OWORD *)a3 = v327;
      *(void *)(a3 + 16) = v328;
      if (*(_DWORD *)a3) {
        goto LABEL_3;
      }
      objc_msgSend_numberWithUnsignedChar_(NSNumber, v4, v314);
      id v313 = (id)objc_claimAutoreleasedReturnValue();
      goto LABEL_136;
    case 2:
      sub_244CB3988((uint64_t)v347);
      char v348 = 0;
      sub_244CB39B8(v165, 0, 0);
      sub_24484B03C((uint64_t)v347, a2, (uint64_t)&v327);
      *(_OWORD *)a3 = v327;
      *(void *)(a3 + 16) = v328;
      if (*(_DWORD *)a3) {
        goto LABEL_3;
      }
      id v313 = (id)objc_opt_new();
      LOBYTE(v314) = v348;
      if (v348) {
        HIBYTE(v314) = v349;
      }
      sub_244BC32E8((uint64_t)&v327, (uint64_t)v347, (unsigned __int8 *)&v314);
      v310 = &v338;
      while (2)
      {
        if (!sub_244BC3394((uint64_t)&v327)) {
          goto LABEL_139;
        }
        char v166 = objc_opt_new();
        char v168 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v167, v327, *((void *)&v327 + 1));
        v311 = v166;
        objc_msgSend_setEventID_(v166, v169, (uint64_t)v168);

        if (v330)
        {
          uint64_t v171 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v170, v328, v329);
          objc_msgSend_setProgramID_(v166, v172, (uint64_t)v171);
        }
        else
        {
          objc_msgSend_setProgramID_(v166, v170, 0);
        }
        uint64_t v174 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v173, (unsigned __int16)v336, v310);
        objc_msgSend_setControl_(v166, v175, (uint64_t)v174);

        uint64_t v177 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v176, v337);
        objc_msgSend_setDeviceClass_(v166, v178, (uint64_t)v177);

        if ((_BYTE)v338)
        {
          long long v180 = NSNumber;
          char v181 = sub_2446F9190(v310);
          long long v183 = objc_msgSend_numberWithUnsignedChar_(v180, v182, *v181);
          objc_msgSend_setEnrollmentGroup_(v166, v184, (uint64_t)v183);
        }
        else
        {
          objc_msgSend_setEnrollmentGroup_(v166, v179, 0);
        }
        int v186 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v185, BYTE2(v338));
        objc_msgSend_setCriticality_(v166, v187, (uint64_t)v186);

        if ((_BYTE)v339)
        {
          uint64_t v189 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v188, HIDWORD(v338));
          objc_msgSend_setStartTime_(v166, v190, (uint64_t)v189);
        }
        else
        {
          objc_msgSend_setStartTime_(v166, v188, 0);
        }
        int v31 = objc_opt_new();
        unsigned __int8 v350 = v341;
        if (v341) {
          char v351 = v342;
        }
        sub_244BC34F0((uint64_t)&v314, (uint64_t)v340, &v350);
        while (2)
        {
          if (sub_244BC3578((uint64_t)&v314))
          {
            char v192 = objc_opt_new();
            char v194 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v193, v314);
            objc_msgSend_setDuration_(v192, v195, (uint64_t)v194);

            int v197 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v196, v315);
            objc_msgSend_setControl_(v192, v198, (uint64_t)v197);

            if (!v316[0])
            {
              objc_msgSend_setTemperatureControl_(v192, v199, 0);
LABEL_119:
              if (v317[0])
              {
                v255 = objc_opt_new();
                objc_msgSend_setAverageLoadControl_(v192, v256, (uint64_t)v255);

                v257 = NSNumber;
                v258 = sub_2446D18C8(v317);
                v260 = objc_msgSend_numberWithChar_(v257, v259, (char)*v258);
                v263 = objc_msgSend_averageLoadControl(v192, v261, v262);
                objc_msgSend_setLoadAdjustment_(v263, v264, (uint64_t)v260);
              }
              else
              {
                objc_msgSend_setAverageLoadControl_(v192, v214, 0);
              }
              if (v318[0])
              {
                v266 = objc_opt_new();
                objc_msgSend_setDutyCycleControl_(v192, v267, (uint64_t)v266);

                v268 = NSNumber;
                v269 = sub_2446D18C8(v318);
                v271 = objc_msgSend_numberWithUnsignedChar_(v268, v270, *v269);
                v274 = objc_msgSend_dutyCycleControl(v192, v272, v273);
                objc_msgSend_setDutyCycle_(v274, v275, (uint64_t)v271);
              }
              else
              {
                objc_msgSend_setDutyCycleControl_(v192, v265, 0);
              }
              if (v319[0])
              {
                v277 = objc_opt_new();
                objc_msgSend_setPowerSavingsControl_(v192, v278, (uint64_t)v277);

                v279 = NSNumber;
                v280 = sub_2446D18C8(v319);
                v282 = objc_msgSend_numberWithUnsignedChar_(v279, v281, *v280);
                v285 = objc_msgSend_powerSavingsControl(v192, v283, v284);
                objc_msgSend_setPowerSavings_(v285, v286, (uint64_t)v282);
              }
              else
              {
                objc_msgSend_setPowerSavingsControl_(v192, v276, 0);
              }
              if (v320[0])
              {
                v288 = objc_opt_new();
                objc_msgSend_setHeatingSourceControl_(v192, v289, (uint64_t)v288);

                v290 = NSNumber;
                v291 = sub_2446D18C8(v320);
                v293 = objc_msgSend_numberWithUnsignedChar_(v290, v292, *v291);
                v296 = objc_msgSend_heatingSourceControl(v192, v294, v295);
                objc_msgSend_setHeatingSource_(v296, v297, (uint64_t)v293);
              }
              else
              {
                objc_msgSend_setHeatingSourceControl_(v192, v287, 0);
              }
              objc_msgSend_addObject_(v31, v298, (uint64_t)v192);

              continue;
            }
            uint64_t v200 = objc_opt_new();
            objc_msgSend_setTemperatureControl_(v192, v201, (uint64_t)v200);

            if (*sub_2446D1880(v316) && (unsigned __int8 v204 = sub_2446D1880(v316), sub_24471C2FC(v204)[2]))
            {
              unsigned __int8 v205 = NSNumber;
              char v206 = sub_2446D1880(v316);
              char v207 = sub_24471C2FC(v206);
              if (!v207[2]) {
                goto LABEL_149;
              }
              char v209 = objc_msgSend_numberWithUnsignedShort_(v205, v208, *(unsigned __int16 *)v207);
              v212 = objc_msgSend_temperatureControl(v192, v210, v211);
              objc_msgSend_setCoolingTempOffset_(v212, v213, (uint64_t)v209);
            }
            else
            {
              char v209 = objc_msgSend_temperatureControl(v192, v202, v203);
              objc_msgSend_setCoolingTempOffset_(v209, v215, 0);
            }

            if (sub_2446D1880(v316)[6] && (v218 = sub_2446D1880(v316), sub_24471C2FC(v218 + 6)[2]))
            {
              v219 = NSNumber;
              v220 = sub_2446D1880(v316);
              v221 = sub_24471C2FC(v220 + 6);
              if (!v221[2]) {
                goto LABEL_149;
              }
              v223 = objc_msgSend_numberWithUnsignedShort_(v219, v222, *(unsigned __int16 *)v221);
              v226 = objc_msgSend_temperatureControl(v192, v224, v225);
              objc_msgSend_setHeatingtTempOffset_(v226, v227, (uint64_t)v223);
            }
            else
            {
              v223 = objc_msgSend_temperatureControl(v192, v216, v217);
              objc_msgSend_setHeatingtTempOffset_(v223, v228, 0);
            }

            if (sub_2446D1880(v316)[12] && (v231 = sub_2446D1880(v316), sub_2446D1880(v231 + 12)[2]))
            {
              v232 = NSNumber;
              v233 = sub_2446D1880(v316);
              v234 = sub_2446D1880(v233 + 12);
              if (!v234[2]) {
                goto LABEL_149;
              }
              v236 = objc_msgSend_numberWithShort_(v232, v235, *(__int16 *)v234);
              v239 = objc_msgSend_temperatureControl(v192, v237, v238);
              objc_msgSend_setCoolingTempSetpoint_(v239, v240, (uint64_t)v236);
            }
            else
            {
              v236 = objc_msgSend_temperatureControl(v192, v229, v230);
              objc_msgSend_setCoolingTempSetpoint_(v236, v241, 0);
            }

            if (!sub_2446D1880(v316)[18] || (v244 = sub_2446D1880(v316), !sub_2446D1880(v244 + 18)[2]))
            {
              v249 = objc_msgSend_temperatureControl(v192, v242, v243);
              objc_msgSend_setHeatingTempSetpoint_(v249, v254, 0);
              goto LABEL_118;
            }
            v245 = NSNumber;
            v246 = sub_2446D1880(v316);
            v247 = sub_2446D1880(v246 + 18);
            if (v247[2])
            {
              v249 = objc_msgSend_numberWithShort_(v245, v248, *(__int16 *)v247);
              v252 = objc_msgSend_temperatureControl(v192, v250, v251);
              objc_msgSend_setHeatingTempSetpoint_(v252, v253, (uint64_t)v249);

LABEL_118:
              goto LABEL_119;
            }
LABEL_149:
            sub_24479484C();
          }
          break;
        }
        int v140 = v321;
        if (!v321 || v321 == 33)
        {
          objc_msgSend_setTransitions_(v311, v191, (uint64_t)v31);

          objc_msgSend_addObject_(v313, v299, (uint64_t)v311);
          continue;
        }
        break;
      }
LABEL_142:
      uint64_t v305 = v323;
      int v306 = v322;
      *(_DWORD *)a3 = v140;
      *(_DWORD *)(a3 + 4) = v306;
      *(void *)(a3 + 8) = v305;
      *(void *)(a3 + 16) = v324;

LABEL_148:
LABEL_3:
      id v313 = 0;
LABEL_136:
      return v313;
    case 3:
      sub_244CB3988((uint64_t)v347);
      char v348 = 0;
      sub_244CB39B8(v5, 0, 0);
      sub_24484B03C((uint64_t)v347, a2, (uint64_t)&v327);
      *(_OWORD *)a3 = v327;
      *(void *)(a3 + 16) = v328;
      if (*(_DWORD *)a3) {
        goto LABEL_3;
      }
      id v313 = (id)objc_opt_new();
      LOBYTE(v314) = v348;
      if (v348) {
        HIBYTE(v314) = v349;
      }
      sub_244BC32E8((uint64_t)&v327, (uint64_t)v347, (unsigned __int8 *)&v314);
      v309 = &v338;
      while (2)
      {
        if (sub_244BC3394((uint64_t)&v327))
        {
          BOOL v6 = objc_opt_new();
          BOOL v8 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v7, v327, *((void *)&v327 + 1));
          v311 = v6;
          objc_msgSend_setEventID_(v6, v9, (uint64_t)v8);

          if (v330)
          {
            uint64_t v11 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v10, v328, v329);
            objc_msgSend_setProgramID_(v6, v12, (uint64_t)v11);
          }
          else
          {
            objc_msgSend_setProgramID_(v6, v10, 0);
          }
          char v14 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v13, (unsigned __int16)v336, v309);
          objc_msgSend_setControl_(v6, v15, (uint64_t)v14);

          id v17 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v16, v337);
          objc_msgSend_setDeviceClass_(v6, v18, (uint64_t)v17);

          if ((_BYTE)v338)
          {
            unsigned __int8 v20 = NSNumber;
            unsigned __int8 v21 = sub_2446F9190(v309);
            uint64_t v23 = objc_msgSend_numberWithUnsignedChar_(v20, v22, *v21);
            objc_msgSend_setEnrollmentGroup_(v6, v24, (uint64_t)v23);
          }
          else
          {
            objc_msgSend_setEnrollmentGroup_(v6, v19, 0);
          }
          int v26 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v25, BYTE2(v338));
          objc_msgSend_setCriticality_(v6, v27, (uint64_t)v26);

          if ((_BYTE)v339)
          {
            uint64_t v29 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v28, HIDWORD(v338));
            objc_msgSend_setStartTime_(v6, v30, (uint64_t)v29);
          }
          else
          {
            objc_msgSend_setStartTime_(v6, v28, 0);
          }
          int v31 = objc_opt_new();
          unsigned __int8 v350 = v341;
          if (v341) {
            char v351 = v342;
          }
          sub_244BC34F0((uint64_t)&v314, (uint64_t)v340, &v350);
          while (sub_244BC3578((uint64_t)&v314))
          {
            uint64_t v33 = objc_opt_new();
            char v35 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v34, v314);
            objc_msgSend_setDuration_(v33, v36, (uint64_t)v35);

            unsigned __int8 v38 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v37, v315);
            objc_msgSend_setControl_(v33, v39, (uint64_t)v38);

            if (v316[0])
            {
              id v41 = objc_opt_new();
              objc_msgSend_setTemperatureControl_(v33, v42, (uint64_t)v41);

              if (*sub_2446D1880(v316) && (long long v45 = sub_2446D1880(v316), sub_24471C2FC(v45)[2]))
              {
                uint64_t v46 = NSNumber;
                uint64_t v47 = sub_2446D1880(v316);
                unsigned __int8 v48 = sub_24471C2FC(v47);
                if (!v48[2]) {
                  goto LABEL_150;
                }
                int v50 = objc_msgSend_numberWithUnsignedShort_(v46, v49, *(unsigned __int16 *)v48);
                int v53 = objc_msgSend_temperatureControl(v33, v51, v52);
                objc_msgSend_setCoolingTempOffset_(v53, v54, (uint64_t)v50);
              }
              else
              {
                int v50 = objc_msgSend_temperatureControl(v33, v43, v44);
                objc_msgSend_setCoolingTempOffset_(v50, v56, 0);
              }

              if (sub_2446D1880(v316)[6] && (char v59 = sub_2446D1880(v316), sub_24471C2FC(v59 + 6)[2]))
              {
                char v60 = NSNumber;
                unsigned __int8 v61 = sub_2446D1880(v316);
                uint64_t v62 = sub_24471C2FC(v61 + 6);
                if (!v62[2]) {
                  goto LABEL_150;
                }
                long long v64 = objc_msgSend_numberWithUnsignedShort_(v60, v63, *(unsigned __int16 *)v62);
                id v67 = objc_msgSend_temperatureControl(v33, v65, v66);
                objc_msgSend_setHeatingtTempOffset_(v67, v68, (uint64_t)v64);
              }
              else
              {
                long long v64 = objc_msgSend_temperatureControl(v33, v57, v58);
                objc_msgSend_setHeatingtTempOffset_(v64, v69, 0);
              }

              if (sub_2446D1880(v316)[12] && (char v72 = sub_2446D1880(v316), sub_2446D1880(v72 + 12)[2]))
              {
                unsigned __int8 v73 = NSNumber;
                char v74 = sub_2446D1880(v316);
                uint64_t v75 = sub_2446D1880(v74 + 12);
                if (!v75[2]) {
                  goto LABEL_150;
                }
                BOOL v77 = objc_msgSend_numberWithShort_(v73, v76, *(__int16 *)v75);
                char v80 = objc_msgSend_temperatureControl(v33, v78, v79);
                objc_msgSend_setCoolingTempSetpoint_(v80, v81, (uint64_t)v77);
              }
              else
              {
                BOOL v77 = objc_msgSend_temperatureControl(v33, v70, v71);
                objc_msgSend_setCoolingTempSetpoint_(v77, v82, 0);
              }

              if (sub_2446D1880(v316)[18] && (uint64_t v85 = sub_2446D1880(v316), sub_2446D1880(v85 + 18)[2]))
              {
                unsigned __int8 v86 = NSNumber;
                char v87 = sub_2446D1880(v316);
                BOOL v88 = sub_2446D1880(v87 + 18);
                if (!v88[2]) {
LABEL_150:
                }
                  sub_24479484C();
                unsigned __int8 v90 = objc_msgSend_numberWithShort_(v86, v89, *(__int16 *)v88);
                int v93 = objc_msgSend_temperatureControl(v33, v91, v92);
                objc_msgSend_setHeatingTempSetpoint_(v93, v94, (uint64_t)v90);
              }
              else
              {
                unsigned __int8 v90 = objc_msgSend_temperatureControl(v33, v83, v84);
                objc_msgSend_setHeatingTempSetpoint_(v90, v95, 0);
              }
            }
            else
            {
              objc_msgSend_setTemperatureControl_(v33, v40, 0);
            }
            if (v317[0])
            {
              BOOL v96 = objc_opt_new();
              objc_msgSend_setAverageLoadControl_(v33, v97, (uint64_t)v96);

              uint64_t v98 = NSNumber;
              BOOL v99 = sub_2446D18C8(v317);
              char v101 = objc_msgSend_numberWithChar_(v98, v100, (char)*v99);
              unsigned int v104 = objc_msgSend_averageLoadControl(v33, v102, v103);
              objc_msgSend_setLoadAdjustment_(v104, v105, (uint64_t)v101);
            }
            else
            {
              objc_msgSend_setAverageLoadControl_(v33, v55, 0);
            }
            if (v318[0])
            {
              uint64_t v107 = objc_opt_new();
              objc_msgSend_setDutyCycleControl_(v33, v108, (uint64_t)v107);

              unsigned __int8 v109 = NSNumber;
              BOOL v110 = sub_2446D18C8(v318);
              uint64_t v112 = objc_msgSend_numberWithUnsignedChar_(v109, v111, *v110);
              uint64_t v115 = objc_msgSend_dutyCycleControl(v33, v113, v114);
              objc_msgSend_setDutyCycle_(v115, v116, (uint64_t)v112);
            }
            else
            {
              objc_msgSend_setDutyCycleControl_(v33, v106, 0);
            }
            if (v319[0])
            {
              char v118 = objc_opt_new();
              objc_msgSend_setPowerSavingsControl_(v33, v119, (uint64_t)v118);

              int v120 = NSNumber;
              uint64_t v121 = sub_2446D18C8(v319);
              uint64_t v123 = objc_msgSend_numberWithUnsignedChar_(v120, v122, *v121);
              char v126 = objc_msgSend_powerSavingsControl(v33, v124, v125);
              objc_msgSend_setPowerSavings_(v126, v127, (uint64_t)v123);
            }
            else
            {
              objc_msgSend_setPowerSavingsControl_(v33, v117, 0);
            }
            if (v320[0])
            {
              int v129 = objc_opt_new();
              objc_msgSend_setHeatingSourceControl_(v33, v130, (uint64_t)v129);

              uint64_t v131 = NSNumber;
              uint64_t v132 = sub_2446D18C8(v320);
              char v134 = objc_msgSend_numberWithUnsignedChar_(v131, v133, *v132);
              v137 = objc_msgSend_heatingSourceControl(v33, v135, v136);
              objc_msgSend_setHeatingSource_(v137, v138, (uint64_t)v134);
            }
            else
            {
              objc_msgSend_setHeatingSourceControl_(v33, v128, 0);
            }
            objc_msgSend_addObject_(v31, v139, (uint64_t)v33);
          }
          int v140 = v321;
          if (!v321 || v321 == 33)
          {
            objc_msgSend_setTransitions_(v311, v32, (uint64_t)v31);

            objc_msgSend_addObject_(v313, v141, (uint64_t)v311);
            continue;
          }
          goto LABEL_142;
        }
        break;
      }
LABEL_139:
      if (!v343 || v343 == 33) {
        goto LABEL_136;
      }
      uint64_t v301 = v345;
      int v302 = v344;
      uint64_t v303 = a3;
      *(_DWORD *)a3 = v343;
      *(_DWORD *)(a3 + 4) = v302;
      *(void *)(a3 + 8) = v301;
      uint64_t v304 = v346;
LABEL_146:
      *(void *)(v303 + 16) = v304;
      goto LABEL_148;
    default:
      id v313 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 8863;
      goto LABEL_136;
  }
}

void sub_244BADFFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

id sub_244BAE228(int a1, uint64_t a2, uint64_t a3)
{
  if (a1 == 1)
  {
    sub_244CB3988((uint64_t)v69);
    unsigned __int8 v75 = 0;
    sub_244CB39B8((uint64_t)v69, 0, 0);
    sub_24484B03C((uint64_t)v69, a2, (uint64_t)&v77);
    *(_OWORD *)a3 = v77;
    *(void *)(a3 + 16) = v78;
    if (*(_DWORD *)a3)
    {
LABEL_47:
      BOOL v6 = 0;
      goto LABEL_48;
    }
    BOOL v6 = objc_opt_new();
    v89[0] = v75;
    if (v75) {
      v89[1] = v76;
    }
    sub_244797544((uint64_t)&v77, (uint64_t)v69, v89);
    while (sub_244798B84((uint64_t)&v77))
    {
      uint64_t v58 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v57, v77, *((void *)&v77 + 1));
      objc_msgSend_addObject_(v6, v59, (uint64_t)v58);
    }
    if (v78 && v78 != 33)
    {
      uint64_t v60 = v79;
      int v61 = HIDWORD(v78);
      *(_DWORD *)a3 = v78;
      *(_DWORD *)(a3 + 4) = v61;
      *(void *)(a3 + 8) = v60;
      uint64_t v62 = v80;
      goto LABEL_43;
    }
  }
  else
  {
    if (a1)
    {
      BOOL v6 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 8981;
      goto LABEL_48;
    }
    sub_244CB3988((uint64_t)v89);
    unsigned __int8 v90 = 0;
    sub_244CB39B8(v5, 0, 0);
    sub_24484B03C((uint64_t)v89, a2, (uint64_t)&v77);
    *(_OWORD *)a3 = v77;
    *(void *)(a3 + 16) = v78;
    if (*(_DWORD *)a3) {
      goto LABEL_47;
    }
    BOOL v6 = objc_opt_new();
    v69[0] = v90;
    if (v90) {
      v69[1] = v91;
    }
    sub_244BC3700((uint64_t)&v77, (uint64_t)v89, v69);
    long long v68 = &v84;
    while (sub_244BC3790((uint64_t)&v77))
    {
      uint64_t v7 = objc_opt_new();
      uint64_t v9 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v8, v77, *((void *)&v77 + 1));
      objc_msgSend_setMessageID_(v7, v10, (uint64_t)v9);

      BOOL v12 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v11, v78);
      objc_msgSend_setPriority_(v7, v13, (uint64_t)v12);

      long long v15 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v14, BYTE1(v78));
      objc_msgSend_setMessageControl_(v7, v16, (uint64_t)v15);

      if ((_BYTE)v79)
      {
        uint64_t v18 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v17, HIDWORD(v78));
        objc_msgSend_setStartTime_(v7, v19, (uint64_t)v18);
      }
      else
      {
        objc_msgSend_setStartTime_(v7, v17, 0);
      }
      if (v81)
      {
        unsigned __int8 v21 = objc_msgSend_numberWithUnsignedLongLong_(NSNumber, v20, v80);
        objc_msgSend_setDuration_(v7, v22, (uint64_t)v21);
      }
      else
      {
        objc_msgSend_setDuration_(v7, v20, 0);
      }
      uint64_t v23 = v82;
      uint64_t v24 = v83;
      id v25 = [NSString alloc];
      unsigned __int8 v27 = objc_msgSend_initWithBytes_length_encoding_(v25, v26, v23, v24, 4);
      objc_msgSend_setMessageText_(v7, v28, (uint64_t)v27);

      int v31 = objc_msgSend_messageText(v7, v29, v30);

      if (!v31)
      {
        *(_OWORD *)a3 = xmmword_26519A608;
        *(void *)(a3 + 16) = 8900;
LABEL_45:

        goto LABEL_46;
      }
      if (v84)
      {
        uint64_t v33 = objc_opt_new();
        unsigned int v34 = sub_2446F7170(v68);
        v92[0] = v34[72];
        if (v92[0]) {
          v92[1] = v34[73];
        }
        sub_244BC2318((uint64_t)v69, (uint64_t)v34, v92);
        while (sub_244BC3898((uint64_t)v69))
        {
          unsigned __int8 v36 = objc_opt_new();
          unsigned __int8 v38 = v36;
          if (v69[0])
          {
            uint64_t v39 = NSNumber;
            uint64_t v40 = sub_2446F12CC(v69);
            int v42 = objc_msgSend_numberWithUnsignedInt_(v39, v41, *(unsigned int *)v40);
            objc_msgSend_setMessageResponseID_(v38, v43, (uint64_t)v42);
          }
          else
          {
            objc_msgSend_setMessageResponseID_(v36, v37, 0);
          }
          if (v70[0])
          {
            long long v45 = (uint64_t *)sub_2446D18A4(v70);
            uint64_t v46 = *v45;
            uint64_t v47 = v45[1];
            id v48 = [NSString alloc];
            int v50 = objc_msgSend_initWithBytes_length_encoding_(v48, v49, v46, v47, 4);
            objc_msgSend_setLabel_(v38, v51, (uint64_t)v50);

            uint64_t v54 = objc_msgSend_label(v38, v52, v53);

            if (!v54)
            {
              *(_OWORD *)a3 = xmmword_26519A620;
              *(void *)(a3 + 16) = 8920;

              goto LABEL_44;
            }
          }
          else
          {
            objc_msgSend_setLabel_(v38, v44, 0);
          }
          objc_msgSend_addObject_(v33, v55, (uint64_t)v38, v68);
        }
        if (!v71 || v71 == 33)
        {
          objc_msgSend_setResponses_(v7, v35, (uint64_t)v33, v68);

          goto LABEL_32;
        }
        uint64_t v66 = v73;
        int v67 = v72;
        *(_DWORD *)a3 = v71;
        *(_DWORD *)(a3 + 4) = v67;
        *(void *)(a3 + 8) = v66;
        *(void *)(a3 + 16) = v74;
LABEL_44:

        goto LABEL_45;
      }
      objc_msgSend_setResponses_(v7, v32, 0);
LABEL_32:
      objc_msgSend_addObject_(v6, v56, (uint64_t)v7, v68);
    }
    if (v85 && v85 != 33)
    {
      uint64_t v64 = v87;
      int v65 = v86;
      *(_DWORD *)a3 = v85;
      *(_DWORD *)(a3 + 4) = v65;
      *(void *)(a3 + 8) = v64;
      uint64_t v62 = v88;
LABEL_43:
      *(void *)(a3 + 16) = v62;
LABEL_46:

      goto LABEL_47;
    }
  }
LABEL_48:

  return v6;
}

void sub_244BAE77C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BAE810(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
      LOBYTE(v209) = 0;
      sub_24481BB64(a2, (char *)&v209, &v191);
      goto LABEL_9;
    case 1:
      LOBYTE(v209) = 0;
      sub_244CB3C0C(a2, (char *)&v209, (uint64_t)&v191);
      *(_OWORD *)a3 = v191;
      *(void *)(a3 + 16) = v192;
      if (*(_DWORD *)a3) {
        goto LABEL_24;
      }
      uint64_t v6 = objc_msgSend_numberWithBool_(NSNumber, v8, v209);
      goto LABEL_11;
    case 2:
      LOBYTE(v209) = 0;
      sub_2447FACE4(a2, &v209, &v191);
      goto LABEL_9;
    case 3:
    case 4:
      uint64_t v209 = 0;
      sub_244CB3CF0(a2, &v209, (uint64_t)&v191);
      uint64_t v5 = 0;
      *(_OWORD *)a3 = v191;
      *(void *)(a3 + 16) = v192;
      if (*(_DWORD *)a3) {
        goto LABEL_120;
      }
      uint64_t v6 = objc_msgSend_numberWithLongLong_(NSNumber, v4, v209);
      goto LABEL_11;
    case 5:
      LOBYTE(v209) = 0;
      char v219 = 0;
      sub_24481BBD0(a2, (uint64_t)&v209, &v191);
      *(_OWORD *)a3 = v191;
      *(void *)(a3 + 16) = v192;
      if (*(_DWORD *)a3) {
        goto LABEL_24;
      }
      if (v219)
      {
        uint64_t v9 = objc_opt_new();
        id v11 = v9;
        if (!v219) {
          goto LABEL_125;
        }
        if (v217)
        {
          BOOL v12 = objc_opt_new();
          if (!v219 || !v217) {
            sub_24479484C();
          }
          unsigned __int8 v182 = v215;
          if (v215) {
            char v183 = v216;
          }
          sub_244BC3944((uint64_t)&v191, (uint64_t)&v209, &v182);
          while (sub_244BC39BC((uint64_t)&v191))
          {
            char v14 = objc_opt_new();
            uint64_t v16 = objc_msgSend_numberWithLongLong_(NSNumber, v15, v191);
            objc_msgSend_setMinPower_(v14, v17, (uint64_t)v16);

            uint64_t v19 = objc_msgSend_numberWithLongLong_(NSNumber, v18, *((uint64_t *)&v191 + 1));
            objc_msgSend_setMaxPower_(v14, v20, (uint64_t)v19);

            uint64_t v22 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v21, v192);
            objc_msgSend_setMinDuration_(v14, v23, (uint64_t)v22);

            id v25 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v24, HIDWORD(v192));
            objc_msgSend_setMaxDuration_(v14, v26, (uint64_t)v25);

            objc_msgSend_addObject_(v12, v27, (uint64_t)v14);
          }
          if (v193[0] && v193[0] != 33)
          {
            uint64_t v179 = v194;
            int v180 = v193[1];
            *(_DWORD *)a3 = v193[0];
            *(_DWORD *)(a3 + 4) = v180;
            *(void *)(a3 + 8) = v179;
            *(void *)(a3 + 16) = v195;

            uint64_t v5 = 0;
            goto LABEL_40;
          }
          objc_msgSend_setPowerAdjustCapability_(v11, v13, (uint64_t)v12);
        }
        else
        {
          objc_msgSend_setPowerAdjustCapability_(v9, v10, 0);
        }
        if (!v219) {
LABEL_125:
        }
          sub_24479484C();
        unsigned __int8 v37 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v36, v218);
        objc_msgSend_setCause_(v11, v38, (uint64_t)v37);
      }
      else
      {
        id v11 = 0;
      }
      id v11 = v11;
      uint64_t v5 = v11;
LABEL_40:

      goto LABEL_120;
    case 6:
      LOBYTE(v209) = 0;
      char v223 = 0;
      sub_24481BC70(a2, (uint64_t)&v209, &v191);
      *(_OWORD *)a3 = v191;
      *(void *)(a3 + 16) = v192;
      if (*(_DWORD *)a3) {
        goto LABEL_24;
      }
      if (!v223)
      {
        id v29 = 0;
LABEL_115:
        id v29 = v29;
        uint64_t v5 = v29;
        goto LABEL_119;
      }
      id v29 = (id)objc_opt_new();
      if (!v223) {
        goto LABEL_124;
      }
      uint64_t v30 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v28, v209);
      objc_msgSend_setForecastID_(v29, v31, (uint64_t)v30);

      if (!v223) {
        goto LABEL_124;
      }
      if (BYTE6(v209))
      {
        uint64_t v33 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v32, WORD2(v209));
        objc_msgSend_setActiveSlotNumber_(v29, v34, (uint64_t)v33);
      }
      else
      {
        objc_msgSend_setActiveSlotNumber_(v29, v32, 0);
      }
      if (!v223) {
        goto LABEL_124;
      }
      uint64_t v39 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v35, v210);
      objc_msgSend_setStartTime_(v29, v40, (uint64_t)v39);

      if (!v223) {
        goto LABEL_124;
      }
      int v42 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v41, v211);
      objc_msgSend_setEndTime_(v29, v43, (uint64_t)v42);

      if (!v223) {
        goto LABEL_124;
      }
      if (v212[0] && sub_244BC319C(v212)[4])
      {
        if (!v223) {
          goto LABEL_124;
        }
        long long v45 = NSNumber;
        uint64_t v46 = sub_244BC319C(v212);
        if (!v46[4]) {
          goto LABEL_124;
        }
        id v48 = objc_msgSend_numberWithUnsignedInt_(v45, v47, *(unsigned int *)v46);
        objc_msgSend_setEarliestStartTime_(v29, v49, (uint64_t)v48);
      }
      else
      {
        objc_msgSend_setEarliestStartTime_(v29, v44, 0);
      }
      if (!v223) {
        goto LABEL_124;
      }
      if (v213[0])
      {
        uint64_t v51 = NSNumber;
        uint64_t v52 = sub_2447A4A8C(v213);
        uint64_t v54 = objc_msgSend_numberWithUnsignedInt_(v51, v53, *(unsigned int *)v52);
        objc_msgSend_setLatestEndTime_(v29, v55, (uint64_t)v54);
      }
      else
      {
        objc_msgSend_setLatestEndTime_(v29, v50, 0);
      }
      if (!v223) {
        goto LABEL_124;
      }
      uint64_t v57 = objc_msgSend_numberWithBool_(NSNumber, v56, v213[8]);
      objc_msgSend_setIsPausable_(v29, v58, (uint64_t)v57);

      char v59 = objc_opt_new();
      if (!v223) {
        sub_24479484C();
      }
      unsigned __int8 v182 = v220;
      if (v220) {
        char v183 = v221;
      }
      sub_244BC3A68((uint64_t)&v191, (uint64_t)&v214, &v182);
      id v181 = v29;
      while (1)
      {
        if (!sub_244BC3B0C((uint64_t)&v191))
        {
          if (v205 && v205 != 33)
          {
            uint64_t v174 = v207;
            int v175 = v206;
            *(_DWORD *)a3 = v205;
            *(_DWORD *)(a3 + 4) = v175;
            *(void *)(a3 + 8) = v174;
            *(void *)(a3 + 16) = v208;
            goto LABEL_118;
          }
          objc_msgSend_setSlots_(v29, v60, (uint64_t)v59);

          if (v223)
          {
            uint64_t v172 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v171, v222);
            objc_msgSend_setForecastUpdateReason_(v29, v173, (uint64_t)v172);

            goto LABEL_115;
          }
LABEL_124:
          sub_24479484C();
        }
        int v61 = objc_opt_new();
        uint64_t v63 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v62, v191);
        objc_msgSend_setMinDuration_(v61, v64, (uint64_t)v63);

        uint64_t v66 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v65, DWORD1(v191));
        objc_msgSend_setMaxDuration_(v61, v67, (uint64_t)v66);

        uint64_t v69 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v68, DWORD2(v191));
        objc_msgSend_setDefaultDuration_(v61, v70, (uint64_t)v69);

        int v72 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v71, HIDWORD(v191));
        objc_msgSend_setElapsedSlotTime_(v61, v73, (uint64_t)v72);

        unsigned __int8 v75 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v74, v192);
        objc_msgSend_setRemainingSlotTime_(v61, v76, (uint64_t)v75);

        if (BYTE4(v192))
        {
          uint64_t v78 = NSNumber;
          uint64_t v79 = sub_2446D18C8((unsigned char *)&v192 + 4);
          char v81 = objc_msgSend_numberWithBool_(v78, v80, *v79);
          objc_msgSend_setSlotIsPausable_(v61, v82, (uint64_t)v81);
        }
        else
        {
          objc_msgSend_setSlotIsPausable_(v61, v77, 0);
        }
        if (LOBYTE(v193[0]))
        {
          char v84 = NSNumber;
          int v85 = sub_2446F12CC(v193);
          uint64_t v87 = objc_msgSend_numberWithUnsignedInt_(v84, v86, *(unsigned int *)v85);
          objc_msgSend_setMinPauseDuration_(v61, v88, (uint64_t)v87);
        }
        else
        {
          objc_msgSend_setMinPauseDuration_(v61, v83, 0);
        }
        if ((_BYTE)v194)
        {
          unsigned __int8 v90 = NSNumber;
          unsigned __int8 v91 = sub_2446F12CC(&v194);
          int v93 = objc_msgSend_numberWithUnsignedInt_(v90, v92, *(unsigned int *)v91);
          objc_msgSend_setMaxPauseDuration_(v61, v94, (uint64_t)v93);
        }
        else
        {
          objc_msgSend_setMaxPauseDuration_(v61, v89, 0);
        }
        if ((_BYTE)v195)
        {
          BOOL v96 = NSNumber;
          unsigned int v97 = sub_2446D1880(&v195);
          BOOL v99 = objc_msgSend_numberWithUnsignedShort_(v96, v98, *(unsigned __int16 *)v97);
          objc_msgSend_setManufacturerESAState_(v61, v100, (uint64_t)v99);
        }
        else
        {
          objc_msgSend_setManufacturerESAState_(v61, v95, 0);
        }
        if (v196[0])
        {
          uint64_t v102 = NSNumber;
          uint64_t v103 = (uint64_t *)sub_2446F7170(v196);
          uint64_t v105 = objc_msgSend_numberWithLongLong_(v102, v104, *v103);
          objc_msgSend_setNominalPower_(v61, v106, (uint64_t)v105);
        }
        else
        {
          objc_msgSend_setNominalPower_(v61, v101, 0);
        }
        if (v197[0])
        {
          uint64_t v108 = NSNumber;
          unsigned __int8 v109 = (uint64_t *)sub_2446F7170(v197);
          uint64_t v111 = objc_msgSend_numberWithLongLong_(v108, v110, *v109);
          objc_msgSend_setMinPower_(v61, v112, (uint64_t)v111);
        }
        else
        {
          objc_msgSend_setMinPower_(v61, v107, 0);
        }
        if (v198[0])
        {
          uint64_t v114 = NSNumber;
          uint64_t v115 = (uint64_t *)sub_2446F7170(v198);
          unsigned __int8 v117 = objc_msgSend_numberWithLongLong_(v114, v116, *v115);
          objc_msgSend_setMaxPower_(v61, v118, (uint64_t)v117);
        }
        else
        {
          objc_msgSend_setMaxPower_(v61, v113, 0);
        }
        if (v199[0])
        {
          int v120 = NSNumber;
          uint64_t v121 = (uint64_t *)sub_2446F7170(v199);
          uint64_t v123 = objc_msgSend_numberWithLongLong_(v120, v122, *v121);
          objc_msgSend_setNominalEnergy_(v61, v124, (uint64_t)v123);
        }
        else
        {
          objc_msgSend_setNominalEnergy_(v61, v119, 0);
        }
        if (v200[0]) {
          break;
        }
        objc_msgSend_setCosts_(v61, v125, 0);
LABEL_98:
        if (v201[0])
        {
          uint64_t v147 = NSNumber;
          id v148 = (uint64_t *)sub_2446F7170(v201);
          uint64_t v150 = objc_msgSend_numberWithLongLong_(v147, v149, *v148);
          objc_msgSend_setMinPowerAdjustment_(v61, v151, (uint64_t)v150);
        }
        else
        {
          objc_msgSend_setMinPowerAdjustment_(v61, v146, 0);
        }
        if (v202[0])
        {
          uint64_t v153 = NSNumber;
          uint64_t v154 = (uint64_t *)sub_2446F7170(v202);
          uint64_t v156 = objc_msgSend_numberWithLongLong_(v153, v155, *v154);
          objc_msgSend_setMaxPowerAdjustment_(v61, v157, (uint64_t)v156);
        }
        else
        {
          objc_msgSend_setMaxPowerAdjustment_(v61, v152, 0);
        }
        if (v203[0])
        {
          id v159 = NSNumber;
          long long v160 = sub_2446F12CC(v203);
          char v162 = objc_msgSend_numberWithUnsignedInt_(v159, v161, *(unsigned int *)v160);
          objc_msgSend_setMinDurationAdjustment_(v61, v163, (uint64_t)v162);
        }
        else
        {
          objc_msgSend_setMinDurationAdjustment_(v61, v158, 0);
        }
        if (v204[0])
        {
          uint64_t v165 = NSNumber;
          char v166 = sub_2446F12CC(v204);
          char v168 = objc_msgSend_numberWithUnsignedInt_(v165, v167, *(unsigned int *)v166);
          objc_msgSend_setMaxDurationAdjustment_(v61, v169, (uint64_t)v168);
        }
        else
        {
          objc_msgSend_setMaxDurationAdjustment_(v61, v164, 0);
        }
        objc_msgSend_addObject_(v59, v170, (uint64_t)v61);
      }
      char v126 = objc_opt_new();
      unsigned __int8 v127 = sub_2446F7170(v200);
      v224[0] = v127[72];
      if (v224[0]) {
        v224[1] = v127[73];
      }
      sub_244BC3BE8((uint64_t)&v182, (uint64_t)v127, v224);
      while (sub_244BC3C68((uint64_t)&v182))
      {
        int v129 = objc_opt_new();
        uint64_t v131 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v130, v182);
        objc_msgSend_setCostType_(v129, v132, (uint64_t)v131);

        char v134 = objc_msgSend_numberWithInt_(NSNumber, v133, v184);
        objc_msgSend_setValue_(v129, v135, (uint64_t)v134);

        v137 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v136, v185);
        objc_msgSend_setDecimalPoints_(v129, v138, (uint64_t)v137);

        if (v186[0])
        {
          int v140 = NSNumber;
          uint64_t v141 = sub_2446D1880(v186);
          uint64_t v143 = objc_msgSend_numberWithUnsignedShort_(v140, v142, *(unsigned __int16 *)v141);
          objc_msgSend_setCurrency_(v129, v144, (uint64_t)v143);
        }
        else
        {
          objc_msgSend_setCurrency_(v129, v139, 0);
        }
        objc_msgSend_addObject_(v126, v145, (uint64_t)v129);
      }
      if (!v187 || v187 == 33)
      {
        objc_msgSend_setCosts_(v61, v128, (uint64_t)v126);

        id v29 = v181;
        goto LABEL_98;
      }
      uint64_t v176 = v189;
      int v177 = v188;
      *(_DWORD *)a3 = v187;
      *(_DWORD *)(a3 + 4) = v177;
      *(void *)(a3 + 8) = v176;
      *(void *)(a3 + 16) = v190;

      id v29 = v181;
LABEL_118:

      uint64_t v5 = 0;
LABEL_119:

LABEL_120:
      return v5;
    case 7:
      LOBYTE(v209) = 0;
      sub_2446D1A48(a2, &v209, &v191);
LABEL_9:
      *(_OWORD *)a3 = v191;
      *(void *)(a3 + 16) = v192;
      if (*(_DWORD *)a3)
      {
LABEL_24:
        uint64_t v5 = 0;
      }
      else
      {
        uint64_t v6 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v7, v209);
LABEL_11:
        uint64_t v5 = (void *)v6;
      }
      goto LABEL_120;
    default:
      uint64_t v5 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 9247;
      goto LABEL_120;
  }
}

void sub_244BAF50C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BAF678(int a1, uint64_t a2, uint64_t a3)
{
  if (!v4 & v3)
  {
    switch(a1)
    {
      case '#':
      case '$':
LABEL_11:
        LOBYTE(v14) = 0;
        BYTE4(v14) = 0;
        sub_2447F4140(a2, (uint64_t)&v14, (uint64_t)&v16);
        uint64_t v7 = 0;
        *(_OWORD *)a3 = v16;
        *(void *)(a3 + 16) = v17;
        if (!*(_DWORD *)a3 && BYTE4(v14))
        {
LABEL_42:
          uint64_t v7 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v9, v14);
        }
        break;
      case '%':
      case '1':
LABEL_14:
        LOBYTE(v14) = 0;
        BYTE8(v14) = 0;
        sub_2447FB200(a2, (uint64_t)&v14, (uint64_t)&v16);
        uint64_t v7 = 0;
        *(_OWORD *)a3 = v16;
        *(void *)(a3 + 16) = v17;
        if (!*(_DWORD *)a3 && BYTE8(v14))
        {
LABEL_16:
          uint64_t v7 = objc_msgSend_numberWithLongLong_(NSNumber, v8, v14);
        }
        break;
      case '&':
      case '0':
        LOWORD(v14) = 0;
        sub_2447F15BC(a2, (unsigned __int8 *)&v14, (uint64_t)&v16);
        uint64_t v7 = 0;
        *(_OWORD *)a3 = v16;
        *(void *)(a3 + 16) = v17;
        if (!*(_DWORD *)a3 && BYTE1(v14))
        {
LABEL_39:
          uint64_t v7 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v6, v14);
        }
        break;
      case '\'':
        LOBYTE(v14) = 0;
        BYTE2(v14) = 0;
        sub_2447EF9E0(a2, (__int16 *)&v14, (uint64_t)&v16);
        uint64_t v7 = 0;
        *(_OWORD *)a3 = v16;
        *(void *)(a3 + 16) = v17;
        if (!*(_DWORD *)a3 && BYTE2(v14))
        {
          uint64_t v7 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v11, (unsigned __int16)v14);
        }
        break;
      case '(':
      case ')':
      case '*':
      case '+':
      case ',':
      case '-':
      case '.':
      case '/':
LABEL_22:
        uint64_t v7 = 0;
        *(_DWORD *)a3 = 181;
        *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/zap-generated/MTRAttributeTLVValueDecoder.mm";
        *(_DWORD *)(a3 + 16) = 9577;
        break;
      case '2':
        LOBYTE(v16) = 0;
        LOBYTE(v17) = 0;
        sub_244803C58(a2, (uint64_t)&v16, &v14);
        uint64_t v7 = 0;
        *(_OWORD *)a3 = v14;
        *(void *)(a3 + 16) = v15;
        if (!*(_DWORD *)a3)
        {
          if ((_BYTE)v17)
          {
            uint64_t v7 = sub_244BBFB94(v16, *((uint64_t *)&v16 + 1));
            if (!v7)
            {
              *(_OWORD *)a3 = xmmword_26519A638;
              *(void *)(a3 + 16) = 9505;
            }
          }
        }
        break;
      default:
        switch(a1)
        {
          case '@':
          case 'A':
            goto LABEL_11;
          case 'B':
          case 'C':
            goto LABEL_14;
          default:
            goto LABEL_22;
        }
    }
  }
  else
  {
    switch(a1)
    {
      case 0:
        LOWORD(v14) = 0;
        sub_244803B80(a2, (unsigned __int8 *)&v14, (uint64_t)&v16);
        *(_OWORD *)a3 = v16;
        *(void *)(a3 + 16) = v17;
        if (*(_DWORD *)a3) {
          BOOL v12 = 1;
        }
        else {
          BOOL v12 = BYTE1(v14) == 0;
        }
        if (!v12) {
          goto LABEL_39;
        }
        goto LABEL_41;
      case 1:
        LOBYTE(v14) = 0;
        sub_2447F0A54(a2, &v14, &v16);
        goto LABEL_38;
      case 2:
        LOBYTE(v14) = 0;
        sub_24481D0E0(a2, (char *)&v14, &v16);
LABEL_38:
        *(_OWORD *)a3 = v16;
        *(void *)(a3 + 16) = v17;
        if (!*(_DWORD *)a3) {
          goto LABEL_39;
        }
        goto LABEL_41;
      case 3:
      case 4:
        LOBYTE(v14) = 0;
        BYTE4(v14) = 0;
        sub_2447F4140(a2, (uint64_t)&v14, (uint64_t)&v16);
        *(_OWORD *)a3 = v16;
        *(void *)(a3 + 16) = v17;
        if (*(_DWORD *)a3) {
          BOOL v10 = 1;
        }
        else {
          BOOL v10 = BYTE4(v14) == 0;
        }
        if (!v10) {
          goto LABEL_42;
        }
        goto LABEL_41;
      case 5:
      case 6:
      case 7:
      case 8:
      case 9:
        *(void *)&long long v14 = 0;
        sub_244CB3CF0(a2, &v14, (uint64_t)&v16);
        uint64_t v7 = 0;
        *(_OWORD *)a3 = v16;
        *(void *)(a3 + 16) = v17;
        if (!*(_DWORD *)a3) {
          goto LABEL_16;
        }
        break;
      case 10:
        LODWORD(v14) = 0;
        sub_244CB3FB0(a2, &v14, (uint64_t)&v16);
        *(_OWORD *)a3 = v16;
        *(void *)(a3 + 16) = v17;
        if (!*(_DWORD *)a3) {
          goto LABEL_42;
        }
LABEL_41:
        uint64_t v7 = 0;
        break;
      default:
        JUMPOUT(0);
    }
  }

  return v7;
}

id sub_244BAFAB8(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
      sub_244CB3988((uint64_t)v55);
      unsigned __int8 v56 = 0;
      sub_244CB39B8((uint64_t)v55, 0, 0);
      sub_24484B03C((uint64_t)v55, a2, (uint64_t)&v48);
      *(_OWORD *)a3 = v48;
      *(void *)(a3 + 16) = v49;
      if (*(_DWORD *)a3) {
        goto LABEL_40;
      }
      uint64_t v6 = objc_opt_new();
      unsigned __int8 v58 = v56;
      if (v56) {
        char v59 = v57;
      }
      sub_244BC2318((uint64_t)&v48, (uint64_t)v55, &v58);
      while (1)
      {
        if (!sub_244BC3D18((uint64_t)&v48)) {
          goto LABEL_31;
        }
        uint64_t v7 = objc_opt_new();
        uint64_t v9 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v8, v48);
        objc_msgSend_setStep_(v7, v10, (uint64_t)v9);

        if (BYTE8(v48))
        {
          BOOL v12 = (uint64_t *)sub_2446D18A4((unsigned char *)&v48 + 8);
          uint64_t v13 = *v12;
          uint64_t v14 = v12[1];
          id v15 = [NSString alloc];
          uint64_t v17 = objc_msgSend_initWithBytes_length_encoding_(v15, v16, v13, v14, 4);
          objc_msgSend_setLabel_(v7, v18, (uint64_t)v17);

          unsigned __int8 v21 = objc_msgSend_label(v7, v19, v20);

          if (!v21)
          {
            uint64_t v46 = &xmmword_26519A650;
            goto LABEL_38;
          }
        }
        else
        {
          objc_msgSend_setLabel_(v7, v11, 0);
        }
        objc_msgSend_addObject_(v6, v22, (uint64_t)v7);
      }
    case 1:
    case 4:
      v55[0] = 0;
      sub_244CB3E8C(a2, v55, (uint64_t)&v48);
      *(_OWORD *)a3 = v48;
      *(void *)(a3 + 16) = v49;
      if (*(_DWORD *)a3) {
        goto LABEL_40;
      }
      uint64_t v6 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v5, v55[0]);
      goto LABEL_41;
    case 2:
      sub_244CB3988((uint64_t)v55);
      unsigned __int8 v56 = 0;
      sub_244CB39B8((uint64_t)v55, 0, 0);
      sub_24484B03C((uint64_t)v55, a2, (uint64_t)&v48);
      *(_OWORD *)a3 = v48;
      *(void *)(a3 + 16) = v49;
      if (*(_DWORD *)a3) {
        goto LABEL_40;
      }
      uint64_t v6 = objc_opt_new();
      unsigned __int8 v58 = v56;
      if (v56) {
        char v59 = v57;
      }
      sub_2446D1930((uint64_t)&v48, (uint64_t)v55, &v58);
      while (sub_2446D19A0((uint64_t)&v48))
      {
        uint64_t v24 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v23, v48);
        objc_msgSend_addObject_(v6, v25, (uint64_t)v24);
      }
      if (!DWORD2(v48) || DWORD2(v48) == 33) {
        goto LABEL_41;
      }
      uint64_t v44 = v49;
      int v45 = HIDWORD(v48);
      *(_DWORD *)a3 = DWORD2(v48);
      *(_DWORD *)(a3 + 4) = v45;
      *(void *)(a3 + 8) = v44;
      uint64_t v43 = v50;
      goto LABEL_37;
    case 3:
      sub_244CB3988((uint64_t)v55);
      unsigned __int8 v56 = 0;
      sub_244CB39B8((uint64_t)v55, 0, 0);
      sub_24484B03C((uint64_t)v55, a2, (uint64_t)&v48);
      *(_OWORD *)a3 = v48;
      *(void *)(a3 + 16) = v49;
      if (*(_DWORD *)a3) {
        goto LABEL_40;
      }
      uint64_t v6 = objc_opt_new();
      unsigned __int8 v58 = v56;
      if (v56) {
        char v59 = v57;
      }
      sub_244BC2318((uint64_t)&v48, (uint64_t)v55, &v58);
      break;
    default:
      uint64_t v6 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 9711;
      goto LABEL_41;
  }
  while (sub_244BC3D18((uint64_t)&v48))
  {
    uint64_t v7 = objc_opt_new();
    unsigned __int8 v27 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v26, v48);
    objc_msgSend_setStep_(v7, v28, (uint64_t)v27);

    if (BYTE8(v48))
    {
      uint64_t v30 = (uint64_t *)sub_2446D18A4((unsigned char *)&v48 + 8);
      uint64_t v31 = *v30;
      uint64_t v32 = v30[1];
      id v33 = [NSString alloc];
      char v35 = objc_msgSend_initWithBytes_length_encoding_(v33, v34, v31, v32, 4);
      objc_msgSend_setLabel_(v7, v36, (uint64_t)v35);

      uint64_t v39 = objc_msgSend_label(v7, v37, v38);

      if (!v39)
      {
        uint64_t v46 = &xmmword_26519A668;
LABEL_38:
        *(_OWORD *)a3 = *v46;
        *(void *)(a3 + 16) = *((void *)v46 + 2);

        goto LABEL_39;
      }
    }
    else
    {
      objc_msgSend_setLabel_(v7, v29, 0);
    }
    objc_msgSend_addObject_(v6, v40, (uint64_t)v7);
  }
LABEL_31:
  if (!v51 || v51 == 33) {
    goto LABEL_41;
  }
  uint64_t v41 = v53;
  int v42 = v52;
  *(_DWORD *)a3 = v51;
  *(_DWORD *)(a3 + 4) = v42;
  *(void *)(a3 + 8) = v41;
  uint64_t v43 = v54;
LABEL_37:
  *(void *)(a3 + 16) = v43;
LABEL_39:

LABEL_40:
  uint64_t v6 = 0;
LABEL_41:

  return v6;
}

void sub_244BAFF7C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BB0004(int a1, uint64_t a2, uint64_t a3)
{
  if (a1 == 1)
  {
    sub_244CB3988((uint64_t)v18);
    unsigned __int8 v19 = 0;
    sub_244CB39B8((uint64_t)v18, 0, 0);
    sub_24484B03C((uint64_t)v18, a2, (uint64_t)&v15);
    *(_OWORD *)a3 = v15;
    *(void *)(a3 + 16) = v16;
    if (*(_DWORD *)a3)
    {
LABEL_19:
      uint64_t v5 = 0;
      goto LABEL_20;
    }
    uint64_t v5 = objc_opt_new();
    unsigned __int8 v21 = v19;
    if (v19) {
      char v22 = v20;
    }
    sub_2446D1930((uint64_t)&v15, (uint64_t)v18, &v21);
    while (sub_244794970((uint64_t)&v15))
    {
      BOOL v10 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v9, (unsigned __int16)v15);
      objc_msgSend_addObject_(v5, v11, (uint64_t)v10);
    }
  }
  else
  {
    if (a1)
    {
      uint64_t v5 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 9775;
      goto LABEL_20;
    }
    sub_244CB3988((uint64_t)v18);
    unsigned __int8 v19 = 0;
    sub_244CB39B8((uint64_t)v18, 0, 0);
    sub_24484B03C((uint64_t)v18, a2, (uint64_t)&v15);
    *(_OWORD *)a3 = v15;
    *(void *)(a3 + 16) = v16;
    if (*(_DWORD *)a3) {
      goto LABEL_19;
    }
    uint64_t v5 = objc_opt_new();
    unsigned __int8 v21 = v19;
    if (v19) {
      char v22 = v20;
    }
    sub_2446D1930((uint64_t)&v15, (uint64_t)v18, &v21);
    while (sub_244794970((uint64_t)&v15))
    {
      uint64_t v7 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v6, (unsigned __int16)v15);
      objc_msgSend_addObject_(v5, v8, (uint64_t)v7);
    }
  }
  if (DWORD2(v15) && DWORD2(v15) != 33)
  {
    uint64_t v12 = v16;
    int v13 = HIDWORD(v15);
    *(_DWORD *)a3 = DWORD2(v15);
    *(_DWORD *)(a3 + 4) = v13;
    *(void *)(a3 + 8) = v12;
    *(void *)(a3 + 16) = v17;

    goto LABEL_19;
  }
LABEL_20:

  return v5;
}

void sub_244BB0224(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BB0264(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
      sub_244CB3988((uint64_t)v55);
      char v56 = 0;
      sub_244CB39B8(v8, 0, 0);
      sub_24484B03C((uint64_t)v55, a2, (uint64_t)&v46);
      uint64_t v7 = 0;
      *(_OWORD *)a3 = v46;
      *(void *)(a3 + 16) = v47;
      if (*(_DWORD *)a3) {
        goto LABEL_36;
      }
      uint64_t v7 = objc_opt_new();
      LOBYTE(v41) = v56;
      if (v56) {
        BYTE1(v41) = v57;
      }
      sub_244BC243C((uint64_t)&v46, (uint64_t)v55, (unsigned __int8 *)&v41);
      break;
    case 1:
      LOBYTE(v41) = 0;
      sub_244CB3E8C(a2, &v41, (uint64_t)&v46);
      *(_OWORD *)a3 = v46;
      *(void *)(a3 + 16) = v47;
      if (!*(_DWORD *)a3) {
        goto LABEL_27;
      }
      goto LABEL_35;
    case 2:
    case 3:
      LOWORD(v41) = 0;
      sub_2447F15BC(a2, (unsigned __int8 *)&v41, (uint64_t)&v46);
      *(_OWORD *)a3 = v46;
      *(void *)(a3 + 16) = v47;
      if (*(_DWORD *)a3) {
        BOOL v6 = 1;
      }
      else {
        BOOL v6 = BYTE1(v41) == 0;
      }
      if (v6)
      {
LABEL_35:
        uint64_t v7 = 0;
      }
      else
      {
LABEL_27:
        uint64_t v7 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v5, v41);
      }
      goto LABEL_36;
    default:
      uint64_t v7 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 9883;
      goto LABEL_36;
  }
  while (sub_244BC24CC((uint64_t)&v46))
  {
    uint64_t v9 = objc_opt_new();
    long long v10 = v46;
    id v11 = [NSString alloc];
    int v13 = objc_msgSend_initWithBytes_length_encoding_(v11, v12, v10, *((void *)&v10 + 1), 4);
    objc_msgSend_setLabel_(v9, v14, (uint64_t)v13);

    uint64_t v17 = objc_msgSend_label(v9, v15, v16);

    if (!v17)
    {
      *(_OWORD *)a3 = xmmword_26519A680;
      *(void *)(a3 + 16) = 9799;
      goto LABEL_33;
    }
    unsigned __int8 v19 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v18, v47);
    objc_msgSend_setMode_(v9, v20, (uint64_t)v19);

    unsigned __int8 v21 = objc_opt_new();
    v58[0] = v49;
    if (v49) {
      v58[1] = v50;
    }
    sub_244BC25EC((uint64_t)&v41, (uint64_t)&v48, v58);
    while (sub_244BC2664((uint64_t)&v41))
    {
      uint64_t v23 = objc_opt_new();
      id v25 = v23;
      if ((_BYTE)v41)
      {
        int v26 = NSNumber;
        unsigned __int8 v27 = sub_2446D1880(&v41);
        id v29 = objc_msgSend_numberWithUnsignedShort_(v26, v28, *(unsigned __int16 *)v27);
        objc_msgSend_setMfgCode_(v25, v30, (uint64_t)v29);
      }
      else
      {
        objc_msgSend_setMfgCode_(v23, v24, 0);
      }
      uint64_t v32 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v31, WORD2(v41), v41);
      objc_msgSend_setValue_(v25, v33, (uint64_t)v32);

      objc_msgSend_addObject_(v21, v34, (uint64_t)v25);
    }
    if (v42 && v42 != 33)
    {
      uint64_t v38 = v44;
      int v39 = v43;
      *(_DWORD *)a3 = v42;
      *(_DWORD *)(a3 + 4) = v39;
      *(void *)(a3 + 8) = v38;
      *(void *)(a3 + 16) = v45;

LABEL_33:
LABEL_34:

      goto LABEL_35;
    }
    objc_msgSend_setModeTags_(v9, v22, (uint64_t)v21, v41);

    objc_msgSend_addObject_(v7, v35, (uint64_t)v9);
  }
  if (v51 && v51 != 33)
  {
    uint64_t v36 = v53;
    int v37 = v52;
    *(_DWORD *)a3 = v51;
    *(_DWORD *)(a3 + 4) = v37;
    *(void *)(a3 + 8) = v36;
    *(void *)(a3 + 16) = v54;
    goto LABEL_34;
  }
LABEL_36:

  return v7;
}

void sub_244BB0638(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BB06AC(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
      sub_244CB3988((uint64_t)v55);
      char v56 = 0;
      sub_244CB39B8(v8, 0, 0);
      sub_24484B03C((uint64_t)v55, a2, (uint64_t)&v46);
      uint64_t v7 = 0;
      *(_OWORD *)a3 = v46;
      *(void *)(a3 + 16) = v47;
      if (*(_DWORD *)a3) {
        goto LABEL_36;
      }
      uint64_t v7 = objc_opt_new();
      LOBYTE(v41) = v56;
      if (v56) {
        BYTE1(v41) = v57;
      }
      sub_244BC243C((uint64_t)&v46, (uint64_t)v55, (unsigned __int8 *)&v41);
      break;
    case 1:
      LOBYTE(v41) = 0;
      sub_244CB3E8C(a2, &v41, (uint64_t)&v46);
      *(_OWORD *)a3 = v46;
      *(void *)(a3 + 16) = v47;
      if (!*(_DWORD *)a3) {
        goto LABEL_27;
      }
      goto LABEL_35;
    case 2:
    case 3:
      LOWORD(v41) = 0;
      sub_2447F15BC(a2, (unsigned __int8 *)&v41, (uint64_t)&v46);
      *(_OWORD *)a3 = v46;
      *(void *)(a3 + 16) = v47;
      if (*(_DWORD *)a3) {
        BOOL v6 = 1;
      }
      else {
        BOOL v6 = BYTE1(v41) == 0;
      }
      if (v6)
      {
LABEL_35:
        uint64_t v7 = 0;
      }
      else
      {
LABEL_27:
        uint64_t v7 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v5, v41);
      }
      goto LABEL_36;
    default:
      uint64_t v7 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 9991;
      goto LABEL_36;
  }
  while (sub_244BC24CC((uint64_t)&v46))
  {
    uint64_t v9 = objc_opt_new();
    long long v10 = v46;
    id v11 = [NSString alloc];
    int v13 = objc_msgSend_initWithBytes_length_encoding_(v11, v12, v10, *((void *)&v10 + 1), 4);
    objc_msgSend_setLabel_(v9, v14, (uint64_t)v13);

    uint64_t v17 = objc_msgSend_label(v9, v15, v16);

    if (!v17)
    {
      *(_OWORD *)a3 = xmmword_26519A698;
      *(void *)(a3 + 16) = 9907;
      goto LABEL_33;
    }
    unsigned __int8 v19 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v18, v47);
    objc_msgSend_setMode_(v9, v20, (uint64_t)v19);

    unsigned __int8 v21 = objc_opt_new();
    v58[0] = v49;
    if (v49) {
      v58[1] = v50;
    }
    sub_244BC25EC((uint64_t)&v41, (uint64_t)&v48, v58);
    while (sub_244BC2664((uint64_t)&v41))
    {
      uint64_t v23 = objc_opt_new();
      id v25 = v23;
      if ((_BYTE)v41)
      {
        int v26 = NSNumber;
        unsigned __int8 v27 = sub_2446D1880(&v41);
        id v29 = objc_msgSend_numberWithUnsignedShort_(v26, v28, *(unsigned __int16 *)v27);
        objc_msgSend_setMfgCode_(v25, v30, (uint64_t)v29);
      }
      else
      {
        objc_msgSend_setMfgCode_(v23, v24, 0);
      }
      uint64_t v32 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v31, WORD2(v41), v41);
      objc_msgSend_setValue_(v25, v33, (uint64_t)v32);

      objc_msgSend_addObject_(v21, v34, (uint64_t)v25);
    }
    if (v42 && v42 != 33)
    {
      uint64_t v38 = v44;
      int v39 = v43;
      *(_DWORD *)a3 = v42;
      *(_DWORD *)(a3 + 4) = v39;
      *(void *)(a3 + 8) = v38;
      *(void *)(a3 + 16) = v45;

LABEL_33:
LABEL_34:

      goto LABEL_35;
    }
    objc_msgSend_setModeTags_(v9, v22, (uint64_t)v21, v41);

    objc_msgSend_addObject_(v7, v35, (uint64_t)v9);
  }
  if (v51 && v51 != 33)
  {
    uint64_t v36 = v53;
    int v37 = v52;
    *(_DWORD *)a3 = v51;
    *(_DWORD *)(a3 + 4) = v37;
    *(void *)(a3 + 8) = v36;
    *(void *)(a3 + 16) = v54;
    goto LABEL_34;
  }
LABEL_36:

  return v7;
}

void sub_244BB0A80(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BB0AF4(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
      sub_244CB3988((uint64_t)v55);
      char v56 = 0;
      sub_244CB39B8(v8, 0, 0);
      sub_24484B03C((uint64_t)v55, a2, (uint64_t)&v46);
      uint64_t v7 = 0;
      *(_OWORD *)a3 = v46;
      *(void *)(a3 + 16) = v47;
      if (*(_DWORD *)a3) {
        goto LABEL_36;
      }
      uint64_t v7 = objc_opt_new();
      LOBYTE(v41) = v56;
      if (v56) {
        BYTE1(v41) = v57;
      }
      sub_244BC243C((uint64_t)&v46, (uint64_t)v55, (unsigned __int8 *)&v41);
      break;
    case 1:
      LOBYTE(v41) = 0;
      sub_244CB3E8C(a2, &v41, (uint64_t)&v46);
      *(_OWORD *)a3 = v46;
      *(void *)(a3 + 16) = v47;
      if (!*(_DWORD *)a3) {
        goto LABEL_27;
      }
      goto LABEL_35;
    case 2:
    case 3:
      LOWORD(v41) = 0;
      sub_2447F15BC(a2, (unsigned __int8 *)&v41, (uint64_t)&v46);
      *(_OWORD *)a3 = v46;
      *(void *)(a3 + 16) = v47;
      if (*(_DWORD *)a3) {
        BOOL v6 = 1;
      }
      else {
        BOOL v6 = BYTE1(v41) == 0;
      }
      if (v6)
      {
LABEL_35:
        uint64_t v7 = 0;
      }
      else
      {
LABEL_27:
        uint64_t v7 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v5, v41);
      }
      goto LABEL_36;
    default:
      uint64_t v7 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 10099;
      goto LABEL_36;
  }
  while (sub_244BC24CC((uint64_t)&v46))
  {
    uint64_t v9 = objc_opt_new();
    long long v10 = v46;
    id v11 = [NSString alloc];
    int v13 = objc_msgSend_initWithBytes_length_encoding_(v11, v12, v10, *((void *)&v10 + 1), 4);
    objc_msgSend_setLabel_(v9, v14, (uint64_t)v13);

    uint64_t v17 = objc_msgSend_label(v9, v15, v16);

    if (!v17)
    {
      *(_OWORD *)a3 = xmmword_26519A6B0;
      *(void *)(a3 + 16) = 10015;
      goto LABEL_33;
    }
    unsigned __int8 v19 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v18, v47);
    objc_msgSend_setMode_(v9, v20, (uint64_t)v19);

    unsigned __int8 v21 = objc_opt_new();
    v58[0] = v49;
    if (v49) {
      v58[1] = v50;
    }
    sub_244BC25EC((uint64_t)&v41, (uint64_t)&v48, v58);
    while (sub_244BC2664((uint64_t)&v41))
    {
      uint64_t v23 = objc_opt_new();
      id v25 = v23;
      if ((_BYTE)v41)
      {
        int v26 = NSNumber;
        unsigned __int8 v27 = sub_2446D1880(&v41);
        id v29 = objc_msgSend_numberWithUnsignedShort_(v26, v28, *(unsigned __int16 *)v27);
        objc_msgSend_setMfgCode_(v25, v30, (uint64_t)v29);
      }
      else
      {
        objc_msgSend_setMfgCode_(v23, v24, 0);
      }
      uint64_t v32 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v31, WORD2(v41), v41);
      objc_msgSend_setValue_(v25, v33, (uint64_t)v32);

      objc_msgSend_addObject_(v21, v34, (uint64_t)v25);
    }
    if (v42 && v42 != 33)
    {
      uint64_t v38 = v44;
      int v39 = v43;
      *(_DWORD *)a3 = v42;
      *(_DWORD *)(a3 + 4) = v39;
      *(void *)(a3 + 8) = v38;
      *(void *)(a3 + 16) = v45;

LABEL_33:
LABEL_34:

      goto LABEL_35;
    }
    objc_msgSend_setModeTags_(v9, v22, (uint64_t)v21, v41);

    objc_msgSend_addObject_(v7, v35, (uint64_t)v9);
  }
  if (v51 && v51 != 33)
  {
    uint64_t v36 = v53;
    int v37 = v52;
    *(_DWORD *)a3 = v51;
    *(_DWORD *)(a3 + 4) = v37;
    *(void *)(a3 + 8) = v36;
    *(void *)(a3 + 16) = v54;
    goto LABEL_34;
  }
LABEL_36:

  return v7;
}

void sub_244BB0EC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BB0F3C(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
      LOWORD(v37) = 0;
      sub_24480CBD0(a2, (unsigned __int8 *)&v37, (uint64_t)&v33);
      goto LABEL_33;
    case 1:
      LOBYTE(v37) = 0;
      sub_244823794(a2, &v37, &v33);
      goto LABEL_3;
    case 2:
    case 40:
    case 41:
    case 42:
    case 43:
    case 50:
    case 51:
      LOBYTE(v37) = 0;
      sub_244CB3C0C(a2, (char *)&v37, (uint64_t)&v33);
      *(_OWORD *)a3 = v33;
      *(void *)(a3 + 16) = v34;
      if (*(_DWORD *)a3) {
        goto LABEL_66;
      }
      uint64_t v8 = objc_msgSend_numberWithBool_(NSNumber, v15, v37);
      goto LABEL_28;
    case 3:
      LOWORD(v37) = 0;
      sub_244804260(a2, (unsigned __int8 *)&v37, (uint64_t)&v33);
LABEL_33:
      *(_OWORD *)a3 = v33;
      *(void *)(a3 + 16) = v34;
      if (*(_DWORD *)a3) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = BYTE1(v37) == 0;
      }
      if (!v18) {
        goto LABEL_4;
      }
      goto LABEL_66;
    case 4:
    case 5:
    case 35:
      LODWORD(v37) = 0;
      sub_244CB3FB0(a2, &v37, (uint64_t)&v33);
      *(_OWORD *)a3 = v33;
      *(void *)(a3 + 16) = v34;
      if (*(_DWORD *)a3) {
        goto LABEL_66;
      }
      uint64_t v8 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v16, v37);
      goto LABEL_28;
    case 6:
    case 17:
    case 18:
    case 19:
    case 53:
LABEL_18:
      LOWORD(v37) = 0;
      sub_244CB3F40(a2, &v37, (uint64_t)&v33);
      goto LABEL_19;
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 29:
    case 30:
    case 31:
    case 32:
    case 45:
    case 46:
    case 47:
    case 52:
LABEL_29:
      uint64_t v9 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 10802;
      goto LABEL_67;
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 28:
    case 34:
    case 36:
    case 48:
    case 49:
LABEL_2:
      LOBYTE(v37) = 0;
      sub_244CB3E8C(a2, &v37, (uint64_t)&v33);
      goto LABEL_3;
    case 27:
    case 44:
      LOBYTE(v37) = 0;
      sub_24484B184(a2, &v37, &v33);
      goto LABEL_3;
    case 33:
      long long v37 = 0uLL;
      sub_244CB41F0(a2, &v37, &v33);
      uint64_t v9 = 0;
      *(_OWORD *)a3 = v33;
      *(void *)(a3 + 16) = v34;
      if (!*(_DWORD *)a3)
      {
        unsigned __int8 v19 = sub_244BBFB94(v37, *((uint64_t *)&v37 + 1));
        uint64_t v9 = v19;
        if (v19)
        {
          id v20 = v19;
        }
        else
        {
          *(_OWORD *)a3 = xmmword_26519A6C8;
          *(void *)(a3 + 16) = 10333;
        }
      }
      goto LABEL_67;
    case 37:
      LOBYTE(v37) = 0;
      sub_2447FACE4(a2, &v37, &v33);
LABEL_3:
      *(_OWORD *)a3 = v33;
      *(void *)(a3 + 16) = v34;
      if (*(_DWORD *)a3) {
        goto LABEL_66;
      }
LABEL_4:
      uint64_t v8 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v7, v37);
      goto LABEL_28;
    case 38:
    case 39:
      LOWORD(v37) = 0;
      sub_24484B6B0(a2, &v37, &v33);
LABEL_19:
      *(_OWORD *)a3 = v33;
      *(void *)(a3 + 16) = v34;
      if (*(_DWORD *)a3) {
        goto LABEL_66;
      }
      uint64_t v8 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v14, (unsigned __int16)v37);
      goto LABEL_28;
    default:
      if (!v4 & v3)
      {
        switch(a1)
        {
          case 323551232:
          case 323551233:
          case 323551236:
LABEL_15:
            LOBYTE(v33) = 0;
            LOBYTE(v34) = 0;
            sub_2447FFFFC(a2, (uint64_t)&v33, &v37);
            uint64_t v9 = 0;
            *(_OWORD *)a3 = v37;
            *(void *)(a3 + 16) = v38;
            if (*(_DWORD *)a3 || !(_BYTE)v34) {
              goto LABEL_67;
            }
            objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v13, v33, *((void *)&v33 + 1));
            break;
          case 323551234:
LABEL_25:
            long long v37 = 0uLL;
            sub_2447F5484(a2, &v37, (uint64_t)&v33);
            uint64_t v9 = 0;
            *(_OWORD *)a3 = v33;
            *(void *)(a3 + 16) = v34;
            if (*(_DWORD *)a3) {
              goto LABEL_67;
            }
            objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v17, v37, *((void *)&v37 + 1));
            break;
          case 323551235:
            sub_244BC12F0((uint64_t)&v37);
            sub_24484B03C((uint64_t)&v37, a2, (uint64_t)&v33);
            *(_OWORD *)a3 = v33;
            *(void *)(a3 + 16) = v34;
            if (*(_DWORD *)a3) {
              goto LABEL_66;
            }
            uint64_t v9 = objc_opt_new();
            unsigned __int8 v41 = v39;
            if (v39) {
              char v42 = v40;
            }
            sub_244797544((uint64_t)&v33, (uint64_t)&v37, &v41);
            while (sub_244798B84((uint64_t)&v33))
            {
              id v11 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v10, v33, *((void *)&v33 + 1));
              objc_msgSend_addObject_(v9, v12, (uint64_t)v11);
            }
            goto LABEL_63;
          case 323551237:
            sub_244BC12F0((uint64_t)&v37);
            sub_24484B03C((uint64_t)&v37, a2, (uint64_t)&v33);
            *(_OWORD *)a3 = v33;
            *(void *)(a3 + 16) = v34;
            if (*(_DWORD *)a3) {
              goto LABEL_66;
            }
            uint64_t v9 = objc_opt_new();
            unsigned __int8 v41 = v39;
            if (v39) {
              char v42 = v40;
            }
            sub_244797544((uint64_t)&v33, (uint64_t)&v37, &v41);
            while (sub_244798B84((uint64_t)&v33))
            {
              char v22 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v21, v33, *((void *)&v33 + 1));
              objc_msgSend_addObject_(v9, v23, (uint64_t)v22);
            }
            goto LABEL_63;
          case 323551238:
            goto LABEL_2;
          case 323551239:
          case 323551240:
            goto LABEL_18;
          default:
            goto LABEL_29;
        uint64_t v8 = };
LABEL_28:
        uint64_t v9 = (void *)v8;
      }
      else
      {
        switch(a1)
        {
          case 128:
          case 129:
          case 132:
            goto LABEL_15;
          case 130:
            goto LABEL_25;
          case 131:
            sub_244BC12F0((uint64_t)&v37);
            sub_24484B03C((uint64_t)&v37, a2, (uint64_t)&v33);
            *(_OWORD *)a3 = v33;
            *(void *)(a3 + 16) = v34;
            if (*(_DWORD *)a3) {
              goto LABEL_66;
            }
            uint64_t v9 = objc_opt_new();
            unsigned __int8 v41 = v39;
            if (v39) {
              char v42 = v40;
            }
            sub_244797544((uint64_t)&v33, (uint64_t)&v37, &v41);
            while (sub_244798B84((uint64_t)&v33))
            {
              id v25 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v24, v33, *((void *)&v33 + 1));
              objc_msgSend_addObject_(v9, v26, (uint64_t)v25);
            }
            break;
          case 133:
            sub_244BC12F0((uint64_t)&v37);
            sub_24484B03C((uint64_t)&v37, a2, (uint64_t)&v33);
            *(_OWORD *)a3 = v33;
            *(void *)(a3 + 16) = v34;
            if (*(_DWORD *)a3) {
              goto LABEL_66;
            }
            uint64_t v9 = objc_opt_new();
            unsigned __int8 v41 = v39;
            if (v39) {
              char v42 = v40;
            }
            sub_244797544((uint64_t)&v33, (uint64_t)&v37, &v41);
            while (sub_244798B84((uint64_t)&v33))
            {
              long long v28 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v27, v33, *((void *)&v33 + 1));
              objc_msgSend_addObject_(v9, v29, (uint64_t)v28);
            }
            break;
          case 134:
            goto LABEL_2;
          case 135:
          case 136:
            goto LABEL_18;
          default:
            JUMPOUT(0);
        }
LABEL_63:
        if (v34 && v34 != 33)
        {
          uint64_t v30 = v35;
          int v31 = HIDWORD(v34);
          *(_DWORD *)a3 = v34;
          *(_DWORD *)(a3 + 4) = v31;
          *(void *)(a3 + 8) = v30;
          *(void *)(a3 + 16) = v36;

LABEL_66:
          uint64_t v9 = 0;
        }
      }
LABEL_67:
      return v9;
  }
}

void sub_244BB15E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BB1770(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
      LOBYTE(v10) = 0;
      sub_2448255E8(a2, (char *)&v10, &v12);
      goto LABEL_19;
    case 1:
    case 2:
    case 5:
    case 6:
    case 16:
    case 17:
    case 18:
    case 19:
      unsigned __int16 v10 = 0;
      sub_244CB3F40(a2, &v10, (uint64_t)&v12);
      goto LABEL_3;
    case 3:
    case 4:
    case 11:
    case 12:
    case 14:
    case 15:
      LOBYTE(v10) = 0;
      char v11 = 0;
      sub_2447EF9E0(a2, (__int16 *)&v10, (uint64_t)&v12);
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        BOOL v5 = 1;
      }
      else {
        BOOL v5 = v11 == 0;
      }
      if (!v5) {
        goto LABEL_9;
      }
      goto LABEL_20;
    case 7:
    case 10:
    case 23:
      LOBYTE(v10) = 0;
      sub_24484B184(a2, &v10, &v12);
      goto LABEL_19;
    case 8:
    case 9:
      unsigned __int16 v10 = 0;
      sub_2447F15BC(a2, (unsigned __int8 *)&v10, (uint64_t)&v12);
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        BOOL v8 = 1;
      }
      else {
        BOOL v8 = HIBYTE(v10) == 0;
      }
      if (!v8) {
        goto LABEL_14;
      }
      goto LABEL_20;
    case 13:
      LOBYTE(v10) = 0;
      sub_244825654(a2, (char *)&v10, &v12);
LABEL_19:
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        goto LABEL_20;
      }
LABEL_14:
      BOOL v6 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v7, v10);
      break;
    case 26:
      unsigned __int16 v10 = 0;
      sub_24484B6B0(a2, &v10, &v12);
LABEL_3:
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3)
      {
LABEL_20:
        BOOL v6 = 0;
      }
      else
      {
LABEL_9:
        BOOL v6 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v4, v10);
      }
      break;
    default:
      BOOL v6 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 11088;
      break;
  }

  return v6;
}

id sub_244BB19E4(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
      sub_244CB3988((uint64_t)&v160);
      unsigned __int8 v162 = 0;
      sub_244CB39B8((uint64_t)&v160, 0, 0);
      sub_24484B03C((uint64_t)&v160, a2, (uint64_t)&v150);
      *(_OWORD *)a3 = v150;
      *(void *)(a3 + 16) = v151;
      if (*(_DWORD *)a3) {
        goto LABEL_84;
      }
      uint64_t v7 = objc_opt_new();
      unsigned __int8 v164 = v162;
      if (v162) {
        char v165 = v163;
      }
      sub_244BC3DC4((uint64_t)&v150, (uint64_t)&v160, &v164);
      while (2)
      {
        if (sub_244BC3E50((uint64_t)&v150))
        {
          char v11 = objc_opt_new();
          uint64_t v13 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v12, v150);
          objc_msgSend_setAreaID_(v11, v14, (uint64_t)v13);

          if (BYTE8(v150))
          {
            uint64_t v16 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v15, DWORD1(v150));
            objc_msgSend_setMapID_(v11, v17, (uint64_t)v16);
          }
          else
          {
            objc_msgSend_setMapID_(v11, v15, 0);
          }
          BOOL v18 = objc_opt_new();
          objc_msgSend_setAreaInfo_(v11, v19, (uint64_t)v18);

          if (!(_BYTE)v154)
          {
            unsigned __int8 v58 = objc_msgSend_areaInfo(v11, v20, v21);
            objc_msgSend_setLocationInfo_(v58, v59, 0);
            goto LABEL_34;
          }
          char v22 = objc_opt_new();
          id v25 = objc_msgSend_areaInfo(v11, v23, v24);
          objc_msgSend_setLocationInfo_(v25, v26, (uint64_t)v22);

          if (!(_BYTE)v154) {
            goto LABEL_88;
          }
          uint64_t v27 = v151;
          uint64_t v28 = v152;
          id v29 = [NSString alloc];
          int v31 = objc_msgSend_initWithBytes_length_encoding_(v29, v30, v27, v28, 4);
          uint64_t v34 = objc_msgSend_areaInfo(v11, v32, v33);
          long long v37 = objc_msgSend_locationInfo(v34, v35, v36);
          objc_msgSend_setLocationName_(v37, v38, (uint64_t)v31);

          unsigned __int8 v41 = objc_msgSend_areaInfo(v11, v39, v40);
          uint64_t v44 = objc_msgSend_locationInfo(v41, v42, v43);
          uint64_t v47 = objc_msgSend_locationName(v44, v45, v46);

          if (v47)
          {
            if (!(_BYTE)v154) {
              goto LABEL_88;
            }
            if (BYTE2(v153))
            {
              unsigned __int8 v50 = objc_msgSend_numberWithShort_(NSNumber, v48, (__int16)v153);
              uint64_t v53 = objc_msgSend_areaInfo(v11, v51, v52);
              char v56 = objc_msgSend_locationInfo(v53, v54, v55);
              objc_msgSend_setFloorNumber_(v56, v57, (uint64_t)v50);
            }
            else
            {
              unsigned __int8 v50 = objc_msgSend_areaInfo(v11, v48, v49);
              uint64_t v53 = objc_msgSend_locationInfo(v50, v60, v61);
              objc_msgSend_setFloorNumber_(v53, v62, 0);
            }

            if (!(_BYTE)v154) {
              goto LABEL_88;
            }
            if (BYTE5(v153))
            {
              unsigned __int8 v58 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v63, BYTE4(v153));
              int v67 = objc_msgSend_areaInfo(v11, v65, v66);
              unsigned __int8 v70 = objc_msgSend_locationInfo(v67, v68, v69);
              objc_msgSend_setAreaType_(v70, v71, (uint64_t)v58);
            }
            else
            {
              unsigned __int8 v58 = objc_msgSend_areaInfo(v11, v63, v64);
              int v67 = objc_msgSend_locationInfo(v58, v72, v73);
              objc_msgSend_setAreaType_(v67, v74, 0);
            }

LABEL_34:
            if (!BYTE3(v155))
            {
              int v93 = objc_msgSend_areaInfo(v11, v75, v76);
              objc_msgSend_setLandmarkInfo_(v93, v101, 0);
LABEL_42:

              objc_msgSend_addObject_(v7, v105, (uint64_t)v11);
              continue;
            }
            long long v77 = objc_opt_new();
            uint64_t v80 = objc_msgSend_areaInfo(v11, v78, v79);
            objc_msgSend_setLandmarkInfo_(v80, v81, (uint64_t)v77);

            if (BYTE3(v155))
            {
              uint64_t v83 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v82, v155);
              int v86 = objc_msgSend_areaInfo(v11, v84, v85);
              char v89 = objc_msgSend_landmarkInfo(v86, v87, v88);
              objc_msgSend_setLandmarkTag_(v89, v90, (uint64_t)v83);

              if (BYTE3(v155))
              {
                if (BYTE2(v155))
                {
                  int v93 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v91, BYTE1(v155));
                  BOOL v96 = objc_msgSend_areaInfo(v11, v94, v95);
                  BOOL v99 = objc_msgSend_landmarkInfo(v96, v97, v98);
                  objc_msgSend_setRelativePositionTag_(v99, v100, (uint64_t)v93);
                }
                else
                {
                  int v93 = objc_msgSend_areaInfo(v11, v91, v92);
                  BOOL v96 = objc_msgSend_landmarkInfo(v93, v102, v103);
                  objc_msgSend_setRelativePositionTag_(v96, v104, 0);
                }

                goto LABEL_42;
              }
            }
LABEL_88:
            sub_24479484C();
          }
          id v148 = &xmmword_26519A6E0;
LABEL_82:
          *(_OWORD *)a3 = *v148;
          *(void *)(a3 + 16) = *((void *)v148 + 2);

          goto LABEL_83;
        }
        break;
      }
      if (v156 && v156 != 33)
      {
        uint64_t v144 = v158;
        int v145 = v157;
        *(_DWORD *)a3 = v156;
        *(_DWORD *)(a3 + 4) = v145;
        *(void *)(a3 + 8) = v144;
        uint64_t v141 = v159;
        goto LABEL_79;
      }
      goto LABEL_85;
    case 1:
      sub_244CB3988((uint64_t)&v160);
      unsigned __int8 v162 = 0;
      sub_244CB39B8((uint64_t)&v160, 0, 0);
      sub_24484B03C((uint64_t)&v160, a2, (uint64_t)&v150);
      *(_OWORD *)a3 = v150;
      *(void *)(a3 + 16) = v151;
      if (*(_DWORD *)a3) {
        goto LABEL_84;
      }
      uint64_t v7 = objc_opt_new();
      unsigned __int8 v164 = v162;
      if (v162) {
        char v165 = v163;
      }
      sub_244BC3F04((uint64_t)&v150, (uint64_t)&v160, &v164);
      while (2)
      {
        if (sub_244BC3F7C((uint64_t)&v150))
        {
          char v11 = objc_opt_new();
          uint64_t v107 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v106, v150);
          objc_msgSend_setMapID_(v11, v108, (uint64_t)v107);

          uint64_t v109 = *((void *)&v150 + 1);
          uint64_t v110 = v151;
          id v111 = [NSString alloc];
          int v113 = objc_msgSend_initWithBytes_length_encoding_(v111, v112, v109, v110, 4);
          objc_msgSend_setName_(v11, v114, (uint64_t)v113);

          unsigned __int8 v117 = objc_msgSend_name(v11, v115, v116);

          if (v117)
          {
            objc_msgSend_addObject_(v7, v118, (uint64_t)v11);

            continue;
          }
          id v148 = &xmmword_26519A6F8;
          goto LABEL_82;
        }
        break;
      }
      if (v152 && v152 != 33)
      {
        uint64_t v146 = v153;
        int v147 = HIDWORD(v152);
        *(_DWORD *)a3 = v152;
        *(_DWORD *)(a3 + 4) = v147;
        *(void *)(a3 + 8) = v146;
        uint64_t v141 = v154;
        goto LABEL_79;
      }
      goto LABEL_85;
    case 2:
      sub_244CB3988((uint64_t)&v160);
      unsigned __int8 v162 = 0;
      sub_244CB39B8((uint64_t)&v160, 0, 0);
      sub_24484B03C((uint64_t)&v160, a2, (uint64_t)&v150);
      *(_OWORD *)a3 = v150;
      *(void *)(a3 + 16) = v151;
      if (*(_DWORD *)a3) {
        goto LABEL_84;
      }
      uint64_t v7 = objc_opt_new();
      unsigned __int8 v164 = v162;
      if (v162) {
        char v165 = v163;
      }
      sub_2446D1930((uint64_t)&v150, (uint64_t)&v160, &v164);
      while (sub_244798ADC(&v150))
      {
        uint64_t v9 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v8, v150);
        objc_msgSend_addObject_(v7, v10, (uint64_t)v9);
      }
      if (!DWORD2(v150) || DWORD2(v150) == 33) {
        goto LABEL_85;
      }
      uint64_t v139 = v151;
      int v140 = HIDWORD(v150);
      *(_DWORD *)a3 = DWORD2(v150);
      *(_DWORD *)(a3 + 4) = v140;
      *(void *)(a3 + 8) = v139;
      uint64_t v141 = v152;
      goto LABEL_79;
    case 3:
    case 4:
      LOBYTE(v160) = 0;
      char v161 = 0;
      sub_2447F4140(a2, (uint64_t)&v160, (uint64_t)&v150);
      *(_OWORD *)a3 = v150;
      *(void *)(a3 + 16) = v151;
      if (*(_DWORD *)a3) {
        BOOL v6 = 1;
      }
      else {
        BOOL v6 = v161 == 0;
      }
      if (v6) {
        goto LABEL_84;
      }
      uint64_t v7 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v5, v160);
      goto LABEL_85;
    case 5:
      sub_244CB3988((uint64_t)&v160);
      unsigned __int8 v162 = 0;
      sub_244CB39B8((uint64_t)&v160, 0, 0);
      sub_24484B03C((uint64_t)&v160, a2, (uint64_t)&v150);
      *(_OWORD *)a3 = v150;
      *(void *)(a3 + 16) = v151;
      if (*(_DWORD *)a3) {
        goto LABEL_84;
      }
      uint64_t v7 = objc_opt_new();
      unsigned __int8 v164 = v162;
      if (v162) {
        char v165 = v163;
      }
      sub_244BC4028((uint64_t)&v150, (uint64_t)&v160, &v164);
      while (2)
      {
        if (sub_244BC40A8((uint64_t)&v150))
        {
          int v119 = objc_opt_new();
          uint64_t v121 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v120, v150);
          objc_msgSend_setAreaID_(v119, v122, (uint64_t)v121);

          unsigned __int8 v124 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v123, BYTE4(v150));
          objc_msgSend_setStatus_(v119, v125, (uint64_t)v124);

          if (BYTE8(v150) && sub_24484BC98((unsigned char *)&v150 + 8)[4])
          {
            unsigned __int8 v127 = NSNumber;
            int v128 = sub_24484BC98((unsigned char *)&v150 + 8);
            if (!v128[4]) {
              goto LABEL_89;
            }
            BOOL v130 = objc_msgSend_numberWithUnsignedInt_(v127, v129, *(unsigned int *)v128);
            objc_msgSend_setTotalOperationalTime_(v119, v131, (uint64_t)v130);
          }
          else
          {
            objc_msgSend_setTotalOperationalTime_(v119, v126, 0);
          }
          if (!BYTE4(v151) || !sub_24484BC98((unsigned char *)&v151 + 4)[4])
          {
            objc_msgSend_setEstimatedTime_(v119, v132, 0);
            goto LABEL_65;
          }
          char v133 = NSNumber;
          char v134 = sub_24484BC98((unsigned char *)&v151 + 4);
          if (v134[4])
          {
            uint64_t v136 = objc_msgSend_numberWithUnsignedInt_(v133, v135, *(unsigned int *)v134);
            objc_msgSend_setEstimatedTime_(v119, v137, (uint64_t)v136);

LABEL_65:
            objc_msgSend_addObject_(v7, v138, (uint64_t)v119);

            continue;
          }
LABEL_89:
          sub_24479484C();
        }
        break;
      }
      if (v153 && v153 != 33)
      {
        uint64_t v142 = v154;
        int v143 = HIDWORD(v153);
        *(_DWORD *)a3 = v153;
        *(_DWORD *)(a3 + 4) = v143;
        *(void *)(a3 + 8) = v142;
        uint64_t v141 = v155;
LABEL_79:
        *(void *)(a3 + 16) = v141;
LABEL_83:

LABEL_84:
        uint64_t v7 = 0;
      }
LABEL_85:
      return v7;
    default:
      uint64_t v7 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 11300;
      goto LABEL_85;
  }
}

void sub_244BB23AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BB24FC(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
    case 3:
    case 4:
    case 5:
    case 6:
    case 11:
    case 12:
    case 19:
      LOBYTE(v13) = 0;
      BYTE2(v13) = 0;
      sub_2447F003C(a2, (__int16 *)&v13, (uint64_t)&v15);
      *(_OWORD *)a3 = v15;
      *(void *)(a3 + 16) = v16;
      if (*(_DWORD *)a3) {
        BOOL v5 = 1;
      }
      else {
        BOOL v5 = BYTE2(v13) == 0;
      }
      if (v5) {
        goto LABEL_20;
      }
      BOOL v6 = objc_msgSend_numberWithShort_(NSNumber, v4, (__int16)v13);
      break;
    case 1:
    case 2:
    case 7:
    case 8:
    case 9:
    case 10:
    case 20:
      LOBYTE(v13) = 0;
      BYTE2(v13) = 0;
      sub_2447EF9E0(a2, (__int16 *)&v13, (uint64_t)&v15);
      *(_OWORD *)a3 = v15;
      *(void *)(a3 + 16) = v16;
      if (*(_DWORD *)a3) {
        BOOL v8 = 1;
      }
      else {
        BOOL v8 = BYTE2(v13) == 0;
      }
      if (v8) {
        goto LABEL_20;
      }
      goto LABEL_11;
    case 16:
      LOWORD(v13) = 0;
      sub_24484B6B0(a2, &v13, &v15);
      *(_OWORD *)a3 = v15;
      *(void *)(a3 + 16) = v16;
      if (*(_DWORD *)a3) {
        goto LABEL_20;
      }
LABEL_11:
      BOOL v6 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v7, (unsigned __int16)v13);
      break;
    case 17:
    case 32:
      LOBYTE(v13) = 0;
      sub_2446D1A48(a2, &v13, &v15);
      goto LABEL_19;
    case 18:
    case 33:
      LOBYTE(v13) = 0;
      sub_244826E18(a2, (char *)&v13, &v15);
LABEL_19:
      *(_OWORD *)a3 = v15;
      *(void *)(a3 + 16) = v16;
      if (*(_DWORD *)a3) {
        goto LABEL_20;
      }
      BOOL v6 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v11, v13);
      break;
    case 21:
    case 22:
    case 23:
      LOBYTE(v13) = 0;
      char v14 = 0;
      sub_2447F4140(a2, (uint64_t)&v13, (uint64_t)&v15);
      *(_OWORD *)a3 = v15;
      *(void *)(a3 + 16) = v16;
      if (*(_DWORD *)a3) {
        BOOL v10 = 1;
      }
      else {
        BOOL v10 = v14 == 0;
      }
      if (v10)
      {
LABEL_20:
        BOOL v6 = 0;
      }
      else
      {
        BOOL v6 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v9, v13);
      }
      break;
    default:
      BOOL v6 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 11637;
      break;
  }

  return v6;
}

id sub_244BB279C(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
    case 1:
    case 49:
    case 70:
      LOBYTE(v150) = 0;
      BYTE2(v150) = 0;
      sub_2447F003C(a2, (__int16 *)&v150, (uint64_t)&v161);
      *(_OWORD *)a3 = v161;
      *(void *)(a3 + 16) = v162;
      if (*(_DWORD *)a3) {
        BOOL v8 = 1;
      }
      else {
        BOOL v8 = BYTE2(v150) == 0;
      }
      if (v8) {
        goto LABEL_6;
      }
      goto LABEL_16;
    case 2:
    case 9:
    case 26:
    case 37:
      LOBYTE(v150) = 0;
      sub_24484B184(a2, &v150, &v161);
      goto LABEL_5;
    case 3:
    case 4:
    case 5:
    case 6:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
      LOWORD(v150) = 0;
      sub_244CB3D8C(a2, &v150, (uint64_t)&v161);
      *(_OWORD *)a3 = v161;
      *(void *)(a3 + 16) = v162;
      if (*(_DWORD *)a3) {
        goto LABEL_6;
      }
LABEL_16:
      BOOL v6 = objc_msgSend_numberWithShort_(NSNumber, v4, (__int16)v150);
      goto LABEL_17;
    case 7:
    case 8:
    case 33:
    case 34:
    case 58:
    case 74:
    case 75:
    case 76:
      LOBYTE(v150) = 0;
      sub_244CB3E8C(a2, &v150, (uint64_t)&v161);
      goto LABEL_5;
    case 16:
    case 25:
      LOBYTE(v150) = 0;
      sub_244CB3C70(a2, &v150, (uint64_t)&v161);
      *(_OWORD *)a3 = v161;
      *(void *)(a3 + 16) = v162;
      if (*(_DWORD *)a3) {
        goto LABEL_6;
      }
      BOOL v6 = objc_msgSend_numberWithChar_(NSNumber, v10, (char)v150);
      goto LABEL_17;
    case 27:
      LOBYTE(v150) = 0;
      sub_2447F0A54(a2, &v150, &v161);
      goto LABEL_5;
    case 28:
      LOBYTE(v150) = 0;
      sub_244827654(a2, &v150, &v161);
      goto LABEL_5;
    case 30:
      LOBYTE(v150) = 0;
      sub_244829728(a2, (char *)&v150, &v161);
      goto LABEL_5;
    case 32:
      LOBYTE(v150) = 0;
      sub_2447F6AD4(a2, &v150, &v161);
      goto LABEL_5;
    case 35:
      LOBYTE(v150) = 0;
      sub_2447F1DCC(a2, &v150, &v161);
      goto LABEL_5;
    case 36:
      LOBYTE(v150) = 0;
      BYTE2(v150) = 0;
      sub_2447EF9E0(a2, (__int16 *)&v150, (uint64_t)&v161);
      *(_OWORD *)a3 = v161;
      *(void *)(a3 + 16) = v162;
      if (*(_DWORD *)a3) {
        BOOL v38 = 1;
      }
      else {
        BOOL v38 = BYTE2(v150) == 0;
      }
      if (!v38) {
        goto LABEL_123;
      }
      goto LABEL_6;
    case 41:
      LOWORD(v150) = 0;
      sub_24484B6B0(a2, &v150, &v161);
      goto LABEL_122;
    case 48:
      LOBYTE(v150) = 0;
      sub_2447F5F24(a2, &v150, &v161);
      goto LABEL_5;
    case 50:
      LODWORD(v150) = 0;
      sub_244CB3FB0(a2, &v150, (uint64_t)&v161);
      goto LABEL_36;
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 77:
      LOWORD(v150) = 0;
      sub_2447F15BC(a2, (unsigned __int8 *)&v150, (uint64_t)&v161);
      *(_OWORD *)a3 = v161;
      *(void *)(a3 + 16) = v162;
      if (*(_DWORD *)a3) {
        BOOL v7 = 1;
      }
      else {
        BOOL v7 = BYTE1(v150) == 0;
      }
      if (!v7) {
        goto LABEL_11;
      }
      goto LABEL_6;
    case 64:
      LOBYTE(v150) = 0;
      sub_2447FACE4(a2, &v150, &v161);
      goto LABEL_5;
    case 65:
      LOWORD(v150) = 0;
      sub_244CB3F40(a2, &v150, (uint64_t)&v161);
LABEL_122:
      *(_OWORD *)a3 = v161;
      *(void *)(a3 + 16) = v162;
      if (*(_DWORD *)a3) {
        goto LABEL_6;
      }
LABEL_123:
      BOOL v6 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v26, (unsigned __int16)v150);
      goto LABEL_17;
    case 66:
    case 67:
      LOBYTE(v150) = 0;
      sub_2446D1A48(a2, &v150, &v161);
      goto LABEL_5;
    case 68:
      LODWORD(v150) = 0;
      sub_24484B2E8(a2, &v150, &v161);
LABEL_36:
      *(_OWORD *)a3 = v161;
      *(void *)(a3 + 16) = v162;
      if (!*(_DWORD *)a3) {
        goto LABEL_129;
      }
      goto LABEL_6;
    case 69:
      LOBYTE(v150) = 0;
      sub_2447F4FD8(a2, &v150, &v161);
      goto LABEL_5;
    case 71:
      LOBYTE(v150) = 0;
      sub_2447F092C(a2, (BOOL *)&v150, &v161);
LABEL_5:
      *(_OWORD *)a3 = v161;
      *(void *)(a3 + 16) = v162;
      if (*(_DWORD *)a3) {
        goto LABEL_6;
      }
LABEL_11:
      BOOL v6 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v5, v150);
      goto LABEL_17;
    case 72:
      sub_244BC12F0((uint64_t)&v150);
      sub_24484B03C((uint64_t)&v150, a2, (uint64_t)&v161);
      *(_OWORD *)a3 = v161;
      *(void *)(a3 + 16) = v162;
      if (*(_DWORD *)a3) {
        goto LABEL_6;
      }
      char v14 = objc_opt_new();
      unsigned __int8 v179 = v159;
      if (v159) {
        char v180 = v160;
      }
      sub_244798128((uint64_t)&v161, (uint64_t)&v150, &v179);
      while (sub_244BC415C(&v161))
      {
        long long v15 = objc_opt_new();
        uint64_t v17 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v16, v161);
        objc_msgSend_setPresetScenario_(v15, v18, (uint64_t)v17);

        id v20 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v19, BYTE1(v161));
        objc_msgSend_setNumberOfPresets_(v15, v21, (uint64_t)v20);

        uint64_t v23 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v22, WORD1(v161));
        objc_msgSend_setPresetTypeFeatures_(v15, v24, (uint64_t)v23);

        objc_msgSend_addObject_(v14, v25, (uint64_t)v15);
      }
      goto LABEL_131;
    case 73:
      sub_244BC12F0((uint64_t)&v150);
      sub_24484B03C((uint64_t)&v150, a2, (uint64_t)&v161);
      *(_OWORD *)a3 = v161;
      *(void *)(a3 + 16) = v162;
      if (*(_DWORD *)a3) {
        goto LABEL_6;
      }
      char v14 = objc_opt_new();
      unsigned __int8 v179 = v159;
      if (v159) {
        char v180 = v160;
      }
      sub_244798128((uint64_t)&v161, (uint64_t)&v150, &v179);
      while (sub_244BC4204(&v161))
      {
        uint64_t v27 = objc_opt_new();
        id v29 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v28, v161);
        objc_msgSend_setSystemMode_(v27, v30, (uint64_t)v29);

        uint64_t v32 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v31, BYTE1(v161));
        objc_msgSend_setNumberOfSchedules_(v27, v33, (uint64_t)v32);

        uint64_t v35 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v34, WORD1(v161));
        objc_msgSend_setScheduleTypeFeatures_(v27, v36, (uint64_t)v35);

        objc_msgSend_addObject_(v14, v37, (uint64_t)v27);
      }
LABEL_131:
      if (!DWORD2(v161) || DWORD2(v161) == 33)
      {
        BOOL v6 = v14;
        goto LABEL_17;
      }
      uint64_t v138 = v162;
      int v139 = HIDWORD(v161);
      *(_DWORD *)a3 = DWORD2(v161);
      *(_DWORD *)(a3 + 4) = v139;
      *(void *)(a3 + 8) = v138;
      *(void *)(a3 + 16) = v163;

      goto LABEL_6;
    case 78:
    case 79:
      LOBYTE(v161) = 0;
      LOBYTE(v162) = 0;
      sub_2447FFFFC(a2, (uint64_t)&v161, &v150);
      *(_OWORD *)a3 = v150;
      *(void *)(a3 + 16) = v151;
      if (*(_DWORD *)a3) {
        BOOL v12 = 1;
      }
      else {
        BOOL v12 = v162 == 0;
      }
      if (v12) {
        goto LABEL_6;
      }
      BOOL v6 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v11, v161, *((void *)&v161 + 1));
      goto LABEL_17;
    case 80:
      sub_244BC12F0((uint64_t)&v150);
      sub_24484B03C((uint64_t)&v150, a2, (uint64_t)&v161);
      *(_OWORD *)a3 = v161;
      *(void *)(a3 + 16) = v162;
      if (*(_DWORD *)a3) {
        goto LABEL_6;
      }
      char v101 = objc_opt_new();
      unsigned __int8 v179 = v159;
      if (v159) {
        char v180 = v160;
      }
      sub_244BC42AC((uint64_t)&v161, (uint64_t)&v150, &v179);
      while (2)
      {
        if (sub_244BC4338((uint64_t)&v161))
        {
          uint64_t v102 = objc_opt_new();
          unsigned int v104 = v102;
          if ((_BYTE)v162)
          {
            uint64_t v105 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v103, v161, *((void *)&v161 + 1));
            objc_msgSend_setPresetHandle_(v104, v106, (uint64_t)v105);
          }
          else
          {
            objc_msgSend_setPresetHandle_(v102, v103, 0);
          }
          uint64_t v108 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v107, v163);
          objc_msgSend_setPresetScenario_(v104, v109, (uint64_t)v108);

          if (v164[0] && sub_2446D18A4(v164)[16])
          {
            id v111 = sub_2446D18A4(v164);
            if (!v111[16]) {
              sub_24479484C();
            }
            uint64_t v112 = *(void *)v111;
            uint64_t v113 = *((void *)v111 + 1);
            id v114 = [NSString alloc];
            uint64_t v116 = objc_msgSend_initWithBytes_length_encoding_(v114, v115, v112, v113, 4);
            objc_msgSend_setName_(v104, v117, (uint64_t)v116);

            int v120 = objc_msgSend_name(v104, v118, v119);

            if (!v120)
            {
              *(_OWORD *)a3 = xmmword_26519A710;
              *(void *)(a3 + 16) = 12390;

LABEL_142:
LABEL_6:
              BOOL v6 = 0;
              goto LABEL_17;
            }
          }
          else
          {
            objc_msgSend_setName_(v104, v110, 0);
          }
          if (v166[0])
          {
            uint64_t v122 = NSNumber;
            uint64_t v123 = sub_24471C2FC(v166);
            uint64_t v125 = objc_msgSend_numberWithShort_(v122, v124, *(__int16 *)v123);
            objc_msgSend_setCoolingSetpoint_(v104, v126, (uint64_t)v125);
          }
          else
          {
            objc_msgSend_setCoolingSetpoint_(v104, v121, 0);
          }
          if (v167[0])
          {
            int v128 = NSNumber;
            int v129 = sub_24471C2FC(v167);
            uint64_t v131 = objc_msgSend_numberWithShort_(v128, v130, *(__int16 *)v129);
            objc_msgSend_setHeatingSetpoint_(v104, v132, (uint64_t)v131);
          }
          else
          {
            objc_msgSend_setHeatingSetpoint_(v104, v127, 0);
          }
          if (v167[5])
          {
            char v134 = objc_msgSend_numberWithBool_(NSNumber, v133, v167[4]);
            objc_msgSend_setBuiltIn_(v104, v135, (uint64_t)v134);
          }
          else
          {
            objc_msgSend_setBuiltIn_(v104, v133, 0);
          }
          objc_msgSend_addObject_(v101, v136, (uint64_t)v104);

          continue;
        }
        break;
      }
      if (v168[0] && v168[0] != 33)
      {
        uint64_t v141 = v169;
        int v142 = v168[1];
        *(_DWORD *)a3 = v168[0];
        *(_DWORD *)(a3 + 4) = v142;
        *(void *)(a3 + 8) = v141;
        *(void *)(a3 + 16) = v170;
        goto LABEL_142;
      }
      BOOL v6 = v101;
LABEL_17:
      return v6;
    case 81:
      uint64_t v39 = sub_244BC12F0((uint64_t)&v179);
      sub_24484B03C(v39, a2, (uint64_t)&v161);
      *(_OWORD *)a3 = v161;
      *(void *)(a3 + 16) = v162;
      if (*(_DWORD *)a3) {
        goto LABEL_6;
      }
      id v148 = objc_opt_new();
      LOBYTE(v150) = v181;
      if (v181) {
        BYTE1(v150) = v182;
      }
      sub_244BC43F8((uint64_t)&v161, (uint64_t)&v179, (unsigned __int8 *)&v150);
      int v147 = &v165;
      while (2)
      {
        if (!sub_244BC4498((uint64_t)&v161))
        {
          if (!v175 || v175 == 33)
          {
            BOOL v6 = v148;
            goto LABEL_17;
          }
          uint64_t v145 = v177;
          int v146 = v176;
          *(_DWORD *)a3 = v175;
          *(_DWORD *)(a3 + 4) = v146;
          *(void *)(a3 + 8) = v145;
          *(void *)(a3 + 16) = v178;
LABEL_146:

          goto LABEL_6;
        }
        uint64_t v40 = objc_opt_new();
        char v42 = v40;
        if ((_BYTE)v162)
        {
          uint64_t v43 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v41, v161, *((void *)&v161 + 1));
          objc_msgSend_setScheduleHandle_(v42, v44, (uint64_t)v43);
        }
        else
        {
          objc_msgSend_setScheduleHandle_(v40, v41, 0);
        }
        uint64_t v46 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v45, v163, v147);
        objc_msgSend_setSystemMode_(v42, v47, (uint64_t)v46);

        if (v164[0])
        {
          uint64_t v49 = (uint64_t *)sub_2446D18A4(v164);
          uint64_t v50 = *v49;
          uint64_t v51 = v49[1];
          id v52 = [NSString alloc];
          uint64_t v54 = objc_msgSend_initWithBytes_length_encoding_(v52, v53, v50, v51, 4);
          objc_msgSend_setName_(v42, v55, (uint64_t)v54);

          unsigned __int8 v58 = objc_msgSend_name(v42, v56, v57);

          if (!v58)
          {
            *(_OWORD *)a3 = xmmword_26519A728;
            *(void *)(a3 + 16) = 12448;
            int v140 = v42;
LABEL_144:

            goto LABEL_146;
          }
        }
        else
        {
          objc_msgSend_setName_(v42, v48, 0);
        }
        if (v165)
        {
          uint64_t v60 = (uint64_t *)sub_2446D18A4(v147);
          uint64_t v62 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v61, *v60, v60[1]);
          objc_msgSend_setPresetHandle_(v42, v63, (uint64_t)v62);
        }
        else
        {
          objc_msgSend_setPresetHandle_(v42, v59, 0);
        }
        uint64_t v64 = objc_opt_new();
        v183[0] = v171;
        int v140 = v42;
        if (v171) {
          v183[1] = v172;
        }
        sub_244BC45F0((uint64_t)&v150, (uint64_t)v168, v183);
        while (sub_244BC4678((uint64_t)&v150))
        {
          uint64_t v66 = objc_opt_new();
          long long v68 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v67, v150);
          objc_msgSend_setDayOfWeek_(v66, v69, (uint64_t)v68);

          int v71 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v70, WORD1(v150));
          objc_msgSend_setTransitionTime_(v66, v72, (uint64_t)v71);

          if (BYTE8(v150))
          {
            uint64_t v74 = (uint64_t *)sub_2446D18A4((unsigned char *)&v150 + 8);
            uint64_t v76 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v75, *v74, v74[1]);
            objc_msgSend_setPresetHandle_(v66, v77, (uint64_t)v76);
          }
          else
          {
            objc_msgSend_setPresetHandle_(v66, v73, 0);
          }
          if (v152[0])
          {
            uint64_t v79 = NSNumber;
            uint64_t v80 = sub_2446D18C8(v152);
            uint64_t v82 = objc_msgSend_numberWithUnsignedChar_(v79, v81, *v80);
            objc_msgSend_setSystemMode_(v66, v83, (uint64_t)v82);
          }
          else
          {
            objc_msgSend_setSystemMode_(v66, v78, 0);
          }
          if (v153[0])
          {
            uint64_t v85 = NSNumber;
            int v86 = sub_24471C2FC(v153);
            uint64_t v88 = objc_msgSend_numberWithShort_(v85, v87, *(__int16 *)v86);
            objc_msgSend_setCoolingSetpoint_(v66, v89, (uint64_t)v88);
          }
          else
          {
            objc_msgSend_setCoolingSetpoint_(v66, v84, 0);
          }
          if (v154[0])
          {
            unsigned __int8 v91 = NSNumber;
            uint64_t v92 = sub_24471C2FC(v154);
            uint64_t v94 = objc_msgSend_numberWithShort_(v91, v93, *(__int16 *)v92);
            objc_msgSend_setHeatingSetpoint_(v66, v95, (uint64_t)v94);
          }
          else
          {
            objc_msgSend_setHeatingSetpoint_(v66, v90, 0);
          }
          objc_msgSend_addObject_(v64, v96, (uint64_t)v66);

          int v140 = v42;
        }
        if (!v155 || v155 == 33)
        {
          objc_msgSend_setTransitions_(v140, v65, (uint64_t)v64);

          if (v174)
          {
            uint64_t v98 = objc_msgSend_numberWithBool_(NSNumber, v97, v173);
            objc_msgSend_setBuiltIn_(v42, v99, (uint64_t)v98);
          }
          else
          {
            objc_msgSend_setBuiltIn_(v140, v97, 0);
          }
          objc_msgSend_addObject_(v148, v100, (uint64_t)v42);

          continue;
        }
        break;
      }
      uint64_t v143 = v157;
      int v144 = v156;
      *(_DWORD *)a3 = v155;
      *(_DWORD *)(a3 + 4) = v144;
      *(void *)(a3 + 8) = v143;
      *(void *)(a3 + 16) = v158;

      goto LABEL_144;
    case 82:
      LOBYTE(v150) = 0;
      BYTE4(v150) = 0;
      sub_2447F4140(a2, (uint64_t)&v150, (uint64_t)&v161);
      *(_OWORD *)a3 = v161;
      *(void *)(a3 + 16) = v162;
      if (*(_DWORD *)a3) {
        BOOL v137 = 1;
      }
      else {
        BOOL v137 = BYTE4(v150) == 0;
      }
      if (v137) {
        goto LABEL_6;
      }
LABEL_129:
      BOOL v6 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v13, v150);
      goto LABEL_17;
    default:
      BOOL v6 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 12534;
      goto LABEL_17;
  }
}

void sub_244BB3694(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BB3914(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
      LOBYTE(v8) = 0;
      sub_2447F6AD4(a2, &v8, &v9);
      goto LABEL_12;
    case 1:
      LOBYTE(v8) = 0;
      sub_2447F0A54(a2, &v8, &v9);
      goto LABEL_12;
    case 2:
    case 5:
      __int16 v8 = 0;
      sub_2447F15BC(a2, (unsigned __int8 *)&v8, (uint64_t)&v9);
      *(_OWORD *)a3 = v9;
      *(void *)(a3 + 16) = v10;
      if (*(_DWORD *)a3) {
        BOOL v5 = 1;
      }
      else {
        BOOL v5 = HIBYTE(v8) == 0;
      }
      if (!v5) {
        goto LABEL_7;
      }
      goto LABEL_13;
    case 3:
    case 4:
    case 6:
      LOBYTE(v8) = 0;
      sub_244CB3E8C(a2, &v8, (uint64_t)&v9);
      goto LABEL_12;
    case 7:
    case 8:
    case 9:
    case 10:
      LOBYTE(v8) = 0;
      sub_24484B184(a2, &v8, &v9);
      goto LABEL_12;
    case 11:
      LOBYTE(v8) = 0;
      sub_2447F1DCC(a2, &v8, &v9);
LABEL_12:
      *(_OWORD *)a3 = v9;
      *(void *)(a3 + 16) = v10;
      if (*(_DWORD *)a3)
      {
LABEL_13:
        BOOL v6 = 0;
      }
      else
      {
LABEL_7:
        BOOL v6 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v4, v8);
      }
      break;
    default:
      BOOL v6 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 12686;
      break;
  }

  return v6;
}

id sub_244BB3AC8(int a1, uint64_t a2, uint64_t a3)
{
  if (a1 == 2)
  {
LABEL_4:
    unsigned __int8 v9 = 0;
    sub_2447F1DCC(a2, &v9, &v7);
    goto LABEL_7;
  }
  if (a1 != 1)
  {
    if (a1)
    {
      BOOL v5 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 12731;
      goto LABEL_11;
    }
    goto LABEL_4;
  }
  unsigned __int8 v9 = 0;
  sub_2447F0A54(a2, &v9, &v7);
LABEL_7:
  *(_OWORD *)a3 = v7;
  *(void *)(a3 + 16) = v8;
  if (*(_DWORD *)a3)
  {
    BOOL v5 = 0;
  }
  else
  {
    BOOL v5 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v4, v9);
  }
LABEL_11:

  return v5;
}

id sub_244BB3BB4(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
    case 1:
LABEL_11:
      LOBYTE(v12) = 0;
      sub_244CB3E8C(a2, &v12, (uint64_t)&v13);
      goto LABEL_12;
    case 2:
    case 3:
    case 4:
    case 7:
    case 17:
    case 18:
    case 21:
    case 22:
    case 25:
    case 26:
    case 32:
    case 33:
    case 36:
    case 37:
    case 40:
    case 41:
    case 48:
    case 49:
    case 50:
    case 51:
    case 54:
    case 55:
    case 58:
    case 59:
LABEL_8:
      LOWORD(v12) = 0;
      sub_244CB3F40(a2, &v12, (uint64_t)&v13);
LABEL_9:
      *(_OWORD *)a3 = v13;
      *(void *)(a3 + 16) = v14;
      if (*(_DWORD *)a3) {
        goto LABEL_13;
      }
LABEL_10:
      uint64_t v7 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v6, (unsigned __int16)v12);
      goto LABEL_15;
    case 5:
      LOBYTE(v12) = 0;
      sub_2447FACE4(a2, &v12, &v13);
      goto LABEL_12;
    case 6:
      long long v12 = 0uLL;
      sub_244CB41F0(a2, &v12, &v13);
      uint64_t v8 = 0;
      *(_OWORD *)a3 = v13;
      *(void *)(a3 + 16) = v14;
      if (!*(_DWORD *)a3)
      {
        uint64_t v10 = sub_244BBFB94(v12, *((uint64_t *)&v12 + 1));
        uint64_t v8 = v10;
        if (v10)
        {
          id v11 = v10;
        }
        else
        {
          *(_OWORD *)a3 = xmmword_26519A740;
          *(void *)(a3 + 16) = 12814;
        }
      }
      break;
    case 8:
      LOBYTE(v12) = 0;
      sub_2447F5F24(a2, &v12, &v13);
      goto LABEL_12;
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 20:
    case 24:
    case 28:
    case 29:
    case 30:
    case 31:
    case 35:
    case 39:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 53:
    case 57:
LABEL_26:
      uint64_t v8 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 13364;
      break;
    case 15:
      LOBYTE(v12) = 0;
      sub_24484B184(a2, &v12, &v13);
LABEL_12:
      *(_OWORD *)a3 = v13;
      *(void *)(a3 + 16) = v14;
      if (*(_DWORD *)a3) {
        goto LABEL_13;
      }
      goto LABEL_14;
    case 16:
    case 19:
    case 23:
    case 27:
    case 34:
    case 38:
    case 42:
    case 52:
    case 56:
    case 60:
      LOWORD(v12) = 0;
      sub_2447F15BC(a2, (unsigned __int8 *)&v12, (uint64_t)&v13);
      *(_OWORD *)a3 = v13;
      *(void *)(a3 + 16) = v14;
      if (*(_DWORD *)a3) {
        BOOL v5 = 1;
      }
      else {
        BOOL v5 = BYTE1(v12) == 0;
      }
      if (v5)
      {
LABEL_13:
        uint64_t v8 = 0;
      }
      else
      {
LABEL_14:
        uint64_t v7 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v4, v12);
LABEL_15:
        uint64_t v8 = (void *)v7;
      }
      break;
    default:
      switch(a1)
      {
        case 16384:
        case 16388:
        case 16389:
        case 16390:
        case 16395:
        case 16396:
        case 16397:
          goto LABEL_8;
        case 16385:
          LOBYTE(v12) = 0;
          sub_2446D1A48(a2, &v12, &v13);
          goto LABEL_12;
        case 16386:
        case 16387:
          goto LABEL_11;
        case 16394:
          LOWORD(v12) = 0;
          sub_24484B6B0(a2, &v12, &v13);
          goto LABEL_9;
        case 16400:
          LOBYTE(v12) = 0;
          BYTE2(v12) = 0;
          sub_2447EF9E0(a2, (__int16 *)&v12, (uint64_t)&v13);
          uint64_t v8 = 0;
          *(_OWORD *)a3 = v13;
          *(void *)(a3 + 16) = v14;
          if (!*(_DWORD *)a3 && BYTE2(v12)) {
            goto LABEL_10;
          }
          break;
        default:
          goto LABEL_26;
      }
      break;
  }

  return v8;
}

id sub_244BB3F98(int a1, uint64_t a2, uint64_t a3)
{
  if (a1 > 31)
  {
    switch(a1)
    {
      case '0':
        long long v19 = 0uLL;
        sub_244CB41F0(a2, &v19, &v20);
        BOOL v5 = 0;
        *(_OWORD *)a3 = v20;
        *(void *)(a3 + 16) = v21;
        if (*(_DWORD *)a3) {
          break;
        }
        uint64_t v10 = *((void *)&v19 + 1);
        uint64_t v9 = v19;
        id v11 = [NSString alloc];
        BOOL v5 = objc_msgSend_initWithBytes_length_encoding_(v11, v12, v9, v10, 4);
        if (v5) {
          goto LABEL_28;
        }
        long long v13 = &xmmword_26519A758;
        goto LABEL_31;
      case '1':
        long long v19 = 0uLL;
        sub_244CB41F0(a2, &v19, &v20);
        BOOL v5 = 0;
        *(_OWORD *)a3 = v20;
        *(void *)(a3 + 16) = v21;
        if (*(_DWORD *)a3) {
          break;
        }
        uint64_t v15 = *((void *)&v19 + 1);
        uint64_t v14 = v19;
        id v16 = [NSString alloc];
        BOOL v5 = objc_msgSend_initWithBytes_length_encoding_(v16, v17, v14, v15, 4);
        if (v5)
        {
LABEL_28:
          id v18 = v5;
        }
        else
        {
          long long v13 = &xmmword_26519A770;
LABEL_31:
          *(_OWORD *)a3 = *v13;
          *(void *)(a3 + 16) = *((void *)v13 + 2);
        }

        break;
      case '2':
      case '3':
      case '5':
        LOBYTE(v19) = 0;
        BYTE4(v19) = 0;
        sub_2447F4140(a2, (uint64_t)&v19, (uint64_t)&v20);
        BOOL v5 = 0;
        *(_OWORD *)a3 = v20;
        *(void *)(a3 + 16) = v21;
        if (*(_DWORD *)a3 || !BYTE4(v19)) {
          break;
        }
        uint64_t v7 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v6, v19);
        goto LABEL_19;
      case '4':
        goto LABEL_13;
      default:
        if (a1 == 32) {
          goto LABEL_15;
        }
        goto LABEL_29;
    }
  }
  else if (a1 <= 15)
  {
    if (a1 < 2)
    {
LABEL_15:
      LOBYTE(v19) = 0;
      sub_244CB3E8C(a2, &v19, (uint64_t)&v20);
    }
    else
    {
      if (a1 != 2)
      {
LABEL_29:
        BOOL v5 = 0;
        *(_DWORD *)a3 = 181;
        *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/zap-generated/MTRAttributeTLVValueDecoder.mm";
        *(_DWORD *)(a3 + 16) = 13560;
        goto LABEL_20;
      }
LABEL_13:
      LOBYTE(v19) = 0;
      sub_24484B184(a2, &v19, &v20);
    }
    *(_OWORD *)a3 = v20;
    *(void *)(a3 + 16) = v21;
    if (*(_DWORD *)a3)
    {
      BOOL v5 = 0;
    }
    else
    {
LABEL_18:
      uint64_t v7 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v4, v19);
LABEL_19:
      BOOL v5 = (void *)v7;
    }
  }
  else
  {
    switch(a1)
    {
      case 16:
      case 17:
        goto LABEL_15;
      case 20:
      case 21:
        LOWORD(v19) = 0;
        sub_2447F15BC(a2, (unsigned __int8 *)&v19, (uint64_t)&v20);
        BOOL v5 = 0;
        *(_OWORD *)a3 = v20;
        *(void *)(a3 + 16) = v21;
        if (!*(_DWORD *)a3 && BYTE1(v19)) {
          goto LABEL_18;
        }
        break;
      default:
        goto LABEL_29;
    }
  }
LABEL_20:

  return v5;
}

id sub_244BB42A8(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
    case 1:
    case 2:
      LOBYTE(v12) = 0;
      char v13 = 0;
      sub_2447EF9E0(a2, (__int16 *)&v12, (uint64_t)&v10);
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        BOOL v5 = 1;
      }
      else {
        BOOL v5 = v13 == 0;
      }
      if (v5) {
        goto LABEL_14;
      }
      goto LABEL_6;
    case 3:
      unsigned __int16 v12 = 0;
      sub_244CB3F40(a2, &v12, (uint64_t)&v10);
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        goto LABEL_14;
      }
LABEL_6:
      BOOL v6 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v4, v12);
      break;
    case 4:
      unsigned __int16 v12 = 0;
      sub_24482D96C(a2, (unsigned __int8 *)&v12, (uint64_t)&v10);
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        BOOL v8 = 1;
      }
      else {
        BOOL v8 = HIBYTE(v12) == 0;
      }
      if (v8)
      {
LABEL_14:
        BOOL v6 = 0;
      }
      else
      {
        BOOL v6 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v7, v12);
      }
      break;
    default:
      BOOL v6 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 13643;
      break;
  }

  return v6;
}

id sub_244BB441C(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
    case 1:
    case 2:
      LOBYTE(v11) = 0;
      char v12 = 0;
      sub_2447F003C(a2, (__int16 *)&v11, (uint64_t)&v9);
      *(_OWORD *)a3 = v9;
      *(void *)(a3 + 16) = v10;
      if (*(_DWORD *)a3) {
        BOOL v5 = 1;
      }
      else {
        BOOL v5 = v12 == 0;
      }
      if (v5) {
        goto LABEL_9;
      }
      BOOL v6 = objc_msgSend_numberWithShort_(NSNumber, v4, (__int16)v11);
      break;
    case 3:
      unsigned __int16 v11 = 0;
      sub_244CB3F40(a2, &v11, (uint64_t)&v9);
      *(_OWORD *)a3 = v9;
      *(void *)(a3 + 16) = v10;
      if (*(_DWORD *)a3)
      {
LABEL_9:
        BOOL v6 = 0;
      }
      else
      {
        BOOL v6 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v7, v11);
      }
      break;
    default:
      BOOL v6 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 13711;
      break;
  }

  return v6;
}

id sub_244BB4554(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
    case 1:
    case 2:
    case 16:
    case 17:
    case 18:
      LOBYTE(v12) = 0;
      char v13 = 0;
      sub_2447F003C(a2, (__int16 *)&v12, (uint64_t)&v10);
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        BOOL v5 = 1;
      }
      else {
        BOOL v5 = v13 == 0;
      }
      if (v5) {
        goto LABEL_11;
      }
      BOOL v6 = objc_msgSend_numberWithShort_(NSNumber, v4, (__int16)v12);
      break;
    case 3:
    case 19:
      unsigned __int16 v12 = 0;
      sub_244CB3F40(a2, &v12, (uint64_t)&v10);
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        goto LABEL_11;
      }
      BOOL v6 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v7, v12);
      break;
    case 20:
      LOBYTE(v12) = 0;
      sub_244CB3C70(a2, &v12, (uint64_t)&v10);
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3)
      {
LABEL_11:
        BOOL v6 = 0;
      }
      else
      {
        BOOL v6 = objc_msgSend_numberWithChar_(NSNumber, v8, (char)v12);
      }
      break;
    default:
      BOOL v6 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 13846;
      break;
  }

  return v6;
}

id sub_244BB4714(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
    case 1:
    case 2:
      LOBYTE(v10) = 0;
      char v11 = 0;
      sub_2447EF9E0(a2, (__int16 *)&v10, (uint64_t)&v8);
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        BOOL v5 = 1;
      }
      else {
        BOOL v5 = v11 == 0;
      }
      if (v5) {
        goto LABEL_9;
      }
      goto LABEL_6;
    case 3:
      unsigned __int16 v10 = 0;
      sub_244CB3F40(a2, &v10, (uint64_t)&v8);
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3)
      {
LABEL_9:
        BOOL v6 = 0;
      }
      else
      {
LABEL_6:
        BOOL v6 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v4, v10);
      }
      break;
    default:
      BOOL v6 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 13914;
      break;
  }

  return v6;
}

id sub_244BB4834(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
    case 1:
    case 2:
      LOBYTE(v10) = 0;
      char v11 = 0;
      sub_2447EF9E0(a2, (__int16 *)&v10, (uint64_t)&v8);
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        BOOL v5 = 1;
      }
      else {
        BOOL v5 = v11 == 0;
      }
      if (v5) {
        goto LABEL_9;
      }
      goto LABEL_6;
    case 3:
      unsigned __int16 v10 = 0;
      sub_244CB3F40(a2, &v10, (uint64_t)&v8);
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3)
      {
LABEL_9:
        BOOL v6 = 0;
      }
      else
      {
LABEL_6:
        BOOL v6 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v4, v10);
      }
      break;
    default:
      BOOL v6 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 13982;
      break;
  }

  return v6;
}

id sub_244BB4954(int a1, uint64_t a2, uint64_t a3)
{
  if (a1 > 31)
  {
    if (a1 > 47)
    {
      if (a1 != 48 && a1 != 49)
      {
        if (a1 == 50)
        {
LABEL_7:
          LOBYTE(v18) = 0;
          sub_244CB3E8C(a2, &v18, (uint64_t)&v20);
LABEL_16:
          *(_OWORD *)a3 = v20;
          *(void *)(a3 + 16) = v21;
          if (*(_DWORD *)a3) {
            goto LABEL_17;
          }
          uint64_t v7 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v4, v18);
          goto LABEL_19;
        }
LABEL_11:
        BOOL v5 = 0;
        *(_DWORD *)a3 = 181;
        *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/zap-generated/MTRAttributeTLVValueDecoder.mm";
        *(_DWORD *)(a3 + 16) = 14151;
        goto LABEL_20;
      }
    }
    else if (a1 != 32 && a1 != 33)
    {
      if (a1 == 34) {
        goto LABEL_7;
      }
      goto LABEL_11;
    }
LABEL_12:
    LOWORD(v18) = 0;
    sub_244CB3F40(a2, &v18, (uint64_t)&v20);
    *(_OWORD *)a3 = v20;
    *(void *)(a3 + 16) = v21;
    if (*(_DWORD *)a3)
    {
LABEL_17:
      BOOL v5 = 0;
      goto LABEL_20;
    }
    uint64_t v7 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v6, (unsigned __int16)v18);
LABEL_19:
    BOOL v5 = (void *)v7;
    goto LABEL_20;
  }
  switch(a1)
  {
    case 0:
    case 2:
      LOBYTE(v18) = 0;
      sub_24484B184(a2, &v18, &v20);
      goto LABEL_16;
    case 1:
      LOBYTE(v18) = 0;
      sub_2446D1A48(a2, &v18, &v20);
      goto LABEL_16;
    case 3:
    case 16:
    case 17:
      goto LABEL_12;
    case 4:
      int v18 = 0;
      unsigned __int16 v19 = 0;
      sub_24482E010(&v18, a2, (uint64_t)&v20);
      *(_OWORD *)a3 = v20;
      *(void *)(a3 + 16) = v21;
      if (*(_DWORD *)a3) {
        goto LABEL_17;
      }
      BOOL v5 = objc_opt_new();
      unsigned __int16 v10 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v9, (unsigned __int16)v18);
      objc_msgSend_setHoldTimeMin_(v5, v11, (uint64_t)v10);

      char v13 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v12, HIWORD(v18));
      objc_msgSend_setHoldTimeMax_(v5, v14, (uint64_t)v13);

      id v16 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v15, v19);
      objc_msgSend_setHoldTimeDefault_(v5, v17, (uint64_t)v16);

      break;
    case 18:
      goto LABEL_7;
    default:
      goto LABEL_11;
  }
LABEL_20:

  return v5;
}

void sub_244BB4BC8(_Unwind_Exception *a1)
{
  char v3 = v1;

  _Unwind_Resume(a1);
}

id sub_244BB4C40(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 5:
      LOBYTE(v14) = 0;
      char v15 = 0;
      sub_24482E57C(a2, (uint64_t)&v14, &v12);
      HIDWORD(v6) = DWORD1(v12);
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        BOOL v7 = 1;
      }
      else {
        BOOL v7 = v15 == 0;
      }
      if (v7) {
        goto LABEL_16;
      }
      goto LABEL_6;
    case 4:
    case 6:
      unsigned int v14 = 0;
      sub_244CB3FB0(a2, &v14, (uint64_t)&v12);
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        goto LABEL_16;
      }
      long long v8 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v9, v14);
      break;
    case 7:
      unsigned int v14 = 0;
      sub_244CB401C(a2, &v14, (uint64_t)&v12);
      HIDWORD(v6) = DWORD1(v12);
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        goto LABEL_16;
      }
LABEL_6:
      LODWORD(v6) = v14;
      long long v8 = objc_msgSend_numberWithFloat_(NSNumber, v4, v5, v6);
      break;
    case 8:
      LOBYTE(v14) = 0;
      sub_2447FCDD8(a2, &v14, &v12);
      goto LABEL_15;
    case 9:
      LOBYTE(v14) = 0;
      sub_2447F5F24(a2, &v14, &v12);
      goto LABEL_15;
    case 10:
      LOBYTE(v14) = 0;
      sub_2447FACE4(a2, &v14, &v12);
LABEL_15:
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3)
      {
LABEL_16:
        long long v8 = 0;
      }
      else
      {
        long long v8 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v10, v14);
      }
      break;
    default:
      long long v8 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 14304;
      break;
  }

  return v8;
}

id sub_244BB4E38(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 5:
      LOBYTE(v14) = 0;
      char v15 = 0;
      sub_24482E57C(a2, (uint64_t)&v14, &v12);
      HIDWORD(v6) = DWORD1(v12);
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        BOOL v7 = 1;
      }
      else {
        BOOL v7 = v15 == 0;
      }
      if (v7) {
        goto LABEL_16;
      }
      goto LABEL_6;
    case 4:
    case 6:
      unsigned int v14 = 0;
      sub_244CB3FB0(a2, &v14, (uint64_t)&v12);
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        goto LABEL_16;
      }
      long long v8 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v9, v14);
      break;
    case 7:
      unsigned int v14 = 0;
      sub_244CB401C(a2, &v14, (uint64_t)&v12);
      HIDWORD(v6) = DWORD1(v12);
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        goto LABEL_16;
      }
LABEL_6:
      LODWORD(v6) = v14;
      long long v8 = objc_msgSend_numberWithFloat_(NSNumber, v4, v5, v6);
      break;
    case 8:
      LOBYTE(v14) = 0;
      sub_2447FCDD8(a2, &v14, &v12);
      goto LABEL_15;
    case 9:
      LOBYTE(v14) = 0;
      sub_2447F5F24(a2, &v14, &v12);
      goto LABEL_15;
    case 10:
      LOBYTE(v14) = 0;
      sub_2447FACE4(a2, &v14, &v12);
LABEL_15:
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3)
      {
LABEL_16:
        long long v8 = 0;
      }
      else
      {
        long long v8 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v10, v14);
      }
      break;
    default:
      long long v8 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 14457;
      break;
  }

  return v8;
}

id sub_244BB5030(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 5:
      LOBYTE(v14) = 0;
      char v15 = 0;
      sub_24482E57C(a2, (uint64_t)&v14, &v12);
      HIDWORD(v6) = DWORD1(v12);
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        BOOL v7 = 1;
      }
      else {
        BOOL v7 = v15 == 0;
      }
      if (v7) {
        goto LABEL_16;
      }
      goto LABEL_6;
    case 4:
    case 6:
      unsigned int v14 = 0;
      sub_244CB3FB0(a2, &v14, (uint64_t)&v12);
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        goto LABEL_16;
      }
      long long v8 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v9, v14);
      break;
    case 7:
      unsigned int v14 = 0;
      sub_244CB401C(a2, &v14, (uint64_t)&v12);
      HIDWORD(v6) = DWORD1(v12);
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        goto LABEL_16;
      }
LABEL_6:
      LODWORD(v6) = v14;
      long long v8 = objc_msgSend_numberWithFloat_(NSNumber, v4, v5, v6);
      break;
    case 8:
      LOBYTE(v14) = 0;
      sub_2447FCDD8(a2, &v14, &v12);
      goto LABEL_15;
    case 9:
      LOBYTE(v14) = 0;
      sub_2447F5F24(a2, &v14, &v12);
      goto LABEL_15;
    case 10:
      LOBYTE(v14) = 0;
      sub_2447FACE4(a2, &v14, &v12);
LABEL_15:
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3)
      {
LABEL_16:
        long long v8 = 0;
      }
      else
      {
        long long v8 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v10, v14);
      }
      break;
    default:
      long long v8 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 14610;
      break;
  }

  return v8;
}

id sub_244BB5228(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 5:
      LOBYTE(v14) = 0;
      char v15 = 0;
      sub_24482E57C(a2, (uint64_t)&v14, &v12);
      HIDWORD(v6) = DWORD1(v12);
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        BOOL v7 = 1;
      }
      else {
        BOOL v7 = v15 == 0;
      }
      if (v7) {
        goto LABEL_16;
      }
      goto LABEL_6;
    case 4:
    case 6:
      unsigned int v14 = 0;
      sub_244CB3FB0(a2, &v14, (uint64_t)&v12);
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        goto LABEL_16;
      }
      long long v8 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v9, v14);
      break;
    case 7:
      unsigned int v14 = 0;
      sub_244CB401C(a2, &v14, (uint64_t)&v12);
      HIDWORD(v6) = DWORD1(v12);
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        goto LABEL_16;
      }
LABEL_6:
      LODWORD(v6) = v14;
      long long v8 = objc_msgSend_numberWithFloat_(NSNumber, v4, v5, v6);
      break;
    case 8:
      LOBYTE(v14) = 0;
      sub_2447FCDD8(a2, &v14, &v12);
      goto LABEL_15;
    case 9:
      LOBYTE(v14) = 0;
      sub_2447F5F24(a2, &v14, &v12);
      goto LABEL_15;
    case 10:
      LOBYTE(v14) = 0;
      sub_2447FACE4(a2, &v14, &v12);
LABEL_15:
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3)
      {
LABEL_16:
        long long v8 = 0;
      }
      else
      {
        long long v8 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v10, v14);
      }
      break;
    default:
      long long v8 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 14763;
      break;
  }

  return v8;
}

id sub_244BB5420(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 5:
      LOBYTE(v14) = 0;
      char v15 = 0;
      sub_24482E57C(a2, (uint64_t)&v14, &v12);
      HIDWORD(v6) = DWORD1(v12);
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        BOOL v7 = 1;
      }
      else {
        BOOL v7 = v15 == 0;
      }
      if (v7) {
        goto LABEL_16;
      }
      goto LABEL_6;
    case 4:
    case 6:
      unsigned int v14 = 0;
      sub_244CB3FB0(a2, &v14, (uint64_t)&v12);
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        goto LABEL_16;
      }
      long long v8 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v9, v14);
      break;
    case 7:
      unsigned int v14 = 0;
      sub_244CB401C(a2, &v14, (uint64_t)&v12);
      HIDWORD(v6) = DWORD1(v12);
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        goto LABEL_16;
      }
LABEL_6:
      LODWORD(v6) = v14;
      long long v8 = objc_msgSend_numberWithFloat_(NSNumber, v4, v5, v6);
      break;
    case 8:
      LOBYTE(v14) = 0;
      sub_2447FCDD8(a2, &v14, &v12);
      goto LABEL_15;
    case 9:
      LOBYTE(v14) = 0;
      sub_2447F5F24(a2, &v14, &v12);
      goto LABEL_15;
    case 10:
      LOBYTE(v14) = 0;
      sub_2447FACE4(a2, &v14, &v12);
LABEL_15:
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3)
      {
LABEL_16:
        long long v8 = 0;
      }
      else
      {
        long long v8 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v10, v14);
      }
      break;
    default:
      long long v8 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 14916;
      break;
  }

  return v8;
}

id sub_244BB5618(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 5:
      LOBYTE(v14) = 0;
      char v15 = 0;
      sub_24482E57C(a2, (uint64_t)&v14, &v12);
      HIDWORD(v6) = DWORD1(v12);
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        BOOL v7 = 1;
      }
      else {
        BOOL v7 = v15 == 0;
      }
      if (v7) {
        goto LABEL_16;
      }
      goto LABEL_6;
    case 4:
    case 6:
      unsigned int v14 = 0;
      sub_244CB3FB0(a2, &v14, (uint64_t)&v12);
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        goto LABEL_16;
      }
      long long v8 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v9, v14);
      break;
    case 7:
      unsigned int v14 = 0;
      sub_244CB401C(a2, &v14, (uint64_t)&v12);
      HIDWORD(v6) = DWORD1(v12);
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        goto LABEL_16;
      }
LABEL_6:
      LODWORD(v6) = v14;
      long long v8 = objc_msgSend_numberWithFloat_(NSNumber, v4, v5, v6);
      break;
    case 8:
      LOBYTE(v14) = 0;
      sub_2447FCDD8(a2, &v14, &v12);
      goto LABEL_15;
    case 9:
      LOBYTE(v14) = 0;
      sub_2447F5F24(a2, &v14, &v12);
      goto LABEL_15;
    case 10:
      LOBYTE(v14) = 0;
      sub_2447FACE4(a2, &v14, &v12);
LABEL_15:
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3)
      {
LABEL_16:
        long long v8 = 0;
      }
      else
      {
        long long v8 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v10, v14);
      }
      break;
    default:
      long long v8 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 15069;
      break;
  }

  return v8;
}

id sub_244BB5810(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 5:
      LOBYTE(v14) = 0;
      char v15 = 0;
      sub_24482E57C(a2, (uint64_t)&v14, &v12);
      HIDWORD(v6) = DWORD1(v12);
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        BOOL v7 = 1;
      }
      else {
        BOOL v7 = v15 == 0;
      }
      if (v7) {
        goto LABEL_16;
      }
      goto LABEL_6;
    case 4:
    case 6:
      unsigned int v14 = 0;
      sub_244CB3FB0(a2, &v14, (uint64_t)&v12);
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        goto LABEL_16;
      }
      long long v8 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v9, v14);
      break;
    case 7:
      unsigned int v14 = 0;
      sub_244CB401C(a2, &v14, (uint64_t)&v12);
      HIDWORD(v6) = DWORD1(v12);
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        goto LABEL_16;
      }
LABEL_6:
      LODWORD(v6) = v14;
      long long v8 = objc_msgSend_numberWithFloat_(NSNumber, v4, v5, v6);
      break;
    case 8:
      LOBYTE(v14) = 0;
      sub_2447FCDD8(a2, &v14, &v12);
      goto LABEL_15;
    case 9:
      LOBYTE(v14) = 0;
      sub_2447F5F24(a2, &v14, &v12);
      goto LABEL_15;
    case 10:
      LOBYTE(v14) = 0;
      sub_2447FACE4(a2, &v14, &v12);
LABEL_15:
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3)
      {
LABEL_16:
        long long v8 = 0;
      }
      else
      {
        long long v8 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v10, v14);
      }
      break;
    default:
      long long v8 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 15222;
      break;
  }

  return v8;
}

id sub_244BB5A08(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 5:
      LOBYTE(v14) = 0;
      char v15 = 0;
      sub_24482E57C(a2, (uint64_t)&v14, &v12);
      HIDWORD(v6) = DWORD1(v12);
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        BOOL v7 = 1;
      }
      else {
        BOOL v7 = v15 == 0;
      }
      if (v7) {
        goto LABEL_16;
      }
      goto LABEL_6;
    case 4:
    case 6:
      unsigned int v14 = 0;
      sub_244CB3FB0(a2, &v14, (uint64_t)&v12);
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        goto LABEL_16;
      }
      long long v8 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v9, v14);
      break;
    case 7:
      unsigned int v14 = 0;
      sub_244CB401C(a2, &v14, (uint64_t)&v12);
      HIDWORD(v6) = DWORD1(v12);
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        goto LABEL_16;
      }
LABEL_6:
      LODWORD(v6) = v14;
      long long v8 = objc_msgSend_numberWithFloat_(NSNumber, v4, v5, v6);
      break;
    case 8:
      LOBYTE(v14) = 0;
      sub_2447FCDD8(a2, &v14, &v12);
      goto LABEL_15;
    case 9:
      LOBYTE(v14) = 0;
      sub_2447F5F24(a2, &v14, &v12);
      goto LABEL_15;
    case 10:
      LOBYTE(v14) = 0;
      sub_2447FACE4(a2, &v14, &v12);
LABEL_15:
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3)
      {
LABEL_16:
        long long v8 = 0;
      }
      else
      {
        long long v8 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v10, v14);
      }
      break;
    default:
      long long v8 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 15375;
      break;
  }

  return v8;
}

id sub_244BB5C00(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 5:
      LOBYTE(v14) = 0;
      char v15 = 0;
      sub_24482E57C(a2, (uint64_t)&v14, &v12);
      HIDWORD(v6) = DWORD1(v12);
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        BOOL v7 = 1;
      }
      else {
        BOOL v7 = v15 == 0;
      }
      if (v7) {
        goto LABEL_16;
      }
      goto LABEL_6;
    case 4:
    case 6:
      unsigned int v14 = 0;
      sub_244CB3FB0(a2, &v14, (uint64_t)&v12);
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        goto LABEL_16;
      }
      long long v8 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v9, v14);
      break;
    case 7:
      unsigned int v14 = 0;
      sub_244CB401C(a2, &v14, (uint64_t)&v12);
      HIDWORD(v6) = DWORD1(v12);
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        goto LABEL_16;
      }
LABEL_6:
      LODWORD(v6) = v14;
      long long v8 = objc_msgSend_numberWithFloat_(NSNumber, v4, v5, v6);
      break;
    case 8:
      LOBYTE(v14) = 0;
      sub_2447FCDD8(a2, &v14, &v12);
      goto LABEL_15;
    case 9:
      LOBYTE(v14) = 0;
      sub_2447F5F24(a2, &v14, &v12);
      goto LABEL_15;
    case 10:
      LOBYTE(v14) = 0;
      sub_2447FACE4(a2, &v14, &v12);
LABEL_15:
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3)
      {
LABEL_16:
        long long v8 = 0;
      }
      else
      {
        long long v8 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v10, v14);
      }
      break;
    default:
      long long v8 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 15528;
      break;
  }

  return v8;
}

id sub_244BB5DF8(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 5:
      LOBYTE(v14) = 0;
      char v15 = 0;
      sub_24482E57C(a2, (uint64_t)&v14, &v12);
      HIDWORD(v6) = DWORD1(v12);
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        BOOL v7 = 1;
      }
      else {
        BOOL v7 = v15 == 0;
      }
      if (v7) {
        goto LABEL_16;
      }
      goto LABEL_6;
    case 4:
    case 6:
      unsigned int v14 = 0;
      sub_244CB3FB0(a2, &v14, (uint64_t)&v12);
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        goto LABEL_16;
      }
      long long v8 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v9, v14);
      break;
    case 7:
      unsigned int v14 = 0;
      sub_244CB401C(a2, &v14, (uint64_t)&v12);
      HIDWORD(v6) = DWORD1(v12);
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        goto LABEL_16;
      }
LABEL_6:
      LODWORD(v6) = v14;
      long long v8 = objc_msgSend_numberWithFloat_(NSNumber, v4, v5, v6);
      break;
    case 8:
      LOBYTE(v14) = 0;
      sub_2447FCDD8(a2, &v14, &v12);
      goto LABEL_15;
    case 9:
      LOBYTE(v14) = 0;
      sub_2447F5F24(a2, &v14, &v12);
      goto LABEL_15;
    case 10:
      LOBYTE(v14) = 0;
      sub_2447FACE4(a2, &v14, &v12);
LABEL_15:
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3)
      {
LABEL_16:
        long long v8 = 0;
      }
      else
      {
        long long v8 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v10, v14);
      }
      break;
    default:
      long long v8 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 15681;
      break;
  }

  return v8;
}

id sub_244BB5FF0(int a1, uint64_t a2, uint64_t a3)
{
  if (a1 == 1)
  {
    LOBYTE(v9) = 0;
    BYTE8(v9) = 0;
    sub_2447F5E48(a2, (uint64_t)&v9, (uint64_t)&v11);
    *(_OWORD *)a3 = v11;
    *(void *)(a3 + 16) = v12;
    if (*(_DWORD *)a3) {
      BOOL v7 = 1;
    }
    else {
      BOOL v7 = BYTE8(v9) == 0;
    }
    if (v7)
    {
      uint64_t v5 = 0;
    }
    else
    {
      uint64_t v5 = objc_msgSend_numberWithUnsignedLongLong_(NSNumber, v6, v9);
    }
  }
  else if (a1)
  {
    uint64_t v5 = 0;
    *(_DWORD *)a3 = 181;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "zap-generated/MTRAttributeTLVValueDecoder.mm";
    *(_DWORD *)(a3 + 16) = 15723;
  }
  else
  {
    LOBYTE(v11) = 0;
    LOBYTE(v12) = 0;
    sub_2447FFFFC(a2, (uint64_t)&v11, &v9);
    uint64_t v5 = 0;
    *(_OWORD *)a3 = v9;
    *(void *)(a3 + 16) = v10;
    if (!*(_DWORD *)a3 && (_BYTE)v12)
    {
      uint64_t v5 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v4, v11, *((void *)&v11 + 1));
    }
  }

  return v5;
}

id sub_244BB6108(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
      long long v21 = 0uLL;
      sub_244CB41F0(a2, &v21, &v19);
      long long v8 = 0;
      *(_OWORD *)a3 = v19;
      *(void *)(a3 + 16) = v20;
      if (!*(_DWORD *)a3)
      {
        uint64_t v10 = *((void *)&v21 + 1);
        uint64_t v9 = v21;
        id v11 = [NSString alloc];
        uint64_t v13 = objc_msgSend_initWithBytes_length_encoding_(v11, v12, v9, v10, 4);
        long long v8 = v13;
        if (v13)
        {
          id v14 = v13;
        }
        else
        {
          *(_OWORD *)a3 = xmmword_26519A788;
          *(void *)(a3 + 16) = 15740;
        }
      }
      goto LABEL_22;
    case 1:
      long long v21 = 0uLL;
      if (sub_244CB3B68(a2) == 16)
      {
        sub_244CB40C8(a2, &v21, &v19);
      }
      else
      {
        LODWORD(v19) = 43;
        *((void *)&v19 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
        LODWORD(v20) = 80;
      }
      *(_OWORD *)a3 = v19;
      *(void *)(a3 + 16) = v20;
      if (*(_DWORD *)a3) {
        goto LABEL_19;
      }
      uint64_t v7 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v15, v21, *((void *)&v21 + 1));
      goto LABEL_21;
    case 2:
      LOWORD(v21) = 0;
      sub_244CB3F40(a2, &v21, (uint64_t)&v19);
      *(_OWORD *)a3 = v19;
      *(void *)(a3 + 16) = v20;
      if (*(_DWORD *)a3) {
        goto LABEL_19;
      }
      uint64_t v7 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v16, (unsigned __int16)v21);
      goto LABEL_21;
    case 3:
      LOBYTE(v21) = 0;
      sub_244CB3C0C(a2, (char *)&v21, (uint64_t)&v19);
      *(_OWORD *)a3 = v19;
      *(void *)(a3 + 16) = v20;
      if (*(_DWORD *)a3) {
        goto LABEL_19;
      }
      uint64_t v7 = objc_msgSend_numberWithBool_(NSNumber, v17, v21);
      goto LABEL_21;
    case 4:
    case 5:
      LOBYTE(v21) = 0;
      BYTE8(v21) = 0;
      sub_2447F5E48(a2, (uint64_t)&v21, (uint64_t)&v19);
      *(_OWORD *)a3 = v19;
      *(void *)(a3 + 16) = v20;
      if (*(_DWORD *)a3) {
        BOOL v6 = 1;
      }
      else {
        BOOL v6 = BYTE8(v21) == 0;
      }
      if (v6)
      {
LABEL_19:
        long long v8 = 0;
      }
      else
      {
        uint64_t v7 = objc_msgSend_numberWithUnsignedLongLong_(NSNumber, v5, v21);
LABEL_21:
        long long v8 = (void *)v7;
      }
LABEL_22:
      return v8;
    default:
      long long v8 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 15814;
      goto LABEL_22;
  }
}

id sub_244BB6390(int a1, uint64_t a2, uint64_t a3)
{
  if (a1 == 2)
  {
    LOBYTE(v41) = 0;
    sub_244CB3E8C(a2, &v41, (uint64_t)&v32);
    *(_OWORD *)a3 = v32;
    *(void *)(a3 + 16) = v33;
    if (!*(_DWORD *)a3)
    {
      uint64_t v7 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v8, v41);
      goto LABEL_9;
    }
LABEL_23:
    BOOL v6 = 0;
  }
  else if (a1 == 1)
  {
    sub_244CB3988((uint64_t)&v41);
    unsigned __int8 v43 = 0;
    sub_244CB39B8((uint64_t)&v41, 0, 0);
    sub_24484B03C((uint64_t)&v41, a2, (uint64_t)&v32);
    BOOL v6 = 0;
    *(_OWORD *)a3 = v32;
    *(void *)(a3 + 16) = v33;
    if (!*(_DWORD *)a3)
    {
      BOOL v6 = objc_opt_new();
      v45[0] = v43;
      if (v43) {
        v45[1] = v44;
      }
      sub_244BC4734((uint64_t)&v32, (uint64_t)&v41, v45);
      while (sub_244BC47B4((uint64_t)&v32))
      {
        uint64_t v9 = objc_opt_new();
        id v11 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v10, v32, *((void *)&v32 + 1));
        objc_msgSend_setExtendedPanID_(v9, v12, (uint64_t)v11);

        uint64_t v13 = v33;
        uint64_t v14 = v34;
        id v15 = [NSString alloc];
        uint64_t v17 = objc_msgSend_initWithBytes_length_encoding_(v15, v16, v13, v14, 4);
        objc_msgSend_setNetworkName_(v9, v18, (uint64_t)v17);

        long long v21 = objc_msgSend_networkName(v9, v19, v20);

        if (!v21)
        {
          *(_OWORD *)a3 = xmmword_26519A7A0;
          *(void *)(a3 + 16) = 15854;

          goto LABEL_22;
        }
        uint64_t v23 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v22, v35);
        objc_msgSend_setChannel_(v9, v24, (uint64_t)v23);

        int v26 = objc_msgSend_numberWithUnsignedLongLong_(NSNumber, v25, v36);
        objc_msgSend_setActiveTimestamp_(v9, v27, (uint64_t)v26);

        objc_msgSend_addObject_(v6, v28, (uint64_t)v9);
      }
      if (v37 && v37 != 33)
      {
        uint64_t v29 = v39;
        int v30 = v38;
        *(_DWORD *)a3 = v37;
        *(_DWORD *)(a3 + 4) = v30;
        *(void *)(a3 + 8) = v29;
        *(void *)(a3 + 16) = v40;
LABEL_22:

        goto LABEL_23;
      }
    }
  }
  else if (a1)
  {
    BOOL v6 = 0;
    *(_DWORD *)a3 = 181;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "zap-generated/MTRAttributeTLVValueDecoder.mm";
    *(_DWORD *)(a3 + 16) = 15887;
  }
  else
  {
    LOBYTE(v32) = 0;
    LOBYTE(v33) = 0;
    sub_2447FFFFC(a2, (uint64_t)&v32, &v41);
    BOOL v6 = 0;
    *(_OWORD *)a3 = v41;
    *(void *)(a3 + 16) = v42;
    if (!*(_DWORD *)a3 && (_BYTE)v33)
    {
      uint64_t v7 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v5, v32, *((void *)&v32 + 1));
LABEL_9:
      BOOL v6 = (void *)v7;
    }
  }

  return v6;
}

void sub_244BB66A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BB66DC(int a1, uint64_t a2, uint64_t a3)
{
  if (a1 == 1)
  {
    long long v16 = 0uLL;
    if (sub_244CB3B68(a2) == 16)
    {
      sub_244CB40C8(a2, &v16, &v14);
    }
    else
    {
      LODWORD(v14) = 43;
      *((void *)&v14 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
      LODWORD(v15) = 80;
    }
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 16) = v15;
    if (*(_DWORD *)a3)
    {
      uint64_t v5 = 0;
    }
    else
    {
      uint64_t v5 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v12, v16, *((void *)&v16 + 1));
    }
  }
  else if (a1)
  {
    uint64_t v5 = 0;
    *(_DWORD *)a3 = 181;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "zap-generated/MTRAttributeTLVValueDecoder.mm";
    *(_DWORD *)(a3 + 16) = 15926;
  }
  else
  {
    long long v16 = 0uLL;
    sub_244CB41F0(a2, &v16, &v14);
    uint64_t v5 = 0;
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 16) = v15;
    if (!*(_DWORD *)a3)
    {
      uint64_t v7 = *((void *)&v16 + 1);
      uint64_t v6 = v16;
      id v8 = [NSString alloc];
      uint64_t v10 = objc_msgSend_initWithBytes_length_encoding_(v8, v9, v6, v7, 4);
      uint64_t v5 = v10;
      if (v10)
      {
        id v11 = v10;
      }
      else
      {
        *(_OWORD *)a3 = xmmword_26519A7B8;
        *(void *)(a3 + 16) = 15904;
      }
    }
  }

  return v5;
}

id sub_244BB6850(int a1, uint64_t a2, uint64_t a3)
{
  if (a1 == 2)
  {
    LOBYTE(v141) = 0;
    LOBYTE(v149) = 0;
    sub_244833190(a2, (uint64_t)&v141, &v153);
    *(_OWORD *)a3 = v153;
    *(void *)(a3 + 16) = v154;
    if (!*(_DWORD *)a3)
    {
      if ((_BYTE)v149)
      {
        id v65 = (id)objc_opt_new();
        if (!(_BYTE)v149) {
          goto LABEL_89;
        }
        uint64_t v83 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v82, (unsigned __int16)v141);
        objc_msgSend_setMajorNumber_(v65, v84, (uint64_t)v83);

        if (!(_BYTE)v149) {
          goto LABEL_89;
        }
        int v86 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v85, WORD1(v141));
        objc_msgSend_setMinorNumber_(v65, v87, (uint64_t)v86);

        if (!(_BYTE)v149) {
          goto LABEL_89;
        }
        if (BYTE8(v141))
        {
          char v89 = (uint64_t *)sub_24479DC08((unsigned char *)&v141 + 8);
          uint64_t v90 = *v89;
          uint64_t v91 = v89[1];
          id v92 = [NSString alloc];
          uint64_t v94 = objc_msgSend_initWithBytes_length_encoding_(v92, v93, v90, v91, 4);
          objc_msgSend_setName_(v65, v95, (uint64_t)v94);

          uint64_t v6 = objc_msgSend_name(v65, v96, v97);

          if (!v6)
          {
            char v81 = &xmmword_26519A878;
            goto LABEL_74;
          }
        }
        else
        {
          objc_msgSend_setName_(v65, v88, 0);
        }
        if (!(_BYTE)v149) {
          goto LABEL_89;
        }
        if (v143[0])
        {
          char v101 = (uint64_t *)sub_24479DC08(v143);
          uint64_t v102 = *v101;
          uint64_t v103 = v101[1];
          id v104 = [NSString alloc];
          uint64_t v106 = objc_msgSend_initWithBytes_length_encoding_(v104, v105, v102, v103, 4);
          objc_msgSend_setCallSign_(v65, v107, (uint64_t)v106);

          uint64_t v6 = objc_msgSend_callSign(v65, v108, v109);

          if (!v6)
          {
            char v81 = &xmmword_26519A890;
            goto LABEL_74;
          }
        }
        else
        {
          objc_msgSend_setCallSign_(v65, v98, 0);
        }
        if (!(_BYTE)v149) {
          goto LABEL_89;
        }
        if (v145[0])
        {
          uint64_t v112 = (uint64_t *)sub_24479DC08(v145);
          uint64_t v113 = *v112;
          uint64_t v114 = v112[1];
          id v115 = [NSString alloc];
          unsigned __int8 v117 = objc_msgSend_initWithBytes_length_encoding_(v115, v116, v113, v114, 4);
          objc_msgSend_setAffiliateCallSign_(v65, v118, (uint64_t)v117);

          uint64_t v6 = objc_msgSend_affiliateCallSign(v65, v119, v120);

          if (!v6)
          {
            char v81 = &xmmword_26519A8A8;
            goto LABEL_74;
          }
        }
        else
        {
          objc_msgSend_setAffiliateCallSign_(v65, v110, 0);
        }
        if (!(_BYTE)v149) {
          goto LABEL_89;
        }
        if (v147[0])
        {
          int v128 = (uint64_t *)sub_24479DC08(v147);
          int v129 = sub_244BBFB94(*v128, v128[1]);
          objc_msgSend_setIdentifier_(v65, v130, (uint64_t)v129);

          uint64_t v6 = objc_msgSend_identifier(v65, v131, v132);

          if (!v6)
          {
            char v81 = &xmmword_26519A8C0;
            goto LABEL_74;
          }
        }
        else
        {
          objc_msgSend_setIdentifier_(v65, v121, 0);
        }
        if (!(_BYTE)v149) {
LABEL_89:
        }
          sub_24479484C();
        if (!v148[0])
        {
          objc_msgSend_setType_(v65, v133, 0);
          goto LABEL_83;
        }
        uint64_t v136 = NSNumber;
        BOOL v137 = sub_24479DC2C(v148);
        char v134 = objc_msgSend_numberWithUnsignedChar_(v136, v138, *v137);
        objc_msgSend_setType_(v65, v139, (uint64_t)v134);
        goto LABEL_82;
      }
LABEL_46:
      id v65 = 0;
LABEL_83:
      id v65 = v65;
      uint64_t v6 = v65;
      goto LABEL_84;
    }
LABEL_63:
    uint64_t v6 = 0;
    goto LABEL_85;
  }
  if (a1 == 1)
  {
    LOBYTE(v141) = 0;
    char v146 = 0;
    sub_2448330F0(a2, (uint64_t)&v141, &v153);
    *(_OWORD *)a3 = v153;
    *(void *)(a3 + 16) = v154;
    if (!*(_DWORD *)a3)
    {
      if (v146)
      {
        id v65 = (id)objc_opt_new();
        if (!v146) {
          goto LABEL_90;
        }
        uint64_t v67 = *((void *)&v141 + 1);
        uint64_t v66 = v141;
        id v68 = [NSString alloc];
        unsigned __int8 v70 = objc_msgSend_initWithBytes_length_encoding_(v68, v69, v66, v67, 4);
        objc_msgSend_setOperatorName_(v65, v71, (uint64_t)v70);

        uint64_t v6 = objc_msgSend_operatorName(v65, v72, v73);

        if (!v6)
        {
          char v81 = &xmmword_26519A830;
          goto LABEL_74;
        }
        if (!v146) {
          goto LABEL_90;
        }
        if ((_BYTE)v142)
        {
          unsigned __int8 v75 = (uint64_t *)sub_24479DC08(&v142);
          uint64_t v76 = sub_244BBFB94(*v75, v75[1]);
          objc_msgSend_setLineupName_(v65, v77, (uint64_t)v76);

          uint64_t v6 = objc_msgSend_lineupName(v65, v78, v79);

          if (!v6)
          {
            char v81 = &xmmword_26519A848;
LABEL_74:
            *(_OWORD *)a3 = *v81;
            *(void *)(a3 + 16) = *((void *)v81 + 2);
LABEL_84:

            goto LABEL_85;
          }
        }
        else
        {
          objc_msgSend_setLineupName_(v65, v74, 0);
        }
        if (!v146) {
          goto LABEL_90;
        }
        if (v144[0])
        {
          uint64_t v122 = (uint64_t *)sub_24479DC08(v144);
          uint64_t v123 = sub_244BBFB94(*v122, v122[1]);
          objc_msgSend_setPostalCode_(v65, v124, (uint64_t)v123);

          uint64_t v6 = objc_msgSend_postalCode(v65, v125, v126);

          if (!v6)
          {
            char v81 = &xmmword_26519A860;
            goto LABEL_74;
          }
        }
        else
        {
          objc_msgSend_setPostalCode_(v65, v80, 0);
        }
        if (!v146) {
LABEL_90:
        }
          sub_24479484C();
        char v134 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v127, v145[8]);
        objc_msgSend_setLineupInfoType_(v65, v135, (uint64_t)v134);
LABEL_82:

        goto LABEL_83;
      }
      goto LABEL_46;
    }
    goto LABEL_63;
  }
  if (a1)
  {
    uint64_t v6 = 0;
    *(_DWORD *)a3 = 181;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "zap-generated/MTRAttributeTLVValueDecoder.mm";
    *(_DWORD *)(a3 + 16) = 16115;
    goto LABEL_85;
  }
  sub_244CB3988((uint64_t)&v153);
  unsigned __int8 v155 = 0;
  sub_244CB39B8(v5, 0, 0);
  sub_24484B03C((uint64_t)&v153, a2, (uint64_t)&v141);
  *(_OWORD *)a3 = v141;
  *(void *)(a3 + 16) = v142;
  if (*(_DWORD *)a3) {
    goto LABEL_63;
  }
  uint64_t v6 = objc_opt_new();
  v157[0] = v155;
  if (v155) {
    v157[1] = v156;
  }
  sub_244BC4864((uint64_t)&v141, (uint64_t)&v153, v157);
  while (sub_244BC48EC((uint64_t)&v141))
  {
    uint64_t v7 = objc_opt_new();
    uint64_t v9 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v8, (unsigned __int16)v141);
    objc_msgSend_setMajorNumber_(v7, v10, (uint64_t)v9);

    uint64_t v12 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v11, WORD1(v141));
    objc_msgSend_setMinorNumber_(v7, v13, (uint64_t)v12);

    if (BYTE8(v141))
    {
      uint64_t v15 = (uint64_t *)sub_2446D18A4((unsigned char *)&v141 + 8);
      uint64_t v16 = *v15;
      uint64_t v17 = v15[1];
      id v18 = [NSString alloc];
      uint64_t v20 = objc_msgSend_initWithBytes_length_encoding_(v18, v19, v16, v17, 4);
      objc_msgSend_setName_(v7, v21, (uint64_t)v20);

      uint64_t v24 = objc_msgSend_name(v7, v22, v23);

      if (!v24)
      {
        id v111 = &xmmword_26519A7D0;
        goto LABEL_61;
      }
    }
    else
    {
      objc_msgSend_setName_(v7, v14, 0);
    }
    if (v143[0])
    {
      int v26 = (uint64_t *)sub_2446D18A4(v143);
      uint64_t v27 = *v26;
      uint64_t v28 = v26[1];
      id v29 = [NSString alloc];
      int v31 = objc_msgSend_initWithBytes_length_encoding_(v29, v30, v27, v28, 4);
      objc_msgSend_setCallSign_(v7, v32, (uint64_t)v31);

      unsigned __int16 v35 = objc_msgSend_callSign(v7, v33, v34);

      if (!v35)
      {
        id v111 = &xmmword_26519A7E8;
        goto LABEL_61;
      }
    }
    else
    {
      objc_msgSend_setCallSign_(v7, v25, 0);
    }
    if (v145[0])
    {
      int v37 = (uint64_t *)sub_2446D18A4(v145);
      uint64_t v38 = *v37;
      uint64_t v39 = v37[1];
      id v40 = [NSString alloc];
      uint64_t v42 = objc_msgSend_initWithBytes_length_encoding_(v40, v41, v38, v39, 4);
      objc_msgSend_setAffiliateCallSign_(v7, v43, (uint64_t)v42);

      uint64_t v46 = objc_msgSend_affiliateCallSign(v7, v44, v45);

      if (!v46)
      {
        id v111 = &xmmword_26519A800;
        goto LABEL_61;
      }
    }
    else
    {
      objc_msgSend_setAffiliateCallSign_(v7, v36, 0);
    }
    if (v147[0])
    {
      uint64_t v48 = (uint64_t *)sub_2446D18A4(v147);
      uint64_t v49 = *v48;
      uint64_t v50 = v48[1];
      id v51 = [NSString alloc];
      uint64_t v53 = objc_msgSend_initWithBytes_length_encoding_(v51, v52, v49, v50, 4);
      objc_msgSend_setIdentifier_(v7, v54, (uint64_t)v53);

      uint64_t v57 = objc_msgSend_identifier(v7, v55, v56);

      if (!v57)
      {
        id v111 = &xmmword_26519A818;
LABEL_61:
        *(_OWORD *)a3 = *v111;
        *(void *)(a3 + 16) = *((void *)v111 + 2);

LABEL_62:
        goto LABEL_63;
      }
    }
    else
    {
      objc_msgSend_setIdentifier_(v7, v47, 0);
    }
    if (v148[0])
    {
      char v59 = NSNumber;
      uint64_t v60 = sub_2446F9190(v148);
      uint64_t v62 = objc_msgSend_numberWithUnsignedChar_(v59, v61, *v60);
      objc_msgSend_setType_(v7, v63, (uint64_t)v62);
    }
    else
    {
      objc_msgSend_setType_(v7, v58, 0);
    }
    objc_msgSend_addObject_(v6, v64, (uint64_t)v7);
  }
  if (v149 && v149 != 33)
  {
    uint64_t v99 = v151;
    int v100 = v150;
    *(_DWORD *)a3 = v149;
    *(_DWORD *)(a3 + 4) = v100;
    *(void *)(a3 + 8) = v99;
    *(void *)(a3 + 16) = v152;
    goto LABEL_62;
  }
LABEL_85:

  return v6;
}

void sub_244BB7140(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BB71DC(int a1, uint64_t a2, uint64_t a3)
{
  if (a1 == 1)
  {
    v30[0] = 0;
    sub_244CB3E8C(a2, v30, (uint64_t)&v24);
    *(_OWORD *)a3 = v24;
    *(void *)(a3 + 16) = v25;
    if (*(_DWORD *)a3)
    {
LABEL_18:
      uint64_t v5 = 0;
    }
    else
    {
      uint64_t v5 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v20, v30[0]);
    }
  }
  else if (a1)
  {
    uint64_t v5 = 0;
    *(_DWORD *)a3 = 181;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "zap-generated/MTRAttributeTLVValueDecoder.mm";
    *(_DWORD *)(a3 + 16) = 16171;
  }
  else
  {
    sub_244CB3988((uint64_t)v30);
    unsigned __int8 v31 = 0;
    sub_244CB39B8((uint64_t)v30, 0, 0);
    sub_24484B03C((uint64_t)v30, a2, (uint64_t)&v24);
    uint64_t v5 = 0;
    *(_OWORD *)a3 = v24;
    *(void *)(a3 + 16) = v25;
    if (!*(_DWORD *)a3)
    {
      uint64_t v5 = objc_opt_new();
      v33[0] = v31;
      if (v31) {
        v33[1] = v32;
      }
      sub_244BC2A44((uint64_t)&v24, (uint64_t)v30, v33);
      while (sub_244BC49A8((uint64_t)&v24))
      {
        uint64_t v6 = objc_opt_new();
        id v8 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v7, v24);
        objc_msgSend_setIdentifier_(v6, v9, (uint64_t)v8);

        uint64_t v10 = *((void *)&v24 + 1);
        uint64_t v11 = v25;
        id v12 = [NSString alloc];
        long long v14 = objc_msgSend_initWithBytes_length_encoding_(v12, v13, v10, v11, 4);
        objc_msgSend_setName_(v6, v15, (uint64_t)v14);

        id v18 = objc_msgSend_name(v6, v16, v17);

        if (!v18)
        {
          *(_OWORD *)a3 = xmmword_26519A8D8;
          *(void *)(a3 + 16) = 16140;

          goto LABEL_17;
        }
        objc_msgSend_addObject_(v5, v19, (uint64_t)v6);
      }
      if (v26 && v26 != 33)
      {
        uint64_t v21 = v28;
        int v22 = v27;
        *(_DWORD *)a3 = v26;
        *(_DWORD *)(a3 + 4) = v22;
        *(void *)(a3 + 8) = v21;
        *(void *)(a3 + 16) = v29;
LABEL_17:

        goto LABEL_18;
      }
    }
  }

  return v5;
}

void sub_244BB743C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BB7470(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
      LOBYTE(v201) = 0;
      sub_2446D1A48(a2, &v201, &v192);
      *(_OWORD *)a3 = v192;
      *(void *)(a3 + 16) = v193;
      if (*(_DWORD *)a3) {
        goto LABEL_119;
      }
      uint64_t v6 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v8, v201);
      goto LABEL_7;
    case 1:
    case 2:
    case 5:
    case 6:
      LOBYTE(v201) = 0;
      BYTE8(v201) = 0;
      sub_2447F5E48(a2, (uint64_t)&v201, (uint64_t)&v192);
      *(_OWORD *)a3 = v192;
      *(void *)(a3 + 16) = v193;
      if (*(_DWORD *)a3) {
        BOOL v5 = 1;
      }
      else {
        BOOL v5 = BYTE8(v201) == 0;
      }
      if (v5) {
        goto LABEL_119;
      }
      uint64_t v6 = objc_msgSend_numberWithUnsignedLongLong_(NSNumber, v4, v201);
      goto LABEL_7;
    case 3:
      LOBYTE(v192) = 0;
      LOBYTE(v194) = 0;
      sub_244834BDC(a2, (uint64_t)&v192, &v201);
      *(_OWORD *)a3 = v201;
      *(void *)(a3 + 16) = v202;
      if (*(_DWORD *)a3) {
        BOOL v80 = 1;
      }
      else {
        BOOL v80 = v194 == 0;
      }
      if (v80) {
        goto LABEL_119;
      }
      uint64_t v7 = objc_opt_new();
      if (!(_BYTE)v194
        || (objc_msgSend_numberWithUnsignedLongLong_(NSNumber, v81, v192),
            uint64_t v82 = objc_claimAutoreleasedReturnValue(),
            objc_msgSend_setUpdatedAt_(v7, v83, (uint64_t)v82),
            v82,
            !(_BYTE)v194))
      {
        sub_24479484C();
      }
      if ((_BYTE)v193)
      {
        objc_msgSend_numberWithUnsignedLongLong_(NSNumber, v84, *((uint64_t *)&v192 + 1));
        id v9 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend_setPosition_(v7, v85, (uint64_t)v9);
        goto LABEL_126;
      }
      objc_msgSend_setPosition_(v7, v84, 0);
      goto LABEL_120;
    case 4:
      LODWORD(v201) = 0;
      sub_244CB401C(a2, &v201, (uint64_t)&v192);
      HIDWORD(v88) = DWORD1(v192);
      *(_OWORD *)a3 = v192;
      *(void *)(a3 + 16) = v193;
      if (*(_DWORD *)a3) {
        goto LABEL_119;
      }
      LODWORD(v88) = v201;
      uint64_t v6 = objc_msgSend_numberWithFloat_(NSNumber, v86, v87, v88);
LABEL_7:
      uint64_t v7 = (void *)v6;
      goto LABEL_120;
    case 7:
      LOBYTE(v192) = 0;
      LOBYTE(v197) = 0;
      sub_244834C74(a2, (uint64_t)&v192, &v201);
      *(_OWORD *)a3 = v201;
      *(void *)(a3 + 16) = v202;
      if (*(_DWORD *)a3) {
        goto LABEL_119;
      }
      if (!(_BYTE)v197) {
        goto LABEL_106;
      }
      id v9 = (id)objc_opt_new();
      if (!(_BYTE)v197) {
        goto LABEL_132;
      }
      uint64_t v48 = *((void *)&v192 + 1);
      uint64_t v47 = v192;
      id v49 = [NSString alloc];
      id v51 = objc_msgSend_initWithBytes_length_encoding_(v49, v50, v47, v48, 4);
      objc_msgSend_setId_(v9, v52, (uint64_t)v51);

      uint64_t v7 = objc_msgSend_id(v9, v53, v54);

      if (!v7)
      {
        uint64_t v46 = &xmmword_26519A8F0;
        goto LABEL_125;
      }
      if (!(_BYTE)v197) {
        goto LABEL_132;
      }
      if (!v196) {
        goto LABEL_115;
      }
      uint64_t v55 = objc_opt_new();
      objc_msgSend_setTrackAttributes_(v9, v56, (uint64_t)v55);

      if (!(_BYTE)v197 || !v196) {
        goto LABEL_132;
      }
      uint64_t v57 = sub_244BBFB94(v193, v194);
      uint64_t v60 = objc_msgSend_trackAttributes(v9, v58, v59);
      objc_msgSend_setLanguageCode_(v60, v61, (uint64_t)v57);

      uint64_t v64 = objc_msgSend_trackAttributes(v9, v62, v63);
      uint64_t v67 = objc_msgSend_languageCode(v64, v65, v66);

      if (!v67)
      {
        uint64_t v7 = 0;
        uint64_t v46 = &xmmword_26519A908;
        goto LABEL_125;
      }
      if (!(_BYTE)v197 || !v196) {
        goto LABEL_132;
      }
      if (!v195[0] || !sub_24479DC08(v195)[16]) {
        goto LABEL_127;
      }
      if (!(_BYTE)v197 || !v196 || (id v68 = sub_24479DC08(v195), !v68[16])) {
LABEL_132:
      }
        sub_24479484C();
      uint64_t v69 = sub_244BBFB94(*(void *)v68, *((void *)v68 + 1));
      int v72 = objc_msgSend_trackAttributes(v9, v70, v71);
      objc_msgSend_setDisplayName_(v72, v73, (uint64_t)v69);

      uint64_t v76 = objc_msgSend_trackAttributes(v9, v74, v75);
      uint64_t v79 = objc_msgSend_displayName(v76, v77, v78);

      if (v79) {
        goto LABEL_107;
      }
      uint64_t v7 = 0;
      uint64_t v46 = &xmmword_26519A920;
      goto LABEL_125;
    case 8:
      LOBYTE(v201) = 0;
      char v205 = 0;
      sub_2447F50A0(a2, (uint64_t)&v201, &v192);
      *(_OWORD *)a3 = v192;
      *(void *)(a3 + 16) = v193;
      if (*(_DWORD *)a3) {
        BOOL v138 = 1;
      }
      else {
        BOOL v138 = v205 == 0;
      }
      if (v138) {
        goto LABEL_119;
      }
      uint64_t v7 = objc_opt_new();
      if (!v205) {
        sub_24479484C();
      }
      unsigned __int8 v206 = v203;
      if (v203) {
        char v207 = v204;
      }
      sub_244BC4A54((uint64_t)&v192, (uint64_t)&v201, &v206);
      while (2)
      {
        if (!sub_244BC4AD0((uint64_t)&v192)) {
          goto LABEL_103;
        }
        uint64_t v90 = objc_opt_new();
        long long v139 = v192;
        id v140 = [NSString alloc];
        uint64_t v142 = objc_msgSend_initWithBytes_length_encoding_(v140, v141, v139, *((void *)&v139 + 1), 4);
        objc_msgSend_setId_(v90, v143, (uint64_t)v142);

        char v146 = objc_msgSend_id(v90, v144, v145);

        if (!v146)
        {
          int v188 = &xmmword_26519A938;
          goto LABEL_117;
        }
        if (v196)
        {
          id v148 = objc_opt_new();
          objc_msgSend_setTrackAttributes_(v90, v149, (uint64_t)v148);

          if (!v196) {
            goto LABEL_129;
          }
          uint64_t v150 = v193;
          uint64_t v151 = v194;
          id v152 = [NSString alloc];
          uint64_t v154 = objc_msgSend_initWithBytes_length_encoding_(v152, v153, v150, v151, 4);
          uint64_t v157 = objc_msgSend_trackAttributes(v90, v155, v156);
          objc_msgSend_setLanguageCode_(v157, v158, (uint64_t)v154);

          long long v161 = objc_msgSend_trackAttributes(v90, v159, v160);
          unsigned __int8 v164 = objc_msgSend_languageCode(v161, v162, v163);

          if (!v164)
          {
            int v188 = &xmmword_26519A950;
            goto LABEL_117;
          }
          if (!v196) {
            goto LABEL_129;
          }
          if (!v195[0] || !sub_2446D18A4(v195)[16])
          {
            unsigned int v184 = objc_msgSend_trackAttributes(v90, v165, v166);
            objc_msgSend_setDisplayName_(v184, v185, 0);

            goto LABEL_101;
          }
          if (!v196 || (char v167 = sub_2446D18A4(v195), !v167[16])) {
LABEL_129:
          }
            sub_24479484C();
          uint64_t v168 = *(void *)v167;
          uint64_t v169 = *((void *)v167 + 1);
          id v170 = [NSString alloc];
          unsigned __int8 v172 = objc_msgSend_initWithBytes_length_encoding_(v170, v171, v168, v169, 4);
          int v175 = objc_msgSend_trackAttributes(v90, v173, v174);
          objc_msgSend_setDisplayName_(v175, v176, (uint64_t)v172);

          unsigned __int8 v179 = objc_msgSend_trackAttributes(v90, v177, v178);
          char v182 = objc_msgSend_displayName(v179, v180, v181);

          if (!v182)
          {
            int v188 = &xmmword_26519A968;
            goto LABEL_117;
          }
        }
        else
        {
          objc_msgSend_setTrackAttributes_(v90, v147, 0);
        }
LABEL_101:
        objc_msgSend_addObject_(v7, v183, (uint64_t)v90);

        continue;
      }
    case 9:
      LOBYTE(v192) = 0;
      LOBYTE(v197) = 0;
      sub_244834C74(a2, (uint64_t)&v192, &v201);
      *(_OWORD *)a3 = v201;
      *(void *)(a3 + 16) = v202;
      if (*(_DWORD *)a3) {
        goto LABEL_119;
      }
      if ((_BYTE)v197)
      {
        id v9 = (id)objc_opt_new();
        if (!(_BYTE)v197) {
          goto LABEL_131;
        }
        uint64_t v11 = *((void *)&v192 + 1);
        uint64_t v10 = v192;
        id v12 = [NSString alloc];
        long long v14 = objc_msgSend_initWithBytes_length_encoding_(v12, v13, v10, v11, 4);
        objc_msgSend_setId_(v9, v15, (uint64_t)v14);

        uint64_t v7 = objc_msgSend_id(v9, v16, v17);

        if (!v7)
        {
          uint64_t v46 = &xmmword_26519A980;
          goto LABEL_125;
        }
        if (!(_BYTE)v197) {
          goto LABEL_131;
        }
        if (!v196)
        {
LABEL_115:
          objc_msgSend_setTrackAttributes_(v9, v18, 0);
          goto LABEL_107;
        }
        long long v19 = objc_opt_new();
        objc_msgSend_setTrackAttributes_(v9, v20, (uint64_t)v19);

        if (!(_BYTE)v197 || !v196) {
          goto LABEL_131;
        }
        uint64_t v21 = sub_244BBFB94(v193, v194);
        long long v24 = objc_msgSend_trackAttributes(v9, v22, v23);
        objc_msgSend_setLanguageCode_(v24, v25, (uint64_t)v21);

        uint64_t v28 = objc_msgSend_trackAttributes(v9, v26, v27);
        unsigned __int8 v31 = objc_msgSend_languageCode(v28, v29, v30);

        if (!v31)
        {
          uint64_t v7 = 0;
          uint64_t v46 = &xmmword_26519A998;
          goto LABEL_125;
        }
        if (!(_BYTE)v197 || !v196) {
          goto LABEL_131;
        }
        if (!v195[0] || !sub_24479DC08(v195)[16])
        {
LABEL_127:
          uint64_t v190 = objc_msgSend_trackAttributes(v9, v32, v33);
          objc_msgSend_setDisplayName_(v190, v191, 0);

          goto LABEL_107;
        }
        if (!(_BYTE)v197 || !v196 || (uint64_t v34 = sub_24479DC08(v195), !v34[16])) {
LABEL_131:
        }
          sub_24479484C();
        unsigned __int16 v35 = sub_244BBFB94(*(void *)v34, *((void *)v34 + 1));
        uint64_t v38 = objc_msgSend_trackAttributes(v9, v36, v37);
        objc_msgSend_setDisplayName_(v38, v39, (uint64_t)v35);

        uint64_t v42 = objc_msgSend_trackAttributes(v9, v40, v41);
        uint64_t v45 = objc_msgSend_displayName(v42, v43, v44);

        if (!v45)
        {
          uint64_t v7 = 0;
          uint64_t v46 = &xmmword_26519A9B0;
LABEL_125:
          *(_OWORD *)a3 = *v46;
          *(void *)(a3 + 16) = *((void *)v46 + 2);
          goto LABEL_126;
        }
      }
      else
      {
LABEL_106:
        id v9 = 0;
      }
LABEL_107:
      id v9 = v9;
      uint64_t v7 = v9;
LABEL_126:

      goto LABEL_120;
    case 10:
      LOBYTE(v201) = 0;
      char v205 = 0;
      sub_2447F50A0(a2, (uint64_t)&v201, &v192);
      *(_OWORD *)a3 = v192;
      *(void *)(a3 + 16) = v193;
      if (*(_DWORD *)a3) {
        BOOL v89 = 1;
      }
      else {
        BOOL v89 = v205 == 0;
      }
      if (v89) {
        goto LABEL_119;
      }
      uint64_t v7 = objc_opt_new();
      if (!v205) {
        sub_24479484C();
      }
      unsigned __int8 v206 = v203;
      if (v203) {
        char v207 = v204;
      }
      sub_244BC4A54((uint64_t)&v192, (uint64_t)&v201, &v206);
      while (2)
      {
        if (sub_244BC4AD0((uint64_t)&v192))
        {
          uint64_t v90 = objc_opt_new();
          long long v91 = v192;
          id v92 = [NSString alloc];
          uint64_t v94 = objc_msgSend_initWithBytes_length_encoding_(v92, v93, v91, *((void *)&v91 + 1), 4);
          objc_msgSend_setId_(v90, v95, (uint64_t)v94);

          uint64_t v98 = objc_msgSend_id(v90, v96, v97);

          if (!v98)
          {
            int v188 = &xmmword_26519A9C8;
            goto LABEL_117;
          }
          if (v196)
          {
            int v100 = objc_opt_new();
            objc_msgSend_setTrackAttributes_(v90, v101, (uint64_t)v100);

            if (!v196) {
              goto LABEL_128;
            }
            uint64_t v102 = v193;
            uint64_t v103 = v194;
            id v104 = [NSString alloc];
            uint64_t v106 = objc_msgSend_initWithBytes_length_encoding_(v104, v105, v102, v103, 4);
            uint64_t v109 = objc_msgSend_trackAttributes(v90, v107, v108);
            objc_msgSend_setLanguageCode_(v109, v110, (uint64_t)v106);

            uint64_t v113 = objc_msgSend_trackAttributes(v90, v111, v112);
            uint64_t v116 = objc_msgSend_languageCode(v113, v114, v115);

            if (!v116)
            {
              int v188 = &xmmword_26519A9E0;
              goto LABEL_117;
            }
            if (!v196) {
              goto LABEL_128;
            }
            if (!v195[0] || !sub_2446D18A4(v195)[16])
            {
              uint64_t v136 = objc_msgSend_trackAttributes(v90, v117, v118);
              objc_msgSend_setDisplayName_(v136, v137, 0);

              goto LABEL_78;
            }
            if (!v196 || (uint64_t v119 = sub_2446D18A4(v195), !v119[16])) {
LABEL_128:
            }
              sub_24479484C();
            uint64_t v120 = *(void *)v119;
            uint64_t v121 = *((void *)v119 + 1);
            id v122 = [NSString alloc];
            unsigned __int8 v124 = objc_msgSend_initWithBytes_length_encoding_(v122, v123, v120, v121, 4);
            unsigned __int8 v127 = objc_msgSend_trackAttributes(v90, v125, v126);
            objc_msgSend_setDisplayName_(v127, v128, (uint64_t)v124);

            uint64_t v131 = objc_msgSend_trackAttributes(v90, v129, v130);
            char v134 = objc_msgSend_displayName(v131, v132, v133);

            if (!v134)
            {
              int v188 = &xmmword_26519A9F8;
LABEL_117:
              *(_OWORD *)a3 = *v188;
              *(void *)(a3 + 16) = *((void *)v188 + 2);

              goto LABEL_118;
            }
          }
          else
          {
            objc_msgSend_setTrackAttributes_(v90, v99, 0);
          }
LABEL_78:
          objc_msgSend_addObject_(v7, v135, (uint64_t)v90);

          continue;
        }
        break;
      }
LABEL_103:
      if (!v197 || v197 == 33) {
        goto LABEL_120;
      }
      uint64_t v186 = v199;
      int v187 = v198;
      *(_DWORD *)a3 = v197;
      *(_DWORD *)(a3 + 4) = v187;
      *(void *)(a3 + 8) = v186;
      *(void *)(a3 + 16) = v200;
LABEL_118:

LABEL_119:
      uint64_t v7 = 0;
LABEL_120:
      return v7;
    default:
      uint64_t v7 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 16500;
      goto LABEL_120;
  }
}

void sub_244BB816C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BB82C4(int a1, uint64_t a2, uint64_t a3)
{
  if (a1 == 1)
  {
    v45[0] = 0;
    sub_244CB3E8C(a2, v45, (uint64_t)&v37);
    *(_OWORD *)a3 = v37;
    *(void *)(a3 + 16) = v38;
    if (*(_DWORD *)a3)
    {
LABEL_21:
      BOOL v5 = 0;
    }
    else
    {
      BOOL v5 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v32, v45[0]);
    }
  }
  else if (a1)
  {
    BOOL v5 = 0;
    *(_DWORD *)a3 = 181;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "zap-generated/MTRAttributeTLVValueDecoder.mm";
    *(_DWORD *)(a3 + 16) = 16563;
  }
  else
  {
    sub_244CB3988((uint64_t)v45);
    unsigned __int8 v46 = 0;
    sub_244CB39B8((uint64_t)v45, 0, 0);
    sub_24484B03C((uint64_t)v45, a2, (uint64_t)&v37);
    BOOL v5 = 0;
    *(_OWORD *)a3 = v37;
    *(void *)(a3 + 16) = v38;
    if (!*(_DWORD *)a3)
    {
      BOOL v5 = objc_opt_new();
      v48[0] = v46;
      if (v46) {
        v48[1] = v47;
      }
      sub_244BC4C18((uint64_t)&v37, (uint64_t)v45, v48);
      while (sub_244BC4C98((uint64_t)&v37))
      {
        uint64_t v6 = objc_opt_new();
        id v8 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v7, v37);
        objc_msgSend_setIndex_(v6, v9, (uint64_t)v8);

        uint64_t v11 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v10, BYTE1(v37));
        objc_msgSend_setInputType_(v6, v12, (uint64_t)v11);

        uint64_t v13 = *((void *)&v37 + 1);
        uint64_t v14 = v38;
        id v15 = [NSString alloc];
        uint64_t v17 = objc_msgSend_initWithBytes_length_encoding_(v15, v16, v13, v14, 4);
        objc_msgSend_setName_(v6, v18, (uint64_t)v17);

        uint64_t v21 = objc_msgSend_name(v6, v19, v20);

        if (!v21)
        {
          unsigned __int16 v35 = &xmmword_26519AA10;
          goto LABEL_19;
        }
        uint64_t v22 = v39;
        uint64_t v23 = v40;
        id v24 = [NSString alloc];
        int v26 = objc_msgSend_initWithBytes_length_encoding_(v24, v25, v22, v23, 4);
        objc_msgSend_setDescriptionString_(v6, v27, (uint64_t)v26);

        uint64_t v30 = objc_msgSend_descriptionString(v6, v28, v29);

        if (!v30)
        {
          unsigned __int16 v35 = &xmmword_26519AA28;
LABEL_19:
          *(_OWORD *)a3 = *v35;
          *(void *)(a3 + 16) = *((void *)v35 + 2);

LABEL_20:
          goto LABEL_21;
        }
        objc_msgSend_addObject_(v5, v31, (uint64_t)v6);
      }
      if (v41 && v41 != 33)
      {
        uint64_t v33 = v43;
        int v34 = v42;
        *(_DWORD *)a3 = v41;
        *(_DWORD *)(a3 + 4) = v34;
        *(void *)(a3 + 8) = v33;
        *(void *)(a3 + 16) = v44;
        goto LABEL_20;
      }
    }
  }

  return v5;
}

void sub_244BB85AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BB85E8(int a1, uint64_t a2, uint64_t a3)
{
  if (a1 == 1)
  {
    v19[0] = 0;
    sub_24484B2E8(a2, v19, &v15);
    *(_OWORD *)a3 = v15;
    *(void *)(a3 + 16) = v16;
    if (*(_DWORD *)a3)
    {
LABEL_18:
      BOOL v5 = 0;
    }
    else
    {
      BOOL v5 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v11, v19[0]);
    }
  }
  else if (a1)
  {
    BOOL v5 = 0;
    *(_DWORD *)a3 = 181;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "zap-generated/MTRAttributeTLVValueDecoder.mm";
    *(_DWORD *)(a3 + 16) = 16641;
  }
  else
  {
    sub_244CB3988((uint64_t)v19);
    unsigned __int8 v20 = 0;
    sub_244CB39B8((uint64_t)v19, 0, 0);
    sub_24484B03C((uint64_t)v19, a2, (uint64_t)&v15);
    BOOL v5 = 0;
    *(_OWORD *)a3 = v15;
    *(void *)(a3 + 16) = v16;
    if (!*(_DWORD *)a3)
    {
      BOOL v5 = objc_opt_new();
      v22[0] = v20;
      if (v20) {
        v22[1] = v21;
      }
      sub_244797544((uint64_t)&v15, (uint64_t)v19, v22);
      while (sub_2447975B4((uint64_t)&v15))
      {
        long long v6 = v15;
        id v7 = [NSString alloc];
        uint64_t v10 = objc_msgSend_initWithBytes_length_encoding_(v7, v8, v6, *((void *)&v6 + 1), 4);
        if (!v10)
        {
          *(_OWORD *)a3 = xmmword_26519AA40;
          *(void *)(a3 + 16) = 16610;
          goto LABEL_17;
        }
        objc_msgSend_addObject_(v5, v9, (uint64_t)v10);
      }
      if (v16 && v16 != 33)
      {
        uint64_t v12 = v17;
        int v13 = HIDWORD(v16);
        *(_DWORD *)a3 = v16;
        *(_DWORD *)(a3 + 4) = v13;
        *(void *)(a3 + 8) = v12;
        *(void *)(a3 + 16) = v18;
LABEL_17:

        goto LABEL_18;
      }
    }
  }

  return v5;
}

void sub_244BB87D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BB87F4(int a1, uint64_t a2, uint64_t a3)
{
  if (a1 == 1)
  {
    v33[0] = 0;
    sub_244CB3E8C(a2, v33, (uint64_t)&v27);
    *(_OWORD *)a3 = v27;
    *(void *)(a3 + 16) = v28;
    if (*(_DWORD *)a3)
    {
LABEL_18:
      BOOL v5 = 0;
    }
    else
    {
      BOOL v5 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v23, v33[0]);
    }
  }
  else if (a1)
  {
    BOOL v5 = 0;
    *(_DWORD *)a3 = 181;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "zap-generated/MTRAttributeTLVValueDecoder.mm";
    *(_DWORD *)(a3 + 16) = 16698;
  }
  else
  {
    sub_244CB3988((uint64_t)v33);
    unsigned __int8 v34 = 0;
    sub_244CB39B8((uint64_t)v33, 0, 0);
    sub_24484B03C((uint64_t)v33, a2, (uint64_t)&v27);
    BOOL v5 = 0;
    *(_OWORD *)a3 = v27;
    *(void *)(a3 + 16) = v28;
    if (!*(_DWORD *)a3)
    {
      BOOL v5 = objc_opt_new();
      v36[0] = v34;
      if (v34) {
        v36[1] = v35;
      }
      sub_244BC4D48((uint64_t)&v27, (uint64_t)v33, v36);
      while (sub_244BC4DC0((uint64_t)&v27))
      {
        long long v6 = objc_opt_new();
        id v8 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v7, v27);
        objc_msgSend_setIndex_(v6, v9, (uint64_t)v8);

        uint64_t v11 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v10, BYTE1(v27));
        objc_msgSend_setOutputType_(v6, v12, (uint64_t)v11);

        uint64_t v13 = *((void *)&v27 + 1);
        uint64_t v14 = v28;
        id v15 = [NSString alloc];
        uint64_t v17 = objc_msgSend_initWithBytes_length_encoding_(v15, v16, v13, v14, 4);
        objc_msgSend_setName_(v6, v18, (uint64_t)v17);

        unsigned __int8 v21 = objc_msgSend_name(v6, v19, v20);

        if (!v21)
        {
          *(_OWORD *)a3 = xmmword_26519AA58;
          *(void *)(a3 + 16) = 16667;

          goto LABEL_17;
        }
        objc_msgSend_addObject_(v5, v22, (uint64_t)v6);
      }
      if (v29 && v29 != 33)
      {
        uint64_t v24 = v31;
        int v25 = v30;
        *(_DWORD *)a3 = v29;
        *(_DWORD *)(a3 + 4) = v25;
        *(void *)(a3 + 8) = v24;
        *(void *)(a3 + 16) = v32;
LABEL_17:

        goto LABEL_18;
      }
    }
  }

  return v5;
}

void sub_244BB8A7C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BB8AB4(int a1, uint64_t a2, uint64_t a3)
{
  if (a1 == 1)
  {
    LOBYTE(v42) = 0;
    char v45 = 0;
    sub_244838750(a2, (uint64_t)&v42, &v46);
    *(_OWORD *)a3 = v46;
    *(void *)(a3 + 16) = v47;
    if (*(_DWORD *)a3) {
      goto LABEL_10;
    }
    if (v45)
    {
      id v9 = (id)objc_opt_new();
      uint64_t v10 = objc_opt_new();
      objc_msgSend_setApplication_(v9, v11, (uint64_t)v10);

      if (!v45) {
        goto LABEL_30;
      }
      uint64_t v13 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v12, (unsigned __int16)v42);
      uint64_t v16 = objc_msgSend_application(v9, v14, v15);
      objc_msgSend_setCatalogVendorID_(v16, v17, (uint64_t)v13);

      if (!v45) {
        goto LABEL_30;
      }
      uint64_t v18 = *((void *)&v42 + 1);
      uint64_t v19 = v43;
      id v20 = [NSString alloc];
      uint64_t v22 = objc_msgSend_initWithBytes_length_encoding_(v20, v21, v18, v19, 4);
      int v25 = objc_msgSend_application(v9, v23, v24);
      objc_msgSend_setApplicationID_(v25, v26, (uint64_t)v22);

      int v29 = objc_msgSend_application(v9, v27, v28);
      uint64_t v32 = objc_msgSend_applicationID(v29, v30, v31);

      if (!v32)
      {
        BOOL v5 = 0;
        *(_OWORD *)a3 = xmmword_26519AA70;
        *(void *)(a3 + 16) = 16747;
LABEL_26:

        goto LABEL_27;
      }
      if (!v45) {
LABEL_30:
      }
        sub_24479484C();
      if ((_BYTE)v44)
      {
        unsigned __int8 v34 = NSNumber;
        unsigned __int8 v35 = sub_2447A4DF0(&v44);
        long long v37 = objc_msgSend_numberWithUnsignedShort_(v34, v36, *(unsigned __int16 *)v35);
        objc_msgSend_setEndpoint_(v9, v38, (uint64_t)v37);
      }
      else
      {
        objc_msgSend_setEndpoint_(v9, v33, 0);
      }
    }
    else
    {
      id v9 = 0;
    }
    id v9 = v9;
    BOOL v5 = v9;
    goto LABEL_26;
  }
  if (a1)
  {
    BOOL v5 = 0;
    *(_DWORD *)a3 = 181;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "zap-generated/MTRAttributeTLVValueDecoder.mm";
    *(_DWORD *)(a3 + 16) = 16764;
    goto LABEL_27;
  }
  sub_244CB3988((uint64_t)&v46);
  unsigned __int8 v48 = 0;
  sub_244CB39B8((uint64_t)&v46, 0, 0);
  sub_24484B03C((uint64_t)&v46, a2, (uint64_t)&v42);
  *(_OWORD *)a3 = v42;
  *(void *)(a3 + 16) = v43;
  if (*(_DWORD *)a3)
  {
LABEL_10:
    BOOL v5 = 0;
    goto LABEL_27;
  }
  BOOL v5 = objc_opt_new();
  v50[0] = v48;
  if (v48) {
    v50[1] = v49;
  }
  sub_2446D1930((uint64_t)&v42, (uint64_t)&v46, v50);
  while (sub_244794970((uint64_t)&v42))
  {
    id v7 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v6, (unsigned __int16)v42);
    objc_msgSend_addObject_(v5, v8, (uint64_t)v7);
  }
  if (DWORD2(v42) && DWORD2(v42) != 33)
  {
    uint64_t v39 = v43;
    int v40 = HIDWORD(v42);
    *(_DWORD *)a3 = DWORD2(v42);
    *(_DWORD *)(a3 + 4) = v40;
    *(void *)(a3 + 8) = v39;
    *(void *)(a3 + 16) = v44;

    goto LABEL_10;
  }
LABEL_27:

  return v5;
}

void sub_244BB8DD8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BB8E40(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
      long long v44 = 0uLL;
      sub_244CB41F0(a2, &v44, &v41);
      id v5 = 0;
      *(_OWORD *)a3 = v41;
      *(void *)(a3 + 16) = v42;
      if (!*(_DWORD *)a3)
      {
        uint64_t v7 = *((void *)&v44 + 1);
        uint64_t v6 = v44;
        id v8 = [NSString alloc];
        id v5 = (id)objc_msgSend_initWithBytes_length_encoding_(v8, v9, v6, v7, 4);
        if (v5) {
          goto LABEL_22;
        }
        uint64_t v10 = &xmmword_26519AA88;
        goto LABEL_34;
      }
      goto LABEL_38;
    case 1:
      LOWORD(v44) = 0;
      long long v41 = 0uLL;
      uint64_t v42 = 0;
      sub_24484B11C(a2, &v44, &v41);
      if (!v41)
      {
        LODWORD(v41) = 0;
        *((void *)&v41 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
        LODWORD(v42) = 61;
      }
      goto LABEL_15;
    case 2:
      long long v44 = 0uLL;
      sub_244CB41F0(a2, &v44, &v41);
      id v5 = 0;
      *(_OWORD *)a3 = v41;
      *(void *)(a3 + 16) = v42;
      if (*(_DWORD *)a3) {
        goto LABEL_38;
      }
      uint64_t v25 = *((void *)&v44 + 1);
      uint64_t v24 = v44;
      id v26 = [NSString alloc];
      id v5 = (id)objc_msgSend_initWithBytes_length_encoding_(v26, v27, v24, v25, 4);
      if (v5) {
        goto LABEL_22;
      }
      uint64_t v10 = &xmmword_26519AAA0;
      goto LABEL_34;
    case 3:
      LOWORD(v44) = 0;
      sub_244CB3F40(a2, &v44, (uint64_t)&v41);
LABEL_15:
      *(_OWORD *)a3 = v41;
      *(void *)(a3 + 16) = v42;
      if (*(_DWORD *)a3) {
        goto LABEL_24;
      }
      uint64_t v28 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v23, (unsigned __int16)v44);
      goto LABEL_19;
    case 4:
      LOWORD(v41) = 0;
      *((void *)&v41 + 1) = 0;
      uint64_t v42 = 0;
      sub_2447EE748((uint64_t)&v41, a2, (uint64_t)&v44);
      id v5 = 0;
      *(_OWORD *)a3 = v44;
      *(void *)(a3 + 16) = v45;
      if (!*(_DWORD *)a3)
      {
        uint64_t v11 = objc_opt_new();
        uint64_t v13 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v12, (unsigned __int16)v41);
        objc_msgSend_setCatalogVendorID_(v11, v14, (uint64_t)v13);

        uint64_t v15 = *((void *)&v41 + 1);
        uint64_t v16 = v42;
        id v17 = [NSString alloc];
        uint64_t v19 = objc_msgSend_initWithBytes_length_encoding_(v17, v18, v15, v16, 4);
        objc_msgSend_setApplicationID_(v11, v20, (uint64_t)v19);

        objc_msgSend_applicationID(v11, v21, v22);
        id v5 = (id)objc_claimAutoreleasedReturnValue();

        if (v5)
        {
          id v5 = v11;
        }
        else
        {
          *(_OWORD *)a3 = xmmword_26519AAB8;
          *(void *)(a3 + 16) = 16837;
        }
      }
      goto LABEL_38;
    case 5:
      LOBYTE(v44) = 0;
      sub_2446D1A48(a2, &v44, &v41);
      *(_OWORD *)a3 = v41;
      *(void *)(a3 + 16) = v42;
      if (*(_DWORD *)a3) {
        goto LABEL_24;
      }
      uint64_t v28 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v29, v44);
LABEL_19:
      id v5 = (id)v28;
      goto LABEL_38;
    case 6:
      long long v44 = 0uLL;
      sub_244CB41F0(a2, &v44, &v41);
      id v5 = 0;
      *(_OWORD *)a3 = v41;
      *(void *)(a3 + 16) = v42;
      if (*(_DWORD *)a3) {
        goto LABEL_38;
      }
      uint64_t v31 = *((void *)&v44 + 1);
      uint64_t v30 = v44;
      id v32 = [NSString alloc];
      id v5 = (id)objc_msgSend_initWithBytes_length_encoding_(v32, v33, v30, v31, 4);
      if (v5)
      {
LABEL_22:
        id v34 = v5;
      }
      else
      {
        uint64_t v10 = &xmmword_26519AAD0;
LABEL_34:
        *(_OWORD *)a3 = *v10;
        *(void *)(a3 + 16) = *((void *)v10 + 2);
      }

LABEL_38:
      return v5;
    case 7:
      sub_244CB3988((uint64_t)&v44);
      unsigned __int8 v46 = 0;
      sub_244CB39B8((uint64_t)&v44, 0, 0);
      sub_24484B03C((uint64_t)&v44, a2, (uint64_t)&v41);
      *(_OWORD *)a3 = v41;
      *(void *)(a3 + 16) = v42;
      if (*(_DWORD *)a3) {
        goto LABEL_24;
      }
      id v5 = (id)objc_opt_new();
      v48[0] = v46;
      if (v46) {
        v48[1] = v47;
      }
      sub_2446D1930((uint64_t)&v41, (uint64_t)&v44, v48);
      while (sub_244BC4E6C((uint64_t)&v41))
      {
        uint64_t v36 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v35, (unsigned __int16)v41);
        objc_msgSend_addObject_(v5, v37, (uint64_t)v36);
      }
      if (DWORD2(v41) && DWORD2(v41) != 33)
      {
        uint64_t v38 = v42;
        int v39 = HIDWORD(v41);
        *(_DWORD *)a3 = DWORD2(v41);
        *(_DWORD *)(a3 + 4) = v39;
        *(void *)(a3 + 8) = v38;
        *(void *)(a3 + 16) = v43;

LABEL_24:
        id v5 = 0;
      }
      goto LABEL_38;
    default:
      id v5 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 16901;
      goto LABEL_38;
  }
}

void sub_244BB92D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BB9344(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
    case 7:
      LOBYTE(v70[0]) = 0;
      sub_244CB3C0C(a2, (char *)v70, (uint64_t)&v64);
      *(_OWORD *)a3 = v64;
      *(void *)(a3 + 16) = v65[0];
      if (*(_DWORD *)a3) {
        goto LABEL_46;
      }
      uint64_t v6 = objc_msgSend_numberWithBool_(NSNumber, v5, LOBYTE(v70[0]));
      goto LABEL_6;
    case 1:
      sub_244CB3988((uint64_t)v70);
      unsigned __int8 v71 = 0;
      sub_244CB39B8((uint64_t)v70, 0, 0);
      sub_24484B03C((uint64_t)v70, a2, (uint64_t)&v64);
      *(_OWORD *)a3 = v64;
      *(void *)(a3 + 16) = v65[0];
      if (*(_DWORD *)a3) {
        goto LABEL_46;
      }
      id v8 = objc_opt_new();
      unsigned __int8 v73 = v71;
      if (v71) {
        char v74 = v72;
      }
      sub_24479765C((uint64_t)&v64, (uint64_t)v70, &v73);
      while (2)
      {
        if (!sub_244BC4F3C((uint64_t)&v64)) {
          goto LABEL_36;
        }
        id v9 = objc_opt_new();
        long long v10 = v64;
        id v11 = [NSString alloc];
        uint64_t v13 = objc_msgSend_initWithBytes_length_encoding_(v11, v12, v10, *((void *)&v10 + 1), 4);
        objc_msgSend_setRatingName_(v9, v14, (uint64_t)v13);

        id v17 = objc_msgSend_ratingName(v9, v15, v16);

        if (!v17)
        {
          uint64_t v62 = &xmmword_26519AAE8;
          goto LABEL_44;
        }
        if (LOBYTE(v65[0]))
        {
          uint64_t v19 = (uint64_t *)sub_2446D18A4(v65);
          uint64_t v20 = *v19;
          uint64_t v21 = v19[1];
          id v22 = [NSString alloc];
          uint64_t v24 = objc_msgSend_initWithBytes_length_encoding_(v22, v23, v20, v21, 4);
          objc_msgSend_setRatingNameDesc_(v9, v25, (uint64_t)v24);

          uint64_t v28 = objc_msgSend_ratingNameDesc(v9, v26, v27);

          if (!v28)
          {
            uint64_t v62 = &xmmword_26519AB00;
LABEL_44:
            *(_OWORD *)a3 = *v62;
            *(void *)(a3 + 16) = *((void *)v62 + 2);

            goto LABEL_45;
          }
        }
        else
        {
          objc_msgSend_setRatingNameDesc_(v9, v18, 0);
        }
        objc_msgSend_addObject_(v8, v29, (uint64_t)v9);

        continue;
      }
    case 2:
      v70[0] = 0uLL;
      sub_244CB41F0(a2, v70, &v64);
      id v8 = 0;
      *(_OWORD *)a3 = v64;
      *(void *)(a3 + 16) = v65[0];
      if (*(_DWORD *)a3) {
        goto LABEL_47;
      }
      uint64_t v51 = *((void *)&v70[0] + 1);
      uint64_t v50 = *(void *)&v70[0];
      id v52 = [NSString alloc];
      id v8 = objc_msgSend_initWithBytes_length_encoding_(v52, v53, v50, v51, 4);
      if (v8) {
        goto LABEL_35;
      }
      uint64_t v54 = &xmmword_26519AB18;
      goto LABEL_42;
    case 3:
      sub_244CB3988((uint64_t)v70);
      unsigned __int8 v71 = 0;
      sub_244CB39B8((uint64_t)v70, 0, 0);
      sub_24484B03C((uint64_t)v70, a2, (uint64_t)&v64);
      *(_OWORD *)a3 = v64;
      *(void *)(a3 + 16) = v65[0];
      if (*(_DWORD *)a3) {
        goto LABEL_46;
      }
      id v8 = objc_opt_new();
      unsigned __int8 v73 = v71;
      if (v71) {
        char v74 = v72;
      }
      sub_24479765C((uint64_t)&v64, (uint64_t)v70, &v73);
      while (2)
      {
        if (sub_244BC4F3C((uint64_t)&v64))
        {
          id v9 = objc_opt_new();
          long long v30 = v64;
          id v31 = [NSString alloc];
          uint64_t v33 = objc_msgSend_initWithBytes_length_encoding_(v31, v32, v30, *((void *)&v30 + 1), 4);
          objc_msgSend_setRatingName_(v9, v34, (uint64_t)v33);

          long long v37 = objc_msgSend_ratingName(v9, v35, v36);

          if (!v37)
          {
            uint64_t v62 = &xmmword_26519AB30;
            goto LABEL_44;
          }
          if (LOBYTE(v65[0]))
          {
            int v39 = (uint64_t *)sub_2446D18A4(v65);
            uint64_t v40 = *v39;
            uint64_t v41 = v39[1];
            id v42 = [NSString alloc];
            long long v44 = objc_msgSend_initWithBytes_length_encoding_(v42, v43, v40, v41, 4);
            objc_msgSend_setRatingNameDesc_(v9, v45, (uint64_t)v44);

            unsigned __int8 v48 = objc_msgSend_ratingNameDesc(v9, v46, v47);

            if (!v48)
            {
              uint64_t v62 = &xmmword_26519AB48;
              goto LABEL_44;
            }
          }
          else
          {
            objc_msgSend_setRatingNameDesc_(v9, v38, 0);
          }
          objc_msgSend_addObject_(v8, v49, (uint64_t)v9);

          continue;
        }
        break;
      }
LABEL_36:
      if (!v66 || v66 == 33) {
        goto LABEL_47;
      }
      uint64_t v60 = v68;
      int v61 = v67;
      *(_DWORD *)a3 = v66;
      *(_DWORD *)(a3 + 4) = v61;
      *(void *)(a3 + 8) = v60;
      *(void *)(a3 + 16) = v69;
LABEL_45:

LABEL_46:
      id v8 = 0;
LABEL_47:
      return v8;
    case 4:
      v70[0] = 0uLL;
      sub_244CB41F0(a2, v70, &v64);
      id v8 = 0;
      *(_OWORD *)a3 = v64;
      *(void *)(a3 + 16) = v65[0];
      if (*(_DWORD *)a3) {
        goto LABEL_47;
      }
      uint64_t v56 = *((void *)&v70[0] + 1);
      uint64_t v55 = *(void *)&v70[0];
      id v57 = [NSString alloc];
      id v8 = objc_msgSend_initWithBytes_length_encoding_(v57, v58, v55, v56, 4);
      if (v8)
      {
LABEL_35:
        id v59 = v8;
      }
      else
      {
        uint64_t v54 = &xmmword_26519AB60;
LABEL_42:
        *(_OWORD *)a3 = *v54;
        *(void *)(a3 + 16) = *((void *)v54 + 2);
      }

      goto LABEL_47;
    case 5:
    case 6:
      LODWORD(v70[0]) = 0;
      sub_244CB3FB0(a2, v70, (uint64_t)&v64);
      *(_OWORD *)a3 = v64;
      *(void *)(a3 + 16) = v65[0];
      if (*(_DWORD *)a3) {
        goto LABEL_46;
      }
      uint64_t v6 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v7, LODWORD(v70[0]));
LABEL_6:
      id v8 = (void *)v6;
      goto LABEL_47;
    default:
      id v8 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 17085;
      goto LABEL_47;
  }
}

void sub_244BB98A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BB9920(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
      sub_244CB3988((uint64_t)v45);
      unsigned __int8 v46 = 0;
      sub_244CB39B8((uint64_t)v45, 0, 0);
      sub_24484B03C((uint64_t)v45, a2, (uint64_t)&v41);
      *(_OWORD *)a3 = v41;
      *(void *)(a3 + 16) = v42;
      if (*(_DWORD *)a3) {
        goto LABEL_30;
      }
      id v5 = objc_opt_new();
      unsigned __int8 v48 = v46;
      if (v46) {
        char v49 = v47;
      }
      sub_2446D1930((uint64_t)&v41, (uint64_t)v45, &v48);
      while (sub_244BC4FE8((uint64_t)&v41))
      {
        uint64_t v7 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v6, v41);
        objc_msgSend_addObject_(v5, v8, (uint64_t)v7);
      }
      goto LABEL_23;
    case 1:
      sub_244CB3988((uint64_t)v45);
      unsigned __int8 v46 = 0;
      sub_244CB39B8((uint64_t)v45, 0, 0);
      sub_24484B03C((uint64_t)v45, a2, (uint64_t)&v41);
      *(_OWORD *)a3 = v41;
      *(void *)(a3 + 16) = v42;
      if (*(_DWORD *)a3) {
        goto LABEL_30;
      }
      id v5 = objc_opt_new();
      unsigned __int8 v48 = v46;
      if (v46) {
        char v49 = v47;
      }
      sub_244798128((uint64_t)&v41, (uint64_t)v45, &v48);
      while (sub_244BC5090(&v41))
      {
        id v9 = objc_opt_new();
        id v11 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v10, (unsigned __int16)v41);
        objc_msgSend_setZoneID_(v9, v12, (uint64_t)v11);

        uint64_t v14 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v13, BYTE2(v41));
        objc_msgSend_setZoneType_(v9, v15, (uint64_t)v14);

        id v17 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v16, BYTE3(v41));
        objc_msgSend_setZoneSource_(v9, v18, (uint64_t)v17);

        objc_msgSend_addObject_(v5, v19, (uint64_t)v9);
      }
LABEL_23:
      if (!DWORD2(v41) || DWORD2(v41) == 33) {
        goto LABEL_31;
      }
      uint64_t v35 = v42;
      int v36 = HIDWORD(v41);
      *(_DWORD *)a3 = DWORD2(v41);
      *(_DWORD *)(a3 + 4) = v36;
      *(void *)(a3 + 8) = v35;
      uint64_t v37 = v43;
      break;
    case 2:
      sub_244CB3988((uint64_t)v45);
      unsigned __int8 v46 = 0;
      sub_244CB39B8((uint64_t)v45, 0, 0);
      sub_24484B03C((uint64_t)v45, a2, (uint64_t)&v41);
      *(_OWORD *)a3 = v41;
      *(void *)(a3 + 16) = v42;
      if (*(_DWORD *)a3) {
        goto LABEL_30;
      }
      id v5 = objc_opt_new();
      unsigned __int8 v48 = v46;
      if (v46) {
        char v49 = v47;
      }
      sub_244BC5138((uint64_t)&v41, (uint64_t)v45, &v48);
      while (sub_244BC51AC((uint64_t)&v41))
      {
        uint64_t v20 = objc_opt_new();
        id v22 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v21, (unsigned __int16)v41);
        objc_msgSend_setInitialDuration_(v20, v23, (uint64_t)v22);

        uint64_t v25 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v24, WORD1(v41));
        objc_msgSend_setAugmentationDuration_(v20, v26, (uint64_t)v25);

        uint64_t v28 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v27, DWORD1(v41));
        objc_msgSend_setMaxDuration_(v20, v29, (uint64_t)v28);

        id v31 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v30, WORD4(v41));
        objc_msgSend_setBlindDuration_(v20, v32, (uint64_t)v31);

        objc_msgSend_addObject_(v5, v33, (uint64_t)v20);
      }
      if (!v42 || v42 == 33) {
        goto LABEL_31;
      }
      uint64_t v38 = v43;
      int v39 = HIDWORD(v42);
      *(_DWORD *)a3 = v42;
      *(_DWORD *)(a3 + 4) = v39;
      *(void *)(a3 + 8) = v38;
      uint64_t v37 = v44;
      break;
    case 3:
      v45[0] = 0;
      sub_244CB3E8C(a2, v45, (uint64_t)&v41);
      *(_OWORD *)a3 = v41;
      *(void *)(a3 + 16) = v42;
      if (*(_DWORD *)a3) {
        goto LABEL_30;
      }
      id v5 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v34, v45[0]);
      goto LABEL_31;
    default:
      id v5 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 17205;
      goto LABEL_31;
  }
  *(void *)(a3 + 16) = v37;

LABEL_30:
  id v5 = 0;
LABEL_31:

  return v5;
}

void sub_244BB9DA0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BB9E34(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
    case 31:
    case 32:
    case 33:
    case 35:
    case 36:
    case 37:
      LOBYTE(v303) = 0;
      sub_244CB3E8C(a2, &v303, (uint64_t)&v308);
      goto LABEL_88;
    case 1:
    case 6:
    case 11:
      LODWORD(v303) = 0;
      sub_244CB3FB0(a2, &v303, (uint64_t)&v308);
      *(_OWORD *)a3 = v308;
      *(void *)(a3 + 16) = v309;
      if (*(_DWORD *)a3) {
        goto LABEL_89;
      }
      uint64_t v6 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v8, v303);
      goto LABEL_91;
    case 2:
      LODWORD(v303) = 0;
      BYTE4(v303) = 0;
      *(_DWORD *)((char *)&v303 + 6) = 0;
      sub_24483D2B4((uint64_t)&v303, a2, (uint64_t)&v308);
      *(_OWORD *)a3 = v308;
      *(void *)(a3 + 16) = v309;
      if (*(_DWORD *)a3) {
        goto LABEL_89;
      }
      id v10 = (id)objc_opt_new();
      uint64_t v12 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v11, (unsigned __int16)v303);
      objc_msgSend_setSensorWidth_(v10, v13, (uint64_t)v12);

      uint64_t v15 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v14, WORD1(v303));
      objc_msgSend_setSensorHeight_(v10, v16, (uint64_t)v15);

      uint64_t v18 = objc_msgSend_numberWithBool_(NSNumber, v17, BYTE4(v303));
      objc_msgSend_setHdrCapable_(v10, v19, (uint64_t)v18);

      uint64_t v21 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v20, WORD3(v303));
      objc_msgSend_setMaxFPS_(v10, v22, (uint64_t)v21);

      uint64_t v24 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v23, WORD4(v303));
      objc_msgSend_setMaxHDRFPS_(v10, v25, (uint64_t)v24);
      goto LABEL_141;
    case 3:
    case 13:
    case 21:
    case 22:
    case 23:
    case 26:
    case 27:
    case 28:
    case 30:
    case 34:
    case 38:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
      LOBYTE(v303) = 0;
      sub_244CB3C0C(a2, (char *)&v303, (uint64_t)&v308);
      *(_OWORD *)a3 = v308;
      *(void *)(a3 + 16) = v309;
      if (*(_DWORD *)a3) {
        goto LABEL_89;
      }
      uint64_t v6 = objc_msgSend_numberWithBool_(NSNumber, v5, v303);
      goto LABEL_91;
    case 4:
      LODWORD(v303) = 0;
      sub_24483B9C8(&v303, a2, (uint64_t)&v308);
      *(_OWORD *)a3 = v308;
      *(void *)(a3 + 16) = v309;
      if (*(_DWORD *)a3) {
        goto LABEL_89;
      }
      id v10 = (id)objc_opt_new();
      uint64_t v27 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v26, (unsigned __int16)v303);
      objc_msgSend_setWidth_(v10, v28, (uint64_t)v27);

      uint64_t v24 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v29, WORD1(v303));
      objc_msgSend_setHeight_(v10, v30, (uint64_t)v24);
      goto LABEL_141;
    case 5:
      sub_244CB3988((uint64_t)&v303);
      unsigned __int8 v306 = 0;
      sub_244CB39B8((uint64_t)&v303, 0, 0);
      sub_24484B03C((uint64_t)&v303, a2, (uint64_t)&v308);
      *(_OWORD *)a3 = v308;
      *(void *)(a3 + 16) = v309;
      if (*(_DWORD *)a3) {
        goto LABEL_89;
      }
      id v10 = (id)objc_opt_new();
      unsigned __int8 v323 = v306;
      if (v306) {
        char v324 = v307;
      }
      sub_244BC5258((uint64_t)&v308, (uint64_t)&v303, &v323);
      while (sub_244BC52D4((uint64_t)&v308))
      {
        long long v153 = objc_opt_new();
        unsigned __int8 v155 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v154, v308);
        objc_msgSend_setCodec_(v153, v156, (uint64_t)v155);

        uint64_t v157 = objc_opt_new();
        objc_msgSend_setResolution_(v153, v158, (uint64_t)v157);

        uint64_t v160 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v159, WORD1(v308));
        uint64_t v163 = objc_msgSend_resolution(v153, v161, v162);
        objc_msgSend_setWidth_(v163, v164, (uint64_t)v160);

        uint64_t v166 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v165, WORD2(v308));
        uint64_t v169 = objc_msgSend_resolution(v153, v167, v168);
        objc_msgSend_setHeight_(v169, v170, (uint64_t)v166);

        unsigned __int8 v172 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v171, DWORD2(v308));
        objc_msgSend_setMinBitRate_(v153, v173, (uint64_t)v172);

        objc_msgSend_addObject_(v10, v174, (uint64_t)v153);
      }
      if (!v309 || v309 == 33) {
        break;
      }
      uint64_t v292 = v310;
      int v293 = HIDWORD(v309);
      *(_DWORD *)a3 = v309;
      *(_DWORD *)(a3 + 4) = v293;
      *(void *)(a3 + 8) = v292;
      uint64_t v141 = v311;
      goto LABEL_119;
    case 7:
      LOBYTE(v308) = 0;
      sub_244CB3988((uint64_t)&v308 + 8);
      unsigned __int8 v315 = 0;
      sub_244CB39B8(v175, 0, 0);
      sub_244CB3988((uint64_t)v317);
      unsigned __int8 v318 = 0;
      sub_244CB39B8(v176, 0, 0);
      sub_244CB3988((uint64_t)v320);
      unsigned __int8 v321 = 0;
      sub_244CB39B8(v177, 0, 0);
      sub_24483CBE8(&v308, a2, (uint64_t)&v303);
      *(_OWORD *)a3 = v303;
      *(void *)(a3 + 16) = v304;
      if (*(_DWORD *)a3) {
        goto LABEL_89;
      }
      uint64_t v24 = objc_opt_new();
      unsigned __int8 v179 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v178, v308);
      objc_msgSend_setMaxNumberOfChannels_(v24, v180, (uint64_t)v179);

      uint64_t v37 = objc_opt_new();
      unsigned __int8 v323 = v315;
      if (v315) {
        char v324 = v316;
      }
      sub_2446D1930((uint64_t)&v303, (uint64_t)&v308 + 8, &v323);
      while (sub_244BC4FE8((uint64_t)&v303))
      {
        char v182 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v181, v303);
        objc_msgSend_addObject_(v37, v183, (uint64_t)v182);
      }
      int v285 = DWORD2(v303);
      if (!DWORD2(v303) || DWORD2(v303) == 33)
      {
        objc_msgSend_setSupportedCodecs_(v24, v181, (uint64_t)v37);

        uint64_t v37 = objc_opt_new();
        unsigned __int8 v323 = v318;
        if (v318) {
          char v324 = v319;
        }
        sub_2446D1930((uint64_t)&v303, (uint64_t)v317, &v323);
        while (sub_244798ADC(&v303))
        {
          v290 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v289, v303);
          objc_msgSend_addObject_(v37, v291, (uint64_t)v290);
        }
        int v285 = DWORD2(v303);
        if (!DWORD2(v303) || DWORD2(v303) == 33)
        {
          objc_msgSend_setSupportedSampleRates_(v24, v289, (uint64_t)v37);

          uint64_t v37 = objc_opt_new();
          unsigned __int8 v323 = v321;
          if (v321) {
            char v324 = v322;
          }
          sub_2446D1930((uint64_t)&v303, (uint64_t)v320, &v323);
          while (sub_2447959C0((uint64_t)&v303))
          {
            v299 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v296, v303);
            objc_msgSend_addObject_(v37, v300, (uint64_t)v299);
          }
          int v285 = DWORD2(v303);
          if (!DWORD2(v303) || DWORD2(v303) == 33) {
            goto LABEL_139;
          }
        }
      }
      goto LABEL_140;
    case 8:
      LOBYTE(v308) = 0;
      sub_244CB3988((uint64_t)&v308 + 8);
      unsigned __int8 v315 = 0;
      sub_244CB39B8(v31, 0, 0);
      sub_244CB3988((uint64_t)v317);
      unsigned __int8 v318 = 0;
      sub_244CB39B8(v32, 0, 0);
      sub_244CB3988((uint64_t)v320);
      unsigned __int8 v321 = 0;
      sub_244CB39B8(v33, 0, 0);
      sub_24483CBE8(&v308, a2, (uint64_t)&v303);
      *(_OWORD *)a3 = v303;
      *(void *)(a3 + 16) = v304;
      if (*(_DWORD *)a3) {
        goto LABEL_89;
      }
      uint64_t v24 = objc_opt_new();
      uint64_t v35 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v34, v308);
      objc_msgSend_setMaxNumberOfChannels_(v24, v36, (uint64_t)v35);

      uint64_t v37 = objc_opt_new();
      unsigned __int8 v323 = v315;
      if (v315) {
        char v324 = v316;
      }
      sub_2446D1930((uint64_t)&v303, (uint64_t)&v308 + 8, &v323);
      while (sub_244BC4FE8((uint64_t)&v303))
      {
        int v39 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v38, v303);
        objc_msgSend_addObject_(v37, v40, (uint64_t)v39);
      }
      int v285 = DWORD2(v303);
      if (DWORD2(v303) && DWORD2(v303) != 33) {
        goto LABEL_140;
      }
      objc_msgSend_setSupportedCodecs_(v24, v38, (uint64_t)v37);

      uint64_t v37 = objc_opt_new();
      unsigned __int8 v323 = v318;
      if (v318) {
        char v324 = v319;
      }
      sub_2446D1930((uint64_t)&v303, (uint64_t)v317, &v323);
      while (sub_244798ADC(&v303))
      {
        v287 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v286, v303);
        objc_msgSend_addObject_(v37, v288, (uint64_t)v287);
      }
      int v285 = DWORD2(v303);
      if (DWORD2(v303))
      {
        if (DWORD2(v303) != 33) {
          goto LABEL_140;
        }
      }
      objc_msgSend_setSupportedSampleRates_(v24, v286, (uint64_t)v37);

      uint64_t v37 = objc_opt_new();
      unsigned __int8 v323 = v321;
      if (v321) {
        char v324 = v322;
      }
      sub_2446D1930((uint64_t)&v303, (uint64_t)v320, &v323);
      while (sub_2447959C0((uint64_t)&v303))
      {
        v297 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v296, v303);
        objc_msgSend_addObject_(v37, v298, (uint64_t)v297);
      }
      int v285 = DWORD2(v303);
      if (DWORD2(v303) && DWORD2(v303) != 33)
      {
LABEL_140:
        uint64_t v301 = v304;
        int v302 = HIDWORD(v303);
        *(_DWORD *)a3 = v285;
        *(_DWORD *)(a3 + 4) = v302;
        *(void *)(a3 + 8) = v301;
        *(void *)(a3 + 16) = v305;

        id v10 = 0;
      }
      else
      {
LABEL_139:
        objc_msgSend_setSupportedBitDepths_(v24, v296, (uint64_t)v37);

        id v10 = v24;
      }
      goto LABEL_141;
    case 9:
    case 24:
    case 25:
    case 46:
      LOBYTE(v303) = 0;
      sub_2447F5F24(a2, &v303, &v308);
      goto LABEL_88;
    case 10:
      sub_244CB3988((uint64_t)&v303);
      unsigned __int8 v306 = 0;
      sub_244CB39B8((uint64_t)&v303, 0, 0);
      sub_24484B03C((uint64_t)&v303, a2, (uint64_t)&v308);
      *(_OWORD *)a3 = v308;
      *(void *)(a3 + 16) = v309;
      if (*(_DWORD *)a3) {
        goto LABEL_89;
      }
      id v10 = (id)objc_opt_new();
      unsigned __int8 v323 = v306;
      if (v306) {
        char v324 = v307;
      }
      sub_244BC2920((uint64_t)&v308, (uint64_t)&v303, &v323);
      while (sub_244BC5380((uint64_t)&v308))
      {
        long long v41 = objc_opt_new();
        uint64_t v42 = objc_opt_new();
        objc_msgSend_setResolution_(v41, v43, (uint64_t)v42);

        uint64_t v45 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v44, (unsigned __int16)v308);
        unsigned __int8 v48 = objc_msgSend_resolution(v41, v46, v47);
        objc_msgSend_setWidth_(v48, v49, (uint64_t)v45);

        uint64_t v51 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v50, WORD1(v308));
        uint64_t v54 = objc_msgSend_resolution(v41, v52, v53);
        objc_msgSend_setHeight_(v54, v55, (uint64_t)v51);

        id v57 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v56, WORD2(v308));
        objc_msgSend_setMaxFrameRate_(v41, v58, (uint64_t)v57);

        uint64_t v60 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v59, BYTE6(v308));
        objc_msgSend_setImageCodec_(v41, v61, (uint64_t)v60);

        objc_msgSend_addObject_(v10, v62, (uint64_t)v41);
      }
      goto LABEL_52;
    case 12:
    case 39:
      LOWORD(v303) = 0;
      sub_244CB3F40(a2, &v303, (uint64_t)&v308);
      *(_OWORD *)a3 = v308;
      *(void *)(a3 + 16) = v309;
      if (*(_DWORD *)a3) {
        goto LABEL_89;
      }
      uint64_t v6 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v9, (unsigned __int16)v303);
      goto LABEL_91;
    case 14:
      sub_244CB3988((uint64_t)&v303);
      unsigned __int8 v306 = 0;
      sub_244CB39B8((uint64_t)&v303, 0, 0);
      sub_24484B03C((uint64_t)&v303, a2, (uint64_t)&v308);
      *(_OWORD *)a3 = v308;
      *(void *)(a3 + 16) = v309;
      if (*(_DWORD *)a3) {
        goto LABEL_89;
      }
      id v10 = (id)objc_opt_new();
      unsigned __int8 v323 = v306;
      if (v306) {
        char v324 = v307;
      }
      sub_2446D1930((uint64_t)&v308, (uint64_t)&v303, &v323);
      while (sub_2446D19A0((uint64_t)&v308))
      {
        long long v64 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v63, v308);
        objc_msgSend_addObject_(v10, v65, (uint64_t)v64);
      }
      goto LABEL_52;
    case 15:
      *(_DWORD *)((char *)&v303 + 3) = 0;
      LODWORD(v303) = 0;
      sub_24483C55C((uint64_t)&v303, a2, (uint64_t)&v308);
      *(_OWORD *)a3 = v308;
      *(void *)(a3 + 16) = v309;
      if (*(_DWORD *)a3) {
        goto LABEL_89;
      }
      id v10 = (id)objc_opt_new();
      int v66 = objc_opt_new();
      objc_msgSend_setResolution_(v10, v67, (uint64_t)v66);

      uint64_t v69 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v68, (unsigned __int16)v303);
      char v72 = objc_msgSend_resolution(v10, v70, v71);
      objc_msgSend_setWidth_(v72, v73, (uint64_t)v69);

      uint64_t v75 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v74, WORD1(v303));
      uint64_t v78 = objc_msgSend_resolution(v10, v76, v77);
      objc_msgSend_setHeight_(v78, v79, (uint64_t)v75);

      char v81 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v80, WORD2(v303));
      objc_msgSend_setMaxFrameRate_(v10, v82, (uint64_t)v81);

      uint64_t v24 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v83, BYTE6(v303));
      objc_msgSend_setImageCodec_(v10, v84, (uint64_t)v24);
      goto LABEL_141;
    case 16:
      sub_244CB3988((uint64_t)&v303);
      unsigned __int8 v306 = 0;
      sub_244CB39B8((uint64_t)&v303, 0, 0);
      sub_24484B03C((uint64_t)&v303, a2, (uint64_t)&v308);
      *(_OWORD *)a3 = v308;
      *(void *)(a3 + 16) = v309;
      if (*(_DWORD *)a3) {
        goto LABEL_89;
      }
      id v10 = (id)objc_opt_new();
      unsigned __int8 v323 = v306;
      if (v306) {
        char v324 = v307;
      }
      sub_2446D1930((uint64_t)&v308, (uint64_t)&v303, &v323);
      while (sub_2447959C0((uint64_t)&v308))
      {
        int v86 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v85, v308);
        objc_msgSend_addObject_(v10, v87, (uint64_t)v86);
      }
      goto LABEL_52;
    case 17:
      sub_244CB3988((uint64_t)&v303);
      unsigned __int8 v306 = 0;
      sub_244CB39B8((uint64_t)&v303, 0, 0);
      sub_24484B03C((uint64_t)&v303, a2, (uint64_t)&v308);
      *(_OWORD *)a3 = v308;
      *(void *)(a3 + 16) = v309;
      if (*(_DWORD *)a3) {
        goto LABEL_89;
      }
      id v10 = (id)objc_opt_new();
      unsigned __int8 v323 = v306;
      if (v306) {
        char v324 = v307;
      }
      sub_244BC5430((uint64_t)&v308, (uint64_t)&v303, &v323);
      while (sub_244BC54B0((uint64_t)&v308))
      {
        unsigned int v184 = objc_opt_new();
        uint64_t v186 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v185, (unsigned __int16)v308);
        objc_msgSend_setVideoStreamID_(v184, v187, (uint64_t)v186);

        uint64_t v189 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v188, BYTE2(v308));
        objc_msgSend_setStreamType_(v184, v190, (uint64_t)v189);

        long long v192 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v191, BYTE3(v308));
        objc_msgSend_setVideoCodec_(v184, v193, (uint64_t)v192);

        uint64_t v195 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v194, WORD2(v308));
        objc_msgSend_setMinFrameRate_(v184, v196, (uint64_t)v195);

        int v198 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v197, WORD3(v308));
        objc_msgSend_setMaxFrameRate_(v184, v199, (uint64_t)v198);

        uint64_t v200 = objc_opt_new();
        objc_msgSend_setMinResolution_(v184, v201, (uint64_t)v200);

        unsigned __int8 v203 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v202, WORD4(v308));
        unsigned __int8 v206 = objc_msgSend_minResolution(v184, v204, v205);
        objc_msgSend_setWidth_(v206, v207, (uint64_t)v203);

        uint64_t v209 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v208, WORD5(v308));
        v212 = objc_msgSend_minResolution(v184, v210, v211);
        objc_msgSend_setHeight_(v212, v213, (uint64_t)v209);

        uint64_t v214 = objc_opt_new();
        objc_msgSend_setMaxResolution_(v184, v215, (uint64_t)v214);

        char v217 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v216, WORD6(v308));
        unsigned __int8 v220 = objc_msgSend_maxResolution(v184, v218, v219);
        objc_msgSend_setWidth_(v220, v221, (uint64_t)v217);

        char v223 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v222, HIWORD(v308));
        v226 = objc_msgSend_maxResolution(v184, v224, v225);
        objc_msgSend_setHeight_(v226, v227, (uint64_t)v223);

        v229 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v228, v309);
        objc_msgSend_setMinBitRate_(v184, v230, (uint64_t)v229);

        v232 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v231, HIDWORD(v309));
        objc_msgSend_setMaxBitRate_(v184, v233, (uint64_t)v232);

        v235 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v234, (unsigned __int16)v310);
        objc_msgSend_setMinFragmentLen_(v184, v236, (uint64_t)v235);

        uint64_t v238 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v237, WORD1(v310));
        objc_msgSend_setMaxFragmentLen_(v184, v239, (uint64_t)v238);

        if (BYTE4(v310))
        {
          v241 = NSNumber;
          v242 = sub_2446D18C8((unsigned char *)&v310 + 4);
          v244 = objc_msgSend_numberWithBool_(v241, v243, *v242);
          objc_msgSend_setWatermarkEnabled_(v184, v245, (uint64_t)v244);
        }
        else
        {
          objc_msgSend_setWatermarkEnabled_(v184, v240, 0);
        }
        if (BYTE6(v310))
        {
          v247 = NSNumber;
          v248 = sub_2446D18C8((unsigned char *)&v310 + 6);
          v250 = objc_msgSend_numberWithBool_(v247, v249, *v248);
          objc_msgSend_setOsdEnabled_(v184, v251, (uint64_t)v250);
        }
        else
        {
          objc_msgSend_setOsdEnabled_(v184, v246, 0);
        }
        v253 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v252, v311);
        objc_msgSend_setReferenceCount_(v184, v254, (uint64_t)v253);

        objc_msgSend_addObject_(v10, v255, (uint64_t)v184);
      }
      if (!v312 || v312 == 33) {
        break;
      }
      uint64_t v294 = v313;
      int v295 = HIDWORD(v312);
      *(_DWORD *)a3 = v312;
      *(_DWORD *)(a3 + 4) = v295;
      *(void *)(a3 + 8) = v294;
      uint64_t v141 = v314;
      goto LABEL_119;
    case 18:
      sub_244CB3988((uint64_t)&v303);
      unsigned __int8 v306 = 0;
      sub_244CB39B8((uint64_t)&v303, 0, 0);
      sub_24484B03C((uint64_t)&v303, a2, (uint64_t)&v308);
      *(_OWORD *)a3 = v308;
      *(void *)(a3 + 16) = v309;
      if (*(_DWORD *)a3) {
        goto LABEL_89;
      }
      id v10 = (id)objc_opt_new();
      unsigned __int8 v323 = v306;
      if (v306) {
        char v324 = v307;
      }
      sub_244BC5568((uint64_t)&v308, (uint64_t)&v303, &v323);
      while (sub_244BC55E8((uint64_t)&v308))
      {
        v256 = objc_opt_new();
        v258 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v257, (unsigned __int16)v308);
        objc_msgSend_setAudioStreamID_(v256, v259, (uint64_t)v258);

        v261 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v260, BYTE2(v308));
        objc_msgSend_setStreamType_(v256, v262, (uint64_t)v261);

        v264 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v263, BYTE3(v308));
        objc_msgSend_setAudioCodec_(v256, v265, (uint64_t)v264);

        v267 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v266, BYTE4(v308));
        objc_msgSend_setChannelCount_(v256, v268, (uint64_t)v267);

        v270 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v269, DWORD2(v308));
        objc_msgSend_setSampleRate_(v256, v271, (uint64_t)v270);

        uint64_t v273 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v272, HIDWORD(v308));
        objc_msgSend_setBitRate_(v256, v274, (uint64_t)v273);

        v276 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v275, v309);
        objc_msgSend_setBitDepth_(v256, v277, (uint64_t)v276);

        v279 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v278, BYTE1(v309));
        objc_msgSend_setReferenceCount_(v256, v280, (uint64_t)v279);

        objc_msgSend_addObject_(v10, v281, (uint64_t)v256);
      }
      goto LABEL_96;
    case 19:
      sub_244CB3988((uint64_t)&v303);
      unsigned __int8 v306 = 0;
      sub_244CB39B8((uint64_t)&v303, 0, 0);
      sub_24484B03C((uint64_t)&v303, a2, (uint64_t)&v308);
      *(_OWORD *)a3 = v308;
      *(void *)(a3 + 16) = v309;
      if (*(_DWORD *)a3) {
        goto LABEL_89;
      }
      id v10 = (id)objc_opt_new();
      unsigned __int8 v323 = v306;
      if (v306) {
        char v324 = v307;
      }
      sub_244BC5694((uint64_t)&v308, (uint64_t)&v303, &v323);
      while (sub_244BC5718((uint64_t)&v308))
      {
        double v88 = objc_opt_new();
        uint64_t v90 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v89, (unsigned __int16)v308);
        objc_msgSend_setSnapshotStreamID_(v88, v91, (uint64_t)v90);

        int v93 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v92, BYTE2(v308));
        objc_msgSend_setImageCodec_(v88, v94, (uint64_t)v93);

        BOOL v96 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v95, WORD2(v308));
        objc_msgSend_setFrameRate_(v88, v97, (uint64_t)v96);

        uint64_t v99 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v98, DWORD2(v308));
        objc_msgSend_setBitRate_(v88, v100, (uint64_t)v99);

        char v101 = objc_opt_new();
        objc_msgSend_setMinResolution_(v88, v102, (uint64_t)v101);

        id v104 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v103, WORD6(v308));
        uint64_t v107 = objc_msgSend_minResolution(v88, v105, v106);
        objc_msgSend_setWidth_(v107, v108, (uint64_t)v104);

        uint64_t v110 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v109, HIWORD(v308));
        uint64_t v113 = objc_msgSend_minResolution(v88, v111, v112);
        objc_msgSend_setHeight_(v113, v114, (uint64_t)v110);

        uint64_t v115 = objc_opt_new();
        objc_msgSend_setMaxResolution_(v88, v116, (uint64_t)v115);

        uint64_t v118 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v117, (unsigned __int16)v309);
        uint64_t v121 = objc_msgSend_maxResolution(v88, v119, v120);
        objc_msgSend_setWidth_(v121, v122, (uint64_t)v118);

        unsigned __int8 v124 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v123, WORD1(v309));
        unsigned __int8 v127 = objc_msgSend_maxResolution(v88, v125, v126);
        objc_msgSend_setHeight_(v127, v128, (uint64_t)v124);

        uint64_t v130 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v129, BYTE4(v309));
        objc_msgSend_setQuality_(v88, v131, (uint64_t)v130);

        uint64_t v133 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v132, BYTE5(v309));
        objc_msgSend_setReferenceCount_(v88, v134, (uint64_t)v133);

        objc_msgSend_addObject_(v10, v135, (uint64_t)v88);
      }
LABEL_96:
      if (!v310 || v310 == 33) {
        break;
      }
      uint64_t v283 = v311;
      int v284 = HIDWORD(v310);
      *(_DWORD *)a3 = v310;
      *(_DWORD *)(a3 + 4) = v284;
      *(void *)(a3 + 8) = v283;
      uint64_t v141 = v312;
      goto LABEL_119;
    case 20:
      sub_244CB3988((uint64_t)&v303);
      unsigned __int8 v306 = 0;
      sub_244CB39B8((uint64_t)&v303, 0, 0);
      sub_24484B03C((uint64_t)&v303, a2, (uint64_t)&v308);
      *(_OWORD *)a3 = v308;
      *(void *)(a3 + 16) = v309;
      if (*(_DWORD *)a3) {
        goto LABEL_89;
      }
      id v10 = (id)objc_opt_new();
      unsigned __int8 v323 = v306;
      if (v306) {
        char v324 = v307;
      }
      sub_2446D1930((uint64_t)&v308, (uint64_t)&v303, &v323);
      while (sub_2446D19A0((uint64_t)&v308))
      {
        BOOL v137 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v136, v308);
        objc_msgSend_addObject_(v10, v138, (uint64_t)v137);
      }
LABEL_52:
      if (!DWORD2(v308) || DWORD2(v308) == 33) {
        break;
      }
      uint64_t v139 = v309;
      int v140 = HIDWORD(v308);
      *(_DWORD *)a3 = DWORD2(v308);
      *(_DWORD *)(a3 + 4) = v140;
      *(void *)(a3 + 8) = v139;
      uint64_t v141 = v310;
LABEL_119:
      *(void *)(a3 + 16) = v141;

LABEL_89:
      id v10 = 0;
      break;
    case 29:
      *(void *)&long long v303 = 0;
      sub_2447EF458(&v303, a2, (uint64_t)&v308);
      id v10 = 0;
      *(_OWORD *)a3 = v308;
      *(void *)(a3 + 16) = v309;
      if (*(_DWORD *)a3) {
        break;
      }
      id v10 = (id)objc_opt_new();
      uint64_t v143 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v142, (unsigned __int16)v303);
      objc_msgSend_setX1_(v10, v144, (uint64_t)v143);

      char v146 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v145, WORD1(v303));
      objc_msgSend_setY1_(v10, v147, (uint64_t)v146);

      int v149 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v148, WORD2(v303));
      objc_msgSend_setX2_(v10, v150, (uint64_t)v149);

      uint64_t v24 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v151, WORD3(v303));
      objc_msgSend_setY2_(v10, v152, (uint64_t)v24);
LABEL_141:

      break;
    case 45:
      LOBYTE(v303) = 0;
      sub_2446D1A48(a2, &v303, &v308);
LABEL_88:
      *(_OWORD *)a3 = v308;
      *(void *)(a3 + 16) = v309;
      if (*(_DWORD *)a3) {
        goto LABEL_89;
      }
      uint64_t v6 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v7, v303);
LABEL_91:
      id v10 = (id)v6;
      break;
    default:
      id v10 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 18024;
      break;
  }

  return v10;
}

void sub_244BBB788(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BBBB44(int a1, uint64_t a2, uint64_t a3)
{
  if (a1)
  {
    char v4 = 0;
    *(_DWORD *)a3 = 181;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "zap-generated/MTRAttributeTLVValueDecoder.mm";
    *(_DWORD *)(a3 + 16) = 18077;
  }
  else
  {
    sub_244CB3988((uint64_t)v40);
    unsigned __int8 v41 = 0;
    sub_244CB39B8((uint64_t)v40, 0, 0);
    sub_24484B03C((uint64_t)v40, a2, (uint64_t)&v32);
    char v4 = 0;
    *(_OWORD *)a3 = v32;
    *(void *)(a3 + 16) = v33;
    if (!*(_DWORD *)a3)
    {
      char v4 = objc_opt_new();
      v43[0] = v41;
      if (v41) {
        v43[1] = v42;
      }
      sub_244BC57C4((uint64_t)&v32, (uint64_t)v40, v43);
      while (sub_244BC5850((uint64_t)&v32))
      {
        uint64_t v7 = objc_opt_new();
        id v9 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v8, (unsigned __int16)v32);
        objc_msgSend_setId_(v7, v10, (uint64_t)v9);

        uint64_t v12 = objc_msgSend_numberWithUnsignedLongLong_(NSNumber, v11, *((uint64_t *)&v32 + 1));
        objc_msgSend_setPeerNodeID_(v7, v13, (uint64_t)v12);

        uint64_t v15 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v14, v33);
        objc_msgSend_setPeerFabricIndex_(v7, v16, (uint64_t)v15);

        uint64_t v18 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v17, BYTE1(v33));
        objc_msgSend_setStreamType_(v7, v19, (uint64_t)v18);

        if (BYTE4(v33))
        {
          uint64_t v21 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v20, WORD1(v33));
          objc_msgSend_setVideoStreamID_(v7, v22, (uint64_t)v21);
        }
        else
        {
          objc_msgSend_setVideoStreamID_(v7, v20, 0);
        }
        if (v34)
        {
          uint64_t v24 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v23, HIWORD(v33));
          objc_msgSend_setAudioStreamID_(v7, v25, (uint64_t)v24);
        }
        else
        {
          objc_msgSend_setAudioStreamID_(v7, v23, 0);
        }
        uint64_t v27 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v26, v35);
        objc_msgSend_setMetadataOptions_(v7, v28, (uint64_t)v27);

        objc_msgSend_addObject_(v4, v29, (uint64_t)v7);
      }
      if (v36 && v36 != 33)
      {
        uint64_t v30 = v38;
        int v31 = v37;
        *(_DWORD *)a3 = v36;
        *(_DWORD *)(a3 + 4) = v31;
        *(void *)(a3 + 8) = v30;
        *(void *)(a3 + 16) = v39;

        char v4 = 0;
      }
    }
  }

  return v4;
}

void sub_244BBBDD8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BBBE1C(int a1, uint64_t a2, uint64_t a3)
{
  if (a1)
  {
    char v4 = 0;
    *(_DWORD *)a3 = 181;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "zap-generated/MTRAttributeTLVValueDecoder.mm";
    *(_DWORD *)(a3 + 16) = 18130;
  }
  else
  {
    sub_244CB3988((uint64_t)v40);
    unsigned __int8 v41 = 0;
    sub_244CB39B8((uint64_t)v40, 0, 0);
    sub_24484B03C((uint64_t)v40, a2, (uint64_t)&v32);
    char v4 = 0;
    *(_OWORD *)a3 = v32;
    *(void *)(a3 + 16) = v33;
    if (!*(_DWORD *)a3)
    {
      char v4 = objc_opt_new();
      v43[0] = v41;
      if (v41) {
        v43[1] = v42;
      }
      sub_244BC57C4((uint64_t)&v32, (uint64_t)v40, v43);
      while (sub_244BC5850((uint64_t)&v32))
      {
        uint64_t v7 = objc_opt_new();
        id v9 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v8, (unsigned __int16)v32);
        objc_msgSend_setId_(v7, v10, (uint64_t)v9);

        uint64_t v12 = objc_msgSend_numberWithUnsignedLongLong_(NSNumber, v11, *((uint64_t *)&v32 + 1));
        objc_msgSend_setPeerNodeID_(v7, v13, (uint64_t)v12);

        uint64_t v15 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v14, v33);
        objc_msgSend_setPeerFabricIndex_(v7, v16, (uint64_t)v15);

        uint64_t v18 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v17, BYTE1(v33));
        objc_msgSend_setStreamType_(v7, v19, (uint64_t)v18);

        if (BYTE4(v33))
        {
          uint64_t v21 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v20, WORD1(v33));
          objc_msgSend_setVideoStreamID_(v7, v22, (uint64_t)v21);
        }
        else
        {
          objc_msgSend_setVideoStreamID_(v7, v20, 0);
        }
        if (v34)
        {
          uint64_t v24 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v23, HIWORD(v33));
          objc_msgSend_setAudioStreamID_(v7, v25, (uint64_t)v24);
        }
        else
        {
          objc_msgSend_setAudioStreamID_(v7, v23, 0);
        }
        uint64_t v27 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v26, v35);
        objc_msgSend_setMetadataOptions_(v7, v28, (uint64_t)v27);

        objc_msgSend_addObject_(v4, v29, (uint64_t)v7);
      }
      if (v36 && v36 != 33)
      {
        uint64_t v30 = v38;
        int v31 = v37;
        *(_DWORD *)a3 = v36;
        *(_DWORD *)(a3 + 4) = v31;
        *(void *)(a3 + 8) = v30;
        *(void *)(a3 + 16) = v39;

        char v4 = 0;
      }
    }
  }

  return v4;
}

void sub_244BBC0B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BBC0F4(int a1, uint64_t a2, uint64_t a3)
{
  if (a1 == 2)
  {
    v32[0] = 0;
    sub_244CB3C0C(a2, v32, (uint64_t)&v26);
    *(_OWORD *)a3 = v26;
    *(void *)(a3 + 16) = v27;
    if (!*(_DWORD *)a3)
    {
      uint64_t v21 = objc_msgSend_numberWithBool_(NSNumber, v20, v32[0]);
LABEL_15:
      id v5 = (void *)v21;
      goto LABEL_23;
    }
LABEL_22:
    id v5 = 0;
    goto LABEL_23;
  }
  if (a1 == 1)
  {
    v32[0] = 0;
    sub_244CB3E8C(a2, v32, (uint64_t)&v26);
    *(_OWORD *)a3 = v26;
    *(void *)(a3 + 16) = v27;
    if (!*(_DWORD *)a3)
    {
      uint64_t v21 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v22, v32[0]);
      goto LABEL_15;
    }
    goto LABEL_22;
  }
  if (a1)
  {
    id v5 = 0;
    *(_DWORD *)a3 = 181;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "zap-generated/MTRAttributeTLVValueDecoder.mm";
    *(_DWORD *)(a3 + 16) = 18197;
  }
  else
  {
    sub_244CB3988((uint64_t)v32);
    unsigned __int8 v33 = 0;
    sub_244CB39B8((uint64_t)v32, 0, 0);
    sub_24484B03C((uint64_t)v32, a2, (uint64_t)&v26);
    id v5 = 0;
    *(_OWORD *)a3 = v26;
    *(void *)(a3 + 16) = v27;
    if (!*(_DWORD *)a3)
    {
      id v5 = objc_opt_new();
      v35[0] = v33;
      if (v33) {
        v35[1] = v34;
      }
      sub_244BC2A44((uint64_t)&v26, (uint64_t)v32, v35);
      while (sub_244BC5900((uint64_t)&v26))
      {
        uint64_t v6 = objc_opt_new();
        id v8 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v7, v26);
        objc_msgSend_setChimeID_(v6, v9, (uint64_t)v8);

        uint64_t v10 = *((void *)&v26 + 1);
        uint64_t v11 = v27;
        id v12 = [NSString alloc];
        uint64_t v14 = objc_msgSend_initWithBytes_length_encoding_(v12, v13, v10, v11, 4);
        objc_msgSend_setName_(v6, v15, (uint64_t)v14);

        uint64_t v18 = objc_msgSend_name(v6, v16, v17);

        if (!v18)
        {
          *(_OWORD *)a3 = xmmword_26519AB78;
          *(void *)(a3 + 16) = 18155;

          goto LABEL_21;
        }
        objc_msgSend_addObject_(v5, v19, (uint64_t)v6);
      }
      if (v28 && v28 != 33)
      {
        uint64_t v23 = v30;
        int v24 = v29;
        *(_DWORD *)a3 = v28;
        *(_DWORD *)(a3 + 4) = v24;
        *(void *)(a3 + 8) = v23;
        *(void *)(a3 + 16) = v31;
LABEL_21:

        goto LABEL_22;
      }
    }
  }
LABEL_23:

  return v5;
}

void sub_244BBC3A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BBC3D4(int a1, uint64_t a2, uint64_t a3)
{
  if (a1 == 1)
  {
    sub_244CB3988((uint64_t)&v116);
    unsigned __int8 v121 = 0;
    sub_244CB39B8((uint64_t)&v116, 0, 0);
    sub_24484B03C((uint64_t)&v116, a2, (uint64_t)&v123);
    *(_OWORD *)a3 = v123;
    *(void *)(a3 + 16) = v124;
    if (*(_DWORD *)a3)
    {
LABEL_57:
      uint64_t v6 = 0;
      goto LABEL_58;
    }
    uint64_t v6 = objc_opt_new();
    v147[0] = v121;
    if (v121) {
      v147[1] = v122;
    }
    sub_244BC5CB0((uint64_t)&v123, (uint64_t)&v116, v147);
    while (sub_244BC59F4((uint64_t)&v123))
    {
      id v9 = objc_opt_new();
      long long v56 = v123;
      id v57 = [NSString alloc];
      id v59 = objc_msgSend_initWithBytes_length_encoding_(v57, v58, v56, *((void *)&v56 + 1), 4);
      objc_msgSend_setUniqueLocationID_(v9, v60, (uint64_t)v59);

      uint64_t v63 = objc_msgSend_uniqueLocationID(v9, v61, v62);

      if (!v63)
      {
        uint64_t v110 = &xmmword_26519ABC0;
        goto LABEL_54;
      }
      long long v64 = objc_opt_new();
      objc_msgSend_setLocationDescriptor_(v9, v65, (uint64_t)v64);

      uint64_t v66 = v124;
      uint64_t v67 = v125;
      id v68 = [NSString alloc];
      unsigned __int8 v70 = objc_msgSend_initWithBytes_length_encoding_(v68, v69, v66, v67, 4);
      unsigned __int8 v73 = objc_msgSend_locationDescriptor(v9, v71, v72);
      objc_msgSend_setLocationName_(v73, v74, (uint64_t)v70);

      uint64_t v77 = objc_msgSend_locationDescriptor(v9, v75, v76);
      BOOL v80 = objc_msgSend_locationName(v77, v78, v79);

      if (!v80)
      {
        uint64_t v110 = &xmmword_26519ABD8;
        goto LABEL_54;
      }
      if (v127)
      {
        uint64_t v83 = objc_msgSend_numberWithShort_(NSNumber, v81, v126);
        int v86 = objc_msgSend_locationDescriptor(v9, v84, v85);
        objc_msgSend_setFloorNumber_(v86, v87, (uint64_t)v83);
      }
      else
      {
        uint64_t v83 = objc_msgSend_locationDescriptor(v9, v81, v82);
        objc_msgSend_setFloorNumber_(v83, v88, 0);
      }

      if (v129)
      {
        long long v91 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v89, v128);
        uint64_t v94 = objc_msgSend_locationDescriptor(v9, v92, v93);
        objc_msgSend_setAreaType_(v94, v95, (uint64_t)v91);
      }
      else
      {
        long long v91 = objc_msgSend_locationDescriptor(v9, v89, v90);
        objc_msgSend_setAreaType_(v91, v96, 0);
      }

      uint64_t v98 = objc_msgSend_numberWithUnsignedLongLong_(NSNumber, v97, v130);
      objc_msgSend_setLocationDescriptorLastEdit_(v9, v99, (uint64_t)v98);

      char v101 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v100, v131[0]);
      objc_msgSend_setFabricIndex_(v9, v102, (uint64_t)v101);

      objc_msgSend_addObject_(v6, v103, (uint64_t)v9);
    }
    if (v132 && v132 != 33)
    {
      uint64_t v104 = v134;
      int v105 = v133;
      *(_DWORD *)a3 = v132;
      *(_DWORD *)(a3 + 4) = v105;
      *(void *)(a3 + 8) = v104;
      uint64_t v106 = v135;
      goto LABEL_51;
    }
  }
  else
  {
    if (a1)
    {
      uint64_t v6 = 0;
      *(_DWORD *)a3 = 181;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTRAttributeTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 18344;
      goto LABEL_58;
    }
    sub_244CB3988((uint64_t)v147);
    char v148 = 0;
    sub_244CB39B8(v5, 0, 0);
    sub_24484B03C((uint64_t)v147, a2, (uint64_t)&v123);
    *(_OWORD *)a3 = v123;
    *(void *)(a3 + 16) = v124;
    if (*(_DWORD *)a3) {
      goto LABEL_57;
    }
    uint64_t v6 = objc_opt_new();
    LOBYTE(v116) = v148;
    if (v148) {
      BYTE1(v116) = v149;
    }
    sub_244BC5A3C((uint64_t)&v123, (uint64_t)v147, (unsigned __int8 *)&v116);
    while (2)
    {
      if (sub_244BC59AC((uint64_t)&v123))
      {
        uint64_t v7 = objc_opt_new();
        id v9 = v7;
        if ((_BYTE)v123)
        {
          uint64_t v10 = (uint64_t *)sub_2446D18A4(&v123);
          uint64_t v11 = *v10;
          uint64_t v12 = v10[1];
          id v13 = [NSString alloc];
          uint64_t v15 = objc_msgSend_initWithBytes_length_encoding_(v13, v14, v11, v12, 4);
          objc_msgSend_setDeviceName_(v9, v16, (uint64_t)v15);

          uint64_t v19 = objc_msgSend_deviceName(v9, v17, v18);

          if (!v19)
          {
            uint64_t v110 = &xmmword_26519AB90;
LABEL_54:
            *(_OWORD *)a3 = *v110;
            *(void *)(a3 + 16) = *((void *)v110 + 2);
            goto LABEL_55;
          }
        }
        else
        {
          objc_msgSend_setDeviceName_(v7, v8, 0);
        }
        if ((_BYTE)v125)
        {
          uint64_t v21 = NSNumber;
          id v22 = (uint64_t *)sub_2446F7170(&v125);
          int v24 = objc_msgSend_numberWithUnsignedLongLong_(v21, v23, *v22);
          objc_msgSend_setDeviceNameLastEdit_(v9, v25, (uint64_t)v24);
        }
        else
        {
          objc_msgSend_setDeviceNameLastEdit_(v9, v20, 0);
        }
        uint64_t v27 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v26, (unsigned __int16)v130);
        objc_msgSend_setBridgedEndpoint_(v9, v28, (uint64_t)v27);

        uint64_t v30 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v29, WORD1(v130));
        objc_msgSend_setOriginalEndpoint_(v9, v31, (uint64_t)v30);

        long long v32 = objc_opt_new();
        unsigned __int8 v150 = v136;
        if (v136) {
          char v151 = v137;
        }
        sub_244BBFBE4((uint64_t)&v116, (uint64_t)v131, &v150);
        while (sub_244BBFC5C((uint64_t)&v116))
        {
          unsigned __int8 v34 = objc_opt_new();
          int v36 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v35, v116);
          objc_msgSend_setDeviceType_(v34, v37, (uint64_t)v36);

          uint64_t v39 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v38, WORD2(v116));
          objc_msgSend_setRevision_(v34, v40, (uint64_t)v39);

          objc_msgSend_addObject_(v32, v41, (uint64_t)v34);
        }
        if (v117 && v117 != 33)
        {
          uint64_t v111 = v118;
          int v112 = HIDWORD(v117);
          *(_DWORD *)a3 = v117;
          *(_DWORD *)(a3 + 4) = v112;
          *(void *)(a3 + 8) = v111;
          uint64_t v113 = v119;
        }
        else
        {
          objc_msgSend_setDeviceTypes_(v9, v33, (uint64_t)v32);

          long long v32 = objc_opt_new();
          unsigned __int8 v150 = v139;
          if (v139) {
            char v151 = v140;
          }
          sub_244797544((uint64_t)&v116, (uint64_t)&v138, &v150);
          while (sub_2447975B4((uint64_t)&v116))
          {
            uint64_t v43 = v116;
            uint64_t v44 = v117;
            id v45 = [NSString alloc];
            unsigned __int8 v48 = objc_msgSend_initWithBytes_length_encoding_(v45, v46, v43, v44, 4);
            if (!v48)
            {
              *(_OWORD *)a3 = xmmword_26519ABA8;
              *(void *)(a3 + 16) = 18262;
              goto LABEL_47;
            }
            objc_msgSend_addObject_(v32, v47, (uint64_t)v48);
          }
          if (!v118 || v118 == 33)
          {
            objc_msgSend_setUniqueLocationIDs_(v9, v42, (uint64_t)v32);

            uint64_t v50 = objc_msgSend_numberWithUnsignedLongLong_(NSNumber, v49, v141);
            objc_msgSend_setUniqueLocationIDsLastEdit_(v9, v51, (uint64_t)v50);

            uint64_t v53 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v52, v142);
            objc_msgSend_setFabricIndex_(v9, v54, (uint64_t)v53);

            objc_msgSend_addObject_(v6, v55, (uint64_t)v9);
            continue;
          }
          uint64_t v114 = v119;
          int v115 = HIDWORD(v118);
          *(_DWORD *)a3 = v118;
          *(_DWORD *)(a3 + 4) = v115;
          *(void *)(a3 + 8) = v114;
          uint64_t v113 = v120;
        }
        *(void *)(a3 + 16) = v113;
LABEL_47:

LABEL_55:
LABEL_56:

        goto LABEL_57;
      }
      break;
    }
    if (v143 && v143 != 33)
    {
      uint64_t v108 = v145;
      int v109 = v144;
      *(_DWORD *)a3 = v143;
      *(_DWORD *)(a3 + 4) = v109;
      *(void *)(a3 + 8) = v108;
      uint64_t v106 = v146;
LABEL_51:
      *(void *)(a3 + 16) = v106;
      goto LABEL_56;
    }
  }
LABEL_58:

  return v6;
}

void sub_244BBCB50(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BBCC3C(int a1, uint64_t a2, uint64_t a3)
{
  if (a1)
  {
    char v4 = 0;
    *(_DWORD *)a3 = 181;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "zap-generated/MTRAttributeTLVValueDecoder.mm";
    *(_DWORD *)(a3 + 16) = 18367;
  }
  else
  {
    unsigned int v9 = 0;
    sub_24484B2E8(a2, &v9, &v7);
    *(_OWORD *)a3 = v7;
    *(void *)(a3 + 16) = v8;
    if (*(_DWORD *)a3)
    {
      char v4 = 0;
    }
    else
    {
      char v4 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v5, v9);
    }
  }

  return v4;
}

id sub_244BBCCE8(int a1, uint64_t a2, uint64_t a3)
{
  if (a1 > 254)
  {
    if (a1 < 0x4000)
    {
      switch(a1)
      {
        case 255:
LABEL_21:
          LOBYTE(v559) = 0;
          sub_244CB3C0C(a2, (char *)&v559, (uint64_t)v564);
          *(_OWORD *)a3 = *(_OWORD *)v564;
          *(void *)(a3 + 16) = *(void *)&v564[16];
          if (*(_DWORD *)a3)
          {
LABEL_357:
            uint64_t v6 = 0;
            goto LABEL_358;
          }
LABEL_258:
          uint64_t v7 = objc_msgSend_numberWithBool_(NSNumber, v10, v559);
          break;
        case 12288:
LABEL_23:
          LOBYTE(v559) = 0;
          sub_244CB3E8C(a2, &v559, (uint64_t)v564);
LABEL_235:
          *(_OWORD *)a3 = *(_OWORD *)v564;
          *(void *)(a3 + 16) = *(void *)&v564[16];
          if (*(_DWORD *)a3) {
            goto LABEL_357;
          }
LABEL_262:
          uint64_t v7 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v11, v559);
          break;
        case 12289:
LABEL_20:
          LODWORD(v559) = 0;
          sub_244CB3FB0(a2, &v559, (uint64_t)v564);
LABEL_180:
          *(_OWORD *)a3 = *(_OWORD *)v564;
          *(void *)(a3 + 16) = *(void *)&v564[16];
          if (*(_DWORD *)a3) {
            goto LABEL_357;
          }
LABEL_255:
          uint64_t v7 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v9, v559);
          break;
        default:
LABEL_299:
          uint64_t v6 = 0;
          *(_DWORD *)a3 = 181;
          *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework"
                                "/CHIP/zap-generated/MTRAttributeTLVValueDecoder.mm";
          *(_DWORD *)(a3 + 16) = 19933;
          goto LABEL_358;
      }
LABEL_267:
      uint64_t v6 = (void *)v7;
      goto LABEL_358;
    }
    switch(a1)
    {
      case 16384:
        LOWORD(v559) = 0;
        sub_244800BF4(a2, (char *)&v559, v564);
        uint64_t v6 = 0;
        *(_OWORD *)a3 = *(_OWORD *)v564;
        *(void *)(a3 + 16) = *(void *)&v564[16];
        if (!*(_DWORD *)a3 && BYTE1(v559)) {
          goto LABEL_258;
        }
        goto LABEL_358;
      case 16385:
        LOWORD(v559) = 0;
        sub_24484981C(a2, &v559, v564);
        goto LABEL_260;
      case 16386:
        LOBYTE(v559) = 0;
        BYTE2(v559) = 0;
        sub_2448498AC(a2, (uint64_t)&v559, v564);
        goto LABEL_264;
      case 16387:
        LOBYTE(v559) = 0;
        BYTE4(v559) = 0;
        sub_2447EFD3C(a2, (uint64_t)&v559, v564);
        goto LABEL_253;
      case 16388:
        LOBYTE(v559) = 0;
        BYTE8(v559) = 0;
        sub_244849940(a2, (uint64_t)&v559, v564);
        goto LABEL_9;
      case 16389:
        LOWORD(v559) = 0;
        sub_2447F15BC(a2, (unsigned __int8 *)&v559, (uint64_t)v564);
LABEL_260:
        uint64_t v6 = 0;
        *(_OWORD *)a3 = *(_OWORD *)v564;
        *(void *)(a3 + 16) = *(void *)&v564[16];
        if (!*(_DWORD *)a3 && BYTE1(v559)) {
          goto LABEL_262;
        }
        goto LABEL_358;
      case 16390:
        LOBYTE(v559) = 0;
        BYTE2(v559) = 0;
        sub_2447EF9E0(a2, (__int16 *)&v559, (uint64_t)v564);
LABEL_264:
        uint64_t v6 = 0;
        *(_OWORD *)a3 = *(_OWORD *)v564;
        *(void *)(a3 + 16) = *(void *)&v564[16];
        if (!*(_DWORD *)a3 && BYTE2(v559)) {
          goto LABEL_266;
        }
        goto LABEL_358;
      case 16391:
      case 16392:
        LOBYTE(v559) = 0;
        BYTE4(v559) = 0;
        sub_2447F4140(a2, (uint64_t)&v559, (uint64_t)v564);
LABEL_253:
        uint64_t v6 = 0;
        *(_OWORD *)a3 = *(_OWORD *)v564;
        *(void *)(a3 + 16) = *(void *)&v564[16];
        if (!*(_DWORD *)a3 && BYTE4(v559)) {
          goto LABEL_255;
        }
        goto LABEL_358;
      case 16393:
      case 16394:
      case 16395:
      case 16396:
        LOBYTE(v559) = 0;
        BYTE8(v559) = 0;
        sub_2447F5E48(a2, (uint64_t)&v559, (uint64_t)v564);
LABEL_9:
        uint64_t v6 = 0;
        *(_OWORD *)a3 = *(_OWORD *)v564;
        *(void *)(a3 + 16) = *(void *)&v564[16];
        if (*(_DWORD *)a3 || !BYTE8(v559)) {
          goto LABEL_358;
        }
LABEL_11:
        uint64_t v7 = objc_msgSend_numberWithUnsignedLongLong_(NSNumber, v5, v559);
        goto LABEL_267;
      case 16397:
      case 16423:
        LOWORD(v559) = 0;
        sub_244802BFC(a2, (unsigned __int8 *)&v559, (uint64_t)v564);
        uint64_t v6 = 0;
        *(_OWORD *)a3 = *(_OWORD *)v564;
        *(void *)(a3 + 16) = *(void *)&v564[16];
        if (*(_DWORD *)a3 || !BYTE1(v559)) {
          goto LABEL_358;
        }
LABEL_38:
        uint64_t v7 = objc_msgSend_numberWithChar_(NSNumber, v14, (char)v559);
        goto LABEL_267;
      case 16398:
      case 16425:
        LOBYTE(v559) = 0;
        BYTE2(v559) = 0;
        sub_2447F003C(a2, (__int16 *)&v559, (uint64_t)v564);
        uint64_t v6 = 0;
        *(_OWORD *)a3 = *(_OWORD *)v564;
        *(void *)(a3 + 16) = *(void *)&v564[16];
        if (*(_DWORD *)a3 || !BYTE2(v559)) {
          goto LABEL_358;
        }
LABEL_35:
        uint64_t v7 = objc_msgSend_numberWithShort_(NSNumber, v13, (__int16)v559);
        goto LABEL_267;
      case 16399:
      case 16400:
        LOBYTE(v559) = 0;
        BYTE4(v559) = 0;
        sub_2447FF66C(a2, (uint64_t)&v559, (uint64_t)v564);
        uint64_t v6 = 0;
        *(_OWORD *)a3 = *(_OWORD *)v564;
        *(void *)(a3 + 16) = *(void *)&v564[16];
        if (*(_DWORD *)a3 || !BYTE4(v559)) {
          goto LABEL_358;
        }
LABEL_42:
        uint64_t v7 = objc_msgSend_numberWithInt_(NSNumber, v16, v559);
        goto LABEL_267;
      case 16401:
      case 16402:
      case 16403:
      case 16404:
        LOBYTE(v559) = 0;
        BYTE8(v559) = 0;
        sub_2447FB200(a2, (uint64_t)&v559, (uint64_t)v564);
        uint64_t v6 = 0;
        *(_OWORD *)a3 = *(_OWORD *)v564;
        *(void *)(a3 + 16) = *(void *)&v564[16];
        if (*(_DWORD *)a3 || !BYTE8(v559)) {
          goto LABEL_358;
        }
LABEL_16:
        uint64_t v7 = objc_msgSend_numberWithLongLong_(NSNumber, v8, v559);
        goto LABEL_267;
      case 16405:
      case 16422:
        LOWORD(v559) = 0;
        sub_2447F15BC(a2, (unsigned __int8 *)&v559, (uint64_t)v564);
        goto LABEL_246;
      case 16406:
      case 16424:
        LOBYTE(v559) = 0;
        BYTE2(v559) = 0;
        sub_2447EF9E0(a2, (__int16 *)&v559, (uint64_t)v564);
        uint64_t v6 = 0;
        *(_OWORD *)a3 = *(_OWORD *)v564;
        *(void *)(a3 + 16) = *(void *)&v564[16];
        if (*(_DWORD *)a3 || !BYTE2(v559)) {
          goto LABEL_358;
        }
LABEL_266:
        uint64_t v7 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v12, (unsigned __int16)v559);
        goto LABEL_267;
      case 16407:
        LOBYTE(v559) = 0;
        BYTE4(v559) = 0;
        sub_24482E57C(a2, (uint64_t)&v559, v564);
        uint64_t v6 = 0;
        HIDWORD(v19) = *(_DWORD *)&v564[4];
        *(_OWORD *)a3 = *(_OWORD *)v564;
        *(void *)(a3 + 16) = *(void *)&v564[16];
        if (*(_DWORD *)a3 || !BYTE4(v559)) {
          goto LABEL_358;
        }
LABEL_280:
        LODWORD(v19) = v559;
        uint64_t v7 = objc_msgSend_numberWithFloat_(NSNumber, v17, v18, v19);
        goto LABEL_267;
      case 16408:
        LOBYTE(v559) = 0;
        BYTE8(v559) = 0;
        sub_2448499D4(a2, (uint64_t)&v559, v564);
        uint64_t v6 = 0;
        *(_OWORD *)a3 = *(_OWORD *)v564;
        *(void *)(a3 + 16) = *(void *)&v564[16];
        if (*(_DWORD *)a3 || !BYTE8(v559)) {
          goto LABEL_358;
        }
LABEL_277:
        uint64_t v7 = objc_msgSend_numberWithDouble_(NSNumber, v342, v343, *(double *)&v559);
        goto LABEL_267;
      case 16409:
        v564[0] = 0;
        v564[16] = 0;
        sub_2447FFFFC(a2, (uint64_t)v564, &v559);
        uint64_t v6 = 0;
        *(_OWORD *)a3 = v559;
        *(void *)(a3 + 16) = v560;
        if (*(_DWORD *)a3 || !v564[16]) {
          goto LABEL_358;
        }
        objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v488, *(uint64_t *)v564, *(void *)&v564[8]);
        uint64_t v7 = LABEL_244:;
        goto LABEL_267;
      case 16414:
        v564[0] = 0;
        v564[16] = 0;
        sub_244803C58(a2, (uint64_t)v564, &v559);
        uint64_t v6 = 0;
        *(_OWORD *)a3 = v559;
        *(void *)(a3 + 16) = v560;
        if (!*(_DWORD *)a3)
        {
          if (v564[16])
          {
            uint64_t v6 = sub_244BBFB94(*(uint64_t *)v564, *(uint64_t *)&v564[8]);
            if (!v6)
            {
              *(_OWORD *)a3 = xmmword_26519AD10;
              *(void *)(a3 + 16) = 19741;
            }
          }
        }
        goto LABEL_358;
      case 16420:
        LOWORD(v559) = 0;
        sub_24480CBD0(a2, (unsigned __int8 *)&v559, (uint64_t)v564);
        goto LABEL_246;
      case 16421:
        v564[0] = 0;
        v569[0] = 0;
        sub_244843FB4(a2, (uint64_t)v564, &v559);
        *(_OWORD *)a3 = v559;
        *(void *)(a3 + 16) = v560;
        if (*(_DWORD *)a3) {
          goto LABEL_357;
        }
        if (!v569[0]) {
          goto LABEL_309;
        }
        char v333 = objc_opt_new();
        if (!v569[0]) {
          goto LABEL_362;
        }
        v498 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v497, v564[0]);
        objc_msgSend_setA_(v333, v499, (uint64_t)v498);

        if (!v569[0]) {
          goto LABEL_362;
        }
        v501 = objc_msgSend_numberWithBool_(NSNumber, v500, v564[1]);
        objc_msgSend_setB_(v333, v502, (uint64_t)v501);

        if (!v569[0]) {
          goto LABEL_362;
        }
        v504 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v503, v564[2]);
        objc_msgSend_setC_(v333, v505, (uint64_t)v504);

        if (!v569[0]) {
          goto LABEL_362;
        }
        v507 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v506, *(uint64_t *)&v564[8], *(void *)&v564[16]);
        objc_msgSend_setD_(v333, v508, (uint64_t)v507);

        if (!v569[0]) {
          goto LABEL_362;
        }
        v509 = sub_244BBFB94(v565, *((uint64_t *)&v565 + 1));
        objc_msgSend_setE_(v333, v510, (uint64_t)v509);

        uint64_t v6 = objc_msgSend_e(v333, v511, v512);

        if (!v6)
        {
          v538 = &xmmword_26519AD28;
          goto LABEL_331;
        }
        if (!v569[0]) {
          goto LABEL_362;
        }
        v514 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v513, v566);
        objc_msgSend_setF_(v333, v515, (uint64_t)v514);

        if (!v569[0]) {
          goto LABEL_362;
        }
        LODWORD(v518) = HIDWORD(v566);
        v519 = objc_msgSend_numberWithFloat_(NSNumber, v516, v517, v518);
        objc_msgSend_setG_(v333, v520, (uint64_t)v519);

        if (!v569[0]
          || (objc_msgSend_numberWithDouble_(NSNumber, v521, v522, v567),
              v523 = objc_claimAutoreleasedReturnValue(),
              objc_msgSend_setH_(v333, v524, (uint64_t)v523),
              v523,
              !v569[0]))
        {
LABEL_362:
          sub_24479484C();
        }
        if ((_BYTE)v568)
        {
          v526 = NSNumber;
          v527 = sub_24479DC2C(&v568);
          v529 = objc_msgSend_numberWithUnsignedChar_(v526, v528, *v527);
          objc_msgSend_setI_(v333, v530, (uint64_t)v529);
          goto LABEL_344;
        }
        objc_msgSend_setI_(v333, v525, 0);
        goto LABEL_347;
      case 16426:
LABEL_48:
        LOBYTE(v559) = 0;
        sub_244CB3E8C(a2, &v559, (uint64_t)v564);
        *(_OWORD *)a3 = *(_OWORD *)v564;
        *(void *)(a3 + 16) = *(void *)&v564[16];
        if (!*(_DWORD *)a3) {
          goto LABEL_262;
        }
        goto LABEL_357;
      case 16435:
        LOWORD(v559) = 0;
        sub_2447F21B8(a2, (unsigned __int8 *)&v559, (uint64_t)v564);
LABEL_246:
        uint64_t v6 = 0;
        *(_OWORD *)a3 = *(_OWORD *)v564;
        *(void *)(a3 + 16) = *(void *)&v564[16];
        if (*(_DWORD *)a3 || !BYTE1(v559)) {
          goto LABEL_358;
        }
        goto LABEL_262;
      case 16436:
        v564[0] = 0;
        BYTE8(v565) = 0;
        sub_244849A68(a2, (uint64_t)v564, &v559);
        *(_OWORD *)a3 = v559;
        *(void *)(a3 + 16) = v560;
        if (*(_DWORD *)a3) {
          goto LABEL_357;
        }
        if (BYTE8(v565))
        {
          char v333 = objc_opt_new();
          if (!BYTE8(v565)) {
            goto LABEL_366;
          }
          v489 = sub_244BBFB94(*(uint64_t *)v564, *(uint64_t *)&v564[8]);
          objc_msgSend_setName_(v333, v490, (uint64_t)v489);

          uint64_t v6 = objc_msgSend_name(v333, v491, v492);

          if (!v6)
          {
            v538 = &xmmword_26519AD40;
LABEL_331:
            *(_OWORD *)a3 = *v538;
            *(void *)(a3 + 16) = *((void *)v538 + 2);
            goto LABEL_349;
          }
          if (!BYTE8(v565)) {
            goto LABEL_366;
          }
          if (v564[20])
          {
            v494 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v493, *(unsigned int *)&v564[16]);
            objc_msgSend_setMyBitmap_(v333, v495, (uint64_t)v494);
          }
          else
          {
            objc_msgSend_setMyBitmap_(v333, v493, 0);
          }
          if (!BYTE8(v565)) {
            goto LABEL_366;
          }
          if ((_BYTE)v565 && sub_24479DC2C(&v565)[1])
          {
            if (BYTE8(v565))
            {
              v550 = NSNumber;
              v551 = sub_24479DC2C(&v565);
              if (v551[1])
              {
                v529 = objc_msgSend_numberWithUnsignedChar_(v550, v552, *v551);
                objc_msgSend_setMyEnum_(v333, v553, (uint64_t)v529);
LABEL_344:

                goto LABEL_347;
              }
            }
LABEL_366:
            sub_24479484C();
          }
          objc_msgSend_setMyEnum_(v333, v496, 0);
        }
        else
        {
LABEL_309:
          char v333 = 0;
        }
LABEL_347:
        id v545 = v333;
        char v333 = v545;
LABEL_348:
        uint64_t v6 = v545;
LABEL_349:

        goto LABEL_358;
      default:
        goto LABEL_299;
    }
  }
  switch(a1)
  {
    case 0:
    case 48:
    case 49:
    case 50:
      goto LABEL_21;
    case 1:
      LOBYTE(v559) = 0;
      sub_24484B184(a2, &v559, v564);
      goto LABEL_235;
    case 2:
      LOWORD(v559) = 0;
      sub_24484B6B0(a2, &v559, v564);
      goto LABEL_176;
    case 3:
      LODWORD(v559) = 0;
      sub_24484B2E8(a2, &v559, v564);
      goto LABEL_180;
    case 4:
      *(void *)&long long v559 = 0;
      sub_24484E220(a2, &v559, v564);
      goto LABEL_4;
    case 5:
    case 21:
    case 38:
      goto LABEL_23;
    case 6:
    case 22:
    case 40:
      LOWORD(v559) = 0;
      sub_244CB3F40(a2, &v559, (uint64_t)v564);
      goto LABEL_176;
    case 7:
    case 8:
    case 33:
      goto LABEL_20;
    case 9:
    case 10:
    case 11:
    case 12:
    case 32:
      *(void *)&long long v559 = 0;
      sub_244CB3EFC(a2, &v559, (uint64_t)v564);
LABEL_4:
      uint64_t v6 = 0;
      *(_OWORD *)a3 = *(_OWORD *)v564;
      *(void *)(a3 + 16) = *(void *)&v564[16];
      if (!*(_DWORD *)a3) {
        goto LABEL_11;
      }
      goto LABEL_358;
    case 13:
    case 39:
      LOBYTE(v559) = 0;
      sub_244CB3C70(a2, &v559, (uint64_t)v564);
      *(_OWORD *)a3 = *(_OWORD *)v564;
      *(void *)(a3 + 16) = *(void *)&v564[16];
      if (!*(_DWORD *)a3) {
        goto LABEL_38;
      }
      goto LABEL_357;
    case 14:
    case 41:
      LOWORD(v559) = 0;
      sub_244CB3D8C(a2, &v559, (uint64_t)v564);
      *(_OWORD *)a3 = *(_OWORD *)v564;
      *(void *)(a3 + 16) = *(void *)&v564[16];
      if (!*(_DWORD *)a3) {
        goto LABEL_35;
      }
      goto LABEL_357;
    case 15:
    case 16:
      LODWORD(v559) = 0;
      sub_244CB3E0C(a2, &v559, (uint64_t)v564);
      *(_OWORD *)a3 = *(_OWORD *)v564;
      *(void *)(a3 + 16) = *(void *)&v564[16];
      if (!*(_DWORD *)a3) {
        goto LABEL_42;
      }
      goto LABEL_357;
    case 17:
    case 18:
    case 19:
    case 20:
      *(void *)&long long v559 = 0;
      sub_244CB3CF0(a2, &v559, (uint64_t)v564);
      uint64_t v6 = 0;
      *(_OWORD *)a3 = *(_OWORD *)v564;
      *(void *)(a3 + 16) = *(void *)&v564[16];
      if (!*(_DWORD *)a3) {
        goto LABEL_16;
      }
      goto LABEL_358;
    case 23:
      LODWORD(v559) = 0;
      sub_244CB401C(a2, &v559, (uint64_t)v564);
      HIDWORD(v19) = *(_DWORD *)&v564[4];
      *(_OWORD *)a3 = *(_OWORD *)v564;
      *(void *)(a3 + 16) = *(void *)&v564[16];
      if (!*(_DWORD *)a3) {
        goto LABEL_280;
      }
      goto LABEL_357;
    case 24:
      *(void *)&long long v559 = 0;
      sub_244CB4060(a2, (double *)&v559, (uint64_t)v564);
      uint64_t v6 = 0;
      *(_OWORD *)a3 = *(_OWORD *)v564;
      *(void *)(a3 + 16) = *(void *)&v564[16];
      if (!*(_DWORD *)a3) {
        goto LABEL_277;
      }
      goto LABEL_358;
    case 25:
    case 29:
      long long v559 = 0uLL;
      sub_2447F5484(a2, &v559, (uint64_t)v564);
      uint64_t v6 = 0;
      *(_OWORD *)a3 = *(_OWORD *)v564;
      *(void *)(a3 + 16) = *(void *)&v564[16];
      if (*(_DWORD *)a3) {
        goto LABEL_358;
      }
      objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v15, v559, *((void *)&v559 + 1));
      goto LABEL_244;
    case 26:
      sub_244BC12F0((uint64_t)&v559);
      sub_24484B03C((uint64_t)&v559, a2, (uint64_t)v564);
      *(_OWORD *)a3 = *(_OWORD *)v564;
      *(void *)(a3 + 16) = *(void *)&v564[16];
      if (*(_DWORD *)a3) {
        goto LABEL_357;
      }
      uint64_t v6 = objc_opt_new();
      unsigned __int8 v600 = v562;
      if (v562) {
        char v601 = v563;
      }
      sub_2446D1930((uint64_t)v564, (uint64_t)&v559, &v600);
      while (sub_2447959C0((uint64_t)v564))
      {
        char v331 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v330, v564[0]);
        objc_msgSend_addObject_(v6, v332, (uint64_t)v331);
      }
      if (!*(_DWORD *)&v564[8] || *(_DWORD *)&v564[8] == 33) {
        goto LABEL_358;
      }
      uint64_t v534 = *(void *)&v564[16];
      int v535 = *(_DWORD *)&v564[12];
      *(_DWORD *)a3 = *(_DWORD *)&v564[8];
      *(_DWORD *)(a3 + 4) = v535;
      *(void *)(a3 + 8) = v534;
      uint64_t v533 = v565;
      goto LABEL_335;
    case 27:
      sub_244BC12F0((uint64_t)&v559);
      sub_24484B03C((uint64_t)&v559, a2, (uint64_t)v564);
      *(_OWORD *)a3 = *(_OWORD *)v564;
      *(void *)(a3 + 16) = *(void *)&v564[16];
      if (*(_DWORD *)a3) {
        goto LABEL_357;
      }
      uint64_t v6 = objc_opt_new();
      unsigned __int8 v600 = v562;
      if (v562) {
        char v601 = v563;
      }
      sub_244797544((uint64_t)v564, (uint64_t)&v559, &v600);
      while (sub_244798B84((uint64_t)v564))
      {
        v317 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v316, *(uint64_t *)v564, *(void *)&v564[8]);
        objc_msgSend_addObject_(v6, v318, (uint64_t)v317);
      }
      goto LABEL_300;
    case 28:
      sub_244BC12F0((uint64_t)&v559);
      sub_24484B03C((uint64_t)&v559, a2, (uint64_t)v564);
      *(_OWORD *)a3 = *(_OWORD *)v564;
      *(void *)(a3 + 16) = *(void *)&v564[16];
      if (*(_DWORD *)a3) {
        goto LABEL_357;
      }
      uint64_t v6 = objc_opt_new();
      unsigned __int8 v600 = v562;
      if (v562) {
        char v601 = v563;
      }
      sub_244BC3944((uint64_t)v564, (uint64_t)&v559, &v600);
      while (sub_244BC5E34((uint64_t)v564))
      {
        char v322 = objc_opt_new();
        char v324 = objc_msgSend_numberWithUnsignedLongLong_(NSNumber, v323, *(uint64_t *)v564);
        objc_msgSend_setMember1_(v322, v325, (uint64_t)v324);

        long long v327 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v326, *(uint64_t *)&v564[8], *(void *)&v564[16]);
        objc_msgSend_setMember2_(v322, v328, (uint64_t)v327);

        objc_msgSend_addObject_(v6, v329, (uint64_t)v322);
      }
      if (!v565 || v565 == 33) {
        goto LABEL_358;
      }
      uint64_t v536 = *((void *)&v565 + 1);
      int v537 = DWORD1(v565);
      *(_DWORD *)a3 = v565;
      *(_DWORD *)(a3 + 4) = v537;
      *(void *)(a3 + 8) = v536;
      uint64_t v533 = v566;
      goto LABEL_335;
    case 30:
      long long v559 = 0uLL;
      sub_244CB41F0(a2, &v559, v564);
      uint64_t v6 = 0;
      *(_OWORD *)a3 = *(_OWORD *)v564;
      *(void *)(a3 + 16) = *(void *)&v564[16];
      if (*(_DWORD *)a3) {
        goto LABEL_358;
      }
      uint64_t v6 = sub_244BBFB94(v559, *((uint64_t *)&v559 + 1));
      if (v6) {
        goto LABEL_239;
      }
      uint64_t v20 = &xmmword_26519ABF0;
      goto LABEL_311;
    case 31:
      long long v559 = 0uLL;
      sub_244CB41F0(a2, &v559, v564);
      uint64_t v6 = 0;
      *(_OWORD *)a3 = *(_OWORD *)v564;
      *(void *)(a3 + 16) = *(void *)&v564[16];
      if (*(_DWORD *)a3) {
        goto LABEL_358;
      }
      uint64_t v6 = sub_244BBFB94(v559, *((uint64_t *)&v559 + 1));
      if (v6)
      {
LABEL_239:
        id v487 = v6;
      }
      else
      {
        uint64_t v20 = &xmmword_26519AC08;
LABEL_311:
        *(_OWORD *)a3 = *v20;
        *(void *)(a3 + 16) = *((void *)v20 + 2);
      }

      goto LABEL_358;
    case 34:
      LOWORD(v559) = 0;
      memset(v564, 0, sizeof(v564));
      sub_24484B11C(a2, &v559, v564);
      if (!*(_DWORD *)v564)
      {
        *(_DWORD *)v564 = 0;
        *(void *)&v564[8] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
        *(_DWORD *)&v564[16] = 61;
      }
LABEL_176:
      *(_OWORD *)a3 = *(_OWORD *)v564;
      *(void *)(a3 + 16) = *(void *)&v564[16];
      if (!*(_DWORD *)a3) {
        goto LABEL_266;
      }
      goto LABEL_357;
    case 35:
      uint64_t v21 = sub_244BC12F0((uint64_t)&v600);
      sub_24484B03C(v21, a2, (uint64_t)v564);
      *(_OWORD *)a3 = *(_OWORD *)v564;
      *(void *)(a3 + 16) = *(void *)&v564[16];
      if (*(_DWORD *)a3) {
        goto LABEL_357;
      }
      uint64_t v6 = objc_opt_new();
      LOBYTE(v559) = v602;
      if (v602) {
        BYTE1(v559) = v603;
      }
      sub_244BC5EE0((uint64_t)v564, (uint64_t)&v600, (unsigned __int8 *)&v559);
      v558 = &v581;
      while (2)
      {
        if (sub_244BC5F90((uint64_t)v564))
        {
          id v22 = objc_opt_new();
          int v24 = v22;
          if (v564[2])
          {
            uint64_t v25 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v23, *(unsigned __int16 *)v564);
            objc_msgSend_setNullableInt_(v24, v26, (uint64_t)v25);
          }
          else
          {
            objc_msgSend_setNullableInt_(v22, v23, 0);
          }
          if (v564[4])
          {
            int v28 = NSNumber;
            int v29 = sub_2446D1880(&v564[4]);
            uint64_t v31 = objc_msgSend_numberWithUnsignedShort_(v28, v30, *(unsigned __int16 *)v29);
            objc_msgSend_setOptionalInt_(v24, v32, (uint64_t)v31);
          }
          else
          {
            objc_msgSend_setOptionalInt_(v24, v27, 0);
          }
          if (v564[8] && sub_24471C2FC(&v564[8])[2])
          {
            unsigned __int8 v34 = NSNumber;
            unsigned __int8 v35 = sub_24471C2FC(&v564[8]);
            if (!v35[2]) {
              goto LABEL_361;
            }
            int v37 = objc_msgSend_numberWithUnsignedShort_(v34, v36, *(unsigned __int16 *)v35);
            objc_msgSend_setNullableOptionalInt_(v24, v38, (uint64_t)v37);
          }
          else
          {
            objc_msgSend_setNullableOptionalInt_(v24, v33, 0, v558);
          }
          if (BYTE8(v565))
          {
            uint64_t v40 = sub_244BBFB94(*(uint64_t *)&v564[16], v565);
            objc_msgSend_setNullableString_(v24, v41, (uint64_t)v40);

            uint64_t v44 = objc_msgSend_nullableString(v24, v42, v43);

            if (!v44)
            {
              v556 = &xmmword_26519AC20;
LABEL_354:
              *(_OWORD *)a3 = *v556;
              *(void *)(a3 + 16) = *((void *)v556 + 2);
              goto LABEL_355;
            }
          }
          else
          {
            objc_msgSend_setNullableString_(v24, v39, 0);
          }
          if ((_BYTE)v566)
          {
            unsigned __int8 v46 = (uint64_t *)sub_2446D18A4(&v566);
            uint64_t v47 = sub_244BBFB94(*v46, v46[1]);
            objc_msgSend_setOptionalString_(v24, v48, (uint64_t)v47);

            uint64_t v51 = objc_msgSend_optionalString(v24, v49, v50);

            if (!v51)
            {
              v556 = &xmmword_26519AC38;
              goto LABEL_354;
            }
          }
          else
          {
            objc_msgSend_setOptionalString_(v24, v45, 0);
          }
          if (v569[0] && sub_2446D18A4(v569)[16])
          {
            uint64_t v53 = sub_2446D18A4(v569);
            if (!v53[16]) {
              goto LABEL_361;
            }
            uint64_t v54 = sub_244BBFB94(*(void *)v53, *((void *)v53 + 1));
            objc_msgSend_setNullableOptionalString_(v24, v55, (uint64_t)v54);

            unsigned __int8 v58 = objc_msgSend_nullableOptionalString(v24, v56, v57);

            if (!v58)
            {
              v556 = &xmmword_26519AC50;
              goto LABEL_354;
            }
          }
          else
          {
            objc_msgSend_setNullableOptionalString_(v24, v52, 0, v558);
          }
          if (v582)
          {
            uint64_t v60 = objc_opt_new();
            objc_msgSend_setNullableStruct_(v24, v61, (uint64_t)v60);

            if (!v582) {
              goto LABEL_361;
            }
            uint64_t v63 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v62, v573[8]);
            uint64_t v66 = objc_msgSend_nullableStruct(v24, v64, v65);
            objc_msgSend_setA_(v66, v67, (uint64_t)v63);

            if (!v582) {
              goto LABEL_361;
            }
            uint64_t v69 = objc_msgSend_numberWithBool_(NSNumber, v68, v573[9]);
            uint64_t v72 = objc_msgSend_nullableStruct(v24, v70, v71);
            objc_msgSend_setB_(v72, v73, (uint64_t)v69);

            if (!v582) {
              goto LABEL_361;
            }
            uint64_t v75 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v74, v573[10]);
            uint64_t v78 = objc_msgSend_nullableStruct(v24, v76, v77);
            objc_msgSend_setC_(v78, v79, (uint64_t)v75);

            if (!v582) {
              goto LABEL_361;
            }
            char v81 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v80, v574, v575);
            char v84 = objc_msgSend_nullableStruct(v24, v82, v83);
            objc_msgSend_setD_(v84, v85, (uint64_t)v81);

            if (!v582) {
              goto LABEL_361;
            }
            int v86 = sub_244BBFB94(v576, v577);
            BOOL v89 = objc_msgSend_nullableStruct(v24, v87, v88);
            objc_msgSend_setE_(v89, v90, (uint64_t)v86);

            uint64_t v93 = objc_msgSend_nullableStruct(v24, v91, v92);
            BOOL v96 = objc_msgSend_e(v93, v94, v95);

            if (!v96)
            {
              v556 = &xmmword_26519AC68;
              goto LABEL_354;
            }
            if (!v582) {
              goto LABEL_361;
            }
            uint64_t v98 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v97, v578);
            char v101 = objc_msgSend_nullableStruct(v24, v99, v100);
            objc_msgSend_setF_(v101, v102, (uint64_t)v98);

            if (!v582) {
              goto LABEL_361;
            }
            LODWORD(v105) = v579;
            uint64_t v106 = objc_msgSend_numberWithFloat_(NSNumber, v103, v104, v105);
            int v109 = objc_msgSend_nullableStruct(v24, v107, v108);
            objc_msgSend_setG_(v109, v110, (uint64_t)v106);

            if (!v582) {
              goto LABEL_361;
            }
            uint64_t v113 = objc_msgSend_numberWithDouble_(NSNumber, v111, v112, v580);
            uint64_t v116 = objc_msgSend_nullableStruct(v24, v114, v115);
            objc_msgSend_setH_(v116, v117, (uint64_t)v113);

            if (!v582) {
              goto LABEL_361;
            }
            if (v581)
            {
              uint64_t v120 = NSNumber;
              unsigned __int8 v121 = sub_2446F9190(v558);
              long long v123 = objc_msgSend_numberWithUnsignedChar_(v120, v122, *v121);
              __int16 v126 = objc_msgSend_nullableStruct(v24, v124, v125);
              objc_msgSend_setI_(v126, v127, (uint64_t)v123);
            }
            else
            {
              long long v123 = objc_msgSend_nullableStruct(v24, v118, v119);
              objc_msgSend_setI_(v123, v129, 0);
            }
          }
          else
          {
            objc_msgSend_setNullableStruct_(v24, v59, 0);
          }
          if (v584[0])
          {
            uint64_t v130 = objc_opt_new();
            objc_msgSend_setOptionalStruct_(v24, v131, (uint64_t)v130);

            int v132 = NSNumber;
            int v133 = sub_2446F7170(v584);
            uint64_t v135 = objc_msgSend_numberWithUnsignedChar_(v132, v134, *v133);
            uint64_t v138 = objc_msgSend_optionalStruct(v24, v136, v137);
            objc_msgSend_setA_(v138, v139, (uint64_t)v135);

            char v140 = NSNumber;
            uint64_t v141 = sub_2446F7170(v584);
            int v143 = objc_msgSend_numberWithBool_(v140, v142, v141[1]);
            uint64_t v146 = objc_msgSend_optionalStruct(v24, v144, v145);
            objc_msgSend_setB_(v146, v147, (uint64_t)v143);

            char v148 = NSNumber;
            char v149 = sub_2446F7170(v584);
            char v151 = objc_msgSend_numberWithUnsignedChar_(v148, v150, v149[2]);
            uint64_t v154 = objc_msgSend_optionalStruct(v24, v152, v153);
            objc_msgSend_setC_(v154, v155, (uint64_t)v151);

            uint64_t v156 = sub_2446F7170(v584);
            uint64_t v158 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v157, *((void *)v156 + 1), *((void *)v156 + 2));
            long long v161 = objc_msgSend_optionalStruct(v24, v159, v160);
            objc_msgSend_setD_(v161, v162, (uint64_t)v158);

            uint64_t v163 = sub_2446F7170(v584);
            unsigned __int8 v164 = sub_244BBFB94(*((void *)v163 + 3), *((void *)v163 + 4));
            char v167 = objc_msgSend_optionalStruct(v24, v165, v166);
            objc_msgSend_setE_(v167, v168, (uint64_t)v164);

            unsigned __int8 v171 = objc_msgSend_optionalStruct(v24, v169, v170);
            uint64_t v174 = objc_msgSend_e(v171, v172, v173);

            if (!v174)
            {
              v556 = &xmmword_26519AC80;
              goto LABEL_354;
            }
            uint64_t v175 = NSNumber;
            uint64_t v176 = sub_2446F7170(v584);
            uint64_t v178 = objc_msgSend_numberWithUnsignedChar_(v175, v177, v176[40]);
            uint64_t v181 = objc_msgSend_optionalStruct(v24, v179, v180);
            objc_msgSend_setF_(v181, v182, (uint64_t)v178);

            char v183 = NSNumber;
            LODWORD(v184) = *((_DWORD *)sub_2446F7170(v584) + 11);
            int v187 = objc_msgSend_numberWithFloat_(v183, v185, v186, v184);
            uint64_t v190 = objc_msgSend_optionalStruct(v24, v188, v189);
            objc_msgSend_setG_(v190, v191, (uint64_t)v187);

            long long v192 = NSNumber;
            uint64_t v193 = (double *)sub_2446F7170(v584);
            char v196 = objc_msgSend_numberWithDouble_(v192, v194, v195, v193[6]);
            uint64_t v199 = objc_msgSend_optionalStruct(v24, v197, v198);
            objc_msgSend_setH_(v199, v200, (uint64_t)v196);

            if (sub_2446F7170(v584)[56])
            {
              unsigned __int8 v203 = NSNumber;
              char v204 = sub_2446F7170(v584);
              uint64_t v205 = sub_2446F9190(v204 + 56);
              char v207 = objc_msgSend_numberWithUnsignedChar_(v203, v206, *v205);
              unsigned int v210 = objc_msgSend_optionalStruct(v24, v208, v209);
              objc_msgSend_setI_(v210, v211, (uint64_t)v207);
            }
            else
            {
              char v207 = objc_msgSend_optionalStruct(v24, v201, v202);
              objc_msgSend_setI_(v207, v213, 0);
            }
          }
          else
          {
            objc_msgSend_setOptionalStruct_(v24, v128, 0);
          }
          if (!v589[0] || !sub_2446D18A4(v589)[64])
          {
            objc_msgSend_setNullableOptionalStruct_(v24, v212, 0, v558);
            goto LABEL_129;
          }
          uint64_t v214 = objc_opt_new();
          objc_msgSend_setNullableOptionalStruct_(v24, v215, (uint64_t)v214);

          char v216 = NSNumber;
          char v217 = sub_2446D18A4(v589);
          if (v217[64])
          {
            uint64_t v219 = objc_msgSend_numberWithUnsignedChar_(v216, v218, *v217);
            unsigned __int8 v222 = objc_msgSend_nullableOptionalStruct(v24, v220, v221);
            objc_msgSend_setA_(v222, v223, (uint64_t)v219);

            v224 = NSNumber;
            uint64_t v225 = sub_2446D18A4(v589);
            if (v225[64])
            {
              v227 = objc_msgSend_numberWithBool_(v224, v226, v225[1]);
              uint64_t v230 = objc_msgSend_nullableOptionalStruct(v24, v228, v229);
              objc_msgSend_setB_(v230, v231, (uint64_t)v227);

              v232 = NSNumber;
              v233 = sub_2446D18A4(v589);
              if (v233[64])
              {
                v235 = objc_msgSend_numberWithUnsignedChar_(v232, v234, v233[2]);
                uint64_t v238 = objc_msgSend_nullableOptionalStruct(v24, v236, v237);
                objc_msgSend_setC_(v238, v239, (uint64_t)v235);

                v240 = sub_2446D18A4(v589);
                if (v240[64])
                {
                  v242 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v241, *((void *)v240 + 1), *((void *)v240 + 2));
                  v245 = objc_msgSend_nullableOptionalStruct(v24, v243, v244);
                  objc_msgSend_setD_(v245, v246, (uint64_t)v242);

                  v247 = sub_2446D18A4(v589);
                  if (v247[64])
                  {
                    v248 = sub_244BBFB94(*((void *)v247 + 3), *((void *)v247 + 4));
                    uint64_t v251 = objc_msgSend_nullableOptionalStruct(v24, v249, v250);
                    objc_msgSend_setE_(v251, v252, (uint64_t)v248);

                    v255 = objc_msgSend_nullableOptionalStruct(v24, v253, v254);
                    v258 = objc_msgSend_e(v255, v256, v257);

                    if (!v258)
                    {
                      v556 = &xmmword_26519AC98;
                      goto LABEL_354;
                    }
                    v259 = NSNumber;
                    v260 = sub_2446D18A4(v589);
                    if (v260[64])
                    {
                      uint64_t v262 = objc_msgSend_numberWithUnsignedChar_(v259, v261, v260[40]);
                      v265 = objc_msgSend_nullableOptionalStruct(v24, v263, v264);
                      objc_msgSend_setF_(v265, v266, (uint64_t)v262);

                      v267 = NSNumber;
                      v268 = sub_2446D18A4(v589);
                      if (v268[64])
                      {
                        LODWORD(v271) = *((_DWORD *)v268 + 11);
                        v272 = objc_msgSend_numberWithFloat_(v267, v269, v270, v271);
                        v275 = objc_msgSend_nullableOptionalStruct(v24, v273, v274);
                        objc_msgSend_setG_(v275, v276, (uint64_t)v272);

                        v277 = NSNumber;
                        v278 = (double *)sub_2446D18A4(v589);
                        if (*((unsigned char *)v278 + 64))
                        {
                          v281 = objc_msgSend_numberWithDouble_(v277, v279, v280, v278[6]);
                          int v284 = objc_msgSend_nullableOptionalStruct(v24, v282, v283);
                          objc_msgSend_setH_(v284, v285, (uint64_t)v281);

                          v286 = sub_2446D18A4(v589);
                          if (v286[64])
                          {
                            if (!v286[56])
                            {
                              int v293 = objc_msgSend_nullableOptionalStruct(v24, v287, v288);
                              objc_msgSend_setI_(v293, v299, 0);
                              goto LABEL_128;
                            }
                            v289 = NSNumber;
                            v290 = sub_2446D18A4(v589);
                            if (v290[64])
                            {
                              v291 = sub_2446F9190(v290 + 56);
                              int v293 = objc_msgSend_numberWithUnsignedChar_(v289, v292, *v291);
                              v296 = objc_msgSend_nullableOptionalStruct(v24, v294, v295);
                              objc_msgSend_setI_(v296, v297, (uint64_t)v293);

LABEL_128:
LABEL_129:
                              if (v593)
                              {
                                v300 = objc_opt_new();
                                if (!v593) {
                                  sub_24479484C();
                                }
                                unsigned __int8 v604 = v591;
                                if (v591) {
                                  char v605 = v592;
                                }
                                sub_2446D1930((uint64_t)&v559, (uint64_t)&v590, &v604);
                                while (sub_2446D19A0((uint64_t)&v559))
                                {
                                  int v302 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v301, v559);
                                  objc_msgSend_addObject_(v300, v303, (uint64_t)v302);
                                }
                                int v304 = DWORD2(v559);
                                if (DWORD2(v559) && DWORD2(v559) != 33) {
                                  goto LABEL_336;
                                }
                                objc_msgSend_setNullableList_(v24, v301, (uint64_t)v300, v558);
                              }
                              else
                              {
                                objc_msgSend_setNullableList_(v24, v298, 0);
                              }
                              if (v594[0])
                              {
                                v300 = objc_opt_new();
                                unsigned __int8 v306 = sub_2446F7170(v594);
                                unsigned __int8 v604 = v306[72];
                                if (v604) {
                                  char v605 = v306[73];
                                }
                                sub_2446D1930((uint64_t)&v559, (uint64_t)v306, &v604);
                                while (sub_2446D19A0((uint64_t)&v559))
                                {
                                  long long v308 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v307, v559);
                                  objc_msgSend_addObject_(v300, v309, (uint64_t)v308);
                                }
                                int v304 = DWORD2(v559);
                                if (DWORD2(v559) && DWORD2(v559) != 33) {
                                  goto LABEL_336;
                                }
                                objc_msgSend_setOptionalList_(v24, v307, (uint64_t)v300, v558);
                              }
                              else
                              {
                                objc_msgSend_setOptionalList_(v24, v305, 0);
                              }
                              if (!v595[0] || !sub_2446F7170(v595)[80])
                              {
                                objc_msgSend_setNullableOptionalList_(v24, v310, 0, v558);
LABEL_162:
                                objc_msgSend_addObject_(v6, v315, (uint64_t)v24);

                                continue;
                              }
                              v300 = objc_opt_new();
                              uint64_t v311 = sub_2446F7170(v595);
                              if (!v311[80]) {
                                sub_24479484C();
                              }
                              unsigned __int8 v604 = v311[72];
                              if (v604) {
                                char v605 = v311[73];
                              }
                              sub_2446D1930((uint64_t)&v559, (uint64_t)v311, &v604);
                              while (sub_2446D19A0((uint64_t)&v559))
                              {
                                uint64_t v313 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v312, v559);
                                objc_msgSend_addObject_(v300, v314, (uint64_t)v313);
                              }
                              int v304 = DWORD2(v559);
                              if (!DWORD2(v559) || DWORD2(v559) == 33)
                              {
                                objc_msgSend_setNullableOptionalList_(v24, v312, (uint64_t)v300, v558);

                                goto LABEL_162;
                              }
LABEL_336:
                              uint64_t v548 = v560;
                              int v549 = HIDWORD(v559);
                              *(_DWORD *)a3 = v304;
                              *(_DWORD *)(a3 + 4) = v549;
                              *(void *)(a3 + 8) = v548;
                              *(void *)(a3 + 16) = v561;

LABEL_355:
LABEL_356:

                              goto LABEL_357;
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
LABEL_361:
          sub_24479484C();
        }
        break;
      }
      if (v596 && v596 != 33)
      {
        uint64_t v546 = v598;
        int v547 = v597;
        *(_DWORD *)a3 = v596;
        *(_DWORD *)(a3 + 4) = v547;
        *(void *)(a3 + 8) = v546;
        uint64_t v533 = v599;
LABEL_335:
        *(void *)(a3 + 16) = v533;
        goto LABEL_356;
      }
LABEL_358:
      return v6;
    case 36:
      LOBYTE(v559) = 0;
      sub_2446D1A48(a2, &v559, v564);
      goto LABEL_235;
    case 37:
      *(_WORD *)v564 = 0;
      v564[2] = 0;
      HIDWORD(v566) = 0;
      double v567 = 0.0;
      LOBYTE(v568) = 0;
      *(_OWORD *)&v564[8] = 0u;
      long long v565 = 0u;
      LOBYTE(v566) = 0;
      sub_2448432EC((uint64_t)v564, a2, (uint64_t)&v559);
      *(_OWORD *)a3 = v559;
      *(void *)(a3 + 16) = v560;
      if (*(_DWORD *)a3) {
        goto LABEL_357;
      }
      char v333 = objc_opt_new();
      v454 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v453, v564[0]);
      objc_msgSend_setA_(v333, v455, (uint64_t)v454);

      v457 = objc_msgSend_numberWithBool_(NSNumber, v456, v564[1]);
      objc_msgSend_setB_(v333, v458, (uint64_t)v457);

      v460 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v459, v564[2]);
      objc_msgSend_setC_(v333, v461, (uint64_t)v460);

      v463 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v462, *(uint64_t *)&v564[8], *(void *)&v564[16]);
      objc_msgSend_setD_(v333, v464, (uint64_t)v463);

      v465 = sub_244BBFB94(v565, *((uint64_t *)&v565 + 1));
      objc_msgSend_setE_(v333, v466, (uint64_t)v465);

      uint64_t v6 = objc_msgSend_e(v333, v467, v468);

      if (!v6)
      {
        v538 = &xmmword_26519ACB0;
        goto LABEL_331;
      }
      v470 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v469, v566);
      objc_msgSend_setF_(v333, v471, (uint64_t)v470);

      LODWORD(v472) = HIDWORD(v566);
      v475 = objc_msgSend_numberWithFloat_(NSNumber, v473, v474, v472);
      objc_msgSend_setG_(v333, v476, (uint64_t)v475);

      v479 = objc_msgSend_numberWithDouble_(NSNumber, v477, v478, v567);
      objc_msgSend_setH_(v333, v480, (uint64_t)v479);

      if ((_BYTE)v568)
      {
        v482 = NSNumber;
        v483 = sub_24479DC2C(&v568);
        v485 = objc_msgSend_numberWithUnsignedChar_(v482, v484, *v483);
        objc_msgSend_setI_(v333, v486, (uint64_t)v485);
        goto LABEL_325;
      }
      objc_msgSend_setI_(v333, v481, 0);
      goto LABEL_328;
    case 42:
      sub_244BC12F0((uint64_t)&v559);
      sub_24484B03C((uint64_t)&v559, a2, (uint64_t)v564);
      *(_OWORD *)a3 = *(_OWORD *)v564;
      *(void *)(a3 + 16) = *(void *)&v564[16];
      if (*(_DWORD *)a3) {
        goto LABEL_357;
      }
      uint64_t v6 = objc_opt_new();
      unsigned __int8 v600 = v562;
      if (v562) {
        char v601 = v563;
      }
      sub_244797544((uint64_t)v564, (uint64_t)&v559, &v600);
      while (sub_244798B84((uint64_t)v564))
      {
        v320 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v319, *(uint64_t *)v564, *(void *)&v564[8]);
        objc_msgSend_addObject_(v6, v321, (uint64_t)v320);
      }
LABEL_300:
      if (!*(_DWORD *)&v564[16] || *(_DWORD *)&v564[16] == 33) {
        goto LABEL_358;
      }
      uint64_t v531 = v565;
      int v532 = *(_DWORD *)&v564[20];
      *(_DWORD *)a3 = *(_DWORD *)&v564[16];
      *(_DWORD *)(a3 + 4) = v532;
      *(void *)(a3 + 8) = v531;
      uint64_t v533 = *((void *)&v565 + 1);
      goto LABEL_335;
    case 43:
      uint64_t v344 = sub_244BC12F0((uint64_t)&v600);
      sub_24484B03C(v344, a2, (uint64_t)v564);
      *(_OWORD *)a3 = *(_OWORD *)v564;
      *(void *)(a3 + 16) = *(void *)&v564[16];
      if (*(_DWORD *)a3) {
        goto LABEL_357;
      }
      uint64_t v6 = objc_opt_new();
      LOBYTE(v559) = v602;
      if (v602) {
        BYTE1(v559) = v603;
      }
      sub_244BC6324((uint64_t)v564, (uint64_t)&v600, (unsigned __int8 *)&v559);
      while (2)
      {
        if (!sub_244BC5DEC((uint64_t)v564))
        {
          if (v585 && v585 != 33)
          {
            uint64_t v539 = v587;
            int v540 = v586;
            *(_DWORD *)a3 = v585;
            *(_DWORD *)(a3 + 4) = v540;
            *(void *)(a3 + 8) = v539;
            uint64_t v533 = v588;
            goto LABEL_335;
          }
          goto LABEL_358;
        }
        int v24 = objc_opt_new();
        uint64_t v346 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v345, v564[0]);
        objc_msgSend_setFabricSensitiveInt8u_(v24, v347, (uint64_t)v346);

        if (v564[1])
        {
          char v349 = NSNumber;
          unsigned __int8 v350 = sub_2446F9190(&v564[1]);
          v352 = objc_msgSend_numberWithUnsignedChar_(v349, v351, *v350);
          objc_msgSend_setOptionalFabricSensitiveInt8u_(v24, v353, (uint64_t)v352);
        }
        else
        {
          objc_msgSend_setOptionalFabricSensitiveInt8u_(v24, v348, 0);
        }
        if (v564[4])
        {
          v355 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v354, v564[3]);
          objc_msgSend_setNullableFabricSensitiveInt8u_(v24, v356, (uint64_t)v355);
        }
        else
        {
          objc_msgSend_setNullableFabricSensitiveInt8u_(v24, v354, 0);
        }
        if (v564[5] && sub_2446F9190(&v564[5])[1])
        {
          v358 = NSNumber;
          v359 = sub_2446F9190(&v564[5]);
          if (!v359[1]) {
            sub_24479484C();
          }
          v361 = objc_msgSend_numberWithUnsignedChar_(v358, v360, *v359);
          objc_msgSend_setNullableOptionalFabricSensitiveInt8u_(v24, v362, (uint64_t)v361);
        }
        else
        {
          objc_msgSend_setNullableOptionalFabricSensitiveInt8u_(v24, v357, 0);
        }
        uint64_t v363 = *(void *)&v564[8];
        uint64_t v364 = *(void *)&v564[16];
        id v365 = [NSString alloc];
        v367 = objc_msgSend_initWithBytes_length_encoding_(v365, v366, v363, v364, 4);
        objc_msgSend_setFabricSensitiveCharString_(v24, v368, (uint64_t)v367);

        v371 = objc_msgSend_fabricSensitiveCharString(v24, v369, v370);

        if (!v371)
        {
          v556 = &xmmword_26519ACC8;
          goto LABEL_354;
        }
        v372 = objc_opt_new();
        objc_msgSend_setFabricSensitiveStruct_(v24, v373, (uint64_t)v372);

        v375 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v374, v565);
        v378 = objc_msgSend_fabricSensitiveStruct(v24, v376, v377);
        objc_msgSend_setA_(v378, v379, (uint64_t)v375);

        v381 = objc_msgSend_numberWithBool_(NSNumber, v380, BYTE1(v565));
        v384 = objc_msgSend_fabricSensitiveStruct(v24, v382, v383);
        objc_msgSend_setB_(v384, v385, (uint64_t)v381);

        v387 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v386, BYTE2(v565));
        v390 = objc_msgSend_fabricSensitiveStruct(v24, v388, v389);
        objc_msgSend_setC_(v390, v391, (uint64_t)v387);

        v393 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v392, *((uint64_t *)&v565 + 1), v566);
        v396 = objc_msgSend_fabricSensitiveStruct(v24, v394, v395);
        objc_msgSend_setD_(v396, v397, (uint64_t)v393);

        uint64_t v398 = *(void *)&v567;
        uint64_t v399 = v568;
        id v400 = [NSString alloc];
        v402 = objc_msgSend_initWithBytes_length_encoding_(v400, v401, v398, v399, 4);
        v405 = objc_msgSend_fabricSensitiveStruct(v24, v403, v404);
        objc_msgSend_setE_(v405, v406, (uint64_t)v402);

        v409 = objc_msgSend_fabricSensitiveStruct(v24, v407, v408);
        v412 = objc_msgSend_e(v409, v410, v411);

        if (!v412)
        {
          v556 = &xmmword_26519ACE0;
          goto LABEL_354;
        }
        v414 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v413, v569[0]);
        v417 = objc_msgSend_fabricSensitiveStruct(v24, v415, v416);
        objc_msgSend_setF_(v417, v418, (uint64_t)v414);

        LODWORD(v419) = v570;
        v422 = objc_msgSend_numberWithFloat_(NSNumber, v420, v421, v419);
        v425 = objc_msgSend_fabricSensitiveStruct(v24, v423, v424);
        objc_msgSend_setG_(v425, v426, (uint64_t)v422);

        v429 = objc_msgSend_numberWithDouble_(NSNumber, v427, v428, v571);
        v432 = objc_msgSend_fabricSensitiveStruct(v24, v430, v431);
        objc_msgSend_setH_(v432, v433, (uint64_t)v429);

        if (v572[0])
        {
          v436 = NSNumber;
          v437 = sub_2446F9190(v572);
          v439 = objc_msgSend_numberWithUnsignedChar_(v436, v438, *v437);
          v442 = objc_msgSend_fabricSensitiveStruct(v24, v440, v441);
          objc_msgSend_setI_(v442, v443, (uint64_t)v439);
        }
        else
        {
          v439 = objc_msgSend_fabricSensitiveStruct(v24, v434, v435);
          objc_msgSend_setI_(v439, v444, 0);
        }

        v445 = objc_opt_new();
        unsigned __int8 v604 = v582;
        if (v582) {
          char v605 = v583;
        }
        sub_2446D1930((uint64_t)&v559, (uint64_t)v573, &v604);
        while (sub_2447959C0((uint64_t)&v559))
        {
          v447 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v446, v559);
          objc_msgSend_addObject_(v445, v448, (uint64_t)v447);
        }
        if (!DWORD2(v559) || DWORD2(v559) == 33)
        {
          objc_msgSend_setFabricSensitiveInt8uList_(v24, v446, (uint64_t)v445);

          v450 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v449, v584[0]);
          objc_msgSend_setFabricIndex_(v24, v451, (uint64_t)v450);

          objc_msgSend_addObject_(v6, v452, (uint64_t)v24);
          continue;
        }
        break;
      }
      uint64_t v554 = v560;
      int v555 = HIDWORD(v559);
      *(_DWORD *)a3 = DWORD2(v559);
      *(_DWORD *)(a3 + 4) = v555;
      *(void *)(a3 + 8) = v554;
      *(void *)(a3 + 16) = v561;

      goto LABEL_355;
    case 44:
    case 45:
    case 46:
    case 47:
      goto LABEL_299;
    case 51:
      LOBYTE(v559) = 0;
      sub_2447F5F24(a2, &v559, v564);
      goto LABEL_235;
    case 52:
      v564[20] = 0;
      LOBYTE(v565) = 0;
      memset(v564, 0, 17);
      sub_2447EFBF8((uint64_t)v564, a2, (uint64_t)&v559);
      *(_OWORD *)a3 = v559;
      *(void *)(a3 + 16) = v560;
      if (*(_DWORD *)a3) {
        goto LABEL_357;
      }
      char v333 = objc_opt_new();
      unsigned __int8 v334 = sub_244BBFB94(*(uint64_t *)v564, *(uint64_t *)&v564[8]);
      objc_msgSend_setName_(v333, v335, (uint64_t)v334);

      uint64_t v6 = objc_msgSend_name(v333, v336, v337);

      if (!v6)
      {
        v538 = &xmmword_26519ACF8;
        goto LABEL_331;
      }
      if (v564[20])
      {
        uint64_t v339 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v338, *(unsigned int *)&v564[16]);
        objc_msgSend_setMyBitmap_(v333, v340, (uint64_t)v339);
      }
      else
      {
        objc_msgSend_setMyBitmap_(v333, v338, 0);
      }
      if ((_BYTE)v565 && sub_24479DC2C(&v565)[1])
      {
        v541 = NSNumber;
        v542 = sub_24479DC2C(&v565);
        if (!v542[1]) {
          sub_24479484C();
        }
        v485 = objc_msgSend_numberWithUnsignedChar_(v541, v543, *v542);
        objc_msgSend_setMyEnum_(v333, v544, (uint64_t)v485);
LABEL_325:
      }
      else
      {
        objc_msgSend_setMyEnum_(v333, v341, 0);
      }
LABEL_328:
      id v545 = v333;
      goto LABEL_348;
    default:
      if (a1 == -897279) {
        goto LABEL_48;
      }
      goto LABEL_299;
  }
}

void sub_244BBF5E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BBFAE8(int a1, uint64_t a2, uint64_t a3)
{
  if (a1)
  {
    char v4 = 0;
    *(_DWORD *)a3 = 181;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "zap-generated/MTRAttributeTLVValueDecoder.mm";
    *(_DWORD *)(a3 + 16) = 19956;
  }
  else
  {
    unsigned __int8 v9 = 0;
    sub_244CB3C0C(a2, (char *)&v9, (uint64_t)&v7);
    *(_OWORD *)a3 = v7;
    *(void *)(a3 + 16) = v8;
    if (*(_DWORD *)a3)
    {
      char v4 = 0;
    }
    else
    {
      char v4 = objc_msgSend_numberWithBool_(NSNumber, v5, v9);
    }
  }

  return v4;
}

id sub_244BBFB94(uint64_t a1, uint64_t a2)
{
  id v4 = [NSString alloc];
  uint64_t v6 = objc_msgSend_initWithBytes_length_encoding_(v4, v5, a1, a2, 4);

  return v6;
}

uint64_t sub_244BBFBE4(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  *(_DWORD *)a1 = 0;
  *(_WORD *)(a1 + 4) = 0;
  sub_244CB3988(a1 + 32);
  int v7 = *a3;
  *(unsigned char *)(a1 + 104) = v7;
  if (v7) {
    *(unsigned char *)(a1 + 105) = a3[1];
  }
  *(_DWORD *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 24) = 93;
  sub_244CB3B04(v6, a2);
  return a1;
}

BOOL sub_244BBFC5C(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 96) == -1) {
    return 0;
  }
  uint64_t v3 = a1 + 8;
  int v2 = *(_DWORD *)(a1 + 8);
  if (!v2)
  {
    sub_244CB4E58(a1 + 32, &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *(void *)(v3 + 16) = v6;
    int v2 = *(_DWORD *)v3;
    if (!*(_DWORD *)v3)
    {
      *(_DWORD *)a1 = 0;
      *(_WORD *)(a1 + 4) = 0;
      sub_2447EE528(a1, a1 + 32, (uint64_t)&v5);
      *(_OWORD *)uint64_t v3 = v5;
      *(void *)(v3 + 16) = v6;
      int v2 = *(_DWORD *)(a1 + 8);
    }
  }
  return v2 == 0;
}

uint64_t sub_244BBFD08(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  *(unsigned char *)a1 = 0;
  *(unsigned char *)(a1 + 2) = 0;
  *(_WORD *)(a1 + 4) = 0;
  *(unsigned char *)(a1 + 8) = 0;
  sub_244CB3988(a1 + 64);
  int v7 = *a3;
  *(unsigned char *)(a1 + 136) = v7;
  if (v7) {
    *(unsigned char *)(a1 + 137) = a3[1];
  }
  *(_DWORD *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 56) = 93;
  sub_244CB3B04(v6, a2);
  return a1;
}

BOOL sub_244BBFD88(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 128) == -1) {
    return 0;
  }
  uint64_t v3 = a1 + 40;
  int v2 = *(_DWORD *)(a1 + 40);
  if (!v2)
  {
    sub_244CB4E58(a1 + 64, &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *(void *)(v3 + 16) = v6;
    int v2 = *(_DWORD *)v3;
    if (!*(_DWORD *)v3)
    {
      *(unsigned char *)(a1 + 8) = 0;
      *(_DWORD *)a1 = 0;
      *(_WORD *)(a1 + 4) = 0;
      sub_2447F3764(a1, a1 + 64, (uint64_t)&v5);
      *(_OWORD *)uint64_t v3 = v5;
      *(void *)(v3 + 16) = v6;
      int v2 = *(_DWORD *)(a1 + 40);
    }
  }
  return v2 == 0;
}

BOOL sub_244BBFE38(uint64_t a1)
{
  BOOL v2 = sub_244BBFF04(a1);
  if (v2 && *(unsigned char *)(a1 + 136)) {
    *(unsigned char *)(a1 + 32) = *sub_2446F9190((unsigned char *)(a1 + 136));
  }
  return v2;
}

uint64_t sub_244BBFE80(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  *(unsigned char *)a1 = 0;
  *(unsigned char *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 20) = 0;
  *(unsigned char *)(a1 + 24) = 0;
  *(unsigned char *)(a1 + 32) = 0;
  sub_244CB3988(a1 + 64);
  int v7 = *a3;
  *(unsigned char *)(a1 + 136) = v7;
  if (v7) {
    *(unsigned char *)(a1 + 137) = a3[1];
  }
  *(_DWORD *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 56) = 93;
  sub_244CB3B04(v6, a2);
  return a1;
}

BOOL sub_244BBFF04(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 128) == -1) {
    return 0;
  }
  uint64_t v3 = a1 + 40;
  int v2 = *(_DWORD *)(a1 + 40);
  if (!v2)
  {
    sub_244CB4E58(a1 + 64, &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *(void *)(v3 + 16) = v6;
    int v2 = *(_DWORD *)v3;
    if (!*(_DWORD *)v3)
    {
      *(unsigned char *)a1 = 0;
      *(unsigned char *)(a1 + 16) = 0;
      *(unsigned char *)(a1 + 20) = 0;
      *(unsigned char *)(a1 + 24) = 0;
      *(unsigned char *)(a1 + 32) = 0;
      sub_2447F3CC8(a1, a1 + 64, (uint64_t)&v5);
      *(_OWORD *)uint64_t v3 = v5;
      *(void *)(v3 + 16) = v6;
      int v2 = *(_DWORD *)(a1 + 40);
    }
  }
  return v2 == 0;
}

BOOL sub_244BBFFBC(uint64_t a1)
{
  BOOL v2 = sub_244BC011C(a1);
  if (v2 && *(unsigned char *)(a1 + 288)) {
    *(unsigned char *)(a1 + 184) = *sub_2446F9190((unsigned char *)(a1 + 288));
  }
  return v2;
}

BOOL sub_244BC0004(uint64_t a1)
{
  BOOL v2 = sub_244BC04FC(a1);
  if (v2 && *(unsigned char *)(a1 + 120)) {
    *(unsigned char *)(a1 + 16) = *sub_2446F9190((unsigned char *)(a1 + 120));
  }
  return v2;
}

BOOL sub_244BC004C(uint64_t a1)
{
  BOOL v2 = sub_244BC090C(a1);
  if (v2 && *(unsigned char *)(a1 + 192)) {
    *(unsigned char *)(a1 + 88) = *sub_2446F9190((unsigned char *)(a1 + 192));
  }
  return v2;
}

uint64_t sub_244BC0094(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  *(_WORD *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 88) = 0;
  *(unsigned char *)(a1 + 96) = 0;
  *(unsigned char *)(a1 + 176) = 0;
  *(unsigned char *)(a1 + 184) = 0;
  sub_244CB3988(a1 + 216);
  int v7 = *a3;
  *(unsigned char *)(a1 + 288) = v7;
  if (v7) {
    *(unsigned char *)(a1 + 289) = a3[1];
  }
  *(_DWORD *)(a1 + 192) = 0;
  *(void *)(a1 + 200) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 208) = 93;
  sub_244CB3B04(v6, a2);
  return a1;
}

BOOL sub_244BC011C(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 280) == -1) {
    return 0;
  }
  uint64_t v3 = (int *)(a1 + 192);
  int v2 = *(_DWORD *)(a1 + 192);
  if (!v2)
  {
    sub_244CB4E58(a1 + 216, &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *((void *)v3 + 2) = v6;
    int v2 = *v3;
    if (!*v3)
    {
      long long v12 = 0u;
      memset(v11, 0, sizeof(v11));
      long long v9 = 0u;
      long long v10 = 0u;
      long long v7 = 0u;
      long long v8 = 0u;
      long long v5 = 0u;
      long long v6 = 0u;
      *(_WORD *)a1 = 0;
      sub_244BC0208(a1 + 8, (uint64_t)&v5 + 8);
      sub_244BC0208(a1 + 96, (uint64_t)v11);
      *(unsigned char *)(a1 + 184) = BYTE8(v12);
      sub_2447F4E40((unsigned char *)a1, a1 + 216, (uint64_t)&v5);
      *(_OWORD *)uint64_t v3 = v5;
      *((void *)v3 + 2) = v6;
      int v2 = *(_DWORD *)(a1 + 192);
    }
  }
  return v2 == 0;
}

uint64_t sub_244BC0208(uint64_t result, uint64_t a2)
{
  if (*(unsigned __int8 *)(result + 80) == *(unsigned __int8 *)(a2 + 80))
  {
    if (*(unsigned char *)(result + 80))
    {
      *(_OWORD *)uint64_t result = *(_OWORD *)a2;
      long long v2 = *(_OWORD *)(a2 + 16);
      long long v3 = *(_OWORD *)(a2 + 32);
      long long v4 = *(_OWORD *)(a2 + 48);
      *(void *)(result + 63) = *(void *)(a2 + 63);
      *(_OWORD *)(result + 32) = v3;
      *(_OWORD *)(result + 48) = v4;
      *(_OWORD *)(result + 16) = v2;
      int v5 = *(unsigned __int8 *)(a2 + 72);
      *(unsigned char *)(result + 72) = v5;
      if (v5)
      {
        *(unsigned char *)(result + 73) = *(unsigned char *)(a2 + 73);
        *(unsigned char *)(a2 + 72) = 0;
      }
    }
  }
  else if (*(unsigned char *)(result + 80))
  {
    *(unsigned char *)(result + 80) = 0;
  }
  else
  {
    *(_OWORD *)uint64_t result = *(_OWORD *)a2;
    long long v6 = *(_OWORD *)(a2 + 16);
    long long v7 = *(_OWORD *)(a2 + 32);
    long long v8 = *(_OWORD *)(a2 + 48);
    *(void *)(result + 64) = *(void *)(a2 + 64);
    *(_OWORD *)(result + 32) = v7;
    *(_OWORD *)(result + 48) = v8;
    *(_OWORD *)(result + 16) = v6;
    int v9 = *(unsigned __int8 *)(a2 + 72);
    *(unsigned char *)(result + 72) = v9;
    if (v9)
    {
      *(unsigned char *)(result + 73) = *(unsigned char *)(a2 + 73);
      *(unsigned char *)(a2 + 72) = 0;
    }
    *(unsigned char *)(result + 80) = 1;
  }
  return result;
}

BOOL sub_244BC02A8(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 96) == -1) {
    return 0;
  }
  long long v3 = (int *)(a1 + 8);
  int v2 = *(_DWORD *)(a1 + 8);
  if (!v2)
  {
    sub_244CB4E58(a1 + 32, &v5);
    *(_OWORD *)long long v3 = v5;
    *((void *)v3 + 2) = v6;
    int v2 = *v3;
    if (!*v3)
    {
      *(void *)a1 = 0;
      sub_244CB3EFC(a1 + 32, (void *)a1, (uint64_t)&v5);
      *(_OWORD *)long long v3 = v5;
      *((void *)v3 + 2) = v6;
      int v2 = *(_DWORD *)(a1 + 8);
    }
  }
  return v2 == 0;
}

uint64_t sub_244BC0350(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  *(unsigned char *)a1 = 0;
  *(unsigned char *)(a1 + 4) = 0;
  *(unsigned char *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 10) = 0;
  *(unsigned char *)(a1 + 12) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  sub_244CB3988(a1 + 48);
  int v7 = *a3;
  *(unsigned char *)(a1 + 120) = v7;
  if (v7) {
    *(unsigned char *)(a1 + 121) = a3[1];
  }
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 40) = 93;
  sub_244CB3B04(v6, a2);
  return a1;
}

BOOL sub_244BC03D8(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 112) == -1) {
    return 0;
  }
  uint64_t v3 = a1 + 24;
  int v2 = *(_DWORD *)(a1 + 24);
  if (!v2)
  {
    sub_244CB4E58(a1 + 48, &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *(void *)(v3 + 16) = v6;
    int v2 = *(_DWORD *)v3;
    if (!*(_DWORD *)v3)
    {
      *(void *)a1 = 0;
      *(void *)(a1 + 8) = 0;
      *(_DWORD *)(a1 + 16) = 0;
      sub_2447F4A40(a1, a1 + 48, (uint64_t)&v5);
      *(_OWORD *)uint64_t v3 = v5;
      *(void *)(v3 + 16) = v6;
      int v2 = *(_DWORD *)(a1 + 24);
    }
  }
  return v2 == 0;
}

uint64_t sub_244BC0484(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  sub_244CB3988(a1 + 48);
  int v7 = *a3;
  *(unsigned char *)(a1 + 120) = v7;
  if (v7) {
    *(unsigned char *)(a1 + 121) = a3[1];
  }
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 40) = 93;
  sub_244CB3B04(v6, a2);
  return a1;
}

BOOL sub_244BC04FC(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 112) == -1) {
    return 0;
  }
  uint64_t v3 = a1 + 24;
  int v2 = *(_DWORD *)(a1 + 24);
  if (!v2)
  {
    sub_244CB4E58(a1 + 48, &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *(void *)(v3 + 16) = v6;
    int v2 = *(_DWORD *)v3;
    if (!*(_DWORD *)v3)
    {
      *(void *)a1 = 0;
      *(void *)(a1 + 8) = 0;
      *(unsigned char *)(a1 + 16) = 0;
      sub_2447F5338(a1, a1 + 48, (uint64_t)&v5);
      *(_OWORD *)uint64_t v3 = v5;
      *(void *)(v3 + 16) = v6;
      int v2 = *(_DWORD *)(a1 + 24);
    }
  }
  return v2 == 0;
}

uint64_t sub_244BC05A8(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  *(_WORD *)a1 = 0;
  *(_DWORD *)(a1 + 4) = 0;
  sub_244CB3988(a1 + 8);
  *(unsigned char *)(a1 + 80) = 0;
  sub_244CB39B8(v6, 0, 0);
  sub_244CB3988(a1 + 112);
  int v8 = *a3;
  *(unsigned char *)(a1 + 184) = v8;
  if (v8) {
    *(unsigned char *)(a1 + 185) = a3[1];
  }
  *(_DWORD *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 104) = 93;
  sub_244CB3B04(v7, a2);
  return a1;
}

BOOL sub_244BC0638(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 176) == -1) {
    return 0;
  }
  uint64_t v3 = a1 + 88;
  int v2 = *(_DWORD *)(a1 + 88);
  if (!v2)
  {
    sub_244CB4E58(a1 + 112, v7);
    *(_OWORD *)uint64_t v3 = v7[0];
    *(void *)(v3 + 16) = *(void *)&v7[1];
    int v2 = *(_DWORD *)v3;
    if (!*(_DWORD *)v3)
    {
      uint64_t v8 = 0;
      memset(v7, 0, sizeof(v7));
      sub_244CB3988((uint64_t)v7 + 8);
      LOBYTE(v8) = 0;
      sub_244CB39B8(v4, 0, 0);
      *(void *)a1 = *(void *)&v7[0];
      *(_OWORD *)(a1 + 24) = *(_OWORD *)((char *)&v7[1] + 8);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)((char *)&v7[2] + 8);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)((char *)&v7[3] + 8);
      *(void *)(a1 + 71) = *(void *)((char *)&v7[4] + 7);
      *(_OWORD *)(a1 + 8) = *(_OWORD *)((char *)v7 + 8);
      int v5 = v8;
      *(unsigned char *)(a1 + 80) = v8;
      if (v5) {
        *(unsigned char *)(a1 + 81) = BYTE1(v8);
      }
      sub_2447F442C(a1, a1 + 112, (uint64_t)v7);
      *(_OWORD *)uint64_t v3 = v7[0];
      *(void *)(v3 + 16) = *(void *)&v7[1];
      int v2 = *(_DWORD *)(a1 + 88);
    }
  }
  return v2 == 0;
}

uint64_t sub_244BC0750(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  *(unsigned char *)a1 = 0;
  *(unsigned char *)(a1 + 4) = 0;
  *(unsigned char *)(a1 + 8) = 0;
  sub_244CB3988(a1 + 40);
  int v7 = *a3;
  *(unsigned char *)(a1 + 112) = v7;
  if (v7) {
    *(unsigned char *)(a1 + 113) = a3[1];
  }
  *(_DWORD *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 32) = 93;
  sub_244CB3B04(v6, a2);
  return a1;
}

BOOL sub_244BC07CC(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 104) == -1) {
    return 0;
  }
  uint64_t v3 = (int *)(a1 + 16);
  int v2 = *(_DWORD *)(a1 + 16);
  if (!v2)
  {
    sub_244CB4E58(a1 + 40, &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *((void *)v3 + 2) = v6;
    int v2 = *v3;
    if (!*v3)
    {
      *(_DWORD *)(a1 + 8) = 0;
      *(void *)a1 = 0;
      sub_2447F4030((unsigned char *)a1, a1 + 40, (uint64_t)&v5);
      *(_OWORD *)uint64_t v3 = v5;
      *((void *)v3 + 2) = v6;
      int v2 = *(_DWORD *)(a1 + 16);
    }
  }
  return v2 == 0;
}

uint64_t sub_244BC0878(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  *(_WORD *)a1 = 0;
  *(_DWORD *)(a1 + 4) = 0;
  sub_244CB3988(a1 + 8);
  *(unsigned char *)(a1 + 80) = 0;
  sub_244CB39B8(v6, 0, 0);
  *(unsigned char *)(a1 + 88) = 0;
  sub_244CB3988(a1 + 120);
  int v8 = *a3;
  *(unsigned char *)(a1 + 192) = v8;
  if (v8) {
    *(unsigned char *)(a1 + 193) = a3[1];
  }
  *(_DWORD *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 112) = 93;
  sub_244CB3B04(v7, a2);
  return a1;
}

BOOL sub_244BC090C(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 184) == -1) {
    return 0;
  }
  uint64_t v3 = a1 + 96;
  int v2 = *(_DWORD *)(a1 + 96);
  if (!v2)
  {
    sub_244CB4E58(a1 + 120, v7);
    *(_OWORD *)uint64_t v3 = v7[0];
    *(void *)(v3 + 16) = *(void *)&v7[1];
    int v2 = *(_DWORD *)v3;
    if (!*(_DWORD *)v3)
    {
      long long v8 = 0u;
      memset(v7, 0, sizeof(v7));
      sub_244CB3988((uint64_t)v7 + 8);
      LOBYTE(v8) = 0;
      sub_244CB39B8(v4, 0, 0);
      BYTE8(v8) = 0;
      *(void *)a1 = *(void *)&v7[0];
      *(_OWORD *)(a1 + 24) = *(_OWORD *)((char *)&v7[1] + 8);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)((char *)&v7[2] + 8);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)((char *)&v7[3] + 8);
      *(void *)(a1 + 71) = *(void *)((char *)&v7[4] + 7);
      *(_OWORD *)(a1 + 8) = *(_OWORD *)((char *)v7 + 8);
      int v5 = v8;
      *(unsigned char *)(a1 + 80) = v8;
      if (v5) {
        *(unsigned char *)(a1 + 81) = BYTE1(v8);
      }
      *(unsigned char *)(a1 + 88) = 0;
      sub_2447F47A4(a1, a1 + 120, (uint64_t)v7);
      *(_OWORD *)uint64_t v3 = v7[0];
      *(void *)(v3 + 16) = *(void *)&v7[1];
      int v2 = *(_DWORD *)(a1 + 96);
    }
  }
  return v2 == 0;
}

uint64_t sub_244BC0A28(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  *(_WORD *)a1 = 0;
  *(_DWORD *)(a1 + 26) = 0;
  *(unsigned char *)(a1 + 30) = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 24) = 0;
  sub_244CB3988(a1 + 56);
  int v7 = *a3;
  *(unsigned char *)(a1 + 128) = v7;
  if (v7) {
    *(unsigned char *)(a1 + 129) = a3[1];
  }
  *(_DWORD *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 48) = 93;
  sub_244CB3B04(v6, a2);
  return a1;
}

BOOL sub_244BC0AAC(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 120) == -1) {
    return 0;
  }
  uint64_t v3 = a1 + 32;
  int v2 = *(_DWORD *)(a1 + 32);
  if (!v2)
  {
    sub_244CB4E58(a1 + 56, &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *(void *)(v3 + 16) = v6;
    int v2 = *(_DWORD *)v3;
    if (!*(_DWORD *)v3)
    {
      *(void *)a1 = 0;
      *(void *)(a1 + 8) = 0;
      *(void *)(a1 + 23) = 0;
      *(void *)(a1 + 16) = 0;
      sub_2447F6920(a1, a1 + 56, (uint64_t)&v5);
      *(_OWORD *)uint64_t v3 = v5;
      *(void *)(v3 + 16) = v6;
      int v2 = *(_DWORD *)(a1 + 32);
    }
  }
  return v2 == 0;
}

uint64_t sub_244BC0B5C(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  *(_WORD *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 24) = 0;
  sub_244CB3988(a1 + 32);
  *(unsigned char *)(a1 + 104) = 0;
  sub_244CB39B8(v6, 0, 0);
  sub_244CB3988(a1 + 136);
  int v8 = *a3;
  *(unsigned char *)(a1 + 208) = v8;
  if (v8) {
    *(unsigned char *)(a1 + 209) = a3[1];
  }
  *(_DWORD *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 128) = 93;
  sub_244CB3B04(v7, a2);
  return a1;
}

BOOL sub_244BC0BEC(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 200) == -1) {
    return 0;
  }
  uint64_t v3 = a1 + 112;
  int v2 = *(_DWORD *)(a1 + 112);
  if (!v2)
  {
    sub_244CB4E58(a1 + 136, v9);
    *(_OWORD *)uint64_t v3 = v9[0];
    *(void *)(v3 + 16) = *(void *)&v9[1];
    int v2 = *(_DWORD *)v3;
    if (!*(_DWORD *)v3)
    {
      memset(v13, 0, sizeof(v13));
      long long v11 = 0u;
      long long v12 = 0u;
      long long v10 = 0u;
      memset(v9, 0, sizeof(v9));
      sub_244CB3988((uint64_t)&v10);
      BYTE8(v13[1]) = 0;
      sub_244CB39B8(v4, 0, 0);
      *(_OWORD *)a1 = v9[0];
      *(_OWORD *)(a1 + 9) = *(_OWORD *)((char *)v9 + 9);
      long long v5 = v13[0];
      *(_OWORD *)(a1 + 64) = v12;
      *(_OWORD *)(a1 + 80) = v5;
      *(void *)(a1 + 95) = *(void *)((char *)v13 + 15);
      long long v6 = v11;
      *(_OWORD *)(a1 + 32) = v10;
      *(_OWORD *)(a1 + 48) = v6;
      int v7 = BYTE8(v13[1]);
      *(unsigned char *)(a1 + 104) = BYTE8(v13[1]);
      if (v7) {
        *(unsigned char *)(a1 + 105) = BYTE9(v13[1]);
      }
      sub_2447F6C68(a1, a1 + 136, (uint64_t)v9);
      *(_OWORD *)uint64_t v3 = v9[0];
      *(void *)(v3 + 16) = *(void *)&v9[1];
      int v2 = *(_DWORD *)(a1 + 112);
    }
  }
  return v2 == 0;
}

BOOL sub_244BC0CFC(uint64_t a1)
{
  BOOL v2 = sub_244BC0DC0(a1);
  if (v2 && *(unsigned char *)(a1 + 112)) {
    *(unsigned char *)(a1 + 10) = *sub_2446F9190((unsigned char *)(a1 + 112));
  }
  return v2;
}

uint64_t sub_244BC0D44(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  *(void *)a1 = 0;
  *(_WORD *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 10) = 0;
  sub_244CB3988(a1 + 40);
  int v7 = *a3;
  *(unsigned char *)(a1 + 112) = v7;
  if (v7) {
    *(unsigned char *)(a1 + 113) = a3[1];
  }
  *(_DWORD *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 32) = 93;
  sub_244CB3B04(v6, a2);
  return a1;
}

BOOL sub_244BC0DC0(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 104) == -1) {
    return 0;
  }
  uint64_t v3 = a1 + 16;
  int v2 = *(_DWORD *)(a1 + 16);
  if (!v2)
  {
    sub_244CB4E58(a1 + 40, &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *(void *)(v3 + 16) = v6;
    int v2 = *(_DWORD *)v3;
    if (!*(_DWORD *)v3)
    {
      *(void *)a1 = 0;
      *(_WORD *)(a1 + 8) = 0;
      *(unsigned char *)(a1 + 10) = 0;
      sub_2447FA410(a1, a1 + 40, (uint64_t)&v5);
      *(_OWORD *)uint64_t v3 = v5;
      *(void *)(v3 + 16) = v6;
      int v2 = *(_DWORD *)(a1 + 16);
    }
  }
  return v2 == 0;
}

BOOL sub_244BC0E70(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 96) == -1) {
    return 0;
  }
  uint64_t v3 = (int *)(a1 + 8);
  int v2 = *(_DWORD *)(a1 + 8);
  if (!v2)
  {
    sub_244CB4E58(a1 + 32, &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *((void *)v3 + 2) = v6;
    int v2 = *v3;
    if (!*v3)
    {
      *(unsigned char *)a1 = 0;
      sub_2447FB508(a1 + 32, (char *)a1, &v5);
      *(_OWORD *)uint64_t v3 = v5;
      *((void *)v3 + 2) = v6;
      int v2 = *(_DWORD *)(a1 + 8);
    }
  }
  return v2 == 0;
}

BOOL sub_244BC0F18(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 96) == -1) {
    return 0;
  }
  uint64_t v3 = (int *)(a1 + 8);
  int v2 = *(_DWORD *)(a1 + 8);
  if (!v2)
  {
    sub_244CB4E58(a1 + 32, &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *((void *)v3 + 2) = v6;
    int v2 = *v3;
    if (!*v3)
    {
      *(unsigned char *)a1 = 0;
      sub_2447F5F24(a1 + 32, (unsigned char *)a1, &v5);
      *(_OWORD *)uint64_t v3 = v5;
      *((void *)v3 + 2) = v6;
      int v2 = *(_DWORD *)(a1 + 8);
    }
  }
  return v2 == 0;
}

BOOL sub_244BC0FC0(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 96) == -1) {
    return 0;
  }
  uint64_t v3 = (int *)(a1 + 8);
  int v2 = *(_DWORD *)(a1 + 8);
  if (!v2)
  {
    sub_244CB4E58(a1 + 32, &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *((void *)v3 + 2) = v6;
    int v2 = *v3;
    if (!*v3)
    {
      *(unsigned char *)a1 = 0;
      sub_244823E9C(a1 + 32, (unsigned char *)a1, &v5);
      *(_OWORD *)uint64_t v3 = v5;
      *((void *)v3 + 2) = v6;
      int v2 = *(_DWORD *)(a1 + 8);
    }
  }
  return v2 == 0;
}

uint64_t sub_244BC1068(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  *(unsigned char *)(a1 + 24) = 0;
  *(unsigned char *)(a1 + 56) = 0;
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  sub_244CB3988(a1 + 112);
  int v7 = *a3;
  *(unsigned char *)(a1 + 184) = v7;
  if (v7) {
    *(unsigned char *)(a1 + 185) = a3[1];
  }
  *(_DWORD *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 104) = 93;
  sub_244CB3B04(v6, a2);
  return a1;
}

BOOL sub_244BC10E4(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 176) == -1) {
    return 0;
  }
  uint64_t v3 = a1 + 88;
  int v2 = *(_DWORD *)(a1 + 88);
  if (!v2)
  {
    sub_244CB4E58(a1 + 112, &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *(void *)(v3 + 16) = v6;
    int v2 = *(_DWORD *)v3;
    if (!*(_DWORD *)v3)
    {
      *(void *)a1 = 0;
      *(void *)(a1 + 8) = 0;
      *(unsigned char *)(a1 + 16) = 0;
      *(unsigned char *)(a1 + 24) = 0;
      *(unsigned char *)(a1 + 56) = 0;
      sub_2447FD824(a1, a1 + 112, (uint64_t)&v5);
      *(_OWORD *)uint64_t v3 = v5;
      *(void *)(v3 + 16) = v6;
      int v2 = *(_DWORD *)(a1 + 88);
    }
  }
  return v2 == 0;
}

BOOL sub_244BC1198(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 96) == -1) {
    return 0;
  }
  uint64_t v3 = (int *)(a1 + 8);
  int v2 = *(_DWORD *)(a1 + 8);
  if (!v2)
  {
    sub_244CB4E58(a1 + 32, &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *((void *)v3 + 2) = v6;
    int v2 = *v3;
    if (!*v3)
    {
      *(unsigned char *)a1 = 0;
      sub_2447F0A54(a1 + 32, (unsigned char *)a1, &v5);
      *(_OWORD *)uint64_t v3 = v5;
      *((void *)v3 + 2) = v6;
      int v2 = *(_DWORD *)(a1 + 8);
    }
  }
  return v2 == 0;
}

uint64_t sub_244BC1240(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 13) = 0;
  sub_244CB3988(a1 + 40);
  *(unsigned char *)(a1 + 112) = 0;
  sub_244CB39B8(v6, 0, 0);
  sub_244CB3988(a1 + 120);
  *(unsigned char *)(a1 + 192) = 0;
  sub_244CB39B8(v7, 0, 0);
  *(unsigned char *)(a1 + 200) = 0;
  sub_244CB3988(a1 + 232);
  int v9 = *a3;
  *(unsigned char *)(a1 + 304) = v9;
  if (v9) {
    *(unsigned char *)(a1 + 305) = a3[1];
  }
  *(_DWORD *)(a1 + 208) = 0;
  *(void *)(a1 + 216) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 224) = 93;
  sub_244CB3B04(v8, a2);
  return a1;
}

uint64_t sub_244BC12F0(uint64_t a1)
{
  sub_244CB3988(a1);
  *(unsigned char *)(v2 + 72) = 0;
  sub_244CB39B8(v2, 0, 0);
  return a1;
}

BOOL sub_244BC1328(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 296) == -1) {
    return 0;
  }
  uint64_t v3 = a1 + 208;
  int v2 = *(_DWORD *)(a1 + 208);
  if (!v2)
  {
    sub_244CB4E58(a1 + 232, &v12);
    *(_OWORD *)uint64_t v3 = v12;
    *(void *)(v3 + 16) = v13;
    int v2 = *(_DWORD *)v3;
    if (!*(_DWORD *)v3)
    {
      long long v15 = 0u;
      long long v13 = 0u;
      memset(v14, 0, sizeof(v14));
      long long v12 = 0u;
      sub_244CB3988((uint64_t)v14 + 8);
      LOBYTE(v14[5]) = 0;
      sub_244CB39B8(v4, 0, 0);
      sub_244CB3988((uint64_t)&v14[5] + 8);
      LOBYTE(v15) = 0;
      sub_244CB39B8(v5, 0, 0);
      BYTE8(v15) = 0;
      long long v6 = v13;
      *(_OWORD *)a1 = v12;
      *(_OWORD *)(a1 + 16) = v6;
      *(void *)(a1 + 32) = *(void *)&v14[0];
      *(_OWORD *)(a1 + 56) = *(_OWORD *)((char *)&v14[1] + 8);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)((char *)&v14[2] + 8);
      *(_OWORD *)(a1 + 88) = *(_OWORD *)((char *)&v14[3] + 8);
      *(void *)(a1 + 103) = *(void *)((char *)&v14[4] + 7);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)((char *)v14 + 8);
      int v7 = LOBYTE(v14[5]);
      *(unsigned char *)(a1 + 112) = v14[5];
      if (v7)
      {
        *(unsigned char *)(a1 + 113) = BYTE1(v14[5]);
        LOBYTE(v14[5]) = 0;
      }
      long long v8 = *(_OWORD *)((char *)&v14[5] + 8);
      *(_OWORD *)(a1 + 136) = *(_OWORD *)((char *)&v14[6] + 8);
      long long v9 = *(_OWORD *)((char *)&v14[8] + 8);
      *(_OWORD *)(a1 + 152) = *(_OWORD *)((char *)&v14[7] + 8);
      *(_OWORD *)(a1 + 168) = v9;
      *(void *)(a1 + 183) = *(void *)((char *)&v14[9] + 7);
      *(_OWORD *)(a1 + 120) = v8;
      int v10 = v15;
      *(unsigned char *)(a1 + 192) = v15;
      if (v10) {
        *(unsigned char *)(a1 + 193) = BYTE1(v15);
      }
      *(unsigned char *)(a1 + 200) = 0;
      sub_2448009E0(a1, a1 + 232, (uint64_t)&v12);
      *(_OWORD *)uint64_t v3 = v12;
      *(void *)(v3 + 16) = v13;
      int v2 = *(_DWORD *)(a1 + 208);
    }
  }
  return v2 == 0;
}

BOOL sub_244BC14B8(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 96) == -1) {
    return 0;
  }
  uint64_t v3 = (int *)(a1 + 8);
  int v2 = *(_DWORD *)(a1 + 8);
  if (!v2)
  {
    sub_244CB4E58(a1 + 32, &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *((void *)v3 + 2) = v6;
    int v2 = *v3;
    if (!*v3)
    {
      *(unsigned char *)a1 = 0;
      sub_2447F6AD4(a1 + 32, (unsigned char *)a1, &v5);
      *(_OWORD *)uint64_t v3 = v5;
      *((void *)v3 + 2) = v6;
      int v2 = *(_DWORD *)(a1 + 8);
    }
  }
  return v2 == 0;
}

uint64_t sub_244BC1560(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 40) = 0;
  *(unsigned char *)(a1 + 48) = 0;
  sub_244CB3988(a1 + 80);
  int v7 = *a3;
  *(unsigned char *)(a1 + 152) = v7;
  if (v7) {
    *(unsigned char *)(a1 + 153) = a3[1];
  }
  *(_DWORD *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 72) = 93;
  sub_244CB3B04(v6, a2);
  return a1;
}

BOOL sub_244BC15E4(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 144) == -1) {
    return 0;
  }
  uint64_t v3 = a1 + 56;
  int v2 = *(_DWORD *)(a1 + 56);
  if (!v2)
  {
    sub_244CB4E58(a1 + 80, &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *(void *)(v3 + 16) = v6;
    int v2 = *(_DWORD *)v3;
    if (!*(_DWORD *)v3)
    {
      *(void *)a1 = 0;
      *(unsigned char *)(a1 + 8) = 0;
      *(unsigned char *)(a1 + 32) = 0;
      *(unsigned char *)(a1 + 40) = 0;
      *(unsigned char *)(a1 + 48) = 0;
      sub_2448020F4(a1, a1 + 80, (uint64_t)&v5);
      *(_OWORD *)uint64_t v3 = v5;
      *(void *)(v3 + 16) = v6;
      int v2 = *(_DWORD *)(a1 + 56);
    }
  }
  return v2 == 0;
}

uint64_t sub_244BC169C(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  *(void *)a1 = 0;
  *(_DWORD *)(a1 + 8) = 0;
  *(_WORD *)(a1 + 12) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 31) = 0;
  sub_244CB3988(a1 + 64);
  int v7 = *a3;
  *(unsigned char *)(a1 + 136) = v7;
  if (v7) {
    *(unsigned char *)(a1 + 137) = a3[1];
  }
  *(_DWORD *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 56) = 93;
  sub_244CB3B04(v6, a2);
  return a1;
}

BOOL sub_244BC1720(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 128) == -1) {
    return 0;
  }
  uint64_t v3 = a1 + 40;
  int v2 = *(_DWORD *)(a1 + 40);
  if (!v2)
  {
    sub_244CB4E58(a1 + 64, &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *(void *)(v3 + 16) = v6;
    int v2 = *(_DWORD *)v3;
    if (!*(_DWORD *)v3)
    {
      *(_DWORD *)(a1 + 31) = 0;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      sub_244802978(a1, a1 + 64, (uint64_t)&v5);
      *(_OWORD *)uint64_t v3 = v5;
      *(void *)(v3 + 16) = v6;
      int v2 = *(_DWORD *)(a1 + 40);
    }
  }
  return v2 == 0;
}

uint64_t sub_244BC17D0(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(_WORD *)(a1 + 16) = 0;
  sub_244CB3988(a1 + 48);
  int v7 = *a3;
  *(unsigned char *)(a1 + 120) = v7;
  if (v7) {
    *(unsigned char *)(a1 + 121) = a3[1];
  }
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 40) = 93;
  sub_244CB3B04(v6, a2);
  return a1;
}

BOOL sub_244BC1848(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 112) == -1) {
    return 0;
  }
  uint64_t v3 = a1 + 24;
  int v2 = *(_DWORD *)(a1 + 24);
  if (!v2)
  {
    sub_244CB4E58(a1 + 48, &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *(void *)(v3 + 16) = v6;
    int v2 = *(_DWORD *)v3;
    if (!*(_DWORD *)v3)
    {
      *(void *)a1 = 0;
      *(void *)(a1 + 8) = 0;
      *(_WORD *)(a1 + 16) = 0;
      sub_24480344C(a1, a1 + 48, (uint64_t)&v5);
      *(_OWORD *)uint64_t v3 = v5;
      *(void *)(v3 + 16) = v6;
      int v2 = *(_DWORD *)(a1 + 24);
    }
  }
  return v2 == 0;
}

uint64_t sub_244BC18F4(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  *(_DWORD *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  sub_244CB3988(a1 + 64);
  int v7 = *a3;
  *(unsigned char *)(a1 + 136) = v7;
  if (v7) {
    *(unsigned char *)(a1 + 137) = a3[1];
  }
  *(_DWORD *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 56) = 93;
  sub_244CB3B04(v6, a2);
  return a1;
}

BOOL sub_244BC1970(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 128) == -1) {
    return 0;
  }
  uint64_t v3 = a1 + 40;
  int v2 = *(_DWORD *)(a1 + 40);
  if (!v2)
  {
    sub_244CB4E58(a1 + 64, &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *(void *)(v3 + 16) = v6;
    int v2 = *(_DWORD *)v3;
    if (!*(_DWORD *)v3)
    {
      *(void *)a1 = 0;
      *(void *)(a1 + 8) = 0;
      *(unsigned char *)(a1 + 16) = 0;
      sub_244804F60(a1, a1 + 64, (uint64_t)&v5);
      *(_OWORD *)uint64_t v3 = v5;
      *(void *)(v3 + 16) = v6;
      int v2 = *(_DWORD *)(a1 + 40);
    }
  }
  return v2 == 0;
}

uint64_t sub_244BC1A1C(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  *(_DWORD *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 24) = 0;
  sub_244CB3988(a1 + 56);
  int v7 = *a3;
  *(unsigned char *)(a1 + 128) = v7;
  if (v7) {
    *(unsigned char *)(a1 + 129) = a3[1];
  }
  *(_DWORD *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 48) = 93;
  sub_244CB3B04(v6, a2);
  return a1;
}

BOOL sub_244BC1A9C(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 120) == -1) {
    return 0;
  }
  uint64_t v3 = a1 + 32;
  int v2 = *(_DWORD *)(a1 + 32);
  if (!v2)
  {
    sub_244CB4E58(a1 + 56, &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *(void *)(v3 + 16) = v6;
    int v2 = *(_DWORD *)v3;
    if (!*(_DWORD *)v3)
    {
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      sub_244804AD4(a1, a1 + 56, (uint64_t)&v5);
      *(_OWORD *)uint64_t v3 = v5;
      *(void *)(v3 + 16) = v6;
      int v2 = *(_DWORD *)(a1 + 32);
    }
  }
  return v2 == 0;
}

BOOL sub_244BC1B48(uint64_t a1)
{
  BOOL v2 = sub_244BC1C54(a1);
  if (v2 && *(unsigned char *)(a1 + 144)) {
    *(unsigned char *)(a1 + 40) = *sub_2446F9190((unsigned char *)(a1 + 144));
  }
  return v2;
}

BOOL sub_244BC1B90(uint64_t a1)
{
  BOOL v2 = sub_244BC1DCC(a1);
  if (v2 && *(unsigned char *)(a1 + 160)) {
    *(unsigned char *)(a1 + 56) = *sub_2446F9190((unsigned char *)(a1 + 160));
  }
  return v2;
}

uint64_t sub_244BC1BD8(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  *(unsigned char *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 40) = 0;
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  sub_244CB3988(a1 + 72);
  int v7 = *a3;
  *(unsigned char *)(a1 + 144) = v7;
  if (v7) {
    *(unsigned char *)(a1 + 145) = a3[1];
  }
  *(_DWORD *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 64) = 93;
  sub_244CB3B04(v6, a2);
  return a1;
}

BOOL sub_244BC1C54(uint64_t a1)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (*(_DWORD *)(a1 + 136) == -1) {
    return 0;
  }
  uint64_t v3 = a1 + 48;
  int v2 = *(_DWORD *)(a1 + 48);
  if (!v2)
  {
    sub_244CB4E58(a1 + 72, &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *(void *)(v3 + 16) = v6;
    int v2 = *(_DWORD *)v3;
    if (!*(_DWORD *)v3)
    {
      long long v5 = 0uLL;
      long long v6 = 0uLL;
      *(_OWORD *)a1 = 0uLL;
      *(_OWORD *)(a1 + 16) = 0uLL;
      *(void *)(a1 + 32) = 0;
      *(unsigned char *)(a1 + 40) = 0;
      sub_24480819C(a1, a1 + 72, (uint64_t)&v5);
      *(_OWORD *)uint64_t v3 = v5;
      *(void *)(v3 + 16) = v6;
      int v2 = *(_DWORD *)(a1 + 48);
    }
  }
  return v2 == 0;
}

uint64_t sub_244BC1D44(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(_WORD *)(a1 + 16) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(unsigned char *)(a1 + 56) = 0;
  sub_244CB3988(a1 + 88);
  int v7 = *a3;
  *(unsigned char *)(a1 + 160) = v7;
  if (v7) {
    *(unsigned char *)(a1 + 161) = a3[1];
  }
  *(_DWORD *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 80) = 93;
  sub_244CB3B04(v6, a2);
  return a1;
}

BOOL sub_244BC1DCC(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 152) == -1) {
    return 0;
  }
  uint64_t v3 = a1 + 64;
  int v2 = *(_DWORD *)(a1 + 64);
  if (!v2)
  {
    sub_244CB4E58(a1 + 88, &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *(void *)(v3 + 16) = v6;
    int v2 = *(_DWORD *)v3;
    if (!*(_DWORD *)v3)
    {
      *(_OWORD *)(a1 + 41) = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)a1 = 0u;
      sub_244807D5C(a1, a1 + 88, (uint64_t)&v5);
      *(_OWORD *)uint64_t v3 = v5;
      *(void *)(v3 + 16) = v6;
      int v2 = *(_DWORD *)(a1 + 64);
    }
  }
  return v2 == 0;
}

BOOL sub_244BC1E80(uint64_t a1)
{
  BOOL v2 = sub_244BC1F10(a1);
  if (v2 && *(unsigned char *)(a1 + 104)) {
    *(unsigned char *)(a1 + 4) = *sub_2446F9190((unsigned char *)(a1 + 104));
  }
  return v2;
}

BOOL sub_244BC1EC8(uint64_t a1)
{
  BOOL v2 = sub_244BC204C(a1);
  if (v2 && *(unsigned char *)(a1 + 216)) {
    *(unsigned char *)(a1 + 112) = *sub_2446F9190((unsigned char *)(a1 + 216));
  }
  return v2;
}

BOOL sub_244BC1F10(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 96) == -1) {
    return 0;
  }
  uint64_t v3 = a1 + 8;
  int v2 = *(_DWORD *)(a1 + 8);
  if (!v2)
  {
    sub_244CB4E58(a1 + 32, &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *(void *)(v3 + 16) = v6;
    int v2 = *(_DWORD *)v3;
    if (!*(_DWORD *)v3)
    {
      *(_DWORD *)a1 = 0;
      *(unsigned char *)(a1 + 4) = 0;
      sub_244809FAC(a1, a1 + 32, (uint64_t)&v5);
      *(_OWORD *)uint64_t v3 = v5;
      *(void *)(v3 + 16) = v6;
      int v2 = *(_DWORD *)(a1 + 8);
    }
  }
  return v2 == 0;
}

uint64_t sub_244BC1FBC(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  *(_WORD *)a1 = 0;
  sub_244CB3988(a1 + 8);
  *(unsigned char *)(a1 + 80) = 0;
  sub_244CB39B8(v6, 0, 0);
  *(unsigned char *)(a1 + 88) = 0;
  *(unsigned char *)(a1 + 112) = 0;
  sub_244CB3988(a1 + 144);
  int v8 = *a3;
  *(unsigned char *)(a1 + 216) = v8;
  if (v8) {
    *(unsigned char *)(a1 + 217) = a3[1];
  }
  *(_DWORD *)(a1 + 120) = 0;
  *(void *)(a1 + 128) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 136) = 93;
  sub_244CB3B04(v7, a2);
  return a1;
}

BOOL sub_244BC204C(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 208) == -1) {
    return 0;
  }
  uint64_t v3 = a1 + 120;
  int v2 = *(_DWORD *)(a1 + 120);
  if (!v2)
  {
    sub_244CB4E58(a1 + 144, v7);
    *(_OWORD *)uint64_t v3 = v7[0];
    *(void *)(v3 + 16) = *(void *)&v7[1];
    int v2 = *(_DWORD *)v3;
    if (!*(_DWORD *)v3)
    {
      uint64_t v10 = 0;
      long long v8 = 0u;
      long long v9 = 0u;
      memset(v7, 0, sizeof(v7));
      sub_244CB3988((uint64_t)v7 + 8);
      LOBYTE(v8) = 0;
      sub_244CB39B8(v4, 0, 0);
      BYTE8(v8) = 0;
      LOBYTE(v10) = 0;
      *(_WORD *)a1 = v7[0];
      *(_OWORD *)(a1 + 24) = *(_OWORD *)((char *)&v7[1] + 8);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)((char *)&v7[2] + 8);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)((char *)&v7[3] + 8);
      *(void *)(a1 + 71) = *(void *)((char *)&v7[4] + 7);
      *(_OWORD *)(a1 + 8) = *(_OWORD *)((char *)v7 + 8);
      int v5 = v8;
      *(unsigned char *)(a1 + 80) = v8;
      if (v5) {
        *(unsigned char *)(a1 + 81) = BYTE1(v8);
      }
      *(unsigned char *)(a1 + 88) = 0;
      *(unsigned char *)(a1 + 112) = 0;
      sub_244809C9C(a1, a1 + 144, (uint64_t)v7);
      *(_OWORD *)uint64_t v3 = v7[0];
      *(void *)(v3 + 16) = *(void *)&v7[1];
      int v2 = *(_DWORD *)(a1 + 120);
    }
  }
  return v2 == 0;
}

BOOL sub_244BC2178(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 120) == -1) {
    return 0;
  }
  uint64_t v3 = (int *)(a1 + 32);
  int v2 = *(_DWORD *)(a1 + 32);
  if (!v2)
  {
    sub_244CB4E58(a1 + 56, &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *((void *)v3 + 2) = v6;
    int v2 = *v3;
    if (!*v3)
    {
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      sub_2447EEFB4((_OWORD *)a1, a1 + 56, (uint64_t)&v5);
      *(_OWORD *)uint64_t v3 = v5;
      *((void *)v3 + 2) = v6;
      int v2 = *(_DWORD *)(a1 + 32);
    }
  }
  return v2 == 0;
}

BOOL sub_244BC2224(uint64_t a1)
{
  BOOL v2 = sub_244BC226C(a1);
  if (v2 && *(unsigned char *)(a1 + 120)) {
    *(unsigned char *)(a1 + 17) = *sub_2446F9190((unsigned char *)(a1 + 120));
  }
  return v2;
}

BOOL sub_244BC226C(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 112) == -1) {
    return 0;
  }
  uint64_t v3 = a1 + 24;
  int v2 = *(_DWORD *)(a1 + 24);
  if (!v2)
  {
    sub_244CB4E58(a1 + 48, &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *(void *)(v3 + 16) = v6;
    int v2 = *(_DWORD *)v3;
    if (!*(_DWORD *)v3)
    {
      *(void *)a1 = 0;
      *(void *)(a1 + 8) = 0;
      *(_WORD *)(a1 + 16) = 0;
      sub_24480B200(a1, a1 + 48, (uint64_t)&v5);
      *(_OWORD *)uint64_t v3 = v5;
      *(void *)(v3 + 16) = v6;
      int v2 = *(_DWORD *)(a1 + 24);
    }
  }
  return v2 == 0;
}

uint64_t sub_244BC2318(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  *(unsigned char *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 0;
  sub_244CB3988(a1 + 56);
  int v7 = *a3;
  *(unsigned char *)(a1 + 128) = v7;
  if (v7) {
    *(unsigned char *)(a1 + 129) = a3[1];
  }
  *(_DWORD *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 48) = 93;
  sub_244CB3B04(v6, a2);
  return a1;
}

BOOL sub_244BC2390(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 120) == -1) {
    return 0;
  }
  uint64_t v3 = a1 + 32;
  int v2 = *(_DWORD *)(a1 + 32);
  if (!v2)
  {
    sub_244CB4E58(a1 + 56, &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *(void *)(v3 + 16) = v6;
    int v2 = *(_DWORD *)v3;
    if (!*(_DWORD *)v3)
    {
      *(unsigned char *)a1 = 0;
      *(unsigned char *)(a1 + 8) = 0;
      sub_2447EF1D4(a1, a1 + 56, (uint64_t)&v5);
      *(_OWORD *)uint64_t v3 = v5;
      *(void *)(v3 + 16) = v6;
      int v2 = *(_DWORD *)(a1 + 32);
    }
  }
  return v2 == 0;
}

uint64_t sub_244BC243C(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  sub_244CB3988(a1 + 24);
  *(unsigned char *)(a1 + 96) = 0;
  sub_244CB39B8(v6, 0, 0);
  sub_244CB3988(a1 + 128);
  int v8 = *a3;
  *(unsigned char *)(a1 + 200) = v8;
  if (v8) {
    *(unsigned char *)(a1 + 201) = a3[1];
  }
  *(_DWORD *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 120) = 93;
  sub_244CB3B04(v7, a2);
  return a1;
}

BOOL sub_244BC24CC(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 192) == -1) {
    return 0;
  }
  uint64_t v3 = a1 + 104;
  int v2 = *(_DWORD *)(a1 + 104);
  if (!v2)
  {
    sub_244CB4E58(a1 + 128, v7);
    *(_OWORD *)uint64_t v3 = v7[0];
    *(void *)(v3 + 16) = *(void *)&v7[1];
    int v2 = *(_DWORD *)v3;
    if (!*(_DWORD *)v3)
    {
      uint64_t v8 = 0;
      memset(v7, 0, sizeof(v7));
      sub_244CB3988((uint64_t)&v7[1] + 8);
      LOBYTE(v8) = 0;
      sub_244CB39B8(v4, 0, 0);
      *(_OWORD *)a1 = v7[0];
      *(unsigned char *)(a1 + 16) = v7[1];
      *(_OWORD *)(a1 + 40) = *(_OWORD *)((char *)&v7[2] + 8);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)((char *)&v7[3] + 8);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)((char *)&v7[4] + 8);
      *(void *)(a1 + 87) = *(void *)((char *)&v7[5] + 7);
      *(_OWORD *)(a1 + 24) = *(_OWORD *)((char *)&v7[1] + 8);
      int v5 = v8;
      *(unsigned char *)(a1 + 96) = v8;
      if (v5) {
        *(unsigned char *)(a1 + 97) = BYTE1(v8);
      }
      sub_2447EDA04(a1, a1 + 128, (uint64_t)v7);
      *(_OWORD *)uint64_t v3 = v7[0];
      *(void *)(v3 + 16) = *(void *)&v7[1];
      int v2 = *(_DWORD *)(a1 + 104);
    }
  }
  return v2 == 0;
}

uint64_t sub_244BC25EC(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  *(unsigned char *)a1 = 0;
  *(_WORD *)(a1 + 4) = 0;
  sub_244CB3988(a1 + 32);
  int v7 = *a3;
  *(unsigned char *)(a1 + 104) = v7;
  if (v7) {
    *(unsigned char *)(a1 + 105) = a3[1];
  }
  *(_DWORD *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 24) = 93;
  sub_244CB3B04(v6, a2);
  return a1;
}

BOOL sub_244BC2664(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 96) == -1) {
    return 0;
  }
  uint64_t v3 = a1 + 8;
  int v2 = *(_DWORD *)(a1 + 8);
  if (!v2)
  {
    sub_244CB4E58(a1 + 32, &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *(void *)(v3 + 16) = v6;
    int v2 = *(_DWORD *)v3;
    if (!*(_DWORD *)v3)
    {
      *(unsigned char *)a1 = 0;
      *(_WORD *)(a1 + 4) = 0;
      sub_2447ED5A0(a1, a1 + 32, (uint64_t)&v5);
      *(_OWORD *)uint64_t v3 = v5;
      *(void *)(v3 + 16) = v6;
      int v2 = *(_DWORD *)(a1 + 8);
    }
  }
  return v2 == 0;
}

BOOL sub_244BC2710(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 192) == -1) {
    return 0;
  }
  uint64_t v3 = a1 + 104;
  int v2 = *(_DWORD *)(a1 + 104);
  if (!v2)
  {
    sub_244CB4E58(a1 + 128, v7);
    *(_OWORD *)uint64_t v3 = v7[0];
    *(void *)(v3 + 16) = *(void *)&v7[1];
    int v2 = *(_DWORD *)v3;
    if (!*(_DWORD *)v3)
    {
      uint64_t v8 = 0;
      memset(v7, 0, sizeof(v7));
      sub_244CB3988((uint64_t)&v7[1] + 8);
      LOBYTE(v8) = 0;
      sub_244CB39B8(v4, 0, 0);
      *(_OWORD *)a1 = v7[0];
      *(unsigned char *)(a1 + 16) = v7[1];
      *(_OWORD *)(a1 + 40) = *(_OWORD *)((char *)&v7[2] + 8);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)((char *)&v7[3] + 8);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)((char *)&v7[4] + 8);
      *(void *)(a1 + 87) = *(void *)((char *)&v7[5] + 7);
      *(_OWORD *)(a1 + 24) = *(_OWORD *)((char *)&v7[1] + 8);
      int v5 = v8;
      *(unsigned char *)(a1 + 96) = v8;
      if (v5) {
        *(unsigned char *)(a1 + 97) = BYTE1(v8);
      }
      sub_24480CFF4(a1, a1 + 128, (uint64_t)v7);
      *(_OWORD *)uint64_t v3 = v7[0];
      *(void *)(v3 + 16) = *(void *)&v7[1];
      int v2 = *(_DWORD *)(a1 + 104);
    }
  }
  return v2 == 0;
}

BOOL sub_244BC2830(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 96) == -1) {
    return 0;
  }
  uint64_t v3 = (int *)(a1 + 8);
  int v2 = *(_DWORD *)(a1 + 8);
  if (!v2)
  {
    sub_244CB4E58(a1 + 32, &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *((void *)v3 + 2) = v6;
    int v2 = *v3;
    if (!*v3)
    {
      *(_DWORD *)a1 = 0;
      sub_24480CCA8((_WORD *)a1, a1 + 32, (uint64_t)&v5);
      *(_OWORD *)uint64_t v3 = v5;
      *((void *)v3 + 2) = v6;
      int v2 = *(_DWORD *)(a1 + 8);
    }
  }
  return v2 == 0;
}

BOOL sub_244BC28D8(uint64_t a1)
{
  BOOL v2 = sub_244BC2994(a1);
  if (v2 && *(unsigned char *)(a1 + 104)) {
    *(unsigned char *)(a1 + 6) = *sub_2446F9190((unsigned char *)(a1 + 104));
  }
  return v2;
}

uint64_t sub_244BC2920(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  *(_DWORD *)(a1 + 3) = 0;
  *(_DWORD *)a1 = 0;
  sub_244CB3988(a1 + 32);
  int v7 = *a3;
  *(unsigned char *)(a1 + 104) = v7;
  if (v7) {
    *(unsigned char *)(a1 + 105) = a3[1];
  }
  *(_DWORD *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 24) = 93;
  sub_244CB3B04(v6, a2);
  return a1;
}

BOOL sub_244BC2994(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 96) == -1) {
    return 0;
  }
  uint64_t v3 = a1 + 8;
  int v2 = *(_DWORD *)(a1 + 8);
  if (!v2)
  {
    sub_244CB4E58(a1 + 32, &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *(void *)(v3 + 16) = v6;
    int v2 = *(_DWORD *)v3;
    if (!*(_DWORD *)v3)
    {
      *(unsigned char *)(a1 + 6) = 0;
      *(_WORD *)(a1 + 4) = 0;
      *(_DWORD *)a1 = 0;
      sub_244810DE0(a1, a1 + 32, (uint64_t)&v5);
      *(_OWORD *)uint64_t v3 = v5;
      *(void *)(v3 + 16) = v6;
      int v2 = *(_DWORD *)(a1 + 8);
    }
  }
  return v2 == 0;
}

uint64_t sub_244BC2A44(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  *(unsigned char *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  sub_244CB3988(a1 + 48);
  int v7 = *a3;
  *(unsigned char *)(a1 + 120) = v7;
  if (v7) {
    *(unsigned char *)(a1 + 121) = a3[1];
  }
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 40) = 93;
  sub_244CB3B04(v6, a2);
  return a1;
}

BOOL sub_244BC2ABC(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 112) == -1) {
    return 0;
  }
  uint64_t v3 = a1 + 24;
  int v2 = *(_DWORD *)(a1 + 24);
  if (!v2)
  {
    sub_244CB4E58(a1 + 48, &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *(void *)(v3 + 16) = v6;
    int v2 = *(_DWORD *)v3;
    if (!*(_DWORD *)v3)
    {
      *(void *)a1 = 0;
      *(void *)(a1 + 8) = 0;
      *(void *)(a1 + 16) = 0;
      sub_244812E60(a1, a1 + 48, (uint64_t)&v5);
      *(_OWORD *)uint64_t v3 = v5;
      *(void *)(v3 + 16) = v6;
      int v2 = *(_DWORD *)(a1 + 24);
    }
  }
  return v2 == 0;
}

BOOL sub_244BC2B68(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 112) == -1) {
    return 0;
  }
  uint64_t v3 = a1 + 24;
  int v2 = *(_DWORD *)(a1 + 24);
  if (!v2)
  {
    sub_244CB4E58(a1 + 48, &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *(void *)(v3 + 16) = v6;
    int v2 = *(_DWORD *)v3;
    if (!*(_DWORD *)v3)
    {
      *(void *)a1 = 0;
      *(void *)(a1 + 8) = 0;
      *(void *)(a1 + 16) = 0;
      sub_2448130B0(a1, a1 + 48, (uint64_t)&v5);
      *(_OWORD *)uint64_t v3 = v5;
      *(void *)(v3 + 16) = v6;
      int v2 = *(_DWORD *)(a1 + 24);
    }
  }
  return v2 == 0;
}

uint64_t sub_244BC2C14(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  *(_WORD *)a1 = 0;
  *(unsigned char *)(a1 + 2) = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  sub_244CB3988(a1 + 24);
  *(unsigned char *)(a1 + 96) = 0;
  sub_244CB39B8(v6, 0, 0);
  sub_244CB3988(a1 + 128);
  int v8 = *a3;
  *(unsigned char *)(a1 + 200) = v8;
  if (v8) {
    *(unsigned char *)(a1 + 201) = a3[1];
  }
  *(_DWORD *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 120) = 93;
  sub_244CB3B04(v7, a2);
  return a1;
}

BOOL sub_244BC2CA8(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 192) == -1) {
    return 0;
  }
  uint64_t v3 = a1 + 104;
  int v2 = *(_DWORD *)(a1 + 104);
  if (!v2)
  {
    sub_244CB4E58(a1 + 128, v7);
    *(_OWORD *)uint64_t v3 = v7[0];
    *(void *)(v3 + 16) = *(void *)&v7[1];
    int v2 = *(_DWORD *)v3;
    if (!*(_DWORD *)v3)
    {
      uint64_t v8 = 0;
      memset(v7, 0, sizeof(v7));
      sub_244CB3988((uint64_t)&v7[1] + 8);
      LOBYTE(v8) = 0;
      sub_244CB39B8(v4, 0, 0);
      *(_OWORD *)a1 = v7[0];
      *(void *)(a1 + 16) = *(void *)&v7[1];
      *(_OWORD *)(a1 + 40) = *(_OWORD *)((char *)&v7[2] + 8);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)((char *)&v7[3] + 8);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)((char *)&v7[4] + 8);
      *(void *)(a1 + 87) = *(void *)((char *)&v7[5] + 7);
      *(_OWORD *)(a1 + 24) = *(_OWORD *)((char *)&v7[1] + 8);
      int v5 = v8;
      *(unsigned char *)(a1 + 96) = v8;
      if (v5) {
        *(unsigned char *)(a1 + 97) = BYTE1(v8);
      }
      sub_2447EE228(a1, a1 + 128, (uint64_t)v7);
      *(_OWORD *)uint64_t v3 = v7[0];
      *(void *)(v3 + 16) = *(void *)&v7[1];
      int v2 = *(_DWORD *)(a1 + 104);
    }
  }
  return v2 == 0;
}

uint64_t sub_244BC2DC8(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  *(unsigned char *)(a1 + 20) = 0;
  *(unsigned char *)(a1 + 24) = 0;
  *(unsigned char *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 48) = 0;
  *(unsigned char *)(a1 + 64) = 0;
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  sub_244CB3988(a1 + 104);
  int v7 = *a3;
  *(unsigned char *)(a1 + 176) = v7;
  if (v7) {
    *(unsigned char *)(a1 + 177) = a3[1];
  }
  *(_DWORD *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 96) = 93;
  sub_244CB3B04(v6, a2);
  return a1;
}

BOOL sub_244BC2E50(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 168) == -1) {
    return 0;
  }
  uint64_t v3 = a1 + 80;
  int v2 = *(_DWORD *)(a1 + 80);
  if (!v2)
  {
    sub_244CB4E58(a1 + 104, &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *(void *)(v3 + 16) = v6;
    int v2 = *(_DWORD *)v3;
    if (!*(_DWORD *)v3)
    {
      *(unsigned char *)(a1 + 20) = 0;
      *(unsigned char *)(a1 + 24) = 0;
      *(unsigned char *)(a1 + 32) = 0;
      *(unsigned char *)(a1 + 48) = 0;
      *(unsigned char *)(a1 + 64) = 0;
      *(void *)a1 = 0;
      *(void *)(a1 + 8) = 0;
      *(unsigned char *)(a1 + 16) = 0;
      sub_2447EDD4C(a1, a1 + 104, (uint64_t)&v5);
      *(_OWORD *)uint64_t v3 = v5;
      *(void *)(v3 + 16) = v6;
      int v2 = *(_DWORD *)(a1 + 80);
    }
  }
  return v2 == 0;
}

uint64_t sub_244BC2F10(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  *(_WORD *)a1 = 0;
  *(unsigned char *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 40) = 0;
  *(unsigned char *)(a1 + 48) = 0;
  *(unsigned char *)(a1 + 56) = 0;
  *(unsigned char *)(a1 + 72) = 0;
  *(unsigned char *)(a1 + 88) = 0;
  *(unsigned char *)(a1 + 104) = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 24) = 0;
  sub_244CB3988(a1 + 144);
  int v7 = *a3;
  *(unsigned char *)(a1 + 216) = v7;
  if (v7) {
    *(unsigned char *)(a1 + 217) = a3[1];
  }
  *(_DWORD *)(a1 + 120) = 0;
  *(void *)(a1 + 128) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 136) = 93;
  sub_244CB3B04(v6, a2);
  return a1;
}

BOOL sub_244BC2FA8(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 208) == -1) {
    return 0;
  }
  uint64_t v3 = a1 + 120;
  int v2 = *(_DWORD *)(a1 + 120);
  if (!v2)
  {
    sub_244CB4E58(a1 + 144, &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *(void *)(v3 + 16) = v6;
    int v2 = *(_DWORD *)v3;
    if (!*(_DWORD *)v3)
    {
      *(unsigned char *)(a1 + 32) = 0;
      *(unsigned char *)(a1 + 40) = 0;
      *(unsigned char *)(a1 + 48) = 0;
      *(unsigned char *)(a1 + 56) = 0;
      *(unsigned char *)(a1 + 72) = 0;
      *(unsigned char *)(a1 + 88) = 0;
      *(unsigned char *)(a1 + 104) = 0;
      *(void *)(a1 + 8) = 0;
      *(void *)(a1 + 16) = 0;
      *(void *)a1 = 0;
      *(unsigned char *)(a1 + 24) = 0;
      sub_2448144D8(a1, a1 + 144, (uint64_t)&v5);
      *(_OWORD *)uint64_t v3 = v5;
      *(void *)(v3 + 16) = v6;
      int v2 = *(_DWORD *)(a1 + 120);
    }
  }
  return v2 == 0;
}

uint64_t sub_244BC3074(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  *(unsigned char *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  sub_244CB3988(a1 + 48);
  int v7 = *a3;
  *(unsigned char *)(a1 + 120) = v7;
  if (v7) {
    *(unsigned char *)(a1 + 121) = a3[1];
  }
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 40) = 93;
  sub_244CB3B04(v6, a2);
  return a1;
}

BOOL sub_244BC30F0(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 112) == -1) {
    return 0;
  }
  uint64_t v3 = (int *)(a1 + 24);
  int v2 = *(_DWORD *)(a1 + 24);
  if (!v2)
  {
    sub_244CB4E58(a1 + 48, &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *((void *)v3 + 2) = v6;
    int v2 = *v3;
    if (!*v3)
    {
      *(void *)a1 = 0;
      *(void *)(a1 + 8) = 0;
      *(void *)(a1 + 16) = 0;
      sub_244814148((unsigned char *)a1, a1 + 48, (uint64_t)&v5);
      *(_OWORD *)uint64_t v3 = v5;
      *((void *)v3 + 2) = v6;
      int v2 = *(_DWORD *)(a1 + 24);
    }
  }
  return v2 == 0;
}

unsigned char *sub_244BC319C(unsigned char *a1)
{
  if (!*a1) {
    sub_244E1EE60();
  }
  return a1 + 4;
}

uint64_t sub_244BC31C0(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  *(void *)(a1 + 30) = 0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  sub_244CB3988(a1 + 64);
  int v7 = *a3;
  *(unsigned char *)(a1 + 136) = v7;
  if (v7) {
    *(unsigned char *)(a1 + 137) = a3[1];
  }
  *(_DWORD *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 56) = 93;
  sub_244CB3B04(v6, a2);
  return a1;
}

BOOL sub_244BC3238(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 128) == -1) {
    return 0;
  }
  uint64_t v3 = (int *)(a1 + 40);
  int v2 = *(_DWORD *)(a1 + 40);
  if (!v2)
  {
    sub_244CB4E58(a1 + 64, &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *((void *)v3 + 2) = v6;
    int v2 = *v3;
    if (!*v3)
    {
      *(void *)(a1 + 30) = 0;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      sub_244817280((_OWORD *)a1, a1 + 64, (uint64_t)&v5);
      *(_OWORD *)uint64_t v3 = v5;
      *((void *)v3 + 2) = v6;
      int v2 = *(_DWORD *)(a1 + 40);
    }
  }
  return v2 == 0;
}

uint64_t sub_244BC32E8(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  *(unsigned char *)(a1 + 32) = 0;
  *(_WORD *)(a1 + 40) = 0;
  *(_DWORD *)(a1 + 44) = 0;
  *(unsigned char *)(a1 + 48) = 0;
  *(unsigned char *)(a1 + 50) = 0;
  *(unsigned char *)(a1 + 52) = 0;
  *(unsigned char *)(a1 + 56) = 0;
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  sub_244CB3988(a1 + 64);
  *(unsigned char *)(a1 + 136) = 0;
  sub_244CB39B8(v6, 0, 0);
  sub_244CB3988(a1 + 168);
  int v8 = *a3;
  *(unsigned char *)(a1 + 240) = v8;
  if (v8) {
    *(unsigned char *)(a1 + 241) = a3[1];
  }
  *(_DWORD *)(a1 + 144) = 0;
  *(void *)(a1 + 152) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 160) = 93;
  sub_244CB3B04(v7, a2);
  return a1;
}

BOOL sub_244BC3394(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 232) == -1) {
    return 0;
  }
  uint64_t v3 = a1 + 144;
  int v2 = *(_DWORD *)(a1 + 144);
  if (!v2)
  {
    sub_244CB4E58(a1 + 168, &v11);
    *(_OWORD *)uint64_t v3 = v11;
    *(void *)(v3 + 16) = v12;
    int v2 = *(_DWORD *)v3;
    if (!*(_DWORD *)v3)
    {
      memset(v18, 0, sizeof(v18));
      long long v16 = 0u;
      long long v17 = 0u;
      long long v14 = 0u;
      long long v15 = 0u;
      long long v12 = 0u;
      long long v13 = 0u;
      long long v11 = 0u;
      sub_244CB3988((uint64_t)&v15);
      BYTE8(v18[1]) = 0;
      sub_244CB39B8(v4, 0, 0);
      long long v5 = v12;
      *(_OWORD *)a1 = v11;
      *(_OWORD *)(a1 + 16) = v5;
      *(unsigned char *)(a1 + 32) = v13;
      *(_WORD *)(a1 + 40) = WORD4(v13);
      *(_DWORD *)(a1 + 44) = HIDWORD(v13);
      int v6 = v14;
      *(unsigned char *)(a1 + 48) = v14;
      if (v6)
      {
        *(unsigned char *)(a1 + 49) = BYTE1(v14);
        LOBYTE(v14) = 0;
      }
      *(_DWORD *)(a1 + 50) = *(_DWORD *)((char *)&v14 + 2);
      *(_DWORD *)(a1 + 53) = *(_DWORD *)((char *)&v14 + 5);
      long long v7 = v18[0];
      *(_OWORD *)(a1 + 96) = v17;
      *(_OWORD *)(a1 + 112) = v7;
      *(void *)(a1 + 127) = *(void *)((char *)v18 + 15);
      long long v8 = v16;
      *(_OWORD *)(a1 + 64) = v15;
      *(_OWORD *)(a1 + 80) = v8;
      int v9 = BYTE8(v18[1]);
      *(unsigned char *)(a1 + 136) = BYTE8(v18[1]);
      if (v9) {
        *(unsigned char *)(a1 + 137) = BYTE9(v18[1]);
      }
      sub_244816E60(a1, a1 + 168, (uint64_t)&v11);
      *(_OWORD *)uint64_t v3 = v11;
      *(void *)(v3 + 16) = v12;
      int v2 = *(_DWORD *)(a1 + 144);
    }
  }
  return v2 == 0;
}

uint64_t sub_244BC34F0(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  *(_DWORD *)a1 = 0;
  *(unsigned char *)(a1 + 4) = 0;
  *(unsigned char *)(a1 + 30) = 0;
  *(unsigned char *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 34) = 0;
  *(unsigned char *)(a1 + 36) = 0;
  sub_244CB3988(a1 + 64);
  int v7 = *a3;
  *(unsigned char *)(a1 + 136) = v7;
  if (v7) {
    *(unsigned char *)(a1 + 137) = a3[1];
  }
  *(_DWORD *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 56) = 93;
  sub_244CB3B04(v6, a2);
  return a1;
}

BOOL sub_244BC3578(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 128) == -1) {
    return 0;
  }
  uint64_t v3 = a1 + 40;
  int v2 = *(_DWORD *)(a1 + 40);
  if (!v2)
  {
    sub_244CB4E58(a1 + 64, v9);
    *(_OWORD *)uint64_t v3 = v9[0];
    *(void *)(v3 + 16) = *(void *)&v9[1];
    int v2 = *(_DWORD *)v3;
    if (!*(_DWORD *)v3)
    {
      memset(v9, 0, 38);
      *(_DWORD *)a1 = 0;
      sub_244BC368C(a1 + 4, (unsigned __int8 *)v9 + 4);
      int v4 = BYTE14(v9[1]);
      *(unsigned char *)(a1 + 30) = BYTE14(v9[1]);
      if (v4) {
        *(unsigned char *)(a1 + 31) = HIBYTE(v9[1]);
      }
      int v5 = LOBYTE(v9[2]);
      *(unsigned char *)(a1 + 32) = v9[2];
      if (v5) {
        *(unsigned char *)(a1 + 33) = BYTE1(v9[2]);
      }
      int v6 = BYTE2(v9[2]);
      *(unsigned char *)(a1 + 34) = BYTE2(v9[2]);
      if (v6) {
        *(unsigned char *)(a1 + 35) = BYTE3(v9[2]);
      }
      int v7 = BYTE4(v9[2]);
      *(unsigned char *)(a1 + 36) = BYTE4(v9[2]);
      if (v7) {
        *(unsigned char *)(a1 + 37) = BYTE5(v9[2]);
      }
      sub_244816920(a1, a1 + 64, (uint64_t)v9);
      *(_OWORD *)uint64_t v3 = v9[0];
      *(void *)(v3 + 16) = *(void *)&v9[1];
      int v2 = *(_DWORD *)(a1 + 40);
    }
  }
  return v2 == 0;
}

uint64_t sub_244BC368C(uint64_t result, unsigned __int8 *a2)
{
  int v2 = *a2;
  *(unsigned char *)uint64_t result = v2;
  if (v2)
  {
    int v3 = a2[2];
    *(unsigned char *)(result + 2) = v3;
    if (v3)
    {
      *(_DWORD *)(result + 4) = *((_DWORD *)a2 + 1);
      a2[2] = 0;
    }
    int v4 = a2[8];
    *(unsigned char *)(result + 8) = v4;
    if (v4)
    {
      *(_DWORD *)(result + 10) = *(_DWORD *)(a2 + 10);
      a2[8] = 0;
    }
    int v5 = a2[14];
    *(unsigned char *)(result + 14) = v5;
    if (v5)
    {
      *(_DWORD *)(result + 16) = *((_DWORD *)a2 + 4);
      a2[14] = 0;
    }
    int v6 = a2[20];
    *(unsigned char *)(result + 20) = v6;
    if (v6)
    {
      *(_DWORD *)(result + 22) = *(_DWORD *)(a2 + 22);
      a2[20] = 0;
    }
    *a2 = 0;
  }
  return result;
}

uint64_t sub_244BC3700(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  *(unsigned char *)(a1 + 20) = 0;
  *(unsigned char *)(a1 + 24) = 0;
  *(unsigned char *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 40) = 0;
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(_WORD *)(a1 + 16) = 0;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(unsigned char *)(a1 + 64) = 0;
  sub_244CB3988(a1 + 176);
  int v7 = *a3;
  *(unsigned char *)(a1 + 248) = v7;
  if (v7) {
    *(unsigned char *)(a1 + 249) = a3[1];
  }
  *(_DWORD *)(a1 + 152) = 0;
  *(void *)(a1 + 160) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 168) = 93;
  sub_244CB3B04(v6, a2);
  return a1;
}

BOOL sub_244BC3790(uint64_t a1)
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  if (*(_DWORD *)(a1 + 240) == -1) {
    return 0;
  }
  uint64_t v3 = a1 + 152;
  int v2 = *(_DWORD *)(a1 + 152);
  if (!v2)
  {
    sub_244CB4E58(a1 + 176, v5);
    *(_OWORD *)uint64_t v3 = *(_OWORD *)v5;
    *(void *)(v3 + 16) = *(void *)&v5[16];
    int v2 = *(_DWORD *)v3;
    if (!*(_DWORD *)v3)
    {
      memset(v5, 0, 23);
      *(void *)a1 = 0;
      *(void *)(a1 + 8) = 0;
      *(_WORD *)(a1 + 16) = 0;
      *(void *)(a1 + 28) = 0;
      *(void *)(a1 + 20) = 0;
      *(void *)(a1 + 33) = 0;
      *(void *)(a1 + 56) = 0;
      *(_OWORD *)(a1 + 41) = *(_OWORD *)v5;
      *(unsigned char *)(a1 + 64) = 0;
      sub_24481873C(a1, a1 + 176, (uint64_t)v5);
      *(_OWORD *)uint64_t v3 = *(_OWORD *)v5;
      *(void *)(v3 + 16) = *(void *)&v5[16];
      int v2 = *(_DWORD *)(a1 + 152);
    }
  }
  return v2 == 0;
}

BOOL sub_244BC3898(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 120) == -1) {
    return 0;
  }
  uint64_t v3 = a1 + 32;
  int v2 = *(_DWORD *)(a1 + 32);
  if (!v2)
  {
    sub_244CB4E58(a1 + 56, &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *(void *)(v3 + 16) = v6;
    int v2 = *(_DWORD *)v3;
    if (!*(_DWORD *)v3)
    {
      *(unsigned char *)a1 = 0;
      *(unsigned char *)(a1 + 8) = 0;
      sub_24481843C(a1, a1 + 56, (uint64_t)&v5);
      *(_OWORD *)uint64_t v3 = v5;
      *(void *)(v3 + 16) = v6;
      int v2 = *(_DWORD *)(a1 + 32);
    }
  }
  return v2 == 0;
}

uint64_t sub_244BC3944(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  sub_244CB3988(a1 + 48);
  int v7 = *a3;
  *(unsigned char *)(a1 + 120) = v7;
  if (v7) {
    *(unsigned char *)(a1 + 121) = a3[1];
  }
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 40) = 93;
  sub_244CB3B04(v6, a2);
  return a1;
}

BOOL sub_244BC39BC(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 112) == -1) {
    return 0;
  }
  uint64_t v3 = (int *)(a1 + 24);
  int v2 = *(_DWORD *)(a1 + 24);
  if (!v2)
  {
    sub_244CB4E58(a1 + 48, &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *((void *)v3 + 2) = v6;
    int v2 = *v3;
    if (!*v3)
    {
      *(void *)a1 = 0;
      *(void *)(a1 + 8) = 0;
      *(void *)(a1 + 16) = 0;
      sub_244819938((void *)a1, a1 + 48, (uint64_t)&v5);
      *(_OWORD *)uint64_t v3 = v5;
      *((void *)v3 + 2) = v6;
      int v2 = *(_DWORD *)(a1 + 24);
    }
  }
  return v2 == 0;
}

uint64_t sub_244BC3A68(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  *(unsigned char *)(a1 + 24) = 0;
  *(unsigned char *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 40) = 0;
  *(unsigned char *)(a1 + 48) = 0;
  *(unsigned char *)(a1 + 64) = 0;
  *(unsigned char *)(a1 + 80) = 0;
  *(unsigned char *)(a1 + 96) = 0;
  *(unsigned char *)(a1 + 112) = 0;
  *(unsigned char *)(a1 + 200) = 0;
  *(unsigned char *)(a1 + 216) = 0;
  *(unsigned char *)(a1 + 232) = 0;
  *(unsigned char *)(a1 + 240) = 0;
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 13) = 0;
  sub_244CB3988(a1 + 272);
  int v7 = *a3;
  *(unsigned char *)(a1 + 344) = v7;
  if (v7) {
    *(unsigned char *)(a1 + 345) = a3[1];
  }
  *(_DWORD *)(a1 + 248) = 0;
  *(void *)(a1 + 256) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 264) = 93;
  sub_244CB3B04(v6, a2);
  return a1;
}

BOOL sub_244BC3B0C(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 336) == -1) {
    return 0;
  }
  uint64_t v3 = a1 + 248;
  int v2 = *(_DWORD *)(a1 + 248);
  if (!v2)
  {
    sub_244CB4E58(a1 + 272, &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *(void *)(v3 + 16) = v6;
    int v2 = *(_DWORD *)v3;
    if (!*(_DWORD *)v3)
    {
      *(unsigned char *)(a1 + 24) = 0;
      *(unsigned char *)(a1 + 32) = 0;
      *(unsigned char *)(a1 + 40) = 0;
      *(unsigned char *)(a1 + 48) = 0;
      *(unsigned char *)(a1 + 64) = 0;
      *(unsigned char *)(a1 + 80) = 0;
      *(unsigned char *)(a1 + 96) = 0;
      *(unsigned char *)(a1 + 112) = 0;
      *(unsigned char *)(a1 + 200) = 0;
      *(unsigned char *)(a1 + 216) = 0;
      *(unsigned char *)(a1 + 232) = 0;
      *(unsigned char *)(a1 + 240) = 0;
      *(void *)a1 = 0;
      *(void *)(a1 + 8) = 0;
      *(void *)(a1 + 13) = 0;
      sub_24481A07C(a1, a1 + 272, (uint64_t)&v5);
      *(_OWORD *)uint64_t v3 = v5;
      *(void *)(v3 + 16) = v6;
      int v2 = *(_DWORD *)(a1 + 248);
    }
  }
  return v2 == 0;
}

uint64_t sub_244BC3BE8(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  *(unsigned char *)a1 = 0;
  *(_DWORD *)(a1 + 4) = 0;
  *(unsigned char *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 10) = 0;
  sub_244CB3988(a1 + 40);
  int v7 = *a3;
  *(unsigned char *)(a1 + 112) = v7;
  if (v7) {
    *(unsigned char *)(a1 + 113) = a3[1];
  }
  *(_DWORD *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 32) = 93;
  sub_244CB3B04(v6, a2);
  return a1;
}

BOOL sub_244BC3C68(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 104) == -1) {
    return 0;
  }
  uint64_t v3 = a1 + 16;
  int v2 = *(_DWORD *)(a1 + 16);
  if (!v2)
  {
    sub_244CB4E58(a1 + 40, &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *(void *)(v3 + 16) = v6;
    int v2 = *(_DWORD *)v3;
    if (!*(_DWORD *)v3)
    {
      *(unsigned char *)(a1 + 10) = 0;
      *(void *)a1 = 0;
      *(unsigned char *)(a1 + 8) = 0;
      sub_244819650(a1, a1 + 40, (uint64_t)&v5);
      *(_OWORD *)uint64_t v3 = v5;
      *(void *)(v3 + 16) = v6;
      int v2 = *(_DWORD *)(a1 + 16);
    }
  }
  return v2 == 0;
}

BOOL sub_244BC3D18(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 120) == -1) {
    return 0;
  }
  uint64_t v3 = a1 + 32;
  int v2 = *(_DWORD *)(a1 + 32);
  if (!v2)
  {
    sub_244CB4E58(a1 + 56, &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *(void *)(v3 + 16) = v6;
    int v2 = *(_DWORD *)v3;
    if (!*(_DWORD *)v3)
    {
      *(unsigned char *)a1 = 0;
      *(unsigned char *)(a1 + 8) = 0;
      sub_24481DF10(a1, a1 + 56, (uint64_t)&v5);
      *(_OWORD *)uint64_t v3 = v5;
      *(void *)(v3 + 16) = v6;
      int v2 = *(_DWORD *)(a1 + 32);
    }
  }
  return v2 == 0;
}

uint64_t sub_244BC3DC4(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  *(_DWORD *)a1 = 0;
  *(unsigned char *)(a1 + 4) = 0;
  *(unsigned char *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 40) = 0;
  *(unsigned char *)(a1 + 48) = 0;
  *(unsigned char *)(a1 + 51) = 0;
  sub_244CB3988(a1 + 80);
  int v7 = *a3;
  *(unsigned char *)(a1 + 152) = v7;
  if (v7) {
    *(unsigned char *)(a1 + 153) = a3[1];
  }
  *(_DWORD *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 72) = 93;
  sub_244CB3B04(v6, a2);
  return a1;
}

BOOL sub_244BC3E50(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 144) == -1) {
    return 0;
  }
  uint64_t v3 = (int *)(a1 + 56);
  int v2 = *(_DWORD *)(a1 + 56);
  if (!v2)
  {
    sub_244CB4E58(a1 + 80, &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *((void *)v3 + 2) = v6;
    int v2 = *v3;
    if (!*v3)
    {
      *(void *)(a1 + 48) = 0;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)a1 = 0u;
      sub_244825E28((_DWORD *)a1, a1 + 80, (uint64_t)&v5);
      *(_OWORD *)uint64_t v3 = v5;
      *((void *)v3 + 2) = v6;
      int v2 = *(_DWORD *)(a1 + 56);
    }
  }
  return v2 == 0;
}

uint64_t sub_244BC3F04(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  *(_DWORD *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  sub_244CB3988(a1 + 48);
  int v7 = *a3;
  *(unsigned char *)(a1 + 120) = v7;
  if (v7) {
    *(unsigned char *)(a1 + 121) = a3[1];
  }
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 40) = 93;
  sub_244CB3B04(v6, a2);
  return a1;
}

BOOL sub_244BC3F7C(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 112) == -1) {
    return 0;
  }
  uint64_t v3 = a1 + 24;
  int v2 = *(_DWORD *)(a1 + 24);
  if (!v2)
  {
    sub_244CB4E58(a1 + 48, &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *(void *)(v3 + 16) = v6;
    int v2 = *(_DWORD *)v3;
    if (!*(_DWORD *)v3)
    {
      *(void *)a1 = 0;
      *(void *)(a1 + 8) = 0;
      *(void *)(a1 + 16) = 0;
      sub_244826068(a1, a1 + 48, (uint64_t)&v5);
      *(_OWORD *)uint64_t v3 = v5;
      *(void *)(v3 + 16) = v6;
      int v2 = *(_DWORD *)(a1 + 24);
    }
  }
  return v2 == 0;
}

uint64_t sub_244BC4028(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  *(_DWORD *)a1 = 0;
  *(unsigned char *)(a1 + 4) = 0;
  *(unsigned char *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 20) = 0;
  sub_244CB3988(a1 + 56);
  int v7 = *a3;
  *(unsigned char *)(a1 + 128) = v7;
  if (v7) {
    *(unsigned char *)(a1 + 129) = a3[1];
  }
  *(_DWORD *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 48) = 93;
  sub_244CB3B04(v6, a2);
  return a1;
}

BOOL sub_244BC40A8(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 120) == -1) {
    return 0;
  }
  uint64_t v3 = a1 + 32;
  int v2 = *(_DWORD *)(a1 + 32);
  if (!v2)
  {
    sub_244CB4E58(a1 + 56, &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *(void *)(v3 + 16) = v6;
    int v2 = *(_DWORD *)v3;
    if (!*(_DWORD *)v3)
    {
      *(_DWORD *)a1 = 0;
      *(unsigned char *)(a1 + 4) = 0;
      *(unsigned char *)(a1 + 8) = 0;
      *(unsigned char *)(a1 + 20) = 0;
      sub_2448262C4(a1, a1 + 56, (uint64_t)&v5);
      *(_OWORD *)uint64_t v3 = v5;
      *(void *)(v3 + 16) = v6;
      int v2 = *(_DWORD *)(a1 + 32);
    }
  }
  return v2 == 0;
}

BOOL sub_244BC415C(_DWORD *a1)
{
  if (a1[24] == -1) {
    return 0;
  }
  uint64_t v3 = a1 + 2;
  int v2 = a1[2];
  if (!v2)
  {
    sub_244CB4E58((uint64_t)(a1 + 8), &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *((void *)v3 + 2) = v6;
    int v2 = *v3;
    if (!*v3)
    {
      *a1 = 0;
      sub_244827BCC((uint64_t)a1, (uint64_t)(a1 + 8), (uint64_t)&v5);
      *(_OWORD *)uint64_t v3 = v5;
      *((void *)v3 + 2) = v6;
      int v2 = a1[2];
    }
  }
  return v2 == 0;
}

BOOL sub_244BC4204(_DWORD *a1)
{
  if (a1[24] == -1) {
    return 0;
  }
  uint64_t v3 = a1 + 2;
  int v2 = a1[2];
  if (!v2)
  {
    sub_244CB4E58((uint64_t)(a1 + 8), &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *((void *)v3 + 2) = v6;
    int v2 = *v3;
    if (!*v3)
    {
      *a1 = 0;
      sub_244827E1C((uint64_t)a1, (uint64_t)(a1 + 8), (uint64_t)&v5);
      *(_OWORD *)uint64_t v3 = v5;
      *((void *)v3 + 2) = v6;
      int v2 = a1[2];
    }
  }
  return v2 == 0;
}

uint64_t sub_244BC42AC(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  *(unsigned char *)a1 = 0;
  *(unsigned char *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 24) = 0;
  *(unsigned char *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 64) = 0;
  *(unsigned char *)(a1 + 68) = 0;
  *(_WORD *)(a1 + 72) = 0;
  sub_244CB3988(a1 + 104);
  int v7 = *a3;
  *(unsigned char *)(a1 + 176) = v7;
  if (v7) {
    *(unsigned char *)(a1 + 177) = a3[1];
  }
  *(_DWORD *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 96) = 93;
  sub_244CB3B04(v6, a2);
  return a1;
}

BOOL sub_244BC4338(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 168) == -1) {
    return 0;
  }
  uint64_t v3 = a1 + 80;
  int v2 = *(_DWORD *)(a1 + 80);
  if (!v2)
  {
    sub_244CB4E58(a1 + 104, &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *(void *)(v3 + 16) = v6;
    int v2 = *(_DWORD *)v3;
    if (!*(_DWORD *)v3)
    {
      *(unsigned char *)(a1 + 32) = 0;
      *(unsigned char *)(a1 + 64) = 0;
      *(unsigned char *)(a1 + 68) = 0;
      *(_WORD *)(a1 + 72) = 0;
      *(void *)(a1 + 8) = 0;
      *(void *)(a1 + 16) = 0;
      *(void *)a1 = 0;
      *(unsigned char *)(a1 + 24) = 0;
      sub_24482785C(a1, a1 + 104, (uint64_t)&v5);
      *(_OWORD *)uint64_t v3 = v5;
      *(void *)(v3 + 16) = v6;
      int v2 = *(_DWORD *)(a1 + 80);
    }
  }
  return v2 == 0;
}

uint64_t sub_244BC43F8(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  *(unsigned char *)a1 = 0;
  *(unsigned char *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 24) = 0;
  *(unsigned char *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 56) = 0;
  sub_244CB3988(a1 + 80);
  *(unsigned char *)(a1 + 152) = 0;
  sub_244CB39B8(v6, 0, 0);
  *(_WORD *)(a1 + 160) = 0;
  sub_244CB3988(a1 + 192);
  int v8 = *a3;
  *(unsigned char *)(a1 + 264) = v8;
  if (v8) {
    *(unsigned char *)(a1 + 265) = a3[1];
  }
  *(_DWORD *)(a1 + 168) = 0;
  *(void *)(a1 + 176) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 184) = 93;
  sub_244CB3B04(v7, a2);
  return a1;
}

BOOL sub_244BC4498(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 256) == -1) {
    return 0;
  }
  uint64_t v3 = a1 + 168;
  int v2 = *(_DWORD *)(a1 + 168);
  if (!v2)
  {
    sub_244CB4E58(a1 + 192, v11);
    *(_OWORD *)uint64_t v3 = v11[0];
    *(void *)(v3 + 16) = *(void *)&v11[1];
    int v2 = *(_DWORD *)v3;
    if (!*(_DWORD *)v3)
    {
      uint64_t v17 = 0;
      memset(v16, 0, sizeof(v16));
      long long v14 = 0u;
      long long v15 = 0u;
      long long v12 = 0u;
      long long v13 = 0u;
      memset(v11, 0, sizeof(v11));
      sub_244CB3988((uint64_t)&v13);
      BYTE8(v16[1]) = 0;
      sub_244CB39B8(v4, 0, 0);
      LOWORD(v17) = 0;
      *(_OWORD *)a1 = v11[0];
      *(_OWORD *)(a1 + 9) = *(_OWORD *)((char *)v11 + 9);
      int v5 = LOBYTE(v11[2]);
      *(unsigned char *)(a1 + 32) = v11[2];
      if (v5)
      {
        *(_OWORD *)(a1 + 40) = *(_OWORD *)((char *)&v11[2] + 8);
        LOBYTE(v11[2]) = 0;
      }
      int v6 = BYTE8(v11[3]);
      *(unsigned char *)(a1 + 56) = BYTE8(v11[3]);
      if (v6)
      {
        *(_OWORD *)(a1 + 64) = v12;
        BYTE8(v11[3]) = 0;
      }
      long long v7 = v16[0];
      *(_OWORD *)(a1 + 112) = v15;
      *(_OWORD *)(a1 + 128) = v7;
      *(void *)(a1 + 143) = *(void *)((char *)v16 + 15);
      long long v8 = v14;
      *(_OWORD *)(a1 + 80) = v13;
      *(_OWORD *)(a1 + 96) = v8;
      int v9 = BYTE8(v16[1]);
      *(unsigned char *)(a1 + 152) = BYTE8(v16[1]);
      if (v9) {
        *(unsigned char *)(a1 + 153) = BYTE9(v16[1]);
      }
      *(_WORD *)(a1 + 160) = v17;
      sub_244827494(a1, a1 + 192, (uint64_t)v11);
      *(_OWORD *)uint64_t v3 = v11[0];
      *(void *)(v3 + 16) = *(void *)&v11[1];
      int v2 = *(_DWORD *)(a1 + 168);
    }
  }
  return v2 == 0;
}

uint64_t sub_244BC45F0(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  *(unsigned char *)a1 = 0;
  *(_WORD *)(a1 + 2) = 0;
  *(unsigned char *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 34) = 0;
  *(unsigned char *)(a1 + 38) = 0;
  sub_244CB3988(a1 + 72);
  int v7 = *a3;
  *(unsigned char *)(a1 + 144) = v7;
  if (v7) {
    *(unsigned char *)(a1 + 145) = a3[1];
  }
  *(_DWORD *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 64) = 93;
  sub_244CB3B04(v6, a2);
  return a1;
}

BOOL sub_244BC4678(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 136) == -1) {
    return 0;
  }
  uint64_t v3 = a1 + 48;
  int v2 = *(_DWORD *)(a1 + 48);
  if (!v2)
  {
    sub_244CB4E58(a1 + 72, &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *(void *)(v3 + 16) = v6;
    int v2 = *(_DWORD *)v3;
    if (!*(_DWORD *)v3)
    {
      *(unsigned char *)a1 = 0;
      *(_WORD *)(a1 + 2) = 0;
      *(unsigned char *)(a1 + 8) = 0;
      *(unsigned char *)(a1 + 32) = 0;
      *(unsigned char *)(a1 + 34) = 0;
      *(unsigned char *)(a1 + 38) = 0;
      sub_244827054(a1, a1 + 72, (uint64_t)&v5);
      *(_OWORD *)uint64_t v3 = v5;
      *(void *)(v3 + 16) = v6;
      int v2 = *(_DWORD *)(a1 + 48);
    }
  }
  return v2 == 0;
}

uint64_t sub_244BC4734(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  *(void *)(a1 + 40) = 0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_WORD *)(a1 + 32) = 0;
  sub_244CB3988(a1 + 72);
  int v7 = *a3;
  *(unsigned char *)(a1 + 144) = v7;
  if (v7) {
    *(unsigned char *)(a1 + 145) = a3[1];
  }
  *(_DWORD *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 64) = 93;
  sub_244CB3B04(v6, a2);
  return a1;
}

BOOL sub_244BC47B4(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 136) == -1) {
    return 0;
  }
  uint64_t v3 = a1 + 48;
  int v2 = *(_DWORD *)(a1 + 48);
  if (!v2)
  {
    sub_244CB4E58(a1 + 72, &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *(void *)(v3 + 16) = v6;
    int v2 = *(_DWORD *)v3;
    if (!*(_DWORD *)v3)
    {
      *(_OWORD *)(a1 + 16) = 0u;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)a1 = 0u;
      sub_24482FCB4(a1, a1 + 72, (uint64_t)&v5);
      *(_OWORD *)uint64_t v3 = v5;
      *(void *)(v3 + 16) = v6;
      int v2 = *(_DWORD *)(a1 + 48);
    }
  }
  return v2 == 0;
}

uint64_t sub_244BC4864(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  *(_DWORD *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 56) = 0;
  *(unsigned char *)(a1 + 80) = 0;
  *(unsigned char *)(a1 + 104) = 0;
  sub_244CB3988(a1 + 136);
  int v7 = *a3;
  *(unsigned char *)(a1 + 208) = v7;
  if (v7) {
    *(unsigned char *)(a1 + 209) = a3[1];
  }
  *(_DWORD *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 128) = 93;
  sub_244CB3B04(v6, a2);
  return a1;
}

BOOL sub_244BC48EC(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 200) == -1) {
    return 0;
  }
  uint64_t v3 = a1 + 112;
  int v2 = *(_DWORD *)(a1 + 112);
  if (!v2)
  {
    sub_244CB4E58(a1 + 136, &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *(void *)(v3 + 16) = v6;
    int v2 = *(_DWORD *)v3;
    if (!*(_DWORD *)v3)
    {
      *(_DWORD *)a1 = 0;
      *(unsigned char *)(a1 + 8) = 0;
      *(unsigned char *)(a1 + 32) = 0;
      *(unsigned char *)(a1 + 56) = 0;
      *(unsigned char *)(a1 + 80) = 0;
      *(unsigned char *)(a1 + 104) = 0;
      sub_244830BE8(a1, a1 + 136, (uint64_t)&v5);
      *(_OWORD *)uint64_t v3 = v5;
      *(void *)(v3 + 16) = v6;
      int v2 = *(_DWORD *)(a1 + 112);
    }
  }
  return v2 == 0;
}

BOOL sub_244BC49A8(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 112) == -1) {
    return 0;
  }
  uint64_t v3 = a1 + 24;
  int v2 = *(_DWORD *)(a1 + 24);
  if (!v2)
  {
    sub_244CB4E58(a1 + 48, &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *(void *)(v3 + 16) = v6;
    int v2 = *(_DWORD *)v3;
    if (!*(_DWORD *)v3)
    {
      *(void *)a1 = 0;
      *(void *)(a1 + 8) = 0;
      *(void *)(a1 + 16) = 0;
      sub_244833344(a1, a1 + 48, (uint64_t)&v5);
      *(_OWORD *)uint64_t v3 = v5;
      *(void *)(v3 + 16) = v6;
      int v2 = *(_DWORD *)(a1 + 24);
    }
  }
  return v2 == 0;
}

uint64_t sub_244BC4A54(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  *(unsigned char *)(a1 + 64) = 0;
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  sub_244CB3988(a1 + 96);
  int v7 = *a3;
  *(unsigned char *)(a1 + 168) = v7;
  if (v7) {
    *(unsigned char *)(a1 + 169) = a3[1];
  }
  *(_DWORD *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 88) = 93;
  sub_244CB3B04(v6, a2);
  return a1;
}

BOOL sub_244BC4AD0(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 160) == -1) {
    return 0;
  }
  uint64_t v3 = (int *)(a1 + 72);
  int v2 = *(_DWORD *)(a1 + 72);
  if (!v2)
  {
    sub_244CB4E58(a1 + 96, &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *((void *)v3 + 2) = *(void *)&v6[0];
    int v2 = *v3;
    if (!*v3)
    {
      uint64_t v7 = 0;
      long long v5 = 0u;
      memset(v6, 0, sizeof(v6));
      *(void *)a1 = 0;
      *(void *)(a1 + 8) = 0;
      sub_244BC4B98(a1 + 16, (uint64_t)v6);
      sub_244833D50((_OWORD *)a1, a1 + 96, (uint64_t)&v5);
      *(_OWORD *)uint64_t v3 = v5;
      *((void *)v3 + 2) = *(void *)&v6[0];
      int v2 = *(_DWORD *)(a1 + 72);
    }
  }
  return v2 == 0;
}

uint64_t sub_244BC4B98(uint64_t result, uint64_t a2)
{
  if (*(unsigned __int8 *)(result + 48) == *(unsigned __int8 *)(a2 + 48))
  {
    if (*(unsigned char *)(result + 48))
    {
      *(_OWORD *)uint64_t result = *(_OWORD *)a2;
      int v2 = *(unsigned __int8 *)(a2 + 16);
      *(unsigned char *)(result + 16) = v2;
      if (v2)
      {
        long long v3 = *(_OWORD *)(a2 + 24);
        *(void *)(result + 40) = *(void *)(a2 + 40);
        *(_OWORD *)(result + 24) = v3;
        *(unsigned char *)(a2 + 16) = 0;
      }
    }
  }
  else if (*(unsigned char *)(result + 48))
  {
    *(unsigned char *)(result + 48) = 0;
  }
  else
  {
    *(_OWORD *)uint64_t result = *(_OWORD *)a2;
    int v4 = *(unsigned __int8 *)(a2 + 16);
    *(unsigned char *)(result + 16) = v4;
    if (v4)
    {
      long long v5 = *(_OWORD *)(a2 + 24);
      *(void *)(result + 40) = *(void *)(a2 + 40);
      *(_OWORD *)(result + 24) = v5;
      *(unsigned char *)(a2 + 16) = 0;
    }
    *(unsigned char *)(result + 48) = 1;
  }
  return result;
}

uint64_t sub_244BC4C18(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  *(_WORD *)a1 = 0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  sub_244CB3988(a1 + 64);
  int v7 = *a3;
  *(unsigned char *)(a1 + 136) = v7;
  if (v7) {
    *(unsigned char *)(a1 + 137) = a3[1];
  }
  *(_DWORD *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 56) = 93;
  sub_244CB3B04(v6, a2);
  return a1;
}

BOOL sub_244BC4C98(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 128) == -1) {
    return 0;
  }
  long long v3 = (int *)(a1 + 40);
  int v2 = *(_DWORD *)(a1 + 40);
  if (!v2)
  {
    sub_244CB4E58(a1 + 64, &v5);
    *(_OWORD *)long long v3 = v5;
    *((void *)v3 + 2) = v6;
    int v2 = *v3;
    if (!*v3)
    {
      *(void *)(a1 + 32) = 0;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      sub_2448352BC((unsigned char *)a1, a1 + 64, (uint64_t)&v5);
      *(_OWORD *)long long v3 = v5;
      *((void *)v3 + 2) = v6;
      int v2 = *(_DWORD *)(a1 + 40);
    }
  }
  return v2 == 0;
}

uint64_t sub_244BC4D48(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  *(_WORD *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  sub_244CB3988(a1 + 48);
  int v7 = *a3;
  *(unsigned char *)(a1 + 120) = v7;
  if (v7) {
    *(unsigned char *)(a1 + 121) = a3[1];
  }
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 40) = 93;
  sub_244CB3B04(v6, a2);
  return a1;
}

BOOL sub_244BC4DC0(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 112) == -1) {
    return 0;
  }
  uint64_t v3 = a1 + 24;
  int v2 = *(_DWORD *)(a1 + 24);
  if (!v2)
  {
    sub_244CB4E58(a1 + 48, &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *(void *)(v3 + 16) = v6;
    int v2 = *(_DWORD *)v3;
    if (!*(_DWORD *)v3)
    {
      *(void *)a1 = 0;
      *(void *)(a1 + 8) = 0;
      *(void *)(a1 + 16) = 0;
      sub_244837990(a1, a1 + 48, (uint64_t)&v5);
      *(_OWORD *)uint64_t v3 = v5;
      *(void *)(v3 + 16) = v6;
      int v2 = *(_DWORD *)(a1 + 24);
    }
  }
  return v2 == 0;
}

BOOL sub_244BC4E6C(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 96) == -1) {
    return 0;
  }
  uint64_t v3 = (int *)(a1 + 8);
  int v2 = *(_DWORD *)(a1 + 8);
  if (!v2)
  {
    sub_244CB4E58(a1 + 32, &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *((void *)v3 + 2) = v6;
    int v2 = *v3;
    if (!*v3)
    {
      *(_WORD *)a1 = 0;
      long long v5 = 0uLL;
      uint64_t v6 = 0;
      sub_24484B11C(a1 + 32, (_WORD *)a1, &v5);
      if (!v5)
      {
        LODWORD(v5) = 0;
        *((void *)&v5 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
        LODWORD(v6) = 61;
      }
      *(_OWORD *)uint64_t v3 = v5;
      *((void *)v3 + 2) = v6;
      int v2 = *v3;
    }
  }
  return v2 == 0;
}

BOOL sub_244BC4F3C(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 128) == -1) {
    return 0;
  }
  uint64_t v3 = a1 + 40;
  int v2 = *(_DWORD *)(a1 + 40);
  if (!v2)
  {
    sub_244CB4E58(a1 + 64, &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *(void *)(v3 + 16) = v6;
    int v2 = *(_DWORD *)v3;
    if (!*(_DWORD *)v3)
    {
      *(void *)a1 = 0;
      *(void *)(a1 + 8) = 0;
      *(unsigned char *)(a1 + 16) = 0;
      sub_2448392EC(a1, a1 + 64, (uint64_t)&v5);
      *(_OWORD *)uint64_t v3 = v5;
      *(void *)(v3 + 16) = v6;
      int v2 = *(_DWORD *)(a1 + 40);
    }
  }
  return v2 == 0;
}

BOOL sub_244BC4FE8(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 96) == -1) {
    return 0;
  }
  uint64_t v3 = (int *)(a1 + 8);
  int v2 = *(_DWORD *)(a1 + 8);
  if (!v2)
  {
    sub_244CB4E58(a1 + 32, &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *((void *)v3 + 2) = v6;
    int v2 = *v3;
    if (!*v3)
    {
      *(unsigned char *)a1 = 0;
      sub_2447F1DCC(a1 + 32, (unsigned char *)a1, &v5);
      *(_OWORD *)uint64_t v3 = v5;
      *((void *)v3 + 2) = v6;
      int v2 = *(_DWORD *)(a1 + 8);
    }
  }
  return v2 == 0;
}

BOOL sub_244BC5090(_DWORD *a1)
{
  if (a1[24] == -1) {
    return 0;
  }
  uint64_t v3 = a1 + 2;
  int v2 = a1[2];
  if (!v2)
  {
    sub_244CB4E58((uint64_t)(a1 + 8), &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *((void *)v3 + 2) = v6;
    int v2 = *v3;
    if (!*v3)
    {
      *a1 = 0;
      sub_24483A614((uint64_t)a1, (uint64_t)(a1 + 8), (uint64_t)&v5);
      *(_OWORD *)uint64_t v3 = v5;
      *((void *)v3 + 2) = v6;
      int v2 = a1[2];
    }
  }
  return v2 == 0;
}

uint64_t sub_244BC5138(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  *(_WORD *)(a1 + 8) = 0;
  *(void *)a1 = 0;
  sub_244CB3988(a1 + 40);
  int v7 = *a3;
  *(unsigned char *)(a1 + 112) = v7;
  if (v7) {
    *(unsigned char *)(a1 + 113) = a3[1];
  }
  *(_DWORD *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 32) = 93;
  sub_244CB3B04(v6, a2);
  return a1;
}

BOOL sub_244BC51AC(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 104) == -1) {
    return 0;
  }
  uint64_t v3 = a1 + 16;
  int v2 = *(_DWORD *)(a1 + 16);
  if (!v2)
  {
    sub_244CB4E58(a1 + 40, &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *(void *)(v3 + 16) = v6;
    int v2 = *(_DWORD *)v3;
    if (!*(_DWORD *)v3)
    {
      *(_WORD *)(a1 + 8) = 0;
      *(void *)a1 = 0;
      sub_24483A8AC(a1, a1 + 40, (uint64_t)&v5);
      *(_OWORD *)uint64_t v3 = v5;
      *(void *)(v3 + 16) = v6;
      int v2 = *(_DWORD *)(a1 + 16);
    }
  }
  return v2 == 0;
}

uint64_t sub_244BC5258(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  *(unsigned char *)a1 = 0;
  *(_DWORD *)(a1 + 2) = 0;
  *(_DWORD *)(a1 + 8) = 0;
  sub_244CB3988(a1 + 40);
  int v7 = *a3;
  *(unsigned char *)(a1 + 112) = v7;
  if (v7) {
    *(unsigned char *)(a1 + 113) = a3[1];
  }
  *(_DWORD *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 32) = 93;
  sub_244CB3B04(v6, a2);
  return a1;
}

BOOL sub_244BC52D4(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 104) == -1) {
    return 0;
  }
  uint64_t v3 = a1 + 16;
  int v2 = *(_DWORD *)(a1 + 16);
  if (!v2)
  {
    sub_244CB4E58(a1 + 40, &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *(void *)(v3 + 16) = v6;
    int v2 = *(_DWORD *)v3;
    if (!*(_DWORD *)v3)
    {
      *(_DWORD *)(a1 + 8) = 0;
      *(void *)a1 = 0;
      sub_24483C7AC(a1, a1 + 40, (uint64_t)&v5);
      *(_OWORD *)uint64_t v3 = v5;
      *(void *)(v3 + 16) = v6;
      int v2 = *(_DWORD *)(a1 + 16);
    }
  }
  return v2 == 0;
}

BOOL sub_244BC5380(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 96) == -1) {
    return 0;
  }
  uint64_t v3 = a1 + 8;
  int v2 = *(_DWORD *)(a1 + 8);
  if (!v2)
  {
    sub_244CB4E58(a1 + 32, &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *(void *)(v3 + 16) = v6;
    int v2 = *(_DWORD *)v3;
    if (!*(_DWORD *)v3)
    {
      *(unsigned char *)(a1 + 6) = 0;
      *(_WORD *)(a1 + 4) = 0;
      *(_DWORD *)a1 = 0;
      sub_24483C55C(a1, a1 + 32, (uint64_t)&v5);
      *(_OWORD *)uint64_t v3 = v5;
      *(void *)(v3 + 16) = v6;
      int v2 = *(_DWORD *)(a1 + 8);
    }
  }
  return v2 == 0;
}

uint64_t sub_244BC5430(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  *(unsigned char *)(a1 + 30) = 0;
  *(unsigned char *)(a1 + 32) = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = 0;
  *(void *)(a1 + 21) = 0;
  sub_244CB3988(a1 + 64);
  int v7 = *a3;
  *(unsigned char *)(a1 + 136) = v7;
  if (v7) {
    *(unsigned char *)(a1 + 137) = a3[1];
  }
  *(_DWORD *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 56) = 93;
  sub_244CB3B04(v6, a2);
  return a1;
}

BOOL sub_244BC54B0(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 128) == -1) {
    return 0;
  }
  uint64_t v3 = a1 + 40;
  int v2 = *(_DWORD *)(a1 + 40);
  if (!v2)
  {
    sub_244CB4E58(a1 + 64, &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *(void *)(v3 + 16) = v6;
    int v2 = *(_DWORD *)v3;
    if (!*(_DWORD *)v3)
    {
      *(unsigned char *)(a1 + 30) = 0;
      *(unsigned char *)(a1 + 32) = 0;
      *(void *)(a1 + 8) = 0;
      *(void *)(a1 + 16) = 0;
      *(void *)a1 = 0;
      *(void *)(a1 + 21) = 0;
      sub_24483BDC0(a1, a1 + 64, (uint64_t)&v5);
      *(_OWORD *)uint64_t v3 = v5;
      *(void *)(v3 + 16) = v6;
      int v2 = *(_DWORD *)(a1 + 40);
    }
  }
  return v2 == 0;
}

uint64_t sub_244BC5568(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  *(unsigned char *)(a1 + 4) = 0;
  *(_DWORD *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(_WORD *)(a1 + 16) = 0;
  sub_244CB3988(a1 + 48);
  int v7 = *a3;
  *(unsigned char *)(a1 + 120) = v7;
  if (v7) {
    *(unsigned char *)(a1 + 121) = a3[1];
  }
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 40) = 93;
  sub_244CB3B04(v6, a2);
  return a1;
}

BOOL sub_244BC55E8(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 112) == -1) {
    return 0;
  }
  uint64_t v3 = a1 + 24;
  int v2 = *(_DWORD *)(a1 + 24);
  if (!v2)
  {
    sub_244CB4E58(a1 + 48, &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *(void *)(v3 + 16) = v6;
    int v2 = *(_DWORD *)v3;
    if (!*(_DWORD *)v3)
    {
      *(void *)a1 = 0;
      *(void *)(a1 + 8) = 0;
      *(_WORD *)(a1 + 16) = 0;
      sub_24483CF3C(a1, a1 + 48, (uint64_t)&v5);
      *(_OWORD *)uint64_t v3 = v5;
      *(void *)(v3 + 16) = v6;
      int v2 = *(_DWORD *)(a1 + 24);
    }
  }
  return v2 == 0;
}

uint64_t sub_244BC5694(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  *(_WORD *)a1 = 0;
  *(unsigned char *)(a1 + 2) = 0;
  *(_WORD *)(a1 + 4) = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 14) = 0;
  sub_244CB3988(a1 + 48);
  int v7 = *a3;
  *(unsigned char *)(a1 + 120) = v7;
  if (v7) {
    *(unsigned char *)(a1 + 121) = a3[1];
  }
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 40) = 93;
  sub_244CB3B04(v6, a2);
  return a1;
}

BOOL sub_244BC5718(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 112) == -1) {
    return 0;
  }
  uint64_t v3 = a1 + 24;
  int v2 = *(_DWORD *)(a1 + 24);
  if (!v2)
  {
    sub_244CB4E58(a1 + 48, &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *(void *)(v3 + 16) = v6;
    int v2 = *(_DWORD *)v3;
    if (!*(_DWORD *)v3)
    {
      *(void *)a1 = 0;
      *(void *)(a1 + 8) = 0;
      *(void *)(a1 + 14) = 0;
      sub_24483C258(a1, a1 + 48, (uint64_t)&v5);
      *(_OWORD *)uint64_t v3 = v5;
      *(void *)(v3 + 16) = v6;
      int v2 = *(_DWORD *)(a1 + 24);
    }
  }
  return v2 == 0;
}

uint64_t sub_244BC57C4(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  *(_WORD *)a1 = 0;
  *(unsigned char *)(a1 + 20) = 0;
  *(unsigned char *)(a1 + 22) = 0;
  *(unsigned char *)(a1 + 24) = 0;
  *(unsigned char *)(a1 + 26) = 0;
  *(void *)(a1 + 8) = 0;
  *(_DWORD *)(a1 + 15) = 0;
  sub_244CB3988(a1 + 56);
  int v7 = *a3;
  *(unsigned char *)(a1 + 128) = v7;
  if (v7) {
    *(unsigned char *)(a1 + 129) = a3[1];
  }
  *(_DWORD *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 48) = 93;
  sub_244CB3B04(v6, a2);
  return a1;
}

BOOL sub_244BC5850(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 120) == -1) {
    return 0;
  }
  uint64_t v3 = a1 + 32;
  int v2 = *(_DWORD *)(a1 + 32);
  if (!v2)
  {
    sub_244CB4E58(a1 + 56, &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *(void *)(v3 + 16) = v6;
    int v2 = *(_DWORD *)v3;
    if (!*(_DWORD *)v3)
    {
      *(void *)a1 = 0;
      *(void *)(a1 + 8) = 0;
      *(_DWORD *)(a1 + 23) = 0;
      *(void *)(a1 + 16) = 0;
      sub_2447EF810(a1, a1 + 56, (uint64_t)&v5);
      *(_OWORD *)uint64_t v3 = v5;
      *(void *)(v3 + 16) = v6;
      int v2 = *(_DWORD *)(a1 + 32);
    }
  }
  return v2 == 0;
}

BOOL sub_244BC5900(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 112) == -1) {
    return 0;
  }
  uint64_t v3 = a1 + 24;
  int v2 = *(_DWORD *)(a1 + 24);
  if (!v2)
  {
    sub_244CB4E58(a1 + 48, &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *(void *)(v3 + 16) = v6;
    int v2 = *(_DWORD *)v3;
    if (!*(_DWORD *)v3)
    {
      *(void *)a1 = 0;
      *(void *)(a1 + 8) = 0;
      *(void *)(a1 + 16) = 0;
      sub_244841B60(a1, a1 + 48, (uint64_t)&v5);
      *(_OWORD *)uint64_t v3 = v5;
      *(void *)(v3 + 16) = v6;
      int v2 = *(_DWORD *)(a1 + 24);
    }
  }
  return v2 == 0;
}

BOOL sub_244BC59AC(uint64_t a1)
{
  BOOL v2 = sub_244BC5AF0(a1);
  if (v2 && *(unsigned char *)(a1 + 320)) {
    *(unsigned char *)(a1 + 216) = *sub_2446F9190((unsigned char *)(a1 + 320));
  }
  return v2;
}

BOOL sub_244BC59F4(uint64_t a1)
{
  BOOL v2 = sub_244BC5D38(a1);
  if (v2 && *(unsigned char *)(a1 + 152)) {
    *(unsigned char *)(a1 + 48) = *sub_2446F9190((unsigned char *)(a1 + 152));
  }
  return v2;
}

uint64_t sub_244BC5A3C(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  *(unsigned char *)a1 = 0;
  *(unsigned char *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 40) = 0;
  sub_244CB3988(a1 + 48);
  *(unsigned char *)(a1 + 120) = 0;
  sub_244CB39B8(v6, 0, 0);
  sub_244CB3988(a1 + 128);
  *(unsigned char *)(a1 + 200) = 0;
  sub_244CB39B8(v7, 0, 0);
  *(void *)(a1 + 208) = 0;
  *(unsigned char *)(a1 + 216) = 0;
  sub_244CB3988(a1 + 248);
  int v9 = *a3;
  *(unsigned char *)(a1 + 320) = v9;
  if (v9) {
    *(unsigned char *)(a1 + 321) = a3[1];
  }
  *(_DWORD *)(a1 + 224) = 0;
  *(void *)(a1 + 232) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 240) = 93;
  sub_244CB3B04(v8, a2);
  return a1;
}

BOOL sub_244BC5AF0(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 312) == -1) {
    return 0;
  }
  uint64_t v3 = a1 + 224;
  int v2 = *(_DWORD *)(a1 + 224);
  if (!v2)
  {
    sub_244CB4E58(a1 + 248, v15);
    *(_OWORD *)uint64_t v3 = v15[0];
    *(void *)(v3 + 16) = *(void *)&v15[1];
    int v2 = *(_DWORD *)v3;
    if (!*(_DWORD *)v3)
    {
      long long v25 = 0u;
      long long v23 = 0u;
      memset(v24, 0, sizeof(v24));
      long long v21 = 0u;
      long long v22 = 0u;
      memset(v20, 0, sizeof(v20));
      long long v18 = 0u;
      long long v19 = 0u;
      long long v16 = 0u;
      long long v17 = 0u;
      memset(v15, 0, sizeof(v15));
      sub_244CB3988((uint64_t)&v17);
      BYTE8(v20[1]) = 0;
      sub_244CB39B8(v4, 0, 0);
      sub_244CB3988((uint64_t)&v21);
      BYTE8(v24[1]) = 0;
      sub_244CB39B8(v5, 0, 0);
      *(void *)&long long v25 = 0;
      BYTE8(v25) = 0;
      int v6 = LOBYTE(v15[0]);
      *(unsigned char *)a1 = v15[0];
      if (v6)
      {
        *(_OWORD *)(a1 + 8) = *(_OWORD *)((char *)v15 + 8);
        LOBYTE(v15[0]) = 0;
      }
      int v7 = BYTE8(v15[1]);
      *(unsigned char *)(a1 + 24) = BYTE8(v15[1]);
      if (v7)
      {
        *(void *)(a1 + 32) = v16;
        BYTE8(v15[1]) = 0;
      }
      *(_DWORD *)(a1 + 40) = DWORD2(v16);
      long long v8 = v20[0];
      *(_OWORD *)(a1 + 80) = v19;
      *(_OWORD *)(a1 + 96) = v8;
      *(void *)(a1 + 111) = *(void *)((char *)v20 + 15);
      long long v9 = v18;
      *(_OWORD *)(a1 + 48) = v17;
      *(_OWORD *)(a1 + 64) = v9;
      int v10 = BYTE8(v20[1]);
      *(unsigned char *)(a1 + 120) = BYTE8(v20[1]);
      if (v10)
      {
        *(unsigned char *)(a1 + 121) = BYTE9(v20[1]);
        BYTE8(v20[1]) = 0;
      }
      long long v11 = v24[0];
      *(_OWORD *)(a1 + 160) = v23;
      *(_OWORD *)(a1 + 176) = v11;
      *(void *)(a1 + 191) = *(void *)((char *)v24 + 15);
      long long v12 = v22;
      *(_OWORD *)(a1 + 128) = v21;
      *(_OWORD *)(a1 + 144) = v12;
      int v13 = BYTE8(v24[1]);
      *(unsigned char *)(a1 + 200) = BYTE8(v24[1]);
      if (v13) {
        *(unsigned char *)(a1 + 201) = BYTE9(v24[1]);
      }
      *(void *)(a1 + 208) = v25;
      *(unsigned char *)(a1 + 216) = BYTE8(v25);
      sub_244842124(a1, a1 + 248, (uint64_t)v15);
      *(_OWORD *)uint64_t v3 = v15[0];
      *(void *)(v3 + 16) = *(void *)&v15[1];
      int v2 = *(_DWORD *)(a1 + 224);
    }
  }
  return v2 == 0;
}

uint64_t sub_244BC5CB0(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  *(unsigned char *)(a1 + 34) = 0;
  *(_WORD *)(a1 + 36) = 0;
  *(void *)(a1 + 40) = 0;
  *(unsigned char *)(a1 + 48) = 0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(unsigned char *)(a1 + 32) = 0;
  sub_244CB3988(a1 + 80);
  int v7 = *a3;
  *(unsigned char *)(a1 + 152) = v7;
  if (v7) {
    *(unsigned char *)(a1 + 153) = a3[1];
  }
  *(_DWORD *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 72) = 93;
  sub_244CB3B04(v6, a2);
  return a1;
}

BOOL sub_244BC5D38(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 144) == -1) {
    return 0;
  }
  uint64_t v3 = a1 + 56;
  int v2 = *(_DWORD *)(a1 + 56);
  if (!v2)
  {
    sub_244CB4E58(a1 + 80, &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *(void *)(v3 + 16) = v6;
    int v2 = *(_DWORD *)v3;
    if (!*(_DWORD *)v3)
    {
      *(unsigned char *)(a1 + 48) = 0;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)a1 = 0u;
      sub_244842590(a1, a1 + 80, (uint64_t)&v5);
      *(_OWORD *)uint64_t v3 = v5;
      *(void *)(v3 + 16) = v6;
      int v2 = *(_DWORD *)(a1 + 56);
    }
  }
  return v2 == 0;
}

BOOL sub_244BC5DEC(uint64_t a1)
{
  BOOL v2 = sub_244BC63DC(a1);
  if (v2 && *(unsigned char *)(a1 + 272)) {
    *(unsigned char *)(a1 + 168) = *sub_2446F9190((unsigned char *)(a1 + 272));
  }
  return v2;
}

BOOL sub_244BC5E34(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 112) == -1) {
    return 0;
  }
  uint64_t v3 = a1 + 24;
  int v2 = *(_DWORD *)(a1 + 24);
  if (!v2)
  {
    sub_244CB4E58(a1 + 48, &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *(void *)(v3 + 16) = v6;
    int v2 = *(_DWORD *)v3;
    if (!*(_DWORD *)v3)
    {
      *(void *)a1 = 0;
      *(void *)(a1 + 8) = 0;
      *(void *)(a1 + 16) = 0;
      sub_244844B14(a1, a1 + 48, (uint64_t)&v5);
      *(_OWORD *)uint64_t v3 = v5;
      *(void *)(v3 + 16) = v6;
      int v2 = *(_DWORD *)(a1 + 24);
    }
  }
  return v2 == 0;
}

uint64_t sub_244BC5EE0(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  *(unsigned char *)a1 = 0;
  *(unsigned char *)(a1 + 2) = 0;
  *(unsigned char *)(a1 + 4) = 0;
  *(unsigned char *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 40) = 0;
  *(unsigned char *)(a1 + 64) = 0;
  *(unsigned char *)(a1 + 96) = 0;
  *(unsigned char *)(a1 + 160) = 0;
  *(unsigned char *)(a1 + 168) = 0;
  *(unsigned char *)(a1 + 240) = 0;
  *(unsigned char *)(a1 + 320) = 0;
  *(unsigned char *)(a1 + 400) = 0;
  *(unsigned char *)(a1 + 408) = 0;
  *(unsigned char *)(a1 + 496) = 0;
  sub_244CB3988(a1 + 616);
  int v7 = *a3;
  *(unsigned char *)(a1 + 688) = v7;
  if (v7) {
    *(unsigned char *)(a1 + 689) = a3[1];
  }
  *(_DWORD *)(a1 + 592) = 0;
  *(void *)(a1 + 600) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 608) = 93;
  sub_244CB3B04(v6, a2);
  return a1;
}

BOOL sub_244BC5F90(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 680) == -1) {
    return 0;
  }
  int v2 = *(_DWORD *)(a1 + 592);
  if (!v2)
  {
    uint64_t v3 = (_OWORD *)(a1 + 592);
    sub_244CB4E58(a1 + 616, &v5);
    *uint64_t v3 = v5;
    *(void *)(a1 + 608) = v6;
    int v2 = *(_DWORD *)v3;
    if (!*(_DWORD *)v3)
    {
      bzero(&v5, 0x250uLL);
      sub_244BC604C(a1, (__int16 *)&v5);
      sub_244843CF4(a1, a1 + 616, (uint64_t)&v5);
      *uint64_t v3 = v5;
      *(void *)(a1 + 608) = v6;
      int v2 = *(_DWORD *)(a1 + 592);
    }
  }
  return v2 == 0;
}

uint64_t sub_244BC604C(uint64_t a1, __int16 *a2)
{
  __int16 v4 = *a2;
  *(unsigned char *)(a1 + 2) = *((unsigned char *)a2 + 2);
  *(_WORD *)a1 = v4;
  int v5 = *((unsigned __int8 *)a2 + 4);
  *(unsigned char *)(a1 + 4) = v5;
  if (v5)
  {
    *(_WORD *)(a1 + 6) = a2[3];
    *((unsigned char *)a2 + 4) = 0;
  }
  int v6 = *((unsigned __int8 *)a2 + 8);
  *(unsigned char *)(a1 + 8) = v6;
  if (v6)
  {
    *(_DWORD *)(a1 + 10) = *(_DWORD *)(a2 + 5);
    *((unsigned char *)a2 + 8) = 0;
  }
  long long v7 = *((_OWORD *)a2 + 1);
  *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
  *(_OWORD *)(a1 + 16) = v7;
  int v8 = *((unsigned __int8 *)a2 + 40);
  *(unsigned char *)(a1 + 40) = v8;
  if (v8)
  {
    *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
    *((unsigned char *)a2 + 40) = 0;
  }
  int v9 = *((unsigned __int8 *)a2 + 64);
  *(unsigned char *)(a1 + 64) = v9;
  if (v9)
  {
    long long v10 = *(_OWORD *)(a2 + 36);
    *(void *)(a1 + 88) = *((void *)a2 + 11);
    *(_OWORD *)(a1 + 72) = v10;
    *((unsigned char *)a2 + 64) = 0;
  }
  sub_244BC6284(a1 + 96, (long long *)a2 + 6);
  int v11 = *((unsigned __int8 *)a2 + 168);
  *(unsigned char *)(a1 + 168) = v11;
  if (v11)
  {
    long long v12 = *((_OWORD *)a2 + 11);
    long long v13 = *((_OWORD *)a2 + 12);
    long long v14 = *((_OWORD *)a2 + 13);
    *(void *)(a1 + 224) = *((void *)a2 + 28);
    *(_OWORD *)(a1 + 192) = v13;
    *(_OWORD *)(a1 + 208) = v14;
    *(_OWORD *)(a1 + 176) = v12;
    int v15 = *((unsigned __int8 *)a2 + 232);
    *(unsigned char *)(a1 + 232) = v15;
    if (v15)
    {
      *(unsigned char *)(a1 + 233) = *((unsigned char *)a2 + 233);
      *((unsigned char *)a2 + 232) = 0;
    }
    *((unsigned char *)a2 + 168) = 0;
  }
  sub_244BC61B4(a1 + 240, (unsigned __int8 *)a2 + 240);
  sub_244BC0208(a1 + 320, (uint64_t)(a2 + 160));
  int v16 = *((unsigned __int8 *)a2 + 408);
  *(unsigned char *)(a1 + 408) = v16;
  if (v16)
  {
    *(_OWORD *)(a1 + 416) = *((_OWORD *)a2 + 26);
    long long v17 = *((_OWORD *)a2 + 27);
    long long v18 = *((_OWORD *)a2 + 28);
    long long v19 = *((_OWORD *)a2 + 29);
    *(void *)(a1 + 480) = *((void *)a2 + 60);
    *(_OWORD *)(a1 + 448) = v18;
    *(_OWORD *)(a1 + 464) = v19;
    *(_OWORD *)(a1 + 432) = v17;
    int v20 = *((unsigned __int8 *)a2 + 488);
    *(unsigned char *)(a1 + 488) = v20;
    if (v20)
    {
      *(unsigned char *)(a1 + 489) = *((unsigned char *)a2 + 489);
      *((unsigned char *)a2 + 488) = 0;
    }
    *((unsigned char *)a2 + 408) = 0;
  }
  sub_244BC6218(a1 + 496, (unsigned __int8 *)a2 + 496);
  return a1;
}

uint64_t sub_244BC61B4(uint64_t result, unsigned __int8 *a2)
{
  int v2 = *a2;
  *(unsigned char *)uint64_t result = v2;
  if (v2)
  {
    *(unsigned char *)(result + 8) = 0;
    *(unsigned char *)(result + 72) = 0;
    if (a2[72])
    {
      long long v3 = *(_OWORD *)(a2 + 8);
      long long v4 = *(_OWORD *)(a2 + 24);
      long long v5 = *(_OWORD *)(a2 + 40);
      *(void *)(result + 56) = *((void *)a2 + 7);
      *(_OWORD *)(result + 24) = v4;
      *(_OWORD *)(result + 40) = v5;
      *(_OWORD *)(result + 8) = v3;
      int v6 = a2[64];
      *(unsigned char *)(result + 64) = v6;
      if (v6)
      {
        *(unsigned char *)(result + 65) = a2[65];
        a2[64] = 0;
      }
      *(unsigned char *)(result + 72) = 1;
    }
    *a2 = 0;
  }
  return result;
}

uint64_t sub_244BC6218(uint64_t result, unsigned __int8 *a2)
{
  int v2 = *a2;
  *(unsigned char *)uint64_t result = v2;
  if (v2)
  {
    *(unsigned char *)(result + 8) = 0;
    *(unsigned char *)(result + 88) = 0;
    if (a2[88])
    {
      *(_OWORD *)(result + 8) = *(_OWORD *)(a2 + 8);
      long long v3 = *(_OWORD *)(a2 + 24);
      long long v4 = *(_OWORD *)(a2 + 40);
      long long v5 = *(_OWORD *)(a2 + 56);
      *(void *)(result + 72) = *((void *)a2 + 9);
      *(_OWORD *)(result + 40) = v4;
      *(_OWORD *)(result + 56) = v5;
      *(_OWORD *)(result + 24) = v3;
      int v6 = a2[80];
      *(unsigned char *)(result + 80) = v6;
      if (v6)
      {
        *(unsigned char *)(result + 81) = a2[81];
        a2[80] = 0;
      }
      *(unsigned char *)(result + 88) = 1;
    }
    *a2 = 0;
  }
  return result;
}

uint64_t sub_244BC6284(uint64_t result, long long *a2)
{
  if (*(unsigned __int8 *)(result + 64) == *((unsigned __int8 *)a2 + 64))
  {
    if (*(unsigned char *)(result + 64))
    {
      long long v2 = *a2;
      long long v3 = a2[1];
      *(void *)(result + 32) = *((void *)a2 + 4);
      *(_OWORD *)uint64_t result = v2;
      *(_OWORD *)(result + 16) = v3;
      *(unsigned char *)(result + 40) = *((unsigned char *)a2 + 40);
      uint64_t v4 = *(void *)((char *)a2 + 44);
      *(_DWORD *)(result + 52) = *((_DWORD *)a2 + 13);
      *(void *)(result + 44) = v4;
      LODWORD(v4) = *((unsigned __int8 *)a2 + 56);
      *(unsigned char *)(result + 56) = v4;
      if (v4)
      {
        *(unsigned char *)(result + 57) = *((unsigned char *)a2 + 57);
        *((unsigned char *)a2 + 56) = 0;
      }
    }
  }
  else if (*(unsigned char *)(result + 64))
  {
    *(unsigned char *)(result + 64) = 0;
  }
  else
  {
    long long v5 = *a2;
    long long v6 = a2[1];
    long long v7 = a2[2];
    *(void *)(result + 48) = *((void *)a2 + 6);
    *(_OWORD *)(result + 16) = v6;
    *(_OWORD *)(result + 32) = v7;
    *(_OWORD *)uint64_t result = v5;
    int v8 = *((unsigned __int8 *)a2 + 56);
    *(unsigned char *)(result + 56) = v8;
    if (v8)
    {
      *(unsigned char *)(result + 57) = *((unsigned char *)a2 + 57);
      *((unsigned char *)a2 + 56) = 0;
    }
    *(unsigned char *)(result + 64) = 1;
  }
  return result;
}

uint64_t sub_244BC6324(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  *(_WORD *)a1 = 0;
  *(_WORD *)(a1 + 3) = 0;
  *(unsigned char *)(a1 + 5) = 0;
  *(_DWORD *)(a1 + 68) = 0;
  *(void *)(a1 + 72) = 0;
  *(unsigned char *)(a1 + 80) = 0;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(unsigned char *)(a1 + 64) = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(_DWORD *)(a1 + 23) = 0;
  sub_244CB3988(a1 + 88);
  *(unsigned char *)(a1 + 160) = 0;
  sub_244CB39B8(v6, 0, 0);
  *(unsigned char *)(a1 + 168) = 0;
  sub_244CB3988(a1 + 200);
  int v8 = *a3;
  *(unsigned char *)(a1 + 272) = v8;
  if (v8) {
    *(unsigned char *)(a1 + 273) = a3[1];
  }
  *(_DWORD *)(a1 + 176) = 0;
  *(void *)(a1 + 184) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 192) = 93;
  sub_244CB3B04(v7, a2);
  return a1;
}

BOOL sub_244BC63DC(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 264) == -1) {
    return 0;
  }
  uint64_t v3 = a1 + 176;
  int v2 = *(_DWORD *)(a1 + 176);
  if (!v2)
  {
    sub_244CB4E58(a1 + 200, v12);
    *(_OWORD *)uint64_t v3 = v12[0];
    *(void *)(v3 + 16) = *(void *)&v12[1];
    int v2 = *(_DWORD *)v3;
    if (!*(_DWORD *)v3)
    {
      long long v15 = 0u;
      memset(v14, 0, sizeof(v14));
      long long v13 = 0u;
      memset(v12, 0, sizeof(v12));
      sub_244CB3988((uint64_t)v14 + 8);
      LOBYTE(v15) = 0;
      sub_244CB39B8(v4, 0, 0);
      BYTE8(v15) = 0;
      *(unsigned char *)a1 = v12[0];
      int v5 = BYTE1(v12[0]);
      *(unsigned char *)(a1 + 1) = BYTE1(v12[0]);
      if (v5)
      {
        *(unsigned char *)(a1 + 2) = BYTE2(v12[0]);
        BYTE1(v12[0]) = 0;
      }
      *(_WORD *)(a1 + 3) = *(_WORD *)((char *)v12 + 3);
      int v6 = BYTE5(v12[0]);
      *(unsigned char *)(a1 + 5) = BYTE5(v12[0]);
      if (v6)
      {
        *(_WORD *)(a1 + 6) = WORD3(v12[0]);
        BYTE5(v12[0]) = 0;
      }
      *(_OWORD *)(a1 + 8) = *(_OWORD *)((char *)v12 + 8);
      *(_OWORD *)(a1 + 24) = *(_OWORD *)((char *)&v12[1] + 8);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)((char *)&v12[2] + 8);
      *(void *)(a1 + 56) = *((void *)&v12[3] + 1);
      *(unsigned char *)(a1 + 64) = v13;
      *(void *)(a1 + 68) = *(void *)((char *)&v13 + 4);
      *(_DWORD *)(a1 + 76) = HIDWORD(v13);
      int v7 = LOBYTE(v14[0]);
      *(unsigned char *)(a1 + 80) = v14[0];
      if (v7)
      {
        *(unsigned char *)(a1 + 81) = BYTE1(v14[0]);
        LOBYTE(v14[0]) = 0;
      }
      long long v8 = *(_OWORD *)((char *)v14 + 8);
      *(_OWORD *)(a1 + 104) = *(_OWORD *)((char *)&v14[1] + 8);
      long long v9 = *(_OWORD *)((char *)&v14[3] + 8);
      *(_OWORD *)(a1 + 120) = *(_OWORD *)((char *)&v14[2] + 8);
      *(_OWORD *)(a1 + 136) = v9;
      *(void *)(a1 + 151) = *(void *)((char *)&v14[4] + 7);
      *(_OWORD *)(a1 + 88) = v8;
      int v10 = v15;
      *(unsigned char *)(a1 + 160) = v15;
      if (v10) {
        *(unsigned char *)(a1 + 161) = BYTE1(v15);
      }
      *(unsigned char *)(a1 + 168) = 0;
      sub_244843828(a1, a1 + 200, (uint64_t)v12);
      *(_OWORD *)uint64_t v3 = v12[0];
      *(void *)(v3 + 16) = *(void *)&v12[1];
      int v2 = *(_DWORD *)(a1 + 176);
    }
  }
  return v2 == 0;
}

uint64_t sub_244BC6598(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  objc_initWeak((id *)a1, a2);
  *(void *)(a1 + 8) = v5;
  *(_WORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  return a1;
}

void sub_244BC65E8(uint64_t a1)
{
  sub_244D6A434("/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTROperationalBrowser.mm", 44);
  uint64_t v2 = *(void *)(a1 + 32);
  if (!v2)
  {
    sub_244BC6634(a1);
    uint64_t v2 = *(void *)(a1 + 32);
  }
  *(void *)(a1 + 32) = v2 + 1;
}

void sub_244BC6634(uint64_t a1)
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  sub_244D6A434("/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTROperationalBrowser.mm", 65);
  BOOL v2 = *(unsigned char *)(a1 + 24) == 0;
  uint64_t v3 = sub_244CC8484(9u, "Controller");
  BOOL v4 = os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT);
  if (v2)
  {
    if (v4)
    {
      *(_DWORD *)buf = 134217984;
      uint64_t v16 = a1;
      _os_log_impl(&dword_2446BD000, v3, OS_LOG_TYPE_DEFAULT, "%p trying to start persistent operational browse", buf, 0xCu);
    }

    if (sub_244CC4E58(2u)) {
      sub_244CC4DE0(9u, 2);
    }
    DNSServiceErrorType Connection = DNSServiceCreateConnection((DNSServiceRef *)(a1 + 16));
    if (Connection)
    {
      int v6 = sub_244CC8484(9u, "Controller");
      if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 134218240;
        uint64_t v16 = a1;
        __int16 v17 = 1024;
        LODWORD(v18) = Connection;
        _os_log_impl(&dword_2446BD000, v6, OS_LOG_TYPE_ERROR, "%p failed to create connection for persistent operational browse: %d", buf, 0x12u);
      }

      if (sub_244CC4E58(1u)) {
        sub_244CC4DE0(9u, 1);
      }
    }
    else
    {
      DNSServiceErrorType v7 = DNSServiceSetDispatchQueue(*(DNSServiceRef *)(a1 + 16), *(dispatch_queue_t *)(a1 + 8));
      if (v7)
      {
        long long v8 = sub_244CC8484(9u, "Controller");
        if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)buf = 134218240;
          uint64_t v16 = a1;
          __int16 v17 = 1024;
          LODWORD(v18) = v7;
          _os_log_impl(&dword_2446BD000, v8, OS_LOG_TYPE_ERROR, "%p failed to set up dispatch queue properly for persistent operational browse: %d", buf, 0x12u);
        }

        if (sub_244CC4E58(1u)) {
          sub_244CC4DE0(9u, 1);
        }
        DNSServiceRefDeallocate(*(DNSServiceRef *)(a1 + 16));
      }
      else
      {
        uint64_t v9 = 0;
        *(unsigned char *)(a1 + 24) = 1;
        do
        {
          int v10 = (&off_26519AD58)[v9];
          DNSServiceRef sdRef = *(DNSServiceRef *)(a1 + 16);
          DNSServiceErrorType v11 = DNSServiceBrowse(&sdRef, 0x4000u, 0, "_matter._tcp", v10, (DNSServiceBrowseReply)sub_244BC6B60, (void *)a1);
          if (v11)
          {
            long long v12 = sub_244CC8484(9u, "Controller");
            if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)buf = 134218498;
              if (v10) {
                long long v13 = v10;
              }
              else {
                long long v13 = "(null)";
              }
              uint64_t v16 = a1;
              __int16 v17 = 2080;
              long long v18 = v13;
              __int16 v19 = 1024;
              DNSServiceErrorType v20 = v11;
              _os_log_impl(&dword_2446BD000, v12, OS_LOG_TYPE_ERROR, "%p failed to start persistent operational browse for \"%s\" domain: %d", buf, 0x1Cu);
            }

            if (sub_244CC4E58(1u)) {
              sub_244CC4DE0(9u, 1);
            }
          }
          ++v9;
        }
        while (v9 != 2);
      }
    }
  }
  else
  {
    if (v4)
    {
      *(_DWORD *)buf = 134217984;
      uint64_t v16 = a1;
      _os_log_impl(&dword_2446BD000, v3, OS_LOG_TYPE_DEFAULT, "%p already has a persistent operational browse running", buf, 0xCu);
    }

    if (sub_244CC4E58(2u)) {
      sub_244CC4DE0(9u, 2);
    }
  }
}

void sub_244BC6A28(uint64_t a1)
{
  sub_244D6A434("/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTROperationalBrowser.mm", 54);
  uint64_t v2 = *(void *)(a1 + 32);
  if (v2 == 1)
  {
    sub_244BC6A78(a1);
    uint64_t v2 = *(void *)(a1 + 32);
  }
  *(void *)(a1 + 32) = v2 - 1;
}

void sub_244BC6A78(uint64_t a1)
{
  uint64_t v5 = *MEMORY[0x263EF8340];
  uint64_t v2 = sub_244CC8484(9u, "Controller");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 134217984;
    uint64_t v4 = a1;
    _os_log_impl(&dword_2446BD000, v2, OS_LOG_TYPE_DEFAULT, "%p stopping persistent operational browse", buf, 0xCu);
  }

  if (sub_244CC4E58(2u)) {
    sub_244CC4DE0(9u, 2);
  }
  if (*(unsigned char *)(a1 + 24))
  {
    DNSServiceRefDeallocate(*(DNSServiceRef *)(a1 + 16));
    *(unsigned char *)(a1 + 24) = 0;
  }
}

void sub_244BC6B60(uint64_t a1, char a2, uint64_t a3, int a4, const char *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  sub_244D6A434("/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTROperationalBrowser.mm", 110);
  if (a4)
  {
    long long v12 = sub_244CC8484(9u, "Controller");
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 67109120;
      *(_DWORD *)&uint8_t buf[4] = a4;
      _os_log_impl(&dword_2446BD000, v12, OS_LOG_TYPE_ERROR, "Operational browse failure: %d", buf, 8u);
    }

    if (sub_244CC4E58(1u)) {
      sub_244CC4DE0(9u, 1);
    }
    sub_244BC6A78(a8);
    if (!*(unsigned char *)(a8 + 25)) {
      sub_244BC6634(a8);
    }
  }
  else if ((a2 & 2) != 0)
  {
    v17[0] = 0;
    v17[1] = 0;
    *(void *)buf = 0;
    uint64_t v21 = 0;
    uint64_t v22 = 0;
    sub_244D7E904(a5, v17, (uint64_t)buf);
    BOOL v13 = *(_DWORD *)buf == 0;
    long long v14 = sub_244CC8484(9u, "Controller");
    long long v15 = v14;
    if (v13)
    {
      if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)long long v18 = 136315138;
        __int16 v19 = a5;
        _os_log_impl(&dword_2446BD000, v15, OS_LOG_TYPE_DEFAULT, "Notifying controller factory about new operational instance: '%s'", v18, 0xCu);
      }

      if (sub_244CC4E58(2u)) {
        sub_244CC4DE0(9u, 2);
      }
      id WeakRetained = (os_unfair_lock_s *)objc_loadWeakRetained((id *)a8);
      sub_2446D6DE4(WeakRetained, v17);
    }
    else
    {
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)long long v18 = 136315138;
        __int16 v19 = a5;
        _os_log_impl(&dword_2446BD000, v15, OS_LOG_TYPE_ERROR, "Invalid instance name: '%s'\n", v18, 0xCu);
      }

      if (sub_244CC4E58(1u)) {
        sub_244CC4DE0(9u, 1);
      }
    }
  }
}

void sub_244BC6DAC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244BC6DC4(uint64_t a1)
{
  *(unsigned char *)(a1 + 25) = 1;
  sub_244BC6A78(a1);

  objc_destroyWeak((id *)a1);
  return a1;
}

BOOL sub_244BC6E20()
{
  BOOL v0 = sub_244CB24F4();

  return sub_244CB2674((uint64_t)v0, (uint64_t)&qword_26B0D4358);
}

void *sub_244BC6E50(void *result)
{
  *uint64_t result = &unk_26F944050;
  return result;
}

void sub_244BC6E70(void *a1)
{
  *a1 = &unk_26F944050;
  JUMPOUT(0x245695FA0);
}

void sub_244BC6EA0(unsigned __int16 *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v31 = *MEMORY[0x263EF8340];
  if (*((_DWORD *)a1 + 1) != 29) {
    sub_244E20A80();
  }
  int v5 = *((_DWORD *)a1 + 2);
  switch(v5)
  {
    case 0:
      int v6 = *a1;
      *(unsigned char *)(a2 + 68) = 1;
      *(void *)(a3 + 8) = 0;
      *(void *)(a3 + 16) = 0;
      *(void *)a3 = 0;
      sub_244CB2A1C(a2, (__n128 *)a3);
      if (*(_DWORD *)a3) {
        return;
      }
      *(void *)a3 = 0;
      *(void *)(a3 + 8) = 0;
      *(void *)(a3 + 16) = 0;
      uint64_t v7 = sub_244856AD0(v6, (uint64_t)&v27);
      *(__n128 *)a3 = v27;
      *(void *)(a3 + 16) = v28;
      if (*(_DWORD *)a3) {
        goto LABEL_10;
      }
      if (!v8) {
        goto LABEL_9;
      }
      uint64_t v9 = v7;
      uint64_t v10 = v7 + 8 * v8;
      do
      {
        int v24 = *(_DWORD *)v9;
        LOWORD(v25) = *(unsigned __int8 *)(v9 + 4);
        *(void *)(a3 + 8) = 0;
        *(void *)(a3 + 16) = 0;
        *(void *)a3 = 0;
        sub_244BC75F4((unsigned __int16 *)a2, a3);
        if (*(_DWORD *)a3) {
          goto LABEL_10;
        }
        v9 += 8;
      }
      while (v9 != v10);
LABEL_9:
      *(_DWORD *)a3 = 0;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/clusters/descrip"
                            "tor/descriptor.cpp";
      *(_DWORD *)(a3 + 16) = 180;
LABEL_10:
      sub_244CB2B40(a2);
      goto LABEL_70;
    case 1:
      int v14 = *a1;
      uint64_t v15 = a2;
      int v16 = 1;
      goto LABEL_42;
    case 2:
      int v14 = *a1;
      uint64_t v15 = a2;
      int v16 = 0;
LABEL_42:
      sub_244BC7504(v14, v15, v16, (__n128 *)a3);
      return;
    case 3:
      int v17 = *a1;
      *(_OWORD *)a3 = xmmword_26519AD68;
      *(void *)(a3 + 16) = 94;
      if (!v17)
      {
        *(unsigned char *)(a2 + 68) = 1;
        uint64_t v28 = 0;
        __n128 v27 = 0uLL;
        sub_244CB2A1C(a2, &v27);
        if (v27.n128_u32[0]) {
          goto LABEL_65;
        }
        __n128 v27 = 0uLL;
        uint64_t v28 = 0;
        if (sub_244855D0C())
        {
          unsigned __int16 v21 = 0;
          while (1)
          {
            if (sub_244855CE8(v21))
            {
              int v22 = sub_2448565A0(v21);
              LOWORD(v24) = v22;
              if (v22)
              {
                __n128 v27 = 0uLL;
                uint64_t v28 = 0;
                sub_244BC7948((unsigned __int16 *)a2, (uint64_t)&v27);
                if (v27.n128_u32[0]) {
                  break;
                }
              }
            }
            if (sub_244855D0C() <= ++v21) {
              goto LABEL_52;
            }
          }
        }
        else
        {
LABEL_52:
          v27.n128_u32[0] = 0;
          v27.n128_u64[1] = (unint64_t)"/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/ap"
                                              "p/clusters/descriptor/descriptor.cpp";
          LODWORD(v28) = 111;
        }
LABEL_63:
        sub_244CB2B40(a2);
        if (!v27.n128_u32[0])
        {
          *(_WORD *)(a2 + 74) = -1;
          *(unsigned char *)(a2 + 76) = 0;
        }
        goto LABEL_65;
      }
      if (sub_2448575DC(v17))
      {
        *(unsigned char *)(a2 + 68) = 1;
        uint64_t v28 = 0;
        __n128 v27 = 0uLL;
        sub_244CB2A1C(a2, &v27);
        if (v27.n128_u32[0]) {
          goto LABEL_65;
        }
        __n128 v27 = 0uLL;
        uint64_t v28 = 0;
        if (sub_244855D0C())
        {
          unsigned __int16 v18 = 0;
          while (1)
          {
            if (sub_244855CE8(v18))
            {
              LOWORD(v19) = v18;
              while (1)
              {
                int v20 = sub_2448567B0((unsigned __int16)v19);
                if (v20 == 0xFFFF) {
                  goto LABEL_37;
                }
                if (v20 == v17) {
                  break;
                }
                int v19 = sub_2448562B0(v20);
                if (v19 == 0xFFFF) {
                  goto LABEL_37;
                }
              }
              __n128 v27 = 0uLL;
              uint64_t v28 = 0;
              LOWORD(v24) = sub_2448565A0(v18);
              sub_244BC7948((unsigned __int16 *)a2, (uint64_t)&v27);
              if (v27.n128_u32[0]) {
                break;
              }
            }
LABEL_37:
            if (sub_244855D0C() <= ++v18) {
              goto LABEL_38;
            }
          }
        }
        else
        {
LABEL_38:
          v27.n128_u32[0] = 0;
          v27.n128_u64[1] = (unint64_t)"/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/ap"
                                              "p/clusters/descriptor/descriptor.cpp";
          LODWORD(v28) = 139;
        }
        goto LABEL_63;
      }
      if (!sub_244857620(v17)) {
        return;
      }
      *(unsigned char *)(a2 + 68) = 1;
      uint64_t v28 = 0;
      __n128 v27 = 0uLL;
      sub_244CB2A1C(a2, &v27);
      if (!v27.n128_u32[0])
      {
        __n128 v27 = 0uLL;
        uint64_t v28 = 0;
        if (sub_244855D0C())
        {
          unsigned __int16 v23 = 0;
          while (1)
          {
            if (sub_244855CE8(v23))
            {
              if (sub_2448567B0(v23) == v17)
              {
                __n128 v27 = 0uLL;
                uint64_t v28 = 0;
                LOWORD(v24) = sub_2448565A0(v23);
                sub_244BC7948((unsigned __int16 *)a2, (uint64_t)&v27);
                if (v27.n128_u32[0]) {
                  break;
                }
              }
            }
            if (sub_244855D0C() <= ++v23) {
              goto LABEL_62;
            }
          }
        }
        else
        {
LABEL_62:
          v27.n128_u32[0] = 0;
          v27.n128_u64[1] = (unint64_t)"/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/ap"
                                              "p/clusters/descriptor/descriptor.cpp";
          LODWORD(v28) = 157;
        }
        goto LABEL_63;
      }
LABEL_65:
      *(__n128 *)a3 = v27;
      *(void *)(a3 + 16) = v28;
      return;
    case 4:
      int v11 = *a1;
      *(unsigned char *)(a2 + 68) = 1;
      *(void *)(a3 + 8) = 0;
      *(void *)(a3 + 16) = 0;
      *(void *)a3 = 0;
      sub_244CB2A1C(a2, (__n128 *)a3);
      if (*(_DWORD *)a3) {
        return;
      }
      unint64_t v12 = 0;
      *(void *)a3 = 0;
      *(void *)(a3 + 8) = 0;
      *(void *)(a3 + 16) = 0;
      v27.n128_u8[0] = 0;
      v27.n128_u8[2] = 0;
      v27.n128_u16[2] = 0;
      v27.n128_u8[8] = 0;
      while (1)
      {
        sub_244856B9C(v11, v12, (uint64_t)&v27, (uint64_t)&v24);
        long long v29 = v25;
        int v30 = v26;
        if (v24) {
          break;
        }
        *(void *)a3 = 0;
        *(void *)(a3 + 8) = 0;
        *(void *)(a3 + 16) = 0;
        sub_244BC7B3C((unsigned __int16 *)a2, (uint64_t)&v27, a3);
        ++v12;
        if (*(_DWORD *)a3) {
          goto LABEL_69;
        }
      }
      if (v24 == 216)
      {
        *(_DWORD *)a3 = 0;
        *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/clusters/descr"
                              "iptor/descriptor.cpp";
        *(_DWORD *)(a3 + 16) = 86;
      }
      else
      {
        *(_DWORD *)a3 = v24;
        *(_OWORD *)(a3 + 4) = v29;
        *(_DWORD *)(a3 + 20) = v30;
      }
LABEL_69:
      sub_244CB2B40(a2);
LABEL_70:
      if (!*(_DWORD *)a3)
      {
        *(_WORD *)(a2 + 74) = -1;
        *(unsigned char *)(a2 + 76) = 0;
      }
      return;
    default:
      if (v5 == 65532)
      {
        int v13 = *a1;
        v27.n128_u8[0] = 0;
        v27.n128_u8[2] = 0;
        v27.n128_u16[2] = 0;
        v27.n128_u8[8] = 0;
        LODWORD(v29) = 0;
        sub_244856B9C(v13, 0, (uint64_t)&v27, (uint64_t)&v24);
        if (!v24) {
          LODWORD(v29) = 1;
        }
        *(unsigned char *)(a2 + 68) = 1;
        sub_2446D0668((uint64_t *)a2, (__n128 *)a3);
      }
      else if (v5 == 65533)
      {
        *(unsigned char *)(a2 + 68) = 1;
        sub_244BC7AA8((uint64_t *)a2, (__n128 *)a3);
      }
      else
      {
        *(_DWORD *)a3 = 0;
        *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/clusters/descr"
                              "iptor/descriptor.cpp";
        *(_DWORD *)(a3 + 16) = 241;
      }
      return;
  }
}

void sub_244BC7504(int a1@<W0>, uint64_t a2@<X1>, int a3@<W2>, __n128 *a4@<X8>)
{
  *(unsigned char *)(a2 + 68) = 1;
  a4->n128_u64[1] = 0;
  a4[1].n128_u64[0] = 0;
  a4->n128_u64[0] = 0;
  sub_244CB2A1C(a2, a4);
  if (!a4->n128_u32[0])
  {
    a4->n128_u64[0] = 0;
    a4->n128_u64[1] = 0;
    a4[1].n128_u64[0] = 0;
    unsigned int v8 = sub_2448569FC(a1, a3);
    if (v8)
    {
      unsigned int v9 = v8;
      unsigned __int8 v10 = 0;
      while (1)
      {
        sub_244856D8C(a1, v10, a3);
        a4->n128_u64[1] = 0;
        a4[1].n128_u64[0] = 0;
        a4->n128_u64[0] = 0;
        sub_244BC77E8((unsigned __int16 *)a2, (uint64_t)a4);
        if (a4->n128_u32[0]) {
          break;
        }
        if (v9 <= ++v10) {
          goto LABEL_6;
        }
      }
    }
    else
    {
LABEL_6:
      a4->n128_u32[0] = 0;
      a4->n128_u64[1] = (unint64_t)"/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/cl"
                                          "usters/descriptor/descriptor.cpp";
      a4[1].n128_u32[0] = 197;
    }
    sub_244CB2B40(a2);
    if (!a4->n128_u32[0])
    {
      *(_WORD *)(a2 + 74) = -1;
      *(unsigned char *)(a2 + 76) = 0;
    }
  }
}

void sub_244BC75F4(unsigned __int16 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = *MEMORY[0x263EF8340];
  unsigned int v4 = a1[36];
  if (v4 >= a1[37])
  {
    sub_244CB62B8((uint64_t)&v20);
    uint64_t v5 = *(void *)a1;
    int v6 = *(long long **)(*(void *)a1 + 24);
    long long v7 = v6[3];
    long long v9 = *v6;
    long long v8 = v6[1];
    long long v22 = v6[2];
    long long v23 = v7;
    long long v20 = v9;
    long long v21 = v8;
    if (*((unsigned char *)a1 + 70)) {
      sub_2447EE418(*(void **)(v5 + 224), 256, (uint64_t)&v17);
    }
    else {
      sub_244BC7754((uint64_t *)a1, (__n128 *)&v17);
    }
    int v10 = v17;
    long long v24 = v18;
    int v25 = v19;
    if (v17)
    {
      uint64_t v11 = *(void *)a1;
      unint64_t v12 = *(_OWORD **)(*(void *)a1 + 24);
      long long v13 = v20;
      long long v14 = v21;
      long long v15 = v23;
      v12[2] = v22;
      v12[3] = v15;
      _OWORD *v12 = v13;
      v12[1] = v14;
      sub_244CCCE18(v11);
      *(_OWORD *)(a2 + 4) = v24;
      *(_DWORD *)(a2 + 20) = v25;
    }
    else
    {
      unsigned __int16 v16 = a1[36] + 1;
      a1[36] = v16;
      a1[37] = v16;
      *((unsigned char *)a1 + 71) = 1;
      *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/AttributeValueEncoder.h";
      *(_DWORD *)(a2 + 16) = 205;
    }
    *(_DWORD *)a2 = v10;
  }
  else
  {
    a1[36] = v4 + 1;
    *(_DWORD *)a2 = 0;
    *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/AttributeValueEncoder.h";
    *(_DWORD *)(a2 + 16) = 176;
  }
}

double sub_244BC7754@<D0>(uint64_t *a1@<X0>, __n128 *a2@<X8>)
{
  a2->n128_u64[0] = 0;
  a2->n128_u64[1] = 0;
  a2[1].n128_u64[0] = 0;
  *(void *)&double result = sub_244CB28A8((__n128 *)*a1, (uint64_t)(a1 + 5), a2).n128_u64[0];
  if (!a2->n128_u32[0])
  {
    a2->n128_u64[0] = 0;
    a2->n128_u64[1] = 0;
    a2[1].n128_u64[0] = 0;
    double result = sub_2447EE418(*(void **)(*a1 + 224), 2, (uint64_t)a2);
    if (!a2->n128_u32[0]) {
      return sub_244CB29BC(*a1, a2);
    }
  }
  return result;
}

void sub_244BC77E8(unsigned __int16 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  unsigned int v4 = a1[36];
  if (v4 >= a1[37])
  {
    sub_244CB62B8((uint64_t)&v19);
    uint64_t v5 = *(long long **)(*(void *)a1 + 24);
    long long v6 = v5[3];
    long long v8 = *v5;
    long long v7 = v5[1];
    long long v21 = v5[2];
    long long v22 = v6;
    long long v19 = v8;
    long long v20 = v7;
    if (*((unsigned char *)a1 + 70)) {
      sub_244CB694C();
    }
    else {
      sub_2446D0668((uint64_t *)a1, (__n128 *)&v16);
    }
    int v9 = v16;
    long long v23 = v17;
    int v24 = v18;
    if (v16)
    {
      uint64_t v10 = *(void *)a1;
      uint64_t v11 = *(_OWORD **)(*(void *)a1 + 24);
      long long v12 = v19;
      long long v13 = v20;
      long long v14 = v22;
      v11[2] = v21;
      v11[3] = v14;
      _OWORD *v11 = v12;
      v11[1] = v13;
      sub_244CCCE18(v10);
      *(_OWORD *)(a2 + 4) = v23;
      *(_DWORD *)(a2 + 20) = v24;
    }
    else
    {
      unsigned __int16 v15 = a1[36] + 1;
      a1[36] = v15;
      a1[37] = v15;
      *((unsigned char *)a1 + 71) = 1;
      *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/AttributeValueEncoder.h";
      *(_DWORD *)(a2 + 16) = 205;
    }
    *(_DWORD *)a2 = v9;
  }
  else
  {
    a1[36] = v4 + 1;
    *(_DWORD *)a2 = 0;
    *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/AttributeValueEncoder.h";
    *(_DWORD *)(a2 + 16) = 176;
  }
}

void sub_244BC7948(unsigned __int16 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  unsigned int v4 = a1[36];
  if (v4 >= a1[37])
  {
    sub_244CB62B8((uint64_t)&v19);
    uint64_t v5 = *(long long **)(*(void *)a1 + 24);
    long long v6 = v5[3];
    long long v8 = *v5;
    long long v7 = v5[1];
    long long v21 = v5[2];
    long long v22 = v6;
    long long v19 = v8;
    long long v20 = v7;
    if (*((unsigned char *)a1 + 70)) {
      sub_244CB6904();
    }
    else {
      sub_244BC7AA8((uint64_t *)a1, (__n128 *)&v16);
    }
    int v9 = v16;
    long long v23 = v17;
    int v24 = v18;
    if (v16)
    {
      uint64_t v10 = *(void *)a1;
      uint64_t v11 = *(_OWORD **)(*(void *)a1 + 24);
      long long v12 = v19;
      long long v13 = v20;
      long long v14 = v22;
      v11[2] = v21;
      v11[3] = v14;
      _OWORD *v11 = v12;
      v11[1] = v13;
      sub_244CCCE18(v10);
      *(_OWORD *)(a2 + 4) = v23;
      *(_DWORD *)(a2 + 20) = v24;
    }
    else
    {
      unsigned __int16 v15 = a1[36] + 1;
      a1[36] = v15;
      a1[37] = v15;
      *((unsigned char *)a1 + 71) = 1;
      *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/AttributeValueEncoder.h";
      *(_DWORD *)(a2 + 16) = 205;
    }
    *(_DWORD *)a2 = v9;
  }
  else
  {
    a1[36] = v4 + 1;
    *(_DWORD *)a2 = 0;
    *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/AttributeValueEncoder.h";
    *(_DWORD *)(a2 + 16) = 176;
  }
}

double sub_244BC7AA8@<D0>(uint64_t *a1@<X0>, __n128 *a2@<X8>)
{
  a2->n128_u64[0] = 0;
  a2->n128_u64[1] = 0;
  a2[1].n128_u64[0] = 0;
  *(void *)&double result = sub_244CB28A8((__n128 *)*a1, (uint64_t)(a1 + 5), a2).n128_u64[0];
  if (!a2->n128_u32[0])
  {
    a2->n128_u64[0] = 0;
    a2->n128_u64[1] = 0;
    a2[1].n128_u64[0] = 0;
    sub_244CB6904();
    if (!a2->n128_u32[0]) {
      return sub_244CB29BC(*a1, a2);
    }
  }
  return result;
}

void sub_244BC7B3C(unsigned __int16 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v28 = *MEMORY[0x263EF8340];
  unsigned int v5 = a1[36];
  if (v5 >= a1[37])
  {
    sub_244CB62B8((uint64_t)&v22);
    uint64_t v7 = *(void *)a1;
    long long v8 = *(long long **)(*(void *)a1 + 24);
    long long v9 = v8[3];
    long long v11 = *v8;
    long long v10 = v8[1];
    long long v24 = v8[2];
    long long v25 = v9;
    long long v22 = v11;
    long long v23 = v10;
    if (*((unsigned char *)a1 + 70)) {
      sub_2447F35FC(a2, *(char **)(v7 + 224), 256, (uint64_t)&v19);
    }
    else {
      sub_244BC7C9C((uint64_t *)a1, a2, (__n128 *)&v19);
    }
    int v12 = v19;
    long long v26 = v20;
    int v27 = v21;
    if (v19)
    {
      uint64_t v13 = *(void *)a1;
      long long v14 = *(_OWORD **)(*(void *)a1 + 24);
      long long v15 = v22;
      long long v16 = v23;
      long long v17 = v25;
      v14[2] = v24;
      v14[3] = v17;
      _OWORD *v14 = v15;
      v14[1] = v16;
      sub_244CCCE18(v13);
      *(_OWORD *)(a3 + 4) = v26;
      *(_DWORD *)(a3 + 20) = v27;
    }
    else
    {
      unsigned __int16 v18 = a1[36] + 1;
      a1[36] = v18;
      a1[37] = v18;
      *((unsigned char *)a1 + 71) = 1;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/AttributeValueEncoder.h";
      *(_DWORD *)(a3 + 16) = 205;
    }
    *(_DWORD *)a3 = v12;
  }
  else
  {
    a1[36] = v5 + 1;
    *(_DWORD *)a3 = 0;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/AttributeValueEncoder.h";
    *(_DWORD *)(a3 + 16) = 176;
  }
}

double sub_244BC7C9C@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, __n128 *a3@<X8>)
{
  a3->n128_u64[0] = 0;
  a3->n128_u64[1] = 0;
  a3[1].n128_u64[0] = 0;
  *(void *)&double result = sub_244CB28A8((__n128 *)*a1, (uint64_t)(a1 + 5), a3).n128_u64[0];
  if (!a3->n128_u32[0])
  {
    a3->n128_u64[0] = 0;
    a3->n128_u64[1] = 0;
    a3[1].n128_u64[0] = 0;
    double result = sub_2447F35FC(a2, *(char **)(*a1 + 224), 2, (uint64_t)a3);
    if (!a3->n128_u32[0]) {
      return sub_244CB29BC(*a1, a3);
    }
  }
  return result;
}

void sub_244BC7DD8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BC7F68(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BC80EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BC8274(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BC8368(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

char *sub_244BC847C(char *a1, const char *a2)
{
  if (a1)
  {
    uint64_t v3 = 0;
    uint64_t v4 = 0;
    do
    {
      if (!*(_WORD *)&a1[v3 + 32]) {
        break;
      }
      if (*(unsigned __int16 *)&a1[v3 + 32] == a2)
      {
        if (v4) {
          goto LABEL_10;
        }
        uint64_t v4 = (uint64_t)&a1[v3 + 8];
      }
      v3 += 32;
    }
    while (v3 != 160);
    if (v4)
    {
      objc_msgSend_numberWithUnsignedLongLong_(NSNumber, a2, *(void *)(v4 + 16));
      a1 = (char *)objc_claimAutoreleasedReturnValue();
      goto LABEL_11;
    }
LABEL_10:
    a1 = 0;
LABEL_11:
    uint64_t v2 = vars8;
  }
  return a1;
}

void sub_244BC85EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BC8690(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BC8A80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_244BC8EF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_244BC9060(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_244BC90F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BC9114(void *a1, void *a2)
{
  id v10 = a2;
  uint64_t v4 = objc_msgSend_objectForKeyedSubscript_(a1, v3, @"fabricFiltered");
  uint64_t v7 = v4;
  if (v4)
  {
    uint64_t v8 = objc_msgSend_BOOLValue(v4, v5, v6);
    objc_msgSend_setFilterByFabric_(v10, v9, v8);
  }
  else
  {
    objc_msgSend_setFilterByFabric_(v10, v5, 1);
  }
}

void sub_244BC9194(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244BC9300(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_244BC9478(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BC95FC(_Unwind_Exception *a1)
{
  uint64_t v3 = v2;

  _Unwind_Resume(a1);
}

__objc2_meth_list *sub_244BC962C()
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  p_class_meths = &OBJC_PROTOCOL___CBCentralManagerDelegate.class_meths;
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_268EBE980, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_268EBE980))
  {
    uint64_t v3 = (void *)MEMORY[0x263EFFA08];
    uint64_t v7 = objc_opt_class();
    uint64_t v8 = objc_opt_class();
    uint64_t v9 = objc_opt_class();
    uint64_t v10 = objc_opt_class();
    uint64_t v11 = objc_opt_class();
    uint64_t v12 = objc_opt_class();
    uint64_t v13 = objc_opt_class();
    unsigned int v5 = objc_msgSend_arrayWithObjects_count_(MEMORY[0x263EFF8C0], v4, (uint64_t)&v7, 7);
    qword_268EBE978 = objc_msgSend_setWithArray_(v3, v6, (uint64_t)v5, v7, v8, v9, v10, v11, v12);

    __cxa_guard_release(&qword_268EBE980);
    p_class_meths = (__objc2_meth_list **)(&OBJC_PROTOCOL___CBCentralManagerDelegate + 32);
  }
  int v1 = p_class_meths[303];

  return v1;
}

void sub_244BC9774(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_268EBE980);
  _Unwind_Resume(a1);
}

void sub_244BC9820(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BC9910(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BCA1CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244BCA1E4(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v10 = a4;
  if (v10)
  {
    (*(void (**)(void))(a1[5] + 16))();
  }
  else
  {
    uint64_t v6 = (void *)a1[4];
    uint64_t v7 = objc_msgSend_numberWithUnsignedLongLong_(NSNumber, v5, a1[6]);
    uint64_t v9 = objc_msgSend_baseDeviceForNodeID_(v6, v8, (uint64_t)v7);

    (*(void (**)(void))(a1[5] + 16))();
  }
}

void sub_244BCA2A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244BCA3EC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_244BCA3FC(uint64_t a1)
{
}

void sub_244BCA404(uint64_t a1)
{
  uint64_t v2 = dispatch_group_create();
  unsigned int v5 = objc_msgSend_controllerXPCID(*(void **)(a1 + 32), v3, v4);

  if (!v5)
  {
    dispatch_group_enter(v2);
    uint64_t v8 = objc_msgSend_xpcConnection(*(void **)(a1 + 32), v6, v7);
    v17[0] = MEMORY[0x263EF8330];
    v17[1] = 3221225472;
    uint64_t v17[2] = sub_244BCA578;
    v17[3] = &unk_26519ADD8;
    uint64_t v9 = *(void *)(a1 + 56);
    v17[4] = *(void *)(a1 + 32);
    uint64_t v19 = v9;
    unsigned __int16 v18 = v2;
    objc_msgSend_getProxyHandleWithCompletion_(v8, v10, (uint64_t)v17);
  }
  v14[0] = MEMORY[0x263EF8330];
  v14[1] = 3221225472;
  v14[2] = sub_244BCA810;
  v14[3] = &unk_26519AE00;
  uint64_t v11 = *(NSObject **)(a1 + 40);
  v14[4] = *(void *)(a1 + 32);
  id v12 = *(id *)(a1 + 48);
  uint64_t v13 = *(void *)(a1 + 56);
  id v15 = v12;
  uint64_t v16 = v13;
  dispatch_group_notify(v2, v11, v14);
}

void sub_244BCA554(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21)
{
  _Unwind_Resume(a1);
}

void sub_244BCA578(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v9 = v6;
  if (v6)
  {
    id v10 = objc_msgSend_proxy(v6, v7, v8);
    v15[0] = MEMORY[0x263EF8330];
    v15[1] = 3221225472;
    _OWORD v15[2] = sub_244BCA70C;
    v15[3] = &unk_26519ADB0;
    uint64_t v11 = *(void *)(a1 + 48);
    v15[4] = *(void *)(a1 + 32);
    uint64_t v18 = v11;
    id v16 = v9;
    id v17 = *(id *)(a1 + 40);
    objc_msgSend_getAnyDeviceControllerWithCompletion_(v10, v12, (uint64_t)v15);
  }
  else
  {
    uint64_t v13 = sub_244CC8484(0, "NotSpecified");
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl(&dword_2446BD000, v13, OS_LOG_TYPE_ERROR, "XPC disconnected while retrieving any shared remote controller", v14, 2u);
    }

    if (sub_244CC4E58(1u)) {
      sub_244CC4DE0(0, 1);
    }
    dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
  }
}

void sub_244BCA6D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BCA70C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v7 = a3;
  if (v7)
  {
    uint64_t v8 = sub_244CC8484(0, "NotSpecified");
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl(&dword_2446BD000, v8, OS_LOG_TYPE_ERROR, "Failed to fetch any shared remote controller", v9, 2u);
    }

    if (sub_244CC4E58(1u)) {
      sub_244CC4DE0(0, 1);
    }
  }
  else
  {
    objc_msgSend_setControllerXPCID_(*(void **)(a1 + 32), v6, (uint64_t)v5);
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40), *(id *)(a1 + 40));
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 48));
}

void sub_244BCA7F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BCA810(uint64_t a1, const char *a2, uint64_t a3)
{
  uint64_t v4 = objc_msgSend_controllerXPCID(*(void **)(a1 + 32), a2, a3);

  uint64_t v7 = *(void *)(a1 + 40);
  if (v4)
  {
    objc_msgSend_controllerXPCID(*(void **)(a1 + 32), v5, v6);
    id v8 = (id)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t))(v7 + 16))(v7);
  }
  else
  {
    objc_msgSend_errorWithDomain_code_userInfo_(MEMORY[0x263F087E8], v5, @"MTRErrorDomain", 1, 0);
    id v8 = (id)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, void, void))(v7 + 16))(v7, 0, 0);
  }
}

void sub_244BCA8E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244BCA984(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BCABFC(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_244BCACC8()
{
  uint64_t v2 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  dispatch_queue_t v0 = dispatch_queue_create("org.csa-iot.matter.framework.xpc.workqueue", v2);
  int v1 = (void *)qword_268EBE988;
  qword_268EBE988 = (uint64_t)v0;
}

uint64_t sub_244BCAD2C()
{
  return 16;
}

uint64_t sub_244BCAD34()
{
  return 4;
}

uint64_t sub_244BCAD3C(uint64_t a1, const char *a2, uint64_t a3)
{
  id v5 = objc_msgSend_sharedInstance(MTRDeviceControllerFactory, a2, a3);
  uint64_t v7 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v6, a1);
  uint64_t v9 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v8, (uint64_t)a2);
  uint64_t v11 = objc_msgSend_neededReadPrivilegeForClusterID_attributeID_(v5, v10, (uint64_t)v7, v9);

  if (v11)
  {
    unint64_t v14 = objc_msgSend_unsignedLongLongValue(v11, v12, v13);
    if (v14 <= 5) {
      unsigned __int8 v15 = 0x100804100110uLL >> (8 * v14);
    }
    else {
      unsigned __int8 v15 = 16;
    }
  }
  else if (a2 >> 16 || (unsigned __int16)((_WORD)a2 + 4096) >= 0xFFFu)
  {
    if (a2 < 0x10000 && a1 == 29) {
      unsigned __int8 v15 = 1;
    }
    else {
      unsigned __int8 v15 = 16;
    }
  }
  else
  {
    unsigned __int8 v15 = 1;
  }

  return v15;
}

void sub_244BCAE3C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244BCAE70()
{
  uint64_t result = sub_244D6A434("/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/ServerEndpoint/MTRServerAccessControl.mm", 208);
  if (!byte_268EBE9A8)
  {
    byte_268EBE9A8 = 1;
    return sub_244BCAEC8(qword_268EBE998);
  }
  return result;
}

uint64_t sub_244BCAEC8(void *a1)
{
  *a1 = &unk_26F952600;
  uint64_t v2 = (uint64_t)(a1 + 1);
  a1[1] = &unk_26F952650;
  uint64_t v3 = sub_244D908A4();
  return sub_244D8F2A8((uint64_t)v3, v2, (uint64_t)a1, (uint64_t)v5);
}

void sub_244BCAF48()
{
}

BOOL sub_244BCAF5C(uint64_t a1, int a2, int a3)
{
  return sub_2447A49A8(a2, a3);
}

void sub_244BCAF68()
{
}

void sub_244BCAF80(uint64_t a1@<X8>)
{
  *(_DWORD *)a1 = 0;
  *(void *)(a1 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/access/AccessControl.h";
  *(_DWORD *)(a1 + 16) = 343;
}

void sub_244BCAFA0(void *a1@<X1>, uint64_t a2@<X8>)
{
  *a1 = 0;
  *(_DWORD *)a2 = 0;
  *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/access/AccessControl.h";
  *(_DWORD *)(a2 + 16) = 350;
}

void sub_244BCAFC0(void *a1@<X1>, uint64_t a2@<X8>)
{
  *a1 = 0;
  *(_DWORD *)a2 = 0;
  *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/access/AccessControl.h";
  *(_DWORD *)(a2 + 16) = 356;
}

void sub_244BCAFE0(void *a1@<X1>, uint64_t a2@<X8>)
{
  *a1 = 0;
  *(_DWORD *)a2 = 0;
  *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/access/AccessControl.h";
  *(_DWORD *)(a2 + 16) = 362;
}

void sub_244BCB000(void *a1@<X1>, uint64_t a2@<X8>)
{
  *a1 = 0;
  *(_DWORD *)a2 = 0;
  *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/access/AccessControl.h";
  *(_DWORD *)(a2 + 16) = 368;
}

void sub_244BCB020(void *a1@<X2>, uint64_t a2@<X8>)
{
  *a1 = 0;
  *(_DWORD *)a2 = 0;
  *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/access/AccessControl.h";
  *(_DWORD *)(a2 + 16) = 375;
}

void sub_244BCB040(void *a1@<X1>, uint64_t a2@<X8>)
{
  *a1 = 0;
  *(_DWORD *)a2 = 0;
  *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/access/AccessControl.h";
  *(_DWORD *)(a2 + 16) = 381;
}

void sub_244BCB060(uint64_t a1@<X8>)
{
  *(_DWORD *)a1 = 0;
  *(void *)(a1 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/access/AccessControl.h";
  *(_DWORD *)(a1 + 16) = 385;
}

void sub_244BCB07C(uint64_t a1@<X8>)
{
  *(_DWORD *)a1 = 0;
  *(void *)(a1 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/access/AccessControl.h";
  *(_DWORD *)(a1 + 16) = 388;
}

void sub_244BCB098(uint64_t a1@<X8>)
{
  *(_DWORD *)a1 = 0;
  *(void *)(a1 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/access/AccessControl.h";
  *(_DWORD *)(a1 + 16) = 389;
}

void sub_244BCB0B4(uint64_t a1@<X8>)
{
  *(_DWORD *)a1 = 0;
  *(void *)(a1 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/access/AccessControl.h";
  *(_DWORD *)(a1 + 16) = 390;
}

void sub_244BCB0D0(uint64_t a1@<X8>)
{
  *(_DWORD *)a1 = 0;
  *(void *)(a1 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/access/AccessControl.h";
  *(_DWORD *)(a1 + 16) = 391;
}

void sub_244BCB0EC(uint64_t a1@<X8>)
{
  *(_DWORD *)a1 = 0;
  *(void *)(a1 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/access/AccessControl.h";
  *(_DWORD *)(a1 + 16) = 394;
}

void sub_244BCB108(const char *a1@<X1>, unsigned int *a2@<X2>, unsigned int a3@<W3>, uint64_t a4@<X8>)
{
  uint64_t v57 = *MEMORY[0x263EF8340];
  uint64_t v7 = objc_msgSend_numberWithUnsignedShort_(NSNumber, a1, *((unsigned __int16 *)a2 + 2));
  uint64_t v9 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v8, *a2);
  char v49 = objc_msgSend_clusterPathWithEndpointID_clusterID_(MTRClusterPath, v10, (uint64_t)v7, v9);

  uint64_t v13 = objc_msgSend_sharedInstance(MTRDeviceControllerFactory, v11, v12);
  unsigned __int8 v15 = objc_msgSend_accessGrantsForFabricIndex_clusterPath_(v13, v14, *(unsigned __int8 *)a1, v49);

  long long v52 = 0u;
  long long v53 = 0u;
  long long v50 = 0u;
  long long v51 = 0u;
  id v16 = v15;
  uint64_t v18 = objc_msgSend_countByEnumeratingWithState_objects_count_(v16, v17, (uint64_t)&v50, v54, 16);
  if (v18)
  {
    uint64_t v19 = *(void *)v51;
LABEL_3:
    uint64_t v20 = 0;
    while (1)
    {
      if (*(void *)v51 != v19) {
        objc_enumerationMutation(v16);
      }
      id v21 = *(id *)(*((void *)&v50 + 1) + 8 * v20);
      long long v24 = objc_msgSend_subjectID(v21, v22, v23);
      BOOL v25 = v24 == 0;

      if (v25)
      {
        BOOL v33 = a1[1] == 64;
      }
      else
      {
        uint64_t v28 = objc_msgSend_subjectID(v21, v26, v27);
        unint64_t v31 = objc_msgSend_unsignedLongLongValue(v28, v29, v30);

        if (v31 - 1 > 0xFFFFFFEFFFFFFFFELL)
        {
          if (v31 <= 0xFFFFFFFFFFFEFFFFLL)
          {
            if (HIDWORD(v31) == 4294967293)
            {
              uint64_t v37 = 0;
              while (1)
              {
                unsigned int v38 = *(_DWORD *)&a1[v37 + 16];
                if (v38)
                {
                  if ((unsigned __int16)(v31 - 1) < (unsigned __int16)v38 && HIWORD(v38) == WORD1(v31)) {
                    break;
                  }
                }
                v37 += 4;
                if (v37 == 12) {
                  goto LABEL_38;
                }
              }

LABEL_24:
              switch(objc_msgSend_grantedPrivilege(v21, v34, v35, v47))
              {
                case 1u:
                  if (a3 != 1) {
                    goto LABEL_53;
                  }
                  int v46 = 71;
                  break;
                case 2u:
                  if (a3 - 1 >= 2) {
                    goto LABEL_53;
                  }
                  int v46 = 76;
                  break;
                case 3u:
                  int v46 = 81;
                  if (a3 != 1 && a3 != 4) {
                    goto LABEL_53;
                  }
                  break;
                case 4u:
                  if (a3 > 8 || ((1 << a3) & 0x112) == 0) {
                    goto LABEL_53;
                  }
                  int v46 = 86;
                  break;
                case 5u:
                  if (a3 > 0x10 || ((1 << a3) & 0x10116) == 0) {
                    goto LABEL_53;
                  }
                  int v46 = 91;
                  break;
                default:
                  uint64_t v40 = sub_244CC8484(0, "NotSpecified");
                  if (os_log_type_enabled(v40, OS_LOG_TYPE_ERROR))
                  {
                    int v43 = objc_msgSend_grantedPrivilege(v21, v41, v42);
                    *(_DWORD *)buf = 67109120;
                    LODWORD(v56) = v43;
                    _os_log_impl(&dword_2446BD000, v40, OS_LOG_TYPE_ERROR, "Uknown granted privilege %u, ignoring", buf, 8u);
                  }

                  if (sub_244CC4E58(1u))
                  {
                    unint64_t v47 = objc_msgSend_grantedPrivilege(v21, v34, v44);
                    sub_244CC4DE0(0, 1);
                  }
                  goto LABEL_53;
              }
              *(_DWORD *)a4 = 0;
              *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Frame"
                                    "work/CHIP/ServerEndpoint/MTRServerAccessControl.mm";
              *(_DWORD *)(a4 + 16) = v46;

              goto LABEL_60;
            }
            uint64_t v39 = sub_244CC8484(0, "NotSpecified");
            if (os_log_type_enabled(v39, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)buf = 134217984;
              unint64_t v56 = v31;
              _os_log_impl(&dword_2446BD000, v39, OS_LOG_TYPE_ERROR, "Unexpected grant subject: 0x%llx", buf, 0xCu);
            }

            if (sub_244CC4E58(1u))
            {
              unint64_t v47 = v31;
              sub_244CC4DE0(0, 1);
            }
LABEL_38:

            goto LABEL_53;
          }
          BOOL v33 = *((unsigned __int8 *)a1 + 1) == 128 && *((void *)a1 + 1) == v31;
        }
        else
        {
          BOOL v33 = a1[1] == 64 && *((void *)a1 + 1) == v31;
        }
      }
      if (v33) {
        goto LABEL_24;
      }
LABEL_53:
      if (++v20 == v18)
      {
        uint64_t v45 = objc_msgSend_countByEnumeratingWithState_objects_count_(v16, v34, (uint64_t)&v50, v54, 16);
        uint64_t v18 = v45;
        if (v45) {
          goto LABEL_3;
        }
        break;
      }
    }
  }

  *(_DWORD *)a4 = 165;
  *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/Se"
                        "rverEndpoint/MTRServerAccessControl.mm";
  *(_DWORD *)(a4 + 16) = 103;
LABEL_60:
}

void sub_244BCB5D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18)
{
  _Unwind_Resume(a1);
}

void sub_244BCB80C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, void *a13, void *a14, void *a15, void *a16)
{
  _Unwind_Resume(a1);
}

void sub_244BCBA88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, void *a13, void *a14, void *a15, void *a16)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244BCBBDC(uint64_t a1, void *a2)
{
  *(void *)a1 = &unk_26F952718;
  *(_OWORD *)(a1 + 32) = xmmword_244EADB60;
  *(void *)(a1 + 48) = 1;
  *(unsigned char *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  objc_initWeak((id *)(a1 + 80), a2);
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  return a1;
}

void sub_244BCBC4C(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X3>, void *a5@<X4>, uint64_t a6@<X8>)
{
  id v11 = a3;
  id v12 = a4;
  id v15 = a5;
  int v16 = 54;
  int v17 = 47;
  if (v11 && v12)
  {
    a1[1] = a2;
    if (objc_msgSend_length(v11, v13, v14) == 16)
    {
      id v18 = v11;
      id v21 = (const void *)objc_msgSend_bytes(v18, v19, v20);
      size_t v24 = objc_msgSend_length(v18, v22, v23);
      memcpy(a1 + 2, v21, v24);
      uint64_t v27 = objc_msgSend_copy(v12, v25, v26);
      uint64_t v28 = (void *)a1[8];
      a1[8] = v27;

      uint64_t v31 = objc_msgSend_copy(v15, v29, v30);
      long long v32 = (void *)a1[9];
      a1[9] = v31;

      int v17 = 0;
      int v16 = 70;
    }
    else
    {
      BOOL v33 = sub_244CC8484(0, "NotSpecified");
      if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)unsigned __int8 v34 = 0;
        _os_log_impl(&dword_2446BD000, v33, OS_LOG_TYPE_ERROR, "MTROperationalCredentialsDelegate::init provided IPK is wrong size", v34, 2u);
      }

      if (sub_244CC4E58(1u)) {
        sub_244CC4DE0(0, 1);
      }
      int v16 = 61;
      int v17 = 47;
    }
  }
  *(_DWORD *)a6 = v17;
  *(void *)(a6 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MT"
                        "ROperationalCredentialsDelegate.mm";
  *(_DWORD *)(a6 + 16) = v16;
}

void sub_244BCBDD0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BCBDEC(uint64_t *a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X5>, uint64_t a7@<X8>)
{
  if (a1[1])
  {
    id v14 = objc_alloc(MEMORY[0x263F08798]);
    int v17 = objc_msgSend_now(MEMORY[0x263EFF910], v15, v16);
    uint64_t v20 = objc_msgSend_distantFuture(MEMORY[0x263EFF910], v18, v19);
    id started = (id)objc_msgSend_initWithStartDate_endDate_(v14, v21, (uint64_t)v17, v20);

    long long v22 = (void *)a1[9];
    if (!v22) {
      long long v22 = (void *)a1[8];
    }
    sub_244BCBF4C(a1[1], v22, a2, a3, a4, a5, started, a6, a7);
  }
  else
  {
    *(_DWORD *)a7 = 3;
    *(void *)(a7 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "MTROperationalCredentialsDelegate.mm";
    *(_DWORD *)(a7 + 16) = 77;
  }
}

void sub_244BCBF24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_244BCBF4C(uint64_t a1@<X0>, void *a2@<X1>, unint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>)
{
  id v16 = a2;
  id v17 = a7;
  *(void *)unint64_t v47 = 0;
  uint64_t v20 = objc_msgSend_startDate(v17, v18, v19);
  char v21 = sub_244BCC320(v20, &v47[4]);

  if ((v21 & 1) == 0)
  {
    uint64_t v37 = sub_244CC8484(0, "NotSpecified");
    if (os_log_type_enabled(v37, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_2446BD000, v37, OS_LOG_TYPE_ERROR, "Failed in computing certificate validity start date", buf, 2u);
    }

    if (sub_244CC4E58(1u)) {
      sub_244CC4DE0(0, 1);
    }
    *(_DWORD *)a9 = 172;
    *(void *)(a9 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "MTROperationalCredentialsDelegate.mm";
    int v38 = 92;
    goto LABEL_20;
  }
  size_t v24 = objc_msgSend_endDate(v17, v22, v23);
  char v25 = sub_244BCC4E0(v24, v47);

  if ((v25 & 1) == 0)
  {
    uint64_t v39 = sub_244CC8484(0, "NotSpecified");
    if (os_log_type_enabled(v39, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_2446BD000, v39, OS_LOG_TYPE_ERROR, "Failed in computing certificate validity end date", buf, 2u);
    }

    if (sub_244CC4E58(1u)) {
      sub_244CC4DE0(0, 1);
    }
    *(_DWORD *)a9 = 172;
    *(void *)(a9 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "MTROperationalCredentialsDelegate.mm";
    int v38 = 97;
LABEL_20:
    *(_DWORD *)(a9 + 16) = v38;
    goto LABEL_21;
  }
  sub_244D9200C((uint64_t)v46);
  *(void *)a9 = 0;
  *(void *)(a9 + 8) = 0;
  *(void *)(a9 + 16) = 0;
  id v26 = v16;
  uint64_t v29 = objc_msgSend_bytes(v26, v27, v28);
  uint64_t v32 = objc_msgSend_length(v26, v30, v31);
  sub_2446C1098(buf, v29, v32);

  v45[0] = *(_OWORD *)buf;
  sub_244D94384((uint64_t *)v45, (uint64_t)v46, a9);
  if (!*(_DWORD *)a9)
  {
    sub_244D9200C((uint64_t)v45);
    *(void *)a9 = 0;
    *(void *)(a9 + 8) = 0;
    *(void *)(a9 + 16) = 0;
    sub_244D92154((uint64_t)v45, 789, a4, a9);
    if (!*(_DWORD *)a9)
    {
      *(void *)a9 = 0;
      *(void *)(a9 + 8) = 0;
      *(void *)(a9 + 16) = 0;
      sub_244D92154((uint64_t)v45, 785, a3, a9);
      if (!*(_DWORD *)a9)
      {
        *(void *)a9 = 0;
        *(void *)(a9 + 8) = 0;
        *(void *)(a9 + 16) = 0;
        sub_244D921EC((uint64_t)v45, a5, (void *)a9);
        if (!*(_DWORD *)a9)
        {
          *(void *)buf = 1;
          *(_DWORD *)&uint8_t buf[8] = *(_DWORD *)&v47[4];
          *(_DWORD *)&buf[12] = *(_DWORD *)v47;
          v42[6] = v45[6];
          v42[7] = v45[7];
          v42[8] = v45[8];
          v42[9] = v45[9];
          unsigned __int8 v42[2] = v45[2];
          v42[3] = v45[3];
          v42[4] = v45[4];
          v42[5] = v45[5];
          v42[0] = v45[0];
          v42[1] = v45[1];
          v43[6] = v46[6];
          v43[7] = v46[7];
          v43[8] = v46[8];
          v43[9] = v46[9];
          unsigned __int8 v43[2] = v46[2];
          v43[3] = v46[3];
          v43[4] = v46[4];
          v43[5] = v46[5];
          v43[0] = v46[0];
          v43[1] = v46[1];
          char v44 = 0;
          sub_244DA5A48((uint64_t)buf, a6, a1, a8, (void *)a9);
          nullsub_13(v43, v35);
          nullsub_13(v42, v36);
        }
      }
    }
    nullsub_13(v45, v34);
  }
  nullsub_13(v46, v33);
LABEL_21:
}

void sub_244BCC2A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,char a59)
{
  nullsub_13(v62, a2);
  nullsub_13(v61, v64);
  nullsub_13(&a59, v65);
  nullsub_13(&STACK[0x238], v66);

  _Unwind_Resume(a1);
}

uint64_t sub_244BCC320(void *a1, char *a2)
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  id v3 = a1;
  uint64_t v5 = sub_244B2BDBC(v3, a2, v4);
  if ((v5 & 1) == 0)
  {
    id v6 = objc_alloc(MEMORY[0x263EFF8F0]);
    id v8 = objc_msgSend_initWithCalendarIdentifier_(v6, v7, *MEMORY[0x263EFF3F8]);
    id v10 = objc_msgSend_timeZoneForSecondsFromGMT_(MEMORY[0x263EFFA18], v9, 0);
    id v12 = objc_msgSend_componentsInTimeZone_fromDate_(v8, v11, (uint64_t)v10, v3);

    uint64_t v13 = sub_244CC8484(0, "NotSpecified");
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 134217984;
      uint64_t v20 = objc_msgSend_year(v12, v14, v15);
      _os_log_impl(&dword_2446BD000, v13, OS_LOG_TYPE_ERROR, "Year %lu is out of range for Matter epoch time.  Please use [NSDate distantFuture] to represent \"never expires\".", buf, 0xCu);
    }

    if (sub_244CC4E58(1u))
    {
      objc_msgSend_year(v12, v16, v17);
      sub_244CC4DE0(0, 1);
    }
  }
  return v5;
}

void sub_244BCC490(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244BCC4E0(void *a1, char *a2)
{
  id v3 = a1;
  id v6 = objc_msgSend_distantFuture(MEMORY[0x263EFF910], v4, v5);
  int isEqualToDate = objc_msgSend_isEqualToDate_(v3, v7, (uint64_t)v6);

  if (isEqualToDate)
  {
    *(_DWORD *)a2 = 0;
    uint64_t v9 = 1;
  }
  else
  {
    uint64_t v9 = sub_244BCC320(v3, a2);
  }

  return v9;
}

void sub_244BCC560(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BCC57C(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, uint64_t *a5@<X4>, uint64_t *a6@<X5>, uint64_t *a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>)
{
  if (*(void *)(a1 + 96)) {
    sub_244BCC58C(a1, a2, a3, a4, a5, a6, a7, a8, a9);
  }
  else {
    sub_244BCCB44(a1, (uint64_t)a2, a8, (uint64_t)a9);
  }
}

void sub_244BCC58C(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, uint64_t *a5@<X4>, uint64_t *a6@<X5>, uint64_t *a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>)
{
  uint64_t v80 = *MEMORY[0x263EF8340];
  sub_244D6A434("/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTROperationalCredentialsDelegate.mm", 128);
  if (*(void *)(a1 + 88))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 80));
    if (WeakRetained)
    {
      id v57 = WeakRetained;
      *(void *)(a1 + 112) = a8;
      uint64_t v19 = [MTROperationalCSRInfo alloc];
      uint64_t v21 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v20, *a3, a3[1]);
      uint64_t v23 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v22, *a2, a2[1]);
      char v25 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v24, *a4, a4[1]);
      unint64_t v56 = objc_msgSend_initWithCSRNonce_csrElementsTLV_attestationSignature_(v19, v26, (uint64_t)v21, v23, v25);

      long long v77 = 0uLL;
      long long v76 = 0uLL;
      int v75 = 0;
      uint64_t v73 = 0;
      uint64_t v74 = 0;
      uint64_t v70 = 0;
      v71[0] = 0;
      *(_DWORD *)((char *)v71 + 7) = 0;
      sub_244CB3988((uint64_t)v72);
      v72[18] = 21;
      sub_244BCCE28(*(void *)(a1 + 88), v78);
      if (v78[0])
      {
        *a9 = 0;
        a9[1] = 0;
        a9[2] = 0;
        uint64_t v27 = sub_244BCCEA4(v78);
        LOBYTE(to) = v27[416];
        if ((_BYTE)to) {
          long long v68 = *(_OWORD *)(v27 + 424);
        }
        uint64_t v28 = sub_2446D18A4(&to);
        sub_244D9C03C((uint64_t)v28, &v77, &v76, &v75, (uint64_t)&v73, (uint64_t)v69, (uint64_t)a9);
        if (!*(_DWORD *)a9)
        {
          if (v74)
          {
            uint64_t v54 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v29, v73);
          }
          else
          {
            uint64_t v54 = 0;
          }
          uint64_t v30 = [MTRDeviceAttestationInfo alloc];
          uint64_t v55 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v31, *a5, a5[1]);
          uint64_t v32 = sub_244BCCEA4(v78);
          LOBYTE(to) = v32[152];
          if ((_BYTE)to) {
            long long v68 = *((_OWORD *)v32 + 10);
          }
          uint64_t v33 = (uint64_t *)sub_2446D18A4(&to);
          uint64_t v35 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v34, *v33, v33[1]);
          uint64_t v36 = sub_244BCCEA4(v78);
          v65[0] = v36[416];
          if (v65[0]) {
            long long v66 = *(_OWORD *)(v36 + 424);
          }
          uint64_t v37 = (uint64_t *)sub_2446D18A4(v65);
          long long v53 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v38, *v37, v37[1]);
          uint64_t v39 = sub_244BCCEA4(v78);
          v63[0] = v39[440];
          if (v63[0]) {
            long long v64 = *((_OWORD *)v39 + 28);
          }
          uint64_t v40 = (uint64_t *)sub_2446D18A4(v63);
          uint64_t v42 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v41, *v40, v40[1]);
          char v44 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v43, *a6, a6[1]);
          int v46 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v45, *a7, a7[1]);
          unsigned __int8 v48 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v47, v77, *((void *)&v77 + 1));
          long long v50 = objc_msgSend_initWithDeviceAttestationChallenge_nonce_elementsTLV_elementsSignature_deviceAttestationCertificate_productAttestationIntermediateCertificate_certificationDeclaration_firmwareInfo_(v30, v49, (uint64_t)v55, v35, v53, v42, v44, v46, v48, v54);

          objc_copyWeak(&to, (id *)(a1 + 80));
          long long v51 = *(NSObject **)(a1 + 104);
          block[0] = MEMORY[0x263EF8330];
          block[1] = 3221225472;
          block[2] = sub_244BCCEC8;
          block[3] = &unk_26519AE78;
          v62[1] = (id)a1;
          id v59 = v56;
          id v60 = v50;
          id v61 = v57;
          id v52 = v50;
          objc_copyWeak(v62, &to);
          dispatch_async(v51, block);
          *(_DWORD *)a9 = 0;
          a9[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTROpera"
                  "tionalCredentialsDelegate.mm";
          *((_DWORD *)a9 + 4) = 187;
          objc_destroyWeak(v62);

          objc_destroyWeak(&to);
        }
      }
      else
      {
        *(_DWORD *)a9 = 3;
        a9[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTROperati"
                "onalCredentialsDelegate.mm";
        *((_DWORD *)a9 + 4) = 149;
      }
      if (v78[0]) {
        sub_244B94F10(v79);
      }

      id WeakRetained = v57;
    }
    else
    {
      *(_DWORD *)a9 = 3;
      a9[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTROperation"
              "alCredentialsDelegate.mm";
      *((_DWORD *)a9 + 4) = 133;
    }
  }
  else
  {
    *(_DWORD *)a9 = 3;
    a9[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTROperational"
            "CredentialsDelegate.mm";
    *((_DWORD *)a9 + 4) = 130;
  }
}

void sub_244BCCA48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, void *a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,char a58)
{
  if (a58) {
    sub_244B94F10(&STACK[0x308]);
  }

  _Unwind_Resume(a1);
}

void sub_244BCCB44(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X7>, uint64_t a4@<X8>)
{
  v36[10] = *MEMORY[0x263EF8340];
  if (*(unsigned char *)(a1 + 56))
  {
    unint64_t v8 = *(void *)(a1 + 40);
    *(unsigned char *)(a1 + 56) = 0;
  }
  else
  {
    unint64_t v8 = *(void *)(a1 + 32);
    if (!v8)
    {
      *(_DWORD *)a4 = 3;
      *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/MTROperationalCredentialsDelegate.mm";
      *(_DWORD *)(a4 + 16) = 255;
      return;
    }
  }
  sub_244CB3988((uint64_t)v34);
  sub_244CB39B8((uint64_t)v34, *(void *)a2, *(void *)(a2 + 8));
  if (sub_244CB3B68((uint64_t)v34) != -1
    || (*(void *)a4 = 0,
        *(void *)(a4 + 8) = 0,
        *(void *)(a4 + 16) = 0,
        sub_244CB4E58((uint64_t)v34, (void *)a4),
        !*(_DWORD *)a4))
  {
    *(void *)a4 = 0;
    *(void *)(a4 + 8) = 0;
    *(void *)(a4 + 16) = 0;
    sub_244CB5530((uint64_t)v34, 21, 256, a4);
    if (!*(_DWORD *)a4)
    {
      int v33 = 0;
      *(void *)(a4 + 8) = 0;
      *(void *)(a4 + 16) = 0;
      *(void *)a4 = 0;
      sub_244CB4C90((uint64_t)v34, &v33, a4);
      if (!*(_DWORD *)a4)
      {
        *(void *)a4 = 0;
        *(void *)(a4 + 8) = 0;
        *(void *)(a4 + 16) = 0;
        sub_244CB55E4((uint64_t)v34, 16, 1, (void *)a4);
        if (!*(_DWORD *)a4)
        {
          uint64_t v9 = v35;
          unsigned int v10 = sub_244CB3BE0((uint64_t)v34);
          sub_2446C1098(v32, v9, v10);
          sub_244CB4D00((uint64_t)v34, v33, (uint64_t)v36);
          v36[0] = &unk_26F954540;
          *(void *)(a4 + 8) = 0;
          *(void *)(a4 + 16) = 0;
          *(void *)a4 = 0;
          sub_244CEE210(v32[0], v32[1], (uint64_t)v36, (void *)a4);
          if (!*(_DWORD *)a4)
          {
            id v11 = objc_alloc(MEMORY[0x263EFF990]);
            id v13 = objc_msgSend_initWithLength_(v11, v12, 600);
            uint64_t v16 = objc_msgSend_mutableBytes(v13, v14, v15);
            sub_24479476C(v31, v16, 600);
            *(void *)a4 = 0;
            *(void *)(a4 + 8) = 0;
            *(void *)(a4 + 16) = 0;
            sub_244BCBDEC((uint64_t *)a1, v8, *(void *)(a1 + 48), (uint64_t)&unk_244EADB70, (uint64_t)v36, v31, a4);
            if (!*(_DWORD *)a4)
            {
              uint64_t v19 = a3 + 24;
              uint64_t v17 = *(void *)(a3 + 24);
              id v18 = *(void (**)(uint64_t, int *, void *, void *, void *, char *, unsigned char *))(v19 + 8);
              int v28 = 0;
              uint64_t v29 = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTROpe"
                    "rationalCredentialsDelegate.mm";
              int v30 = 284;
              sub_2446C1098(v27, v31[0], v31[1]);
              v26[0] = sub_244BCD4E4(a1);
              v26[1] = v20;
              v25[0] = sub_244BCD560(a1);
              v25[1] = v21;
              v23[0] = 1;
              uint64_t v24 = a1 + 16;
              v22[0] = 0;
              v18(v17, &v28, v27, v26, v25, v23, v22);
              *(_DWORD *)a4 = 0;
              *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Frame"
                                    "work/CHIP/MTROperationalCredentialsDelegate.mm";
              *(_DWORD *)(a4 + 16) = 287;
            }
          }
        }
      }
    }
  }
}

void sub_244BCCE00(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244BCCE28@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = *(void *)(a1 + 9064);
  if (result)
  {
    uint64_t v4 = (unsigned __int8 *)(*(uint64_t (**)(uint64_t))(*(void *)result + 24))(result);
    *a2 = 1;
    return sub_244BCE520((uint64_t)(a2 + 8), v4);
  }
  else
  {
    *a2 = 0;
  }
  return result;
}

unsigned char *sub_244BCCEA4(unsigned char *a1)
{
  if (!*a1) {
    sub_244E20B60();
  }
  return a1 + 8;
}

void sub_244BCCEC8(uint64_t a1)
{
  int v1 = *(void **)(a1 + 64);
  uint64_t v2 = (void *)v1[12];
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 48);
  v7[0] = MEMORY[0x263EF8330];
  v7[1] = 3221225472;
  uint64_t v7[2] = sub_244BCCF98;
  v7[3] = &unk_26519AE50;
  v8[1] = v1;
  objc_copyWeak(v8, (id *)(a1 + 56));
  objc_msgSend_issueOperationalCertificateForRequest_attestationInfo_controller_completion_(v2, v6, v3, v4, v5, v7);
  objc_destroyWeak(v8);
}

void sub_244BCCF84(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_244BCCF98(uint64_t a1, void *a2, void *a3)
{
  id v11 = a2;
  id v5 = a3;
  uint64_t v6 = *(void *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  unsigned int v10 = WeakRetained;
  if (WeakRetained && (objc_msgSend_isRunning(WeakRetained, v8, v9) & 1) != 0) {
    sub_244BCD044(v6, v11, v5);
  }
}

void sub_244BCD028(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244BCD044(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 80));
  v11[0] = MEMORY[0x263EF8330];
  v11[1] = 3221225472;
  v11[2] = sub_244BCD144;
  v11[3] = &unk_26519AEA0;
  id v13 = v6;
  uint64_t v14 = a1;
  id v12 = v5;
  id v8 = v6;
  id v9 = v5;
  objc_msgSend_asyncGetCommissionerOnMatterQueue_errorHandler_(WeakRetained, v10, (uint64_t)v11, 0);
}

void sub_244BCD11C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244BCD144(uint64_t a1, uint64_t a2)
{
  uint64_t v69 = *MEMORY[0x263EF8340];
  uint64_t v4 = *(void *)(a1 + 48);
  sub_244D6A434("/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTROperationalCredentialsDelegate.mm", 197);
  uint64_t v5 = *(void *)(v4 + 112);
  if (v5)
  {
    *(void *)(v4 + 112) = 0;
    if (*(void *)(v4 + 88) == a2)
    {
      if (!*(void *)(a1 + 32))
      {
        uint64_t v10 = *(void *)(v5 + 24);
        id v11 = *(void (**)(uint64_t, unsigned char *, void *, long long *, long long *, unsigned char *, unsigned char *))(v5 + 32);
        sub_244B27864(*(void **)(a1 + 40), (uint64_t)v65);
        v67[0] = 0;
        v67[1] = 0;
        long long v66 = 0uLL;
        long long v64 = 0uLL;
        v63[0] = 0;
        v62[0] = 0;
        v11(v10, v65, v67, &v66, &v64, v63, v62);
        return;
      }
      sub_244BCCE28(a2, v67);
      if (LOBYTE(v67[0]))
      {
        id v6 = sub_244BCCEA4(v67);
        if (v6[376])
        {
          *((void *)&v66 + 1) = sub_2446F9190(v6 + 376);
          LOBYTE(v66) = 1;
          uint64_t v9 = *(void *)sub_2446F7170(&v66);
        }
        else
        {
          uint64_t v9 = v4 + 16;
        }
        id v12 = objc_msgSend_adminSubject(*(void **)(a1 + 32), v7, v8);
        uint64_t v13 = v12 == 0;

        if (v13)
        {
          long long v22 = sub_244BCCEA4(v67);
          if (!v22[400])
          {
            char v23 = 0;
            char v21 = 1;
            goto LABEL_15;
          }
          char v21 = 0;
          uint64_t v13 = *((void *)v22 + 51);
        }
        else
        {
          uint64_t v16 = objc_msgSend_adminSubject(*(void **)(a1 + 32), v14, v15);
          uint64_t v13 = objc_msgSend_unsignedLongLongValue(v16, v17, v18);

          char v21 = 0;
        }
        char v23 = 1;
LABEL_15:
        long long v64 = 0uLL;
        uint64_t v24 = objc_msgSend_intermediateCertificate(*(void **)(a1 + 32), v19, v20);
        BOOL v25 = v24 == 0;

        if (!v25)
        {
          objc_msgSend_intermediateCertificate(*(void **)(a1 + 32), v26, v27);
          id v28 = objc_claimAutoreleasedReturnValue();
          uint64_t v31 = objc_msgSend_bytes(v28, v29, v30);
          uint64_t v34 = objc_msgSend_length(v28, v32, v33);
          sub_2446C1098(&v66, v31, v34);

          long long v64 = v66;
        }
        uint64_t v35 = *(void *)(v5 + 24);
        uint64_t v36 = *(void (**)(uint64_t, int *, long long *, long long *, long long *, char *, char *))(v5 + 32);
        int v59 = 0;
        id v60 = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTROperation"
              "alCredentialsDelegate.mm";
        int v61 = 236;
        objc_msgSend_operationalCertificate(*(void **)(a1 + 32), v26, v27);
        id v37 = objc_claimAutoreleasedReturnValue();
        uint64_t v40 = objc_msgSend_bytes(v37, v38, v39);
        uint64_t v43 = objc_msgSend_length(v37, v41, v42);
        sub_2446C1098(&v66, v40, v43);

        long long v58 = v66;
        objc_msgSend_rootCertificate(*(void **)(a1 + 32), v44, v45);
        id v46 = objc_claimAutoreleasedReturnValue();
        uint64_t v49 = objc_msgSend_bytes(v46, v47, v48);
        uint64_t v52 = objc_msgSend_length(v46, v50, v51);
        sub_2446C1098(&v66, v49, v52);

        long long v57 = v66;
        v55[0] = 1;
        uint64_t v56 = v9;
        v53[0] = v23;
        if ((v21 & 1) == 0) {
          uint64_t v54 = v13;
        }
        v36(v35, &v59, &v58, &v64, &v57, v55, v53);

        if (LOBYTE(v67[0])) {
          sub_244B94F10(v68);
        }
      }
    }
  }
}

void sub_244BCD454(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  if (a34) {
    sub_244B94F10(&STACK[0x248]);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_244BCD4E4(uint64_t a1)
{
  int v1 = *(void **)(a1 + 72);
  if (!v1) {
    return 0;
  }
  id v2 = v1;
  uint64_t v5 = objc_msgSend_bytes(v2, v3, v4);
  uint64_t v8 = objc_msgSend_length(v2, v6, v7);
  sub_2446C1098(&v10, v5, v8);

  return v10;
}

void sub_244BCD550(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244BCD560(uint64_t a1)
{
  id v1 = *(id *)(a1 + 64);
  uint64_t v4 = objc_msgSend_bytes(v1, v2, v3);
  uint64_t v7 = objc_msgSend_length(v1, v5, v6);
  sub_2446C1098(&v9, v4, v7);

  return v9;
}

void sub_244BCD5BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BCD5CC(void *a1@<X0>, void *a2@<X1>, void *a3@<X2>, void *a4@<X3>, void *a5@<X4>, void *a6@<X8>)
{
  uint64_t v56 = *MEMORY[0x263EF8340];
  id v11 = a1;
  id v12 = a2;
  id v13 = a3;
  id v14 = a4;
  *a5 = 0;
  v52[1] = &unk_26F954540;
  char v53 = 0;
  v52[0] = &unk_26F943F78;
  id v54 = 0;
  uint64_t v55 = &unk_26F954540;
  a6[1] = 0;
  a6[2] = 0;
  *a6 = 0;
  sub_2446CC8D8((uint64_t)v52, v11, (uint64_t)a6);
  if (!*(_DWORD *)a6)
  {
    sub_244D9200C((uint64_t)&v41);
    *a6 = 0;
    a6[1] = 0;
    a6[2] = 0;
    unint64_t v15 = sub_244BCDA88(v12);
    sub_244D92154((uint64_t)&v41, 788, v15, (uint64_t)a6);
    if (!*(_DWORD *)a6)
    {
      if (!v13) {
        goto LABEL_6;
      }
      unint64_t v18 = objc_msgSend_unsignedLongLongValue(v13, v16, v17);
      if (!v18)
      {
        *(_DWORD *)a6 = 47;
        a6[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTROperati"
                "onalCredentialsDelegate.mm";
        int v29 = 348;
LABEL_22:
        *((_DWORD *)a6 + 4) = v29;
        goto LABEL_23;
      }
      *a6 = 0;
      a6[1] = 0;
      a6[2] = 0;
      sub_244D92154((uint64_t)&v41, 789, v18, (uint64_t)a6);
      if (!*(_DWORD *)a6)
      {
LABEL_6:
        uint64_t v40 = 0;
        uint64_t v19 = objc_msgSend_startDate(v14, v16, v17);
        char v20 = sub_244BCC320(v19, (char *)&v40 + 4);

        if (v20)
        {
          char v23 = objc_msgSend_endDate(v14, v21, v22);
          char v24 = sub_244BCC4E0(v23, (char *)&v40);

          if (v24)
          {
            v35[6] = v47;
            v35[7] = v48;
            v35[8] = v49;
            v35[9] = v50;
            unsigned __int8 v35[2] = v43;
            v35[3] = v44;
            v35[4] = v45;
            v35[5] = v46;
            v35[0] = v41;
            v35[1] = v42;
            v36[6] = v47;
            v36[7] = v48;
            v36[8] = v49;
            v36[9] = v50;
            unsigned __int8 v36[2] = v43;
            v36[3] = v44;
            v36[4] = v45;
            v36[5] = v46;
            int v38 = buf;
            uint64_t v39 = 600;
            uint64_t v32 = 0;
            int v33 = HIDWORD(v40);
            int v34 = v40;
            v36[0] = v41;
            v36[1] = v42;
            char v37 = 0;
            a6[1] = 0;
            a6[2] = 0;
            *a6 = 0;
            sub_244DA5854((uint64_t)&v32, (uint64_t)v52, (uint64_t *)&v38, a6);
            if (!*(_DWORD *)a6)
            {
              sub_2446C1098(v31, (uint64_t)v38, v39);
              objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v26, v31[0], v31[1]);
              *a5 = (id)objc_claimAutoreleasedReturnValue();
              *(_DWORD *)a6 = 0;
              a6[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTRO"
                      "perationalCredentialsDelegate.mm";
              *((_DWORD *)a6 + 4) = 369;
            }
            nullsub_13(v36, v25);
            nullsub_13(v35, v27);
            goto LABEL_23;
          }
          uint64_t v30 = sub_244CC8484(0, "NotSpecified");
          if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR))
          {
            *(_WORD *)buf = 0;
            _os_log_impl(&dword_2446BD000, v30, OS_LOG_TYPE_ERROR, "Failed in computing certificate validity end date", buf, 2u);
          }

          if (sub_244CC4E58(1u)) {
            sub_244CC4DE0(0, 1);
          }
          *(_DWORD *)a6 = 172;
          a6[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTROpera"
                  "tionalCredentialsDelegate.mm";
          int v29 = 361;
        }
        else
        {
          id v28 = sub_244CC8484(0, "NotSpecified");
          if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR))
          {
            *(_WORD *)buf = 0;
            _os_log_impl(&dword_2446BD000, v28, OS_LOG_TYPE_ERROR, "Failed in computing certificate validity start date", buf, 2u);
          }

          if (sub_244CC4E58(1u)) {
            sub_244CC4DE0(0, 1);
          }
          *(_DWORD *)a6 = 172;
          a6[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTROpera"
                  "tionalCredentialsDelegate.mm";
          int v29 = 356;
        }
        goto LABEL_22;
      }
    }
LABEL_23:
    nullsub_13(&v41, v16);
  }

  sub_244CEDE1C((uint64_t)v52);
}

void sub_244BCDA00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,char a61)
{
  nullsub_13(&a61, a2);

  sub_244CEDE1C((uint64_t)&STACK[0x4A0]);
  _Unwind_Resume(a1);
}

uint64_t sub_244BCDA88(void *a1)
{
  id v1 = a1;
  uint64_t v4 = v1;
  if (v1)
  {
    uint64_t v5 = objc_msgSend_unsignedLongLongValue(v1, v2, v3);
  }
  else
  {
    uint64_t v6 = arc4random();
    uint64_t v5 = arc4random() | (unint64_t)(v6 << 32);
  }

  return v5;
}

void sub_244BCDADC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BCDAEC(void *a1@<X0>, void *a2@<X1>, __SecKey *a3@<X2>, void *a4@<X3>, void *a5@<X4>, void *a6@<X5>, void *a7@<X6>, void *a8@<X8>)
{
  uint64_t v64 = *MEMORY[0x263EF8340];
  id v15 = a1;
  id v16 = a2;
  id v17 = a4;
  id v18 = a5;
  id v19 = a6;
  *a7 = 0;
  if (objc_msgSend_keypair_matchesCertificate_(MTRCertificates, v20, (uint64_t)v15, v16))
  {
    v60[1] = &unk_26F954540;
    char v61 = 0;
    v60[0] = &unk_26F943F78;
    id v62 = 0;
    uint64_t v63 = &unk_26F954540;
    a8[1] = 0;
    a8[2] = 0;
    *a8 = 0;
    sub_2446CC8D8((uint64_t)v60, v15, (uint64_t)a8);
    if (*(_DWORD *)a8) {
      goto LABEL_29;
    }
    id v21 = v16;
    uint64_t v24 = objc_msgSend_bytes(v21, v22, v23);
    uint64_t v27 = objc_msgSend_length(v21, v25, v26);
    sub_2446C1098(buf, v24, v27);

    long long v57 = *(_OWORD *)buf;
    v59[0] = &unk_26F954540;
    a8[1] = 0;
    a8[2] = 0;
    *a8 = 0;
    sub_2446CD1AC(a3, (uint64_t)v59, (uint64_t)a8);
    if (*(_DWORD *)a8) {
      goto LABEL_29;
    }
    sub_244D9200C((uint64_t)v56);
    *a8 = 0;
    a8[1] = 0;
    a8[2] = 0;
    sub_244D94384((uint64_t *)&v57, (uint64_t)v56, (uint64_t)a8);
    if (*(_DWORD *)a8)
    {
LABEL_28:
      nullsub_13(v56, v28);
LABEL_29:

      sub_244CEDE1C((uint64_t)v60);
      goto LABEL_30;
    }
    sub_244D9200C((uint64_t)v55);
    *a8 = 0;
    a8[1] = 0;
    a8[2] = 0;
    unint64_t v29 = sub_244BCDA88(v17);
    sub_244D92154((uint64_t)v55, 787, v29, (uint64_t)a8);
    if (!*(_DWORD *)a8)
    {
      if (!v18) {
        goto LABEL_9;
      }
      unint64_t v32 = objc_msgSend_unsignedLongLongValue(v18, v30, v31);
      if (!v32)
      {
        *(_DWORD *)a8 = 47;
        a8[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTROperati"
                "onalCredentialsDelegate.mm";
        int v43 = 398;
LABEL_26:
        *((_DWORD *)a8 + 4) = v43;
        goto LABEL_27;
      }
      *a8 = 0;
      a8[1] = 0;
      a8[2] = 0;
      sub_244D92154((uint64_t)v55, 789, v32, (uint64_t)a8);
      if (!*(_DWORD *)a8)
      {
LABEL_9:
        uint64_t v54 = 0;
        int v33 = objc_msgSend_startDate(v19, v30, v31);
        char v34 = sub_244BCC320(v33, (char *)&v54 + 4);

        if (v34)
        {
          char v37 = objc_msgSend_endDate(v19, v35, v36);
          char v38 = sub_244BCC4E0(v37, (char *)&v54);

          if (v38)
          {
            uint64_t v52 = buf;
            uint64_t v53 = 600;
            uint64_t v46 = 0;
            int v47 = HIDWORD(v54);
            int v48 = v54;
            v49[6] = v55[6];
            v49[7] = v55[7];
            v49[8] = v55[8];
            v49[9] = v55[9];
            unsigned __int8 v49[2] = v55[2];
            v49[3] = v55[3];
            v49[4] = v55[4];
            v49[5] = v55[5];
            v49[0] = v55[0];
            v49[1] = v55[1];
            v50[6] = v56[6];
            v50[7] = v56[7];
            v50[8] = v56[8];
            v50[9] = v56[9];
            unsigned __int8 v50[2] = v56[2];
            void v50[3] = v56[3];
            v50[4] = v56[4];
            v50[5] = v56[5];
            v50[0] = v56[0];
            v50[1] = v56[1];
            char v51 = 0;
            a8[1] = 0;
            a8[2] = 0;
            *a8 = 0;
            sub_244DA5954((uint64_t)&v46, (uint64_t)v59, (uint64_t)v60, (uint64_t *)&v52, a8);
            if (!*(_DWORD *)a8)
            {
              sub_2446C1098(v45, (uint64_t)v52, v53);
              objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v40, v45[0], v45[1]);
              *a7 = (id)objc_claimAutoreleasedReturnValue();
              *(_DWORD *)a8 = 0;
              a8[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTRO"
                      "perationalCredentialsDelegate.mm";
              *((_DWORD *)a8 + 4) = 419;
            }
            nullsub_13(v50, v39);
            nullsub_13(v49, v41);
            goto LABEL_27;
          }
          long long v44 = sub_244CC8484(0, "NotSpecified");
          if (os_log_type_enabled(v44, OS_LOG_TYPE_ERROR))
          {
            *(_WORD *)buf = 0;
            _os_log_impl(&dword_2446BD000, v44, OS_LOG_TYPE_ERROR, "Failed in computing certificate validity end date", buf, 2u);
          }

          if (sub_244CC4E58(1u)) {
            sub_244CC4DE0(0, 1);
          }
          *(_DWORD *)a8 = 172;
          a8[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTROpera"
                  "tionalCredentialsDelegate.mm";
          int v43 = 411;
        }
        else
        {
          long long v42 = sub_244CC8484(0, "NotSpecified");
          if (os_log_type_enabled(v42, OS_LOG_TYPE_ERROR))
          {
            *(_WORD *)buf = 0;
            _os_log_impl(&dword_2446BD000, v42, OS_LOG_TYPE_ERROR, "Failed in computing certificate validity start date", buf, 2u);
          }

          if (sub_244CC4E58(1u)) {
            sub_244CC4DE0(0, 1);
          }
          *(_DWORD *)a8 = 172;
          a8[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTROpera"
                  "tionalCredentialsDelegate.mm";
          int v43 = 406;
        }
        goto LABEL_26;
      }
    }
LABEL_27:
    nullsub_13(v55, v30);
    goto LABEL_28;
  }
  *(_DWORD *)a8 = 47;
  a8[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTROperationalCr"
          "edentialsDelegate.mm";
  *((_DWORD *)a8 + 4) = 380;
LABEL_30:
}

void sub_244BCE018(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,char a61)
{
  nullsub_13(&a61, a2);
  nullsub_13(&STACK[0x240], v67);

  sub_244CEDE1C((uint64_t)&STACK[0x598]);
  _Unwind_Resume(a1);
}

void sub_244BCE0D0(void *a1@<X0>, void *a2@<X1>, __SecKey *a3@<X2>, void *a4@<X3>, void *a5@<X4>, void *a6@<X5>, void *a7@<X6>, void *a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v46 = *MEMORY[0x263EF8340];
  id v17 = a1;
  id v18 = a2;
  id v19 = a4;
  id v20 = a5;
  id v21 = a6;
  id v22 = a7;
  *a8 = 0;
  if ((objc_msgSend_keypair_matchesCertificate_(MTRCertificates, v23, (uint64_t)v17, v18) & 1) == 0)
  {
    *(_DWORD *)a9 = 47;
    *(void *)(a9 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "MTROperationalCredentialsDelegate.mm";
    int v28 = 431;
    goto LABEL_5;
  }
  if ((unint64_t)objc_msgSend_count(v21, v24, v25) >= 4)
  {
    *(_DWORD *)a9 = 47;
    *(void *)(a9 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "MTROperationalCredentialsDelegate.mm";
    int v28 = 435;
LABEL_5:
    *(_DWORD *)(a9 + 16) = v28;
    goto LABEL_6;
  }
  unint64_t v31 = objc_msgSend_unsignedLongLongValue(v19, v26, v27);
  if (!v31)
  {
    *(_DWORD *)a9 = 47;
    *(void *)(a9 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "MTROperationalCredentialsDelegate.mm";
    int v28 = 439;
    goto LABEL_5;
  }
  uint64_t v32 = objc_msgSend_unsignedLongLongValue(v20, v29, v30);
  if ((unint64_t)(v32 - 1) >= 0xFFFFFFEFFFFFFFFFLL)
  {
    *(_DWORD *)a9 = 47;
    *(void *)(a9 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "MTROperationalCredentialsDelegate.mm";
    int v28 = 442;
    goto LABEL_5;
  }
  unint64_t v34 = v32;
  v42[1] = &unk_26F954540;
  char v43 = 0;
  v42[0] = &unk_26F943F78;
  id v44 = 0;
  long long v45 = &unk_26F954540;
  *(void *)(a9 + 8) = 0;
  *(void *)(a9 + 16) = 0;
  *(void *)a9 = 0;
  sub_2446CC8D8((uint64_t)v42, v17, a9);
  if (!*(_DWORD *)a9)
  {
    v41[0] = &unk_26F954540;
    *(void *)(a9 + 8) = 0;
    *(void *)(a9 + 16) = 0;
    *(void *)a9 = 0;
    sub_2446CD1AC(a3, (uint64_t)v41, a9);
    if (!*(_DWORD *)a9)
    {
      int v38 = 0;
      uint64_t v39 = 0;
      if (!v21
        || (*(void *)a9 = 0,
            *(void *)(a9 + 8) = 0,
            *(void *)(a9 + 16) = 0,
            sub_244B2B924(v21, (uint64_t)&v38, a9),
            !*(_DWORD *)a9))
      {
        uint64_t v36 = &v40;
        uint64_t v37 = 600;
        *(void *)(a9 + 8) = 0;
        *(void *)(a9 + 16) = 0;
        *(void *)a9 = 0;
        sub_244BCBF4C((uint64_t)v42, v18, v34, v31, (uint64_t)&v38, (uint64_t)v41, v22, (uint64_t *)&v36, a9);
        if (!*(_DWORD *)a9)
        {
          sub_2446C1098(v35, (uint64_t)v36, v37);
          objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v33, v35[0], v35[1]);
          *a8 = (id)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)a9 = 0;
          *(void *)(a9 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework"
                                "/CHIP/MTROperationalCredentialsDelegate.mm";
          *(_DWORD *)(a9 + 16) = 460;
        }
      }
    }
  }

  sub_244CEDE1C((uint64_t)v42);
LABEL_6:
}

void sub_244BCE400(_Unwind_Exception *a1)
{
  sub_244CEDE1C((uint64_t)&STACK[0x2E8]);
  _Unwind_Resume(a1);
}

void sub_244BCE45C(uint64_t a1)
{
  sub_244BCE8A4(a1);

  JUMPOUT(0x245695FA0);
}

uint64_t sub_244BCE494(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = a2;
  *(unsigned char *)(result + 56) = 1;
  return result;
}

uint64_t sub_244BCE4A4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 48) = a2;
  return result;
}

char *sub_244BCE4AC@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  if (*(void *)(a1 + 8) == 32)
  {
    *a2 = 0;
    a2[1] = 0;
    a2[2] = 0;
    uint64_t result = sub_244CECD5C(*(char **)a1, 0x20uLL, (uint64_t)a2);
    if (*(_DWORD *)a2) {
      return result;
    }
    int v4 = 0;
    int v5 = 88;
  }
  else
  {
    int v5 = 86;
    int v4 = 47;
  }
  *(_DWORD *)a2 = v4;
  a2[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/controller/OperationalCredentialsDelegate.h";
  *((_DWORD *)a2 + 4) = v5;
  return result;
}

uint64_t sub_244BCE520(uint64_t result, unsigned __int8 *a2)
{
  int v2 = *a2;
  *(unsigned char *)uint64_t result = v2;
  if (v2) {
    *(_WORD *)(result + 2) = *((_WORD *)a2 + 1);
  }
  int v3 = a2[4];
  *(unsigned char *)(result + 4) = v3;
  if (v3) {
    *(_WORD *)(result + 6) = *((_WORD *)a2 + 3);
  }
  int v4 = a2[8];
  *(unsigned char *)(result + 8) = v4;
  if (v4) {
    *(unsigned char *)(result + 9) = a2[9];
  }
  int v5 = a2[16];
  *(unsigned char *)(result + 16) = v5;
  if (v5) {
    *(_OWORD *)(result + 24) = *(_OWORD *)(a2 + 24);
  }
  int v6 = a2[40];
  *(unsigned char *)(result + 40) = v6;
  if (v6) {
    *(_OWORD *)(result + 48) = *((_OWORD *)a2 + 3);
  }
  int v7 = a2[64];
  *(unsigned char *)(result + 64) = v7;
  if (v7)
  {
    long long v8 = *(_OWORD *)(a2 + 72);
    *(void *)(result + 88) = *((void *)a2 + 11);
    *(_OWORD *)(result + 72) = v8;
  }
  int v9 = a2[96];
  *(unsigned char *)(result + 96) = v9;
  if (v9)
  {
    long long v10 = *(_OWORD *)(a2 + 104);
    *(void *)(result + 120) = *((void *)a2 + 15);
    *(_OWORD *)(result + 104) = v10;
  }
  int v11 = a2[128];
  *(unsigned char *)(result + 128) = v11;
  if (v11) {
    *(_OWORD *)(result + 136) = *(_OWORD *)(a2 + 136);
  }
  int v12 = a2[152];
  *(unsigned char *)(result + 152) = v12;
  if (v12) {
    *(_OWORD *)(result + 160) = *((_OWORD *)a2 + 10);
  }
  int v13 = a2[176];
  *(unsigned char *)(result + 176) = v13;
  if (v13)
  {
    long long v14 = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(result + 200) = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(result + 184) = v14;
  }
  int v15 = a2[216];
  *(unsigned char *)(result + 216) = v15;
  if (v15) {
    *(_OWORD *)(result + 224) = *((_OWORD *)a2 + 14);
  }
  int v16 = a2[240];
  *(unsigned char *)(result + 240) = v16;
  if (v16) {
    *(_OWORD *)(result + 248) = *(_OWORD *)(a2 + 248);
  }
  int v17 = a2[264];
  *(unsigned char *)(result + 264) = v17;
  if (v17)
  {
    long long v18 = *((_OWORD *)a2 + 18);
    *(_OWORD *)(result + 272) = *((_OWORD *)a2 + 17);
    *(_OWORD *)(result + 288) = v18;
  }
  int v19 = a2[304];
  *(unsigned char *)(result + 304) = v19;
  if (v19) {
    *(_OWORD *)(result + 312) = *(_OWORD *)(a2 + 312);
  }
  int v20 = a2[328];
  *(unsigned char *)(result + 328) = v20;
  if (v20) {
    *(_OWORD *)(result + 336) = *((_OWORD *)a2 + 21);
  }
  int v21 = a2[352];
  *(unsigned char *)(result + 352) = v21;
  if (v21) {
    *(_OWORD *)(result + 360) = *(_OWORD *)(a2 + 360);
  }
  int v22 = a2[376];
  *(unsigned char *)(result + 376) = v22;
  if (v22) {
    *(_OWORD *)(result + 377) = *(_OWORD *)(a2 + 377);
  }
  int v23 = a2[400];
  *(unsigned char *)(result + 400) = v23;
  if (v23) {
    *(void *)(result + 408) = *((void *)a2 + 51);
  }
  int v24 = a2[416];
  *(unsigned char *)(result + 416) = v24;
  if (v24) {
    *(_OWORD *)(result + 424) = *(_OWORD *)(a2 + 424);
  }
  int v25 = a2[440];
  *(unsigned char *)(result + 440) = v25;
  if (v25) {
    *(_OWORD *)(result + 448) = *((_OWORD *)a2 + 28);
  }
  int v26 = a2[464];
  *(unsigned char *)(result + 464) = v26;
  if (v26) {
    *(_OWORD *)(result + 472) = *(_OWORD *)(a2 + 472);
  }
  int v27 = a2[488];
  *(unsigned char *)(result + 488) = v27;
  if (v27) {
    *(_OWORD *)(result + 496) = *((_OWORD *)a2 + 31);
  }
  int v28 = a2[512];
  *(unsigned char *)(result + 512) = v28;
  if (v28) {
    *(void *)(result + 520) = *((void *)a2 + 65);
  }
  int v29 = a2[528];
  *(unsigned char *)(result + 528) = v29;
  if (v29) {
    *(_WORD *)(result + 530) = *((_WORD *)a2 + 265);
  }
  int v30 = a2[532];
  *(unsigned char *)(result + 532) = v30;
  if (v30) {
    *(_WORD *)(result + 534) = *((_WORD *)a2 + 267);
  }
  int v31 = a2[536];
  *(unsigned char *)(result + 536) = v31;
  if (v31) {
    *(unsigned char *)(result + 537) = a2[537];
  }
  int v32 = a2[538];
  *(unsigned char *)(result + 538) = v32;
  if (v32) {
    *(unsigned char *)(result + 539) = a2[539];
  }
  int v33 = a2[540];
  *(unsigned char *)(result + 540) = v33;
  if (v33) {
    *(unsigned char *)(result + 541) = a2[541];
  }
  long long v34 = *((_OWORD *)a2 + 34);
  *(void *)(result + 560) = *((void *)a2 + 70);
  *(_OWORD *)(result + 544) = v34;
  int v35 = a2[568];
  *(unsigned char *)(result + 568) = v35;
  if (v35) {
    *(unsigned char *)(result + 569) = a2[569];
  }
  int v36 = a2[570];
  *(unsigned char *)(result + 570) = v36;
  if (v36) {
    *(_WORD *)(result + 572) = *((_WORD *)a2 + 286);
  }
  int v37 = a2[574];
  *(unsigned char *)(result + 574) = v37;
  if (v37) {
    *(unsigned char *)(result + 575) = a2[575];
  }
  int v38 = a2[576];
  *(unsigned char *)(result + 576) = v38;
  if (v38) {
    *(unsigned char *)(result + 577) = a2[577];
  }
  *(void *)(result + 584) = *((void *)a2 + 73);
  int v39 = a2[592];
  *(unsigned char *)(result + 592) = v39;
  if (v39) {
    *(unsigned char *)(result + 593) = a2[593];
  }
  int v40 = a2[594];
  *(unsigned char *)(result + 594) = v40;
  if (v40) {
    *(unsigned char *)(result + 595) = a2[595];
  }
  int v41 = a2[596];
  *(unsigned char *)(result + 596) = v41;
  if (v41) {
    *(unsigned char *)(result + 597) = a2[597];
  }
  int v42 = a2[600];
  *(unsigned char *)(result + 600) = v42;
  if (v42) {
    *(void *)(result + 608) = *((void *)a2 + 76);
  }
  int v43 = a2[616];
  *(unsigned char *)(result + 616) = v43;
  if (v43) {
    *(void *)(result + 624) = *((void *)a2 + 78);
  }
  int v44 = a2[632];
  *(unsigned char *)(result + 632) = v44;
  if (v44) {
    *(_OWORD *)(result + 640) = *((_OWORD *)a2 + 40);
  }
  int v45 = a2[656];
  *(unsigned char *)(result + 656) = v45;
  if (v45) {
    *(unsigned char *)(result + 657) = a2[657];
  }
  int v46 = a2[660];
  *(unsigned char *)(result + 660) = v46;
  if (v46) {
    *(_DWORD *)(result + 664) = *((_DWORD *)a2 + 166);
  }
  *(_WORD *)(result + 668) = *((_WORD *)a2 + 334);
  return result;
}

uint64_t sub_244BCE8A4(uint64_t a1)
{
  *(void *)a1 = &unk_26F952718;

  objc_destroyWeak((id *)(a1 + 80));
  sub_244CED784(a1 + 16, 16);
  return a1;
}

void sub_244BCE9E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BCEA34(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BCEA8C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BCED08(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BCED98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(a1 + 4);
  if (v3 <= 256)
  {
    switch(v3)
    {
      case 3:
        int v4 = 0;
        *(_DWORD *)a3 = 182;
        *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/zap-generated/MTREventTLVValueDecoder.mm";
        int v5 = 70;
        goto LABEL_155;
      case 4:
        int v4 = 0;
        *(_DWORD *)a3 = 182;
        *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/zap-generated/MTREventTLVValueDecoder.mm";
        int v5 = 82;
        goto LABEL_155;
      case 5:
      case 7:
      case 9:
      case 10:
      case 11:
      case 12:
      case 13:
      case 14:
      case 15:
      case 16:
      case 17:
      case 18:
      case 19:
      case 20:
      case 21:
      case 22:
      case 23:
      case 24:
      case 25:
      case 26:
      case 27:
      case 32:
      case 33:
      case 34:
      case 35:
      case 36:
      case 38:
      case 39:
      case 58:
      case 61:
      case 66:
      case 67:
      case 68:
      case 75:
      case 76:
      case 77:
      case 78:
      case 79:
      case 88:
      case 90:
      case 99:
      case 100:
      case 101:
      case 102:
      case 103:
      case 104:
      case 105:
      case 106:
      case 107:
      case 108:
      case 109:
      case 110:
      case 111:
      case 112:
      case 115:
      case 116:
      case 117:
      case 118:
      case 119:
      case 120:
      case 121:
      case 122:
      case 123:
      case 124:
      case 125:
      case 126:
      case 127:
      case 130:
      case 131:
      case 132:
      case 133:
      case 134:
      case 135:
      case 136:
      case 137:
      case 138:
      case 139:
      case 140:
      case 141:
      case 142:
      case 143:
      case 146:
      case 147:
      case 149:
      case 154:
        goto LABEL_47;
      case 6:
        int v4 = 0;
        *(_DWORD *)a3 = 182;
        *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/zap-generated/MTREventTLVValueDecoder.mm";
        int v5 = 94;
        goto LABEL_155;
      case 8:
        int v4 = 0;
        *(_DWORD *)a3 = 182;
        *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/zap-generated/MTREventTLVValueDecoder.mm";
        int v5 = 106;
        goto LABEL_155;
      case 28:
        int v4 = 0;
        *(_DWORD *)a3 = 182;
        *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/zap-generated/MTREventTLVValueDecoder.mm";
        int v5 = 118;
        goto LABEL_155;
      case 29:
        int v4 = 0;
        *(_DWORD *)a3 = 182;
        *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/zap-generated/MTREventTLVValueDecoder.mm";
        int v5 = 130;
        goto LABEL_155;
      case 30:
        int v4 = 0;
        *(_DWORD *)a3 = 182;
        *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/zap-generated/MTREventTLVValueDecoder.mm";
        int v5 = 142;
        goto LABEL_155;
      case 31:
        int v4 = sub_244BD002C(*(_DWORD *)(a1 + 8), a2, a3);
        goto LABEL_156;
      case 37:
        int v4 = sub_244BD0948(*(_DWORD *)(a1 + 8), a2, a3);
        goto LABEL_156;
      case 40:
        int v4 = sub_244BD0BAC(*(_DWORD *)(a1 + 8), a2, a3);
        goto LABEL_156;
      case 41:
        int v4 = 0;
        *(_DWORD *)a3 = 182;
        *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/zap-generated/MTREventTLVValueDecoder.mm";
        int v5 = 519;
        goto LABEL_155;
      case 42:
        int v4 = sub_244BD0DE4(*(_DWORD *)(a1 + 8), a2, a3);
        goto LABEL_156;
      case 43:
        int v4 = 0;
        *(_DWORD *)a3 = 182;
        *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/zap-generated/MTREventTLVValueDecoder.mm";
        int v5 = 641;
        goto LABEL_155;
      case 44:
        int v4 = 0;
        *(_DWORD *)a3 = 182;
        *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/zap-generated/MTREventTLVValueDecoder.mm";
        int v5 = 653;
        goto LABEL_155;
      case 45:
        int v4 = 0;
        *(_DWORD *)a3 = 182;
        *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/zap-generated/MTREventTLVValueDecoder.mm";
        int v5 = 665;
        goto LABEL_155;
      case 46:
        int v4 = 0;
        *(_DWORD *)a3 = 182;
        *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/zap-generated/MTREventTLVValueDecoder.mm";
        int v5 = 677;
        goto LABEL_155;
      case 47:
        int v4 = sub_244BD115C(*(_DWORD *)(a1 + 8), a2, a3);
        goto LABEL_156;
      case 48:
        int v4 = 0;
        *(_DWORD *)a3 = 182;
        *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/zap-generated/MTREventTLVValueDecoder.mm";
        int v5 = 857;
        goto LABEL_155;
      case 49:
        int v4 = 0;
        *(_DWORD *)a3 = 182;
        *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/zap-generated/MTREventTLVValueDecoder.mm";
        int v5 = 869;
        goto LABEL_155;
      case 50:
        int v4 = 0;
        *(_DWORD *)a3 = 182;
        *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/zap-generated/MTREventTLVValueDecoder.mm";
        int v5 = 881;
        goto LABEL_155;
      case 51:
        int v4 = sub_244BD17A0(*(_DWORD *)(a1 + 8), a2, a3);
        goto LABEL_156;
      case 52:
        int v4 = sub_244BD1E8C(*(_DWORD *)(a1 + 8), a2, a3);
        goto LABEL_156;
      case 53:
        int v4 = sub_244BD205C(*(_DWORD *)(a1 + 8), a2, a3);
        goto LABEL_156;
      case 54:
        int v4 = sub_244BD238C(*(_DWORD *)(a1 + 8), a2, a3);
        goto LABEL_156;
      case 55:
        int v4 = 0;
        *(_DWORD *)a3 = 182;
        *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/zap-generated/MTREventTLVValueDecoder.mm";
        int v5 = 1279;
        goto LABEL_155;
      case 56:
        int v4 = sub_244BD2598(*(_DWORD *)(a1 + 8), a2, a3);
        goto LABEL_156;
      case 57:
        int v4 = sub_244BD2878(*(_DWORD *)(a1 + 8), a2, a3);
        goto LABEL_156;
      case 59:
        int v4 = sub_244BD2AE8(*(_DWORD *)(a1 + 8), a2, a3);
        goto LABEL_156;
      case 60:
        int v4 = 0;
        *(_DWORD *)a3 = 182;
        *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/zap-generated/MTREventTLVValueDecoder.mm";
        int v5 = 1610;
        goto LABEL_155;
      case 62:
        int v4 = 0;
        *(_DWORD *)a3 = 182;
        *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/zap-generated/MTREventTLVValueDecoder.mm";
        int v5 = 1622;
        goto LABEL_155;
      case 63:
        int v4 = 0;
        *(_DWORD *)a3 = 182;
        *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/zap-generated/MTREventTLVValueDecoder.mm";
        int v5 = 1634;
        goto LABEL_155;
      case 64:
        int v4 = 0;
        *(_DWORD *)a3 = 182;
        *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/zap-generated/MTREventTLVValueDecoder.mm";
        int v5 = 1646;
        goto LABEL_155;
      case 65:
        int v4 = 0;
        *(_DWORD *)a3 = 182;
        *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/zap-generated/MTREventTLVValueDecoder.mm";
        int v5 = 1658;
        goto LABEL_155;
      case 69:
        int v4 = sub_244BD2F04(*(_DWORD *)(a1 + 8), a2, a3);
        goto LABEL_156;
      case 70:
        int v4 = 0;
        *(_DWORD *)a3 = 182;
        *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/zap-generated/MTREventTLVValueDecoder.mm";
        int v5 = 1699;
        goto LABEL_155;
      case 71:
        int v4 = 0;
        *(_DWORD *)a3 = 182;
        *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/zap-generated/MTREventTLVValueDecoder.mm";
        int v5 = 1711;
        goto LABEL_155;
      case 72:
        int v4 = sub_244BD2FF4(*(_DWORD *)(a1 + 8), a2, a3);
        goto LABEL_156;
      case 73:
        int v4 = 0;
        *(_DWORD *)a3 = 182;
        *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/zap-generated/MTREventTLVValueDecoder.mm";
        int v5 = 1816;
        goto LABEL_155;
      case 74:
        int v4 = 0;
        *(_DWORD *)a3 = 182;
        *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/zap-generated/MTREventTLVValueDecoder.mm";
        int v5 = 1828;
        goto LABEL_155;
      case 80:
        int v4 = 0;
        *(_DWORD *)a3 = 182;
        *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/zap-generated/MTREventTLVValueDecoder.mm";
        int v5 = 1840;
        goto LABEL_155;
      case 81:
        int v4 = 0;
        *(_DWORD *)a3 = 182;
        *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/zap-generated/MTREventTLVValueDecoder.mm";
        int v5 = 1852;
        goto LABEL_155;
      case 82:
        int v4 = 0;
        *(_DWORD *)a3 = 182;
        *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/zap-generated/MTREventTLVValueDecoder.mm";
        int v5 = 1864;
        goto LABEL_155;
      case 83:
        int v4 = 0;
        *(_DWORD *)a3 = 182;
        *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/zap-generated/MTREventTLVValueDecoder.mm";
        int v5 = 1876;
        goto LABEL_155;
      case 84:
        int v4 = 0;
        *(_DWORD *)a3 = 182;
        *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/zap-generated/MTREventTLVValueDecoder.mm";
        int v5 = 1888;
        goto LABEL_155;
      case 85:
        int v4 = 0;
        *(_DWORD *)a3 = 182;
        *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/zap-generated/MTREventTLVValueDecoder.mm";
        int v5 = 1900;
        goto LABEL_155;
      case 86:
        int v4 = 0;
        *(_DWORD *)a3 = 182;
        *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/zap-generated/MTREventTLVValueDecoder.mm";
        int v5 = 1912;
        goto LABEL_155;
      case 87:
        int v4 = sub_244BD33C8(*(_DWORD *)(a1 + 8), a2, a3);
        goto LABEL_156;
      case 89:
        int v4 = 0;
        *(_DWORD *)a3 = 182;
        *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/zap-generated/MTREventTLVValueDecoder.mm";
        int v5 = 1968;
        goto LABEL_155;
      case 91:
        int v4 = 0;
        *(_DWORD *)a3 = 182;
        *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/zap-generated/MTREventTLVValueDecoder.mm";
        int v5 = 1980;
        goto LABEL_155;
      case 92:
        int v4 = sub_244BD3544(*(_DWORD *)(a1 + 8), a2, a3);
        goto LABEL_156;
      case 93:
        int v4 = sub_244BD3960(*(_DWORD *)(a1 + 8), a2, a3);
        goto LABEL_156;
      case 94:
        int v4 = 0;
        *(_DWORD *)a3 = 182;
        *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/zap-generated/MTREventTLVValueDecoder.mm";
        int v5 = 2199;
        goto LABEL_155;
      case 95:
        int v4 = 0;
        *(_DWORD *)a3 = 182;
        *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/zap-generated/MTREventTLVValueDecoder.mm";
        int v5 = 2211;
        goto LABEL_155;
      case 96:
        int v4 = sub_244BD3ADC(*(_DWORD *)(a1 + 8), a2, a3);
        goto LABEL_156;
      case 97:
        int v4 = sub_244BD3EB0(*(_DWORD *)(a1 + 8), a2, a3);
        goto LABEL_156;
      case 98:
        int v4 = 0;
        *(_DWORD *)a3 = 182;
        *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/zap-generated/MTREventTLVValueDecoder.mm";
        int v5 = 2409;
        goto LABEL_155;
      case 113:
        int v4 = 0;
        *(_DWORD *)a3 = 182;
        *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/zap-generated/MTREventTLVValueDecoder.mm";
        int v5 = 2421;
        goto LABEL_155;
      case 114:
        int v4 = 0;
        *(_DWORD *)a3 = 182;
        *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/zap-generated/MTREventTLVValueDecoder.mm";
        int v5 = 2433;
        goto LABEL_155;
      case 128:
        int v4 = sub_244BD4284(*(_DWORD *)(a1 + 8), a2, a3);
        goto LABEL_156;
      case 129:
        int v4 = sub_244BD4454(*(_DWORD *)(a1 + 8), a2, a3);
        goto LABEL_156;
      case 144:
        int v4 = sub_244BD4624(*(_DWORD *)(a1 + 8), a2, a3);
        goto LABEL_156;
      case 145:
        int v4 = sub_244BD4B04(*(_DWORD *)(a1 + 8), a2, a3);
        goto LABEL_156;
      case 148:
        int v4 = sub_244BD53BC(*(_DWORD *)(a1 + 8), a2, a3);
        goto LABEL_156;
      case 150:
        int v4 = sub_244BD56B4(*(_DWORD *)(a1 + 8), a2, a3);
        goto LABEL_156;
      case 151:
        int v4 = sub_244BD5DD8(*(_DWORD *)(a1 + 8), a2, a3);
        goto LABEL_156;
      case 152:
        int v4 = sub_244BD6158(*(_DWORD *)(a1 + 8), a2, a3);
        goto LABEL_156;
      case 153:
        int v4 = sub_244BD63C8(*(_DWORD *)(a1 + 8), a2, a3);
        goto LABEL_156;
      case 155:
        int v4 = 0;
        *(_DWORD *)a3 = 182;
        *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/zap-generated/MTREventTLVValueDecoder.mm";
        int v5 = 3403;
        goto LABEL_155;
      case 156:
        int v4 = 0;
        *(_DWORD *)a3 = 182;
        *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/zap-generated/MTREventTLVValueDecoder.mm";
        int v5 = 3415;
        goto LABEL_155;
      case 157:
        int v4 = 0;
        *(_DWORD *)a3 = 182;
        *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/zap-generated/MTREventTLVValueDecoder.mm";
        int v5 = 3427;
        goto LABEL_155;
      case 158:
        int v4 = 0;
        *(_DWORD *)a3 = 182;
        *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/zap-generated/MTREventTLVValueDecoder.mm";
        int v5 = 3439;
        goto LABEL_155;
      case 159:
        int v4 = 0;
        *(_DWORD *)a3 = 182;
        *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/zap-generated/MTREventTLVValueDecoder.mm";
        int v5 = 3451;
        goto LABEL_155;
      default:
        if (v3 == -918523)
        {
          int v4 = sub_244BD96B4(*(_DWORD *)(a1 + 8), a2, a3);
        }
        else
        {
          if (v3 != -918496) {
            goto LABEL_47;
          }
          int v4 = sub_244BD9F44(*(_DWORD *)(a1 + 8), a2, a3);
        }
        break;
    }
    goto LABEL_156;
  }
  if (v3 <= 1104)
  {
    if (v3 <= 768)
    {
      if (v3 > 511)
      {
        switch(v3)
        {
          case 512:
            int v4 = sub_244BD7A8C(*(_DWORD *)(a1 + 8), a2, a3);
            goto LABEL_156;
          case 513:
            int v4 = 0;
            *(_DWORD *)a3 = 182;
            *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framewo"
                                  "rk/CHIP/zap-generated/MTREventTLVValueDecoder.mm";
            int v5 = 4148;
            goto LABEL_155;
          case 514:
            int v4 = 0;
            *(_DWORD *)a3 = 182;
            *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framewo"
                                  "rk/CHIP/zap-generated/MTREventTLVValueDecoder.mm";
            int v5 = 4160;
            goto LABEL_155;
          case 515:
            goto LABEL_47;
          case 516:
            int v4 = 0;
            *(_DWORD *)a3 = 182;
            *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framewo"
                                  "rk/CHIP/zap-generated/MTREventTLVValueDecoder.mm";
            int v5 = 4172;
            goto LABEL_155;
          default:
            if (v3 != 768) {
              goto LABEL_47;
            }
            int v4 = 0;
            *(_DWORD *)a3 = 182;
            *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framewo"
                                  "rk/CHIP/zap-generated/MTREventTLVValueDecoder.mm";
            int v5 = 4184;
            goto LABEL_155;
        }
      }
      switch(v3)
      {
        case 257:
          int v4 = sub_244BD6A80(*(_DWORD *)(a1 + 8), a2, a3);
          goto LABEL_156;
        case 258:
          int v4 = 0;
          *(_DWORD *)a3 = 182;
          *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework"
                                "/CHIP/zap-generated/MTREventTLVValueDecoder.mm";
          int v5 = 3925;
          goto LABEL_155;
        case 336:
          int v4 = 0;
          *(_DWORD *)a3 = 182;
          *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework"
                                "/CHIP/zap-generated/MTREventTLVValueDecoder.mm";
          int v5 = 3937;
LABEL_155:
          *(_DWORD *)(a3 + 16) = v5;
          goto LABEL_156;
      }
LABEL_47:
      int v4 = 0;
      *(_DWORD *)a3 = 182;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTREventTLVValueDecoder.mm";
      int v5 = 5778;
      goto LABEL_155;
    }
    switch(v3)
    {
      case 1024:
        int v4 = 0;
        *(_DWORD *)a3 = 182;
        *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/zap-generated/MTREventTLVValueDecoder.mm";
        int v5 = 4208;
        goto LABEL_155;
      case 1025:
      case 1031:
      case 1032:
      case 1033:
      case 1034:
      case 1035:
      case 1038:
      case 1039:
      case 1040:
      case 1041:
      case 1042:
      case 1044:
        goto LABEL_47;
      case 1026:
        int v4 = 0;
        *(_DWORD *)a3 = 182;
        *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/zap-generated/MTREventTLVValueDecoder.mm";
        int v5 = 4220;
        goto LABEL_155;
      case 1027:
        int v4 = 0;
        *(_DWORD *)a3 = 182;
        *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/zap-generated/MTREventTLVValueDecoder.mm";
        int v5 = 4232;
        goto LABEL_155;
      case 1028:
        int v4 = 0;
        *(_DWORD *)a3 = 182;
        *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/zap-generated/MTREventTLVValueDecoder.mm";
        int v5 = 4244;
        goto LABEL_155;
      case 1029:
        int v4 = 0;
        *(_DWORD *)a3 = 182;
        *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/zap-generated/MTREventTLVValueDecoder.mm";
        int v5 = 4256;
        goto LABEL_155;
      case 1030:
        int v4 = sub_244BD7E90(*(_DWORD *)(a1 + 8), a2, a3);
        break;
      case 1036:
        int v4 = 0;
        *(_DWORD *)a3 = 182;
        *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/zap-generated/MTREventTLVValueDecoder.mm";
        int v5 = 4297;
        goto LABEL_155;
      case 1037:
        int v4 = 0;
        *(_DWORD *)a3 = 182;
        *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/zap-generated/MTREventTLVValueDecoder.mm";
        int v5 = 4309;
        goto LABEL_155;
      case 1043:
        int v4 = 0;
        *(_DWORD *)a3 = 182;
        *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/zap-generated/MTREventTLVValueDecoder.mm";
        int v5 = 4321;
        goto LABEL_155;
      case 1045:
        int v4 = 0;
        *(_DWORD *)a3 = 182;
        *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/zap-generated/MTREventTLVValueDecoder.mm";
        int v5 = 4333;
        goto LABEL_155;
      default:
        switch(v3)
        {
          case 1066:
            int v4 = 0;
            *(_DWORD *)a3 = 182;
            *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framewo"
                                  "rk/CHIP/zap-generated/MTREventTLVValueDecoder.mm";
            int v5 = 4345;
            break;
          case 1067:
            int v4 = 0;
            *(_DWORD *)a3 = 182;
            *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framewo"
                                  "rk/CHIP/zap-generated/MTREventTLVValueDecoder.mm";
            int v5 = 4357;
            break;
          case 1068:
            int v4 = 0;
            *(_DWORD *)a3 = 182;
            *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framewo"
                                  "rk/CHIP/zap-generated/MTREventTLVValueDecoder.mm";
            int v5 = 4369;
            break;
          case 1069:
            int v4 = 0;
            *(_DWORD *)a3 = 182;
            *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framewo"
                                  "rk/CHIP/zap-generated/MTREventTLVValueDecoder.mm";
            int v5 = 4381;
            break;
          case 1070:
            int v4 = 0;
            *(_DWORD *)a3 = 182;
            *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framewo"
                                  "rk/CHIP/zap-generated/MTREventTLVValueDecoder.mm";
            int v5 = 4393;
            break;
          case 1071:
            int v4 = 0;
            *(_DWORD *)a3 = 182;
            *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framewo"
                                  "rk/CHIP/zap-generated/MTREventTLVValueDecoder.mm";
            int v5 = 4405;
            break;
          default:
            if (v3 != 769) {
              goto LABEL_47;
            }
            int v4 = 0;
            *(_DWORD *)a3 = 182;
            *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framewo"
                                  "rk/CHIP/zap-generated/MTREventTLVValueDecoder.mm";
            int v5 = 4196;
            break;
        }
        goto LABEL_155;
    }
  }
  else
  {
    if (v3 <= 1359)
    {
      if (v3 > 1282)
      {
        switch(v3)
        {
          case 1283:
            int v4 = 0;
            *(_DWORD *)a3 = 182;
            *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framewo"
                                  "rk/CHIP/zap-generated/MTREventTLVValueDecoder.mm";
            int v5 = 4453;
            goto LABEL_155;
          case 1284:
            int v4 = 0;
            *(_DWORD *)a3 = 182;
            *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framewo"
                                  "rk/CHIP/zap-generated/MTREventTLVValueDecoder.mm";
            int v5 = 4465;
            goto LABEL_155;
          case 1285:
            int v4 = sub_244BD7F80(*(_DWORD *)(a1 + 8), a2, a3);
            break;
          case 1286:
            int v4 = sub_244BD8278(*(_DWORD *)(a1 + 8), a2, a3);
            break;
          case 1287:
            int v4 = 0;
            *(_DWORD *)a3 = 182;
            *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framewo"
                                  "rk/CHIP/zap-generated/MTREventTLVValueDecoder.mm";
            int v5 = 4617;
            goto LABEL_155;
          case 1288:
            int v4 = 0;
            *(_DWORD *)a3 = 182;
            *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framewo"
                                  "rk/CHIP/zap-generated/MTREventTLVValueDecoder.mm";
            int v5 = 4629;
            goto LABEL_155;
          case 1289:
            int v4 = 0;
            *(_DWORD *)a3 = 182;
            *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framewo"
                                  "rk/CHIP/zap-generated/MTREventTLVValueDecoder.mm";
            int v5 = 4641;
            goto LABEL_155;
          case 1290:
            int v4 = 0;
            *(_DWORD *)a3 = 182;
            *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framewo"
                                  "rk/CHIP/zap-generated/MTREventTLVValueDecoder.mm";
            int v5 = 4653;
            goto LABEL_155;
          case 1291:
            int v4 = 0;
            *(_DWORD *)a3 = 182;
            *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framewo"
                                  "rk/CHIP/zap-generated/MTREventTLVValueDecoder.mm";
            int v5 = 4665;
            goto LABEL_155;
          case 1292:
            int v4 = 0;
            *(_DWORD *)a3 = 182;
            *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framewo"
                                  "rk/CHIP/zap-generated/MTREventTLVValueDecoder.mm";
            int v5 = 4677;
            goto LABEL_155;
          case 1293:
            int v4 = 0;
            *(_DWORD *)a3 = 182;
            *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framewo"
                                  "rk/CHIP/zap-generated/MTREventTLVValueDecoder.mm";
            int v5 = 4689;
            goto LABEL_155;
          case 1294:
            int v4 = sub_244BD8590(*(_DWORD *)(a1 + 8), a2, a3);
            break;
          case 1295:
            int v4 = sub_244BD869C(*(_DWORD *)(a1 + 8), a2, a3);
            break;
          case 1296:
            int v4 = 0;
            *(_DWORD *)a3 = 182;
            *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framewo"
                                  "rk/CHIP/zap-generated/MTREventTLVValueDecoder.mm";
            int v5 = 4757;
            goto LABEL_155;
          default:
            goto LABEL_47;
        }
        goto LABEL_156;
      }
      switch(v3)
      {
        case 1105:
          int v4 = 0;
          *(_DWORD *)a3 = 182;
          *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework"
                                "/CHIP/zap-generated/MTREventTLVValueDecoder.mm";
          int v5 = 4417;
          goto LABEL_155;
        case 1106:
          int v4 = 0;
          *(_DWORD *)a3 = 182;
          *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework"
                                "/CHIP/zap-generated/MTREventTLVValueDecoder.mm";
          int v5 = 4429;
          goto LABEL_155;
        case 1107:
          int v4 = 0;
          *(_DWORD *)a3 = 182;
          *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework"
                                "/CHIP/zap-generated/MTREventTLVValueDecoder.mm";
          int v5 = 4441;
          goto LABEL_155;
      }
      goto LABEL_47;
    }
    if (v3 > 1871)
    {
      if (v3 > 323615743)
      {
        if (v3 == 323615747)
        {
          int v4 = 0;
          *(_DWORD *)a3 = 182;
          *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework"
                                "/CHIP/zap-generated/MTREventTLVValueDecoder.mm";
          int v5 = 58;
          goto LABEL_155;
        }
        if (v3 == 323615744)
        {
          int v4 = 0;
          *(_DWORD *)a3 = 182;
          *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework"
                                "/CHIP/zap-generated/MTREventTLVValueDecoder.mm";
          int v5 = 46;
          goto LABEL_155;
        }
      }
      else
      {
        if (v3 == 1872)
        {
          int v4 = 0;
          *(_DWORD *)a3 = 182;
          *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework"
                                "/CHIP/zap-generated/MTREventTLVValueDecoder.mm";
          int v5 = 5160;
          goto LABEL_155;
        }
        if (v3 == 1873)
        {
          int v4 = sub_244BD9534(*(_DWORD *)(a1 + 8), a2, a3);
          goto LABEL_156;
        }
      }
      goto LABEL_47;
    }
    switch(v3)
    {
      case 1360:
        int v4 = sub_244BD8734(*(_DWORD *)(a1 + 8), a2, a3);
        break;
      case 1361:
        int v4 = sub_244BD8A84(*(_DWORD *)(a1 + 8), a2, a3);
        break;
      case 1363:
        int v4 = 0;
        *(_DWORD *)a3 = 182;
        *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/zap-generated/MTREventTLVValueDecoder.mm";
        int v5 = 5124;
        goto LABEL_155;
      case 1364:
        int v4 = 0;
        *(_DWORD *)a3 = 182;
        *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/zap-generated/MTREventTLVValueDecoder.mm";
        int v5 = 5136;
        goto LABEL_155;
      case 1366:
        int v4 = 0;
        *(_DWORD *)a3 = 182;
        *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/zap-generated/MTREventTLVValueDecoder.mm";
        int v5 = 5148;
        goto LABEL_155;
      default:
        goto LABEL_47;
    }
  }
LABEL_156:

  return v4;
}

id sub_244BD002C(int a1, uint64_t a2, uint64_t a3)
{
  if (a1 == 2)
  {
    uint64_t v98 = 0;
    v99[0] = 0;
    LOBYTE(v104) = 0;
    unsigned __int8 v107 = 0;
    sub_2447F65AC((uint64_t)&v98, a2, (uint64_t)&v93);
    *(_OWORD *)a3 = v93;
    *(void *)(a3 + 16) = v94;
    if (*(_DWORD *)a3) {
      goto LABEL_11;
    }
    int v5 = objc_opt_new();
    int v13 = objc_msgSend_numberWithUnsignedLongLong_(NSNumber, v12, v98);
    objc_msgSend_setToken_(v5, v14, (uint64_t)v13);

    if (v99[0])
    {
      int v16 = (uint64_t *)sub_24479DC08(v99);
      uint64_t v17 = *v16;
      uint64_t v18 = v16[1];
      id v19 = [NSString alloc];
      id v9 = (id)objc_msgSend_initWithBytes_length_encoding_(v19, v20, v17, v18, 4);
      if (!v9)
      {
        int v21 = &xmmword_26519AEC0;
LABEL_47:
        *(_OWORD *)a3 = *v21;
        *(void *)(a3 + 16) = *((void *)v21 + 2);
LABEL_80:

        goto LABEL_81;
      }
    }
    else
    {
      id v9 = 0;
    }
    objc_msgSend_setInstruction_(v5, v15, (uint64_t)v9);

    if ((_BYTE)v104)
    {
      long long v57 = (uint64_t *)sub_24479DC08(&v104);
      uint64_t v58 = *v57;
      uint64_t v59 = v57[1];
      id v60 = [NSString alloc];
      id v9 = (id)objc_msgSend_initWithBytes_length_encoding_(v60, v61, v58, v59, 4);
      if (!v9)
      {
        int v21 = &xmmword_26519AED8;
        goto LABEL_47;
      }
    }
    else
    {
      id v9 = 0;
    }
    objc_msgSend_setArlRequestFlowUrl_(v5, v56, (uint64_t)v9);

    long long v66 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v65, v107);
    objc_msgSend_setFabricIndex_(v5, v67, (uint64_t)v66);
LABEL_79:

    id v9 = v5;
    goto LABEL_80;
  }
  if (a1 != 1)
  {
    if (a1)
    {
      id v9 = 0;
      *(_DWORD *)a3 = 182;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTREventTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 362;
      goto LABEL_81;
    }
    LOBYTE(v98) = 0;
    v99[0] = 0;
    LOBYTE(v100) = 0;
    char v101 = 0;
    unsigned __int8 v102 = 0;
    LOBYTE(v103) = 0;
    char v116 = 0;
    unsigned __int8 v117 = 0;
    sub_2447F5CB0((uint64_t)&v98, a2, (uint64_t)&v93);
    *(_OWORD *)a3 = v93;
    *(void *)(a3 + 16) = v94;
    if (!*(_DWORD *)a3)
    {
      int v5 = objc_opt_new();
      if (v99[0])
      {
        int v6 = objc_msgSend_numberWithUnsignedLongLong_(NSNumber, v4, v98);
        objc_msgSend_setAdminNodeID_(v5, v7, (uint64_t)v6);
      }
      else
      {
        int v6 = 0;
        objc_msgSend_setAdminNodeID_(v5, v4, 0);
      }

      if (v101)
      {
        int v37 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v36, v100);
        objc_msgSend_setAdminPasscodeID_(v5, v38, (uint64_t)v37);
      }
      else
      {
        int v37 = 0;
        objc_msgSend_setAdminPasscodeID_(v5, v36, 0);
      }

      int v40 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v39, v102);
      objc_msgSend_setChangeType_(v5, v41, (uint64_t)v40);

      if (!v116)
      {
        int v44 = 0;
        objc_msgSend_setLatestValue_(v5, v42, 0);
LABEL_78:

        long long v66 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v85, v117);
        objc_msgSend_setFabricIndex_(v5, v86, (uint64_t)v66);
        goto LABEL_79;
      }
      int v44 = objc_opt_new();
      if (!v116) {
        goto LABEL_87;
      }
      int v45 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v43, v103);
      objc_msgSend_setPrivilege_(v44, v46, (uint64_t)v45);

      if (!v116
        || (objc_msgSend_numberWithUnsignedChar_(NSNumber, v47, BYTE1(v103)),
            int v48 = objc_claimAutoreleasedReturnValue(),
            objc_msgSend_setAuthMode_(v44, v49, (uint64_t)v48),
            v48,
            !v116))
      {
LABEL_87:
        sub_24479484C();
      }
      if (v110)
      {
        char v51 = objc_opt_new();
        if (!v116 || !v110) {
          sub_24479484C();
        }
        unsigned __int8 v118 = v108;
        if (v108) {
          char v119 = v109;
        }
        sub_2446D1930((uint64_t)&v93, (uint64_t)&v104, &v118);
        while (sub_244BC02A8((uint64_t)&v93))
        {
          uint64_t v53 = objc_msgSend_numberWithUnsignedLongLong_(NSNumber, v52, v93);
          objc_msgSend_addObject_(v51, v54, (uint64_t)v53);
        }
        if (DWORD2(v93) && DWORD2(v93) != 33)
        {
          uint64_t v88 = v94;
          int v89 = HIDWORD(v93);
          *(_DWORD *)a3 = DWORD2(v93);
          *(_DWORD *)(a3 + 4) = v89;
          *(void *)(a3 + 8) = v88;
          uint64_t v90 = v95;
          goto LABEL_86;
        }
        objc_msgSend_setSubjects_(v44, v52, (uint64_t)v51);
      }
      else
      {
        objc_msgSend_setSubjects_(v44, v50, 0);
      }
      if (!v116) {
        goto LABEL_87;
      }
      if (!v114)
      {
        objc_msgSend_setTargets_(v44, v55, 0);
LABEL_76:
        if (v116)
        {
          uint64_t v82 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v81, v115);
          objc_msgSend_setFabricIndex_(v44, v83, (uint64_t)v82);

          objc_msgSend_setLatestValue_(v5, v84, (uint64_t)v44);
          goto LABEL_78;
        }
        goto LABEL_87;
      }
      char v51 = objc_opt_new();
      if (!v116 || !v114) {
        sub_24479484C();
      }
      unsigned __int8 v118 = v112;
      if (v112) {
        char v119 = v113;
      }
      sub_244BC0350((uint64_t)&v93, (uint64_t)&v111, &v118);
      while (sub_244BC03D8((uint64_t)&v93))
      {
        uint64_t v69 = objc_opt_new();
        uint64_t v71 = v69;
        if (BYTE4(v93))
        {
          uint64_t v72 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v70, v93);
          objc_msgSend_setCluster_(v71, v73, (uint64_t)v72);
        }
        else
        {
          objc_msgSend_setCluster_(v69, v70, 0);
        }
        if (BYTE10(v93))
        {
          int v75 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v74, WORD4(v93));
          objc_msgSend_setEndpoint_(v71, v76, (uint64_t)v75);
        }
        else
        {
          objc_msgSend_setEndpoint_(v71, v74, 0);
        }
        if ((_BYTE)v94)
        {
          uint64_t v78 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v77, HIDWORD(v93));
          objc_msgSend_setDeviceType_(v71, v79, (uint64_t)v78);
        }
        else
        {
          objc_msgSend_setDeviceType_(v71, v77, 0);
        }
        objc_msgSend_addObject_(v51, v80, (uint64_t)v71);
      }
      if (!v95 || v95 == 33)
      {
        objc_msgSend_setTargets_(v44, v68, (uint64_t)v51);

        goto LABEL_76;
      }
      uint64_t v91 = v96;
      int v92 = HIDWORD(v95);
      *(_DWORD *)a3 = v95;
      *(_DWORD *)(a3 + 4) = v92;
      *(void *)(a3 + 8) = v91;
      uint64_t v90 = v97;
LABEL_86:
      *(void *)(a3 + 16) = v90;

      id v9 = 0;
      goto LABEL_80;
    }
LABEL_11:
    id v9 = 0;
    goto LABEL_81;
  }
  LOBYTE(v98) = 0;
  v99[0] = 0;
  LOBYTE(v100) = 0;
  char v101 = 0;
  unsigned __int8 v102 = 0;
  LOBYTE(v103) = 0;
  char v106 = 0;
  unsigned __int8 v107 = 0;
  sub_2447F61F4((uint64_t)&v98, a2, (uint64_t)&v93);
  *(_OWORD *)a3 = v93;
  *(void *)(a3 + 16) = v94;
  if (*(_DWORD *)a3) {
    goto LABEL_11;
  }
  id v9 = (id)objc_opt_new();
  if (v99[0])
  {
    long long v10 = objc_msgSend_numberWithUnsignedLongLong_(NSNumber, v8, v98);
    objc_msgSend_setAdminNodeID_(v9, v11, (uint64_t)v10);
  }
  else
  {
    long long v10 = 0;
    objc_msgSend_setAdminNodeID_(v9, v8, 0);
  }

  if (v101)
  {
    int v23 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v22, v100);
    objc_msgSend_setAdminPasscodeID_(v9, v24, (uint64_t)v23);
  }
  else
  {
    int v23 = 0;
    objc_msgSend_setAdminPasscodeID_(v9, v22, 0);
  }

  int v26 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v25, v102);
  objc_msgSend_setChangeType_(v9, v27, (uint64_t)v26);

  if (v106)
  {
    int v30 = objc_opt_new();
    if (!v106
      || (objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v29, v103, v104),
          int v31 = objc_claimAutoreleasedReturnValue(),
          objc_msgSend_setData_(v30, v32, (uint64_t)v31),
          v31,
          !v106))
    {
      sub_24479484C();
    }
    long long v34 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v33, v105);
    objc_msgSend_setFabricIndex_(v30, v35, (uint64_t)v34);
  }
  else
  {
    int v30 = 0;
  }
  objc_msgSend_setLatestValue_(v9, v28, (uint64_t)v30);

  uint64_t v63 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v62, v107);
  objc_msgSend_setFabricIndex_(v9, v64, (uint64_t)v63);

LABEL_81:

  return v9;
}

void sub_244BD0870(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BD0948(int a1, uint64_t a2, uint64_t a3)
{
  if (a1 == 1)
  {
    v28[0] = 0;
    unsigned int v29 = 0;
    __int16 v30 = 0;
    sub_2447F83B8((uint64_t)v28, a2, (uint64_t)&v26);
    *(_OWORD *)a3 = v26;
    *(void *)(a3 + 16) = v27;
    if (!*(_DWORD *)a3)
    {
      int v4 = objc_opt_new();
      int v15 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v14, v28[0]);
      objc_msgSend_setActionID_(v4, v16, (uint64_t)v15);

      uint64_t v18 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v17, v29);
      objc_msgSend_setInvokeID_(v4, v19, (uint64_t)v18);

      int v21 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v20, v30);
      objc_msgSend_setNewState_(v4, v22, (uint64_t)v21);

      int v12 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v23, HIBYTE(v30));
      objc_msgSend_setError_(v4, v24, (uint64_t)v12);
      goto LABEL_9;
    }
LABEL_6:
    int v4 = 0;
    goto LABEL_10;
  }
  if (a1)
  {
    int v4 = 0;
    *(_DWORD *)a3 = 182;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "zap-generated/MTREventTLVValueDecoder.mm";
    *(_DWORD *)(a3 + 16) = 433;
    goto LABEL_10;
  }
  v28[0] = 0;
  unsigned int v29 = 0;
  LOBYTE(v30) = 0;
  sub_2447F8154((uint64_t)v28, a2, (uint64_t)&v26);
  *(_OWORD *)a3 = v26;
  *(void *)(a3 + 16) = v27;
  if (*(_DWORD *)a3) {
    goto LABEL_6;
  }
  int v4 = objc_opt_new();
  int v6 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v5, v28[0]);
  objc_msgSend_setActionID_(v4, v7, (uint64_t)v6);

  id v9 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v8, v29);
  objc_msgSend_setInvokeID_(v4, v10, (uint64_t)v9);

  int v12 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v11, v30);
  objc_msgSend_setNewState_(v4, v13, (uint64_t)v12);
LABEL_9:

LABEL_10:

  return v4;
}

void sub_244BD0B80(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BD0BAC(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
      unsigned int v15 = 0;
      sub_2447F8E3C(&v15, a2, (uint64_t)&v13);
      *(_OWORD *)a3 = v13;
      *(void *)(a3 + 16) = v14;
      if (*(_DWORD *)a3) {
        goto LABEL_11;
      }
      int v4 = objc_opt_new();
      int v6 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v5, v15);
      objc_msgSend_setSoftwareVersion_(v4, v7, (uint64_t)v6);
      goto LABEL_8;
    case 1:
      sub_2447F1928(a2, (uint64_t)&v13);
      *(_OWORD *)a3 = v13;
      *(void *)(a3 + 16) = v14;
      if (*(_DWORD *)a3) {
        goto LABEL_11;
      }
      int v4 = objc_opt_new();
      goto LABEL_12;
    case 2:
      LOBYTE(v15) = 0;
      sub_2447F900C(&v15, a2, (uint64_t)&v13);
      *(_OWORD *)a3 = v13;
      *(void *)(a3 + 16) = v14;
      if (*(_DWORD *)a3) {
        goto LABEL_11;
      }
      int v4 = objc_opt_new();
      int v6 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v8, v15);
      objc_msgSend_setFabricIndex_(v4, v9, (uint64_t)v6);
      goto LABEL_8;
    case 3:
      LOBYTE(v15) = 0;
      sub_2447F9178((char *)&v15, a2, (uint64_t)&v13);
      *(_OWORD *)a3 = v13;
      *(void *)(a3 + 16) = v14;
      if (*(_DWORD *)a3)
      {
LABEL_11:
        int v4 = 0;
      }
      else
      {
        int v4 = objc_opt_new();
        int v6 = objc_msgSend_numberWithBool_(NSNumber, v10, v15);
        objc_msgSend_setReachableNewValue_(v4, v11, (uint64_t)v6);
LABEL_8:
      }
LABEL_12:
      return v4;
    default:
      int v4 = 0;
      *(_DWORD *)a3 = 182;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTREventTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 507;
      goto LABEL_12;
  }
}

void sub_244BD0DB8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BD0DE4(int a1, uint64_t a2, uint64_t a3)
{
  if (a1 == 2)
  {
    LODWORD(v36) = 0;
    *((void *)&v36 + 1) = 0;
    LOWORD(v37) = 0;
    LOBYTE(v38) = 0;
    char v39 = 0;
    sub_2447FB08C((uint64_t)&v36, a2, (uint64_t)&v34);
    int v4 = 0;
    *(_OWORD *)a3 = v34;
    *(void *)(a3 + 16) = v35;
    if (*(_DWORD *)a3) {
      goto LABEL_21;
    }
    int v4 = objc_opt_new();
    uint64_t v18 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v17, v36);
    objc_msgSend_setSoftwareVersion_(v4, v19, (uint64_t)v18);

    int v21 = objc_msgSend_numberWithUnsignedLongLong_(NSNumber, v20, *((uint64_t *)&v36 + 1));
    objc_msgSend_setBytesDownloaded_(v4, v22, (uint64_t)v21);

    if (BYTE1(v37))
    {
      int v24 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v23, v37);
      objc_msgSend_setProgressPercent_(v4, v25, (uint64_t)v24);
    }
    else
    {
      int v24 = 0;
      objc_msgSend_setProgressPercent_(v4, v23, 0);
    }

    if (v39)
    {
      unsigned int v15 = objc_msgSend_numberWithLongLong_(NSNumber, v31, v38);
      objc_msgSend_setPlatformCode_(v4, v32, (uint64_t)v15);
    }
    else
    {
      unsigned int v15 = 0;
      objc_msgSend_setPlatformCode_(v4, v31, 0);
    }
    goto LABEL_20;
  }
  if (a1 != 1)
  {
    if (a1)
    {
      int v4 = 0;
      *(_DWORD *)a3 = 182;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTREventTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 629;
      goto LABEL_21;
    }
    LOWORD(v34) = 0;
    BYTE2(v34) = 0;
    BYTE4(v34) = 0;
    BYTE8(v34) = 0;
    sub_2447FAB70(&v34, a2, (uint64_t)&v36);
    *(_OWORD *)a3 = v36;
    *(void *)(a3 + 16) = v37;
    if (!*(_DWORD *)a3)
    {
      int v4 = objc_opt_new();
      int v6 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v5, v34);
      objc_msgSend_setPreviousState_(v4, v7, (uint64_t)v6);

      id v9 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v8, BYTE1(v34));
      objc_msgSend_setNewState_(v4, v10, (uint64_t)v9);

      int v12 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v11, BYTE2(v34));
      objc_msgSend_setReason_(v4, v13, (uint64_t)v12);

      if (BYTE8(v34))
      {
        unsigned int v15 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v14, DWORD1(v34));
        objc_msgSend_setTargetSoftwareVersion_(v4, v16, (uint64_t)v15);
      }
      else
      {
        unsigned int v15 = 0;
        objc_msgSend_setTargetSoftwareVersion_(v4, v14, 0);
      }
      goto LABEL_20;
    }
LABEL_11:
    int v4 = 0;
    goto LABEL_21;
  }
  LODWORD(v34) = 0;
  WORD2(v34) = 0;
  sub_2447FAE00((uint64_t)&v34, a2, (uint64_t)&v36);
  *(_OWORD *)a3 = v36;
  *(void *)(a3 + 16) = v37;
  if (*(_DWORD *)a3) {
    goto LABEL_11;
  }
  int v4 = objc_opt_new();
  uint64_t v27 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v26, v34);
  objc_msgSend_setSoftwareVersion_(v4, v28, (uint64_t)v27);

  unsigned int v15 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v29, WORD2(v34));
  objc_msgSend_setProductID_(v4, v30, (uint64_t)v15);
LABEL_20:

LABEL_21:

  return v4;
}

void sub_244BD111C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BD115C(int a1, uint64_t a2, uint64_t a3)
{
  if (a1 == 2)
  {
    sub_244CB3988((uint64_t)v40);
    unsigned __int8 v41 = 0;
    sub_244CB39B8((uint64_t)v40, 0, 0);
    sub_244CB3988((uint64_t)v43);
    unsigned __int8 v44 = 0;
    sub_244CB39B8(v11, 0, 0);
    sub_2447FC718((uint64_t)v40, a2, (uint64_t)&v37);
    *(_OWORD *)a3 = v37;
    *(void *)(a3 + 16) = v38;
    if (!*(_DWORD *)a3)
    {
      int v6 = objc_opt_new();
      int v7 = objc_opt_new();
      unsigned __int8 v46 = v41;
      if (v41) {
        char v47 = v42;
      }
      sub_2446D1930((uint64_t)&v37, (uint64_t)v40, &v46);
      while (sub_244BC0FC0((uint64_t)&v37))
      {
        long long v13 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v12, v37);
        objc_msgSend_addObject_(v7, v14, (uint64_t)v13);
      }
      int v20 = DWORD2(v37);
      if (DWORD2(v37) != 33 && DWORD2(v37) != 0) {
        goto LABEL_72;
      }
      objc_msgSend_setCurrent_(v6, v12, (uint64_t)v7);

      int v7 = objc_opt_new();
      unsigned __int8 v46 = v44;
      if (v44) {
        char v47 = v45;
      }
      sub_2446D1930((uint64_t)&v37, (uint64_t)v43, &v46);
      while (sub_244BC0FC0((uint64_t)&v37))
      {
        unsigned int v29 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v22, v37);
        objc_msgSend_addObject_(v7, v30, (uint64_t)v29);
      }
      int v20 = DWORD2(v37);
      if (DWORD2(v37) != 33 && DWORD2(v37) != 0) {
        goto LABEL_72;
      }
      goto LABEL_71;
    }
    goto LABEL_17;
  }
  if (a1 == 1)
  {
    sub_244CB3988((uint64_t)v40);
    unsigned __int8 v41 = 0;
    sub_244CB39B8((uint64_t)v40, 0, 0);
    sub_244CB3988((uint64_t)v43);
    unsigned __int8 v44 = 0;
    sub_244CB39B8(v15, 0, 0);
    sub_2447FC43C((uint64_t)v40, a2, (uint64_t)&v37);
    *(_OWORD *)a3 = v37;
    *(void *)(a3 + 16) = v38;
    if (!*(_DWORD *)a3)
    {
      int v6 = objc_opt_new();
      int v7 = objc_opt_new();
      unsigned __int8 v46 = v41;
      if (v41) {
        char v47 = v42;
      }
      sub_2446D1930((uint64_t)&v37, (uint64_t)v40, &v46);
      while (sub_244BC0F18((uint64_t)&v37))
      {
        uint64_t v18 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v17, v37);
        objc_msgSend_addObject_(v7, v19, (uint64_t)v18);
      }
      int v20 = DWORD2(v37);
      if (DWORD2(v37) != 33 && DWORD2(v37) != 0) {
        goto LABEL_72;
      }
      objc_msgSend_setCurrent_(v6, v17, (uint64_t)v7);

      int v7 = objc_opt_new();
      unsigned __int8 v46 = v44;
      if (v44) {
        char v47 = v45;
      }
      sub_2446D1930((uint64_t)&v37, (uint64_t)v43, &v46);
      while (sub_244BC0F18((uint64_t)&v37))
      {
        int v23 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v22, v37);
        objc_msgSend_addObject_(v7, v24, (uint64_t)v23);
      }
      int v20 = DWORD2(v37);
      if (DWORD2(v37) != 33 && DWORD2(v37) != 0) {
        goto LABEL_72;
      }
      goto LABEL_71;
    }
LABEL_17:
    id v16 = 0;
    goto LABEL_74;
  }
  if (a1)
  {
    id v16 = 0;
    *(_DWORD *)a3 = 182;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "zap-generated/MTREventTLVValueDecoder.mm";
    *(_DWORD *)(a3 + 16) = 845;
    goto LABEL_74;
  }
  sub_244CB3988((uint64_t)v40);
  unsigned __int8 v41 = 0;
  sub_244CB39B8((uint64_t)v40, 0, 0);
  sub_244CB3988((uint64_t)v43);
  unsigned __int8 v44 = 0;
  sub_244CB39B8(v5, 0, 0);
  sub_2447FC32C((uint64_t)v40, a2, (uint64_t)&v37);
  *(_OWORD *)a3 = v37;
  *(void *)(a3 + 16) = v38;
  if (*(_DWORD *)a3) {
    goto LABEL_17;
  }
  int v6 = objc_opt_new();
  int v7 = objc_opt_new();
  unsigned __int8 v46 = v41;
  if (v41) {
    char v47 = v42;
  }
  sub_2446D1930((uint64_t)&v37, (uint64_t)v40, &v46);
  while (sub_244BC0F18((uint64_t)&v37))
  {
    id v9 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v8, v37);
    objc_msgSend_addObject_(v7, v10, (uint64_t)v9);
  }
  int v20 = DWORD2(v37);
  if (DWORD2(v37) != 33 && DWORD2(v37) != 0) {
    goto LABEL_72;
  }
  objc_msgSend_setCurrent_(v6, v8, (uint64_t)v7);

  int v7 = objc_opt_new();
  unsigned __int8 v46 = v44;
  if (v44) {
    char v47 = v45;
  }
  sub_2446D1930((uint64_t)&v37, (uint64_t)v43, &v46);
  while (sub_244BC0F18((uint64_t)&v37))
  {
    long long v26 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v22, v37);
    objc_msgSend_addObject_(v7, v27, (uint64_t)v26);
  }
  int v20 = DWORD2(v37);
  if (DWORD2(v37) != 33 && DWORD2(v37) != 0)
  {
LABEL_72:
    uint64_t v34 = v38;
    int v35 = HIDWORD(v37);
    *(_DWORD *)a3 = v20;
    *(_DWORD *)(a3 + 4) = v35;
    *(void *)(a3 + 8) = v34;
    *(void *)(a3 + 16) = v39;

    id v16 = 0;
    goto LABEL_73;
  }
LABEL_71:
  objc_msgSend_setPrevious_(v6, v22, (uint64_t)v7);

  id v16 = v6;
LABEL_73:

LABEL_74:

  return v16;
}

void sub_244BD16E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BD17A0(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
      sub_244CB3988((uint64_t)&v43);
      unsigned __int8 v45 = 0;
      sub_244CB39B8((uint64_t)&v43, 0, 0);
      sub_244CB3988((uint64_t)v47);
      unsigned __int8 v48 = 0;
      sub_244CB39B8(v5, 0, 0);
      sub_244801704((uint64_t)&v43, a2, (uint64_t)&v40);
      *(_OWORD *)a3 = v40;
      *(void *)(a3 + 16) = v41;
      if (*(_DWORD *)a3) {
        goto LABEL_22;
      }
      int v6 = objc_opt_new();
      int v7 = objc_opt_new();
      unsigned __int8 v50 = v45;
      if (v45) {
        char v51 = v46;
      }
      sub_2446D1930((uint64_t)&v40, (uint64_t)&v43, &v50);
      while (sub_244BC0FC0((uint64_t)&v40))
      {
        id v9 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v8, v40);
        objc_msgSend_addObject_(v7, v10, (uint64_t)v9);
      }
      int v23 = DWORD2(v40);
      if (DWORD2(v40) == 33 || DWORD2(v40) == 0)
      {
        objc_msgSend_setCurrent_(v6, v8, (uint64_t)v7);

        int v7 = objc_opt_new();
        unsigned __int8 v50 = v48;
        if (v48) {
          char v51 = v49;
        }
        sub_2446D1930((uint64_t)&v40, (uint64_t)v47, &v50);
        while (sub_244BC0FC0((uint64_t)&v40))
        {
          unsigned int v29 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v25, v40);
          objc_msgSend_addObject_(v7, v30, (uint64_t)v29);
        }
        int v23 = DWORD2(v40);
        if (DWORD2(v40) == 33 || DWORD2(v40) == 0) {
          goto LABEL_71;
        }
      }
      goto LABEL_72;
    case 1:
      sub_244CB3988((uint64_t)&v43);
      unsigned __int8 v45 = 0;
      sub_244CB39B8((uint64_t)&v43, 0, 0);
      sub_244CB3988((uint64_t)v47);
      unsigned __int8 v48 = 0;
      sub_244CB39B8(v12, 0, 0);
      sub_2448019E0((uint64_t)&v43, a2, (uint64_t)&v40);
      *(_OWORD *)a3 = v40;
      *(void *)(a3 + 16) = v41;
      if (*(_DWORD *)a3) {
        goto LABEL_22;
      }
      int v6 = objc_opt_new();
      int v7 = objc_opt_new();
      unsigned __int8 v50 = v45;
      if (v45) {
        char v51 = v46;
      }
      sub_2446D1930((uint64_t)&v40, (uint64_t)&v43, &v50);
      while (sub_244BC14B8((uint64_t)&v40))
      {
        uint64_t v14 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v13, v40);
        objc_msgSend_addObject_(v7, v15, (uint64_t)v14);
      }
      int v23 = DWORD2(v40);
      if (DWORD2(v40) != 33 && DWORD2(v40) != 0) {
        goto LABEL_72;
      }
      objc_msgSend_setCurrent_(v6, v13, (uint64_t)v7);

      int v7 = objc_opt_new();
      unsigned __int8 v50 = v48;
      if (v48) {
        char v51 = v49;
      }
      sub_2446D1930((uint64_t)&v40, (uint64_t)v47, &v50);
      while (sub_244BC14B8((uint64_t)&v40))
      {
        int v32 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v25, v40);
        objc_msgSend_addObject_(v7, v33, (uint64_t)v32);
      }
      int v23 = DWORD2(v40);
      if (DWORD2(v40) != 33 && DWORD2(v40) != 0) {
        goto LABEL_72;
      }
      goto LABEL_71;
    case 2:
      sub_244CB3988((uint64_t)&v43);
      unsigned __int8 v45 = 0;
      sub_244CB39B8((uint64_t)&v43, 0, 0);
      sub_244CB3988((uint64_t)v47);
      unsigned __int8 v48 = 0;
      sub_244CB39B8(v16, 0, 0);
      sub_244801CBC((uint64_t)&v43, a2, (uint64_t)&v40);
      *(_OWORD *)a3 = v40;
      *(void *)(a3 + 16) = v41;
      if (*(_DWORD *)a3) {
        goto LABEL_22;
      }
      int v6 = objc_opt_new();
      int v7 = objc_opt_new();
      unsigned __int8 v50 = v45;
      if (v45) {
        char v51 = v46;
      }
      sub_2446D1930((uint64_t)&v40, (uint64_t)&v43, &v50);
      while (sub_2446D19A0((uint64_t)&v40))
      {
        uint64_t v18 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v17, v40);
        objc_msgSend_addObject_(v7, v19, (uint64_t)v18);
      }
      int v23 = DWORD2(v40);
      if (DWORD2(v40) != 33 && DWORD2(v40) != 0) {
        goto LABEL_72;
      }
      objc_msgSend_setCurrent_(v6, v17, (uint64_t)v7);

      int v7 = objc_opt_new();
      unsigned __int8 v50 = v48;
      if (v48) {
        char v51 = v49;
      }
      sub_2446D1930((uint64_t)&v40, (uint64_t)v47, &v50);
      while (sub_2446D19A0((uint64_t)&v40))
      {
        long long v26 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v25, v40);
        objc_msgSend_addObject_(v7, v27, (uint64_t)v26);
      }
      int v23 = DWORD2(v40);
      if (DWORD2(v40) == 33 || DWORD2(v40) == 0)
      {
LABEL_71:
        objc_msgSend_setPrevious_(v6, v25, (uint64_t)v7);

        id v11 = v6;
      }
      else
      {
LABEL_72:
        uint64_t v37 = v41;
        int v38 = HIDWORD(v40);
        *(_DWORD *)a3 = v23;
        *(_DWORD *)(a3 + 4) = v38;
        *(void *)(a3 + 8) = v37;
        *(void *)(a3 + 16) = v42;

        id v11 = 0;
      }

      break;
    case 3:
      LOBYTE(v40) = 0;
      sub_244801E88(&v40, a2, (uint64_t)&v43);
      *(_OWORD *)a3 = v43;
      *(void *)(a3 + 16) = v44;
      if (*(_DWORD *)a3)
      {
LABEL_22:
        id v11 = 0;
      }
      else
      {
        id v11 = (id)objc_opt_new();
        int v21 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v20, v40);
        objc_msgSend_setBootReason_(v11, v22, (uint64_t)v21);
      }
      break;
    default:
      id v11 = 0;
      *(_DWORD *)a3 = 182;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTREventTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 1066;
      break;
  }

  return v11;
}

void sub_244BD1DB4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BD1E8C(int a1, uint64_t a2, uint64_t a3)
{
  if (a1)
  {
    id v4 = 0;
    *(_DWORD *)a3 = 182;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "zap-generated/MTREventTLVValueDecoder.mm";
    *(_DWORD *)(a3 + 16) = 1118;
    goto LABEL_13;
  }
  uint64_t v23 = 0;
  v24[0] = 0;
  v25[0] = 0;
  sub_244802514((uint64_t)&v23, a2, (uint64_t)&v21);
  id v4 = 0;
  *(_OWORD *)a3 = v21;
  *(void *)(a3 + 16) = v22;
  if (!*(_DWORD *)a3)
  {
    uint64_t v5 = objc_opt_new();
    int v7 = objc_msgSend_numberWithUnsignedLongLong_(NSNumber, v6, v23);
    objc_msgSend_setId_(v5, v8, (uint64_t)v7);

    if (v24[0])
    {
      long long v10 = (uint64_t *)sub_24479DC08(v24);
      uint64_t v11 = *v10;
      uint64_t v12 = v10[1];
      id v13 = [NSString alloc];
      id v4 = (id)objc_msgSend_initWithBytes_length_encoding_(v13, v14, v11, v12, 4);
      if (!v4)
      {
        *(_OWORD *)a3 = xmmword_26519AEF0;
        *(void *)(a3 + 16) = 1092;
LABEL_12:

        goto LABEL_13;
      }
    }
    else
    {
      id v4 = 0;
    }
    objc_msgSend_setName_(v5, v9, (uint64_t)v4);

    if (v25[0])
    {
      uint64_t v16 = (uint64_t *)sub_24479DC08(v25);
      uint64_t v18 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v17, *v16, v16[1]);
      objc_msgSend_setFaultRecording_(v5, v19, (uint64_t)v18);
    }
    else
    {
      uint64_t v18 = 0;
      objc_msgSend_setFaultRecording_(v5, v15, 0);
    }

    id v4 = v5;
    goto LABEL_12;
  }
LABEL_13:

  return v4;
}

void sub_244BD2040(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BD205C(int a1, uint64_t a2, uint64_t a3)
{
  if (a1 == 1)
  {
    sub_244CB3988((uint64_t)&v26);
    unsigned __int8 v28 = 0;
    sub_244CB39B8((uint64_t)&v26, 0, 0);
    sub_244CB3988((uint64_t)v30);
    unsigned __int8 v31 = 0;
    sub_244CB39B8(v9, 0, 0);
    sub_244803FAC((uint64_t)&v26, a2, (uint64_t)&v23);
    *(_OWORD *)a3 = v23;
    *(void *)(a3 + 16) = v24;
    if (!*(_DWORD *)a3)
    {
      int v7 = objc_opt_new();
      long long v10 = objc_opt_new();
      unsigned __int8 v33 = v28;
      if (v28) {
        char v34 = v29;
      }
      sub_2446D1930((uint64_t)&v23, (uint64_t)&v26, &v33);
      while (sub_2446D19A0((uint64_t)&v23))
      {
        uint64_t v12 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v11, v23);
        objc_msgSend_addObject_(v10, v13, (uint64_t)v12);
      }
      int v14 = DWORD2(v23);
      if (DWORD2(v23) != 33 && DWORD2(v23) != 0) {
        goto LABEL_29;
      }
      objc_msgSend_setCurrent_(v7, v11, (uint64_t)v10);

      long long v10 = objc_opt_new();
      unsigned __int8 v33 = v31;
      if (v31) {
        char v34 = v32;
      }
      sub_2446D1930((uint64_t)&v23, (uint64_t)v30, &v33);
      while (sub_2446D19A0((uint64_t)&v23))
      {
        uint64_t v17 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v16, v23);
        objc_msgSend_addObject_(v10, v18, (uint64_t)v17);
      }
      int v14 = DWORD2(v23);
      if (DWORD2(v23) == 33 || DWORD2(v23) == 0)
      {
        objc_msgSend_setPrevious_(v7, v16, (uint64_t)v10);

        id v5 = v7;
      }
      else
      {
LABEL_29:
        uint64_t v20 = v24;
        int v21 = HIDWORD(v23);
        *(_DWORD *)a3 = v14;
        *(_DWORD *)(a3 + 4) = v21;
        *(void *)(a3 + 8) = v20;
        *(void *)(a3 + 16) = v25;

        id v5 = 0;
      }
      goto LABEL_30;
    }
LABEL_6:
    id v5 = 0;
    goto LABEL_31;
  }
  if (a1)
  {
    id v5 = 0;
    *(_DWORD *)a3 = 182;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "zap-generated/MTREventTLVValueDecoder.mm";
    *(_DWORD *)(a3 + 16) = 1199;
    goto LABEL_31;
  }
  LOBYTE(v23) = 0;
  sub_244803ED4(&v23, a2, (uint64_t)&v26);
  *(_OWORD *)a3 = v26;
  *(void *)(a3 + 16) = v27;
  if (*(_DWORD *)a3) {
    goto LABEL_6;
  }
  id v5 = (id)objc_opt_new();
  int v7 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v6, v23);
  objc_msgSend_setConnectionStatus_(v5, v8, (uint64_t)v7);
LABEL_30:

LABEL_31:

  return v5;
}

void sub_244BD2324(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BD238C(int a1, uint64_t a2, uint64_t a3)
{
  if (a1 == 2)
  {
    LOBYTE(v16) = 0;
    sub_244804694(&v16, a2, (uint64_t)&v18);
    *(_OWORD *)a3 = v18;
    *(void *)(a3 + 16) = v19;
    if (!*(_DWORD *)a3)
    {
      id v4 = objc_opt_new();
      int v6 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v8, v16);
      objc_msgSend_setConnectionStatus_(v4, v9, (uint64_t)v6);
      goto LABEL_12;
    }
LABEL_9:
    id v4 = 0;
    goto LABEL_13;
  }
  if (a1 == 1)
  {
    LOBYTE(v16) = 0;
    unsigned __int16 v17 = 0;
    sub_244804584((uint64_t)&v16, a2, (uint64_t)&v18);
    *(_OWORD *)a3 = v18;
    *(void *)(a3 + 16) = v19;
    if (!*(_DWORD *)a3)
    {
      id v4 = objc_opt_new();
      uint64_t v11 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v10, v16);
      objc_msgSend_setAssociationFailureCause_(v4, v12, (uint64_t)v11);

      int v6 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v13, v17);
      objc_msgSend_setStatus_(v4, v14, (uint64_t)v6);
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  if (a1)
  {
    id v4 = 0;
    *(_DWORD *)a3 = 182;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "zap-generated/MTREventTLVValueDecoder.mm";
    *(_DWORD *)(a3 + 16) = 1267;
    goto LABEL_13;
  }
  unsigned __int16 v16 = 0;
  sub_2448043CC(&v16, a2, (uint64_t)&v18);
  *(_OWORD *)a3 = v18;
  *(void *)(a3 + 16) = v19;
  if (*(_DWORD *)a3) {
    goto LABEL_9;
  }
  id v4 = objc_opt_new();
  int v6 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v5, v16);
  objc_msgSend_setReasonCode_(v4, v7, (uint64_t)v6);
LABEL_12:

LABEL_13:

  return v4;
}

void sub_244BD2578(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BD2598(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
      sub_2447F1928(a2, (uint64_t)&v21);
      *(_OWORD *)a3 = v21;
      *(void *)(a3 + 16) = v22;
      if (*(_DWORD *)a3) {
        goto LABEL_14;
      }
      goto LABEL_15;
    case 1:
      LOBYTE(v19) = 0;
      sub_2448062F8((char *)&v19, a2, (uint64_t)&v21);
      *(_OWORD *)a3 = v21;
      *(void *)(a3 + 16) = v22;
      if (*(_DWORD *)a3) {
        goto LABEL_14;
      }
      id v4 = (id)objc_opt_new();
      int v6 = objc_msgSend_numberWithBool_(NSNumber, v5, v19);
      objc_msgSend_setDstOffsetActive_(v4, v7, (uint64_t)v6);

      goto LABEL_19;
    case 2:
      LODWORD(v21) = 0;
      BYTE8(v21) = 0;
      sub_244806488((uint64_t)&v21, a2, (uint64_t)&v19);
      *(_OWORD *)a3 = v19;
      *(void *)(a3 + 16) = v20;
      if (*(_DWORD *)a3) {
        goto LABEL_14;
      }
      long long v8 = objc_opt_new();
      long long v10 = objc_msgSend_numberWithInt_(NSNumber, v9, v21);
      objc_msgSend_setOffset_(v8, v11, (uint64_t)v10);

      if (BYTE8(v21))
      {
        id v13 = (uint64_t *)sub_24479DC08((unsigned char *)&v21 + 8);
        uint64_t v14 = *v13;
        uint64_t v15 = v13[1];
        id v16 = [NSString alloc];
        id v4 = (id)objc_msgSend_initWithBytes_length_encoding_(v16, v17, v14, v15, 4);
        if (!v4)
        {
          *(_OWORD *)a3 = xmmword_26519AF08;
          *(void *)(a3 + 16) = 1333;
          goto LABEL_18;
        }
      }
      else
      {
        id v4 = 0;
      }
      objc_msgSend_setName_(v8, v12, (uint64_t)v4);

      id v4 = v8;
LABEL_18:

LABEL_19:
      return v4;
    case 3:
      sub_2447F1928(a2, (uint64_t)&v21);
      *(_OWORD *)a3 = v21;
      *(void *)(a3 + 16) = v22;
      if (!*(_DWORD *)a3) {
        goto LABEL_15;
      }
      goto LABEL_14;
    case 4:
      sub_2447F1928(a2, (uint64_t)&v21);
      *(_OWORD *)a3 = v21;
      *(void *)(a3 + 16) = v22;
      if (*(_DWORD *)a3) {
LABEL_14:
      }
        id v4 = 0;
      else {
LABEL_15:
      }
        id v4 = (id)objc_opt_new();
      goto LABEL_19;
    default:
      id v4 = 0;
      *(_DWORD *)a3 = 182;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTREventTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 1372;
      goto LABEL_19;
  }
}

void sub_244BD2830(_Unwind_Exception *exception_object)
{
}

id sub_244BD2878(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
      unsigned int v15 = 0;
      sub_244806B84(&v15, a2, (uint64_t)&v13);
      *(_OWORD *)a3 = v13;
      *(void *)(a3 + 16) = v14;
      if (*(_DWORD *)a3) {
        goto LABEL_14;
      }
      id v4 = objc_opt_new();
      int v6 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v5, v15);
      objc_msgSend_setSoftwareVersion_(v4, v7, (uint64_t)v6);
      goto LABEL_11;
    case 1:
      sub_2447F1928(a2, (uint64_t)&v13);
      *(_OWORD *)a3 = v13;
      *(void *)(a3 + 16) = v14;
      if (*(_DWORD *)a3) {
        goto LABEL_14;
      }
      goto LABEL_18;
    case 2:
      sub_2447F1928(a2, (uint64_t)&v13);
      *(_OWORD *)a3 = v13;
      *(void *)(a3 + 16) = v14;
      if (*(_DWORD *)a3) {
        goto LABEL_14;
      }
LABEL_18:
      id v4 = objc_opt_new();
      goto LABEL_15;
    case 3:
      LOBYTE(v15) = 0;
      sub_244806C5C((char *)&v15, a2, (uint64_t)&v13);
      *(_OWORD *)a3 = v13;
      *(void *)(a3 + 16) = v14;
      if (*(_DWORD *)a3) {
        goto LABEL_14;
      }
      id v4 = objc_opt_new();
      int v6 = objc_msgSend_numberWithBool_(NSNumber, v10, v15);
      objc_msgSend_setReachableNewValue_(v4, v11, (uint64_t)v6);
      goto LABEL_11;
    default:
      if (a1 == 128)
      {
        unsigned int v15 = 0;
        sub_244806D34(&v15, a2, (uint64_t)&v13);
        *(_OWORD *)a3 = v13;
        *(void *)(a3 + 16) = v14;
        if (*(_DWORD *)a3)
        {
LABEL_14:
          id v4 = 0;
        }
        else
        {
          id v4 = objc_opt_new();
          int v6 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v8, v15);
          objc_msgSend_setPromisedActiveDuration_(v4, v9, (uint64_t)v6);
LABEL_11:
        }
      }
      else
      {
        id v4 = 0;
        *(_DWORD *)a3 = 182;
        *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/zap-generated/MTREventTLVValueDecoder.mm";
        *(_DWORD *)(a3 + 16) = 1457;
      }
LABEL_15:
      return v4;
  }
}

void sub_244BD2ABC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BD2AE8(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
      LOBYTE(v21) = 0;
      sub_244806EF0(&v21, a2, (uint64_t)&v22);
      *(_OWORD *)a3 = v22;
      *(void *)(a3 + 16) = v23;
      if (*(_DWORD *)a3) {
        goto LABEL_16;
      }
      goto LABEL_8;
    case 1:
      LOBYTE(v21) = 0;
      sub_244806FC8(&v21, a2, (uint64_t)&v22);
      *(_OWORD *)a3 = v22;
      *(void *)(a3 + 16) = v23;
      if (!*(_DWORD *)a3) {
        goto LABEL_8;
      }
      goto LABEL_16;
    case 2:
      LOBYTE(v21) = 0;
      sub_2448070A0(&v21, a2, (uint64_t)&v22);
      *(_OWORD *)a3 = v22;
      *(void *)(a3 + 16) = v23;
      if (*(_DWORD *)a3) {
        goto LABEL_16;
      }
LABEL_8:
      id v4 = objc_opt_new();
      int v6 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v5, v21);
      objc_msgSend_setNewPosition_(v4, v7, (uint64_t)v6);
      goto LABEL_18;
    case 3:
      LOBYTE(v21) = 0;
      sub_244807178(&v21, a2, (uint64_t)&v22);
      *(_OWORD *)a3 = v22;
      *(void *)(a3 + 16) = v23;
      if (!*(_DWORD *)a3) {
        goto LABEL_10;
      }
      goto LABEL_16;
    case 4:
      LOBYTE(v21) = 0;
      sub_244807250(&v21, a2, (uint64_t)&v22);
      *(_OWORD *)a3 = v22;
      *(void *)(a3 + 16) = v23;
      if (*(_DWORD *)a3) {
        goto LABEL_16;
      }
LABEL_10:
      id v4 = objc_opt_new();
      int v6 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v8, v21);
      objc_msgSend_setPreviousPosition_(v4, v9, (uint64_t)v6);
      goto LABEL_18;
    case 5:
      __int16 v21 = 0;
      sub_2448073E0(&v21, a2, (uint64_t)&v22);
      *(_OWORD *)a3 = v22;
      *(void *)(a3 + 16) = v23;
      if (*(_DWORD *)a3) {
        goto LABEL_16;
      }
      id v4 = objc_opt_new();
      uint64_t v11 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v10, v21);
      objc_msgSend_setNewPosition_(v4, v12, (uint64_t)v11);

      int v6 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v13, HIBYTE(v21));
      objc_msgSend_setCurrentNumberOfPressesCounted_(v4, v14, (uint64_t)v6);
      goto LABEL_18;
    case 6:
      __int16 v21 = 0;
      sub_2448074F0(&v21, a2, (uint64_t)&v22);
      *(_OWORD *)a3 = v22;
      *(void *)(a3 + 16) = v23;
      if (*(_DWORD *)a3)
      {
LABEL_16:
        id v4 = 0;
      }
      else
      {
        id v4 = objc_opt_new();
        id v16 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v15, v21);
        objc_msgSend_setPreviousPosition_(v4, v17, (uint64_t)v16);

        int v6 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v18, HIBYTE(v21));
        objc_msgSend_setTotalNumberOfPressesCounted_(v4, v19, (uint64_t)v6);
LABEL_18:
      }
LABEL_19:
      return v4;
    default:
      id v4 = 0;
      *(_DWORD *)a3 = 182;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTREventTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 1598;
      goto LABEL_19;
  }
}

void sub_244BD2EB4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BD2F04(int a1, uint64_t a2, uint64_t a3)
{
  if (a1)
  {
    id v4 = 0;
    *(_DWORD *)a3 = 182;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "zap-generated/MTREventTLVValueDecoder.mm";
    *(_DWORD *)(a3 + 16) = 1687;
  }
  else
  {
    unsigned __int8 v11 = 0;
    sub_24480AEE0((char *)&v11, a2, (uint64_t)&v9);
    *(_OWORD *)a3 = v9;
    *(void *)(a3 + 16) = v10;
    if (*(_DWORD *)a3)
    {
      id v4 = 0;
    }
    else
    {
      id v4 = objc_opt_new();
      int v6 = objc_msgSend_numberWithBool_(NSNumber, v5, v11);
      objc_msgSend_setStateValue_(v4, v7, (uint64_t)v6);
    }
  }

  return v4;
}

void sub_244BD2FE0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BD2FF4(int a1, uint64_t a2, uint64_t a3)
{
  if (a1 == 1)
  {
    v51[0] = 0;
    v52[0] = 0;
    v54[0] = 0;
    sub_24480C6BC((uint64_t)v51, a2, (uint64_t)&v49);
    *(_OWORD *)a3 = v49;
    *(void *)(a3 + 16) = v50;
    if (!*(_DWORD *)a3)
    {
      id v22 = (id)objc_opt_new();
      uint64_t v24 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v23, v51[0]);
      objc_msgSend_setCompletionErrorCode_(v22, v25, (uint64_t)v24);

      if (v52[0] && sub_244BC319C(v52)[4])
      {
        uint64_t v27 = NSNumber;
        unsigned __int8 v28 = sub_244BC319C(v52);
        if (!v28[4]) {
          sub_24479484C();
        }
        __int16 v30 = objc_msgSend_numberWithUnsignedInt_(v27, v29, *(unsigned int *)v28);
        objc_msgSend_setTotalOperationalTime_(v22, v31, (uint64_t)v30);
      }
      else
      {
        __int16 v30 = 0;
        objc_msgSend_setTotalOperationalTime_(v22, v26, 0);
      }

      if (v54[0] && sub_244BC319C(v54)[4])
      {
        unsigned __int8 v33 = NSNumber;
        char v34 = sub_244BC319C(v54);
        if (!v34[4]) {
          sub_24479484C();
        }
        id v4 = objc_msgSend_numberWithUnsignedInt_(v33, v35, *(unsigned int *)v34);
        objc_msgSend_setPausedTime_(v22, v36, (uint64_t)v4);
      }
      else
      {
        id v4 = 0;
        objc_msgSend_setPausedTime_(v22, v32, 0);
      }
      goto LABEL_28;
    }
LABEL_8:
    id v22 = 0;
    goto LABEL_29;
  }
  if (a1)
  {
    id v22 = 0;
    *(_DWORD *)a3 = 182;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "zap-generated/MTREventTLVValueDecoder.mm";
    *(_DWORD *)(a3 + 16) = 1804;
    goto LABEL_29;
  }
  v51[0] = 0;
  v53[0] = 0;
  v55[0] = 0;
  sub_24480C480((uint64_t)v51, a2, (uint64_t)&v49);
  *(_OWORD *)a3 = v49;
  *(void *)(a3 + 16) = v50;
  if (*(_DWORD *)a3) {
    goto LABEL_8;
  }
  id v4 = objc_opt_new();
  id v5 = objc_opt_new();
  int v7 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v6, v51[0]);
  objc_msgSend_setErrorStateID_(v5, v8, (uint64_t)v7);

  if (!v53[0])
  {
    objc_msgSend_setErrorStateLabel_(v5, v9, 0);
LABEL_22:
    if (v55[0])
    {
      uint64_t v37 = (uint64_t *)sub_24479DC08(v55);
      uint64_t v38 = *v37;
      uint64_t v39 = v37[1];
      id v40 = [NSString alloc];
      uint64_t v42 = objc_msgSend_initWithBytes_length_encoding_(v40, v41, v38, v39, 4);
      objc_msgSend_setErrorStateDetails_(v5, v43, (uint64_t)v42);

      char v46 = objc_msgSend_errorStateDetails(v5, v44, v45);

      if (!v46)
      {
        __int16 v21 = &xmmword_26519AF38;
        goto LABEL_25;
      }
    }
    else
    {
      objc_msgSend_setErrorStateDetails_(v5, v20, 0);
    }
    objc_msgSend_setErrorState_(v4, v47, (uint64_t)v5);

    id v22 = v4;
    goto LABEL_28;
  }
  uint64_t v10 = (uint64_t *)sub_24479DC08(v53);
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  id v13 = [NSString alloc];
  unsigned int v15 = objc_msgSend_initWithBytes_length_encoding_(v13, v14, v11, v12, 4);
  objc_msgSend_setErrorStateLabel_(v5, v16, (uint64_t)v15);

  long long v19 = objc_msgSend_errorStateLabel(v5, v17, v18);

  if (v19) {
    goto LABEL_22;
  }
  __int16 v21 = &xmmword_26519AF20;
LABEL_25:
  *(_OWORD *)a3 = *v21;
  *(void *)(a3 + 16) = *((void *)v21 + 2);

  id v22 = 0;
LABEL_28:

LABEL_29:

  return v22;
}

void sub_244BD3374(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BD33C8(int a1, uint64_t a2, uint64_t a3)
{
  if (a1)
  {
    id v4 = 0;
    *(_DWORD *)a3 = 182;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "zap-generated/MTREventTLVValueDecoder.mm";
    *(_DWORD *)(a3 + 16) = 1956;
  }
  else
  {
    uint64_t v20 = 0;
    uint64_t v21 = 0;
    sub_24480E508(&v20, a2, (uint64_t)&v18);
    id v4 = 0;
    *(_OWORD *)a3 = v18;
    *(void *)(a3 + 16) = v19;
    if (!*(_DWORD *)a3)
    {
      id v4 = objc_opt_new();
      int v6 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v5, v20);
      objc_msgSend_setActive_(v4, v7, (uint64_t)v6);

      long long v9 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v8, HIDWORD(v20));
      objc_msgSend_setInactive_(v4, v10, (uint64_t)v9);

      uint64_t v12 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v11, v21);
      objc_msgSend_setState_(v4, v13, (uint64_t)v12);

      unsigned int v15 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v14, HIDWORD(v21));
      objc_msgSend_setMask_(v4, v16, (uint64_t)v15);
    }
  }

  return v4;
}

void sub_244BD3524(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BD3544(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
      unsigned __int8 v11 = 0;
      sub_24480EC94(&v11, a2, (uint64_t)&v9);
      *(_OWORD *)a3 = v9;
      *(void *)(a3 + 16) = v10;
      if (*(_DWORD *)a3) {
        goto LABEL_24;
      }
      goto LABEL_25;
    case 1:
      unsigned __int8 v11 = 0;
      sub_24480ED6C(&v11, a2, (uint64_t)&v9);
      *(_OWORD *)a3 = v9;
      *(void *)(a3 + 16) = v10;
      if (!*(_DWORD *)a3) {
        goto LABEL_25;
      }
      goto LABEL_24;
    case 2:
      unsigned __int8 v11 = 0;
      sub_24480EE44(&v11, a2, (uint64_t)&v9);
      *(_OWORD *)a3 = v9;
      *(void *)(a3 + 16) = v10;
      if (!*(_DWORD *)a3) {
        goto LABEL_25;
      }
      goto LABEL_24;
    case 3:
      sub_2447F1928(a2, (uint64_t)&v9);
      *(_OWORD *)a3 = v9;
      *(void *)(a3 + 16) = v10;
      if (!*(_DWORD *)a3) {
        goto LABEL_21;
      }
      goto LABEL_24;
    case 4:
      sub_2447F1928(a2, (uint64_t)&v9);
      *(_OWORD *)a3 = v9;
      *(void *)(a3 + 16) = v10;
      if (!*(_DWORD *)a3) {
        goto LABEL_21;
      }
      goto LABEL_24;
    case 5:
      sub_2447F1928(a2, (uint64_t)&v9);
      *(_OWORD *)a3 = v9;
      *(void *)(a3 + 16) = v10;
      if (!*(_DWORD *)a3) {
        goto LABEL_21;
      }
      goto LABEL_24;
    case 6:
      sub_2447F1928(a2, (uint64_t)&v9);
      *(_OWORD *)a3 = v9;
      *(void *)(a3 + 16) = v10;
      if (!*(_DWORD *)a3) {
        goto LABEL_21;
      }
      goto LABEL_24;
    case 7:
      sub_2447F1928(a2, (uint64_t)&v9);
      *(_OWORD *)a3 = v9;
      *(void *)(a3 + 16) = v10;
      if (!*(_DWORD *)a3) {
        goto LABEL_21;
      }
      goto LABEL_24;
    case 8:
      unsigned __int8 v11 = 0;
      sub_24480EF1C(&v11, a2, (uint64_t)&v9);
      *(_OWORD *)a3 = v9;
      *(void *)(a3 + 16) = v10;
      if (*(_DWORD *)a3) {
        goto LABEL_24;
      }
      goto LABEL_25;
    case 9:
      unsigned __int8 v11 = 0;
      sub_24480EFF4(&v11, a2, (uint64_t)&v9);
      *(_OWORD *)a3 = v9;
      *(void *)(a3 + 16) = v10;
      if (*(_DWORD *)a3) {
        goto LABEL_24;
      }
LABEL_25:
      id v4 = objc_opt_new();
      int v6 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v5, v11);
      objc_msgSend_setAlarmSeverityLevel_(v4, v7, (uint64_t)v6);

      break;
    case 10:
      sub_2447F1928(a2, (uint64_t)&v9);
      *(_OWORD *)a3 = v9;
      *(void *)(a3 + 16) = v10;
      if (*(_DWORD *)a3) {
LABEL_24:
      }
        id v4 = 0;
      else {
LABEL_21:
      }
        id v4 = objc_opt_new();
      break;
    default:
      id v4 = 0;
      *(_DWORD *)a3 = 182;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTREventTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 2143;
      break;
  }

  return v4;
}

void sub_244BD3910(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BD3960(int a1, uint64_t a2, uint64_t a3)
{
  if (a1)
  {
    id v4 = 0;
    *(_DWORD *)a3 = 182;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "zap-generated/MTREventTLVValueDecoder.mm";
    *(_DWORD *)(a3 + 16) = 2187;
  }
  else
  {
    uint64_t v20 = 0;
    uint64_t v21 = 0;
    sub_24480F384(&v20, a2, (uint64_t)&v18);
    id v4 = 0;
    *(_OWORD *)a3 = v18;
    *(void *)(a3 + 16) = v19;
    if (!*(_DWORD *)a3)
    {
      id v4 = objc_opt_new();
      int v6 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v5, v20);
      objc_msgSend_setActive_(v4, v7, (uint64_t)v6);

      long long v9 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v8, HIDWORD(v20));
      objc_msgSend_setInactive_(v4, v10, (uint64_t)v9);

      uint64_t v12 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v11, v21);
      objc_msgSend_setState_(v4, v13, (uint64_t)v12);

      unsigned int v15 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v14, HIDWORD(v21));
      objc_msgSend_setMask_(v4, v16, (uint64_t)v15);
    }
  }

  return v4;
}

void sub_244BD3ABC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BD3ADC(int a1, uint64_t a2, uint64_t a3)
{
  if (a1 == 1)
  {
    v51[0] = 0;
    v52[0] = 0;
    v54[0] = 0;
    sub_24480FE00((uint64_t)v51, a2, (uint64_t)&v49);
    *(_OWORD *)a3 = v49;
    *(void *)(a3 + 16) = v50;
    if (!*(_DWORD *)a3)
    {
      id v22 = (id)objc_opt_new();
      uint64_t v24 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v23, v51[0]);
      objc_msgSend_setCompletionErrorCode_(v22, v25, (uint64_t)v24);

      if (v52[0] && sub_244BC319C(v52)[4])
      {
        uint64_t v27 = NSNumber;
        unsigned __int8 v28 = sub_244BC319C(v52);
        if (!v28[4]) {
          sub_24479484C();
        }
        __int16 v30 = objc_msgSend_numberWithUnsignedInt_(v27, v29, *(unsigned int *)v28);
        objc_msgSend_setTotalOperationalTime_(v22, v31, (uint64_t)v30);
      }
      else
      {
        __int16 v30 = 0;
        objc_msgSend_setTotalOperationalTime_(v22, v26, 0);
      }

      if (v54[0] && sub_244BC319C(v54)[4])
      {
        unsigned __int8 v33 = NSNumber;
        char v34 = sub_244BC319C(v54);
        if (!v34[4]) {
          sub_24479484C();
        }
        id v4 = objc_msgSend_numberWithUnsignedInt_(v33, v35, *(unsigned int *)v34);
        objc_msgSend_setPausedTime_(v22, v36, (uint64_t)v4);
      }
      else
      {
        id v4 = 0;
        objc_msgSend_setPausedTime_(v22, v32, 0);
      }
      goto LABEL_28;
    }
LABEL_8:
    id v22 = 0;
    goto LABEL_29;
  }
  if (a1)
  {
    id v22 = 0;
    *(_DWORD *)a3 = 182;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "zap-generated/MTREventTLVValueDecoder.mm";
    *(_DWORD *)(a3 + 16) = 2304;
    goto LABEL_29;
  }
  v51[0] = 0;
  v53[0] = 0;
  v55[0] = 0;
  sub_24480FD28((uint64_t)v51, a2, (uint64_t)&v49);
  *(_OWORD *)a3 = v49;
  *(void *)(a3 + 16) = v50;
  if (*(_DWORD *)a3) {
    goto LABEL_8;
  }
  id v4 = objc_opt_new();
  id v5 = objc_opt_new();
  int v7 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v6, v51[0]);
  objc_msgSend_setErrorStateID_(v5, v8, (uint64_t)v7);

  if (!v53[0])
  {
    objc_msgSend_setErrorStateLabel_(v5, v9, 0);
LABEL_22:
    if (v55[0])
    {
      uint64_t v37 = (uint64_t *)sub_24479DC08(v55);
      uint64_t v38 = *v37;
      uint64_t v39 = v37[1];
      id v40 = [NSString alloc];
      uint64_t v42 = objc_msgSend_initWithBytes_length_encoding_(v40, v41, v38, v39, 4);
      objc_msgSend_setErrorStateDetails_(v5, v43, (uint64_t)v42);

      char v46 = objc_msgSend_errorStateDetails(v5, v44, v45);

      if (!v46)
      {
        uint64_t v21 = &xmmword_26519AF68;
        goto LABEL_25;
      }
    }
    else
    {
      objc_msgSend_setErrorStateDetails_(v5, v20, 0);
    }
    objc_msgSend_setErrorState_(v4, v47, (uint64_t)v5);

    id v22 = v4;
    goto LABEL_28;
  }
  uint64_t v10 = (uint64_t *)sub_24479DC08(v53);
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  id v13 = [NSString alloc];
  unsigned int v15 = objc_msgSend_initWithBytes_length_encoding_(v13, v14, v11, v12, 4);
  objc_msgSend_setErrorStateLabel_(v5, v16, (uint64_t)v15);

  uint64_t v19 = objc_msgSend_errorStateLabel(v5, v17, v18);

  if (v19) {
    goto LABEL_22;
  }
  uint64_t v21 = &xmmword_26519AF50;
LABEL_25:
  *(_OWORD *)a3 = *v21;
  *(void *)(a3 + 16) = *((void *)v21 + 2);

  id v22 = 0;
LABEL_28:

LABEL_29:

  return v22;
}

void sub_244BD3E5C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BD3EB0(int a1, uint64_t a2, uint64_t a3)
{
  if (a1 == 1)
  {
    v51[0] = 0;
    v52[0] = 0;
    v54[0] = 0;
    sub_244810230((uint64_t)v51, a2, (uint64_t)&v49);
    *(_OWORD *)a3 = v49;
    *(void *)(a3 + 16) = v50;
    if (!*(_DWORD *)a3)
    {
      id v22 = (id)objc_opt_new();
      uint64_t v24 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v23, v51[0]);
      objc_msgSend_setCompletionErrorCode_(v22, v25, (uint64_t)v24);

      if (v52[0] && sub_244BC319C(v52)[4])
      {
        uint64_t v27 = NSNumber;
        unsigned __int8 v28 = sub_244BC319C(v52);
        if (!v28[4]) {
          sub_24479484C();
        }
        __int16 v30 = objc_msgSend_numberWithUnsignedInt_(v27, v29, *(unsigned int *)v28);
        objc_msgSend_setTotalOperationalTime_(v22, v31, (uint64_t)v30);
      }
      else
      {
        __int16 v30 = 0;
        objc_msgSend_setTotalOperationalTime_(v22, v26, 0);
      }

      if (v54[0] && sub_244BC319C(v54)[4])
      {
        unsigned __int8 v33 = NSNumber;
        char v34 = sub_244BC319C(v54);
        if (!v34[4]) {
          sub_24479484C();
        }
        id v4 = objc_msgSend_numberWithUnsignedInt_(v33, v35, *(unsigned int *)v34);
        objc_msgSend_setPausedTime_(v22, v36, (uint64_t)v4);
      }
      else
      {
        id v4 = 0;
        objc_msgSend_setPausedTime_(v22, v32, 0);
      }
      goto LABEL_28;
    }
LABEL_8:
    id v22 = 0;
    goto LABEL_29;
  }
  if (a1)
  {
    id v22 = 0;
    *(_DWORD *)a3 = 182;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "zap-generated/MTREventTLVValueDecoder.mm";
    *(_DWORD *)(a3 + 16) = 2397;
    goto LABEL_29;
  }
  v51[0] = 0;
  v53[0] = 0;
  v55[0] = 0;
  sub_244810158((uint64_t)v51, a2, (uint64_t)&v49);
  *(_OWORD *)a3 = v49;
  *(void *)(a3 + 16) = v50;
  if (*(_DWORD *)a3) {
    goto LABEL_8;
  }
  id v4 = objc_opt_new();
  id v5 = objc_opt_new();
  int v7 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v6, v51[0]);
  objc_msgSend_setErrorStateID_(v5, v8, (uint64_t)v7);

  if (!v53[0])
  {
    objc_msgSend_setErrorStateLabel_(v5, v9, 0);
LABEL_22:
    if (v55[0])
    {
      uint64_t v37 = (uint64_t *)sub_24479DC08(v55);
      uint64_t v38 = *v37;
      uint64_t v39 = v37[1];
      id v40 = [NSString alloc];
      uint64_t v42 = objc_msgSend_initWithBytes_length_encoding_(v40, v41, v38, v39, 4);
      objc_msgSend_setErrorStateDetails_(v5, v43, (uint64_t)v42);

      char v46 = objc_msgSend_errorStateDetails(v5, v44, v45);

      if (!v46)
      {
        uint64_t v21 = &xmmword_26519AF98;
        goto LABEL_25;
      }
    }
    else
    {
      objc_msgSend_setErrorStateDetails_(v5, v20, 0);
    }
    objc_msgSend_setErrorState_(v4, v47, (uint64_t)v5);

    id v22 = v4;
    goto LABEL_28;
  }
  uint64_t v10 = (uint64_t *)sub_24479DC08(v53);
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  id v13 = [NSString alloc];
  unsigned int v15 = objc_msgSend_initWithBytes_length_encoding_(v13, v14, v11, v12, 4);
  objc_msgSend_setErrorStateLabel_(v5, v16, (uint64_t)v15);

  uint64_t v19 = objc_msgSend_errorStateLabel(v5, v17, v18);

  if (v19) {
    goto LABEL_22;
  }
  uint64_t v21 = &xmmword_26519AF80;
LABEL_25:
  *(_OWORD *)a3 = *v21;
  *(void *)(a3 + 16) = *((void *)v21 + 2);

  id v22 = 0;
LABEL_28:

LABEL_29:

  return v22;
}

void sub_244BD4230(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BD4284(int a1, uint64_t a2, uint64_t a3)
{
  if (a1 != 1)
  {
    if (a1)
    {
      id v4 = 0;
      *(_DWORD *)a3 = 182;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTREventTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 2488;
      goto LABEL_12;
    }
    *(_WORD *)uint64_t v19 = 0;
    sub_244813734((uint64_t)v19, a2, (uint64_t)&v17);
    *(_OWORD *)a3 = v17;
    *(void *)(a3 + 16) = v18;
    if (!*(_DWORD *)a3)
    {
      id v4 = objc_opt_new();
      int v6 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v5, v19[0]);
      objc_msgSend_setAlarmsActive_(v4, v7, (uint64_t)v6);

      if (v19[1])
      {
        long long v9 = NSNumber;
        uint64_t v10 = sub_24479DC2C(&v19[1]);
        uint64_t v12 = objc_msgSend_numberWithUnsignedChar_(v9, v11, *v10);
        objc_msgSend_setAlarmsSuppressed_(v4, v13, (uint64_t)v12);
      }
      else
      {
        uint64_t v12 = 0;
        objc_msgSend_setAlarmsSuppressed_(v4, v8, 0);
      }
      goto LABEL_11;
    }
LABEL_7:
    id v4 = 0;
    goto LABEL_12;
  }
  *(_WORD *)uint64_t v19 = 0;
  sub_24481384C(v19, a2, (uint64_t)&v17);
  *(_OWORD *)a3 = v17;
  *(void *)(a3 + 16) = v18;
  if (*(_DWORD *)a3) {
    goto LABEL_7;
  }
  id v4 = objc_opt_new();
  uint64_t v12 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v14, *(unsigned __int16 *)v19);
  objc_msgSend_setSensorFault_(v4, v15, (uint64_t)v12);
LABEL_11:

LABEL_12:

  return v4;
}

void sub_244BD4424(_Unwind_Exception *exception_object)
{
}

id sub_244BD4454(int a1, uint64_t a2, uint64_t a3)
{
  if (a1 != 1)
  {
    if (a1)
    {
      id v4 = 0;
      *(_DWORD *)a3 = 182;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTREventTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 2543;
      goto LABEL_12;
    }
    *(_WORD *)uint64_t v19 = 0;
    sub_244813E48((uint64_t)v19, a2, (uint64_t)&v17);
    *(_OWORD *)a3 = v17;
    *(void *)(a3 + 16) = v18;
    if (!*(_DWORD *)a3)
    {
      id v4 = objc_opt_new();
      int v6 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v5, v19[0]);
      objc_msgSend_setValveState_(v4, v7, (uint64_t)v6);

      if (v19[1])
      {
        long long v9 = NSNumber;
        uint64_t v10 = sub_24479DC2C(&v19[1]);
        uint64_t v12 = objc_msgSend_numberWithUnsignedChar_(v9, v11, *v10);
        objc_msgSend_setValveLevel_(v4, v13, (uint64_t)v12);
      }
      else
      {
        uint64_t v12 = 0;
        objc_msgSend_setValveLevel_(v4, v8, 0);
      }
      goto LABEL_11;
    }
LABEL_7:
    id v4 = 0;
    goto LABEL_12;
  }
  *(_WORD *)uint64_t v19 = 0;
  sub_244813F60(v19, a2, (uint64_t)&v17);
  *(_OWORD *)a3 = v17;
  *(void *)(a3 + 16) = v18;
  if (*(_DWORD *)a3) {
    goto LABEL_7;
  }
  id v4 = objc_opt_new();
  uint64_t v12 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v14, *(unsigned __int16 *)v19);
  objc_msgSend_setValveFault_(v4, v15, (uint64_t)v12);
LABEL_11:

LABEL_12:

  return v4;
}

void sub_244BD45F4(_Unwind_Exception *exception_object)
{
}

id sub_244BD4624(int a1, uint64_t a2, uint64_t a3)
{
  if (a1)
  {
    id v4 = 0;
    *(_DWORD *)a3 = 182;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "zap-generated/MTREventTLVValueDecoder.mm";
    *(_DWORD *)(a3 + 16) = 2630;
  }
  else
  {
    sub_244CB3988((uint64_t)v88);
    unsigned __int8 v89 = 0;
    sub_244CB39B8(v6, 0, 0);
    sub_244814A34((uint64_t)v88, a2, (uint64_t)&v74);
    id v4 = 0;
    *(_OWORD *)a3 = v74;
    *(void *)(a3 + 16) = v75;
    if (!*(_DWORD *)a3)
    {
      uint64_t v73 = objc_opt_new();
      int v7 = objc_opt_new();
      v91[0] = v89;
      if (v89) {
        v91[1] = v90;
      }
      sub_244BC2F10((uint64_t)&v74, (uint64_t)v88, v91);
      while (sub_244BC2FA8((uint64_t)&v74))
      {
        long long v9 = objc_opt_new();
        uint64_t v11 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v10, (unsigned __int16)v74);
        objc_msgSend_setMeasurementType_(v9, v12, (uint64_t)v11);

        uint64_t v14 = objc_msgSend_numberWithLongLong_(NSNumber, v13, *((uint64_t *)&v74 + 1));
        objc_msgSend_setMin_(v9, v15, (uint64_t)v14);

        long long v17 = objc_msgSend_numberWithLongLong_(NSNumber, v16, v75);
        objc_msgSend_setMax_(v9, v18, (uint64_t)v17);

        if (v76[0])
        {
          uint64_t v20 = NSNumber;
          uint64_t v21 = sub_2446F12CC(v76);
          uint64_t v23 = objc_msgSend_numberWithUnsignedInt_(v20, v22, *(unsigned int *)v21);
          objc_msgSend_setStartTimestamp_(v9, v24, (uint64_t)v23);
        }
        else
        {
          objc_msgSend_setStartTimestamp_(v9, v19, 0);
        }
        if (v77[0])
        {
          long long v26 = NSNumber;
          uint64_t v27 = sub_2446F12CC(v77);
          char v29 = objc_msgSend_numberWithUnsignedInt_(v26, v28, *(unsigned int *)v27);
          objc_msgSend_setEndTimestamp_(v9, v30, (uint64_t)v29);
        }
        else
        {
          objc_msgSend_setEndTimestamp_(v9, v25, 0);
        }
        if (v78[0])
        {
          char v32 = NSNumber;
          unsigned __int8 v33 = sub_2446F12CC(v78);
          int v35 = objc_msgSend_numberWithUnsignedInt_(v32, v34, *(unsigned int *)v33);
          objc_msgSend_setMinTimestamp_(v9, v36, (uint64_t)v35);
        }
        else
        {
          objc_msgSend_setMinTimestamp_(v9, v31, 0);
        }
        if (v79[0])
        {
          uint64_t v38 = NSNumber;
          uint64_t v39 = sub_2446F12CC(v79);
          uint64_t v41 = objc_msgSend_numberWithUnsignedInt_(v38, v40, *(unsigned int *)v39);
          objc_msgSend_setMaxTimestamp_(v9, v42, (uint64_t)v41);
        }
        else
        {
          objc_msgSend_setMaxTimestamp_(v9, v37, 0);
        }
        if (v80[0])
        {
          uint64_t v44 = NSNumber;
          uint64_t v45 = (uint64_t *)sub_2446F7170(v80);
          char v47 = objc_msgSend_numberWithUnsignedLongLong_(v44, v46, *v45);
          objc_msgSend_setStartSystime_(v9, v48, (uint64_t)v47);
        }
        else
        {
          objc_msgSend_setStartSystime_(v9, v43, 0);
        }
        if (v81[0])
        {
          uint64_t v50 = NSNumber;
          char v51 = (uint64_t *)sub_2446F7170(v81);
          uint64_t v53 = objc_msgSend_numberWithUnsignedLongLong_(v50, v52, *v51);
          objc_msgSend_setEndSystime_(v9, v54, (uint64_t)v53);
        }
        else
        {
          objc_msgSend_setEndSystime_(v9, v49, 0);
        }
        if (v82[0])
        {
          uint64_t v56 = NSNumber;
          long long v57 = (uint64_t *)sub_2446F7170(v82);
          uint64_t v59 = objc_msgSend_numberWithUnsignedLongLong_(v56, v58, *v57);
          objc_msgSend_setMinSystime_(v9, v60, (uint64_t)v59);
        }
        else
        {
          objc_msgSend_setMinSystime_(v9, v55, 0);
        }
        if (v83[0])
        {
          id v62 = NSNumber;
          uint64_t v63 = (uint64_t *)sub_2446F7170(v83);
          uint64_t v65 = objc_msgSend_numberWithUnsignedLongLong_(v62, v64, *v63);
          objc_msgSend_setMaxSystime_(v9, v66, (uint64_t)v65);
        }
        else
        {
          objc_msgSend_setMaxSystime_(v9, v61, 0);
        }
        objc_msgSend_addObject_(v7, v67, (uint64_t)v9, v73);
      }
      if (v84 == 33 || v84 == 0)
      {
        uint64_t v71 = v73;
        objc_msgSend_setRanges_(v73, v8, (uint64_t)v7);

        id v4 = v73;
      }
      else
      {
        uint64_t v69 = v86;
        int v70 = v85;
        *(_DWORD *)a3 = v84;
        *(_DWORD *)(a3 + 4) = v70;
        *(void *)(a3 + 8) = v69;
        *(void *)(a3 + 16) = v87;

        id v4 = 0;
        uint64_t v71 = v73;
      }
    }
  }

  return v4;
}

void sub_244BD4A9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  _Unwind_Resume(a1);
}

id sub_244BD4B04(int a1, uint64_t a2, uint64_t a3)
{
  if (a1 != 1)
  {
    if (a1)
    {
      id v5 = 0;
      *(_DWORD *)a3 = 182;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTREventTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 2786;
      goto LABEL_66;
    }
    v142[0] = 0;
    v143[0] = 0;
    sub_2448154FC(v142, a2, (uint64_t)&v140);
    *(_OWORD *)a3 = v140;
    *(void *)(a3 + 16) = v141;
    if (!*(_DWORD *)a3)
    {
      id v5 = objc_opt_new();
      if (v142[0])
      {
        uint64_t v6 = objc_opt_new();
        int v7 = NSNumber;
        long long v8 = (uint64_t *)sub_24479DC08(v142);
        uint64_t v10 = objc_msgSend_numberWithLongLong_(v7, v9, *v8);
        objc_msgSend_setEnergy_(v6, v11, (uint64_t)v10);

        if (sub_24479DC08(v142)[8])
        {
          id v13 = NSNumber;
          uint64_t v14 = sub_24479DC08(v142);
          unsigned int v15 = sub_2447A4A8C(v14 + 8);
          long long v17 = objc_msgSend_numberWithUnsignedInt_(v13, v16, *(unsigned int *)v15);
          objc_msgSend_setStartTimestamp_(v6, v18, (uint64_t)v17);
        }
        else
        {
          objc_msgSend_setStartTimestamp_(v6, v12, 0);
        }
        if (sub_24479DC08(v142)[16])
        {
          char v34 = NSNumber;
          int v35 = sub_24479DC08(v142);
          long long v36 = sub_2447A4A8C(v35 + 16);
          uint64_t v38 = objc_msgSend_numberWithUnsignedInt_(v34, v37, *(unsigned int *)v36);
          objc_msgSend_setEndTimestamp_(v6, v39, (uint64_t)v38);
        }
        else
        {
          objc_msgSend_setEndTimestamp_(v6, v33, 0);
        }
        if (sub_24479DC08(v142)[24])
        {
          unsigned __int8 v48 = NSNumber;
          long long v49 = sub_24479DC08(v142);
          uint64_t v50 = (uint64_t *)sub_24479DC08(v49 + 24);
          uint64_t v52 = objc_msgSend_numberWithUnsignedLongLong_(v48, v51, *v50);
          objc_msgSend_setStartSystime_(v6, v53, (uint64_t)v52);
        }
        else
        {
          objc_msgSend_setStartSystime_(v6, v47, 0);
        }
        if (sub_24479DC08(v142)[40])
        {
          id v62 = NSNumber;
          uint64_t v63 = sub_24479DC08(v142);
          uint64_t v64 = (uint64_t *)sub_24479DC08(v63 + 40);
          long long v66 = objc_msgSend_numberWithUnsignedLongLong_(v62, v65, *v64);
          objc_msgSend_setEndSystime_(v6, v67, (uint64_t)v66);
        }
        else
        {
          objc_msgSend_setEndSystime_(v6, v61, 0);
        }
        objc_msgSend_setEnergyImported_(v5, v68, (uint64_t)v6);
      }
      else
      {
        uint64_t v6 = 0;
        objc_msgSend_setEnergyImported_(v5, v4, 0);
      }

      if (v143[0])
      {
        uint64_t v78 = objc_opt_new();
        uint64_t v79 = NSNumber;
        uint64_t v80 = (uint64_t *)sub_24479DC08(v143);
        uint64_t v82 = objc_msgSend_numberWithLongLong_(v79, v81, *v80);
        objc_msgSend_setEnergy_(v78, v83, (uint64_t)v82);

        if (sub_24479DC08(v143)[8])
        {
          int v85 = NSNumber;
          uint64_t v86 = sub_24479DC08(v143);
          uint64_t v87 = sub_2447A4A8C(v86 + 8);
          unsigned __int8 v89 = objc_msgSend_numberWithUnsignedInt_(v85, v88, *(unsigned int *)v87);
          objc_msgSend_setStartTimestamp_(v78, v90, (uint64_t)v89);
        }
        else
        {
          objc_msgSend_setStartTimestamp_(v78, v84, 0);
        }
        if (sub_24479DC08(v143)[16])
        {
          uint64_t v104 = NSNumber;
          unsigned __int8 v105 = sub_24479DC08(v143);
          char v106 = sub_2447A4A8C(v105 + 16);
          unsigned __int8 v108 = objc_msgSend_numberWithUnsignedInt_(v104, v107, *(unsigned int *)v106);
          objc_msgSend_setEndTimestamp_(v78, v109, (uint64_t)v108);
        }
        else
        {
          objc_msgSend_setEndTimestamp_(v78, v103, 0);
        }
        if (sub_24479DC08(v143)[24])
        {
          unsigned __int8 v118 = NSNumber;
          char v119 = sub_24479DC08(v143);
          uint64_t v120 = (uint64_t *)sub_24479DC08(v119 + 24);
          unsigned __int8 v122 = objc_msgSend_numberWithUnsignedLongLong_(v118, v121, *v120);
          objc_msgSend_setStartSystime_(v78, v123, (uint64_t)v122);
        }
        else
        {
          objc_msgSend_setStartSystime_(v78, v117, 0);
        }
        if (sub_24479DC08(v143)[40])
        {
LABEL_62:
          int v132 = NSNumber;
          int v133 = sub_24479DC08(v143);
          uint64_t v134 = (uint64_t *)sub_24479DC08(v133 + 40);
          unsigned __int8 v136 = objc_msgSend_numberWithUnsignedLongLong_(v132, v135, *v134);
          objc_msgSend_setEndSystime_(v78, v137, (uint64_t)v136);

LABEL_64:
          objc_msgSend_setEnergyExported_(v5, v138, (uint64_t)v78);
          goto LABEL_65;
        }
LABEL_63:
        objc_msgSend_setEndSystime_(v78, v131, 0);
        goto LABEL_64;
      }
      goto LABEL_44;
    }
LABEL_8:
    id v5 = 0;
    goto LABEL_66;
  }
  v142[0] = 0;
  v143[0] = 0;
  sub_24481561C(v142, a2, (uint64_t)&v140);
  *(_OWORD *)a3 = v140;
  *(void *)(a3 + 16) = v141;
  if (*(_DWORD *)a3) {
    goto LABEL_8;
  }
  id v5 = objc_opt_new();
  if (v142[0])
  {
    uint64_t v20 = objc_opt_new();
    uint64_t v21 = NSNumber;
    id v22 = (uint64_t *)sub_24479DC08(v142);
    uint64_t v24 = objc_msgSend_numberWithLongLong_(v21, v23, *v22);
    objc_msgSend_setEnergy_(v20, v25, (uint64_t)v24);

    if (sub_24479DC08(v142)[8])
    {
      uint64_t v27 = NSNumber;
      unsigned __int8 v28 = sub_24479DC08(v142);
      char v29 = sub_2447A4A8C(v28 + 8);
      unsigned __int8 v31 = objc_msgSend_numberWithUnsignedInt_(v27, v30, *(unsigned int *)v29);
      objc_msgSend_setStartTimestamp_(v20, v32, (uint64_t)v31);
    }
    else
    {
      objc_msgSend_setStartTimestamp_(v20, v26, 0);
    }
    if (sub_24479DC08(v142)[16])
    {
      uint64_t v41 = NSNumber;
      uint64_t v42 = sub_24479DC08(v142);
      long long v43 = sub_2447A4A8C(v42 + 16);
      uint64_t v45 = objc_msgSend_numberWithUnsignedInt_(v41, v44, *(unsigned int *)v43);
      objc_msgSend_setEndTimestamp_(v20, v46, (uint64_t)v45);
    }
    else
    {
      objc_msgSend_setEndTimestamp_(v20, v40, 0);
    }
    if (sub_24479DC08(v142)[24])
    {
      uint64_t v55 = NSNumber;
      uint64_t v56 = sub_24479DC08(v142);
      long long v57 = (uint64_t *)sub_24479DC08(v56 + 24);
      uint64_t v59 = objc_msgSend_numberWithUnsignedLongLong_(v55, v58, *v57);
      objc_msgSend_setStartSystime_(v20, v60, (uint64_t)v59);
    }
    else
    {
      objc_msgSend_setStartSystime_(v20, v54, 0);
    }
    if (sub_24479DC08(v142)[40])
    {
      int v70 = NSNumber;
      uint64_t v71 = sub_24479DC08(v142);
      uint64_t v72 = (uint64_t *)sub_24479DC08(v71 + 40);
      long long v74 = objc_msgSend_numberWithUnsignedLongLong_(v70, v73, *v72);
      objc_msgSend_setEndSystime_(v20, v75, (uint64_t)v74);
    }
    else
    {
      objc_msgSend_setEndSystime_(v20, v69, 0);
    }
    objc_msgSend_setEnergyImported_(v5, v76, (uint64_t)v20);
  }
  else
  {
    uint64_t v20 = 0;
    objc_msgSend_setEnergyImported_(v5, v19, 0);
  }

  if (v143[0])
  {
    uint64_t v78 = objc_opt_new();
    uint64_t v91 = NSNumber;
    int v92 = (uint64_t *)sub_24479DC08(v143);
    uint64_t v94 = objc_msgSend_numberWithLongLong_(v91, v93, *v92);
    objc_msgSend_setEnergy_(v78, v95, (uint64_t)v94);

    if (sub_24479DC08(v143)[8])
    {
      uint64_t v97 = NSNumber;
      uint64_t v98 = sub_24479DC08(v143);
      uint64_t v99 = sub_2447A4A8C(v98 + 8);
      char v101 = objc_msgSend_numberWithUnsignedInt_(v97, v100, *(unsigned int *)v99);
      objc_msgSend_setStartTimestamp_(v78, v102, (uint64_t)v101);
    }
    else
    {
      objc_msgSend_setStartTimestamp_(v78, v96, 0);
    }
    if (sub_24479DC08(v143)[16])
    {
      uint64_t v111 = NSNumber;
      unsigned __int8 v112 = sub_24479DC08(v143);
      char v113 = sub_2447A4A8C(v112 + 16);
      unsigned __int8 v115 = objc_msgSend_numberWithUnsignedInt_(v111, v114, *(unsigned int *)v113);
      objc_msgSend_setEndTimestamp_(v78, v116, (uint64_t)v115);
    }
    else
    {
      objc_msgSend_setEndTimestamp_(v78, v110, 0);
    }
    if (sub_24479DC08(v143)[24])
    {
      uint64_t v125 = NSNumber;
      __int16 v126 = sub_24479DC08(v143);
      char v127 = (uint64_t *)sub_24479DC08(v126 + 24);
      char v129 = objc_msgSend_numberWithUnsignedLongLong_(v125, v128, *v127);
      objc_msgSend_setStartSystime_(v78, v130, (uint64_t)v129);
    }
    else
    {
      objc_msgSend_setStartSystime_(v78, v124, 0);
    }
    if (sub_24479DC08(v143)[40]) {
      goto LABEL_62;
    }
    goto LABEL_63;
  }
LABEL_44:
  uint64_t v78 = 0;
  objc_msgSend_setEnergyExported_(v5, v77, 0);
LABEL_65:

LABEL_66:

  return v5;
}

void sub_244BD5330(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BD53BC(int a1, uint64_t a2, uint64_t a3)
{
  if (a1 == 1)
  {
    sub_2447F1928(a2, (uint64_t)&v41);
    *(_OWORD *)a3 = v41;
    *(void *)(a3 + 16) = v42;
    if (*(_DWORD *)a3)
    {
LABEL_7:
      id v4 = 0;
      goto LABEL_24;
    }
    id v4 = objc_opt_new();
  }
  else
  {
    if (!a1)
    {
      unsigned int v43 = 0;
      v44[0] = 0;
      v45[0] = 0;
      v46[0] = 0;
      v47[0] = 0;
      v48[0] = 0;
      sub_244815E48((uint64_t)&v43, a2, (uint64_t)&v41);
      *(_OWORD *)a3 = v41;
      *(void *)(a3 + 16) = v42;
      if (!*(_DWORD *)a3)
      {
        id v4 = objc_opt_new();
        id v5 = objc_opt_new();
        int v7 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v6, v43);
        objc_msgSend_setDuration_(v5, v8, (uint64_t)v7);

        if (v44[0])
        {
          uint64_t v10 = NSNumber;
          uint64_t v11 = sub_24479DC2C(v44);
          id v13 = objc_msgSend_numberWithBool_(v10, v12, *v11);
          objc_msgSend_setOneShot_(v5, v14, (uint64_t)v13);
        }
        else
        {
          objc_msgSend_setOneShot_(v5, v9, 0);
        }
        if (v45[0])
        {
          id v16 = NSNumber;
          long long v17 = sub_24479DC2C(v45);
          uint64_t v19 = objc_msgSend_numberWithBool_(v16, v18, *v17);
          objc_msgSend_setEmergencyBoost_(v5, v20, (uint64_t)v19);
        }
        else
        {
          objc_msgSend_setEmergencyBoost_(v5, v15, 0);
        }
        if (v46[0])
        {
          id v22 = NSNumber;
          uint64_t v23 = sub_244BDA068(v46);
          uint64_t v25 = objc_msgSend_numberWithShort_(v22, v24, *(__int16 *)v23);
          objc_msgSend_setTemporarySetpoint_(v5, v26, (uint64_t)v25);
        }
        else
        {
          objc_msgSend_setTemporarySetpoint_(v5, v21, 0);
        }
        if (v47[0])
        {
          unsigned __int8 v28 = NSNumber;
          char v29 = sub_24479DC2C(v47);
          unsigned __int8 v31 = objc_msgSend_numberWithUnsignedChar_(v28, v30, *v29);
          objc_msgSend_setTargetPercentage_(v5, v32, (uint64_t)v31);
        }
        else
        {
          objc_msgSend_setTargetPercentage_(v5, v27, 0);
        }
        if (v48[0])
        {
          char v34 = NSNumber;
          int v35 = sub_24479DC2C(v48);
          uint64_t v37 = objc_msgSend_numberWithUnsignedChar_(v34, v36, *v35);
          objc_msgSend_setTargetReheat_(v5, v38, (uint64_t)v37);
        }
        else
        {
          objc_msgSend_setTargetReheat_(v5, v33, 0);
        }
        objc_msgSend_setBoostInfo_(v4, v39, (uint64_t)v5);

        goto LABEL_24;
      }
      goto LABEL_7;
    }
    id v4 = 0;
    *(_DWORD *)a3 = 182;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "zap-generated/MTREventTLVValueDecoder.mm";
    *(_DWORD *)(a3 + 16) = 2852;
  }
LABEL_24:

  return v4;
}

void sub_244BD567C(_Unwind_Exception *a1)
{
  id v4 = v3;

  _Unwind_Resume(a1);
}

id sub_244BD56B4(int a1, uint64_t a2, uint64_t a3)
{
  if (a1)
  {
    id v4 = 0;
    *(_DWORD *)a3 = 182;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "zap-generated/MTREventTLVValueDecoder.mm";
    *(_DWORD *)(a3 + 16) = 3010;
    goto LABEL_64;
  }
  v100[0] = 0;
  v101[0] = 0;
  v102[0] = 0;
  v103[0] = 0;
  uint64_t v98 = 0;
  *(void *)uint64_t v99 = 0;
  *(void *)&v99[7] = 0;
  sub_24481809C((uint64_t)&v98, a2, (uint64_t)&v96);
  id v4 = 0;
  *(_OWORD *)a3 = v96;
  *(void *)(a3 + 16) = v97;
  if (!*(_DWORD *)a3)
  {
    id v4 = objc_opt_new();
    uint64_t v6 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v5, v98, *(void *)v99);
    objc_msgSend_setEventID_(v4, v7, (uint64_t)v6);

    if (v99[9])
    {
      long long v9 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v8, v99[8]);
      objc_msgSend_setTransitionIndex_(v4, v10, (uint64_t)v9);
    }
    else
    {
      long long v9 = 0;
      objc_msgSend_setTransitionIndex_(v4, v8, 0);
    }

    uint64_t v12 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v11, v99[10]);
    objc_msgSend_setStatus_(v4, v13, (uint64_t)v12);

    unsigned int v15 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v14, v99[11]);
    objc_msgSend_setCriticality_(v4, v16, (uint64_t)v15);

    uint64_t v18 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v17, *(unsigned __int16 *)&v99[12]);
    objc_msgSend_setControl_(v4, v19, (uint64_t)v18);

    if (!v99[14] || !sub_244BDA068(&v99[14])[24])
    {
      uint64_t v21 = 0;
      objc_msgSend_setTemperatureControl_(v4, v20, 0);
      goto LABEL_43;
    }
    uint64_t v21 = objc_opt_new();
    id v22 = sub_244BDA068(&v99[14]);
    if (v22[24])
    {
      if (!*v22) {
        goto LABEL_17;
      }
      uint64_t v24 = sub_244BDA068(&v99[14]);
      if (!v24[24]) {
        goto LABEL_67;
      }
      if (sub_244BDA068(v24)[2])
      {
        uint64_t v25 = NSNumber;
        long long v26 = sub_244BDA068(&v99[14]);
        if (!v26[24]) {
          goto LABEL_67;
        }
        uint64_t v27 = sub_244BDA068(v26);
        if (!v27[2]) {
          goto LABEL_67;
        }
        char v29 = objc_msgSend_numberWithUnsignedShort_(v25, v28, *(unsigned __int16 *)v27);
        objc_msgSend_setCoolingTempOffset_(v21, v30, (uint64_t)v29);
      }
      else
      {
LABEL_17:
        objc_msgSend_setCoolingTempOffset_(v21, v23, 0);
      }
      unsigned __int8 v31 = sub_244BDA068(&v99[14]);
      if (!v31[24]) {
        goto LABEL_67;
      }
      if (!v31[6]) {
        goto LABEL_25;
      }
      unsigned __int8 v33 = sub_244BDA068(&v99[14]);
      if (!v33[24]) {
        goto LABEL_67;
      }
      if (sub_244BDA068(v33 + 6)[2])
      {
        char v34 = NSNumber;
        int v35 = sub_244BDA068(&v99[14]);
        if (!v35[24]) {
          goto LABEL_67;
        }
        long long v36 = sub_244BDA068(v35 + 6);
        if (!v36[2]) {
          goto LABEL_67;
        }
        uint64_t v38 = objc_msgSend_numberWithUnsignedShort_(v34, v37, *(unsigned __int16 *)v36);
        objc_msgSend_setHeatingtTempOffset_(v21, v39, (uint64_t)v38);
      }
      else
      {
LABEL_25:
        objc_msgSend_setHeatingtTempOffset_(v21, v32, 0);
      }
      id v40 = sub_244BDA068(&v99[14]);
      if (!v40[24]) {
        goto LABEL_67;
      }
      if (!v40[12]) {
        goto LABEL_33;
      }
      uint64_t v42 = sub_244BDA068(&v99[14]);
      if (!v42[24]) {
        goto LABEL_67;
      }
      if (sub_244BDA068(v42 + 12)[2])
      {
        unsigned int v43 = NSNumber;
        uint64_t v44 = sub_244BDA068(&v99[14]);
        if (!v44[24]) {
          goto LABEL_67;
        }
        uint64_t v45 = sub_244BDA068(v44 + 12);
        if (!v45[2]) {
          goto LABEL_67;
        }
        char v47 = objc_msgSend_numberWithShort_(v43, v46, *(__int16 *)v45);
        objc_msgSend_setCoolingTempSetpoint_(v21, v48, (uint64_t)v47);
      }
      else
      {
LABEL_33:
        objc_msgSend_setCoolingTempSetpoint_(v21, v41, 0);
      }
      long long v49 = sub_244BDA068(&v99[14]);
      if (!v49[24]) {
        goto LABEL_67;
      }
      if (!v49[18]) {
        goto LABEL_41;
      }
      char v51 = sub_244BDA068(&v99[14]);
      if (!v51[24]) {
        goto LABEL_67;
      }
      if (!sub_244BDA068(v51 + 18)[2])
      {
LABEL_41:
        objc_msgSend_setHeatingTempSetpoint_(v21, v50, 0);
        goto LABEL_42;
      }
      uint64_t v52 = NSNumber;
      uint64_t v53 = sub_244BDA068(&v99[14]);
      if (v53[24])
      {
        uint64_t v54 = sub_244BDA068(v53 + 18);
        if (v54[2])
        {
          uint64_t v56 = objc_msgSend_numberWithShort_(v52, v55, *(__int16 *)v54);
          objc_msgSend_setHeatingTempSetpoint_(v21, v57, (uint64_t)v56);

LABEL_42:
          objc_msgSend_setTemperatureControl_(v4, v58, (uint64_t)v21);
LABEL_43:

          if (v100[0] && sub_24479DC2C(v100)[1])
          {
            id v60 = objc_opt_new();
            char v61 = NSNumber;
            id v62 = sub_24479DC2C(v100);
            if (!v62[1]) {
              sub_24479484C();
            }
            uint64_t v64 = objc_msgSend_numberWithChar_(v61, v63, (char)*v62);
            objc_msgSend_setLoadAdjustment_(v60, v65, (uint64_t)v64);

            long long v66 = v60;
            objc_msgSend_setAverageLoadControl_(v4, v67, (uint64_t)v60);
          }
          else
          {
            long long v66 = 0;
            objc_msgSend_setAverageLoadControl_(v4, v59, 0);
          }

          if (v101[0] && sub_24479DC2C(v101)[1])
          {
            uint64_t v69 = objc_opt_new();
            int v70 = NSNumber;
            uint64_t v71 = sub_24479DC2C(v101);
            if (!v71[1]) {
              sub_24479484C();
            }
            uint64_t v73 = objc_msgSend_numberWithUnsignedChar_(v70, v72, *v71);
            objc_msgSend_setDutyCycle_(v69, v74, (uint64_t)v73);

            uint64_t v75 = v69;
            objc_msgSend_setDutyCycleControl_(v4, v76, (uint64_t)v69);
          }
          else
          {
            uint64_t v75 = 0;
            objc_msgSend_setDutyCycleControl_(v4, v68, 0);
          }

          if (v102[0] && sub_24479DC2C(v102)[1])
          {
            uint64_t v78 = objc_opt_new();
            uint64_t v79 = NSNumber;
            uint64_t v80 = sub_24479DC2C(v102);
            if (!v80[1]) {
              sub_24479484C();
            }
            uint64_t v82 = objc_msgSend_numberWithUnsignedChar_(v79, v81, *v80);
            objc_msgSend_setPowerSavings_(v78, v83, (uint64_t)v82);

            int v84 = v78;
            objc_msgSend_setPowerSavingsControl_(v4, v85, (uint64_t)v78);
          }
          else
          {
            int v84 = 0;
            objc_msgSend_setPowerSavingsControl_(v4, v77, 0);
          }

          if (v103[0] && sub_24479DC2C(v103)[1])
          {
            uint64_t v87 = objc_opt_new();
            uint64_t v88 = NSNumber;
            unsigned __int8 v89 = sub_24479DC2C(v103);
            if (!v89[1]) {
              sub_24479484C();
            }
            uint64_t v91 = objc_msgSend_numberWithUnsignedChar_(v88, v90, *v89);
            objc_msgSend_setHeatingSource_(v87, v92, (uint64_t)v91);

            long long v93 = v87;
            objc_msgSend_setHeatingSourceControl_(v4, v94, (uint64_t)v87);
          }
          else
          {
            long long v93 = 0;
            objc_msgSend_setHeatingSourceControl_(v4, v86, 0);
          }

          goto LABEL_64;
        }
      }
    }
LABEL_67:
    sub_24479484C();
  }
LABEL_64:

  return v4;
}

void sub_244BD5D74(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BD5DD8(int a1, uint64_t a2, uint64_t a3)
{
  if (a1 == 2)
  {
    v31[0] = 0;
    __int16 v32 = 0;
    long long v29 = 0uLL;
    LOBYTE(v30[0]) = 0;
    sub_244819268((uint64_t)&v29, a2, (uint64_t)&v27);
    *(_OWORD *)a3 = v27;
    *(void *)(a3 + 16) = v28;
    if (*(_DWORD *)a3)
    {
      id v4 = 0;
      goto LABEL_27;
    }
    uint64_t v6 = objc_opt_new();
    long long v9 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v8, v29, *((void *)&v29 + 1));
    objc_msgSend_setMessageID_(v6, v10, (uint64_t)v9);

    if (LOBYTE(v30[0]) && sub_244BC319C(v30)[4])
    {
      uint64_t v12 = NSNumber;
      id v13 = sub_244BC319C(v30);
      if (!v13[4]) {
        sub_24479484C();
      }
      unsigned int v15 = objc_msgSend_numberWithUnsignedInt_(v12, v14, *(unsigned int *)v13);
      objc_msgSend_setResponseID_(v6, v16, (uint64_t)v15);
    }
    else
    {
      unsigned int v15 = 0;
      objc_msgSend_setResponseID_(v6, v11, 0);
    }

    if (v31[0] && sub_24479DC08(v31)[16])
    {
      uint64_t v18 = sub_24479DC08(v31);
      if (!v18[16]) {
        sub_24479484C();
      }
      uint64_t v19 = *(void *)v18;
      uint64_t v20 = *((void *)v18 + 1);
      id v21 = [NSString alloc];
      id v4 = (id)objc_msgSend_initWithBytes_length_encoding_(v21, v22, v19, v20, 4);
      if (!v4)
      {
        *(_OWORD *)a3 = xmmword_26519AFB0;
        *(void *)(a3 + 16) = 3086;
        goto LABEL_26;
      }
    }
    else
    {
      id v4 = 0;
    }
    objc_msgSend_setReply_(v6, v17, (uint64_t)v4);

    if (HIBYTE(v32))
    {
      uint64_t v24 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v23, v32);
      objc_msgSend_setFutureMessagesPreference_(v6, v25, (uint64_t)v24);
    }
    else
    {
      uint64_t v24 = 0;
      objc_msgSend_setFutureMessagesPreference_(v6, v23, 0);
    }

    id v4 = v6;
    goto LABEL_26;
  }
  if (a1 == 1)
  {
    long long v27 = 0uLL;
    sub_244818F58(&v27, a2, (uint64_t)&v29);
    id v4 = 0;
    *(_OWORD *)a3 = v29;
    *(void *)(a3 + 16) = v30[0];
    if (*(_DWORD *)a3) {
      goto LABEL_27;
    }
  }
  else
  {
    if (a1)
    {
      id v4 = 0;
      *(_DWORD *)a3 = 182;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTREventTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 3113;
      goto LABEL_27;
    }
    long long v27 = 0uLL;
    sub_244818E30(&v27, a2, (uint64_t)&v29);
    id v4 = 0;
    *(_OWORD *)a3 = v29;
    *(void *)(a3 + 16) = v30[0];
    if (*(_DWORD *)a3) {
      goto LABEL_27;
    }
  }
  id v4 = (id)objc_opt_new();
  uint64_t v6 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v5, v27, *((void *)&v27 + 1));
  objc_msgSend_setMessageID_(v4, v7, (uint64_t)v6);
LABEL_26:

LABEL_27:

  return v4;
}

void sub_244BD6118(_Unwind_Exception *exception_object)
{
}

id sub_244BD6158(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
      sub_2447F1928(a2, (uint64_t)&v20);
      *(_OWORD *)a3 = v20;
      *(void *)(a3 + 16) = v21;
      if (*(_DWORD *)a3) {
        goto LABEL_10;
      }
      goto LABEL_8;
    case 1:
      v17[0] = 0;
      unsigned int v18 = 0;
      uint64_t v19 = 0;
      sub_24481BE00((uint64_t)v17, a2, (uint64_t)&v20);
      id v4 = 0;
      *(_OWORD *)a3 = v20;
      *(void *)(a3 + 16) = v21;
      if (*(_DWORD *)a3) {
        goto LABEL_13;
      }
      id v4 = objc_opt_new();
      uint64_t v6 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v5, v17[0]);
      objc_msgSend_setCause_(v4, v7, (uint64_t)v6);

      long long v9 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v8, v18);
      objc_msgSend_setDuration_(v4, v10, (uint64_t)v9);

      uint64_t v12 = objc_msgSend_numberWithLongLong_(NSNumber, v11, v19);
      objc_msgSend_setEnergyUse_(v4, v13, (uint64_t)v12);
      goto LABEL_12;
    case 2:
      sub_2447F1928(a2, (uint64_t)&v20);
      *(_OWORD *)a3 = v20;
      *(void *)(a3 + 16) = v21;
      if (*(_DWORD *)a3) {
        goto LABEL_10;
      }
LABEL_8:
      id v4 = objc_opt_new();
      goto LABEL_13;
    case 3:
      v17[0] = 0;
      sub_24481BFEC(v17, a2, (uint64_t)&v20);
      *(_OWORD *)a3 = v20;
      *(void *)(a3 + 16) = v21;
      if (*(_DWORD *)a3)
      {
LABEL_10:
        id v4 = 0;
      }
      else
      {
        id v4 = objc_opt_new();
        uint64_t v12 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v14, v17[0]);
        objc_msgSend_setCause_(v4, v15, (uint64_t)v12);
LABEL_12:
      }
LABEL_13:
      return v4;
    default:
      id v4 = 0;
      *(_DWORD *)a3 = 182;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTREventTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 3191;
      goto LABEL_13;
  }
}

void sub_244BD6390(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BD63C8(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
      LODWORD(v71) = 0;
      sub_24481D14C(&v71, a2, (uint64_t)&v73);
      *(_OWORD *)a3 = v73;
      *(void *)(a3 + 16) = v74;
      if (*(_DWORD *)a3) {
        goto LABEL_15;
      }
      id v4 = objc_opt_new();
      uint64_t v6 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v5, v71);
      objc_msgSend_setSessionID_(v4, v7, (uint64_t)v6);
      goto LABEL_22;
    case 1:
      LODWORD(v73) = 0;
      BYTE4(v73) = 0;
      DWORD2(v73) = 0;
      uint64_t v74 = 0;
      v75[0] = 0;
      sub_24481D3F8((uint64_t)&v73, a2, (uint64_t)&v71);
      *(_OWORD *)a3 = v71;
      *(void *)(a3 + 16) = v72;
      if (*(_DWORD *)a3) {
        goto LABEL_15;
      }
      id v4 = objc_opt_new();
      long long v9 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v8, v73);
      objc_msgSend_setSessionID_(v4, v10, (uint64_t)v9);

      uint64_t v12 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v11, BYTE4(v73));
      objc_msgSend_setState_(v4, v13, (uint64_t)v12);

      unsigned int v15 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v14, DWORD2(v73));
      objc_msgSend_setSessionDuration_(v4, v16, (uint64_t)v15);

      unsigned int v18 = objc_msgSend_numberWithLongLong_(NSNumber, v17, v74);
      objc_msgSend_setSessionEnergyCharged_(v4, v19, (uint64_t)v18);

      if (v75[0])
      {
        uint64_t v21 = NSNumber;
        id v22 = (uint64_t *)sub_24479DC08(v75);
        uint64_t v24 = objc_msgSend_numberWithLongLong_(v21, v23, *v22);
        objc_msgSend_setSessionEnergyDischarged_(v4, v25, (uint64_t)v24);
      }
      else
      {
        uint64_t v24 = 0;
        objc_msgSend_setSessionEnergyDischarged_(v4, v20, 0);
      }
      goto LABEL_28;
    case 2:
      LODWORD(v73) = 0;
      BYTE4(v73) = 0;
      *((void *)&v73 + 1) = 0;
      LOBYTE(v74) = 0;
      sub_24481D6C0((uint64_t)&v73, a2, (uint64_t)&v71);
      *(_OWORD *)a3 = v71;
      *(void *)(a3 + 16) = v72;
      if (*(_DWORD *)a3) {
        goto LABEL_15;
      }
      id v4 = objc_opt_new();
      long long v27 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v26, v73);
      objc_msgSend_setSessionID_(v4, v28, (uint64_t)v27);

      __int16 v30 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v29, BYTE4(v73));
      objc_msgSend_setState_(v4, v31, (uint64_t)v30);

      unsigned __int8 v33 = objc_msgSend_numberWithLongLong_(NSNumber, v32, *((uint64_t *)&v73 + 1));
      objc_msgSend_setMaximumCurrent_(v4, v34, (uint64_t)v33);

      if ((_BYTE)v74)
      {
        long long v36 = NSNumber;
        uint64_t v37 = (uint64_t *)sub_24479DC08(&v74);
        uint64_t v24 = objc_msgSend_numberWithLongLong_(v36, v38, *v37);
        objc_msgSend_setMaximumDischargeCurrent_(v4, v39, (uint64_t)v24);
      }
      else
      {
        uint64_t v24 = 0;
        objc_msgSend_setMaximumDischargeCurrent_(v4, v35, 0);
      }
      goto LABEL_28;
    case 3:
      LODWORD(v73) = 0;
      WORD2(v73) = 0;
      *((void *)&v73 + 1) = 0;
      LOBYTE(v74) = 0;
      sub_24481D994((uint64_t)&v73, a2, (uint64_t)&v71);
      *(_OWORD *)a3 = v71;
      *(void *)(a3 + 16) = v72;
      if (*(_DWORD *)a3) {
        goto LABEL_15;
      }
      id v4 = objc_opt_new();
      long long v41 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v40, v73);
      objc_msgSend_setSessionID_(v4, v42, (uint64_t)v41);

      uint64_t v44 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v43, BYTE4(v73));
      objc_msgSend_setState_(v4, v45, (uint64_t)v44);

      char v47 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v46, BYTE5(v73));
      objc_msgSend_setReason_(v4, v48, (uint64_t)v47);

      uint64_t v50 = objc_msgSend_numberWithLongLong_(NSNumber, v49, *((uint64_t *)&v73 + 1));
      objc_msgSend_setEnergyTransferred_(v4, v51, (uint64_t)v50);

      if ((_BYTE)v74)
      {
        uint64_t v53 = NSNumber;
        uint64_t v54 = (uint64_t *)sub_24479DC08(&v74);
        uint64_t v24 = objc_msgSend_numberWithLongLong_(v53, v55, *v54);
        objc_msgSend_setEnergyDischarged_(v4, v56, (uint64_t)v24);
      }
      else
      {
        uint64_t v24 = 0;
        objc_msgSend_setEnergyDischarged_(v4, v52, 0);
      }
LABEL_28:

      goto LABEL_29;
    case 4:
      LOBYTE(v71) = 0;
      BYTE4(v71) = 0;
      WORD4(v71) = 0;
      BYTE10(v71) = 0;
      sub_24481DC74((uint64_t)&v71, a2, (uint64_t)&v73);
      *(_OWORD *)a3 = v73;
      *(void *)(a3 + 16) = v74;
      if (*(_DWORD *)a3)
      {
LABEL_15:
        id v4 = 0;
      }
      else
      {
        id v4 = objc_opt_new();
        if (BYTE4(v71))
        {
          id v60 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v59, v71);
          objc_msgSend_setSessionID_(v4, v61, (uint64_t)v60);
        }
        else
        {
          id v60 = 0;
          objc_msgSend_setSessionID_(v4, v59, 0);
        }

        uint64_t v63 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v62, BYTE8(v71));
        objc_msgSend_setState_(v4, v64, (uint64_t)v63);

        long long v66 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v65, BYTE9(v71));
        objc_msgSend_setFaultStatePreviousState_(v4, v67, (uint64_t)v66);

        uint64_t v6 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v68, BYTE10(v71));
        objc_msgSend_setFaultStateCurrentState_(v4, v69, (uint64_t)v6);
LABEL_22:
      }
LABEL_29:
      return v4;
    case 5:
      long long v71 = 0uLL;
      sub_24481DDE8(&v71, a2, (uint64_t)&v73);
      id v4 = 0;
      *(_OWORD *)a3 = v73;
      *(void *)(a3 + 16) = v74;
      if (*(_DWORD *)a3) {
        goto LABEL_29;
      }
      id v4 = objc_opt_new();
      uint64_t v6 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v57, v71, *((void *)&v71 + 1));
      objc_msgSend_setUid_(v4, v58, (uint64_t)v6);
      goto LABEL_22;
    default:
      id v4 = 0;
      *(_DWORD *)a3 = 182;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTREventTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 3391;
      goto LABEL_29;
  }
}

void sub_244BD69EC(_Unwind_Exception *exception_object)
{
}

id sub_244BD6A80(int a1, uint64_t a2, uint64_t a3)
{
  if (a1 <= 323551231)
  {
    switch(a1)
    {
      case 0:
        LOBYTE(v157) = 0;
        sub_2448237F8(&v157, a2, (uint64_t)&v152);
        *(_OWORD *)a3 = v152;
        *(void *)(a3 + 16) = v153;
        if (*(_DWORD *)a3) {
          goto LABEL_28;
        }
        id v4 = (id)objc_opt_new();
        uint64_t v6 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v5, v157);
        objc_msgSend_setAlarmCode_(v4, v7, (uint64_t)v6);
        goto LABEL_30;
      case 1:
        LOBYTE(v157) = 0;
        sub_2448239F0(&v157, a2, (uint64_t)&v152);
        *(_OWORD *)a3 = v152;
        *(void *)(a3 + 16) = v153;
        if (*(_DWORD *)a3) {
          goto LABEL_28;
        }
        id v4 = (id)objc_opt_new();
        uint64_t v6 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v69, v157);
        objc_msgSend_setDoorState_(v4, v70, (uint64_t)v6);
LABEL_30:

        goto LABEL_133;
      case 2:
        LOWORD(v152) = 0;
        BYTE2(v152) = 0;
        BYTE4(v152) = 0;
        WORD3(v152) = 0;
        BYTE8(v152) = 0;
        LOBYTE(v153) = 0;
        LOBYTE(v154) = 0;
        sub_244823CCC((uint64_t)&v152, a2, (uint64_t)&v157);
        *(_OWORD *)a3 = v157;
        *(void *)(a3 + 16) = v158;
        if (*(_DWORD *)a3) {
          goto LABEL_28;
        }
        long long v20 = objc_opt_new();
        id v40 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v39, v152);
        objc_msgSend_setLockOperationType_(v20, v41, (uint64_t)v40);

        unsigned int v43 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v42, BYTE1(v152));
        objc_msgSend_setOperationSource_(v20, v44, (uint64_t)v43);

        if (BYTE4(v152))
        {
          char v46 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v45, WORD1(v152));
          objc_msgSend_setUserIndex_(v20, v47, (uint64_t)v46);
        }
        else
        {
          char v46 = 0;
          objc_msgSend_setUserIndex_(v20, v45, 0);
        }

        if (BYTE7(v152))
        {
          unsigned __int8 v90 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v89, BYTE6(v152));
          objc_msgSend_setFabricIndex_(v20, v91, (uint64_t)v90);
        }
        else
        {
          unsigned __int8 v90 = 0;
          objc_msgSend_setFabricIndex_(v20, v89, 0);
        }

        if ((_BYTE)v153)
        {
          unsigned __int8 v102 = objc_msgSend_numberWithUnsignedLongLong_(NSNumber, v101, *((uint64_t *)&v152 + 1));
          objc_msgSend_setSourceNode_(v20, v103, (uint64_t)v102);
        }
        else
        {
          unsigned __int8 v102 = 0;
          objc_msgSend_setSourceNode_(v20, v101, 0);
        }

        if (!(_BYTE)v154 || !sub_24479DC08(&v154)[80]) {
          goto LABEL_124;
        }
        uint64_t v75 = objc_opt_new();
        uint64_t v125 = sub_24479DC08(&v154);
        if (!v125[80]) {
          sub_24479484C();
        }
        unsigned __int8 v163 = v125[72];
        if (v163) {
          char v164 = v125[73];
        }
        sub_2447967D8((uint64_t)&v157, (uint64_t)v125, &v163);
        while (sub_244796850(&v157))
        {
          __int16 v126 = objc_opt_new();
          unsigned __int8 v128 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v127, v157);
          objc_msgSend_setCredentialType_(v126, v129, (uint64_t)v128);

          uint64_t v131 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v130, WORD1(v157));
          objc_msgSend_setCredentialIndex_(v126, v132, (uint64_t)v131);

          objc_msgSend_addObject_(v75, v133, (uint64_t)v126);
        }
        int v134 = DWORD2(v157);
        if (DWORD2(v157) != 33 && DWORD2(v157) != 0) {
          goto LABEL_136;
        }
        goto LABEL_130;
      case 3:
        LOWORD(v152) = 0;
        BYTE2(v152) = 0;
        BYTE4(v152) = 0;
        BYTE6(v152) = 0;
        WORD4(v152) = 0;
        LOBYTE(v153) = 0;
        LOBYTE(v154) = 0;
        LOBYTE(v155) = 0;
        sub_2448240A8((uint64_t)&v152, a2, (uint64_t)&v157);
        *(_OWORD *)a3 = v157;
        *(void *)(a3 + 16) = v158;
        if (*(_DWORD *)a3) {
          goto LABEL_28;
        }
        long long v20 = objc_opt_new();
        uint64_t v58 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v57, v152);
        objc_msgSend_setLockOperationType_(v20, v59, (uint64_t)v58);

        char v61 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v60, BYTE1(v152));
        objc_msgSend_setOperationSource_(v20, v62, (uint64_t)v61);

        uint64_t v64 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v63, BYTE2(v152));
        objc_msgSend_setOperationError_(v20, v65, (uint64_t)v64);

        if (BYTE6(v152))
        {
          uint64_t v67 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v66, WORD2(v152));
          objc_msgSend_setUserIndex_(v20, v68, (uint64_t)v67);
        }
        else
        {
          uint64_t v67 = 0;
          objc_msgSend_setUserIndex_(v20, v66, 0);
        }

        if (BYTE9(v152))
        {
          uint64_t v120 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v119, BYTE8(v152));
          objc_msgSend_setFabricIndex_(v20, v121, (uint64_t)v120);
        }
        else
        {
          uint64_t v120 = 0;
          objc_msgSend_setFabricIndex_(v20, v119, 0);
        }

        if ((_BYTE)v154)
        {
          uint64_t v137 = objc_msgSend_numberWithUnsignedLongLong_(NSNumber, v136, v153);
          objc_msgSend_setSourceNode_(v20, v138, (uint64_t)v137);
        }
        else
        {
          uint64_t v137 = 0;
          objc_msgSend_setSourceNode_(v20, v136, 0);
        }

        if (!(_BYTE)v155 || !sub_24479DC08(&v155)[80])
        {
LABEL_124:
          uint64_t v75 = 0;
          objc_msgSend_setCredentials_(v20, v124, 0);
          goto LABEL_131;
        }
        uint64_t v75 = objc_opt_new();
        unsigned __int8 v139 = sub_24479DC08(&v155);
        if (!v139[80]) {
          sub_24479484C();
        }
        unsigned __int8 v163 = v139[72];
        if (v163) {
          char v164 = v139[73];
        }
        sub_2447967D8((uint64_t)&v157, (uint64_t)v139, &v163);
        while (sub_244796850(&v157))
        {
          long long v140 = objc_opt_new();
          unsigned __int8 v142 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v141, v157);
          objc_msgSend_setCredentialType_(v140, v143, (uint64_t)v142);

          uint64_t v145 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v144, WORD1(v157));
          objc_msgSend_setCredentialIndex_(v140, v146, (uint64_t)v145);

          objc_msgSend_addObject_(v75, v147, (uint64_t)v140);
        }
        int v134 = DWORD2(v157);
        if (DWORD2(v157) == 33 || DWORD2(v157) == 0) {
          goto LABEL_130;
        }
LABEL_136:
        uint64_t v150 = v158;
        int v151 = HIDWORD(v157);
        *(_DWORD *)a3 = v134;
        *(_DWORD *)(a3 + 4) = v151;
        *(void *)(a3 + 8) = v150;
        uint64_t v118 = v159;
        break;
      case 4:
        LOWORD(v152) = 0;
        BYTE2(v152) = 0;
        BYTE4(v152) = 0;
        BYTE6(v152) = 0;
        WORD4(v152) = 0;
        LOBYTE(v153) = 0;
        LOBYTE(v154) = 0;
        LOBYTE(v155) = 0;
        char v156 = 0;
        sub_24482443C(&v152, a2, (uint64_t)&v157);
        *(_OWORD *)a3 = v157;
        *(void *)(a3 + 16) = v158;
        if (*(_DWORD *)a3) {
          goto LABEL_28;
        }
        id v4 = (id)objc_opt_new();
        uint64_t v28 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v27, v152);
        objc_msgSend_setLockDataType_(v4, v29, (uint64_t)v28);

        unsigned __int8 v31 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v30, BYTE1(v152));
        objc_msgSend_setDataOperationType_(v4, v32, (uint64_t)v31);

        char v34 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v33, BYTE2(v152));
        objc_msgSend_setOperationSource_(v4, v35, (uint64_t)v34);

        if (BYTE6(v152))
        {
          uint64_t v37 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v36, WORD2(v152));
          objc_msgSend_setUserIndex_(v4, v38, (uint64_t)v37);
        }
        else
        {
          uint64_t v37 = 0;
          objc_msgSend_setUserIndex_(v4, v36, 0);
        }

        if (BYTE9(v152))
        {
          uint64_t v87 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v86, BYTE8(v152));
          objc_msgSend_setFabricIndex_(v4, v88, (uint64_t)v87);
        }
        else
        {
          uint64_t v87 = 0;
          objc_msgSend_setFabricIndex_(v4, v86, 0);
        }

        if ((_BYTE)v154)
        {
          uint64_t v99 = objc_msgSend_numberWithUnsignedLongLong_(NSNumber, v98, v153);
          objc_msgSend_setSourceNode_(v4, v100, (uint64_t)v99);
        }
        else
        {
          uint64_t v99 = 0;
          objc_msgSend_setSourceNode_(v4, v98, 0);
        }

        if (v156) {
          goto LABEL_88;
        }
        goto LABEL_113;
      default:
        goto LABEL_23;
    }
    goto LABEL_137;
  }
  if (a1 == 323551232)
  {
    LOBYTE(v157) = 0;
    BYTE2(v157) = 0;
    BYTE4(v157) = 0;
    WORD3(v157) = 0;
    BYTE8(v157) = 0;
    char v162 = 0;
    sub_244824898((uint64_t)&v157, a2, (uint64_t)&v152);
    *(_OWORD *)a3 = v152;
    *(void *)(a3 + 16) = v153;
    if (*(_DWORD *)a3) {
      goto LABEL_28;
    }
    long long v20 = objc_opt_new();
    id v22 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v21, v157);
    objc_msgSend_setLockOperationType_(v20, v23, (uint64_t)v22);

    if (BYTE4(v157))
    {
      uint64_t v25 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v24, WORD1(v157));
      objc_msgSend_setUserIndex_(v20, v26, (uint64_t)v25);
    }
    else
    {
      uint64_t v25 = 0;
      objc_msgSend_setUserIndex_(v20, v24, 0);
    }

    if (BYTE7(v157))
    {
      uint64_t v72 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v71, BYTE6(v157));
      objc_msgSend_setFabricIndex_(v20, v73, (uint64_t)v72);
    }
    else
    {
      uint64_t v72 = 0;
      objc_msgSend_setFabricIndex_(v20, v71, 0);
    }

    if (v162)
    {
      uint64_t v75 = objc_opt_new();
      if (!v162) {
        sub_24479484C();
      }
      unsigned __int8 v163 = v160;
      if (v160) {
        char v164 = v161;
      }
      sub_2447967D8((uint64_t)&v152, (uint64_t)&v157 + 8, &v163);
      while (sub_244BDA08C(&v152))
      {
        long long v76 = objc_opt_new();
        uint64_t v78 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v77, v152);
        objc_msgSend_setCredentialType_(v76, v79, (uint64_t)v78);

        char v81 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v80, WORD1(v152));
        objc_msgSend_setCredentialIndex_(v76, v82, (uint64_t)v81);

        objc_msgSend_addObject_(v75, v83, (uint64_t)v76);
      }
      int v84 = DWORD2(v152);
      if (DWORD2(v152) != 33 && DWORD2(v152) != 0) {
        goto LABEL_82;
      }
    }
    else
    {
      uint64_t v75 = 0;
    }
LABEL_130:
    objc_msgSend_setCredentials_(v20, v74, (uint64_t)v75);
LABEL_131:

    id v4 = v20;
    goto LABEL_132;
  }
  if (a1 != 323551233)
  {
    if (a1 != 323551234)
    {
LABEL_23:
      id v4 = 0;
      *(_DWORD *)a3 = 182;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTREventTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 3913;
      goto LABEL_133;
    }
    LOWORD(v152) = 0;
    BYTE2(v152) = 0;
    BYTE4(v152) = 0;
    BYTE6(v152) = 0;
    WORD4(v152) = 0;
    LOBYTE(v153) = 0;
    LOBYTE(v154) = 0;
    LOBYTE(v155) = 0;
    char v156 = 0;
    sub_244824E90(&v152, a2, (uint64_t)&v157);
    *(_OWORD *)a3 = v157;
    *(void *)(a3 + 16) = v158;
    if (!*(_DWORD *)a3)
    {
      id v4 = (id)objc_opt_new();
      long long v9 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v8, v152);
      objc_msgSend_setLockDataType_(v4, v10, (uint64_t)v9);

      uint64_t v12 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v11, BYTE1(v152));
      objc_msgSend_setDataOperationType_(v4, v13, (uint64_t)v12);

      unsigned int v15 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v14, BYTE2(v152));
      objc_msgSend_setOperationSource_(v4, v16, (uint64_t)v15);

      if (BYTE6(v152))
      {
        unsigned int v18 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v17, WORD2(v152));
        objc_msgSend_setUserIndex_(v4, v19, (uint64_t)v18);
      }
      else
      {
        unsigned int v18 = 0;
        objc_msgSend_setUserIndex_(v4, v17, 0);
      }

      if (BYTE9(v152))
      {
        long long v93 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v92, BYTE8(v152));
        objc_msgSend_setFabricIndex_(v4, v94, (uint64_t)v93);
      }
      else
      {
        long long v93 = 0;
        objc_msgSend_setFabricIndex_(v4, v92, 0);
      }

      if ((_BYTE)v154)
      {
        unsigned __int8 v105 = objc_msgSend_numberWithUnsignedLongLong_(NSNumber, v104, v153);
        objc_msgSend_setSourceNode_(v4, v106, (uint64_t)v105);
      }
      else
      {
        unsigned __int8 v105 = 0;
        objc_msgSend_setSourceNode_(v4, v104, 0);
      }

      if (v156)
      {
LABEL_88:
        long long v20 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v122, v155);
        objc_msgSend_setDataIndex_(v4, v123, (uint64_t)v20);
      }
      else
      {
LABEL_113:
        long long v20 = 0;
        objc_msgSend_setDataIndex_(v4, v122, 0);
      }
      goto LABEL_132;
    }
LABEL_28:
    id v4 = 0;
    goto LABEL_133;
  }
  LOWORD(v157) = 0;
  BYTE2(v157) = 0;
  BYTE4(v157) = 0;
  WORD3(v157) = 0;
  BYTE8(v157) = 0;
  char v162 = 0;
  sub_244824B64((uint64_t)&v157, a2, (uint64_t)&v152);
  *(_OWORD *)a3 = v152;
  *(void *)(a3 + 16) = v153;
  if (*(_DWORD *)a3) {
    goto LABEL_28;
  }
  long long v20 = objc_opt_new();
  long long v49 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v48, v157);
  objc_msgSend_setLockOperationType_(v20, v50, (uint64_t)v49);

  uint64_t v52 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v51, BYTE1(v157));
  objc_msgSend_setOperationError_(v20, v53, (uint64_t)v52);

  if (BYTE4(v157))
  {
    uint64_t v55 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v54, WORD1(v157));
    objc_msgSend_setUserIndex_(v20, v56, (uint64_t)v55);
  }
  else
  {
    uint64_t v55 = 0;
    objc_msgSend_setUserIndex_(v20, v54, 0);
  }

  if (BYTE7(v157))
  {
    long long v96 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v95, BYTE6(v157));
    objc_msgSend_setFabricIndex_(v20, v97, (uint64_t)v96);
  }
  else
  {
    long long v96 = 0;
    objc_msgSend_setFabricIndex_(v20, v95, 0);
  }

  if (!v162)
  {
    uint64_t v75 = 0;
    goto LABEL_130;
  }
  uint64_t v75 = objc_opt_new();
  if (!v162) {
    sub_24479484C();
  }
  unsigned __int8 v163 = v160;
  if (v160) {
    char v164 = v161;
  }
  sub_2447967D8((uint64_t)&v152, (uint64_t)&v157 + 8, &v163);
  while (sub_244BDA08C(&v152))
  {
    unsigned __int8 v107 = objc_opt_new();
    char v109 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v108, v152);
    objc_msgSend_setCredentialType_(v107, v110, (uint64_t)v109);

    unsigned __int8 v112 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v111, WORD1(v152));
    objc_msgSend_setCredentialIndex_(v107, v113, (uint64_t)v112);

    objc_msgSend_addObject_(v75, v114, (uint64_t)v107);
  }
  int v84 = DWORD2(v152);
  if (DWORD2(v152) == 33 || DWORD2(v152) == 0) {
    goto LABEL_130;
  }
LABEL_82:
  uint64_t v116 = v153;
  int v117 = HIDWORD(v152);
  *(_DWORD *)a3 = v84;
  *(_DWORD *)(a3 + 4) = v117;
  *(void *)(a3 + 8) = v116;
  uint64_t v118 = v154;
LABEL_137:
  *(void *)(a3 + 16) = v118;

  id v4 = 0;
LABEL_132:

LABEL_133:

  return v4;
}

void sub_244BD7920(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BD7A8C(int a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 0:
      sub_2447F1928(a2, (uint64_t)&v6);
      *(_OWORD *)a3 = v6;
      *(void *)(a3 + 16) = v7;
      if (*(_DWORD *)a3) {
        goto LABEL_36;
      }
      goto LABEL_37;
    case 1:
      sub_2447F1928(a2, (uint64_t)&v6);
      *(_OWORD *)a3 = v6;
      *(void *)(a3 + 16) = v7;
      if (!*(_DWORD *)a3) {
        goto LABEL_37;
      }
      goto LABEL_36;
    case 2:
      sub_2447F1928(a2, (uint64_t)&v6);
      *(_OWORD *)a3 = v6;
      *(void *)(a3 + 16) = v7;
      if (!*(_DWORD *)a3) {
        goto LABEL_37;
      }
      goto LABEL_36;
    case 3:
      sub_2447F1928(a2, (uint64_t)&v6);
      *(_OWORD *)a3 = v6;
      *(void *)(a3 + 16) = v7;
      if (!*(_DWORD *)a3) {
        goto LABEL_37;
      }
      goto LABEL_36;
    case 4:
      sub_2447F1928(a2, (uint64_t)&v6);
      *(_OWORD *)a3 = v6;
      *(void *)(a3 + 16) = v7;
      if (!*(_DWORD *)a3) {
        goto LABEL_37;
      }
      goto LABEL_36;
    case 5:
      sub_2447F1928(a2, (uint64_t)&v6);
      *(_OWORD *)a3 = v6;
      *(void *)(a3 + 16) = v7;
      if (!*(_DWORD *)a3) {
        goto LABEL_37;
      }
      goto LABEL_36;
    case 6:
      sub_2447F1928(a2, (uint64_t)&v6);
      *(_OWORD *)a3 = v6;
      *(void *)(a3 + 16) = v7;
      if (!*(_DWORD *)a3) {
        goto LABEL_37;
      }
      goto LABEL_36;
    case 7:
      sub_2447F1928(a2, (uint64_t)&v6);
      *(_OWORD *)a3 = v6;
      *(void *)(a3 + 16) = v7;
      if (!*(_DWORD *)a3) {
        goto LABEL_37;
      }
      goto LABEL_36;
    case 8:
      sub_2447F1928(a2, (uint64_t)&v6);
      *(_OWORD *)a3 = v6;
      *(void *)(a3 + 16) = v7;
      if (!*(_DWORD *)a3) {
        goto LABEL_37;
      }
      goto LABEL_36;
    case 9:
      sub_2447F1928(a2, (uint64_t)&v6);
      *(_OWORD *)a3 = v6;
      *(void *)(a3 + 16) = v7;
      if (!*(_DWORD *)a3) {
        goto LABEL_37;
      }
      goto LABEL_36;
    case 10:
      sub_2447F1928(a2, (uint64_t)&v6);
      *(_OWORD *)a3 = v6;
      *(void *)(a3 + 16) = v7;
      if (!*(_DWORD *)a3) {
        goto LABEL_37;
      }
      goto LABEL_36;
    case 11:
      sub_2447F1928(a2, (uint64_t)&v6);
      *(_OWORD *)a3 = v6;
      *(void *)(a3 + 16) = v7;
      if (!*(_DWORD *)a3) {
        goto LABEL_37;
      }
      goto LABEL_36;
    case 12:
      sub_2447F1928(a2, (uint64_t)&v6);
      *(_OWORD *)a3 = v6;
      *(void *)(a3 + 16) = v7;
      if (!*(_DWORD *)a3) {
        goto LABEL_37;
      }
      goto LABEL_36;
    case 13:
      sub_2447F1928(a2, (uint64_t)&v6);
      *(_OWORD *)a3 = v6;
      *(void *)(a3 + 16) = v7;
      if (!*(_DWORD *)a3) {
        goto LABEL_37;
      }
      goto LABEL_36;
    case 14:
      sub_2447F1928(a2, (uint64_t)&v6);
      *(_OWORD *)a3 = v6;
      *(void *)(a3 + 16) = v7;
      if (!*(_DWORD *)a3) {
        goto LABEL_37;
      }
      goto LABEL_36;
    case 15:
      sub_2447F1928(a2, (uint64_t)&v6);
      *(_OWORD *)a3 = v6;
      *(void *)(a3 + 16) = v7;
      if (!*(_DWORD *)a3) {
        goto LABEL_37;
      }
      goto LABEL_36;
    case 16:
      sub_2447F1928(a2, (uint64_t)&v6);
      *(_OWORD *)a3 = v6;
      *(void *)(a3 + 16) = v7;
      if (*(_DWORD *)a3) {
LABEL_36:
      }
        id v4 = 0;
      else {
LABEL_37:
      }
        id v4 = objc_opt_new();
      break;
    default:
      id v4 = 0;
      *(_DWORD *)a3 = 182;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/zap-generated/MTREventTLVValueDecoder.mm";
      *(_DWORD *)(a3 + 16) = 4136;
      break;
  }

  return v4;
}

id sub_244BD7E90(int a1, uint64_t a2, uint64_t a3)
{
  if (a1)
  {
    id v4 = 0;
    *(_DWORD *)a3 = 182;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "zap-generated/MTREventTLVValueDecoder.mm";
    *(_DWORD *)(a3 + 16) = 4285;
  }
  else
  {
    unsigned __int8 v11 = 0;
    sub_24482E32C(&v11, a2, (uint64_t)&v9);
    *(_OWORD *)a3 = v9;
    *(void *)(a3 + 16) = v10;
    if (*(_DWORD *)a3)
    {
      id v4 = 0;
    }
    else
    {
      id v4 = objc_opt_new();
      long long v6 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v5, v11);
      objc_msgSend_setOccupancy_(v4, v7, (uint64_t)v6);
    }
  }

  return v4;
}

void sub_244BD7F6C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BD7F80(int a1, uint64_t a2, uint64_t a3)
{
  if (a1)
  {
    id v4 = 0;
    *(_DWORD *)a3 = 182;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "zap-generated/MTREventTLVValueDecoder.mm";
    *(_DWORD *)(a3 + 16) = 4526;
  }
  else
  {
    sub_244CB3988((uint64_t)v38);
    unsigned __int8 v39 = 0;
    sub_244CB39B8((uint64_t)v38, 0, 0);
    unsigned __int8 v41 = 0;
    uint64_t v42 = 0;
    uint64_t v43 = 0;
    sub_2448338A0((uint64_t)v38, a2, (uint64_t)&v32);
    id v4 = 0;
    *(_OWORD *)a3 = v32;
    *(void *)(a3 + 16) = v33;
    if (!*(_DWORD *)a3)
    {
      long long v6 = objc_opt_new();
      uint64_t v7 = objc_opt_new();
      v44[0] = v39;
      if (v39) {
        v44[1] = v40;
      }
      sub_244BC2A44((uint64_t)&v32, (uint64_t)v38, v44);
      while (sub_244BC49A8((uint64_t)&v32))
      {
        long long v9 = objc_opt_new();
        unsigned __int8 v11 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v10, v32);
        objc_msgSend_setIdentifier_(v9, v12, (uint64_t)v11);

        uint64_t v13 = *((void *)&v32 + 1);
        uint64_t v14 = v33;
        id v15 = [NSString alloc];
        long long v17 = objc_msgSend_initWithBytes_length_encoding_(v15, v16, v13, v14, 4);
        objc_msgSend_setName_(v9, v18, (uint64_t)v17);

        uint64_t v21 = objc_msgSend_name(v9, v19, v20);

        if (!v21)
        {
          *(_OWORD *)a3 = xmmword_26519AFC8;
          *(void *)(a3 + 16) = 4493;

          goto LABEL_15;
        }
        objc_msgSend_addObject_(v7, v22, (uint64_t)v9);
      }
      if (!v34 || v34 == 33)
      {
        objc_msgSend_setTargetList_(v6, v8, (uint64_t)v7);

        uint64_t v24 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v23, v41);
        objc_msgSend_setCurrentTarget_(v6, v25, (uint64_t)v24);

        long long v27 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v26, v42, v43);
        objc_msgSend_setData_(v6, v28, (uint64_t)v27);

        id v4 = v6;
        goto LABEL_16;
      }
      uint64_t v29 = v36;
      int v30 = v35;
      *(_DWORD *)a3 = v34;
      *(_DWORD *)(a3 + 4) = v30;
      *(void *)(a3 + 8) = v29;
      *(void *)(a3 + 16) = v37;
LABEL_15:

      id v4 = 0;
LABEL_16:
    }
  }

  return v4;
}

void sub_244BD8224(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BD8278(int a1, uint64_t a2, uint64_t a3)
{
  if (a1)
  {
    id v4 = 0;
    *(_DWORD *)a3 = 182;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "zap-generated/MTREventTLVValueDecoder.mm";
    *(_DWORD *)(a3 + 16) = 4605;
  }
  else
  {
    v44[0] = 0;
    char v49 = 0;
    int v50 = 0;
    unsigned __int8 v54 = 0;
    uint64_t v46 = 0;
    uint64_t v47 = 0;
    uint64_t v45 = 0;
    LOBYTE(v48) = 0;
    uint64_t v51 = 0;
    uint64_t v52 = 0;
    v53[0] = 0;
    sub_244834EF0((uint64_t)v44, a2, (uint64_t)&v42);
    id v4 = 0;
    *(_OWORD *)a3 = v42;
    *(void *)(a3 + 16) = v43;
    if (!*(_DWORD *)a3)
    {
      id v4 = objc_opt_new();
      long long v6 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v5, v44[0]);
      objc_msgSend_setCurrentState_(v4, v7, (uint64_t)v6);

      long long v9 = objc_msgSend_numberWithUnsignedLongLong_(NSNumber, v8, v45);
      objc_msgSend_setStartTime_(v4, v10, (uint64_t)v9);

      uint64_t v12 = objc_msgSend_numberWithUnsignedLongLong_(NSNumber, v11, v46);
      objc_msgSend_setDuration_(v4, v13, (uint64_t)v12);

      uint64_t v14 = objc_opt_new();
      id v16 = objc_msgSend_numberWithUnsignedLongLong_(NSNumber, v15, v47);
      objc_msgSend_setUpdatedAt_(v14, v17, (uint64_t)v16);

      if (v49)
      {
        uint64_t v19 = objc_msgSend_numberWithUnsignedLongLong_(NSNumber, v18, v48);
        objc_msgSend_setPosition_(v14, v20, (uint64_t)v19);
      }
      else
      {
        objc_msgSend_setPosition_(v14, v18, 0);
      }
      objc_msgSend_setSampledPosition_(v4, v21, (uint64_t)v14);

      LODWORD(v22) = v50;
      uint64_t v25 = objc_msgSend_numberWithFloat_(NSNumber, v23, v24, v22);
      objc_msgSend_setPlaybackSpeed_(v4, v26, (uint64_t)v25);

      uint64_t v28 = objc_msgSend_numberWithUnsignedLongLong_(NSNumber, v27, v51);
      objc_msgSend_setSeekRangeEnd_(v4, v29, (uint64_t)v28);

      unsigned __int8 v31 = objc_msgSend_numberWithUnsignedLongLong_(NSNumber, v30, v52);
      objc_msgSend_setSeekRangeStart_(v4, v32, (uint64_t)v31);

      if (v53[0])
      {
        int v34 = (uint64_t *)sub_24479DC08(v53);
        uint64_t v36 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v35, *v34, v34[1]);
        objc_msgSend_setData_(v4, v37, (uint64_t)v36);
      }
      else
      {
        uint64_t v36 = 0;
        objc_msgSend_setData_(v4, v33, 0);
      }

      unsigned __int8 v39 = objc_msgSend_numberWithBool_(NSNumber, v38, v54);
      objc_msgSend_setAudioAdvanceUnmuted_(v4, v40, (uint64_t)v39);
    }
  }

  return v4;
}

void sub_244BD8548(_Unwind_Exception *a1)
{
  id v4 = v3;

  _Unwind_Resume(a1);
}

id sub_244BD8590(int a1, uint64_t a2, uint64_t a3)
{
  if (a1)
  {
    id v4 = 0;
    *(_DWORD *)a3 = 182;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "zap-generated/MTREventTLVValueDecoder.mm";
    *(_DWORD *)(a3 + 16) = 4722;
  }
  else
  {
    v14[0] = 0;
    sub_2448391FC((uint64_t)v14, a2, (uint64_t)&v12);
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
    if (*(_DWORD *)a3)
    {
      id v4 = 0;
    }
    else
    {
      id v4 = objc_opt_new();
      if (v14[0])
      {
        long long v6 = NSNumber;
        uint64_t v7 = (uint64_t *)sub_24479DC08(v14);
        long long v9 = objc_msgSend_numberWithUnsignedLongLong_(v6, v8, *v7);
        objc_msgSend_setNode_(v4, v10, (uint64_t)v9);
      }
      else
      {
        long long v9 = 0;
        objc_msgSend_setNode_(v4, v5, 0);
      }
    }
  }

  return v4;
}

void sub_244BD8688(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BD869C(int a1, uint64_t a2, uint64_t a3)
{
  if (a1)
  {
    id v4 = 0;
    *(_DWORD *)a3 = 182;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "zap-generated/MTREventTLVValueDecoder.mm";
    *(_DWORD *)(a3 + 16) = 4745;
  }
  else
  {
    sub_2447F1928(a2, (uint64_t)&v6);
    *(_OWORD *)a3 = v6;
    *(void *)(a3 + 16) = v7;
    if (*(_DWORD *)a3) {
      id v4 = 0;
    }
    else {
      id v4 = objc_opt_new();
    }
  }

  return v4;
}

id sub_244BD8734(int a1, uint64_t a2, uint64_t a3)
{
  if (a1 == 1)
  {
    sub_244CB3988((uint64_t)v25);
    unsigned __int8 v26 = 0;
    sub_244CB39B8((uint64_t)v25, 0, 0);
    unsigned __int8 v28 = 0;
    sub_24483B8B8((uint64_t)v25, a2, (uint64_t)&v22);
    *(_OWORD *)a3 = v22;
    *(void *)(a3 + 16) = v23;
    if (!*(_DWORD *)a3)
    {
      id v5 = objc_opt_new();
      long long v6 = objc_opt_new();
      unsigned __int8 v29 = v26;
      if (v26) {
        char v30 = v27;
      }
      sub_2446D1930((uint64_t)&v22, (uint64_t)v25, &v29);
      while (sub_244794970((uint64_t)&v22))
      {
        unsigned __int8 v11 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v7, (unsigned __int16)v22);
        objc_msgSend_addObject_(v6, v12, (uint64_t)v11);
      }
      int v13 = DWORD2(v22);
      if (DWORD2(v22) != 33 && DWORD2(v22) != 0) {
        goto LABEL_29;
      }
      goto LABEL_28;
    }
LABEL_10:
    id v10 = 0;
    goto LABEL_31;
  }
  if (a1)
  {
    id v10 = 0;
    *(_DWORD *)a3 = 182;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "zap-generated/MTREventTLVValueDecoder.mm";
    *(_DWORD *)(a3 + 16) = 4843;
    goto LABEL_31;
  }
  sub_244CB3988((uint64_t)v25);
  unsigned __int8 v26 = 0;
  sub_244CB39B8((uint64_t)v25, 0, 0);
  unsigned __int8 v28 = 0;
  sub_24483B65C((uint64_t)v25, a2, (uint64_t)&v22);
  *(_OWORD *)a3 = v22;
  *(void *)(a3 + 16) = v23;
  if (*(_DWORD *)a3) {
    goto LABEL_10;
  }
  id v5 = objc_opt_new();
  long long v6 = objc_opt_new();
  unsigned __int8 v29 = v26;
  if (v26) {
    char v30 = v27;
  }
  sub_2446D1930((uint64_t)&v22, (uint64_t)v25, &v29);
  while (sub_244794970((uint64_t)&v22))
  {
    long long v8 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v7, (unsigned __int16)v22);
    objc_msgSend_addObject_(v6, v9, (uint64_t)v8);
  }
  int v13 = DWORD2(v22);
  if (DWORD2(v22) != 33 && DWORD2(v22) != 0)
  {
LABEL_29:
    uint64_t v19 = v23;
    int v20 = HIDWORD(v22);
    *(_DWORD *)a3 = v13;
    *(_DWORD *)(a3 + 4) = v20;
    *(void *)(a3 + 8) = v19;
    *(void *)(a3 + 16) = v24;

    id v10 = 0;
    goto LABEL_30;
  }
LABEL_28:
  objc_msgSend_setZones_(v5, v7, (uint64_t)v6);

  long long v17 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v16, v28);
  objc_msgSend_setReason_(v5, v18, (uint64_t)v17);

  id v10 = v5;
LABEL_30:

LABEL_31:

  return v10;
}

void sub_244BD8A24(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BD8A84(int a1, uint64_t a2, uint64_t a3)
{
  if (a1 == 2)
  {
    unsigned __int16 v179 = 0;
    v180[0] = 0;
    v181[0] = 0;
    v183[0] = 0;
    v186[0] = 0;
    v188[0] = 0;
    v190[0] = 0;
    sub_244840240((uint64_t)&v179, a2, (uint64_t)&v177);
    *(_OWORD *)a3 = v177;
    *(void *)(a3 + 16) = v178;
    if (!*(_DWORD *)a3)
    {
      id v4 = objc_opt_new();
      id v15 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v14, v179);
      objc_msgSend_setSnapshotStreamID_(v4, v16, (uint64_t)v15);

      if (v180[0])
      {
        unsigned int v18 = NSNumber;
        uint64_t v19 = sub_24479DC2C(v180);
        uint64_t v21 = objc_msgSend_numberWithUnsignedChar_(v18, v20, *v19);
        objc_msgSend_setImageCodec_(v4, v22, (uint64_t)v21);
      }
      else
      {
        uint64_t v21 = 0;
        objc_msgSend_setImageCodec_(v4, v17, 0);
      }

      if (v181[0])
      {
        unsigned __int8 v39 = NSNumber;
        unsigned __int8 v40 = sub_2447A4DF0(v181);
        long long v42 = objc_msgSend_numberWithUnsignedShort_(v39, v41, *(unsigned __int16 *)v40);
        objc_msgSend_setFrameRate_(v4, v43, (uint64_t)v42);
      }
      else
      {
        long long v42 = 0;
        objc_msgSend_setFrameRate_(v4, v38, 0);
      }

      if (v183[0])
      {
        long long v57 = NSNumber;
        uint64_t v58 = sub_2447A4A8C(v183);
        id v60 = objc_msgSend_numberWithUnsignedInt_(v57, v59, *(unsigned int *)v58);
        objc_msgSend_setBitRate_(v4, v61, (uint64_t)v60);
      }
      else
      {
        id v60 = 0;
        objc_msgSend_setBitRate_(v4, v56, 0);
      }

      if (v186[0])
      {
        uint64_t v75 = objc_opt_new();
        long long v76 = NSNumber;
        long long v77 = sub_244BDA068(v186);
        uint64_t v79 = objc_msgSend_numberWithUnsignedShort_(v76, v78, *(unsigned __int16 *)v77);
        objc_msgSend_setWidth_(v75, v80, (uint64_t)v79);

        char v81 = NSNumber;
        uint64_t v82 = sub_244BDA068(v186);
        int v84 = objc_msgSend_numberWithUnsignedShort_(v81, v83, *((unsigned __int16 *)v82 + 1));
        objc_msgSend_setHeight_(v75, v85, (uint64_t)v84);

        uint64_t v86 = v75;
        objc_msgSend_setMinResolution_(v4, v87, (uint64_t)v75);
      }
      else
      {
        uint64_t v86 = 0;
        objc_msgSend_setMinResolution_(v4, v74, 0);
      }

      if (v188[0])
      {
        char v109 = objc_opt_new();
        char v110 = NSNumber;
        uint64_t v111 = sub_244BDA068(v188);
        char v113 = objc_msgSend_numberWithUnsignedShort_(v110, v112, *(unsigned __int16 *)v111);
        objc_msgSend_setWidth_(v109, v114, (uint64_t)v113);

        unsigned __int8 v115 = NSNumber;
        uint64_t v116 = sub_244BDA068(v188);
        uint64_t v118 = objc_msgSend_numberWithUnsignedShort_(v115, v117, *((unsigned __int16 *)v116 + 1));
        objc_msgSend_setHeight_(v109, v119, (uint64_t)v118);

        uint64_t v120 = v109;
        objc_msgSend_setMaxResolution_(v4, v121, (uint64_t)v109);
      }
      else
      {
        uint64_t v120 = 0;
        objc_msgSend_setMaxResolution_(v4, v108, 0);
      }

      if (v190[0])
      {
        char v149 = NSNumber;
        uint64_t v150 = sub_24479DC2C(v190);
        uint64_t v146 = objc_msgSend_numberWithUnsignedChar_(v149, v151, *v150);
        objc_msgSend_setQuality_(v4, v152, (uint64_t)v146);
      }
      else
      {
        uint64_t v146 = 0;
        objc_msgSend_setQuality_(v4, v148, 0);
      }
      goto LABEL_77;
    }
    goto LABEL_11;
  }
  if (a1 == 1)
  {
    unsigned __int16 v179 = 0;
    v180[0] = 0;
    v181[0] = 0;
    v182[0] = 0;
    v183[0] = 0;
    v186[0] = 0;
    v189[0] = 0;
    sub_24483FE38((uint64_t)&v179, a2, (uint64_t)&v177);
    *(_OWORD *)a3 = v177;
    *(void *)(a3 + 16) = v178;
    if (!*(_DWORD *)a3)
    {
      id v4 = objc_opt_new();
      uint64_t v24 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v23, v179);
      objc_msgSend_setAudioStreamID_(v4, v25, (uint64_t)v24);

      if (v180[0])
      {
        char v27 = NSNumber;
        unsigned __int8 v28 = sub_24479DC2C(v180);
        char v30 = objc_msgSend_numberWithUnsignedChar_(v27, v29, *v28);
        objc_msgSend_setStreamType_(v4, v31, (uint64_t)v30);
      }
      else
      {
        char v30 = 0;
        objc_msgSend_setStreamType_(v4, v26, 0);
      }

      if (v181[0])
      {
        uint64_t v45 = NSNumber;
        uint64_t v46 = sub_24479DC2C(v181);
        uint64_t v48 = objc_msgSend_numberWithUnsignedChar_(v45, v47, *v46);
        objc_msgSend_setAudioCodec_(v4, v49, (uint64_t)v48);
      }
      else
      {
        uint64_t v48 = 0;
        objc_msgSend_setAudioCodec_(v4, v44, 0);
      }

      if (v182[0])
      {
        uint64_t v63 = NSNumber;
        uint64_t v64 = sub_24479DC2C(v182);
        long long v66 = objc_msgSend_numberWithUnsignedChar_(v63, v65, *v64);
        objc_msgSend_setChannelCount_(v4, v67, (uint64_t)v66);
      }
      else
      {
        long long v66 = 0;
        objc_msgSend_setChannelCount_(v4, v62, 0);
      }

      if (v183[0])
      {
        unsigned __int8 v89 = NSNumber;
        unsigned __int8 v90 = sub_2447A4A8C(v183);
        int v92 = objc_msgSend_numberWithUnsignedInt_(v89, v91, *(unsigned int *)v90);
        objc_msgSend_setSampleRate_(v4, v93, (uint64_t)v92);
      }
      else
      {
        int v92 = 0;
        objc_msgSend_setSampleRate_(v4, v88, 0);
      }

      if (v186[0])
      {
        long long v123 = NSNumber;
        uint64_t v124 = sub_2447A4A8C(v186);
        __int16 v126 = objc_msgSend_numberWithUnsignedInt_(v123, v125, *(unsigned int *)v124);
        objc_msgSend_setBitRate_(v4, v127, (uint64_t)v126);
      }
      else
      {
        __int16 v126 = 0;
        objc_msgSend_setBitRate_(v4, v122, 0);
      }

      if (v189[0])
      {
        int v143 = NSNumber;
        int v144 = sub_24479DC2C(v189);
        uint64_t v146 = objc_msgSend_numberWithUnsignedChar_(v143, v145, *v144);
        objc_msgSend_setBitDepth_(v4, v147, (uint64_t)v146);
      }
      else
      {
        uint64_t v146 = 0;
        objc_msgSend_setBitDepth_(v4, v142, 0);
      }
      goto LABEL_77;
    }
LABEL_11:
    id v4 = 0;
    goto LABEL_78;
  }
  if (a1)
  {
    id v4 = 0;
    *(_DWORD *)a3 = 182;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "zap-generated/MTREventTLVValueDecoder.mm";
    *(_DWORD *)(a3 + 16) = 5112;
    goto LABEL_78;
  }
  unsigned __int16 v179 = 0;
  v180[0] = 0;
  v181[0] = 0;
  v182[0] = 0;
  v184[0] = 0;
  v185[0] = 0;
  v187[0] = 0;
  v190[0] = 0;
  v191[0] = 0;
  v192[0] = 0;
  v193[0] = 0;
  sub_24483F9A0((uint64_t)&v179, a2, (uint64_t)&v177);
  *(_OWORD *)a3 = v177;
  *(void *)(a3 + 16) = v178;
  if (*(_DWORD *)a3) {
    goto LABEL_11;
  }
  id v4 = objc_opt_new();
  long long v6 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v5, v179);
  objc_msgSend_setVideoStreamID_(v4, v7, (uint64_t)v6);

  if (v180[0])
  {
    long long v9 = NSNumber;
    id v10 = sub_24479DC2C(v180);
    long long v12 = objc_msgSend_numberWithUnsignedChar_(v9, v11, *v10);
    objc_msgSend_setStreamType_(v4, v13, (uint64_t)v12);
  }
  else
  {
    long long v12 = 0;
    objc_msgSend_setStreamType_(v4, v8, 0);
  }

  if (v181[0])
  {
    uint64_t v33 = NSNumber;
    int v34 = sub_24479DC2C(v181);
    uint64_t v36 = objc_msgSend_numberWithUnsignedChar_(v33, v35, *v34);
    objc_msgSend_setVideoCodec_(v4, v37, (uint64_t)v36);
  }
  else
  {
    uint64_t v36 = 0;
    objc_msgSend_setVideoCodec_(v4, v32, 0);
  }

  if (v182[0])
  {
    uint64_t v51 = NSNumber;
    uint64_t v52 = sub_2447A4DF0(v182);
    unsigned __int8 v54 = objc_msgSend_numberWithUnsignedShort_(v51, v53, *(unsigned __int16 *)v52);
    objc_msgSend_setMinFrameRate_(v4, v55, (uint64_t)v54);
  }
  else
  {
    unsigned __int8 v54 = 0;
    objc_msgSend_setMinFrameRate_(v4, v50, 0);
  }

  if (v184[0])
  {
    uint64_t v69 = NSNumber;
    int v70 = sub_2447A4DF0(v184);
    uint64_t v72 = objc_msgSend_numberWithUnsignedShort_(v69, v71, *(unsigned __int16 *)v70);
    objc_msgSend_setMaxFrameRate_(v4, v73, (uint64_t)v72);
  }
  else
  {
    uint64_t v72 = 0;
    objc_msgSend_setMaxFrameRate_(v4, v68, 0);
  }

  if (v185[0])
  {
    uint64_t v95 = objc_opt_new();
    long long v96 = NSNumber;
    uint64_t v97 = sub_244BDA068(v185);
    uint64_t v99 = objc_msgSend_numberWithUnsignedShort_(v96, v98, *(unsigned __int16 *)v97);
    objc_msgSend_setWidth_(v95, v100, (uint64_t)v99);

    char v101 = NSNumber;
    unsigned __int8 v102 = sub_244BDA068(v185);
    uint64_t v104 = objc_msgSend_numberWithUnsignedShort_(v101, v103, *((unsigned __int16 *)v102 + 1));
    objc_msgSend_setHeight_(v95, v105, (uint64_t)v104);

    char v106 = v95;
    objc_msgSend_setMinResolution_(v4, v107, (uint64_t)v95);
  }
  else
  {
    char v106 = 0;
    objc_msgSend_setMinResolution_(v4, v94, 0);
  }

  if (v187[0])
  {
    char v129 = objc_opt_new();
    uint64_t v130 = NSNumber;
    uint64_t v131 = sub_244BDA068(v187);
    int v133 = objc_msgSend_numberWithUnsignedShort_(v130, v132, *(unsigned __int16 *)v131);
    objc_msgSend_setWidth_(v129, v134, (uint64_t)v133);

    uint64_t v135 = NSNumber;
    unsigned __int8 v136 = sub_244BDA068(v187);
    uint64_t v138 = objc_msgSend_numberWithUnsignedShort_(v135, v137, *((unsigned __int16 *)v136 + 1));
    objc_msgSend_setHeight_(v129, v139, (uint64_t)v138);

    long long v140 = v129;
    objc_msgSend_setMaxResolution_(v4, v141, (uint64_t)v129);
  }
  else
  {
    long long v140 = 0;
    objc_msgSend_setMaxResolution_(v4, v128, 0);
  }

  if (v190[0])
  {
    uint64_t v154 = NSNumber;
    unsigned __int16 v155 = sub_2447A4A8C(v190);
    long long v157 = objc_msgSend_numberWithUnsignedInt_(v154, v156, *(unsigned int *)v155);
    objc_msgSend_setMinBitRate_(v4, v158, (uint64_t)v157);
  }
  else
  {
    long long v157 = 0;
    objc_msgSend_setMinBitRate_(v4, v153, 0);
  }

  if (v191[0])
  {
    unsigned __int8 v160 = NSNumber;
    char v161 = sub_2447A4A8C(v191);
    unsigned __int8 v163 = objc_msgSend_numberWithUnsignedInt_(v160, v162, *(unsigned int *)v161);
    objc_msgSend_setMaxBitRate_(v4, v164, (uint64_t)v163);
  }
  else
  {
    unsigned __int8 v163 = 0;
    objc_msgSend_setMaxBitRate_(v4, v159, 0);
  }

  if (v192[0])
  {
    uint64_t v166 = NSNumber;
    char v167 = sub_2447A4DF0(v192);
    uint64_t v169 = objc_msgSend_numberWithUnsignedShort_(v166, v168, *(unsigned __int16 *)v167);
    objc_msgSend_setMinFragmentLen_(v4, v170, (uint64_t)v169);
  }
  else
  {
    uint64_t v169 = 0;
    objc_msgSend_setMinFragmentLen_(v4, v165, 0);
  }

  if (v193[0])
  {
    unsigned __int8 v172 = NSNumber;
    uint64_t v173 = sub_2447A4DF0(v193);
    uint64_t v146 = objc_msgSend_numberWithUnsignedShort_(v172, v174, *(unsigned __int16 *)v173);
    objc_msgSend_setMaxFragmentLen_(v4, v175, (uint64_t)v146);
  }
  else
  {
    uint64_t v146 = 0;
    objc_msgSend_setMaxFragmentLen_(v4, v171, 0);
  }
LABEL_77:

LABEL_78:

  return v4;
}

void sub_244BD9470(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BD9534(int a1, uint64_t a2, uint64_t a3)
{
  if (a1)
  {
    id v4 = 0;
    *(_DWORD *)a3 = 182;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "zap-generated/MTREventTLVValueDecoder.mm";
    *(_DWORD *)(a3 + 16) = 5204;
  }
  else
  {
    uint64_t v20 = 0;
    uint64_t v21 = 0;
    __int16 v22 = 0;
    sub_244842F68(&v20, a2, (uint64_t)&v18);
    id v4 = 0;
    *(_OWORD *)a3 = v18;
    *(void *)(a3 + 16) = v19;
    if (!*(_DWORD *)a3)
    {
      id v4 = objc_opt_new();
      long long v6 = objc_msgSend_numberWithUnsignedLongLong_(NSNumber, v5, v20);
      objc_msgSend_setRequestID_(v4, v7, (uint64_t)v6);

      long long v9 = objc_msgSend_numberWithUnsignedLongLong_(NSNumber, v8, v21);
      objc_msgSend_setClientNodeID_(v4, v10, (uint64_t)v9);

      long long v12 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v11, v22);
      objc_msgSend_setStatusCode_(v4, v13, (uint64_t)v12);

      id v15 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v14, HIBYTE(v22));
      objc_msgSend_setFabricIndex_(v4, v16, (uint64_t)v15);
    }
  }

  return v4;
}

void sub_244BD9694(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_244BD96B4(int a1, uint64_t a2, uint64_t a3)
{
  if (a1 == -917266)
  {
    LOBYTE(v116) = 0;
    sub_24484A188(&v116, a2, (uint64_t)&v128);
    *(_OWORD *)a3 = v128;
    *(void *)(a3 + 16) = v129;
    if (*(_DWORD *)a3) {
      goto LABEL_11;
    }
    id v56 = (id)objc_opt_new();
    uint64_t v58 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v57, v116);
    objc_msgSend_setArg1_(v56, v59, (uint64_t)v58);
LABEL_14:

    goto LABEL_44;
  }
  if (a1 == 2)
  {
    LOBYTE(v116) = 0;
    sub_24484A018(&v116, a2, (uint64_t)&v128);
    *(_OWORD *)a3 = v128;
    *(void *)(a3 + 16) = v129;
    if (*(_DWORD *)a3) {
      goto LABEL_11;
    }
    id v56 = (id)objc_opt_new();
    uint64_t v58 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v60, v116);
    objc_msgSend_setFabricIndex_(v56, v61, (uint64_t)v58);
    goto LABEL_14;
  }
  if (a1 != 1)
  {
    id v56 = 0;
    *(_DWORD *)a3 = 182;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "zap-generated/MTREventTLVValueDecoder.mm";
    *(_DWORD *)(a3 + 16) = 5358;
    goto LABEL_44;
  }
  LOWORD(v128) = 0;
  BYTE2(v128) = 0;
  WORD4(v128) = 0;
  BYTE10(v128) = 0;
  int v132 = 0;
  double v133 = 0.0;
  v134[0] = 0;
  long long v129 = 0u;
  long long v130 = 0u;
  unsigned __int8 v131 = 0;
  sub_244CB3988((uint64_t)v135);
  unsigned __int8 v136 = 0;
  sub_244CB39B8(v5, 0, 0);
  sub_244CB3988((uint64_t)v138);
  unsigned __int8 v139 = 0;
  sub_244CB39B8(v6, 0, 0);
  sub_244849DCC(&v128, a2, (uint64_t)&v116);
  *(_OWORD *)a3 = v116;
  *(void *)(a3 + 16) = v117;
  if (*(_DWORD *)a3)
  {
LABEL_11:
    id v56 = 0;
    goto LABEL_44;
  }
  unsigned __int8 v115 = objc_opt_new();
  long long v8 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v7, v128);
  objc_msgSend_setArg1_(v115, v9, (uint64_t)v8);

  unsigned __int8 v11 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v10, BYTE1(v128));
  objc_msgSend_setArg2_(v115, v12, (uint64_t)v11);

  uint64_t v14 = objc_msgSend_numberWithBool_(NSNumber, v13, BYTE2(v128));
  objc_msgSend_setArg3_(v115, v15, (uint64_t)v14);

  id v16 = objc_opt_new();
  long long v18 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v17, BYTE8(v128));
  objc_msgSend_setA_(v16, v19, (uint64_t)v18);

  uint64_t v21 = objc_msgSend_numberWithBool_(NSNumber, v20, BYTE9(v128));
  objc_msgSend_setB_(v16, v22, (uint64_t)v21);

  uint64_t v24 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v23, BYTE10(v128));
  objc_msgSend_setC_(v16, v25, (uint64_t)v24);

  char v27 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v26, v129, *((void *)&v129 + 1));
  objc_msgSend_setD_(v16, v28, (uint64_t)v27);

  long long v29 = v130;
  id v30 = [NSString alloc];
  long long v32 = objc_msgSend_initWithBytes_length_encoding_(v30, v31, v29, *((void *)&v29 + 1), 4);
  objc_msgSend_setE_(v16, v33, (uint64_t)v32);

  uint64_t v36 = objc_msgSend_e(v16, v34, v35);

  if (v36)
  {
    uint64_t v38 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v37, v131);
    objc_msgSend_setF_(v16, v39, (uint64_t)v38);

    LODWORD(v40) = v132;
    uint64_t v43 = objc_msgSend_numberWithFloat_(NSNumber, v41, v42, v40);
    objc_msgSend_setG_(v16, v44, (uint64_t)v43);

    uint64_t v47 = objc_msgSend_numberWithDouble_(NSNumber, v45, v46, v133);
    objc_msgSend_setH_(v16, v48, (uint64_t)v47);

    if (v134[0])
    {
      int v50 = NSNumber;
      uint64_t v51 = sub_24479DC2C(v134);
      uint64_t v53 = objc_msgSend_numberWithUnsignedChar_(v50, v52, *v51);
      objc_msgSend_setI_(v16, v54, (uint64_t)v53);
    }
    else
    {
      objc_msgSend_setI_(v16, v49, 0);
    }
    objc_msgSend_setArg4_(v115, v55, (uint64_t)v16);

    uint64_t v63 = objc_opt_new();
    unsigned __int8 v141 = v136;
    if (v136) {
      char v142 = v137;
    }
    sub_24479898C((uint64_t)&v116, (uint64_t)v135, &v141);
    while (sub_244798A20((uint64_t)&v116))
    {
      uint64_t v65 = objc_opt_new();
      uint64_t v67 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v66, v116);
      objc_msgSend_setA_(v65, v68, (uint64_t)v67);

      int v70 = objc_msgSend_numberWithBool_(NSNumber, v69, BYTE1(v116));
      objc_msgSend_setB_(v65, v71, (uint64_t)v70);

      long long v73 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v72, BYTE2(v116));
      objc_msgSend_setC_(v65, v74, (uint64_t)v73);

      long long v76 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v75, *((uint64_t *)&v116 + 1), v117);
      objc_msgSend_setD_(v65, v77, (uint64_t)v76);

      uint64_t v78 = v118;
      uint64_t v79 = v119;
      id v80 = [NSString alloc];
      uint64_t v82 = objc_msgSend_initWithBytes_length_encoding_(v80, v81, v78, v79, 4);
      objc_msgSend_setE_(v65, v83, (uint64_t)v82);

      uint64_t v86 = objc_msgSend_e(v65, v84, v85);

      if (!v86)
      {
        *(_OWORD *)a3 = xmmword_26519AFF8;
        *(void *)(a3 + 16) = 5273;

LABEL_41:
        id v62 = v115;
        goto LABEL_42;
      }
      uint64_t v88 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v87, v120);
      objc_msgSend_setF_(v65, v89, (uint64_t)v88);

      LODWORD(v90) = v121;
      long long v93 = objc_msgSend_numberWithFloat_(NSNumber, v91, v92, v90);
      objc_msgSend_setG_(v65, v94, (uint64_t)v93);

      uint64_t v97 = objc_msgSend_numberWithDouble_(NSNumber, v95, v96, v122);
      objc_msgSend_setH_(v65, v98, (uint64_t)v97);

      if (v123[0])
      {
        unsigned __int16 v100 = NSNumber;
        char v101 = sub_2446F9190(v123);
        uint64_t v103 = objc_msgSend_numberWithUnsignedChar_(v100, v102, *v101);
        objc_msgSend_setI_(v65, v104, (uint64_t)v103);
      }
      else
      {
        objc_msgSend_setI_(v65, v99, 0);
      }
      objc_msgSend_addObject_(v63, v105, (uint64_t)v65);
    }
    if (v124 && v124 != 33)
    {
      uint64_t v110 = v126;
      int v111 = v125;
      *(_DWORD *)a3 = v124;
      *(_DWORD *)(a3 + 4) = v111;
      *(void *)(a3 + 8) = v110;
      *(void *)(a3 + 16) = v127;
      goto LABEL_41;
    }
    id v62 = v115;
    objc_msgSend_setArg5_(v115, v64, (uint64_t)v63);

    uint64_t v63 = objc_opt_new();
    unsigned __int8 v141 = v139;
    if (v139) {
      char v142 = v140;
    }
    sub_2446D1930((uint64_t)&v116, (uint64_t)v138, &v141);
    while (sub_2446D19A0((uint64_t)&v116))
    {
      unsigned __int8 v107 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v106, v116);
      objc_msgSend_addObject_(v63, v108, (uint64_t)v107);
    }
    if (DWORD2(v116) == 33 || DWORD2(v116) == 0)
    {
      objc_msgSend_setArg6_(v115, v106, (uint64_t)v63);

      id v56 = v115;
      goto LABEL_43;
    }
    uint64_t v113 = v117;
    int v114 = HIDWORD(v116);
    *(_DWORD *)a3 = DWORD2(v116);
    *(_DWORD *)(a3 + 4) = v114;
    *(void *)(a3 + 8) = v113;
    *(void *)(a3 + 16) = v118;
LABEL_42:

    id v56 = 0;
  }
  else
  {
    *(_OWORD *)a3 = xmmword_26519AFE0;
    *(void *)(a3 + 16) = 5244;

    id v56 = 0;
    id v62 = v115;
  }
LABEL_43:

LABEL_44:

  return v56;
}

void sub_244BD9E64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

id sub_244BD9F44(int a1, uint64_t a2, uint64_t a3)
{
  if (a1)
  {
    id v4 = 0;
    *(_DWORD *)a3 = 182;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "zap-generated/MTREventTLVValueDecoder.mm";
    *(_DWORD *)(a3 + 16) = 5392;
  }
  else
  {
    unsigned int v14 = 0;
    unsigned __int8 v15 = 0;
    sub_24484AD1C((uint64_t)&v14, a2, (uint64_t)&v12);
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
    if (*(_DWORD *)a3)
    {
      id v4 = 0;
    }
    else
    {
      id v4 = objc_opt_new();
      uint64_t v6 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v5, v14);
      objc_msgSend_setCount_(v4, v7, (uint64_t)v6);

      long long v9 = objc_msgSend_numberWithUnsignedChar_(NSNumber, v8, v15);
      objc_msgSend_setFabricIndex_(v4, v10, (uint64_t)v9);
    }
  }

  return v4;
}

void sub_244BDA050(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

unsigned char *sub_244BDA068(unsigned char *a1)
{
  if (!*a1) {
    sub_244E1EE60();
  }
  return a1 + 2;
}

BOOL sub_244BDA08C(_DWORD *a1)
{
  if (a1[24] == -1) {
    return 0;
  }
  int v3 = a1 + 2;
  int v2 = a1[2];
  if (!v2)
  {
    sub_244CB4E58((uint64_t)(a1 + 8), &v5);
    *(_OWORD *)int v3 = v5;
    *((void *)v3 + 2) = v6;
    int v2 = *v3;
    if (!*v3)
    {
      *a1 = 0;
      sub_24481EC00((uint64_t)a1, (uint64_t)(a1 + 8), (uint64_t)&v5);
      *(_OWORD *)int v3 = v5;
      *((void *)v3 + 2) = v6;
      int v2 = a1[2];
    }
  }
  return v2 == 0;
}

uint64_t sub_244BDA134(void *a1, void *a2)
{
  id v3 = a2;
  int v6 = objc_msgSend_unsignedLongLongValue(a1, v4, v5);
  unsigned int v9 = objc_msgSend_unsignedLongLongValue(v3, v7, v8);
  if (v6 > 256)
  {
    if (v6 == 257)
    {
      uint64_t v12 = sub_244BDA218(v9);
    }
    else
    {
      unsigned int v13 = (0xDu >> (v9 & 0xF)) & 1;
      if (v9 >= 4) {
        unsigned int v13 = 0;
      }
      if (v6 != 1294) {
        unsigned int v13 = 0;
      }
      if (v6 == 1107) {
        uint64_t v12 = v9 < 2;
      }
      else {
        uint64_t v12 = v13;
      }
    }
  }
  else
  {
    BOOL v10 = v9 < 3;
    BOOL v11 = v9 - 1 < 7;
    if (v6 != 153) {
      BOOL v11 = 0;
    }
    if (v6 != 60) {
      BOOL v10 = v11;
    }
    if (v6 == -918523) {
      uint64_t v12 = v9 == 18;
    }
    else {
      uint64_t v12 = v10;
    }
  }

  return v12;
}

void sub_244BDA204(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244BDA218(unsigned int a1)
{
  uint64_t result = 1;
  if (a1 > 0x29 || ((1 << a1) & 0x3C42400000BLL) == 0)
  {
    unsigned int v3 = a1 - 323551232;
    if (v3 > 4 || v3 == 1) {
      return 0;
    }
  }
  return result;
}

void sub_244BDA32C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BDA3EC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_244BDA51C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v2);
  _Unwind_Resume(a1);
}

void sub_244BDA670(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BDA848(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v2);
  _Unwind_Resume(a1);
}

void sub_244BDA96C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_244BDAA90(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BDAB2C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void -[MTRAsyncCallbackQueueWorkItem setCancelHandler:](MTRAsyncCallbackQueueWorkItem *self, SEL a2, dispatch_block_t cancelHandler)
{
  id v6 = cancelHandler;
  os_unfair_lock_lock(&self->_lock);
  if (!self->_enqueued)
  {
    id v4 = (void *)MEMORY[0x2456969D0](v6);
    id v5 = self->_cancelHandler;
    self->_cancelHandler = v4;
  }
  os_unfair_lock_unlock(&self->_lock);
}

void sub_244BDACBC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BDAD1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244BDADE4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BDADF4(uint64_t a1)
{
  os_unfair_lock_lock((os_unfair_lock_t)(*(void *)(a1 + 32) + 12));
  uint64_t v2 = MEMORY[0x2456969D0](*(void *)(*(void *)(a1 + 32) + 16));
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v7 = (void (**)(id, void, uint64_t))v2;
  if (v2)
  {
    uint64_t v4 = *(void *)(v3 + 40);
    *(void *)(v3 + 40) = v4 + 1;
    os_unfair_lock_unlock((os_unfair_lock_t)(*(void *)(a1 + 32) + 12));
    v7[2](v7, *(void *)(a1 + 40), v4);
  }
  else
  {
    os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 12));
    objc_msgSend_endWork(*(void **)(a1 + 32), v5, v6);
  }
}

void sub_244BDAE98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244BDAF80(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244BDAF90(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BDB0CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244BDB0E0(void *a1)
{
  id v1 = a1;
  unint64_t v4 = objc_msgSend_integerValue(v1, v2, v3);
  if (!v1 || v4 > 0xFF || (unsigned __int8 v5 = v4, ((char)v4 & 0x80000000) == 0)) {
    sub_244B27D00(@"tag must be a vendor tag (0x80 - 0xFF)");
  }

  return v5;
}

void sub_244BDB134(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BDB218(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

char *sub_244BDB230(void *a1, uint64_t a2)
{
  if (a1)
  {
    v8.receiver = a1;
    v8.super_class = (Class)MTROptionalQRCodeInfo;
    uint64_t v3 = (char *)objc_msgSendSuper2(&v8, sel_init);
    *((void *)v3 + 1) = *(void *)a2;
    std::string::operator=((std::string *)(v3 + 16), (const std::string *)(a2 + 8));
    *((_DWORD *)v3 + 10) = *(_DWORD *)(a2 + 32);
    if (v3[8] < 0 && objc_msgSend_type(v3, v4, v5))
    {
      uint64_t v3 = v3;
      uint64_t v6 = v3;
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v6 = 0;
LABEL_6:

  return v6;
}

void sub_244BDB2E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BDB2F4(uint64_t a1@<X0>, std::string *a2@<X1>, uint64_t a3@<X8>)
{
  if (a1)
  {
    int v5 = *(_DWORD *)(a1 + 12);
    if (v5 == 2)
    {
      char v7 = *(unsigned char *)(a1 + 8);
      int v8 = *(_DWORD *)(a1 + 40);
      sub_244D8256C(a2, v7, v8, a3);
    }
    else if (v5 == 1)
    {
      char v6 = *(unsigned char *)(a1 + 8);
      if (*(char *)(a1 + 39) < 0)
      {
        sub_2446DA130(__p, *(void **)(a1 + 16), *(void *)(a1 + 24));
      }
      else
      {
        *(_OWORD *)__p = *(_OWORD *)(a1 + 16);
        uint64_t v10 = *(void *)(a1 + 32);
      }
      sub_244D82470(a2, v6, (uint64_t)__p, a3);
      if (SHIBYTE(v10) < 0) {
        operator delete(__p[0]);
      }
    }
    else
    {
      *(_DWORD *)a3 = 3;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/MTRSetupPayload.mm";
      *(_DWORD *)(a3 + 16) = 83;
    }
  }
  else
  {
    *(void *)a3 = 0;
    *(void *)(a3 + 8) = 0;
    *(void *)(a3 + 16) = 0;
  }
}

void sub_244BDB3F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_244BDB640(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BDB70C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BDB7D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

unsigned __int8 *sub_244BDB7E4(void *a1, void *a2)
{
  uint64_t v17 = *MEMORY[0x263EF8340];
  id v3 = a2;
  if (!a1)
  {
    char v7 = 0;
    goto LABEL_15;
  }
  v12.receiver = a1;
  v12.super_class = (Class)MTRSetupPayload;
  unint64_t v4 = (unsigned __int8 *)objc_msgSendSuper2(&v12, sel_init);
  long long v10 = 0uLL;
  uint64_t v11 = 0;
  sub_244BDBD34((uint64_t)v4, v3, &v10);
  if (v10)
  {
    int v5 = sub_244CC8484(0, "NotSpecified");
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      *(_OWORD *)unsigned int v13 = v10;
      uint64_t v14 = v11;
      char v6 = sub_244CB7B34((const char **)v13, 1);
      *(_DWORD *)buf = 136315138;
      id v16 = v6;
      _os_log_impl(&dword_2446BD000, v5, OS_LOG_TYPE_ERROR, "Failed to parse QR Code payload: %s", buf, 0xCu);
    }

    if (sub_244CC4E58(1u))
    {
      *(_OWORD *)unsigned int v13 = v10;
      uint64_t v14 = v11;
      sub_244CB7B34((const char **)v13, 1);
      sub_244CC4DE0(0, 1);
    }
LABEL_13:
    char v7 = 0;
    goto LABEL_14;
  }
  if ((sub_244D82274(v4 + 8, 1) & 1) == 0)
  {
    int v8 = sub_244CC8484(0, "NotSpecified");
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)unsigned int v13 = 0;
      _os_log_impl(&dword_2446BD000, v8, OS_LOG_TYPE_ERROR, "Invalid QR Code payload", v13, 2u);
    }

    if (sub_244CC4E58(1u)) {
      sub_244CC4DE0(0, 1);
    }
    goto LABEL_13;
  }
  char v7 = v4;
LABEL_14:

LABEL_15:
  return v7;
}

void sub_244BDB9E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

char *sub_244BDBA20(void *a1, void *a2)
{
  uint64_t v27 = *MEMORY[0x263EF8340];
  id v3 = a2;
  if (!a1)
  {
    objc_super v12 = 0;
    goto LABEL_27;
  }
  v22.receiver = a1;
  v22.super_class = (Class)MTRSetupPayload;
  unint64_t v4 = (char *)objc_msgSendSuper2(&v22, sel_init);
  if (v3) {
    int v5 = v3;
  }
  else {
    int v5 = &stru_26F969DC8;
  }
  char v6 = v5;
  unsigned int v9 = (char *)objc_msgSend_UTF8String(v6, v7, v8);
  sub_2446DBD28(v20, v9);
  if (SHIBYTE(v21) < 0)
  {
    sub_2446DA130(__p, v20[0], (unint64_t)v20[1]);
  }
  else
  {
    *(_OWORD *)__p = *(_OWORD *)v20;
    uint64_t v18 = v21;
  }
  sub_244BDD958(&v19, (long long *)__p);
  if (SHIBYTE(v18) < 0) {
    operator delete(__p[0]);
  }
  long long v15 = 0uLL;
  uint64_t v16 = 0;
  sub_244D7FE48((uint64_t)&v19, (uint64_t)(v4 + 8), (uint64_t)&v15);
  if (v15)
  {
    long long v10 = sub_244CC8484(0, "NotSpecified");
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      *(_OWORD *)uint64_t v23 = v15;
      uint64_t v24 = v16;
      uint64_t v11 = sub_244CB7B34((const char **)v23, 1);
      *(_DWORD *)buf = 136315138;
      unsigned __int8 v26 = v11;
      _os_log_impl(&dword_2446BD000, v10, OS_LOG_TYPE_ERROR, "Failed to parse Manual Pairing Code: %s", buf, 0xCu);
    }

    if (sub_244CC4E58(1u))
    {
      *(_OWORD *)uint64_t v23 = v15;
      uint64_t v24 = v16;
      sub_244CB7B34((const char **)v23, 1);
      sub_244CC4DE0(0, 1);
    }
LABEL_21:
    objc_super v12 = 0;
    goto LABEL_22;
  }
  if ((sub_244D8235C(v4 + 8, 1) & 1) == 0)
  {
    unsigned int v13 = sub_244CC8484(0, "NotSpecified");
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)uint64_t v23 = 0;
      _os_log_impl(&dword_2446BD000, v13, OS_LOG_TYPE_ERROR, "Invalid Manual Pairing Code", v23, 2u);
    }

    if (sub_244CC4E58(1u)) {
      sub_244CC4DE0(0, 1);
    }
    goto LABEL_21;
  }
  objc_super v12 = v4;
LABEL_22:
  if (SHIBYTE(v19.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v19.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v21) < 0) {
    operator delete(v20[0]);
  }

LABEL_27:
  return v12;
}

void sub_244BDBCB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31)
{
  if (a25 < 0) {
    operator delete(__p);
  }
  if (a31 < 0) {
    operator delete(a26);
  }

  _Unwind_Resume(a1);
}

void sub_244BDBD34(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  int v5 = a2;
  char v6 = v5;
  if (a1)
  {
    if (!v5) {
      int v5 = &stru_26F969DC8;
    }
    char v7 = v5;
    long long v10 = (char *)objc_msgSend_UTF8String(v7, v8, v9);
    sub_2446DBD28(v15, v10);
    if (SHIBYTE(v16) < 0)
    {
      sub_2446DA130(&v11, v15[0], (unint64_t)v15[1]);
    }
    else
    {
      long long v11 = *(_OWORD *)v15;
      uint64_t v12 = v16;
    }
    *(_OWORD *)__p = v11;
    uint64_t v14 = v12;
    uint64_t v12 = 0;
    long long v11 = 0uLL;
    sub_244D81AF8((uint64_t)__p, a1 + 8, a3);
    if (SHIBYTE(v14) < 0) {
      operator delete(__p[0]);
    }
    if (SHIBYTE(v16) < 0) {
      operator delete(v15[0]);
    }
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
  }
}

void sub_244BDBE18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a24 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_244BDBEF8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t **sub_244BDBF10(void *a1, char *a2)
{
  if (!a1) {
    return 0;
  }
  v9.receiver = a1;
  v9.super_class = (Class)MTRSetupPayload;
  id v3 = (char *)objc_msgSendSuper2(&v9, sel_init);
  unint64_t v4 = (uint64_t **)v3;
  int v5 = *(_DWORD *)(a2 + 3);
  *((_DWORD *)v3 + 2) = *(_DWORD *)a2;
  *(_DWORD *)(v3 + 11) = v5;
  int v6 = a2[7];
  v3[15] = v6;
  if (v6) {
    uint8_t v3[16] = a2[8];
  }
  uint64_t v7 = *(void *)(a2 + 10);
  *((_WORD *)v3 + 13) = *((_WORD *)a2 + 9);
  *(void *)(v3 + 18) = v7;
  if (v3 + 8 != a2)
  {
    sub_244BDDA80((uint64_t **)v3 + 4, *((const std::string ***)a2 + 3), (const std::string **)a2 + 4);
    sub_244BDDDA0(v4 + 7, *((const std::string ***)a2 + 6), (const std::string **)a2 + 7);
  }
  return v4;
}

void sub_244BDBFDC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

unsigned char *sub_244BDC0F4(unsigned char *a1)
{
  if (!*a1) {
    sub_244E20B60();
  }
  return a1 + 1;
}

uint64_t sub_244BDC1A4(unsigned char *a1)
{
  if (a1[2]) {
    sub_244E20C20();
  }
  return *(unsigned __int16 *)a1;
}

void sub_244BDC1C8(uint64_t a1, uint64_t a2, int a3)
{
  if (a1)
  {
    uint64_t v5 = a1 + 18;
    if (a3)
    {
      sub_244BDC244(v5, a2 & 0xF);
      uint64_t v7 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v6, a2);
      uint64_t v8 = *(void **)(a1 + 80);
      *(void *)(a1 + 80) = v7;
    }
    else
    {
      sub_244B93A14(v5, a2);
      uint64_t v8 = *(void **)(a1 + 80);
      *(void *)(a1 + 80) = 0;
    }
  }
}

uint64_t sub_244BDC244(uint64_t result, unsigned int a2)
{
  if (a2 >= 0x10) {
    sub_244E20CE0();
  }
  *(_WORD *)uint64_t result = a2;
  *(unsigned char *)(result + 2) = 1;
  return result;
}

void sub_244BDC2D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244BDC370(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244BDC45C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_244BDC634(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  std::string v19 = v18;

  _Unwind_Resume(a1);
}

void sub_244BDC77C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void **a12)
{
  a12 = (void **)&a9;
  sub_244BDE050(&a12);
  _Unwind_Resume(a1);
}

void sub_244BDC854(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_244BDCA14(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BDCB14(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

id sub_244BDCB3C(uint64_t a1, int a2)
{
  uint64_t v20 = *MEMORY[0x263EF8340];
  if (!a1)
  {
    int v6 = 0;
    goto LABEL_18;
  }
  sub_244BDDFB4((uint64_t)v12, (int *)(a1 + 8));
  char v15 = a2;
  __p[0] = 0;
  __p[1] = 0;
  uint64_t v11 = 0;
  long long v8 = 0uLL;
  uint64_t v9 = 0;
  sub_244D80788(v12, (uint64_t)__p, (uint64_t)&v8);
  if (a2)
  {
    if (v8)
    {
      unint64_t v4 = sub_244CC8484(0, "NotSpecified");
      if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      {
        long long v16 = v8;
        uint64_t v17 = v9;
        uint64_t v5 = sub_244CB7B34((const char **)&v16, 1);
        *(_DWORD *)buf = 136315138;
        std::string v19 = v5;
        _os_log_impl(&dword_2446BD000, v4, OS_LOG_TYPE_ERROR, "Internal error: %s", buf, 0xCu);
      }

      if (sub_244CC4E58(1u))
      {
        long long v16 = v8;
        uint64_t v17 = v9;
        sub_244CB7B34((const char **)&v16, 1);
        sub_244CC4DE0(0, 1);
      }
      abort();
    }
    goto LABEL_11;
  }
  if (!v8)
  {
LABEL_11:
    if (v11 >= 0) {
      objc_msgSend_stringWithUTF8String_(NSString, v3, (uint64_t)__p);
    }
    else {
    int v6 = objc_msgSend_stringWithUTF8String_(NSString, v3, (uint64_t)__p[0]);
    }
    goto LABEL_15;
  }
  int v6 = 0;
LABEL_15:
  if (SHIBYTE(v11) < 0) {
    operator delete(__p[0]);
  }
  sub_2447E6298((uint64_t)v14, v14[1]);
  sub_2447E6298((uint64_t)v13, v13[1]);
LABEL_18:

  return v6;
}

void sub_244BDCD0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, char a20)
{
  if (a19 < 0) {
    operator delete(__p);
  }
  sub_2447DD2CC((uint64_t)&a20);
  _Unwind_Resume(a1);
}

void sub_244BDCE18(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_2447DD2CC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_244BDCE78(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BDCF14(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BDD0AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BDD2AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244BDD540(_Unwind_Exception *a1)
{
  uint64_t v5 = v4;

  _Unwind_Resume(a1);
}

void sub_244BDD7F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BDD8B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

std::string *sub_244BDD958(std::string *a1, long long *a2)
{
  uint64_t v2 = a1;
  long long v3 = *a2;
  a1->__r_.__value_.__r.__words[2] = *((void *)a2 + 2);
  *(_OWORD *)&a1->__r_.__value_.__l.__data_ = v3;
  *((void *)a2 + 1) = 0;
  *((void *)a2 + 2) = 0;
  *(void *)a2 = 0;
  if (SHIBYTE(a1->__r_.__value_.__r.__words[2]) < 0)
  {
    a1 = (std::string *)a1->__r_.__value_.__r.__words[0];
    std::string::size_type size = v2->__r_.__value_.__l.__size_;
  }
  else
  {
    std::string::size_type size = HIBYTE(a1->__r_.__value_.__r.__words[2]);
  }
  unsigned __int8 v9 = 45;
  uint64_t v5 = sub_244BDDA18(a1, (unsigned __int8 *)a1 + size, &v9);
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    uint64_t v7 = (std::string *)v2->__r_.__value_.__r.__words[0];
    int v6 = (char *)(v2->__r_.__value_.__r.__words[0] + v2->__r_.__value_.__l.__size_);
  }
  else
  {
    int v6 = (char *)v2 + HIBYTE(v2->__r_.__value_.__r.__words[2]);
    uint64_t v7 = v2;
  }
  std::string::erase(v2, v5 - (unsigned __int8 *)v7, v6 - (char *)v5);
  return v2;
}

void sub_244BDD9F8(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

unsigned __int8 *sub_244BDDA18(void *a1, unsigned __int8 *a2, unsigned __int8 *a3)
{
  uint64_t result = (unsigned __int8 *)memchr(a1, (char)*a3, a2 - (unsigned char *)a1);
  if (!result) {
    uint64_t result = a2;
  }
  int v6 = result + 1;
  if (result != a2 && v6 != a2)
  {
    do
    {
      int v8 = *v6;
      if (v8 != *a3) {
        *result++ = v8;
      }
      ++v6;
    }
    while (v6 != a2);
  }
  return result;
}

uint64_t **sub_244BDDA80(uint64_t **result, const std::string **a2, const std::string **a3)
{
  uint64_t v5 = result;
  if (result[2])
  {
    int v6 = *result;
    uint64_t v7 = result[1];
    *uint64_t result = (uint64_t *)(result + 1);
    uint64_t v7[2] = 0;
    result[1] = 0;
    result[2] = 0;
    if (v6[1]) {
      int v8 = (std::string *)v6[1];
    }
    else {
      int v8 = (std::string *)v6;
    }
    uint64_t v14 = result;
    char v15 = v8;
    long long v16 = (std::string::__raw *)v8;
    if (v8)
    {
      char v15 = (std::string *)sub_244BDDC70((uint64_t)v8);
      if (a2 != a3)
      {
        unsigned __int8 v9 = (const std::string *)a2;
        do
        {
          v8[1].__r_.__value_.__s.__data_[8] = v9[1].__r_.__value_.__s.__data_[8];
          v8[1].__r_.__value_.__r.__words[2] = v9[1].__r_.__value_.__r.__words[2];
          std::string::operator=(v8 + 2, v9 + 2);
          LODWORD(v8[3].__r_.__value_.__l.__data_) = v9[3].__r_.__value_.__l.__data_;
          sub_244BDDC00(v5, (uint64_t)v16);
          int v8 = v15;
          long long v16 = (std::string::__raw *)v15;
          if (v15) {
            char v15 = (std::string *)sub_244BDDC70((uint64_t)v15);
          }
          std::string::size_type size = (std::string *)v9->__r_.__value_.__l.__size_;
          if (size)
          {
            do
            {
              a2 = (const std::string **)size;
              std::string::size_type size = (std::string *)size->__r_.__value_.__r.__words[0];
            }
            while (size);
          }
          else
          {
            do
            {
              a2 = (const std::string **)v9->__r_.__value_.__r.__words[2];
              BOOL v11 = *a2 == v9;
              unsigned __int8 v9 = (const std::string *)a2;
            }
            while (!v11);
          }
          if (!v8) {
            break;
          }
          unsigned __int8 v9 = (const std::string *)a2;
        }
        while (a2 != a3);
      }
    }
    uint64_t result = (uint64_t **)sub_244BDDCC4((uint64_t)&v14);
  }
  if (a2 != a3)
  {
    do
    {
      uint64_t result = (uint64_t **)sub_244BDDD1C((uint64_t)v5, (uint64_t)(a2 + 4));
      uint64_t v12 = a2[1];
      if (v12)
      {
        do
        {
          unsigned int v13 = (const std::string **)v12;
          uint64_t v12 = (const std::string *)v12->__r_.__value_.__r.__words[0];
        }
        while (v12);
      }
      else
      {
        do
        {
          unsigned int v13 = (const std::string **)a2[2];
          BOOL v11 = *v13 == (const std::string *)a2;
          a2 = v13;
        }
        while (!v11);
      }
      a2 = v13;
    }
    while (v13 != a3);
  }
  return result;
}

void sub_244BDDBEC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_244BDDCC4((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_244BDDC00(uint64_t **a1, uint64_t a2)
{
  long long v3 = a1 + 1;
  unint64_t v4 = a1[1];
  if (v4)
  {
    do
    {
      while (1)
      {
        long long v3 = (uint64_t **)v4;
        if (*(unsigned __int8 *)(a2 + 32) >= *((unsigned __int8 *)v4 + 32)) {
          break;
        }
        unint64_t v4 = (uint64_t *)*v4;
        uint64_t v5 = v3;
        if (!*v3) {
          goto LABEL_8;
        }
      }
      unint64_t v4 = (uint64_t *)v4[1];
    }
    while (v4);
    uint64_t v5 = v3 + 1;
  }
  else
  {
    uint64_t v5 = a1 + 1;
  }
LABEL_8:
  sub_2446DA06C(a1, (uint64_t)v3, v5, (uint64_t *)a2);
  return a2;
}

void *sub_244BDDC70(uint64_t a1)
{
  uint64_t result = *(void **)(a1 + 16);
  if (result)
  {
    long long v3 = (void *)*result;
    if (*result == a1)
    {
      *uint64_t result = 0;
      while (1)
      {
        unint64_t v4 = (void *)result[1];
        if (!v4) {
          break;
        }
        do
        {
          uint64_t result = v4;
          unint64_t v4 = (void *)*v4;
        }
        while (v4);
      }
    }
    else
    {
      for (result[1] = 0; v3; long long v3 = (void *)result[1])
      {
        do
        {
          uint64_t result = v3;
          long long v3 = (void *)*v3;
        }
        while (v3);
      }
    }
  }
  return result;
}

uint64_t sub_244BDDCC4(uint64_t a1)
{
  sub_2447E6298(*(void *)a1, *(char **)(a1 + 16));
  uint64_t v2 = *(void *)(a1 + 8);
  if (v2)
  {
    uint64_t v3 = *(void *)(v2 + 16);
    if (v3)
    {
      do
      {
        uint64_t v2 = v3;
        uint64_t v3 = *(void *)(v3 + 16);
      }
      while (v3);
      *(void *)(a1 + 8) = v2;
    }
    sub_2447E6298(*(void *)a1, (char *)v2);
  }
  return a1;
}

uint64_t *sub_244BDDD1C(uint64_t a1, uint64_t a2)
{
  sub_2447E6148(a1, a2, (uint64_t)&v7);
  uint64_t v3 = (uint64_t **)(a1 + 8);
  unint64_t v4 = *(uint64_t **)(a1 + 8);
  if (v4)
  {
    do
    {
      while (1)
      {
        uint64_t v3 = (uint64_t **)v4;
        if (*((unsigned __int8 *)v7 + 32) >= *((unsigned __int8 *)v4 + 32)) {
          break;
        }
        unint64_t v4 = (uint64_t *)*v4;
        uint64_t v5 = v3;
        if (!*v3) {
          goto LABEL_8;
        }
      }
      unint64_t v4 = (uint64_t *)v4[1];
    }
    while (v4);
    uint64_t v5 = v3 + 1;
  }
  else
  {
    uint64_t v5 = (uint64_t **)(a1 + 8);
  }
LABEL_8:
  sub_2446DA06C((uint64_t **)a1, (uint64_t)v3, v5, v7);
  return v7;
}

uint64_t **sub_244BDDDA0(uint64_t **result, const std::string **a2, const std::string **a3)
{
  uint64_t v5 = result;
  if (result[2])
  {
    int v6 = *result;
    uint64_t v7 = result[1];
    *uint64_t result = (uint64_t *)(result + 1);
    uint64_t v7[2] = 0;
    result[1] = 0;
    result[2] = 0;
    if (v6[1]) {
      int v8 = (std::string *)v6[1];
    }
    else {
      int v8 = (std::string *)v6;
    }
    char v15 = result;
    long long v16 = v8;
    uint64_t v17 = (std::string::__raw *)v8;
    if (v8)
    {
      long long v16 = (std::string *)sub_244BDDC70((uint64_t)v8);
      if (a2 != a3)
      {
        unsigned __int8 v9 = (const std::string *)a2;
        do
        {
          v8[1].__r_.__value_.__s.__data_[8] = v9[1].__r_.__value_.__s.__data_[8];
          v8[1].__r_.__value_.__r.__words[2] = v9[1].__r_.__value_.__r.__words[2];
          std::string::operator=(v8 + 2, v9 + 2);
          LODWORD(v8[3].__r_.__value_.__l.__data_) = v9[3].__r_.__value_.__l.__data_;
          long long v10 = *(_OWORD *)&v9[3].__r_.__value_.__r.__words[1];
          v8[4].__r_.__value_.__r.__words[0] = v9[4].__r_.__value_.__r.__words[0];
          *(_OWORD *)&v8[3].__r_.__value_.__r.__words[1] = v10;
          sub_244BDDC00(v5, (uint64_t)v17);
          int v8 = v16;
          uint64_t v17 = (std::string::__raw *)v16;
          if (v16) {
            long long v16 = (std::string *)sub_244BDDC70((uint64_t)v16);
          }
          std::string::size_type size = (std::string *)v9->__r_.__value_.__l.__size_;
          if (size)
          {
            do
            {
              a2 = (const std::string **)size;
              std::string::size_type size = (std::string *)size->__r_.__value_.__r.__words[0];
            }
            while (size);
          }
          else
          {
            do
            {
              a2 = (const std::string **)v9->__r_.__value_.__r.__words[2];
              BOOL v12 = *a2 == v9;
              unsigned __int8 v9 = (const std::string *)a2;
            }
            while (!v12);
          }
          if (!v8) {
            break;
          }
          unsigned __int8 v9 = (const std::string *)a2;
        }
        while (a2 != a3);
      }
    }
    uint64_t result = (uint64_t **)sub_244BDDCC4((uint64_t)&v15);
  }
  if (a2 != a3)
  {
    do
    {
      uint64_t result = (uint64_t **)sub_244BDDF30((uint64_t)v5, (uint64_t)(a2 + 4));
      unsigned int v13 = a2[1];
      if (v13)
      {
        do
        {
          uint64_t v14 = (const std::string **)v13;
          unsigned int v13 = (const std::string *)v13->__r_.__value_.__r.__words[0];
        }
        while (v13);
      }
      else
      {
        do
        {
          uint64_t v14 = (const std::string **)a2[2];
          BOOL v12 = *v14 == (const std::string *)a2;
          a2 = v14;
        }
        while (!v12);
      }
      a2 = v14;
    }
    while (v14 != a3);
  }
  return result;
}

void sub_244BDDF1C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_244BDDCC4((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_244BDDF30(uint64_t a1, uint64_t a2)
{
  sub_2447E6464(a1, a2, (uint64_t)&v7);
  uint64_t v3 = (uint64_t **)(a1 + 8);
  unint64_t v4 = *(uint64_t **)(a1 + 8);
  if (v4)
  {
    do
    {
      while (1)
      {
        uint64_t v3 = (uint64_t **)v4;
        if (*((unsigned __int8 *)v7 + 32) >= *((unsigned __int8 *)v4 + 32)) {
          break;
        }
        unint64_t v4 = (uint64_t *)*v4;
        uint64_t v5 = v3;
        if (!*v3) {
          goto LABEL_8;
        }
      }
      unint64_t v4 = (uint64_t *)v4[1];
    }
    while (v4);
    uint64_t v5 = v3 + 1;
  }
  else
  {
    uint64_t v5 = (uint64_t **)(a1 + 8);
  }
LABEL_8:
  sub_2446DA06C((uint64_t **)a1, (uint64_t)v3, v5, v7);
  return v7;
}

uint64_t sub_244BDDFB4(uint64_t a1, int *a2)
{
  int v4 = *a2;
  *(_DWORD *)(a1 + 3) = *(int *)((char *)a2 + 3);
  *(_DWORD *)a1 = v4;
  int v5 = *((unsigned __int8 *)a2 + 7);
  *(unsigned char *)(a1 + 7) = v5;
  if (v5) {
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  }
  uint64_t v6 = *(void *)((char *)a2 + 10);
  *(_WORD *)(a1 + 18) = *((_WORD *)a2 + 9);
  *(void *)(a1 + 10) = v6;
  sub_2447E5E38((uint64_t *)(a1 + 24), (uint64_t)(a2 + 6));
  sub_2447E62FC((uint64_t *)(a1 + 48), (uint64_t)(a2 + 12));
  *(unsigned char *)(a1 + 72) = 0;
  return a1;
}

void sub_244BDE038(_Unwind_Exception *a1)
{
  sub_2447E6298(v2, *(char **)(v1 + 32));
  _Unwind_Resume(a1);
}

void sub_244BDE050(void ***a1)
{
  uint64_t v2 = *a1;
  if (*v2)
  {
    sub_244BDE0A4((uint64_t *)v2);
    uint64_t v3 = **a1;
    operator delete(v3);
  }
}

void sub_244BDE0A4(uint64_t *a1)
{
  uint64_t v2 = *a1;
  for (uint64_t i = a1[1]; i != v2; i -= 40)
  {
    if (*(char *)(i - 9) < 0) {
      operator delete(*(void **)(i - 32));
    }
  }
  a1[1] = v2;
}

void sub_244BDE0F4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, __n128 *a4@<X8>)
{
  int v7 = *(_DWORD *)(a2 + 8);
  if (v7 == 65528)
  {
    char v15 = *(int **)(*(void *)(a1 + 24) + 40);
    long long v16 = sub_244BDE500;
LABEL_22:
    sub_244BDE32C((unsigned __int16 *)a2, a3, (void (*)(void *__return_ptr, void *, unsigned __int16 *, BOOL (*)(int, uint64_t), unsigned char *))v16, 0, v15, a4);
    return;
  }
  if (v7 == 65529)
  {
    char v15 = *(int **)(*(void *)(a1 + 24) + 32);
    long long v16 = sub_244BDE4DC;
    goto LABEL_22;
  }
  if (v7 != 65531) {
    sub_244E20E60((_DWORD *)(a2 + 8));
  }
  *(unsigned char *)(a3 + 68) = 1;
  a4->n128_u64[1] = 0;
  a4[1].n128_u64[0] = 0;
  a4->n128_u64[0] = 0;
  sub_244CB2A1C(a3, a4);
  if (!a4->n128_u32[0])
  {
    a4->n128_u64[0] = 0;
    a4->n128_u64[1] = 0;
    a4[1].n128_u64[0] = 0;
    uint64_t v8 = *(void *)(a1 + 24);
    uint64_t v9 = *(unsigned __int16 *)(v8 + 16);
    if (*(_WORD *)(v8 + 16))
    {
      char v10 = 0;
      uint64_t v11 = 0;
      do
      {
        unsigned int v19 = 0;
        unsigned int v12 = *(_DWORD *)(*(void *)(*(void *)(a1 + 24) + 8) + 16 * v11 + 8);
        unsigned int v19 = v12;
        if ((v10 & 1) == 0 && v12 >= 0xFFFC)
        {
          uint64_t v13 = 0;
          while (1)
          {
            __n128 v17 = 0uLL;
            unint64_t v18 = 0;
            sub_244BC77E8((unsigned __int16 *)a3, (uint64_t)&v17);
            if (v17.n128_u32[0]) {
              goto LABEL_25;
            }
            v13 += 4;
            if (v13 == 12)
            {
              char v10 = 1;
              break;
            }
          }
        }
        __n128 v17 = 0uLL;
        unint64_t v18 = 0;
        sub_244BC77E8((unsigned __int16 *)a3, (uint64_t)&v17);
        if (v17.n128_u32[0]) {
          goto LABEL_25;
        }
        ++v11;
      }
      while (v11 != v9);
      if ((v10 & 1) == 0) {
        goto LABEL_16;
      }
LABEL_19:
      a4->n128_u32[0] = 0;
      a4->n128_u64[1] = (unint64_t)"/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/ut"
                                          "il/ember-global-attribute-access-interface.cpp";
      a4[1].n128_u32[0] = 59;
    }
    else
    {
LABEL_16:
      uint64_t v14 = 0;
      while (1)
      {
        __n128 v17 = 0uLL;
        unint64_t v18 = 0;
        sub_244BC77E8((unsigned __int16 *)a3, (uint64_t)&v17);
        if (v17.n128_u32[0]) {
          break;
        }
        v14 += 4;
        if (v14 == 12) {
          goto LABEL_19;
        }
      }
LABEL_25:
      *a4 = v17;
      a4[1].n128_u64[0] = v18;
    }
    sub_244CB2B40(a3);
    if (!a4->n128_u32[0])
    {
      *(_WORD *)(a3 + 74) = -1;
      *(unsigned char *)(a3 + 76) = 0;
    }
  }
}

void sub_244BDE32C(unsigned __int16 *a1@<X0>, uint64_t a2@<X1>, void (*a3)(void *__return_ptr, void *, unsigned __int16 *, BOOL (*)(int a1, uint64_t a2), unsigned char *)@<X2>, uint64_t a4@<X3>, int *a5@<X4>, __n128 *a6@<X8>)
{
  *(unsigned char *)(a2 + 68) = 1;
  a6->n128_u64[1] = 0;
  a6[1].n128_u64[0] = 0;
  a6->n128_u64[0] = 0;
  sub_244CB2A1C(a2, a6);
  if (!a6->n128_u32[0])
  {
    a6->n128_u64[0] = 0;
    a6->n128_u64[1] = 0;
    a6[1].n128_u64[0] = 0;
    unint64_t v18 = (unsigned __int16 *)a2;
    unsigned int v12 = (uint64_t *)sub_244DD5868();
    uint64_t v13 = sub_244DD5AF4(v12, *a1, *((_DWORD *)a1 + 1));
    if (!v13) {
      goto LABEL_6;
    }
    *(void *)uint64_t v20 = &v18;
    *(_DWORD *)&v20[8] = 0;
    *(void *)&v20[16] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/util/ember-global-"
                          "attribute-access-interface.cpp";
    LODWORD(v21) = 91;
    memset(v19, 0, sizeof(v19));
    uint64_t v14 = (void *)(v13 + (a4 >> 1));
    if (a4) {
      a3 = *(void (**)(void *__return_ptr, void *, unsigned __int16 *, BOOL (*)(int, uint64_t), unsigned char *))(*v14 + a3);
    }
    a3(v19, v14, a1, sub_244BDE574, v20);
    if (LODWORD(v19[0]) != 45)
    {
      *a6 = *(__n128 *)&v20[8];
      unint64_t v17 = v21;
LABEL_14:
      a6[1].n128_u64[0] = v17;
    }
    else
    {
LABEL_6:
      if (a5)
      {
        for (int i = *a5; i != -1; int i = v16)
        {
          memset(v20, 0, sizeof(v20));
          sub_244BC77E8(v18, (uint64_t)v20);
          if (*(_DWORD *)v20)
          {
            *a6 = *(__n128 *)v20;
            unint64_t v17 = *(void *)&v20[16];
            goto LABEL_14;
          }
          int v16 = a5[1];
          ++a5;
        }
      }
      a6->n128_u32[0] = 0;
      a6->n128_u64[1] = (unint64_t)"/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/ut"
                                          "il/ember-global-attribute-access-interface.cpp";
      a6[1].n128_u32[0] = 115;
    }
    sub_244CB2B40(a2);
    if (!a6->n128_u32[0])
    {
      *(_WORD *)(a2 + 74) = -1;
      *(unsigned char *)(a2 + 76) = 0;
    }
  }
}

uint64_t sub_244BDE4DC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)a1 + 24))();
}

uint64_t sub_244BDE500(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)a1 + 32))();
}

void *sub_244BDE524(void *result)
{
  *uint64_t result = &unk_26F944050;
  return result;
}

void sub_244BDE544(void *a1)
{
  *a1 = &unk_26F944050;
  JUMPOUT(0x245695FA0);
}

BOOL sub_244BDE574(int a1, uint64_t a2)
{
  int v6 = a1;
  sub_244BC77E8(**(unsigned __int16 ***)a2, (uint64_t)&v4);
  *(_OWORD *)(a2 + 8) = v4;
  *(void *)(a2 + 24) = v5;
  return *(_DWORD *)(a2 + 8) != 0;
}

void sub_244BDE630(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BDE758(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BDE818(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BDE8D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BDE998(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BDEA58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BDEB18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BDEBD8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BDECCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244BDEDA4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BDEE64(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BDEF24(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BDEFE4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BDF0A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BDF268(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244BDF2C8()
{
}

void sub_244BDF2D0()
{
}

uint64_t sub_244BDF2D8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BDF488(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244BDF4E8()
{
}

void sub_244BDF4F0()
{
}

uint64_t sub_244BDF4F8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BDF5A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BDF698(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244BDF770(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BDF830(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BDF8F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BDF9B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BDFA70(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BDFB30(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BDFBF0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BDFC98(_Unwind_Exception *a1)
{
  long long v4 = v3;

  _Unwind_Resume(a1);
}

void sub_244BDFE70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244BDFEE4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BE00A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244BE0118(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BE02D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244BE034C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BE050C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244BE0580(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BE0740(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244BE07A0()
{
}

void sub_244BE07A8()
{
}

uint64_t sub_244BE07B0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BE0960(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244BE09C0()
{
}

void sub_244BE09C8()
{
}

uint64_t sub_244BE09D0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BE0A7C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE0B3C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE0BFC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE0CBC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE0D7C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE0E3C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE0EFC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE0FA4(_Unwind_Exception *a1)
{
  long long v4 = v3;

  _Unwind_Resume(a1);
}

void sub_244BE1080(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244BE1098(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BE1164(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244BE117C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BE1248(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244BE1260(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BE132C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244BE1344(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BE1520(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244BE1580()
{
}

void sub_244BE1588()
{
}

uint64_t sub_244BE1590(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BE1754(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244BE17B4()
{
}

void sub_244BE17BC()
{
}

uint64_t sub_244BE17C4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BE1988(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244BE19E8()
{
}

void sub_244BE19F0()
{
}

uint64_t sub_244BE19F8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BE1BA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244BE1C08()
{
}

void sub_244BE1C10()
{
}

uint64_t sub_244BE1C18(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BE1DDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244BE1E3C()
{
}

void sub_244BE1E44()
{
}

uint64_t sub_244BE1E4C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BE1FFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244BE205C()
{
}

void sub_244BE2064()
{
}

uint64_t sub_244BE206C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BE2118(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE21D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE2298(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE238C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244BE2464(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE2558(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244BE2630(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE2724(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244BE27FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE28BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE297C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE2A3C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE2AFC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE2BBC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE2C64(_Unwind_Exception *a1)
{
  long long v4 = v3;

  _Unwind_Resume(a1);
}

void sub_244BE2E88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244BE2EE8()
{
}

void sub_244BE2EF0()
{
}

uint64_t sub_244BE2EF8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BE30A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244BE3108()
{
}

void sub_244BE3110()
{
}

uint64_t sub_244BE3118(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BE32C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244BE3328()
{
}

void sub_244BE3330()
{
}

uint64_t sub_244BE3338(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BE34E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244BE3548()
{
}

void sub_244BE3550()
{
}

uint64_t sub_244BE3558(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BE3708(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244BE3768()
{
}

void sub_244BE3770()
{
}

uint64_t sub_244BE3778(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BE3928(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244BE3988()
{
}

void sub_244BE3990()
{
}

uint64_t sub_244BE3998(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BE3B48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244BE3BA8()
{
}

void sub_244BE3BB0()
{
}

uint64_t sub_244BE3BB8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BE3D68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244BE3DC8()
{
}

void sub_244BE3DD0()
{
}

uint64_t sub_244BE3DD8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BE3F88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244BE3FE8()
{
}

void sub_244BE3FF0()
{
}

uint64_t sub_244BE3FF8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BE40A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE4164(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE4224(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE42E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE43A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE4464(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE4524(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE45E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE46D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244BE47B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE48A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244BE497C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE4A70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244BE4B48(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE4C3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244BE4D14(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE4E08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244BE4EE0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE4FD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244BE50AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE51A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244BE5278(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE5338(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE53F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE54B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE5578(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE5638(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE56E0(_Unwind_Exception *a1)
{
  long long v4 = v3;

  _Unwind_Resume(a1);
}

void sub_244BE57BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE587C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE593C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE59FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE5ABC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE5B7C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE5C3C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE5CFC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE5DBC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE5E7C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE5F3C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE5FFC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE60BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE617C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE623C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE62FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE63BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE6464(_Unwind_Exception *a1)
{
  long long v4 = v3;

  _Unwind_Resume(a1);
}

void sub_244BE6548(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE663C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244BE6714(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE67D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE6894(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE6954(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE6A14(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE6AD4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE6B7C(_Unwind_Exception *a1)
{
  long long v4 = v3;

  _Unwind_Resume(a1);
}

void sub_244BE6D4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244BE6DC0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BE6E68(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE6F5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244BE7034(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE7128(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244BE7200(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE72C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE7380(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE7440(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE7500(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE75C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE7680(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE7740(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE7800(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE78C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE7980(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE7A28(_Unwind_Exception *a1)
{
  long long v4 = v3;

  _Unwind_Resume(a1);
}

void sub_244BE7C18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244BE7C78()
{
}

void sub_244BE7C80()
{
}

uint64_t sub_244BE7C88(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BE7E38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244BE7E98()
{
}

void sub_244BE7EA0()
{
}

uint64_t sub_244BE7EA8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BE8058(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244BE80B8()
{
}

void sub_244BE80C0()
{
}

uint64_t sub_244BE80C8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BE8278(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244BE82D8()
{
}

void sub_244BE82E0()
{
}

uint64_t sub_244BE82E8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BE8498(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244BE84F8()
{
}

void sub_244BE8500()
{
}

uint64_t sub_244BE8508(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BE86B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244BE8718()
{
}

void sub_244BE8720()
{
}

uint64_t sub_244BE8728(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BE88D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244BE8938()
{
}

void sub_244BE8940()
{
}

uint64_t sub_244BE8948(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BE8AF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244BE8B58()
{
}

void sub_244BE8B60()
{
}

uint64_t sub_244BE8B68(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BE8D18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244BE8D78()
{
}

void sub_244BE8D80()
{
}

uint64_t sub_244BE8D88(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BE8F38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244BE8F98()
{
}

void sub_244BE8FA0()
{
}

uint64_t sub_244BE8FA8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BE9158(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244BE91B8()
{
}

void sub_244BE91C0()
{
}

uint64_t sub_244BE91C8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BE9378(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244BE93D8()
{
}

void sub_244BE93E0()
{
}

uint64_t sub_244BE93E8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BE9494(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE9554(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE9614(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE96D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE9794(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE9854(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE9914(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE99D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE9A94(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE9B3C(_Unwind_Exception *a1)
{
  long long v4 = v3;

  _Unwind_Resume(a1);
}

void sub_244BE9D3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244BE9D9C()
{
}

void sub_244BE9DA4()
{
}

uint64_t sub_244BE9DAC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BE9E58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE9F18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BE9FD8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEA098(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEA158(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEA218(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEA30C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244BEA3E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEA4D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244BEA5B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEA670(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEA730(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEA7F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEA8B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEA970(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEAA30(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEAAF0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEABB0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEAC70(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEAD64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244BEAE3C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEAEFC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEAFBC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEB07C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEB13C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEB1FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEB2BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEB37C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEB43C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEB4FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEB5BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEB67C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEB724(_Unwind_Exception *a1)
{
  long long v4 = v3;

  _Unwind_Resume(a1);
}

void sub_244BEB90C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244BEB980(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BEBB40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244BEBBB4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BEBD60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244BEBDC0()
{
}

void sub_244BEBDC8()
{
}

uint64_t sub_244BEBDD0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BEBE7C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEBF3C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEBFFC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEC0BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEC17C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEC23C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEC2E4(_Unwind_Exception *a1)
{
  long long v4 = v3;

  _Unwind_Resume(a1);
}

void sub_244BEC3C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244BEC3D8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BEC4A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244BEC4BC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BEC66C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244BEC6CC()
{
}

void sub_244BEC6D4()
{
}

uint64_t sub_244BEC6DC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BEC788(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEC87C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244BEC954(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BECA14(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BECAD4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BECB94(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BECC54(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BECD14(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BECDD4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BECE94(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BECF54(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BECFFC(_Unwind_Exception *a1)
{
  long long v4 = v3;

  _Unwind_Resume(a1);
}

void sub_244BED0EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BED1E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244BED2B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BED378(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BED438(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BED4F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BED5B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BED678(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BED738(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BED7E0(_Unwind_Exception *a1)
{
  long long v4 = v3;

  _Unwind_Resume(a1);
}

void sub_244BED898(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BED98C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244BEDA64(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEDB58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244BEDC30(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEDCF0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEDDB0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEDE70(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEDF30(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEDFF0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEE0B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEE158(_Unwind_Exception *a1)
{
  long long v4 = v3;

  _Unwind_Resume(a1);
}

void sub_244BEE210(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEE304(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244BEE3DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEE49C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEE55C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEE61C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEE6DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEE79C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEE844(_Unwind_Exception *a1)
{
  long long v4 = v3;

  _Unwind_Resume(a1);
}

void sub_244BEE8FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEE9BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEEA7C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEEB3C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEEBFC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEECBC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEED7C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEEE24(_Unwind_Exception *a1)
{
  long long v4 = v3;

  _Unwind_Resume(a1);
}

void sub_244BEEEDC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEEF9C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEF05C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEF11C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEF1DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEF29C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEF35C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEF41C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEF4DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEF59C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEF65C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEF71C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEF7DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEF89C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEF95C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEFA1C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEFADC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEFB9C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEFC5C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEFD1C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEFDDC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEFE9C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BEFF5C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF001C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF00DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF019C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF025C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF031C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF03DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF049C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF055C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF061C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF06DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF079C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF085C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF091C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF09DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF0A9C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF0B44(_Unwind_Exception *a1)
{
  long long v4 = v3;

  _Unwind_Resume(a1);
}

void sub_244BF0D14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244BF0D88(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BF0F48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244BF0FBC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BF1190(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244BF1204(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BF13C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244BF1438(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BF14E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF15D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244BF16AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF176C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF182C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF18EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF19AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF1A6C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF1B2C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF1BEC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF1CAC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF1D6C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF1E2C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF1EEC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF1FAC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF206C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF212C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF21D4(_Unwind_Exception *a1)
{
  long long v4 = v3;

  _Unwind_Resume(a1);
}

void sub_244BF22B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244BF22C8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BF2394(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244BF23AC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BF2478(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244BF2490(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BF2678(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244BF26EC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BF28AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244BF2920(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BF2AE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244BF2B54(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BF2D14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244BF2D88(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BF2F48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244BF2FBC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BF317C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244BF31F0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BF33B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244BF3424(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BF34CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF358C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF364C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF370C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF37CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF38C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244BF3998(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF3A58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF3B18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF3BD8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF3C98(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF3D58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF3E18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF3ED8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF3F98(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF4058(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF4118(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF41D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF4280(_Unwind_Exception *a1)
{
  long long v4 = v3;

  _Unwind_Resume(a1);
}

void sub_244BF435C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244BF4374(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BF4440(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244BF4458(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BF4524(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244BF453C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BF4608(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244BF4620(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BF46EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244BF4704(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BF47D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244BF47E8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BF49A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244BF4A1C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BF4AC4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF4B84(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF4C44(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF4D04(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF4DC4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF4E84(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF4F2C(_Unwind_Exception *a1)
{
  long long v4 = v3;

  _Unwind_Resume(a1);
}

void sub_244BF5008(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244BF5020(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BF51CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244BF522C()
{
}

void sub_244BF5234()
{
}

uint64_t sub_244BF523C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BF5414(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244BF5488(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BF5648(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244BF56BC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BF5764(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF5824(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF58E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF59A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF5A64(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF5B24(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF5BE4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF5CA4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF5D64(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF5E24(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF5EE4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF5FA4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF6064(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF6124(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF61E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF628C(_Unwind_Exception *a1)
{
  long long v4 = v3;

  _Unwind_Resume(a1);
}

void sub_244BF648C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244BF64EC()
{
}

void sub_244BF64F4()
{
}

uint64_t sub_244BF64FC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BF65A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF6668(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF6728(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF67E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF68A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF6968(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF6A28(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF6AE8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF6BA8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF6C68(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF6D10(_Unwind_Exception *a1)
{
  long long v4 = v3;

  _Unwind_Resume(a1);
}

void sub_244BF6EF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244BF6F58()
{
}

void sub_244BF6F60()
{
}

uint64_t sub_244BF6F68(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BF7014(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF70D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF7194(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF7254(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF7314(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF73D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF7494(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF7554(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF7614(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF76D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF7794(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF7854(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF7914(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF79D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF7A94(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF7B54(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF7C14(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF7CD4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF7D94(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF7E54(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF7F14(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF7FD4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF8094(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF8154(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF8214(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF82D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF8394(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF8454(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF8514(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF85D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF8694(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF8754(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF8814(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF88D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF8994(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF8A54(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF8B14(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF8BD4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF8C94(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF8D54(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF8E14(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF8ED4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF8F94(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF9054(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF9114(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF91D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF9294(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF9354(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF9414(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF94D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF9594(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF9654(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF9714(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF97D0(_Unwind_Exception *a1)
{
  long long v4 = v3;

  _Unwind_Resume(a1);
}

void sub_244BF9894(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF9954(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF9A14(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF9AD4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF9B94(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF9C54(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF9D14(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF9DD4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF9E94(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BF9F54(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFA014(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFA0D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFA194(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFA254(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFA314(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFA3BC(_Unwind_Exception *a1)
{
  long long v4 = v3;

  _Unwind_Resume(a1);
}

void sub_244BFA5FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244BFA65C()
{
}

void sub_244BFA664()
{
}

uint64_t sub_244BFA66C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BFA718(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFA7D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFA898(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFA958(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFAA18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFAAD8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFAB98(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFAC58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFAD18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFADD8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFAE98(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFAF58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFB018(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFB0D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFB198(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFB258(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFB318(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFB3D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFB498(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFB540(_Unwind_Exception *a1)
{
  long long v4 = v3;

  _Unwind_Resume(a1);
}

void sub_244BFB780(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244BFB7E0()
{
}

void sub_244BFB7E8()
{
}

uint64_t sub_244BFB7F0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BFB89C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFB95C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFBA1C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFBADC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFBB9C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFBC5C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFBD1C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFBDDC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFBE9C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFBF5C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFC01C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFC0DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFC19C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFC25C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFC31C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFC3C4(_Unwind_Exception *a1)
{
  long long v4 = v3;

  _Unwind_Resume(a1);
}

void sub_244BFC598(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244BFC5F8()
{
}

void sub_244BFC600()
{
}

uint64_t sub_244BFC608(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BFC7B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244BFC818()
{
}

void sub_244BFC820()
{
}

uint64_t sub_244BFC828(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BFC9EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244BFCA60(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BFCC0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244BFCC6C()
{
}

void sub_244BFCC74()
{
}

uint64_t sub_244BFCC7C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BFCE2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244BFCE8C()
{
}

void sub_244BFCE94()
{
}

uint64_t sub_244BFCE9C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BFCF48(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFD008(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFD0C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFD188(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFD248(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFD308(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFD3C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFD488(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFD548(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFD608(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFD6C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFD788(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFD848(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFD908(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFD9C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFDA88(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFDB48(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFDC08(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFDCC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFDE8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244BFDEEC()
{
}

void sub_244BFDEF4()
{
}

uint64_t sub_244BFDEFC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BFDFA8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFE068(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFE128(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFE1E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFE2A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFE39C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244BFE474(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFE534(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFE5F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFE6B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFE774(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFE834(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFE8F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFE9B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFEA74(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFEB34(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFEBF4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFECB4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFED74(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFEE34(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFEEF4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFEFB4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFF074(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFF134(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFF1DC(_Unwind_Exception *a1)
{
  long long v4 = v3;

  _Unwind_Resume(a1);
}

void sub_244BFF294(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFF354(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFF414(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFF4D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFF594(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFF654(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFF714(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFF7D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFF894(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244BFF93C(_Unwind_Exception *a1)
{
  long long v4 = v3;

  _Unwind_Resume(a1);
}

void sub_244BFFB04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244BFFB64()
{
}

void sub_244BFFB6C()
{
}

uint64_t sub_244BFFB74(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BFFD30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244BFFD90()
{
}

void sub_244BFFD98()
{
}

uint64_t sub_244BFFDA0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244BFFF70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244BFFFD0()
{
}

void sub_244BFFFD8()
{
}

uint64_t sub_244BFFFE0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C0008C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0014C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0020C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C002CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0038C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0044C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0050C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C005CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0068C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C00734(_Unwind_Exception *a1)
{
  long long v4 = v3;

  _Unwind_Resume(a1);
}

void sub_244C00924(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244C00998(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C00B58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244C00BCC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C00D8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244C00E00(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C00FC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244C01034(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C011F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244C01268(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C01428(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244C0149C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C0165C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244C016D0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C0187C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C018DC()
{
}

void sub_244C018E4()
{
}

uint64_t sub_244C018EC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C01998(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C01A58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C01B18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C01BD8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C01C98(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C01D58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C01E18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C01ED8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C01F98(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C02058(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C02118(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C021D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C02280(_Unwind_Exception *a1)
{
  long long v4 = v3;

  _Unwind_Resume(a1);
}

void sub_244C0235C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244C02374(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C02440(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244C02458(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C02524(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244C0253C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C02608(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244C02620(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C026EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244C02704(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C027D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244C027E8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C028B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244C028CC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C02A7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C02ADC()
{
}

void sub_244C02AE4()
{
}

uint64_t sub_244C02AEC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C02CB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244C02D24(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C02ED0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C02F30()
{
}

void sub_244C02F38()
{
}

uint64_t sub_244C02F40(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C03118(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244C0318C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C03234(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C03328(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C03400(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C034C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C03580(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C03640(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C03700(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C037C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C03880(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C03940(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C03A00(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C03AA8(_Unwind_Exception *a1)
{
  long long v4 = v3;

  _Unwind_Resume(a1);
}

void sub_244C03B88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244C03BA0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C03C70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244C03C88(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C03D30(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C03DF0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C03EB0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C03F70(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C04030(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C040F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C041B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C04258(_Unwind_Exception *a1)
{
  long long v4 = v3;

  _Unwind_Resume(a1);
}

void sub_244C04310(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C04404(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C044DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0459C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0465C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0471C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C047DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0489C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C04944(_Unwind_Exception *a1)
{
  long long v4 = v3;

  _Unwind_Resume(a1);
}

void sub_244C049FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C04ABC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C04B7C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C04C3C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C04CFC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C04DBC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C04E7C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C04F24(_Unwind_Exception *a1)
{
  long long v4 = v3;

  _Unwind_Resume(a1);
}

void sub_244C050F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244C05168(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C05314(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C05374()
{
}

void sub_244C0537C()
{
}

uint64_t sub_244C05384(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C05548(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244C055BC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C05664(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C05724(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C057E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C058A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C05964(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C05A24(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C05AE4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C05BA4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C05C64(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C05D24(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C05DE4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C05EA4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C05F64(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C06024(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C060E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C061A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C06368(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C063C8()
{
}

void sub_244C063D0()
{
}

uint64_t sub_244C063D8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C0659C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C065FC()
{
}

void sub_244C06604()
{
}

uint64_t sub_244C0660C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C067BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C0681C()
{
}

void sub_244C06824()
{
}

uint64_t sub_244C0682C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C069DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C06A3C()
{
}

void sub_244C06A44()
{
}

uint64_t sub_244C06A4C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C06AF8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C06BB8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C06C78(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C06D38(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C06DF8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C06EB8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C06F78(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C07038(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C070F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C072E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244C07358(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C0752C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244C075A0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C07774(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244C077E8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C079BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244C07A30(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C07AD8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C07B98(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C07C58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C07D18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C07DD8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C07E98(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C07F58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C08018(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C080D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C08198(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C08258(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C08318(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C084F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244C08564(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C0860C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C086CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0878C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C08880(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C08958(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C08A4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C08B24(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C08BE4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C08CA4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C08D64(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C08E24(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C08EE4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C08FA4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C09064(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C09158(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C09230(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C092F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C093B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C09470(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C09530(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C095F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C097B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C09814()
{
}

void sub_244C0981C()
{
}

uint64_t sub_244C09824(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C098D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C09990(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C09A50(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C09B10(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C09BD0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C09CC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C09D9C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C09E90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C09F68(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0A028(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0A0E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0A1A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0A268(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0A328(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0A3D0(_Unwind_Exception *a1)
{
  long long v4 = v3;

  _Unwind_Resume(a1);
}

void sub_244C0A5A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244C0A618(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C0A6C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0A780(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0A840(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0A934(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C0AA0C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0AB00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C0ABD8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0AC98(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0AD58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0AE18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0AED8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0AF98(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0B170(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244C0B1E4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C0B28C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0B34C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0B40C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0B500(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C0B5D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0B6CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C0B7A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0B864(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0B924(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0B9E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0BAA4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0BB64(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0BC24(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0BCE4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0BDD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C0BEB0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0BFA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C0C07C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0C13C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0C1FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0C2BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0C37C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0C43C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0C4FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0C6D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244C0C748(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C0C7F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0C8B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0C970(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0CA30(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0CAF0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0CBB0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0CC70(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0CD30(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0CF08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244C0CF7C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C0D024(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0D0E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0D1A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0D264(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0D324(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0D3E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0D4A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0D564(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0D73C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C0D79C()
{
}

void sub_244C0D7A4()
{
}

uint64_t sub_244C0D7AC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C0D858(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0D918(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0D9D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0DA98(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0DB58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0DC18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0DCD8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0DD98(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0DE58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0DF18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0DFD8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0E098(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0E158(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0E218(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0E2D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0E398(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0E458(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0E518(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0E5D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0E698(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0E758(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0E930(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244C0E9A4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C0EA4C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0EB0C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0EBCC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0ECC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C0ED98(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0EE8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C0EF64(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0F024(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0F0E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0F1A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0F264(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0F324(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0F3E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0F4A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0F564(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0F624(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0F6E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0F7A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0F864(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0FA3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C0FA9C()
{
}

void sub_244C0FAA4()
{
}

uint64_t sub_244C0FAAC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C0FB58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0FC18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0FCD8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0FD98(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0FE58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0FF18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C0FFD8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C10098(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C10158(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C10218(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C102D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C10398(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1048C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C10564(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C10624(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C106E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C107A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C10864(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C10924(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C109E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C10BA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C10C08()
{
}

void sub_244C10C10()
{
}

uint64_t sub_244C10C18(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C10DC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C10E28()
{
}

void sub_244C10E30()
{
}

uint64_t sub_244C10E38(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C10EE4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C10FA4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C11064(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C11124(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C111E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C112A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C11364(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C11424(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C114E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C115A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C11664(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C11724(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C117E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C118A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C11964(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C11A24(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C11AE4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C11BA4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C11D7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C11DDC()
{
}

void sub_244C11DE4()
{
}

uint64_t sub_244C11DEC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C11F9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C11FFC()
{
}

void sub_244C12004()
{
}

uint64_t sub_244C1200C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C120B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C12178(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C12238(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C122F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C123B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C12478(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C12538(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C125F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C126B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C12778(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C12838(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C128F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C129B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C12A78(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C12B38(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C12D24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244C12D98(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C12F6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244C12FE0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C131B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244C13228(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C133FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244C13470(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C13518(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C135D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C13698(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C13758(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C13818(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C138D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C13998(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C13A58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C13B18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C13BD8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C13C98(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C13D58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C13F44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244C13FB8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C1418C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244C14200(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C143D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244C14448(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C144F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C145B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C14670(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C14730(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C147F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C148B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C14970(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C14A30(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C14AF0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C14BB0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C14C70(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C14D30(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C14F08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244C14F7C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C1513C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244C151B0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C15370(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244C153E4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C155A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244C15618(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C157D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244C1584C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C159F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C15A58()
{
}

void sub_244C15A60()
{
}

uint64_t sub_244C15A68(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C15C2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244C15CA0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C15E60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244C15ED4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C15F7C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1603C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C160FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C161BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1627C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1633C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C163FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C164BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1657C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C16754(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C167B4()
{
}

void sub_244C167BC()
{
}

uint64_t sub_244C167C4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C16870(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C16930(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C169F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C16AB0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C16B70(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C16C64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C16D3C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C16DFC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C16EBC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C16F7C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1703C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C170FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C171BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C17394(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C173F4()
{
}

void sub_244C173FC()
{
}

uint64_t sub_244C17404(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C174B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C17570(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C17630(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C176F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C177B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C178A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C1797C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C17A3C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C17AFC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C17BBC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C17C7C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C17D3C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C17DFC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C17FC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C18020()
{
}

void sub_244C18028()
{
}

uint64_t sub_244C18030(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C181E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C18240()
{
}

void sub_244C18248()
{
}

uint64_t sub_244C18250(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C182FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C183F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C184C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C18588(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C18648(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C18708(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C187C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C18888(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C18948(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C18A08(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C18AC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C18B88(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C18C48(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C18D08(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C18DC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C18FA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C19000()
{
}

void sub_244C19008()
{
}

uint64_t sub_244C19010(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C191D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C19234()
{
}

void sub_244C1923C()
{
}

uint64_t sub_244C19244(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C192F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C193B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C194A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C1957C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1963C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C196FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C197BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1987C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1993C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C199FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C19AF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C19BC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C19C88(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C19D48(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C19E08(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C19EC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C19F88(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1A048(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1A108(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1A1C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1A288(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1A348(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1A408(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1A4C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1A588(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1A648(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1A708(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1A7C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1A888(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1A948(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1AA08(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1AAC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1AB88(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1AC48(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1AD08(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1ADC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1AE88(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1AF48(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1B008(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1B0C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1B188(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1B248(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1B308(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1B3C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1B488(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1B548(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1B608(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1B6C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1B788(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1B848(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1B908(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1B9C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1BA88(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1BB48(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1BC08(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1BCC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1BE8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C1BEEC()
{
}

void sub_244C1BEF4()
{
}

uint64_t sub_244C1BEFC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C1C0C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C1C120()
{
}

void sub_244C1C128()
{
}

uint64_t sub_244C1C130(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C1C1DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1C29C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1C35C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1C41C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1C4DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1C59C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1C65C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1C71C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1C7DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1C89C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1C95C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1CA1C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1CBE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C1CC40()
{
}

void sub_244C1CC48()
{
}

uint64_t sub_244C1CC50(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C1CE00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C1CE60()
{
}

void sub_244C1CE68()
{
}

uint64_t sub_244C1CE70(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C1D020(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C1D080()
{
}

void sub_244C1D088()
{
}

uint64_t sub_244C1D090(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C1D240(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C1D2A0()
{
}

void sub_244C1D2A8()
{
}

uint64_t sub_244C1D2B0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C1D474(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C1D4D4()
{
}

void sub_244C1D4DC()
{
}

uint64_t sub_244C1D4E4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C1D590(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1D650(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1D710(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1D7D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1D890(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1D950(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1DA10(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1DB04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C1DBDC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1DCD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C1DDA8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1DE68(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1DF28(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1DFE8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1E0A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1E168(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1E32C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C1E38C()
{
}

void sub_244C1E394()
{
}

uint64_t sub_244C1E39C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C1E54C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C1E5AC()
{
}

void sub_244C1E5B4()
{
}

uint64_t sub_244C1E5BC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C1E668(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1E728(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1E7E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1E8A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1E968(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1EA28(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1EAE8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1EBA8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1ED6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C1EDCC()
{
}

void sub_244C1EDD4()
{
}

uint64_t sub_244C1EDDC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C1EFA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C1F000()
{
}

void sub_244C1F008()
{
}

uint64_t sub_244C1F010(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C1F1C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C1F220()
{
}

void sub_244C1F228()
{
}

uint64_t sub_244C1F230(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C1F3E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C1F440()
{
}

void sub_244C1F448()
{
}

uint64_t sub_244C1F450(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C1F614(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C1F674()
{
}

void sub_244C1F67C()
{
}

uint64_t sub_244C1F684(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C1F834(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C1F894()
{
}

void sub_244C1F89C()
{
}

uint64_t sub_244C1F8A4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C1FA54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C1FAB4()
{
}

void sub_244C1FABC()
{
}

uint64_t sub_244C1FAC4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C1FC88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C1FCE8()
{
}

void sub_244C1FCF0()
{
}

uint64_t sub_244C1FCF8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C1FDA4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1FE64(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1FF24(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C1FFE4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C200A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C20164(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C20224(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C202E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C203A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C20464(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C20524(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C205E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C206A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C20764(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C20948(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C209A8()
{
}

void sub_244C209B0()
{
}

uint64_t sub_244C209B8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C20B74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C20BD4()
{
}

void sub_244C20BDC()
{
}

uint64_t sub_244C20BE4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C20DA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C20E00()
{
}

void sub_244C20E08()
{
}

uint64_t sub_244C20E10(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C20FE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C21040()
{
}

void sub_244C21048()
{
}

uint64_t sub_244C21050(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C2120C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C2126C()
{
}

void sub_244C21274()
{
}

uint64_t sub_244C2127C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C21460(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244C214D4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C216A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C21700()
{
}

void sub_244C21708()
{
}

uint64_t sub_244C21710(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C217BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2187C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2193C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C219FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C21ABC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C21B7C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C21C3C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C21CFC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C21DBC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C21E7C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C21F70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C22048(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2213C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C22214(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C222D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C22394(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C22454(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C22514(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C22608(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C226E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C227A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C22860(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C22920(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C229E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C22AA0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C22B60(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C22C20(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C22CE0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C22DA0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C22E60(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C22F20(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C22FE0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C230A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C23160(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C23254(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C2332C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C233EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C234AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C235A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C23678(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C23738(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C237F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C238B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C23978(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C23A38(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C23AF8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C23BB8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C23C78(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C23D38(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C23DF8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C23EB8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C23F78(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C24038(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C24210(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244C24284(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C2432C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C243EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C244AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C245A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C24678(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2476C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C24844(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C24904(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C249C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C24A84(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C24B44(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C24C04(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C24DDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244C24E50(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C24EF8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C24FB8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C25078(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2516C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C25244(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C25338(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C25410(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C254D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C25590(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C25650(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C25710(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C257D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C259A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244C25A1C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C25AC4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C25B84(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C25C44(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C25D38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C25E10(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C25F04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C25FDC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2609C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2615C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2621C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C262DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2639C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C26580(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C265E0()
{
}

void sub_244C265E8()
{
}

uint64_t sub_244C265F0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C267C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C26820()
{
}

void sub_244C26828()
{
}

uint64_t sub_244C26830(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C269EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C26A4C()
{
}

void sub_244C26A54()
{
}

uint64_t sub_244C26A5C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C26C0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C26C6C()
{
}

void sub_244C26C74()
{
}

uint64_t sub_244C26C7C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C26E40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244C26EB4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C27060(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C270C0()
{
}

void sub_244C270C8()
{
}

uint64_t sub_244C270D0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C27280(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C272E0()
{
}

void sub_244C272E8()
{
}

uint64_t sub_244C272F0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C274B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244C27528(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C276D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C27734()
{
}

void sub_244C2773C()
{
}

uint64_t sub_244C27744(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C278F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C27954()
{
}

void sub_244C2795C()
{
}

uint64_t sub_244C27964(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C27B28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244C27B9C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C27D48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C27DA8()
{
}

void sub_244C27DB0()
{
}

uint64_t sub_244C27DB8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C27F74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C27FD4()
{
}

void sub_244C27FDC()
{
}

uint64_t sub_244C27FE4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C281A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244C2821C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C283D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C28434()
{
}

void sub_244C2843C()
{
}

uint64_t sub_244C28444(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C28614(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244C28688(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C28848(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244C288BC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C28A74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C28AD4()
{
}

void sub_244C28ADC()
{
}

uint64_t sub_244C28AE4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C28CB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C28D14()
{
}

void sub_244C28D1C()
{
}

uint64_t sub_244C28D24(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C28EE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C28F40()
{
}

void sub_244C28F48()
{
}

uint64_t sub_244C28F50(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C29120(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C29180()
{
}

void sub_244C29188()
{
}

uint64_t sub_244C29190(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C29360(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244C293D4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C29594(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244C29608(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C297C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C29820()
{
}

void sub_244C29828()
{
}

uint64_t sub_244C29830(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C299EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C29A4C()
{
}

void sub_244C29A54()
{
}

uint64_t sub_244C29A5C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C29C2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C29C8C()
{
}

void sub_244C29C94()
{
}

uint64_t sub_244C29C9C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C29D48(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C29E08(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C29EC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C29F88(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2A048(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2A13C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C2A214(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2A308(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C2A3E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2A4D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C2A5AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2A66C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2A72C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2A7EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2A8AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2A96C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2AA2C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2AAEC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2ABAC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2AC6C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2AD2C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2ADEC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2AEAC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2AFA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C2B078(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2B16C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C2B244(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2B338(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C2B410(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2B504(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C2B5DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2B6D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C2B7A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2B868(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2B928(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2BA1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C2BAF4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2BBE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C2BCC0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2BDB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C2BE8C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2BF80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C2C058(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2C14C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C2C224(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2C318(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C2C3F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2C4E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C2C5BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2C6B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C2C788(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2C87C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C2C954(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2CA48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C2CB20(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2CBE0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2CCA0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2CD60(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2CE20(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2CEE0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2CFA0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2D060(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2D120(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2D1E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2D2A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2D360(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2D420(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2D4E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2D5A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2D660(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2D720(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2D7E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2D8A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2D960(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2DA20(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2DAE0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2DBA0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2DC60(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2DD08(_Unwind_Exception *a1)
{
  long long v4 = v3;

  _Unwind_Resume(a1);
}

void sub_244C2DDF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244C2DE0C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C2DEE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244C2DEF8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C2DFCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244C2DFE4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C2E0B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244C2E0D0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C2E1A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244C2E1B8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C2E284(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244C2E29C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C2E460(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C2E4C0()
{
}

void sub_244C2E4C8()
{
}

uint64_t sub_244C2E4D0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C2E694(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C2E6F4()
{
}

void sub_244C2E6FC()
{
}

uint64_t sub_244C2E704(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C2E8C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C2E928()
{
}

void sub_244C2E930()
{
}

uint64_t sub_244C2E938(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C2EAE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C2EB48()
{
}

void sub_244C2EB50()
{
}

uint64_t sub_244C2EB58(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C2ED08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C2ED68()
{
}

void sub_244C2ED70()
{
}

uint64_t sub_244C2ED78(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C2EF28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C2EF88()
{
}

void sub_244C2EF90()
{
}

uint64_t sub_244C2EF98(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C2F148(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C2F1A8()
{
}

void sub_244C2F1B0()
{
}

uint64_t sub_244C2F1B8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C2F264(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2F324(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2F3E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2F4A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2F564(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2F624(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2F6E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2F7A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2F864(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2F924(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2F9E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2FAA4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2FB64(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2FC24(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2FCE4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2FDA4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2FE64(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2FF24(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C2FFE4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C300A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C30164(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C30258(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C30330(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C303F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C304B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C30570(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C30630(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C306F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C307B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C30858(_Unwind_Exception *a1)
{
  long long v4 = v3;

  _Unwind_Resume(a1);
}

void sub_244C30A80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244C30AF4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C30CB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244C30D28(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C30DD0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C30E90(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C30F50(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C31010(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C310D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C31190(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C31250(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C31310(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C313D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C31490(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C31550(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C31610(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C316D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C31790(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C31850(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C31910(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C319D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C31A90(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C31B50(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C31C10(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C31CD0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C31D90(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C31E50(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C31F10(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C31FD0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C32090(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C32150(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C32210(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C322D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C32390(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C32450(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C32544(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C3261C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C326DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C327D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C328A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C3299C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C32A74(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C32B68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C32C40(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C32D00(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C32DC0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C32E80(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C32F40(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C33000(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C330A8(_Unwind_Exception *a1)
{
  long long v4 = v3;

  _Unwind_Resume(a1);
}

void sub_244C33264(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C332C4()
{
}

void sub_244C332CC()
{
}

uint64_t sub_244C332D4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C33484(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C334E4()
{
}

void sub_244C334EC()
{
}

uint64_t sub_244C334F4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C336B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244C3372C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C338EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C3394C()
{
}

void sub_244C33954()
{
}

uint64_t sub_244C3395C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C33B0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C33B6C()
{
}

void sub_244C33B74()
{
}

uint64_t sub_244C33B7C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C33D2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C33D8C()
{
}

void sub_244C33D94()
{
}

uint64_t sub_244C33D9C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C33F60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244C33FD4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C3407C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C3413C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C341FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C342BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C3437C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C3443C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C344FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C345BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C3467C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C3473C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C34830(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C34908(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C349FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C34AD4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C34BC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C34CA0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C34D94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C34E6C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C34F60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C35038(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C3512C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C35204(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C352F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C353D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C354C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C3559C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C35690(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C35768(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C3585C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C35934(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C35A28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C35B00(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C35BF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C35CCC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C35DC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C35E98(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C35F8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C36064(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C36124(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C361E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C362A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C36364(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C36458(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C36530(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C36624(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C366FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C367F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C368C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C36988(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C36A48(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C36B08(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C36BC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C36CBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C36D94(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C36E54(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C36F14(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C37008(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C370E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C371A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C37260(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C37354(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C3742C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C37520(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C375F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C376EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C377C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C378B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C37990(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C37A84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C37B5C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C37C50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C37D28(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C37E1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C37EF4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C37FB4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C380A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C38180(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C38240(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C38300(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C383C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C38480(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C38540(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C38600(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C386C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C38780(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C38874(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C3894C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C38A40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C38B18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C38BD8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C38C98(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C38D58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C38E18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C38ED8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C38F98(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C39040(_Unwind_Exception *a1)
{
  long long v4 = v3;

  _Unwind_Resume(a1);
}

void sub_244C39124(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244C3913C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C39300(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C39360()
{
}

void sub_244C39368()
{
}

uint64_t sub_244C39370(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C3941C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C39510(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C395E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C396DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C397B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C398A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C39980(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C39A40(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C39B00(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C39BF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C39CCC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C39D8C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C39E4C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C39F40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C3A018(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C3A0D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C3A1CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C3A2A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C3A398(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C3A470(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C3A530(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C3A5F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C3A6B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C3A770(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C3A830(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C3A8D8(_Unwind_Exception *a1)
{
  long long v4 = v3;

  _Unwind_Resume(a1);
}

void sub_244C3A990(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C3AA84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C3AB5C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C3AC50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C3AD28(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C3AE1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C3AEF4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C3AFB4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C3B074(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C3B134(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C3B1F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C3B2B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C3B35C(_Unwind_Exception *a1)
{
  long long v4 = v3;

  _Unwind_Resume(a1);
}

void sub_244C3B518(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C3B578()
{
}

void sub_244C3B580()
{
}

uint64_t sub_244C3B588(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C3B738(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C3B798()
{
}

void sub_244C3B7A0()
{
}

uint64_t sub_244C3B7A8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C3B958(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C3B9B8()
{
}

void sub_244C3B9C0()
{
}

uint64_t sub_244C3B9C8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C3BB78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C3BBD8()
{
}

void sub_244C3BBE0()
{
}

uint64_t sub_244C3BBE8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C3BD98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C3BDF8()
{
}

void sub_244C3BE00()
{
}

uint64_t sub_244C3BE08(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C3BFB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C3C018()
{
}

void sub_244C3C020()
{
}

uint64_t sub_244C3C028(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C3C1D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C3C238()
{
}

void sub_244C3C240()
{
}

uint64_t sub_244C3C248(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C3C3F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C3C458()
{
}

void sub_244C3C460()
{
}

uint64_t sub_244C3C468(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C3C618(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C3C678()
{
}

void sub_244C3C680()
{
}

uint64_t sub_244C3C688(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C3C838(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C3C898()
{
}

void sub_244C3C8A0()
{
}

uint64_t sub_244C3C8A8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C3CA58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C3CAB8()
{
}

void sub_244C3CAC0()
{
}

uint64_t sub_244C3CAC8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C3CC78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C3CCD8()
{
}

void sub_244C3CCE0()
{
}

uint64_t sub_244C3CCE8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C3CE98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C3CEF8()
{
}

void sub_244C3CF00()
{
}

uint64_t sub_244C3CF08(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C3D0B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C3D118()
{
}

void sub_244C3D120()
{
}

uint64_t sub_244C3D128(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C3D2D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C3D338()
{
}

void sub_244C3D340()
{
}

uint64_t sub_244C3D348(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C3D4F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C3D558()
{
}

void sub_244C3D560()
{
}

uint64_t sub_244C3D568(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C3D718(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C3D778()
{
}

void sub_244C3D780()
{
}

uint64_t sub_244C3D788(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C3D938(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C3D998()
{
}

void sub_244C3D9A0()
{
}

uint64_t sub_244C3D9A8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C3DB58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_244C3DBB8()
{
}

void sub_244C3DBC0()
{
}

uint64_t sub_244C3DBC8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244C3DC74(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C3DD34(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C3DDF4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C3DEB4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C3DF74(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C3E034(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C3E0F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C3E1B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C3E274(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C3E334(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C3E428(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C3E500(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C3E5C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C3E680(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C3E740(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C3E800(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C3E8C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C3E980(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C3EA40(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C3EB00(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C3EBC0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C3EC80(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C3ED40(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C3EE00(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C3EEC0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C3EF80(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C3F040(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C3F100(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C3F1C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C3F280(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C3F340(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C3F434(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C3F50C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C3F600(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C3F6D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C3F7CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C3F8A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C3F998(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C3FA70(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C3FB64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C3FC3C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C3FD30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C3FE08(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C3FEFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C3FFD4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C400C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C401A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C40294(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C4036C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C40460(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C40538(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4062C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C40704(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C407C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C40884(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C40944(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C40A04(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C40AC4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C40B84(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C40C44(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C40D04(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C40DC4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C40E84(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C40F44(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C41038(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C41110(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C411D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C41290(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C41350(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C41410(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C414D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C41578(_Unwind_Exception *a1)
{
  long long v4 = v3;

  _Unwind_Resume(a1);
}

void sub_244C4167C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4173C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C417FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C418BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C419B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C41A88(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C41B7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C41C54(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C41D48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C41E20(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C41F14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C41FEC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C420AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C421A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C42278(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4236C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C42444(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C42538(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C42610(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C42704(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C427DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C428D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C429A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C42A9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C42B74(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C42C34(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C42CF4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C42DB4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C42E74(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C42F34(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C42FDC(_Unwind_Exception *a1)
{
  long long v4 = v3;

  _Unwind_Resume(a1);
}

void sub_244C430C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C43188(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C43248(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C43308(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C433C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C43488(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C43548(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C43608(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C436C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C43788(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C43848(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C438F0(_Unwind_Exception *a1)
{
  long long v4 = v3;

  _Unwind_Resume(a1);
}

void sub_244C439A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C43A68(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C43B28(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C43BE8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C43CA8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C43D68(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C43E28(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C43EE8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C43FA8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C44068(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C44110(_Unwind_Exception *a1)
{
  long long v4 = v3;

  _Unwind_Resume(a1);
}

void sub_244C441C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C44288(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C44348(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C44408(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C444C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C44588(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C44648(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C44708(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C447C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C44888(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C44948(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C44A08(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C44AC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C44B88(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C44C48(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C44CF0(_Unwind_Exception *a1)
{
  long long v4 = v3;

  _Unwind_Resume(a1);
}

void sub_244C44DA8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C44E68(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C44F28(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C44FE8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C450A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C45168(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C45228(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C452E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C453A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C45468(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C45510(_Unwind_Exception *a1)
{
  long long v4 = v3;

  _Unwind_Resume(a1);
}

void sub_244C455C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C45688(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C45748(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C45808(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C458C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C45988(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C45A48(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C45B08(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C45BC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C45C88(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C45D30(_Unwind_Exception *a1)
{
  long long v4 = v3;

  _Unwind_Resume(a1);
}

void sub_244C45DE8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C45EA8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C45F68(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C46028(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4611C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C461F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C462B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C463A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C46480(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C46574(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C4664C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C46740(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C46818(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4690C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C469E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C46AD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C46BB0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C46CA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C46D7C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C46E70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C46F48(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4703C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C47114(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C47208(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244C472E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C473A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C47460(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C47520(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C475E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C476A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C47748(_Unwind_Exception *a1)
{
  long long v4 = v3;

  _Unwind_Resume(a1);
}

void sub_244C4789C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4795C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C47A1C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C47ADC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C47B9C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C47C5C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C47D1C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C47DDC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C47E9C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C47F5C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4801C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C480DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4819C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4825C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4831C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C483DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4849C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4855C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4861C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C486DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4879C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4885C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4891C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C489DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C48A9C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C48B5C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C48C1C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C48CDC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C48D9C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C48E5C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C48F1C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C48FDC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4909C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4915C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4921C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C492DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4939C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4945C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4951C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C495DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4969C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4975C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4981C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C498DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4999C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C49A5C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C49B1C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C49BDC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C49C9C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C49D5C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C49E1C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C49EDC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C49F9C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4A05C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4A11C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4A1DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4A29C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4A35C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4A41C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4A4DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4A59C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4A65C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4A71C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4A7DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4A89C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4A95C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4AA1C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4AADC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4AB9C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4AC5C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4AD1C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4ADDC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4AE9C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4AF5C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4B01C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4B0DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4B19C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4B25C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4B31C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4B3DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4B49C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4B55C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4B61C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4B6DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4B79C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4B85C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4B91C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4B9DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4BA9C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4BB5C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4BC1C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4BCDC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4BD9C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4BE5C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4BF1C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4BFDC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4C09C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4C15C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4C21C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4C2DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4C39C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4C45C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4C51C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4C5DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4C69C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4C75C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4C81C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4C8DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4C99C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4CA5C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4CB1C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4CBDC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4CC9C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4CD5C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4CE1C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4CEDC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4CF9C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4D05C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4D11C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4D1DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4D29C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4D35C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4D41C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4D4DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4D59C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4D65C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4D71C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4D7DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4D89C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4D95C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4DA1C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4DADC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4DB9C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4DC5C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4DD1C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4DDDC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4DE9C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4DF5C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4E01C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4E0DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4E19C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4E25C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4E31C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4E3DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4E49C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4E55C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4E61C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4E6DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4E79C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4E85C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4E91C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4E9DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4EA9C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4EB5C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4EC1C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4ECDC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4ED9C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4EE5C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4EF1C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4EFDC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4F09C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4F15C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4F21C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4F2DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4F39C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4F45C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4F51C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4F5DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244C4F69C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}