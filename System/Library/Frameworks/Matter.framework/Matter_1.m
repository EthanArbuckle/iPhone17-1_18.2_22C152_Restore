double sub_24480A4BC@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  double result;
  long long v8;
  uint64_t v9;
  int v10;
  long long v11;
  uint64_t v12;

  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  v8 = v11;
  v9 = v12;
  if (!v11)
  {
    sub_24480A0E0(a1, a2, 0, (uint64_t)&v11);
    v9 = v12;
    v8 = v11;
    if (!v11)
    {
      sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
      v8 = v11;
      v9 = v12;
    }
  }
  result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_24480A5A0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265196320;
      uint64_t v9 = 9839;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_24480A2DC(a1, a2, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_24480A678@<D0>(_WORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265196338;
      uint64_t v9 = 9873;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3F40(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_24480A750@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265196350;
      uint64_t v9 = 9907;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_24480A2DC(a1, a2, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_24480A828@<D0>(_WORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265196368;
      uint64_t v9 = 9941;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3F40(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_24480A900@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265196380;
      uint64_t v9 = 9995;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_24484B03C(a1, a2, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

void sub_24480A9D8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  switch(*(_DWORD *)(a3 + 8))
  {
    case 0xFFF8:
      a1 += 168;
      goto LABEL_3;
    case 0xFFF9:
      a1 += 248;
      goto LABEL_3;
    case 0xFFFA:
      a1 += 328;
      goto LABEL_3;
    case 0xFFFB:
      a1 += 408;
LABEL_3:
      sub_24484B03C(a1, a2, a4);
      break;
    case 0xFFFC:
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 488), a4);
      break;
    case 0xFFFD:
      v4 = (_WORD *)(a1 + 492);
LABEL_14:
      sub_244CB3F40(a2, v4, a4);
      break;
    default:
      switch(*(_DWORD *)(a3 + 8))
      {
        case 0xFFF8:
          goto LABEL_3;
        case 0xFFF9:
          a1 += 80;
          goto LABEL_3;
        case 0xFFFA:
          v4 = (_WORD *)(a1 + 160);
          goto LABEL_14;
        case 0xFFFB:
          v4 = (_WORD *)(a1 + 162);
          goto LABEL_14;
        default:
          *(_DWORD *)a4 = 0;
          *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-co"
                                "mmon/app-common/zap-generated/cluster-objects.cpp";
          *(_DWORD *)(a4 + 16) = 10038;
          break;
      }
      break;
  }
}

void sub_24480AAD8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4 = *(_DWORD *)(a3 + 8);
  switch(v4)
  {
    case 65528:
      a1 += 80;
      goto LABEL_3;
    case 65529:
      a1 += 160;
      goto LABEL_3;
    case 65530:
      a1 += 240;
      goto LABEL_3;
    case 65531:
      a1 += 320;
      goto LABEL_3;
    case 65532:
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 400), a4);
      return;
    case 65533:
      sub_244CB3F40(a2, (_WORD *)(a1 + 404), a4);
      return;
    default:
      if (v4)
      {
        *(_DWORD *)a4 = 0;
        *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-comm"
                              "on/app-common/zap-generated/cluster-objects.cpp";
        *(_DWORD *)(a4 + 16) = 10071;
      }
      else
      {
LABEL_3:
        sub_24484B03C(a1, a2, a4);
      }
      return;
  }
}

void sub_24480AB88(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4 = *(_DWORD *)(a3 + 8);
  switch(v4)
  {
    case 65528:
      a1 += 80;
      goto LABEL_3;
    case 65529:
      a1 += 160;
      goto LABEL_3;
    case 65530:
      a1 += 240;
      goto LABEL_3;
    case 65531:
      a1 += 320;
      goto LABEL_3;
    case 65532:
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 400), a4);
      return;
    case 65533:
      sub_244CB3F40(a2, (_WORD *)(a1 + 404), a4);
      return;
    default:
      if (v4)
      {
        *(_DWORD *)a4 = 0;
        *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-comm"
                              "on/app-common/zap-generated/cluster-objects.cpp";
        *(_DWORD *)(a4 + 16) = 10104;
      }
      else
      {
LABEL_3:
        sub_24484B03C(a1, a2, a4);
      }
      return;
  }
}

void sub_24480AC38(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  switch(*(_DWORD *)(a3 + 8))
  {
    case 0xFFF8:
      goto LABEL_2;
    case 0xFFF9:
      a1 += 80;
      goto LABEL_2;
    case 0xFFFA:
      a1 += 160;
      goto LABEL_2;
    case 0xFFFB:
      a1 += 240;
LABEL_2:
      sub_24484B03C(a1, a2, a4);
      break;
    case 0xFFFC:
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 320), a4);
      break;
    case 0xFFFD:
      sub_244CB3F40(a2, (_WORD *)(a1 + 324), a4);
      break;
    default:
      *(_DWORD *)a4 = 0;
      *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-common"
                            "/app-common/zap-generated/cluster-objects.cpp";
      *(_DWORD *)(a4 + 16) = 10134;
      break;
  }
}

void sub_24480ACDC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  switch(*(_DWORD *)(a3 + 8))
  {
    case 0xFFF8:
      goto LABEL_2;
    case 0xFFF9:
      a1 += 80;
      goto LABEL_2;
    case 0xFFFA:
      a1 += 160;
      goto LABEL_2;
    case 0xFFFB:
      a1 += 240;
LABEL_2:
      sub_24484B03C(a1, a2, a4);
      break;
    case 0xFFFC:
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 320), a4);
      break;
    case 0xFFFD:
      sub_244CB3F40(a2, (_WORD *)(a1 + 324), a4);
      break;
    default:
      *(_DWORD *)a4 = 0;
      *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-common"
                            "/app-common/zap-generated/cluster-objects.cpp";
      *(_DWORD *)(a4 + 16) = 10164;
      break;
  }
}

void sub_24480AD80(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  switch(*(_DWORD *)(a3 + 8))
  {
    case 0xFFF8:
      goto LABEL_2;
    case 0xFFF9:
      a1 += 80;
      goto LABEL_2;
    case 0xFFFA:
      a1 += 160;
      goto LABEL_2;
    case 0xFFFB:
      a1 += 240;
LABEL_2:
      sub_24484B03C(a1, a2, a4);
      break;
    case 0xFFFC:
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 320), a4);
      break;
    case 0xFFFD:
      sub_244CB3F40(a2, (_WORD *)(a1 + 324), a4);
      break;
    default:
      *(_DWORD *)a4 = 0;
      *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-common"
                            "/app-common/zap-generated/cluster-objects.cpp";
      *(_DWORD *)(a4 + 16) = 10194;
      break;
  }
}

void sub_24480AE24(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4 = *(_DWORD *)(a3 + 8);
  switch(v4)
  {
    case 65528:
      uint64_t v5 = a1 + 8;
      goto LABEL_3;
    case 65529:
      uint64_t v5 = a1 + 88;
      goto LABEL_3;
    case 65530:
      uint64_t v5 = a1 + 168;
      goto LABEL_3;
    case 65531:
      uint64_t v5 = a1 + 248;
LABEL_3:
      sub_24484B03C(v5, a2, a4);
      break;
    case 65532:
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 328), a4);
      break;
    case 65533:
      sub_244CB3F40(a2, (_WORD *)(a1 + 332), a4);
      break;
    default:
      if (v4)
      {
        *(_DWORD *)a4 = 0;
        *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-comm"
                              "on/app-common/zap-generated/cluster-objects.cpp";
        *(_DWORD *)(a4 + 16) = 10226;
      }
      else
      {
        sub_244CB3C0C(a2, (char *)a1, a4);
      }
      break;
  }
}

double sub_24480AEE0@<D0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265196398;
      uint64_t v9 = 10252;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3C0C(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_24480AFB8@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v5[0] = 0;
  return sub_24480AFE0(a1, a2, a3, v5, a4);
}

double sub_24480AFE0@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, unsigned char *a4@<X3>, uint64_t a5@<X8>)
{
  if (*a4)
  {
    int v10 = *sub_2446F9190(a4);
    int v11 = *(unsigned __int8 *)(a1 + 17);
    v13 = a2;
    sub_244CB7594(a2, a3, 21, &v16, (uint64_t)&v17);
    long long v14 = v17;
    uint64_t v15 = v18;
    if (v10 != v11) {
      goto LABEL_9;
    }
  }
  else
  {
    v13 = a2;
    sub_244CB7594(a2, a3, 21, &v16, (uint64_t)&v17);
    long long v14 = v17;
    uint64_t v15 = v18;
  }
  if (!v14)
  {
    sub_244CB68CC();
    uint64_t v15 = v18;
    long long v14 = v17;
    if (!v17)
    {
      sub_244CB68CC();
      long long v14 = v17;
      uint64_t v15 = v18;
    }
  }
  sub_2447F1C40((uint64_t)&v13, 4, (unsigned char *)(a1 + 16));
LABEL_9:
  if (*a4 && !v14)
  {
    sub_244CB68B8();
    long long v14 = v17;
    uint64_t v15 = v18;
  }
  if (!v14)
  {
    sub_244CB7708((uint64_t)v13, v16, (uint64_t)&v17);
    long long v14 = v17;
    uint64_t v15 = v18;
  }
  double result = *(double *)&v14;
  *(_OWORD *)a5 = v14;
  *(void *)(a5 + 16) = v15;
  return result;
}

double sub_24480B1D0@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  v6[0] = 1;
  v6[1] = a4;
  return sub_24480AFE0(a1, a2, a3, v6, a5);
}

double sub_24480B200@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  for (int i = v14; v14 != 1; int i = v14)
  {
    long long v10 = xmmword_2651963B0;
    uint64_t v11 = 10321;
    if (i) {
      sub_24484AFEC();
    }
    if (v12 > 3u)
    {
      if (v12 == 4)
      {
        sub_2447F1DCC(a2, (unsigned char *)(a1 + 16), &v8);
        goto LABEL_12;
      }
      if (v12 == 254)
      {
        sub_244CB3E8C(a2, (unsigned char *)(a1 + 17), (uint64_t)&v8);
        goto LABEL_12;
      }
    }
    else if (v12 == 1)
    {
      sub_244CB3EFC(a2, (void *)a1, (uint64_t)&v10);
    }
    else if (v12 == 2)
    {
      sub_244CB3EFC(a2, (void *)(a1 + 8), (uint64_t)&v8);
LABEL_12:
      long long v10 = v8;
      uint64_t v11 = v9;
    }
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
    if (*(_DWORD *)a3) {
      return result;
    }
    sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  }
  double result = *(double *)&v12;
  *(_OWORD *)a3 = v12;
  *(void *)(a3 + 16) = v13;
  return result;
}

double sub_24480B364@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB68CC();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB68CC();
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB6ADC(v7, *(char **)(a1 + 16), *(void *)(a1 + 24), (uint64_t)&v11);
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_24480248C(v7, (unsigned char *)(a1 + 32), (uint64_t)&v11);
          long long v8 = v11;
          uint64_t v9 = v12;
        }
      }
    }
  }
  sub_2447F1C40((uint64_t)&v7, 4, (unsigned char *)(a1 + 56));
  if (!v8)
  {
    sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_24480B4DC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_14:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_2651963C8;
      uint64_t v11 = 10375;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v12)
      {
        case 0:
          sub_244CB3EFC(a2, (void *)a1, (uint64_t)&v10);
          break;
        case 1:
          sub_244CB3EFC(a2, (void *)(a1 + 8), (uint64_t)&v8);
          goto LABEL_11;
        case 2:
          if (sub_244CB3B68(a2) == 16)
          {
            sub_244CB40C8(a2, (_OWORD *)(a1 + 16), &v8);
          }
          else
          {
            LODWORD(v8) = 43;
            *((void *)&v8 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
            LODWORD(v9) = 80;
          }
          goto LABEL_11;
        case 3:
          sub_2447F978C(a2, a1 + 32, (uint64_t)&v8);
          goto LABEL_11;
        case 4:
          sub_2447F1DCC(a2, (unsigned char *)(a1 + 56), &v8);
LABEL_11:
          long long v10 = v8;
          uint64_t v11 = v9;
          break;
        default:
          break;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_14;
      }
    }
  }
  return result;
}

double sub_24480B6A4@<D0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  sub_244CB7594(a1, a2, 21, &v8, (uint64_t)&v9);
  long long v6 = v9;
  uint64_t v7 = v10;
  if (!v9)
  {
    sub_244CB694C();
    uint64_t v7 = v10;
    long long v6 = v9;
    if (!v9)
    {
      sub_244CB7708((uint64_t)a1, v8, (uint64_t)&v9);
      long long v6 = v9;
      uint64_t v7 = v10;
    }
  }
  double result = *(double *)&v6;
  *(_OWORD *)a3 = v6;
  *(void *)(a3 + 16) = v7;
  return result;
}

double sub_24480B788@<D0>(_DWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_2651963E0;
      uint64_t v9 = 10425;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3FB0(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_24480B860@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB68CC();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_24480248C(a2, (unsigned char *)(a1 + 8), (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
        long long v8 = v11;
        uint64_t v9 = v12;
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_24480B970@<D0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_2651963F8;
      uint64_t v11 = 10460;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_2447F978C(a2, (uint64_t)(a1 + 1), (uint64_t)&v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB3EFC(a2, a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_24480BA80@<D0>(_DWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265196410;
      uint64_t v9 = 10498;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3FB0(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_24480BB58@<D0>(_DWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265196428;
      uint64_t v9 = 10532;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3FB0(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

void sub_24480BC30(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4 = (_DWORD *)a1;
  int v5 = *(_DWORD *)(a3 + 8);
  switch(v5)
  {
    case 0:
      goto LABEL_19;
    case 1:
      int v4 = (_DWORD *)(a1 + 4);
      goto LABEL_19;
    case 2:
      uint64_t v7 = (_WORD *)(a1 + 8);
      goto LABEL_21;
    case 3:
      uint64_t v6 = a1 + 16;
LABEL_5:
      sub_24484B03C(v6, a2, a4);
      return;
    case 4:
      int v4 = (_DWORD *)(a1 + 96);
      goto LABEL_19;
    case 5:
      uint64_t v7 = (_WORD *)(a1 + 100);
LABEL_21:
      sub_244CB3F40(a2, v7, a4);
      break;
    case 6:
      sub_24484B2E8(a2, (_DWORD *)(a1 + 104), (void *)a4);
      break;
    case 7:
      sub_244CB41F0(a2, (_OWORD *)(a1 + 112), (void *)a4);
      break;
    case 8:
      sub_2447F1DCC(a2, (unsigned char *)(a1 + 128), (void *)a4);
      break;
    case 9:
      int v4 = (_DWORD *)(a1 + 132);
LABEL_19:
      sub_244CB3FB0(a2, v4, a4);
      break;
    default:
      switch(v5)
      {
        case 65528:
          uint64_t v6 = a1 + 136;
          goto LABEL_5;
        case 65529:
          uint64_t v6 = a1 + 216;
          goto LABEL_5;
        case 65530:
          uint64_t v6 = a1 + 296;
          goto LABEL_5;
        case 65531:
          uint64_t v6 = a1 + 376;
          goto LABEL_5;
        case 65532:
          int v4 = (_DWORD *)(a1 + 456);
          goto LABEL_19;
        case 65533:
          uint64_t v7 = (_WORD *)(a1 + 460);
          goto LABEL_21;
        default:
          *(_DWORD *)a4 = 0;
          *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-co"
                                "mmon/app-common/zap-generated/cluster-objects.cpp";
          *(_DWORD *)(a4 + 16) = 10587;
          break;
      }
      break;
  }
}

double sub_24480BD8C@<D0>(_DWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265196440;
      uint64_t v9 = 10617;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3FB0(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_24480BE64@<D0>(_DWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265196458;
      uint64_t v9 = 10671;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3FB0(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_24480BF3C@<D0>(_DWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265196470;
      uint64_t v9 = 10705;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3FB0(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

void sub_24480C014(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4 = (_DWORD *)a1;
  int v5 = *(_DWORD *)(a3 + 8);
  if (v5 <= 65527)
  {
    if (v5)
    {
      if (v5 != 1)
      {
        if (v5 == 2)
        {
          sub_2446D1A48(a2, (unsigned char *)(a1 + 8), (void *)a4);
        }
        else
        {
LABEL_16:
          *(_DWORD *)a4 = 0;
          *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-co"
                                "mmon/app-common/zap-generated/cluster-objects.cpp";
          *(_DWORD *)(a4 + 16) = 10746;
        }
        return;
      }
      int v4 = (_DWORD *)(a1 + 4);
    }
LABEL_15:
    sub_244CB3FB0(a2, v4, a4);
    return;
  }
  switch(v5)
  {
    case 65528:
      uint64_t v6 = a1 + 16;
      goto LABEL_4;
    case 65529:
      uint64_t v6 = a1 + 96;
      goto LABEL_4;
    case 65530:
      uint64_t v6 = a1 + 176;
      goto LABEL_4;
    case 65531:
      uint64_t v6 = a1 + 256;
LABEL_4:
      sub_24484B03C(v6, a2, a4);
      break;
    case 65532:
      int v4 = (_DWORD *)(a1 + 336);
      goto LABEL_15;
    case 65533:
      sub_244CB3F40(a2, (_WORD *)(a1 + 340), a4);
      break;
    default:
      goto LABEL_16;
  }
}

double sub_24480C0F8@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_2447EE858(a1, a2, 0, (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
      long long v8 = v11;
      uint64_t v9 = v12;
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_24480C1DC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265196488;
      uint64_t v9 = 10857;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_2447EE994(a1, a2, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_24480C2B4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v6 = *(_DWORD *)(a3 + 8);
  if (!(!v5 & v4))
  {
    switch(v6)
    {
      case 0:
        sub_2447F50A0(a2, a1, (void *)a4);
        return result;
      case 1:
        sub_2447F15BC(a2, (unsigned __int8 *)(a1 + 88), a4);
        return result;
      case 2:
        sub_2447F4140(a2, a1 + 92, a4);
        return result;
      case 3:
        uint64_t v7 = a1 + 104;
        goto LABEL_5;
      case 4:
        sub_2446D1A48(a2, (unsigned char *)(a1 + 184), (void *)a4);
        return result;
      case 5:
        return sub_2447EE994(a1 + 192, a2, a4);
      default:
        JUMPOUT(0);
    }
  }
  switch(v6)
  {
    case 65528:
      uint64_t v7 = a1 + 248;
      goto LABEL_5;
    case 65529:
      uint64_t v7 = a1 + 328;
      goto LABEL_5;
    case 65530:
      uint64_t v7 = a1 + 408;
      goto LABEL_5;
    case 65531:
      uint64_t v7 = a1 + 488;
LABEL_5:
      sub_24484B03C(v7, a2, a4);
      break;
    case 65532:
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 568), a4);
      break;
    case 65533:
      sub_244CB3F40(a2, (_WORD *)(a1 + 572), a4);
      break;
    default:
      *(_DWORD *)a4 = 0;
      *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-common"
                            "/app-common/zap-generated/cluster-objects.cpp";
      *(_DWORD *)(a4 + 16) = 10904;
      break;
  }
  return result;
}

void sub_24480C3EC(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  int v7 = 0;
  a4[1] = 0;
  a4[2] = 0;
  *a4 = 0;
  sub_244CB7594(a2, a3, 21, &v7, (uint64_t)a4);
  if (!*(_DWORD *)a4)
  {
    *a4 = 0;
    a4[1] = 0;
    a4[2] = 0;
    sub_2447EE858(a1, a2, 0, (uint64_t)a4);
    if (!*(_DWORD *)a4) {
      sub_244CB7708((uint64_t)a2, v7, (uint64_t)a4);
    }
  }
}

double sub_24480C480@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_2651964A0;
      uint64_t v9 = 10930;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_2447EE994(a1, a2, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

void sub_24480C558(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  int v7 = 0;
  a4[1] = 0;
  a4[2] = 0;
  *a4 = 0;
  sub_244CB7594(a2, a3, 21, &v7, (uint64_t)a4);
  if (!*(_DWORD *)a4)
  {
    *a4 = 0;
    a4[1] = 0;
    a4[2] = 0;
    sub_244CB68B8();
    if (!*(_DWORD *)a4)
    {
      *a4 = 0;
      a4[1] = 0;
      a4[2] = 0;
      sub_24480C634((unsigned char *)(a1 + 4), (uint64_t)a4);
      if (!*(_DWORD *)a4)
      {
        *a4 = 0;
        a4[1] = 0;
        a4[2] = 0;
        sub_24480C634((unsigned char *)(a1 + 16), (uint64_t)a4);
        if (!*(_DWORD *)a4) {
          sub_244CB7708((uint64_t)a2, v7, (uint64_t)a4);
        }
      }
    }
  }
}

void sub_24480C634(unsigned char *a1@<X2>, uint64_t a2@<X8>)
{
  if (*a1)
  {
    v3 = sub_24484BC98(a1);
    sub_2447FAB34((uint64_t)v3, a2);
  }
  else
  {
    *(_DWORD *)a2 = 0;
    *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    *(_DWORD *)(a2 + 16) = 171;
  }
}

double sub_24480C6BC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  for (int i = v16; v16 != 1; int i = v16)
  {
    long long v12 = xmmword_2651964B8;
    uint64_t v13 = 10967;
    if (i) {
      sub_24484AFEC();
    }
    if (v14 == 2)
    {
      *(unsigned char *)(a1 + 16) = 1;
      *(void *)(a1 + 20) = 0;
      uint64_t v7 = a2;
      uint64_t v8 = a1 + 20;
    }
    else
    {
      if (v14 != 1)
      {
        if (!(_BYTE)v14) {
          sub_244CB3E8C(a2, (unsigned char *)a1, (uint64_t)&v12);
        }
        goto LABEL_10;
      }
      *(unsigned char *)(a1 + 4) = 1;
      *(void *)(a1 + 8) = 0;
      uint64_t v7 = a2;
      uint64_t v8 = a1 + 8;
    }
    sub_2447F4140(v7, v8, (uint64_t)&v10);
    long long v12 = v10;
    uint64_t v13 = v11;
LABEL_10:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
    if (*(_DWORD *)a3) {
      return result;
    }
    sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  }
  double result = *(double *)&v14;
  *(_OWORD *)a3 = v14;
  *(void *)(a3 + 16) = v15;
  return result;
}

double sub_24480C804@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_2651964D0;
      uint64_t v9 = 11016;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3E8C(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_24480C8DC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_2651964E8;
      uint64_t v11 = 11051;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        *(unsigned char *)(a1 + 8) = 1;
        *(void *)(a1 + 16) = 0;
        *(void *)(a1 + 24) = 0;
        sub_244CB41F0(a2, (_OWORD *)(a1 + 16), &v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB3E8C(a2, (unsigned char *)a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

void sub_24480C9F8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  switch(*(_DWORD *)(a3 + 8))
  {
    case 0xFFF8:
      a1 += 88;
      goto LABEL_3;
    case 0xFFF9:
      a1 += 168;
      goto LABEL_3;
    case 0xFFFA:
      a1 += 248;
      goto LABEL_3;
    case 0xFFFB:
      a1 += 328;
LABEL_3:
      sub_24484B03C(a1, a2, a4);
      break;
    case 0xFFFC:
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 408), a4);
      break;
    case 0xFFFD:
      sub_244CB3F40(a2, (_WORD *)(a1 + 412), a4);
      break;
    default:
      switch(*(_DWORD *)(a3 + 8))
      {
        case 0xFFF8:
          goto LABEL_3;
        case 0xFFF9:
          sub_244CB3E8C(a2, (unsigned char *)(a1 + 80), a4);
          return;
        case 0xFFFA:
          char v4 = (unsigned __int8 *)(a1 + 81);
          goto LABEL_14;
        case 0xFFFB:
          char v4 = (unsigned __int8 *)(a1 + 83);
LABEL_14:
          sub_2447F15BC(a2, v4, a4);
          break;
        default:
          *(_DWORD *)a4 = 0;
          *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-co"
                                "mmon/app-common/zap-generated/cluster-objects.cpp";
          *(_DWORD *)(a4 + 16) = 11098;
          break;
      }
      break;
  }
}

void sub_24480CB08(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4 = *(_DWORD *)(a3 + 8);
  switch(v4)
  {
    case 65528:
      a1 += 88;
      goto LABEL_3;
    case 65529:
      a1 += 168;
      goto LABEL_3;
    case 65530:
      a1 += 248;
      goto LABEL_3;
    case 65531:
      a1 += 328;
      goto LABEL_3;
    case 65532:
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 408), a4);
      return;
    case 65533:
      sub_244CB3F40(a2, (_WORD *)(a1 + 412), a4);
      return;
    default:
      if (v4 == 1)
      {
        sub_24480CBD0(a2, (unsigned __int8 *)(a1 + 80), a4);
      }
      else if (v4)
      {
        *(_DWORD *)a4 = 0;
        *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-comm"
                              "on/app-common/zap-generated/cluster-objects.cpp";
        *(_DWORD *)(a4 + 16) = 11132;
      }
      else
      {
LABEL_3:
        sub_24484B03C(a1, a2, a4);
      }
      return;
  }
}

uint64_t sub_24480CBD0@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = sub_244CB3B68(a1);
  if (result == 20)
  {
    if (a2[1]) {
      a2[1] = 0;
    }
    *(_DWORD *)a3 = 0;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
    int v7 = 168;
LABEL_5:
    *(_DWORD *)(a3 + 16) = v7;
    return result;
  }
  *(void *)a3 = 0;
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  *(_WORD *)a2 = 256;
  uint64_t result = sub_2446D1A48(a1, a2, (void *)a3);
  if (!*(_DWORD *)a3)
  {
    if (!a2[1]) {
      sub_24479484C();
    }
    if (*a2 == 255)
    {
      *(_DWORD *)a3 = 1415;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
      int v7 = 175;
    }
    else
    {
      *(_DWORD *)a3 = 0;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
      int v7 = 177;
    }
    goto LABEL_5;
  }
  return result;
}

double sub_24480CCA8@<D0>(_WORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_11:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265196500;
      uint64_t v11 = 11163;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_244CB3F40(a2, a1 + 1, (uint64_t)&v10);
      }
      else if (!(_BYTE)v12)
      {
        long long v8 = 0uLL;
        uint64_t v9 = 0;
        sub_24484B11C(a2, a1, &v8);
        if (!v8)
        {
          LODWORD(v8) = 0;
          *((void *)&v8 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
          LODWORD(v9) = 61;
        }
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_11;
      }
    }
  }
  return result;
}

double sub_24480CDE8@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB6D80(v7, *(char **)a1, *(void *)(a1 + 8), (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB68B8();
      long long v8 = v11;
      uint64_t v9 = v12;
    }
  }
  sub_24480CF08((uint64_t)&v7, 2u, (uint64_t *)(a1 + 24));
  if (!v8)
  {
    sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_24480CF08(uint64_t a1, unsigned int a2, uint64_t *a3)
{
  uint64_t v3 = a1 + 8;
  if (!*(_DWORD *)(a1 + 8))
  {
    int v4 = *(void **)a1;
    uint64_t v5 = *a3;
    uint64_t v6 = a3[1];
    int v11 = 0;
    uint64_t v10 = 0;
    long long v9 = 0uLL;
    sub_244CB7594(v4, a2, 22, &v11, (uint64_t)&v9);
    if (!v9)
    {
      if (v6)
      {
        uint64_t v7 = 4 * v6;
        while (1)
        {
          long long v9 = 0uLL;
          uint64_t v10 = 0;
          sub_2447F852C(v4, 256, (uint64_t)&v9);
          if (v9) {
            break;
          }
          v5 += 4;
          v7 -= 4;
          if (!v7) {
            goto LABEL_7;
          }
        }
      }
      else
      {
LABEL_7:
        long long v9 = 0uLL;
        uint64_t v10 = 0;
        sub_244CB7708((uint64_t)v4, v11, (uint64_t)&v9);
        if (!v9)
        {
          LODWORD(v9) = 0;
          *((void *)&v9 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/List.h";
          LODWORD(v10) = 86;
        }
      }
    }
    double result = *(double *)&v9;
    *(_OWORD *)uint64_t v3 = v9;
    *(void *)(v3 + 16) = v10;
  }
  return result;
}

double sub_24480CFF4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  for (int i = v14; v14 != 1; int i = v14)
  {
    long long v10 = xmmword_265196518;
    uint64_t v11 = 11205;
    if (i) {
      sub_24484AFEC();
    }
    if (v12 == 2)
    {
      sub_24484B03C(a1 + 24, a2, (uint64_t)&v8);
    }
    else
    {
      if (v12 != 1)
      {
        if (!(_BYTE)v12) {
          sub_244CB41F0(a2, (_OWORD *)a1, &v10);
        }
        goto LABEL_10;
      }
      sub_244CB3E8C(a2, (unsigned char *)(a1 + 16), (uint64_t)&v8);
    }
    long long v10 = v8;
    uint64_t v11 = v9;
LABEL_10:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
    if (*(_DWORD *)a3) {
      return result;
    }
    sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  }
  double result = *(double *)&v12;
  *(_OWORD *)a3 = v12;
  *(void *)(a3 + 16) = v13;
  return result;
}

double sub_24480D124@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265196530;
      uint64_t v9 = 11251;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3E8C(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

void sub_24480D1FC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v6 = *(_DWORD *)(a3 + 8);
  if (!v5 & v4)
  {
    switch(v6)
    {
      case 65528:
        uint64_t v7 = a1 + 112;
        goto LABEL_5;
      case 65529:
        uint64_t v7 = a1 + 192;
        goto LABEL_5;
      case 65530:
        uint64_t v7 = a1 + 272;
        goto LABEL_5;
      case 65531:
        uint64_t v7 = a1 + 352;
LABEL_5:
        sub_24484B03C(v7, a2, a4);
        break;
      case 65532:
        sub_244CB3FB0(a2, (_DWORD *)(a1 + 432), a4);
        break;
      case 65533:
        sub_244CB3F40(a2, (_WORD *)(a1 + 436), a4);
        break;
      default:
        *(_DWORD *)a4 = 0;
        *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-comm"
                              "on/app-common/zap-generated/cluster-objects.cpp";
        *(_DWORD *)(a4 + 16) = 11298;
        break;
    }
  }
  else
  {
    switch(v6)
    {
      case 0:
        sub_244CB41F0(a2, (_OWORD *)a1, (void *)a4);
        return;
      case 1:
        sub_2447EF9E0(a2, (__int16 *)(a1 + 16), a4);
        return;
      case 2:
        uint64_t v7 = a1 + 24;
        goto LABEL_5;
      case 3:
        sub_244CB3E8C(a2, (unsigned char *)(a1 + 104), a4);
        return;
      case 4:
        long long v8 = (unsigned __int8 *)(a1 + 105);
        goto LABEL_19;
      case 5:
        long long v8 = (unsigned __int8 *)(a1 + 107);
LABEL_19:
        sub_2447F15BC(a2, v8, a4);
        break;
      default:
        JUMPOUT(0);
    }
  }
}

double sub_24480D334@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265196548;
      uint64_t v9 = 11329;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3E8C(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_24480D40C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265196560;
      uint64_t v11 = 11364;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        *(unsigned char *)(a1 + 8) = 1;
        *(void *)(a1 + 16) = 0;
        *(void *)(a1 + 24) = 0;
        sub_244CB41F0(a2, (_OWORD *)(a1 + 16), &v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB3E8C(a2, (unsigned char *)a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

void sub_24480D528(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  switch(*(_DWORD *)(a3 + 8))
  {
    case 0xFFF8:
      a1 += 88;
      goto LABEL_3;
    case 0xFFF9:
      a1 += 168;
      goto LABEL_3;
    case 0xFFFA:
      a1 += 248;
      goto LABEL_3;
    case 0xFFFB:
      a1 += 328;
LABEL_3:
      sub_24484B03C(a1, a2, a4);
      break;
    case 0xFFFC:
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 408), a4);
      break;
    case 0xFFFD:
      sub_244CB3F40(a2, (_WORD *)(a1 + 412), a4);
      break;
    default:
      switch(*(_DWORD *)(a3 + 8))
      {
        case 0xFFF8:
          goto LABEL_3;
        case 0xFFF9:
          sub_244CB3E8C(a2, (unsigned char *)(a1 + 80), a4);
          return;
        case 0xFFFA:
          char v4 = (unsigned __int8 *)(a1 + 81);
          goto LABEL_14;
        case 0xFFFB:
          char v4 = (unsigned __int8 *)(a1 + 83);
LABEL_14:
          sub_2447F15BC(a2, v4, a4);
          break;
        default:
          *(_DWORD *)a4 = 0;
          *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-co"
                                "mmon/app-common/zap-generated/cluster-objects.cpp";
          *(_DWORD *)(a4 + 16) = 11411;
          break;
      }
      break;
  }
}

double sub_24480D638@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265196578;
      uint64_t v9 = 11442;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3E8C(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_24480D710@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265196590;
      uint64_t v11 = 11477;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        *(unsigned char *)(a1 + 8) = 1;
        *(void *)(a1 + 16) = 0;
        *(void *)(a1 + 24) = 0;
        sub_244CB41F0(a2, (_OWORD *)(a1 + 16), &v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB3E8C(a2, (unsigned char *)a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

void sub_24480D82C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  switch(*(_DWORD *)(a3 + 8))
  {
    case 0xFFF8:
      a1 += 88;
      goto LABEL_3;
    case 0xFFF9:
      a1 += 168;
      goto LABEL_3;
    case 0xFFFA:
      a1 += 248;
      goto LABEL_3;
    case 0xFFFB:
      a1 += 328;
LABEL_3:
      sub_24484B03C(a1, a2, a4);
      break;
    case 0xFFFC:
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 408), a4);
      break;
    case 0xFFFD:
      sub_244CB3F40(a2, (_WORD *)(a1 + 412), a4);
      break;
    default:
      switch(*(_DWORD *)(a3 + 8))
      {
        case 0xFFF8:
          goto LABEL_3;
        case 0xFFF9:
          sub_244CB3E8C(a2, (unsigned char *)(a1 + 80), a4);
          return;
        case 0xFFFA:
          char v4 = (unsigned __int8 *)(a1 + 81);
          goto LABEL_14;
        case 0xFFFB:
          char v4 = (unsigned __int8 *)(a1 + 83);
LABEL_14:
          sub_2447F15BC(a2, v4, a4);
          break;
        default:
          *(_DWORD *)a4 = 0;
          *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-co"
                                "mmon/app-common/zap-generated/cluster-objects.cpp";
          *(_DWORD *)(a4 + 16) = 11524;
          break;
      }
      break;
  }
}

void sub_24480D93C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  switch(*(_DWORD *)(a3 + 8))
  {
    case 0xFFF8:
      a1 += 168;
      goto LABEL_3;
    case 0xFFF9:
      a1 += 248;
      goto LABEL_3;
    case 0xFFFA:
      a1 += 328;
      goto LABEL_3;
    case 0xFFFB:
      a1 += 408;
LABEL_3:
      sub_24484B03C(a1, a2, a4);
      break;
    case 0xFFFC:
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 488), a4);
      break;
    case 0xFFFD:
      sub_244CB3F40(a2, (_WORD *)(a1 + 492), a4);
      break;
    default:
      switch(*(_DWORD *)(a3 + 8))
      {
        case 0xFFF8:
          goto LABEL_3;
        case 0xFFF9:
          sub_2447F15BC(a2, (unsigned __int8 *)(a1 + 80), a4);
          break;
        case 0xFFFA:
          sub_2446D1A48(a2, (unsigned char *)(a1 + 82), (void *)a4);
          break;
        case 0xFFFB:
          a1 += 88;
          goto LABEL_3;
        default:
          *(_DWORD *)a4 = 0;
          *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-co"
                                "mmon/app-common/zap-generated/cluster-objects.cpp";
          *(_DWORD *)(a4 + 16) = 11562;
          break;
      }
      break;
  }
}

double sub_24480DA4C@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_2651965A8;
      uint64_t v9 = 11593;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3E8C(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_24480DB24@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_2651965C0;
      uint64_t v11 = 11628;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        *(unsigned char *)(a1 + 8) = 1;
        *(void *)(a1 + 16) = 0;
        *(void *)(a1 + 24) = 0;
        sub_244CB41F0(a2, (_OWORD *)(a1 + 16), &v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB3E8C(a2, (unsigned char *)a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

void sub_24480DC40(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4 = *(_DWORD *)(a3 + 8);
  switch(v4)
  {
    case 65528:
      a1 += 88;
      goto LABEL_3;
    case 65529:
      a1 += 168;
      goto LABEL_3;
    case 65530:
      a1 += 248;
      goto LABEL_3;
    case 65531:
      a1 += 328;
      goto LABEL_3;
    case 65532:
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 408), a4);
      return;
    case 65533:
      sub_244CB3F40(a2, (_WORD *)(a1 + 412), a4);
      return;
    default:
      if (v4 == 1)
      {
        sub_244CB3E8C(a2, (unsigned char *)(a1 + 80), a4);
      }
      else if (v4)
      {
        *(_DWORD *)a4 = 0;
        *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-comm"
                              "on/app-common/zap-generated/cluster-objects.cpp";
        *(_DWORD *)(a4 + 16) = 11671;
      }
      else
      {
LABEL_3:
        sub_24484B03C(a1, a2, a4);
      }
      return;
  }
}

double sub_24480DD08@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_2651965D8;
      uint64_t v9 = 11702;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3E8C(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_24480DDE0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_2651965F0;
      uint64_t v11 = 11737;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        *(unsigned char *)(a1 + 8) = 1;
        *(void *)(a1 + 16) = 0;
        *(void *)(a1 + 24) = 0;
        sub_244CB41F0(a2, (_OWORD *)(a1 + 16), &v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB3E8C(a2, (unsigned char *)a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

void sub_24480DEFC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4 = *(_DWORD *)(a3 + 8);
  switch(v4)
  {
    case 65528:
      a1 += 88;
      goto LABEL_3;
    case 65529:
      a1 += 168;
      goto LABEL_3;
    case 65530:
      a1 += 248;
      goto LABEL_3;
    case 65531:
      a1 += 328;
      goto LABEL_3;
    case 65532:
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 408), a4);
      return;
    case 65533:
      sub_244CB3F40(a2, (_WORD *)(a1 + 412), a4);
      return;
    default:
      if (v4 == 1)
      {
        sub_244CB3E8C(a2, (unsigned char *)(a1 + 80), a4);
      }
      else if (v4)
      {
        *(_DWORD *)a4 = 0;
        *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-comm"
                              "on/app-common/zap-generated/cluster-objects.cpp";
        *(_DWORD *)(a4 + 16) = 11780;
      }
      else
      {
LABEL_3:
        sub_24484B03C(a1, a2, a4);
      }
      return;
  }
}

double sub_24480DFC4@<D0>(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_24484BCBC(a1, (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244813DC0(a1 + 4, (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
        long long v8 = v11;
        uint64_t v9 = v12;
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_24480E0D4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265196608;
      uint64_t v11 = 11811;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        *(_WORD *)(a1 + 4) = 1;
        sub_244CB3E8C(a2, (unsigned char *)(a1 + 5), (uint64_t)&v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        *(unsigned char *)a1 = 1;
        *(_WORD *)(a1 + 2) = 0;
        sub_244CB3D8C(a2, (_WORD *)(a1 + 2), (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

void sub_24480E200(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v6 = (_WORD *)a1;
  int v7 = *(_DWORD *)(a3 + 8);
  if (!(!v5 & v4))
  {
    switch(v7)
    {
      case 0:
        goto LABEL_16;
      case 1:
        int v6 = (_WORD *)(a1 + 2);
        goto LABEL_16;
      case 2:
        int v6 = (_WORD *)(a1 + 4);
        goto LABEL_16;
      case 3:
        int v6 = (_WORD *)(a1 + 6);
LABEL_16:
        sub_244CB3D8C(a2, v6, a4);
        return;
      case 4:
        sub_244CB3E8C(a2, (unsigned char *)(a1 + 8), a4);
        return;
      case 5:
        uint64_t v8 = a1 + 16;
        goto LABEL_5;
      default:
        JUMPOUT(0);
    }
  }
  switch(v7)
  {
    case 65528:
      uint64_t v8 = a1 + 96;
      goto LABEL_5;
    case 65529:
      uint64_t v8 = a1 + 176;
      goto LABEL_5;
    case 65530:
      uint64_t v8 = a1 + 256;
      goto LABEL_5;
    case 65531:
      uint64_t v8 = a1 + 336;
LABEL_5:
      sub_24484B03C(v8, a2, a4);
      break;
    case 65532:
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 416), a4);
      break;
    case 65533:
      sub_244CB3F40(a2, (_WORD *)(a1 + 420), a4);
      break;
    default:
      *(_DWORD *)a4 = 0;
      *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-common"
                            "/app-common/zap-generated/cluster-objects.cpp";
      *(_DWORD *)(a4 + 16) = 11862;
      break;
  }
}

void sub_24480E324(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  char v4 = (_DWORD *)a1;
  int v5 = *(_DWORD *)(a3 + 8);
  if (v5 <= 65527)
  {
    if (v5)
    {
      if (v5 == 2)
      {
        char v4 = (_DWORD *)(a1 + 4);
      }
      else
      {
        if (v5 != 3)
        {
LABEL_16:
          *(_DWORD *)a4 = 0;
          *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-co"
                                "mmon/app-common/zap-generated/cluster-objects.cpp";
          *(_DWORD *)(a4 + 16) = 11898;
          return;
        }
        char v4 = (_DWORD *)(a1 + 8);
      }
    }
    sub_24484B2E8(a2, v4, (void *)a4);
    return;
  }
  switch(v5)
  {
    case 65528:
      uint64_t v6 = a1 + 16;
      goto LABEL_4;
    case 65529:
      uint64_t v6 = a1 + 96;
      goto LABEL_4;
    case 65530:
      uint64_t v6 = a1 + 176;
      goto LABEL_4;
    case 65531:
      uint64_t v6 = a1 + 256;
LABEL_4:
      sub_24484B03C(v6, a2, a4);
      break;
    case 65532:
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 336), a4);
      break;
    case 65533:
      sub_244CB3F40(a2, (_WORD *)(a1 + 340), a4);
      break;
    default:
      goto LABEL_16;
  }
}

void sub_24480E408(void *a1@<X1>, uint64_t a2@<X2>, void *a3@<X8>)
{
  int v5 = 0;
  a3[1] = 0;
  a3[2] = 0;
  *a3 = 0;
  sub_244CB7594(a1, a2, 21, &v5, (uint64_t)a3);
  if (!*(_DWORD *)a3)
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
    sub_244CB694C();
    if (!*(_DWORD *)a3)
    {
      *a3 = 0;
      a3[1] = 0;
      a3[2] = 0;
      sub_244CB694C();
      if (!*(_DWORD *)a3)
      {
        *a3 = 0;
        a3[1] = 0;
        a3[2] = 0;
        sub_244CB694C();
        if (!*(_DWORD *)a3)
        {
          *a3 = 0;
          a3[1] = 0;
          a3[2] = 0;
          sub_244CB694C();
          if (!*(_DWORD *)a3) {
            sub_244CB7708((uint64_t)a1, v5, (uint64_t)a3);
          }
        }
      }
    }
  }
}

double sub_24480E508@<D0>(_DWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  int v6 = v16;
  if (v16 == 1)
  {
LABEL_11:
    double result = *(double *)&v14;
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 16) = v15;
  }
  else
  {
    while (1)
    {
      long long v12 = xmmword_265196620;
      uint64_t v13 = 11927;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v14)
      {
        case 0:
          sub_24484B2E8(a2, a1, &v12);
          break;
        case 1:
          uint64_t v7 = a2;
          uint64_t v8 = a1 + 1;
          goto LABEL_8;
        case 2:
          uint64_t v7 = a2;
          uint64_t v8 = a1 + 2;
          goto LABEL_8;
        case 3:
          uint64_t v7 = a2;
          uint64_t v8 = a1 + 3;
LABEL_8:
          sub_24484B2E8(v7, v8, &v10);
          long long v12 = v10;
          uint64_t v13 = v11;
          break;
        default:
          break;
      }
      double result = *(double *)&v12;
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
      int v6 = v16;
      if (v16 == 1) {
        goto LABEL_11;
      }
    }
  }
  return result;
}

double sub_24480E674@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265196638;
      uint64_t v9 = 11980;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3E8C(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_24480E74C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265196650;
      uint64_t v11 = 12015;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        *(unsigned char *)(a1 + 8) = 1;
        *(void *)(a1 + 16) = 0;
        *(void *)(a1 + 24) = 0;
        sub_244CB41F0(a2, (_OWORD *)(a1 + 16), &v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB3E8C(a2, (unsigned char *)a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

void sub_24480E868(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  switch(*(_DWORD *)(a3 + 8))
  {
    case 0xFFF8:
      a1 += 88;
      goto LABEL_3;
    case 0xFFF9:
      a1 += 168;
      goto LABEL_3;
    case 0xFFFA:
      a1 += 248;
      goto LABEL_3;
    case 0xFFFB:
      a1 += 328;
LABEL_3:
      sub_24484B03C(a1, a2, a4);
      break;
    case 0xFFFC:
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 408), a4);
      break;
    case 0xFFFD:
      sub_244CB3F40(a2, (_WORD *)(a1 + 412), a4);
      break;
    default:
      switch(*(_DWORD *)(a3 + 8))
      {
        case 0xFFF8:
          goto LABEL_3;
        case 0xFFF9:
          sub_244CB3E8C(a2, (unsigned char *)(a1 + 80), a4);
          return;
        case 0xFFFA:
          char v4 = (unsigned __int8 *)(a1 + 81);
          goto LABEL_14;
        case 0xFFFB:
          char v4 = (unsigned __int8 *)(a1 + 83);
LABEL_14:
          sub_2447F15BC(a2, v4, a4);
          break;
        default:
          *(_DWORD *)a4 = 0;
          *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-co"
                                "mmon/app-common/zap-generated/cluster-objects.cpp";
          *(_DWORD *)(a4 + 16) = 12062;
          break;
      }
      break;
  }
}

void sub_24480E978(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4 = *(_DWORD *)(a3 + 8);
  switch(v4)
  {
    case 65528:
      uint64_t v5 = a1 + 8;
      goto LABEL_3;
    case 65529:
      uint64_t v5 = a1 + 88;
      goto LABEL_3;
    case 65530:
      uint64_t v5 = a1 + 168;
      goto LABEL_3;
    case 65531:
      uint64_t v5 = a1 + 248;
LABEL_3:
      sub_24484B03C(v5, a2, a4);
      break;
    case 65532:
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 328), a4);
      break;
    case 65533:
      sub_244CB3F40(a2, (_WORD *)(a1 + 332), a4);
      break;
    default:
      if (v4)
      {
        *(_DWORD *)a4 = 0;
        *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-comm"
                              "on/app-common/zap-generated/cluster-objects.cpp";
        *(_DWORD *)(a4 + 16) = 12094;
      }
      else
      {
        sub_2447F6AD4(a2, (unsigned char *)a1, (void *)a4);
      }
      break;
  }
}

void sub_24480EA34(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4 = *(_DWORD *)(a3 + 8);
  switch(v4)
  {
    case 0:
      sub_2447FA994(a2, (unsigned char *)a1, (void *)a4);
      return;
    case 1:
      int v6 = (unsigned char *)(a1 + 1);
      goto LABEL_28;
    case 2:
      int v6 = (unsigned char *)(a1 + 2);
      goto LABEL_28;
    case 3:
      int v6 = (unsigned char *)(a1 + 3);
      goto LABEL_28;
    case 4:
      uint64_t v7 = (unsigned char *)(a1 + 4);
      uint64_t v8 = a2;
      uint64_t v9 = v7;
      goto LABEL_10;
    case 5:
      long long v10 = (char *)(a1 + 5);
      goto LABEL_13;
    case 6:
      long long v10 = (char *)(a1 + 6);
LABEL_13:
      sub_244CB3C0C(a2, v10, a4);
      return;
    case 7:
      uint64_t v11 = (unsigned char *)(a1 + 7);
      uint64_t v8 = a2;
      uint64_t v9 = v11;
LABEL_10:
      sub_2447F1DCC(v8, v9, (void *)a4);
      return;
    case 8:
      int v6 = (unsigned char *)(a1 + 8);
      goto LABEL_28;
    case 9:
      int v6 = (unsigned char *)(a1 + 9);
LABEL_28:
      uint64_t v13 = a2;
      int v14 = v6;
      goto LABEL_18;
    case 10:
      sub_2446D1A48(a2, (unsigned char *)(a1 + 10), (void *)a4);
      return;
    case 11:
      long long v12 = (unsigned char *)(a1 + 11);
      uint64_t v13 = a2;
      int v14 = v12;
LABEL_18:
      sub_2447F5F24(v13, v14, (void *)a4);
      break;
    case 12:
      uint64_t v15 = (_DWORD *)(a1 + 12);
LABEL_25:
      sub_244CB3FB0(a2, v15, a4);
      break;
    default:
      switch(v4)
      {
        case 65528:
          uint64_t v5 = a1 + 16;
          goto LABEL_5;
        case 65529:
          uint64_t v5 = a1 + 96;
          goto LABEL_5;
        case 65530:
          uint64_t v5 = a1 + 176;
          goto LABEL_5;
        case 65531:
          uint64_t v5 = a1 + 256;
LABEL_5:
          sub_24484B03C(v5, a2, a4);
          break;
        case 65532:
          uint64_t v15 = (_DWORD *)(a1 + 336);
          goto LABEL_25;
        case 65533:
          sub_244CB3F40(a2, (_WORD *)(a1 + 340), a4);
          break;
        default:
          *(_DWORD *)a4 = 0;
          *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-co"
                                "mmon/app-common/zap-generated/cluster-objects.cpp";
          *(_DWORD *)(a4 + 16) = 12171;
          break;
      }
      break;
  }
}

void sub_24480EBD8(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  int v7 = 0;
  a4[1] = 0;
  a4[2] = 0;
  *a4 = 0;
  sub_244CB7594(a2, a3, 21, &v7, (uint64_t)a4);
  if (!*(_DWORD *)a4)
  {
    *a4 = 0;
    a4[1] = 0;
    a4[2] = 0;
    if (*a1 == 3)
    {
      *(_DWORD *)a4 = 1415;
      a4[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
      *((_DWORD *)a4 + 4) = 75;
    }
    else
    {
      sub_244CB68B8();
      if (!*(_DWORD *)a4) {
        sub_244CB7708((uint64_t)a2, v7, (uint64_t)a4);
      }
    }
  }
}

double sub_24480EC94@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265196668;
      uint64_t v9 = 12197;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_2447F5F24(a2, a1, &v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_24480ED6C@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265196680;
      uint64_t v9 = 12232;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_2447F5F24(a2, a1, &v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_24480EE44@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265196698;
      uint64_t v9 = 12267;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_2447F5F24(a2, a1, &v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_24480EF1C@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_2651966B0;
      uint64_t v9 = 12407;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_2447F5F24(a2, a1, &v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_24480EFF4@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_2651966C8;
      uint64_t v9 = 12442;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_2447F5F24(a2, a1, &v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_24480F0CC@<D0>(_DWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_2651966E0;
      uint64_t v9 = 12503;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_24484B2E8(a2, a1, &v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_24480F1A4@<D0>(_DWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_2651966F8;
      uint64_t v9 = 12537;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_24484B2E8(a2, a1, &v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

void sub_24480F27C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4 = (_DWORD *)a1;
  switch(*(_DWORD *)(a3 + 8))
  {
    case 0xFFF8:
      uint64_t v5 = a1 + 16;
      goto LABEL_3;
    case 0xFFF9:
      uint64_t v5 = a1 + 96;
      goto LABEL_3;
    case 0xFFFA:
      uint64_t v5 = a1 + 176;
      goto LABEL_3;
    case 0xFFFB:
      uint64_t v5 = a1 + 256;
LABEL_3:
      sub_24484B03C(v5, a2, a4);
      break;
    case 0xFFFC:
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 336), a4);
      break;
    case 0xFFFD:
      sub_244CB3F40(a2, (_WORD *)(a1 + 340), a4);
      break;
    default:
      switch(*(_DWORD *)(a3 + 8))
      {
        case 0xFFF8:
          goto LABEL_14;
        case 0xFFF9:
          int v4 = (_DWORD *)(a1 + 4);
          goto LABEL_14;
        case 0xFFFA:
          int v4 = (_DWORD *)(a1 + 8);
          goto LABEL_14;
        case 0xFFFB:
          int v4 = (_DWORD *)(a1 + 12);
LABEL_14:
          sub_24484B2E8(a2, v4, (void *)a4);
          break;
        default:
          *(_DWORD *)a4 = 0;
          *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-co"
                                "mmon/app-common/zap-generated/cluster-objects.cpp";
          *(_DWORD *)(a4 + 16) = 12580;
          break;
      }
      break;
  }
}

double sub_24480F384@<D0>(_DWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  int v6 = v16;
  if (v16 == 1)
  {
LABEL_11:
    double result = *(double *)&v14;
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 16) = v15;
  }
  else
  {
    while (1)
    {
      long long v12 = xmmword_265196710;
      uint64_t v13 = 12609;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v14)
      {
        case 0:
          sub_24484B2E8(a2, a1, &v12);
          break;
        case 1:
          uint64_t v7 = a2;
          long long v8 = a1 + 1;
          goto LABEL_8;
        case 2:
          uint64_t v7 = a2;
          long long v8 = a1 + 2;
          goto LABEL_8;
        case 3:
          uint64_t v7 = a2;
          long long v8 = a1 + 3;
LABEL_8:
          sub_24484B2E8(v7, v8, &v10);
          long long v12 = v10;
          uint64_t v13 = v11;
          break;
        default:
          break;
      }
      double result = *(double *)&v12;
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
      int v6 = v16;
      if (v16 == 1) {
        goto LABEL_11;
      }
    }
  }
  return result;
}

void sub_24480F4F0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4 = *(_DWORD *)(a3 + 8);
  switch(v4)
  {
    case 65528:
      a1 += 88;
      goto LABEL_3;
    case 65529:
      a1 += 168;
      goto LABEL_3;
    case 65530:
      a1 += 248;
      goto LABEL_3;
    case 65531:
      a1 += 328;
      goto LABEL_3;
    case 65532:
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 408), a4);
      return;
    case 65533:
      sub_244CB3F40(a2, (_WORD *)(a1 + 412), a4);
      return;
    default:
      if (v4 == 1)
      {
        sub_244CB3E8C(a2, (unsigned char *)(a1 + 80), a4);
      }
      else if (v4)
      {
        *(_DWORD *)a4 = 0;
        *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-comm"
                              "on/app-common/zap-generated/cluster-objects.cpp";
        *(_DWORD *)(a4 + 16) = 12666;
      }
      else
      {
LABEL_3:
        sub_24484B03C(a1, a2, a4);
      }
      return;
  }
}

double sub_24480F5B8@<D0>(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244813DC0(a1, (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_24483F918(a1 + 4, (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244813DC0(a1 + 12, (uint64_t)&v11);
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_244813DC0(a1 + 14, (uint64_t)&v11);
          uint64_t v9 = v12;
          long long v8 = v11;
          if (!v11)
          {
            sub_24484B7DC(a1 + 16, (uint64_t)&v11);
            uint64_t v9 = v12;
            long long v8 = v11;
            if (!v11)
            {
              sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
              long long v8 = v11;
              uint64_t v9 = v12;
            }
          }
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_24480F74C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  int v6 = v16;
  if (v16 == 1)
  {
LABEL_13:
    double result = *(double *)&v14;
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 16) = v15;
  }
  else
  {
    while (1)
    {
      long long v12 = xmmword_265196728;
      uint64_t v13 = 12700;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v14)
      {
        case 0:
          *(_WORD *)a1 = 1;
          sub_244CB3E8C(a2, (unsigned char *)(a1 + 1), (uint64_t)&v12);
          break;
        case 1:
          *(unsigned char *)(a1 + 4) = 1;
          *(_DWORD *)(a1 + 8) = 0;
          sub_244CB3FB0(a2, (_DWORD *)(a1 + 8), (uint64_t)&v10);
          goto LABEL_10;
        case 2:
          *(_WORD *)(a1 + 12) = 1;
          uint64_t v7 = a2;
          long long v8 = (unsigned char *)(a1 + 13);
          goto LABEL_8;
        case 3:
          *(_WORD *)(a1 + 14) = 1;
          uint64_t v7 = a2;
          long long v8 = (unsigned char *)(a1 + 15);
LABEL_8:
          sub_244CB3E8C(v7, v8, (uint64_t)&v10);
          goto LABEL_10;
        case 4:
          *(_WORD *)(a1 + 16) = 1;
          sub_244CB3C0C(a2, (char *)(a1 + 17), (uint64_t)&v10);
LABEL_10:
          long long v12 = v10;
          uint64_t v13 = v11;
          break;
        default:
          break;
      }
      double result = *(double *)&v12;
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
      int v6 = v16;
      if (v16 == 1) {
        goto LABEL_13;
      }
    }
  }
  return result;
}

double sub_24480F900@<D0>(_DWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265196740;
      uint64_t v9 = 12750;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3FB0(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

void sub_24480F9D8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4 = (_DWORD *)a1;
  int v5 = *(_DWORD *)(a3 + 8);
  switch(v5)
  {
    case 0:
      goto LABEL_19;
    case 1:
      int v4 = (_DWORD *)(a1 + 4);
LABEL_19:
      sub_244CB3FB0(a2, v4, a4);
      return;
    case 2:
      uint64_t v7 = (unsigned char *)(a1 + 8);
      goto LABEL_12;
    case 3:
      uint64_t v7 = (unsigned char *)(a1 + 9);
      goto LABEL_12;
    case 4:
      uint64_t v7 = (unsigned char *)(a1 + 10);
      goto LABEL_12;
    case 5:
      uint64_t v7 = (unsigned char *)(a1 + 11);
      goto LABEL_12;
    case 6:
      uint64_t v6 = a1 + 16;
LABEL_5:
      sub_24484B03C(v6, a2, a4);
      return;
    case 7:
      uint64_t v7 = (unsigned char *)(a1 + 96);
LABEL_12:
      sub_244CB3E8C(a2, v7, a4);
      break;
    case 8:
      long long v8 = (_WORD *)(a1 + 98);
LABEL_21:
      sub_244CB3F40(a2, v8, a4);
      break;
    default:
      switch(v5)
      {
        case 65528:
          uint64_t v6 = a1 + 104;
          goto LABEL_5;
        case 65529:
          uint64_t v6 = a1 + 184;
          goto LABEL_5;
        case 65530:
          uint64_t v6 = a1 + 264;
          goto LABEL_5;
        case 65531:
          uint64_t v6 = a1 + 344;
          goto LABEL_5;
        case 65532:
          int v4 = (_DWORD *)(a1 + 424);
          goto LABEL_19;
        case 65533:
          long long v8 = (_WORD *)(a1 + 428);
          goto LABEL_21;
        default:
          *(_DWORD *)a4 = 0;
          *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-co"
                                "mmon/app-common/zap-generated/cluster-objects.cpp";
          *(_DWORD *)(a4 + 16) = 12803;
          break;
      }
      break;
  }
}

double sub_24480FB18@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265196758;
      uint64_t v9 = 12914;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_2447EE994(a1, a2, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_24480FBF0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v6 = *(_DWORD *)(a3 + 8);
  if (!(!v5 & v4))
  {
    switch(v6)
    {
      case 0:
        sub_2447F50A0(a2, a1, (void *)a4);
        return result;
      case 1:
        sub_2447F15BC(a2, (unsigned __int8 *)(a1 + 88), a4);
        return result;
      case 2:
        sub_2447F4140(a2, a1 + 92, a4);
        return result;
      case 3:
        uint64_t v7 = a1 + 104;
        goto LABEL_5;
      case 4:
        sub_2446D1A48(a2, (unsigned char *)(a1 + 184), (void *)a4);
        return result;
      case 5:
        return sub_2447EE994(a1 + 192, a2, a4);
      default:
        JUMPOUT(0);
    }
  }
  switch(v6)
  {
    case 65528:
      uint64_t v7 = a1 + 248;
      goto LABEL_5;
    case 65529:
      uint64_t v7 = a1 + 328;
      goto LABEL_5;
    case 65530:
      uint64_t v7 = a1 + 408;
      goto LABEL_5;
    case 65531:
      uint64_t v7 = a1 + 488;
LABEL_5:
      sub_24484B03C(v7, a2, a4);
      break;
    case 65532:
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 568), a4);
      break;
    case 65533:
      sub_244CB3F40(a2, (_WORD *)(a1 + 572), a4);
      break;
    default:
      *(_DWORD *)a4 = 0;
      *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-common"
                            "/app-common/zap-generated/cluster-objects.cpp";
      *(_DWORD *)(a4 + 16) = 12961;
      break;
  }
  return result;
}

double sub_24480FD28@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265196770;
      uint64_t v9 = 12987;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_2447EE994(a1, a2, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_24480FE00@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  for (int i = v16; v16 != 1; int i = v16)
  {
    long long v12 = xmmword_265196788;
    uint64_t v13 = 13024;
    if (i) {
      sub_24484AFEC();
    }
    if (v14 == 2)
    {
      *(unsigned char *)(a1 + 16) = 1;
      *(void *)(a1 + 20) = 0;
      uint64_t v7 = a2;
      uint64_t v8 = a1 + 20;
    }
    else
    {
      if (v14 != 1)
      {
        if (!(_BYTE)v14) {
          sub_244CB3E8C(a2, (unsigned char *)a1, (uint64_t)&v12);
        }
        goto LABEL_10;
      }
      *(unsigned char *)(a1 + 4) = 1;
      *(void *)(a1 + 8) = 0;
      uint64_t v7 = a2;
      uint64_t v8 = a1 + 8;
    }
    sub_2447F4140(v7, v8, (uint64_t)&v10);
    long long v12 = v10;
    uint64_t v13 = v11;
LABEL_10:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
    if (*(_DWORD *)a3) {
      return result;
    }
    sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  }
  double result = *(double *)&v14;
  *(_OWORD *)a3 = v14;
  *(void *)(a3 + 16) = v15;
  return result;
}

double sub_24480FF48@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_2651967A0;
      uint64_t v9 = 13113;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_2447EE994(a1, a2, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_244810020@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v6 = *(_DWORD *)(a3 + 8);
  if (!(!v5 & v4))
  {
    switch(v6)
    {
      case 0:
        sub_2447F50A0(a2, a1, (void *)a4);
        return result;
      case 1:
        sub_2447F15BC(a2, (unsigned __int8 *)(a1 + 88), a4);
        return result;
      case 2:
        sub_2447F4140(a2, a1 + 92, a4);
        return result;
      case 3:
        uint64_t v7 = a1 + 104;
        goto LABEL_5;
      case 4:
        sub_244CB3E8C(a2, (unsigned char *)(a1 + 184), a4);
        return result;
      case 5:
        return sub_2447EE994(a1 + 192, a2, a4);
      default:
        JUMPOUT(0);
    }
  }
  switch(v6)
  {
    case 65528:
      uint64_t v7 = a1 + 248;
      goto LABEL_5;
    case 65529:
      uint64_t v7 = a1 + 328;
      goto LABEL_5;
    case 65530:
      uint64_t v7 = a1 + 408;
      goto LABEL_5;
    case 65531:
      uint64_t v7 = a1 + 488;
LABEL_5:
      sub_24484B03C(v7, a2, a4);
      break;
    case 65532:
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 568), a4);
      break;
    case 65533:
      sub_244CB3F40(a2, (_WORD *)(a1 + 572), a4);
      break;
    default:
      *(_DWORD *)a4 = 0;
      *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-common"
                            "/app-common/zap-generated/cluster-objects.cpp";
      *(_DWORD *)(a4 + 16) = 13180;
      break;
  }
  return result;
}

double sub_244810158@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_2651967B8;
      uint64_t v9 = 13206;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_2447EE994(a1, a2, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_244810230@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  for (int i = v16; v16 != 1; int i = v16)
  {
    long long v12 = xmmword_2651967D0;
    uint64_t v13 = 13243;
    if (i) {
      sub_24484AFEC();
    }
    if (v14 == 2)
    {
      *(unsigned char *)(a1 + 16) = 1;
      *(void *)(a1 + 20) = 0;
      uint64_t v7 = a2;
      uint64_t v8 = a1 + 20;
    }
    else
    {
      if (v14 != 1)
      {
        if (!(_BYTE)v14) {
          sub_244CB3E8C(a2, (unsigned char *)a1, (uint64_t)&v12);
        }
        goto LABEL_10;
      }
      *(unsigned char *)(a1 + 4) = 1;
      *(void *)(a1 + 8) = 0;
      uint64_t v7 = a2;
      uint64_t v8 = a1 + 8;
    }
    sub_2447F4140(v7, v8, (uint64_t)&v10);
    long long v12 = v10;
    uint64_t v13 = v11;
LABEL_10:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
    if (*(_DWORD *)a3) {
      return result;
    }
    sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  }
  double result = *(double *)&v14;
  *(_OWORD *)a3 = v14;
  *(void *)(a3 + 16) = v15;
  return result;
}

double sub_244810378@<D0>(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB694C();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244813DC0(a1 + 4, (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_24484BD44(a1 + 6, (uint64_t)&v11);
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_24483F80C(a1 + 8, (uint64_t)&v11);
          uint64_t v9 = v12;
          long long v8 = v11;
          if (!v11)
          {
            sub_24484BCBC(a1 + 12, (uint64_t)&v11);
            uint64_t v9 = v12;
            long long v8 = v11;
            if (!v11)
            {
              sub_24483F918(a1 + 16, (uint64_t)&v11);
              uint64_t v9 = v12;
              long long v8 = v11;
              if (!v11)
              {
                sub_24484BDCC(a1 + 24, (uint64_t)&v11);
                uint64_t v9 = v12;
                long long v8 = v11;
                if (!v11)
                {
                  sub_244839174(a1 + 32, (uint64_t)&v11);
                  uint64_t v9 = v12;
                  long long v8 = v11;
                  if (!v11)
                  {
                    sub_24481D370(a1 + 48, (uint64_t)&v11);
                    uint64_t v9 = v12;
                    long long v8 = v11;
                    if (!v11)
                    {
                      sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
                      long long v8 = v11;
                      uint64_t v9 = v12;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2448105BC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_16:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_2651967E8;
      uint64_t v11 = 13299;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v12)
      {
        case 0:
          sub_244CB3FB0(a2, (_DWORD *)a1, (uint64_t)&v10);
          break;
        case 1:
          *(_WORD *)(a1 + 4) = 1;
          sub_244CB3E8C(a2, (unsigned char *)(a1 + 5), (uint64_t)&v8);
          goto LABEL_13;
        case 2:
          *(_WORD *)(a1 + 6) = 1;
          sub_244CB3C70(a2, (unsigned char *)(a1 + 7), (uint64_t)&v8);
          goto LABEL_13;
        case 3:
          *(unsigned char *)(a1 + 8) = 1;
          *(_WORD *)(a1 + 10) = 0;
          sub_244CB3F40(a2, (_WORD *)(a1 + 10), (uint64_t)&v8);
          goto LABEL_13;
        case 4:
          *(unsigned char *)(a1 + 12) = 1;
          *(_WORD *)(a1 + 14) = 0;
          sub_244CB3D8C(a2, (_WORD *)(a1 + 14), (uint64_t)&v8);
          goto LABEL_13;
        case 5:
          *(unsigned char *)(a1 + 16) = 1;
          *(_DWORD *)(a1 + 20) = 0;
          sub_244CB3FB0(a2, (_DWORD *)(a1 + 20), (uint64_t)&v8);
          goto LABEL_13;
        case 6:
          *(unsigned char *)(a1 + 24) = 1;
          *(_DWORD *)(a1 + 28) = 0;
          sub_244CB3E0C(a2, (_DWORD *)(a1 + 28), (uint64_t)&v8);
          goto LABEL_13;
        case 7:
          *(unsigned char *)(a1 + 32) = 1;
          *(void *)(a1 + 40) = 0;
          sub_244CB3EFC(a2, (void *)(a1 + 40), (uint64_t)&v8);
          goto LABEL_13;
        case 8:
          *(unsigned char *)(a1 + 48) = 1;
          *(void *)(a1 + 56) = 0;
          sub_244CB3CF0(a2, (void *)(a1 + 56), (uint64_t)&v8);
LABEL_13:
          long long v10 = v8;
          uint64_t v11 = v9;
          break;
        default:
          break;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_16;
      }
    }
  }
  return result;
}

double sub_244810808@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB694C();
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  sub_2448108FC((uint64_t)&v7, 1u, a1 + 8);
  if (!v8)
  {
    sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2448108FC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = a1 + 8;
  if (!*(_DWORD *)(a1 + 8))
  {
    char v4 = *(void **)a1;
    char v5 = *(unsigned char **)a3;
    uint64_t v6 = *(void *)(a3 + 8);
    int v11 = 0;
    uint64_t v10 = 0;
    long long v9 = 0uLL;
    sub_244CB7594(v4, a2, 22, &v11, (uint64_t)&v9);
    if (!v9)
    {
      if (v6)
      {
        uint64_t v7 = v6 << 6;
        while (1)
        {
          long long v9 = 0uLL;
          uint64_t v10 = 0;
          sub_244810378(v5, v4, 256, (uint64_t)&v9);
          if (v9) {
            break;
          }
          v5 += 64;
          v7 -= 64;
          if (!v7) {
            goto LABEL_7;
          }
        }
      }
      else
      {
LABEL_7:
        long long v9 = 0uLL;
        uint64_t v10 = 0;
        sub_244CB7708((uint64_t)v4, v11, (uint64_t)&v9);
        if (!v9)
        {
          LODWORD(v9) = 0;
          *((void *)&v9 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/List.h";
          LODWORD(v10) = 86;
        }
      }
    }
    double result = *(double *)&v9;
    *(_OWORD *)uint64_t v3 = v9;
    *(void *)(v3 + 16) = v10;
  }
  return result;
}

double sub_2448109E8@<D0>(_DWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265196800;
      uint64_t v11 = 13368;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_24484B03C((uint64_t)(a1 + 2), a2, (uint64_t)&v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB3FB0(a2, a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_244810AF8@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v5[0] = 0;
  return sub_244810B20(a1, a2, a3, v5, a4);
}

double sub_244810B20@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, unsigned char *a4@<X3>, uint64_t a5@<X8>)
{
  if (!*a4)
  {
    uint64_t v14 = (uint64_t)a2;
    sub_244CB7594(a2, a3, 21, &v17, (uint64_t)&v18);
    long long v15 = v18;
    uint64_t v16 = v19;
    if (!v18)
    {
      sub_244CB68B8();
      long long v15 = v18;
      uint64_t v16 = v19;
    }
    goto LABEL_8;
  }
  int v10 = *sub_2446F9190(a4);
  int v11 = *(unsigned __int8 *)(a1 + 6);
  uint64_t v14 = (uint64_t)a2;
  sub_244CB7594(a2, a3, 21, &v17, (uint64_t)&v18);
  long long v15 = v18;
  uint64_t v16 = v19;
  if (!v18)
  {
    sub_244CB68B8();
    long long v15 = v18;
    uint64_t v16 = v19;
  }
  if (v10 == v11)
  {
LABEL_8:
    if (!v15)
    {
      sub_244CB68B8();
      uint64_t v16 = v19;
      long long v15 = v18;
      if (!v18)
      {
        sub_244CB6904();
        uint64_t v16 = v19;
        long long v15 = v18;
        if (!v18)
        {
          sub_244CB65C8();
          long long v15 = v18;
          uint64_t v16 = v19;
        }
      }
    }
  }
  int v12 = v15;
  if (!v15)
  {
    sub_244CB68B8();
    uint64_t v16 = v19;
    long long v15 = v18;
    int v12 = v18;
  }
  if (*a4)
  {
    if (v12) {
      goto LABEL_19;
    }
    sub_244CB68B8();
    uint64_t v16 = v19;
    long long v15 = v18;
    int v12 = v18;
  }
  if (!v12)
  {
    sub_244CB7708(v14, v17, (uint64_t)&v18);
    long long v15 = v18;
    uint64_t v16 = v19;
  }
LABEL_19:
  double result = *(double *)&v15;
  *(_OWORD *)a5 = v15;
  *(void *)(a5 + 16) = v16;
  return result;
}

double sub_244810DB0@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  v6[0] = 1;
  v6[1] = a4;
  return sub_244810B20(a1, a2, a3, v6, a5);
}

double sub_244810DE0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  int v6 = v16;
  if (v16 != 1)
  {
    while (2)
    {
      long long v12 = xmmword_265196818;
      uint64_t v13 = 13439;
      if (!v6)
      {
        switch((char)v14)
        {
          case 0:
            sub_244CB3E8C(a2, (unsigned char *)a1, (uint64_t)&v12);
            goto LABEL_13;
          case 1:
            uint64_t v7 = a2;
            long long v8 = (unsigned char *)(a1 + 1);
            goto LABEL_11;
          case 2:
            sub_244CB3F40(a2, (_WORD *)(a1 + 2), (uint64_t)&v10);
            goto LABEL_12;
          case 3:
            sub_244CB3C0C(a2, (char *)(a1 + 4), (uint64_t)&v10);
            goto LABEL_12;
          case 4:
            uint64_t v7 = a2;
            long long v8 = (unsigned char *)(a1 + 5);
            goto LABEL_11;
          default:
            if (v14 != 254) {
              goto LABEL_13;
            }
            uint64_t v7 = a2;
            long long v8 = (unsigned char *)(a1 + 6);
LABEL_11:
            sub_244CB3E8C(v7, v8, (uint64_t)&v10);
LABEL_12:
            long long v12 = v10;
            uint64_t v13 = v11;
LABEL_13:
            double result = *(double *)&v12;
            *(_OWORD *)a3 = v12;
            *(void *)(a3 + 16) = v13;
            if (*(_DWORD *)a3) {
              return result;
            }
            sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
            int v6 = v16;
            if (v16 == 1) {
              goto LABEL_15;
            }
            continue;
        }
      }
      break;
    }
    sub_24484AFEC();
  }
LABEL_15:
  double result = *(double *)&v14;
  *(_OWORD *)a3 = v14;
  *(void *)(a3 + 16) = v15;
  return result;
}

double sub_244810F90@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB6904();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB68B8();
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB694C();
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_244CB6D80(v7, *(char **)(a1 + 8), *(void *)(a1 + 16), (uint64_t)&v11);
          long long v8 = v11;
          uint64_t v9 = v12;
        }
      }
    }
  }
  sub_244811108((uint64_t)&v7, 4u, (uint64_t *)(a1 + 24));
  if (!v8)
  {
    sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244811108(uint64_t a1, unsigned int a2, uint64_t *a3)
{
  uint64_t v3 = a1 + 8;
  if (!*(_DWORD *)(a1 + 8))
  {
    char v4 = *(void **)a1;
    uint64_t v5 = *a3;
    uint64_t v6 = a3[1];
    int v11 = 0;
    uint64_t v10 = 0;
    long long v9 = 0uLL;
    sub_244CB7594(v4, a2, 22, &v11, (uint64_t)&v9);
    if (!v9)
    {
      if (v6)
      {
        uint64_t v7 = 24 * v6;
        while (1)
        {
          long long v9 = 0uLL;
          uint64_t v10 = 0;
          sub_244810808(v5, v4, 256, (uint64_t)&v9);
          if (v9) {
            break;
          }
          v5 += 24;
          v7 -= 24;
          if (!v7) {
            goto LABEL_7;
          }
        }
      }
      else
      {
LABEL_7:
        long long v9 = 0uLL;
        uint64_t v10 = 0;
        sub_244CB7708((uint64_t)v4, v11, (uint64_t)&v9);
        if (!v9)
        {
          LODWORD(v9) = 0;
          *((void *)&v9 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/List.h";
          LODWORD(v10) = 86;
        }
      }
    }
    double result = *(double *)&v9;
    *(_OWORD *)uint64_t v3 = v9;
    *(void *)(v3 + 16) = v10;
  }
  return result;
}

double sub_2448111F8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_12:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265196830;
      uint64_t v11 = 13501;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v12)
      {
        case 0:
          sub_244CB3F40(a2, (_WORD *)a1, (uint64_t)&v10);
          break;
        case 1:
          sub_244CB3E8C(a2, (unsigned char *)(a1 + 2), (uint64_t)&v8);
          goto LABEL_9;
        case 2:
          sub_244CB3FB0(a2, (_DWORD *)(a1 + 4), (uint64_t)&v8);
          goto LABEL_9;
        case 3:
          sub_244CB41F0(a2, (_OWORD *)(a1 + 8), &v8);
          goto LABEL_9;
        case 4:
          sub_24484B03C(a1 + 24, a2, (uint64_t)&v8);
LABEL_9:
          long long v10 = v8;
          uint64_t v11 = v9;
          break;
        default:
          break;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_12;
      }
    }
  }
  return result;
}

double sub_244811388@<D0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  sub_244CB7594(a1, a2, 21, &v8, (uint64_t)&v9);
  long long v6 = v9;
  uint64_t v7 = v10;
  if (!v9)
  {
    sub_244CB68B8();
    uint64_t v7 = v10;
    long long v6 = v9;
    if (!v9)
    {
      sub_244CB6904();
      uint64_t v7 = v10;
      long long v6 = v9;
      if (!v9)
      {
        sub_244CB68B8();
        uint64_t v7 = v10;
        long long v6 = v9;
        if (!v9)
        {
          sub_244CB7708((uint64_t)a1, v8, (uint64_t)&v9);
          long long v6 = v9;
          uint64_t v7 = v10;
        }
      }
    }
  }
  double result = *(double *)&v6;
  *(_OWORD *)a3 = v6;
  *(void *)(a3 + 16) = v7;
  return result;
}

double sub_2448114C4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  for (int i = v14; v14 != 1; int i = v14)
  {
    long long v10 = xmmword_265196848;
    uint64_t v11 = 13553;
    if (i) {
      sub_24484AFEC();
    }
    if (v12 == 2)
    {
      sub_244CB3E8C(a2, (unsigned char *)(a1 + 4), (uint64_t)&v8);
    }
    else
    {
      if (v12 != 1)
      {
        if (!(_BYTE)v12) {
          sub_244CB3E8C(a2, (unsigned char *)a1, (uint64_t)&v10);
        }
        goto LABEL_10;
      }
      sub_244CB3F40(a2, (_WORD *)(a1 + 2), (uint64_t)&v8);
    }
    long long v10 = v8;
    uint64_t v11 = v9;
LABEL_10:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
    if (*(_DWORD *)a3) {
      return result;
    }
    sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  }
  double result = *(double *)&v12;
  *(_OWORD *)a3 = v12;
  *(void *)(a3 + 16) = v13;
  return result;
}

double sub_2448115F4@<D0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  sub_244CB7594(a1, a2, 21, &v8, (uint64_t)&v9);
  long long v6 = v9;
  uint64_t v7 = v10;
  if (!v9)
  {
    sub_244CB6904();
    uint64_t v7 = v10;
    long long v6 = v9;
    if (!v9)
    {
      sub_244CB68B8();
      uint64_t v7 = v10;
      long long v6 = v9;
      if (!v9)
      {
        sub_244CB7708((uint64_t)a1, v8, (uint64_t)&v9);
        long long v6 = v9;
        uint64_t v7 = v10;
      }
    }
  }
  double result = *(double *)&v6;
  *(_OWORD *)a3 = v6;
  *(void *)(a3 + 16) = v7;
  return result;
}

double sub_244811704@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265196860;
      uint64_t v11 = 13596;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_244CB3E8C(a2, (unsigned char *)(a1 + 2), (uint64_t)&v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB3F40(a2, (_WORD *)a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_244811814@<D0>(unsigned char *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB68B8();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB6904();
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB68B8();
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_24483F918(a1 + 8, (uint64_t)&v11);
          uint64_t v9 = v12;
          long long v8 = v11;
          if (!v11)
          {
            sub_2447F6524(a2, a1 + 16, (uint64_t)&v11);
            uint64_t v9 = v12;
            long long v8 = v11;
            if (!v11)
            {
              sub_24484BE54(a2, 5, a1 + 40, (uint64_t)&v11);
              uint64_t v9 = v12;
              long long v8 = v11;
              if (!v11)
              {
                sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
                long long v8 = v11;
                uint64_t v9 = v12;
              }
            }
          }
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2448119D4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_13:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265196878;
      uint64_t v11 = 13639;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v12)
      {
        case 0:
          sub_244CB3E8C(a2, (unsigned char *)a1, (uint64_t)&v10);
          break;
        case 1:
          sub_244CB3F40(a2, (_WORD *)(a1 + 2), (uint64_t)&v8);
          goto LABEL_10;
        case 2:
          sub_244CB3E8C(a2, (unsigned char *)(a1 + 4), (uint64_t)&v8);
          goto LABEL_10;
        case 3:
          *(unsigned char *)(a1 + 8) = 1;
          *(_DWORD *)(a1 + 12) = 0;
          sub_244CB3FB0(a2, (_DWORD *)(a1 + 12), (uint64_t)&v8);
          goto LABEL_10;
        case 4:
          *(unsigned char *)(a1 + 16) = 1;
          *(void *)(a1 + 24) = 0;
          *(void *)(a1 + 32) = 0;
          sub_244CB41F0(a2, (_OWORD *)(a1 + 24), &v8);
          goto LABEL_10;
        case 5:
          sub_2447FE7A4(a2, (unsigned char *)(a1 + 40), (uint64_t)&v8);
LABEL_10:
          long long v10 = v8;
          uint64_t v11 = v9;
          break;
        default:
          break;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_13;
      }
    }
  }
  return result;
}

double sub_244811B9C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265196890;
      uint64_t v11 = 13694;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_244CB3E8C(a2, (unsigned char *)(a1 + 2), (uint64_t)&v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB3F40(a2, (_WORD *)a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_244811CAC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  for (int i = v14; v14 != 1; int i = v14)
  {
    long long v10 = xmmword_2651968A8;
    uint64_t v11 = 13734;
    if (i) {
      sub_24484AFEC();
    }
    if (v12 == 2)
    {
      sub_244CB3E8C(a2, (unsigned char *)(a1 + 4), (uint64_t)&v8);
    }
    else
    {
      if (v12 != 1)
      {
        if (!(_BYTE)v12) {
          sub_244CB3E8C(a2, (unsigned char *)a1, (uint64_t)&v10);
        }
        goto LABEL_10;
      }
      sub_244CB3F40(a2, (_WORD *)(a1 + 2), (uint64_t)&v8);
    }
    long long v10 = v8;
    uint64_t v11 = v9;
LABEL_10:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
    if (*(_DWORD *)a3) {
      return result;
    }
    sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  }
  double result = *(double *)&v12;
  *(_OWORD *)a3 = v12;
  *(void *)(a3 + 16) = v13;
  return result;
}

double sub_244811DDC@<D0>(_WORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_2651968C0;
      uint64_t v9 = 13776;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3F40(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_244811EB4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_2651968D8;
      uint64_t v11 = 13811;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_244CB3F40(a2, (_WORD *)(a1 + 2), (uint64_t)&v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB3E8C(a2, (unsigned char *)a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_244811FC4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_2651968F0;
      uint64_t v11 = 13850;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_244CB3E8C(a2, (unsigned char *)(a1 + 2), (uint64_t)&v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB3F40(a2, (_WORD *)a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_2448120D4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  for (int i = v14; v14 != 1; int i = v14)
  {
    long long v10 = xmmword_265196908;
    uint64_t v11 = 13890;
    if (i) {
      sub_24484AFEC();
    }
    if (v12 == 2)
    {
      sub_244CB3E8C(a2, (unsigned char *)(a1 + 4), (uint64_t)&v8);
    }
    else
    {
      if (v12 != 1)
      {
        if (!(_BYTE)v12) {
          sub_244CB3E8C(a2, (unsigned char *)a1, (uint64_t)&v10);
        }
        goto LABEL_10;
      }
      sub_244CB3F40(a2, (_WORD *)(a1 + 2), (uint64_t)&v8);
    }
    long long v10 = v8;
    uint64_t v11 = v9;
LABEL_10:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
    if (*(_DWORD *)a3) {
      return result;
    }
    sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  }
  double result = *(double *)&v12;
  *(_OWORD *)a3 = v12;
  *(void *)(a3 + 16) = v13;
  return result;
}

double sub_244812204@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB6904();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB68B8();
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_24480C634((unsigned char *)(a1 + 4), (uint64_t)&v11);
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
          long long v8 = v11;
          uint64_t v9 = v12;
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244812340@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  for (int i = v14; v14 != 1; int i = v14)
  {
    long long v10 = xmmword_265196920;
    uint64_t v11 = 13934;
    if (i) {
      sub_24484AFEC();
    }
    if (v12 == 2)
    {
      *(unsigned char *)(a1 + 4) = 1;
      *(void *)(a1 + 8) = 0;
      sub_2447F4140(a2, a1 + 8, (uint64_t)&v8);
    }
    else
    {
      if (v12 != 1)
      {
        if (!(_BYTE)v12) {
          sub_244CB3F40(a2, (_WORD *)a1, (uint64_t)&v10);
        }
        goto LABEL_10;
      }
      sub_244CB3E8C(a2, (unsigned char *)(a1 + 2), (uint64_t)&v8);
    }
    long long v10 = v8;
    uint64_t v11 = v9;
LABEL_10:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
    if (*(_DWORD *)a3) {
      return result;
    }
    sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  }
  double result = *(double *)&v12;
  *(_OWORD *)a3 = v12;
  *(void *)(a3 + 16) = v13;
  return result;
}

double sub_244812484@<D0>(_WORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265196938;
      uint64_t v9 = 13976;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3F40(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_24481255C@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB68B8();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_2447FB010((unsigned __int8 *)(a1 + 1), (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB6904();
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_24484BF60(a2, 3, (unsigned char *)(a1 + 8), (uint64_t)&v11);
          uint64_t v9 = v12;
          long long v8 = v11;
          if (!v11)
          {
            sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
            long long v8 = v11;
            uint64_t v9 = v12;
          }
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2448126C4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_11:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265196950;
      uint64_t v11 = 14013;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v12)
      {
        case 0:
          sub_244CB3E8C(a2, (unsigned char *)a1, (uint64_t)&v10);
          break;
        case 1:
          sub_2447F15BC(a2, (unsigned __int8 *)(a1 + 1), (uint64_t)&v8);
          goto LABEL_8;
        case 2:
          sub_244CB3F40(a2, (_WORD *)(a1 + 4), (uint64_t)&v8);
          goto LABEL_8;
        case 3:
          sub_2447FE7A4(a2, (unsigned char *)(a1 + 8), (uint64_t)&v8);
LABEL_8:
          long long v10 = v8;
          uint64_t v11 = v9;
          break;
        default:
          break;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_11;
      }
    }
  }
  return result;
}

double sub_244812838@<D0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  sub_244CB7594(a1, a2, 21, &v8, (uint64_t)&v9);
  long long v6 = v9;
  uint64_t v7 = v10;
  if (!v9)
  {
    sub_244CB68B8();
    uint64_t v7 = v10;
    long long v6 = v9;
    if (!v9)
    {
      sub_244CB6904();
      uint64_t v7 = v10;
      long long v6 = v9;
      if (!v9)
      {
        sub_244CB68B8();
        uint64_t v7 = v10;
        long long v6 = v9;
        if (!v9)
        {
          sub_244CB6904();
          uint64_t v7 = v10;
          long long v6 = v9;
          if (!v9)
          {
            sub_244CB68B8();
            uint64_t v7 = v10;
            long long v6 = v9;
            if (!v9)
            {
              sub_244CB7708((uint64_t)a1, v8, (uint64_t)&v9);
              long long v6 = v9;
              uint64_t v7 = v10;
            }
          }
        }
      }
    }
  }
  double result = *(double *)&v6;
  *(_OWORD *)a3 = v6;
  *(void *)(a3 + 16) = v7;
  return result;
}

double sub_2448129CC@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v19[0] = 0;
  uint64_t v20 = a2;
  sub_2447ED6F8((uint64_t)v19, (uint64_t)&v16);
  int v6 = v18;
  if (v18 == 1)
  {
LABEL_14:
    double result = *(double *)&v16;
    *(_OWORD *)a3 = v16;
    *(void *)(a3 + 16) = v17;
  }
  else
  {
    while (1)
    {
      long long v14 = xmmword_265196968;
      uint64_t v15 = 14063;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v16)
      {
        case 0:
          sub_24484B184(a2, a1, &v14);
          break;
        case 1:
          uint64_t v7 = a2;
          int v8 = a1 + 2;
          goto LABEL_8;
        case 2:
          uint64_t v9 = a2;
          uint64_t v10 = a1 + 4;
          goto LABEL_10;
        case 3:
          uint64_t v7 = a2;
          int v8 = a1 + 6;
LABEL_8:
          sub_244CB3F40(v7, v8, (uint64_t)&v12);
          goto LABEL_11;
        case 4:
          uint64_t v9 = a2;
          uint64_t v10 = a1 + 8;
LABEL_10:
          sub_244CB3E8C(v9, v10, (uint64_t)&v12);
LABEL_11:
          long long v14 = v12;
          uint64_t v15 = v13;
          break;
        default:
          break;
      }
      double result = *(double *)&v14;
      *(_OWORD *)a3 = v14;
      *(void *)(a3 + 16) = v15;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v19, (uint64_t)&v16);
      int v6 = v18;
      if (v18 == 1) {
        goto LABEL_14;
      }
    }
  }
  return result;
}

double sub_244812B54@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  for (int i = v14; v14 != 1; int i = v14)
  {
    long long v10 = xmmword_265196980;
    uint64_t v11 = 14115;
    if (i) {
      sub_24484AFEC();
    }
    if (v12 == 2)
    {
      sub_244CB3E8C(a2, (unsigned char *)(a1 + 4), (uint64_t)&v8);
    }
    else
    {
      if (v12 != 1)
      {
        if (!(_BYTE)v12) {
          sub_244CB3E8C(a2, (unsigned char *)a1, (uint64_t)&v10);
        }
        goto LABEL_10;
      }
      sub_244CB3F40(a2, (_WORD *)(a1 + 2), (uint64_t)&v8);
    }
    long long v10 = v8;
    uint64_t v11 = v9;
LABEL_10:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
    if (*(_DWORD *)a3) {
      return result;
    }
    sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  }
  double result = *(double *)&v12;
  *(_OWORD *)a3 = v12;
  *(void *)(a3 + 16) = v13;
  return result;
}

void sub_244812C84(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4 = *(_DWORD *)(a3 + 8);
  if (v4 <= 65527)
  {
    if (v4)
    {
      if (v4 == 1)
      {
        int v6 = (_WORD *)(a1 + 16);
LABEL_16:
        sub_244CB3F40(a2, v6, a4);
      }
      else if (v4 == 2)
      {
        uint64_t v5 = a1 + 24;
LABEL_4:
        sub_24484B03C(v5, a2, a4);
      }
      else
      {
LABEL_17:
        *(_DWORD *)a4 = 0;
        *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-comm"
                              "on/app-common/zap-generated/cluster-objects.cpp";
        *(_DWORD *)(a4 + 16) = 14164;
      }
    }
    else
    {
      sub_2447F5E48(a2, a1, a4);
    }
  }
  else
  {
    switch(v4)
    {
      case 65528:
        uint64_t v5 = a1 + 104;
        goto LABEL_4;
      case 65529:
        uint64_t v5 = a1 + 184;
        goto LABEL_4;
      case 65530:
        uint64_t v5 = a1 + 264;
        goto LABEL_4;
      case 65531:
        uint64_t v5 = a1 + 344;
        goto LABEL_4;
      case 65532:
        sub_244CB3FB0(a2, (_DWORD *)(a1 + 424), a4);
        break;
      case 65533:
        int v6 = (_WORD *)(a1 + 428);
        goto LABEL_16;
      default:
        goto LABEL_17;
    }
  }
}

double sub_244812D6C@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  sub_244800450((uint64_t)&v7, 0, (unsigned char *)a1);
  if (!v8)
  {
    sub_244CB6D80(v7, *(char **)(a1 + 8), *(void *)(a1 + 16), (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
      long long v8 = v11;
      uint64_t v9 = v12;
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244812E60@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265196998;
      uint64_t v11 = 14195;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_244CB41F0(a2, (_OWORD *)(a1 + 8), &v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_2447FACE4(a2, (unsigned char *)a1, &v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

void sub_244812F70(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v6 = *(_DWORD *)(a3 + 8);
  if (!(!v5 & v4))
  {
    switch(v6)
    {
      case 0:
        sub_244CB3E8C(a2, (unsigned char *)a1, a4);
        return;
      case 1:
        sub_2447F1DCC(a2, (unsigned char *)(a1 + 1), (void *)a4);
        return;
      case 2:
        sub_2447F5F24(a2, (unsigned char *)(a1 + 2), (void *)a4);
        return;
      case 3:
        sub_244CB3C0C(a2, (char *)(a1 + 3), a4);
        return;
      case 4:
        sub_2447F4140(a2, a1 + 4, a4);
        return;
      case 5:
        uint64_t v7 = a1 + 16;
        goto LABEL_5;
      default:
        JUMPOUT(0);
    }
  }
  switch(v6)
  {
    case 65528:
      uint64_t v7 = a1 + 96;
      goto LABEL_5;
    case 65529:
      uint64_t v7 = a1 + 176;
      goto LABEL_5;
    case 65530:
      uint64_t v7 = a1 + 256;
      goto LABEL_5;
    case 65531:
      uint64_t v7 = a1 + 336;
LABEL_5:
      sub_24484B03C(v7, a2, a4);
      break;
    case 65532:
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 416), a4);
      break;
    case 65533:
      sub_244CB3F40(a2, (_WORD *)(a1 + 420), a4);
      break;
    default:
      *(_DWORD *)a4 = 0;
      *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-common"
                            "/app-common/zap-generated/cluster-objects.cpp";
      *(_DWORD *)(a4 + 16) = 14270;
      break;
  }
}

double sub_2448130B0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_2651969B0;
      uint64_t v11 = 14301;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_244CB41F0(a2, (_OWORD *)(a1 + 8), &v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_2447FACE4(a2, (unsigned char *)a1, &v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

void sub_2448131C0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v6 = *(_DWORD *)(a3 + 8);
  if (!(!v5 & v4))
  {
    switch(v6)
    {
      case 0:
        sub_244CB3E8C(a2, (unsigned char *)a1, a4);
        return;
      case 1:
        sub_2447F1DCC(a2, (unsigned char *)(a1 + 1), (void *)a4);
        return;
      case 2:
        sub_2447F5F24(a2, (unsigned char *)(a1 + 2), (void *)a4);
        return;
      case 3:
        sub_244CB3C0C(a2, (char *)(a1 + 3), a4);
        return;
      case 4:
        sub_2447F4140(a2, a1 + 4, a4);
        return;
      case 5:
        uint64_t v7 = a1 + 16;
        goto LABEL_5;
      default:
        JUMPOUT(0);
    }
  }
  switch(v6)
  {
    case 65528:
      uint64_t v7 = a1 + 96;
      goto LABEL_5;
    case 65529:
      uint64_t v7 = a1 + 176;
      goto LABEL_5;
    case 65530:
      uint64_t v7 = a1 + 256;
      goto LABEL_5;
    case 65531:
      uint64_t v7 = a1 + 336;
LABEL_5:
      sub_24484B03C(v7, a2, a4);
      break;
    case 65532:
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 416), a4);
      break;
    case 65533:
      sub_244CB3F40(a2, (_WORD *)(a1 + 420), a4);
      break;
    default:
      *(_DWORD *)a4 = 0;
      *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-common"
                            "/app-common/zap-generated/cluster-objects.cpp";
      *(_DWORD *)(a4 + 16) = 14376;
      break;
  }
}

double sub_244813300@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_2651969C8;
      uint64_t v9 = 14406;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_24484B184(a2, a1, &v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_2448133D8@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_2651969E0;
      uint64_t v9 = 14440;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_24484B184(a2, a1, &v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

void sub_2448134B0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  char v4 = (unsigned char *)a1;
  int v5 = *(_DWORD *)(a3 + 8);
  switch(v5)
  {
    case 0:
      goto LABEL_7;
    case 1:
      char v4 = (unsigned char *)(a1 + 1);
      goto LABEL_7;
    case 2:
      char v4 = (unsigned char *)(a1 + 2);
LABEL_7:
      sub_244CB3E8C(a2, v4, a4);
      return;
    case 3:
      uint64_t v7 = (unsigned char *)(a1 + 3);
      goto LABEL_12;
    case 4:
      uint64_t v7 = (unsigned char *)(a1 + 4);
      goto LABEL_12;
    case 5:
      uint64_t v7 = (unsigned char *)(a1 + 5);
      goto LABEL_12;
    case 6:
      uint64_t v7 = (unsigned char *)(a1 + 6);
LABEL_12:
      sub_24484B184(a2, v7, (void *)a4);
      break;
    case 7:
      sub_24484B6B0(a2, (_WORD *)(a1 + 8), (void *)a4);
      break;
    default:
      switch(v5)
      {
        case 65528:
          uint64_t v6 = a1 + 16;
          goto LABEL_5;
        case 65529:
          uint64_t v6 = a1 + 96;
          goto LABEL_5;
        case 65530:
          uint64_t v6 = a1 + 176;
          goto LABEL_5;
        case 65531:
          uint64_t v6 = a1 + 256;
LABEL_5:
          sub_24484B03C(v6, a2, a4);
          break;
        case 65532:
          sub_244CB3FB0(a2, (_DWORD *)(a1 + 336), a4);
          break;
        case 65533:
          sub_244CB3F40(a2, (_WORD *)(a1 + 340), a4);
          break;
        default:
          *(_DWORD *)a4 = 0;
          *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-co"
                                "mmon/app-common/zap-generated/cluster-objects.cpp";
          *(_DWORD *)(a4 + 16) = 14491;
          break;
      }
      break;
  }
}

void sub_2448135F4(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  int v7 = 0;
  a4[1] = 0;
  a4[2] = 0;
  *a4 = 0;
  sub_244CB7594(a2, a3, 21, &v7, (uint64_t)a4);
  if (!*(_DWORD *)a4)
  {
    *a4 = 0;
    a4[1] = 0;
    a4[2] = 0;
    sub_244CB68B8();
    if (!*(_DWORD *)a4)
    {
      *a4 = 0;
      a4[1] = 0;
      a4[2] = 0;
      sub_2448136AC((unsigned char *)(a1 + 1), (uint64_t)a4);
      if (!*(_DWORD *)a4) {
        sub_244CB7708((uint64_t)a2, v7, (uint64_t)a4);
      }
    }
  }
}

void sub_2448136AC(unsigned char *a1@<X2>, uint64_t a2@<X8>)
{
  if (*a1)
  {
    sub_2446D18C8(a1);
    sub_244CB68B8();
  }
  else
  {
    *(_DWORD *)a2 = 0;
    *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    *(_DWORD *)(a2 + 16) = 171;
  }
}

double sub_244813734@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_2651969F8;
      uint64_t v11 = 14518;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        *(_WORD *)(a1 + 1) = 1;
        sub_24484B184(a2, (unsigned char *)(a1 + 2), &v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_24484B184(a2, (unsigned char *)a1, &v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_24481384C@<D0>(_WORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265196A10;
      uint64_t v9 = 14557;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_24484B6B0(a2, a1, &v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_244813924@<D0>(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_24480C634(a1, (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244813DC0(a1 + 12, (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
        long long v8 = v11;
        uint64_t v9 = v12;
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244813A34@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265196A28;
      uint64_t v11 = 14598;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        *(_WORD *)(a1 + 12) = 1;
        sub_244CB3E8C(a2, (unsigned char *)(a1 + 13), (uint64_t)&v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        *(unsigned char *)a1 = 1;
        *(void *)(a1 + 4) = 0;
        sub_2447F4140(a2, a1 + 4, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

void sub_244813B60(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(a3 + 8);
  switch(v5)
  {
    case 0:
      goto LABEL_8;
    case 1:
      uint64_t v4 = a1 + 8;
      goto LABEL_8;
    case 2:
      sub_2447F5E48(a2, a1 + 16, a4);
      return;
    case 3:
      uint64_t v4 = a1 + 32;
LABEL_8:
      sub_2447F4140(a2, v4, a4);
      return;
    case 4:
      int v7 = (unsigned __int8 *)(a1 + 40);
      goto LABEL_11;
    case 5:
      int v7 = (unsigned __int8 *)(a1 + 42);
LABEL_11:
      sub_2447F21B8(a2, v7, a4);
      return;
    case 6:
      long long v8 = (unsigned __int8 *)(a1 + 44);
      goto LABEL_14;
    case 7:
      long long v8 = (unsigned __int8 *)(a1 + 46);
LABEL_14:
      sub_2447F15BC(a2, v8, a4);
      return;
    case 8:
      uint64_t v9 = (unsigned char *)(a1 + 48);
      goto LABEL_18;
    case 9:
      sub_24484B6B0(a2, (_WORD *)(a1 + 50), (void *)a4);
      return;
    case 10:
      uint64_t v9 = (unsigned char *)(a1 + 52);
LABEL_18:
      sub_244CB3E8C(a2, v9, a4);
      break;
    default:
      switch(v5)
      {
        case 65528:
          uint64_t v6 = a1 + 56;
          goto LABEL_5;
        case 65529:
          uint64_t v6 = a1 + 136;
          goto LABEL_5;
        case 65530:
          uint64_t v6 = a1 + 216;
          goto LABEL_5;
        case 65531:
          uint64_t v6 = a1 + 296;
LABEL_5:
          sub_24484B03C(v6, a2, a4);
          break;
        case 65532:
          sub_244CB3FB0(a2, (_DWORD *)(a1 + 376), a4);
          break;
        case 65533:
          sub_244CB3F40(a2, (_WORD *)(a1 + 380), a4);
          break;
        default:
          *(_DWORD *)a4 = 0;
          *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-co"
                                "mmon/app-common/zap-generated/cluster-objects.cpp";
          *(_DWORD *)(a4 + 16) = 14679;
          break;
      }
      break;
  }
}

void sub_244813CE0(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  int v7 = 0;
  a4[1] = 0;
  a4[2] = 0;
  *a4 = 0;
  sub_244CB7594(a2, a3, 21, &v7, (uint64_t)a4);
  if (!*(_DWORD *)a4)
  {
    *a4 = 0;
    a4[1] = 0;
    a4[2] = 0;
    if (*a1 == 3)
    {
      *(_DWORD *)a4 = 1415;
      a4[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
      *((_DWORD *)a4 + 4) = 75;
    }
    else
    {
      sub_244CB68B8();
      if (!*(_DWORD *)a4)
      {
        *a4 = 0;
        a4[1] = 0;
        a4[2] = 0;
        sub_244813DC0(a1 + 1, (uint64_t)a4);
        if (!*(_DWORD *)a4) {
          sub_244CB7708((uint64_t)a2, v7, (uint64_t)a4);
        }
      }
    }
  }
}

void sub_244813DC0(unsigned char *a1@<X2>, uint64_t a2@<X8>)
{
  if (*a1)
  {
    sub_2446F9190(a1);
    sub_244CB68B8();
  }
  else
  {
    *(_DWORD *)a2 = 0;
    *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    *(_DWORD *)(a2 + 16) = 171;
  }
}

double sub_244813E48@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265196A40;
      uint64_t v11 = 14706;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        *(_WORD *)(a1 + 1) = 1;
        sub_244CB3E8C(a2, (unsigned char *)(a1 + 2), (uint64_t)&v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_2447F5F24(a2, (unsigned char *)a1, &v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_244813F60@<D0>(_WORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265196A58;
      uint64_t v9 = 14745;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_24484B6B0(a2, a1, &v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_244814038@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB68B8();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_2447FB04C(a1 + 8, (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
        long long v8 = v11;
        uint64_t v9 = v12;
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244814148@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265196A70;
      uint64_t v11 = 14786;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_2447FB200(a2, (uint64_t)(a1 + 8), (uint64_t)&v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB3E8C(a2, a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_244814258@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  sub_2447EE0BC((uint64_t)&v7, 0, (_WORD *)a1);
  if (!v8)
  {
    sub_244CB69FC();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB69FC();
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_24483F918((unsigned char *)(a1 + 24), (uint64_t)&v11);
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_24483F918((unsigned char *)(a1 + 32), (uint64_t)&v11);
          uint64_t v9 = v12;
          long long v8 = v11;
          if (!v11)
          {
            sub_24483F918((unsigned char *)(a1 + 40), (uint64_t)&v11);
            uint64_t v9 = v12;
            long long v8 = v11;
            if (!v11)
            {
              sub_24483F918((unsigned char *)(a1 + 48), (uint64_t)&v11);
              uint64_t v9 = v12;
              long long v8 = v11;
              if (!v11)
              {
                sub_244839174((unsigned char *)(a1 + 56), (uint64_t)&v11);
                uint64_t v9 = v12;
                long long v8 = v11;
                if (!v11)
                {
                  sub_244839174((unsigned char *)(a1 + 72), (uint64_t)&v11);
                  uint64_t v9 = v12;
                  long long v8 = v11;
                  if (!v11)
                  {
                    sub_244839174((unsigned char *)(a1 + 88), (uint64_t)&v11);
                    uint64_t v9 = v12;
                    long long v8 = v11;
                    if (!v11)
                    {
                      sub_244839174((unsigned char *)(a1 + 104), (uint64_t)&v11);
                      uint64_t v9 = v12;
                      long long v8 = v11;
                      if (!v11)
                      {
                        sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
                        long long v8 = v11;
                        uint64_t v9 = v12;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2448144D8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v21[0] = 0;
  uint64_t v22 = a2;
  sub_2447ED6F8((uint64_t)v21, (uint64_t)&v18);
  int v6 = v20;
  if (v20 == 1)
  {
LABEL_21:
    double result = *(double *)&v18;
    *(_OWORD *)a3 = v18;
    *(void *)(a3 + 16) = v19;
  }
  else
  {
    while (1)
    {
      long long v16 = xmmword_265196A88;
      uint64_t v17 = 14836;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v18)
      {
        case 0:
          sub_2447EE3B4(a2, (_WORD *)a1, &v16);
          break;
        case 1:
          uint64_t v7 = a2;
          long long v8 = (void *)(a1 + 8);
          goto LABEL_7;
        case 2:
          uint64_t v7 = a2;
          long long v8 = (void *)(a1 + 16);
LABEL_7:
          sub_244CB3CF0(v7, v8, (uint64_t)&v14);
          goto LABEL_18;
        case 3:
          *(unsigned char *)(a1 + 24) = 1;
          *(_DWORD *)(a1 + 28) = 0;
          uint64_t v9 = a2;
          int v10 = (_DWORD *)(a1 + 28);
          goto LABEL_12;
        case 4:
          *(unsigned char *)(a1 + 32) = 1;
          *(_DWORD *)(a1 + 36) = 0;
          uint64_t v9 = a2;
          int v10 = (_DWORD *)(a1 + 36);
          goto LABEL_12;
        case 5:
          *(unsigned char *)(a1 + 40) = 1;
          *(_DWORD *)(a1 + 44) = 0;
          uint64_t v9 = a2;
          int v10 = (_DWORD *)(a1 + 44);
          goto LABEL_12;
        case 6:
          *(unsigned char *)(a1 + 48) = 1;
          *(_DWORD *)(a1 + 52) = 0;
          uint64_t v9 = a2;
          int v10 = (_DWORD *)(a1 + 52);
LABEL_12:
          sub_244CB3FB0(v9, v10, (uint64_t)&v14);
          goto LABEL_18;
        case 7:
          *(unsigned char *)(a1 + 56) = 1;
          *(void *)(a1 + 64) = 0;
          uint64_t v11 = a2;
          uint64_t v12 = (void *)(a1 + 64);
          goto LABEL_17;
        case 8:
          *(unsigned char *)(a1 + 72) = 1;
          *(void *)(a1 + 80) = 0;
          uint64_t v11 = a2;
          uint64_t v12 = (void *)(a1 + 80);
          goto LABEL_17;
        case 9:
          *(unsigned char *)(a1 + 88) = 1;
          *(void *)(a1 + 96) = 0;
          uint64_t v11 = a2;
          uint64_t v12 = (void *)(a1 + 96);
          goto LABEL_17;
        case 10:
          *(unsigned char *)(a1 + 104) = 1;
          *(void *)(a1 + 112) = 0;
          uint64_t v11 = a2;
          uint64_t v12 = (void *)(a1 + 112);
LABEL_17:
          sub_244CB3EFC(v11, v12, (uint64_t)&v14);
LABEL_18:
          long long v16 = v14;
          uint64_t v17 = v15;
          break;
        default:
          break;
      }
      double result = *(double *)&v16;
      *(_OWORD *)a3 = v16;
      *(void *)(a3 + 16) = v17;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v21, (uint64_t)&v18);
      int v6 = v20;
      if (v20 == 1) {
        goto LABEL_21;
      }
    }
  }
  return result;
}

void sub_24481474C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4 = *(_DWORD *)(a3 + 8);
  switch(v4)
  {
    case 0:
      sub_2447F5F24(a2, (unsigned char *)a1, (void *)a4);
      return;
    case 1:
      sub_244CB3E8C(a2, (unsigned char *)(a1 + 1), a4);
      return;
    case 2:
      uint64_t v5 = a1 + 8;
      goto LABEL_5;
    case 3:
      uint64_t v5 = a1 + 88;
LABEL_5:
      sub_24484B03C(v5, a2, a4);
      return;
    case 4:
      uint64_t v6 = a1 + 168;
      goto LABEL_25;
    case 5:
      uint64_t v6 = a1 + 184;
      goto LABEL_25;
    case 6:
      uint64_t v6 = a1 + 200;
      goto LABEL_25;
    case 7:
      uint64_t v6 = a1 + 216;
      goto LABEL_25;
    case 8:
      uint64_t v6 = a1 + 232;
      goto LABEL_25;
    case 9:
      uint64_t v6 = a1 + 248;
      goto LABEL_25;
    case 10:
      uint64_t v6 = a1 + 264;
      goto LABEL_25;
    case 11:
      uint64_t v6 = a1 + 280;
      goto LABEL_25;
    case 12:
      uint64_t v6 = a1 + 296;
      goto LABEL_25;
    case 13:
      uint64_t v6 = a1 + 312;
      goto LABEL_25;
    case 14:
      uint64_t v6 = a1 + 328;
      goto LABEL_25;
    case 15:
      uint64_t v7 = a1 + 344;
      goto LABEL_22;
    case 16:
      uint64_t v7 = a1 + 432;
LABEL_22:
      sub_2447F50A0(a2, v7, (void *)a4);
      return;
    case 17:
      uint64_t v6 = a1 + 520;
      goto LABEL_25;
    case 18:
      uint64_t v6 = a1 + 536;
LABEL_25:
      sub_2447FB200(a2, v6, a4);
      break;
    default:
      switch(v4)
      {
        case 65528:
          uint64_t v5 = a1 + 552;
          goto LABEL_5;
        case 65529:
          uint64_t v5 = a1 + 632;
          goto LABEL_5;
        case 65530:
          uint64_t v5 = a1 + 712;
          goto LABEL_5;
        case 65531:
          uint64_t v5 = a1 + 792;
          goto LABEL_5;
        case 65532:
          sub_244CB3FB0(a2, (_DWORD *)(a1 + 872), a4);
          break;
        case 65533:
          sub_244CB3F40(a2, (_WORD *)(a1 + 876), a4);
          break;
        default:
          *(_DWORD *)a4 = 0;
          *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-co"
                                "mmon/app-common/zap-generated/cluster-objects.cpp";
          *(_DWORD *)(a4 + 16) = 14952;
          break;
      }
      break;
  }
}

void sub_244814920(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  int v10 = 0;
  a4[1] = 0;
  a4[2] = 0;
  *a4 = 0;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)a4);
  if (!*(_DWORD *)a4)
  {
    uint64_t v7 = *a1;
    uint64_t v8 = a1[1];
    int v11 = 0;
    a4[1] = 0;
    a4[2] = 0;
    *a4 = 0;
    sub_244CB7594(a2, 0, 22, &v11, (uint64_t)a4);
    if (!*(_DWORD *)a4)
    {
      if (v8)
      {
        uint64_t v9 = 120 * v8;
        while (1)
        {
          *a4 = 0;
          a4[1] = 0;
          a4[2] = 0;
          sub_244814258(v7, a2, 256, (uint64_t)a4);
          if (*(_DWORD *)a4) {
            break;
          }
          v7 += 120;
          v9 -= 120;
          if (!v9) {
            goto LABEL_7;
          }
        }
      }
      else
      {
LABEL_7:
        *a4 = 0;
        a4[1] = 0;
        a4[2] = 0;
        sub_244CB7708((uint64_t)a2, v11, (uint64_t)a4);
        if (!*(_DWORD *)a4)
        {
          *(_DWORD *)a4 = 0;
          a4[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/List.h";
          *((_DWORD *)a4 + 4) = 86;
          sub_244CB7708((uint64_t)a2, v10, (uint64_t)a4);
        }
      }
    }
  }
}

double sub_244814A34@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265196AA0;
      uint64_t v9 = 14978;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_24484B03C(a1, a2, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_244814B0C@<D0>(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_24480C634(a1, (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_24480C634(a1 + 12, (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_24484C064(a1 + 24, (uint64_t)&v11);
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_24484C064(a1 + 48, (uint64_t)&v11);
          uint64_t v9 = v12;
          long long v8 = v11;
          if (!v11)
          {
            sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
            long long v8 = v11;
            uint64_t v9 = v12;
          }
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244814C74@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  int v6 = v16;
  if (v16 == 1)
  {
LABEL_12:
    double result = *(double *)&v14;
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 16) = v15;
  }
  else
  {
    while (1)
    {
      long long v12 = xmmword_265196AB8;
      uint64_t v13 = 15021;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v14)
      {
        case 0:
          *(unsigned char *)a1 = 1;
          *(void *)(a1 + 4) = 0;
          sub_2447F4140(a2, a1 + 4, (uint64_t)&v12);
          break;
        case 1:
          *(unsigned char *)(a1 + 12) = 1;
          *(void *)(a1 + 16) = 0;
          sub_2447F4140(a2, a1 + 16, (uint64_t)&v10);
          goto LABEL_9;
        case 2:
          *(unsigned char *)(a1 + 24) = 1;
          *(void *)(a1 + 32) = 0;
          *(void *)(a1 + 40) = 0;
          uint64_t v7 = a2;
          uint64_t v8 = a1 + 32;
          goto LABEL_8;
        case 3:
          *(unsigned char *)(a1 + 48) = 1;
          *(void *)(a1 + 56) = 0;
          *(void *)(a1 + 64) = 0;
          uint64_t v7 = a2;
          uint64_t v8 = a1 + 56;
LABEL_8:
          sub_2447F5E48(v7, v8, (uint64_t)&v10);
LABEL_9:
          long long v12 = v10;
          uint64_t v13 = v11;
          break;
        default:
          break;
      }
      double result = *(double *)&v12;
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
      int v6 = v16;
      if (v16 == 1) {
        goto LABEL_12;
      }
    }
  }
  return result;
}

double sub_244814E14@<D0>(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB69FC();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_24483F918(a1 + 8, (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_24483F918(a1 + 16, (uint64_t)&v11);
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_244839174(a1 + 24, (uint64_t)&v11);
          uint64_t v9 = v12;
          long long v8 = v11;
          if (!v11)
          {
            sub_244839174(a1 + 40, (uint64_t)&v11);
            uint64_t v9 = v12;
            long long v8 = v11;
            if (!v11)
            {
              sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
              long long v8 = v11;
              uint64_t v9 = v12;
            }
          }
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244814FA8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v19[0] = 0;
  uint64_t v20 = a2;
  sub_2447ED6F8((uint64_t)v19, (uint64_t)&v16);
  int v6 = v18;
  if (v18 == 1)
  {
LABEL_14:
    double result = *(double *)&v16;
    *(_OWORD *)a3 = v16;
    *(void *)(a3 + 16) = v17;
  }
  else
  {
    while (1)
    {
      long long v14 = xmmword_265196AD0;
      uint64_t v15 = 15073;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v16)
      {
        case 0:
          sub_244CB3CF0(a2, (void *)a1, (uint64_t)&v14);
          break;
        case 1:
          *(unsigned char *)(a1 + 8) = 1;
          *(_DWORD *)(a1 + 12) = 0;
          uint64_t v7 = a2;
          long long v8 = (_DWORD *)(a1 + 12);
          goto LABEL_7;
        case 2:
          *(unsigned char *)(a1 + 16) = 1;
          *(_DWORD *)(a1 + 20) = 0;
          uint64_t v7 = a2;
          long long v8 = (_DWORD *)(a1 + 20);
LABEL_7:
          sub_244CB3FB0(v7, v8, (uint64_t)&v12);
          goto LABEL_11;
        case 3:
          *(unsigned char *)(a1 + 24) = 1;
          *(void *)(a1 + 32) = 0;
          uint64_t v9 = a2;
          int v10 = (void *)(a1 + 32);
          goto LABEL_10;
        case 4:
          *(unsigned char *)(a1 + 40) = 1;
          *(void *)(a1 + 48) = 0;
          uint64_t v9 = a2;
          int v10 = (void *)(a1 + 48);
LABEL_10:
          sub_244CB3EFC(v9, v10, (uint64_t)&v12);
LABEL_11:
          long long v14 = v12;
          uint64_t v15 = v13;
          break;
        default:
          break;
      }
      double result = *(double *)&v14;
      *(_OWORD *)a3 = v14;
      *(void *)(a3 + 16) = v15;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v19, (uint64_t)&v16);
      int v6 = v18;
      if (v18 == 1) {
        goto LABEL_14;
      }
    }
  }
  return result;
}

void sub_24481515C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v6 = *(_DWORD *)(a3 + 8);
  if (!v5 & v4)
  {
    switch(v6)
    {
      case 65528:
        uint64_t v7 = a1 + 440;
        goto LABEL_5;
      case 65529:
        uint64_t v7 = a1 + 520;
        goto LABEL_5;
      case 65530:
        uint64_t v7 = a1 + 600;
        goto LABEL_5;
      case 65531:
        uint64_t v7 = a1 + 680;
LABEL_5:
        sub_24484B03C(v7, a2, a4);
        break;
      case 65532:
        sub_244CB3FB0(a2, (_DWORD *)(a1 + 760), a4);
        break;
      case 65533:
        sub_244CB3F40(a2, (_WORD *)(a1 + 764), a4);
        break;
      default:
        *(_DWORD *)a4 = 0;
        *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-comm"
                              "on/app-common/zap-generated/cluster-objects.cpp";
        *(_DWORD *)(a4 + 16) = 15139;
        break;
    }
  }
  else
  {
    switch(v6)
    {
      case 0:
        sub_2447EE228(a1, a2, a4);
        return;
      case 1:
        uint64_t v8 = a1 + 104;
        goto LABEL_18;
      case 2:
        uint64_t v8 = a1 + 168;
        goto LABEL_18;
      case 3:
        uint64_t v8 = a1 + 232;
        goto LABEL_18;
      case 4:
        uint64_t v8 = a1 + 296;
LABEL_18:
        sub_244815280(a2, v8, (void *)a4);
        break;
      case 5:
        sub_244815320(a2, a1 + 360, (void *)a4);
        break;
      default:
        JUMPOUT(0);
    }
  }
}

void sub_244815280(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if (sub_244CB3B68(a1) == 20)
  {
    if (*(unsigned char *)(a2 + 56)) {
      *(unsigned char *)(a2 + 56) = 0;
    }
    int v6 = 168;
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(void *)(a2 + 48) = 0;
    *(unsigned char *)(a2 + 56) = 1;
    sub_244814FA8(a2, a1, (uint64_t)a3);
    if (*(_DWORD *)a3) {
      return;
    }
    int v6 = 177;
  }
  *(_DWORD *)a3 = 0;
  a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
  *((_DWORD *)a3 + 4) = v6;
}

void sub_244815320(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if (sub_244CB3B68(a1) == 20)
  {
    if (*(unsigned char *)(a2 + 72)) {
      *(unsigned char *)(a2 + 72) = 0;
    }
    int v6 = 168;
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)(a2 + 48) = 0u;
    *(void *)(a2 + 64) = 0;
    *(unsigned char *)(a2 + 72) = 1;
    sub_244814C74(a2, a1, (uint64_t)a3);
    if (*(_DWORD *)a3) {
      return;
    }
    int v6 = 177;
  }
  *(_DWORD *)a3 = 0;
  a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
  *((_DWORD *)a3 + 4) = v6;
}

void sub_2448153C0(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  int v7 = 0;
  a4[1] = 0;
  a4[2] = 0;
  *a4 = 0;
  sub_244CB7594(a2, a3, 21, &v7, (uint64_t)a4);
  if (!*(_DWORD *)a4)
  {
    *a4 = 0;
    a4[1] = 0;
    a4[2] = 0;
    sub_244815478(a2, 0, a1, (uint64_t)a4);
    if (!*(_DWORD *)a4)
    {
      *a4 = 0;
      a4[1] = 0;
      a4[2] = 0;
      sub_244815478(a2, 1, a1 + 64, (uint64_t)a4);
      if (!*(_DWORD *)a4) {
        sub_244CB7708((uint64_t)a2, v7, (uint64_t)a4);
      }
    }
  }
}

void sub_244815478(void *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X2>, uint64_t a4@<X8>)
{
  if (*a3)
  {
    int v7 = sub_2446D18A4(a3);
    sub_244814E14(v7, a1, a2, a4);
  }
  else
  {
    *(_DWORD *)a4 = 0;
    *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    *(_DWORD *)(a4 + 16) = 171;
  }
}

double sub_2448154FC@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 != 1)
  {
    while (1)
    {
      long long v10 = xmmword_265196AE8;
      uint64_t v11 = 15166;
      if (v6) {
        sub_24484AFEC();
      }
      int v7 = a1;
      uint64_t v8 = (uint64_t)(a1 + 8);
      if (!(_BYTE)v12) {
        goto LABEL_6;
      }
      if (v12 == 1) {
        break;
      }
LABEL_7:
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        return result;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
    int v7 = a1 + 64;
    uint64_t v8 = (uint64_t)(a1 + 72);
LABEL_6:
    unsigned char *v7 = 1;
    *(_OWORD *)uint64_t v8 = 0u;
    *(_OWORD *)(v8 + 16) = 0u;
    *(_OWORD *)(v8 + 32) = 0u;
    *(void *)(v8 + 48) = 0;
    sub_244814FA8(v8, a2, (uint64_t)&v10);
    goto LABEL_7;
  }
LABEL_9:
  double result = *(double *)&v12;
  *(_OWORD *)a3 = v12;
  *(void *)(a3 + 16) = v13;
  return result;
}

double sub_24481561C@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 != 1)
  {
    while (1)
    {
      long long v10 = xmmword_265196B00;
      uint64_t v11 = 15206;
      if (v6) {
        sub_24484AFEC();
      }
      int v7 = a1;
      uint64_t v8 = (uint64_t)(a1 + 8);
      if (!(_BYTE)v12) {
        goto LABEL_6;
      }
      if (v12 == 1) {
        break;
      }
LABEL_7:
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        return result;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
    int v7 = a1 + 64;
    uint64_t v8 = (uint64_t)(a1 + 72);
LABEL_6:
    unsigned char *v7 = 1;
    *(_OWORD *)uint64_t v8 = 0u;
    *(_OWORD *)(v8 + 16) = 0u;
    *(_OWORD *)(v8 + 32) = 0u;
    *(void *)(v8 + 48) = 0;
    sub_244814FA8(v8, a2, (uint64_t)&v10);
    goto LABEL_7;
  }
LABEL_9:
  double result = *(double *)&v12;
  *(_OWORD *)a3 = v12;
  *(void *)(a3 + 16) = v13;
  return result;
}

double sub_24481573C@<D0>(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB694C();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_24484B7DC(a1 + 4, (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_24484B7DC(a1 + 6, (uint64_t)&v11);
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_24484BCBC(a1 + 8, (uint64_t)&v11);
          uint64_t v9 = v12;
          long long v8 = v11;
          if (!v11)
          {
            sub_244813DC0(a1 + 12, (uint64_t)&v11);
            uint64_t v9 = v12;
            long long v8 = v11;
            if (!v11)
            {
              sub_244813DC0(a1 + 14, (uint64_t)&v11);
              uint64_t v9 = v12;
              long long v8 = v11;
              if (!v11)
              {
                sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
                long long v8 = v11;
                uint64_t v9 = v12;
              }
            }
          }
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2448158FC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v19[0] = 0;
  uint64_t v20 = a2;
  sub_2447ED6F8((uint64_t)v19, (uint64_t)&v16);
  int v6 = v18;
  if (v18 == 1)
  {
LABEL_15:
    double result = *(double *)&v16;
    *(_OWORD *)a3 = v16;
    *(void *)(a3 + 16) = v17;
  }
  else
  {
    while (1)
    {
      long long v14 = xmmword_265196B18;
      uint64_t v15 = 15255;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v16)
      {
        case 0:
          sub_244CB3FB0(a2, (_DWORD *)a1, (uint64_t)&v14);
          break;
        case 1:
          *(_WORD *)(a1 + 4) = 1;
          uint64_t v7 = a2;
          long long v8 = (char *)(a1 + 5);
          goto LABEL_7;
        case 2:
          *(_WORD *)(a1 + 6) = 1;
          uint64_t v7 = a2;
          long long v8 = (char *)(a1 + 7);
LABEL_7:
          sub_244CB3C0C(v7, v8, (uint64_t)&v12);
          goto LABEL_12;
        case 3:
          *(unsigned char *)(a1 + 8) = 1;
          *(_WORD *)(a1 + 10) = 0;
          sub_244CB3D8C(a2, (_WORD *)(a1 + 10), (uint64_t)&v12);
          goto LABEL_12;
        case 4:
          *(_WORD *)(a1 + 12) = 1;
          uint64_t v9 = a2;
          int v10 = (unsigned char *)(a1 + 13);
          goto LABEL_11;
        case 5:
          *(_WORD *)(a1 + 14) = 1;
          uint64_t v9 = a2;
          int v10 = (unsigned char *)(a1 + 15);
LABEL_11:
          sub_244CB3E8C(v9, v10, (uint64_t)&v12);
LABEL_12:
          long long v14 = v12;
          uint64_t v15 = v13;
          break;
        default:
          break;
      }
      double result = *(double *)&v14;
      *(_OWORD *)a3 = v14;
      *(void *)(a3 + 16) = v15;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v19, (uint64_t)&v16);
      int v6 = v18;
      if (v18 == 1) {
        goto LABEL_15;
      }
    }
  }
  return result;
}

double sub_244815AC4@<D0>(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_24481573C(a1, a2, 0, (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
      long long v8 = v11;
      uint64_t v9 = v12;
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244815BA8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265196B30;
      uint64_t v9 = 15313;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_2448158FC(a1, a2, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

void sub_244815C80(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v6 = (unsigned char *)a1;
  int v7 = *(_DWORD *)(a3 + 8);
  if (!(!v5 & v4))
  {
    switch(v7)
    {
      case 0:
        goto LABEL_8;
      case 1:
        int v6 = (unsigned char *)(a1 + 1);
LABEL_8:
        sub_24484B184(a2, v6, (void *)a4);
        return;
      case 2:
        uint64_t v9 = (_WORD *)(a1 + 2);
        goto LABEL_16;
      case 3:
        sub_244CB3CF0(a2, (void *)(a1 + 8), a4);
        return;
      case 4:
        sub_244CB3E8C(a2, (unsigned char *)(a1 + 16), a4);
        return;
      case 5:
        sub_2447F1DCC(a2, (unsigned char *)(a1 + 17), (void *)a4);
        return;
      default:
        JUMPOUT(0);
    }
  }
  switch(v7)
  {
    case 65528:
      uint64_t v8 = a1 + 24;
      goto LABEL_5;
    case 65529:
      uint64_t v8 = a1 + 104;
      goto LABEL_5;
    case 65530:
      uint64_t v8 = a1 + 184;
      goto LABEL_5;
    case 65531:
      uint64_t v8 = a1 + 264;
LABEL_5:
      sub_24484B03C(v8, a2, a4);
      break;
    case 65532:
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 344), a4);
      break;
    case 65533:
      uint64_t v9 = (_WORD *)(a1 + 348);
LABEL_16:
      sub_244CB3F40(a2, v9, a4);
      break;
    default:
      *(_DWORD *)a4 = 0;
      *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-common"
                            "/app-common/zap-generated/cluster-objects.cpp";
      *(_DWORD *)(a4 + 16) = 15380;
      break;
  }
}

void sub_244815DB4(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  int v7 = 0;
  a4[1] = 0;
  a4[2] = 0;
  *a4 = 0;
  sub_244CB7594(a2, a3, 21, &v7, (uint64_t)a4);
  if (!*(_DWORD *)a4)
  {
    *a4 = 0;
    a4[1] = 0;
    a4[2] = 0;
    sub_24481573C(a1, a2, 0, (uint64_t)a4);
    if (!*(_DWORD *)a4) {
      sub_244CB7708((uint64_t)a2, v7, (uint64_t)a4);
    }
  }
}

double sub_244815E48@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265196B48;
      uint64_t v9 = 15406;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_2448158FC(a1, a2, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_244815F20@<D0>(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  sub_2447F06A4((uint64_t)&v7, 0, a1);
  if (!v8)
  {
    sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244815FE8@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265196B60;
      uint64_t v9 = 15467;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_2447F5F24(a2, a1, &v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_2448160C0@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265196B78;
      uint64_t v9 = 15503;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3E8C(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_244816198@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265196B90;
      uint64_t v9 = 15539;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3E8C(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_244816270@<D0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  sub_244CB7594(a1, a2, 21, &v8, (uint64_t)&v9);
  long long v6 = v9;
  uint64_t v7 = v10;
  if (!v9)
  {
    sub_244CB69F4();
    uint64_t v7 = v10;
    long long v6 = v9;
    if (!v9)
    {
      sub_244CB7708((uint64_t)a1, v8, (uint64_t)&v9);
      long long v6 = v9;
      uint64_t v7 = v10;
    }
  }
  double result = *(double *)&v6;
  *(_OWORD *)a3 = v6;
  *(void *)(a3 + 16) = v7;
  return result;
}

double sub_244816354@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265196BA8;
      uint64_t v9 = 15575;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3C70(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_24481642C@<D0>(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_24484C0EC(a1, (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_24484C0EC(a1 + 6, (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_24484C174(a1 + 12, (uint64_t)&v11);
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_24484C174(a1 + 18, (uint64_t)&v11);
          uint64_t v9 = v12;
          long long v8 = v11;
          if (!v11)
          {
            sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
            long long v8 = v11;
            uint64_t v9 = v12;
          }
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244816594@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  int v6 = v16;
  if (v16 == 1)
  {
LABEL_12:
    double result = *(double *)&v14;
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 16) = v15;
  }
  else
  {
    while (1)
    {
      long long v12 = xmmword_265196BC0;
      uint64_t v13 = 15614;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v14)
      {
        case 0:
          *(unsigned char *)a1 = 1;
          *(_DWORD *)(a1 + 2) = 0;
          sub_2447EF9E0(a2, (__int16 *)(a1 + 2), (uint64_t)&v12);
          break;
        case 1:
          *(unsigned char *)(a1 + 6) = 1;
          *(_DWORD *)(a1 + 8) = 0;
          sub_2447EF9E0(a2, (__int16 *)(a1 + 8), (uint64_t)&v10);
          goto LABEL_9;
        case 2:
          *(unsigned char *)(a1 + 12) = 1;
          *(_DWORD *)(a1 + 14) = 0;
          uint64_t v7 = a2;
          long long v8 = (__int16 *)(a1 + 14);
          goto LABEL_8;
        case 3:
          *(unsigned char *)(a1 + 18) = 1;
          *(_DWORD *)(a1 + 20) = 0;
          uint64_t v7 = a2;
          long long v8 = (__int16 *)(a1 + 20);
LABEL_8:
          sub_2447F003C(v7, v8, (uint64_t)&v10);
LABEL_9:
          long long v12 = v10;
          uint64_t v13 = v11;
          break;
        default:
          break;
      }
      double result = *(double *)&v12;
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
      int v6 = v16;
      if (v16 == 1) {
        goto LABEL_12;
      }
    }
  }
  return result;
}

double sub_244816734@<D0>(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB6904();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB6904();
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_24484C1FC(a2, 2, a1 + 4, (uint64_t)&v11);
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_24484C280(a2, 3, a1 + 30, (uint64_t)&v11);
          uint64_t v9 = v12;
          long long v8 = v11;
          if (!v11)
          {
            sub_24484C304(a2, 4, a1 + 32, (uint64_t)&v11);
            uint64_t v9 = v12;
            long long v8 = v11;
            if (!v11)
            {
              sub_24484C304(a2, 5, a1 + 34, (uint64_t)&v11);
              uint64_t v9 = v12;
              long long v8 = v11;
              if (!v11)
              {
                sub_24484C388(a2, 6, a1 + 36, (uint64_t)&v11);
                uint64_t v9 = v12;
                long long v8 = v11;
                if (!v11)
                {
                  sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
                  long long v8 = v11;
                  uint64_t v9 = v12;
                }
              }
            }
          }
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244816920@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_14:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265196BD8;
      uint64_t v11 = 15668;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v12)
      {
        case 0:
          sub_244CB3F40(a2, (_WORD *)a1, (uint64_t)&v10);
          break;
        case 1:
          sub_24484B6B0(a2, (_WORD *)(a1 + 2), &v8);
          goto LABEL_11;
        case 2:
          *(unsigned char *)(a1 + 4) = 1;
          *(void *)(a1 + 14) = 0;
          *(void *)(a1 + 22) = 0;
          *(void *)(a1 + 6) = 0;
          sub_244816594(a1 + 6, a2, (uint64_t)&v8);
          goto LABEL_11;
        case 3:
          *(_WORD *)(a1 + 30) = 1;
          sub_244816354((unsigned char *)(a1 + 31), a2, (uint64_t)&v8);
          goto LABEL_11;
        case 4:
          *(_WORD *)(a1 + 32) = 1;
          sub_244816198((unsigned char *)(a1 + 33), a2, (uint64_t)&v8);
          goto LABEL_11;
        case 5:
          *(_WORD *)(a1 + 34) = 1;
          sub_2448160C0((unsigned char *)(a1 + 35), a2, (uint64_t)&v8);
          goto LABEL_11;
        case 6:
          *(_WORD *)(a1 + 36) = 1;
          sub_244815FE8((unsigned char *)(a1 + 37), a2, (uint64_t)&v8);
LABEL_11:
          long long v10 = v8;
          uint64_t v11 = v9;
          break;
        default:
          break;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_14;
      }
    }
  }
  return result;
}

double sub_244816B14@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB6ADC(v7, *(char **)a1, *(void *)(a1 + 8), (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_24484B8EC(v7, a1 + 16, (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB6904();
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_244CB694C();
          uint64_t v9 = v12;
          long long v8 = v11;
          if (!v11)
          {
            sub_244813DC0((unsigned char *)(a1 + 48), (uint64_t)&v11);
            long long v8 = v11;
            uint64_t v9 = v12;
          }
        }
      }
    }
  }
  sub_244816CF4((uint64_t)&v7, 5, (unsigned char *)(a1 + 50));
  if (!v8)
  {
    sub_2447FAB34(a1 + 52, (uint64_t)&v11);
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  sub_244816D70((uint64_t)&v7, 7u, a1 + 64);
  if (!v8)
  {
    sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244816CF4(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  uint64_t v3 = a1 + 8;
  if (!*(_DWORD *)(a1 + 8))
  {
    if (*a3 == 10)
    {
      LODWORD(v5) = 1415;
      *((void *)&v5 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
      LODWORD(v6) = 75;
    }
    else
    {
      sub_244CB68B8();
    }
    double result = *(double *)&v5;
    *(_OWORD *)uint64_t v3 = v5;
    *(void *)(v3 + 16) = v6;
  }
  return result;
}

double sub_244816D70(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = a1 + 8;
  if (!*(_DWORD *)(a1 + 8))
  {
    char v4 = *(void **)a1;
    long long v5 = *(unsigned char **)a3;
    uint64_t v6 = *(void *)(a3 + 8);
    int v11 = 0;
    uint64_t v10 = 0;
    long long v9 = 0uLL;
    sub_244CB7594(v4, a2, 22, &v11, (uint64_t)&v9);
    if (!v9)
    {
      if (v6)
      {
        uint64_t v7 = 38 * v6;
        while (1)
        {
          long long v9 = 0uLL;
          uint64_t v10 = 0;
          sub_244816734(v5, v4, 256, (uint64_t)&v9);
          if (v9) {
            break;
          }
          v5 += 38;
          v7 -= 38;
          if (!v7) {
            goto LABEL_7;
          }
        }
      }
      else
      {
LABEL_7:
        long long v9 = 0uLL;
        uint64_t v10 = 0;
        sub_244CB7708((uint64_t)v4, v11, (uint64_t)&v9);
        if (!v9)
        {
          LODWORD(v9) = 0;
          *((void *)&v9 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/List.h";
          LODWORD(v10) = 86;
        }
      }
    }
    double result = *(double *)&v9;
    *(_OWORD *)uint64_t v3 = v9;
    *(void *)(v3 + 16) = v10;
  }
  return result;
}

double sub_244816E60@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_17:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265196BF0;
      uint64_t v11 = 15735;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v12)
      {
        case 0:
          if (sub_244CB3B68(a2) == 16)
          {
            sub_244CB40C8(a2, (_OWORD *)a1, &v8);
          }
          else
          {
            LODWORD(v8) = 43;
            *((void *)&v8 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
            LODWORD(v9) = 80;
          }
          goto LABEL_14;
        case 1:
          sub_2447FFFFC(a2, a1 + 16, &v10);
          break;
        case 2:
          sub_24484B6B0(a2, (_WORD *)(a1 + 40), &v8);
          goto LABEL_14;
        case 3:
          sub_24484B2E8(a2, (_DWORD *)(a1 + 44), &v8);
          goto LABEL_14;
        case 4:
          *(_WORD *)(a1 + 48) = 1;
          sub_244CB3E8C(a2, (unsigned char *)(a1 + 49), (uint64_t)&v8);
          goto LABEL_14;
        case 5:
          sub_244817088(a2, (unsigned char *)(a1 + 50), &v8);
          goto LABEL_14;
        case 6:
          sub_2447F4140(a2, a1 + 52, (uint64_t)&v8);
          goto LABEL_14;
        case 7:
          sub_24484B03C(a1 + 64, a2, (uint64_t)&v8);
LABEL_14:
          long long v10 = v8;
          uint64_t v11 = v9;
          break;
        default:
          break;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_17;
      }
    }
  }
  return result;
}

uint64_t sub_244817088@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  uint64_t result = sub_2446D1AAC(a1, a2, a3);
  if (!*(_DWORD *)a3)
  {
    unsigned int v6 = *a2;
    if (v6 >= 0xA) {
      LOBYTE(v6) = 10;
    }
    *a2 = v6;
    *(_DWORD *)a3 = 0;
    a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
    *((_DWORD *)a3 + 4) = 61;
  }
  return result;
}

double sub_2448170EC@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB6ADC(a2, *(char **)a1, *(void *)(a1 + 8), (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB6D80(a2, *(char **)(a1 + 16), *(void *)(a1 + 24), (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_2447FB010((unsigned __int8 *)(a1 + 32), (uint64_t)&v11);
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_2447FB010((unsigned __int8 *)(a1 + 34), (uint64_t)&v11);
          uint64_t v9 = v12;
          long long v8 = v11;
          if (!v11)
          {
            sub_2447FB010((unsigned __int8 *)(a1 + 36), (uint64_t)&v11);
            uint64_t v9 = v12;
            long long v8 = v11;
            if (!v11)
            {
              sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
              long long v8 = v11;
              uint64_t v9 = v12;
            }
          }
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244817280@<D0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  int v6 = v16;
  if (v16 == 1)
  {
LABEL_2:
    double result = *(double *)&v14;
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 16) = v15;
  }
  else
  {
    while (1)
    {
      long long v12 = xmmword_265196C08;
      uint64_t v13 = 15803;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v14)
      {
        case 0:
          if (sub_244CB3B68(a2) == 16)
          {
            sub_244CB40C8(a2, a1, &v10);
          }
          else
          {
            LODWORD(v10) = 43;
            *((void *)&v10 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
            LODWORD(v11) = 80;
          }
          goto LABEL_13;
        case 1:
          sub_244CB41F0(a2, a1 + 1, &v12);
          break;
        case 2:
          uint64_t v8 = a2;
          uint64_t v9 = (unsigned __int8 *)(a1 + 2);
          goto LABEL_12;
        case 3:
          uint64_t v8 = a2;
          uint64_t v9 = (unsigned __int8 *)a1 + 34;
          goto LABEL_12;
        case 4:
          uint64_t v8 = a2;
          uint64_t v9 = (unsigned __int8 *)a1 + 36;
LABEL_12:
          sub_2447F15BC(v8, v9, (uint64_t)&v10);
LABEL_13:
          long long v12 = v10;
          uint64_t v13 = v11;
          break;
        default:
          break;
      }
      double result = *(double *)&v12;
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
      int v6 = v16;
      if (v16 == 1) {
        goto LABEL_2;
      }
    }
  }
  return result;
}

double sub_244817444@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_2448170EC(a1, a2, 0, (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
      long long v8 = v11;
      uint64_t v9 = v12;
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244817528@<D0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265196C20;
      uint64_t v9 = 15857;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244817280(a1, a2, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_244817600@<D0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_10:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265196C38;
      uint64_t v11 = 15891;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v12)
      {
        if (sub_244CB3B68(a2) == 16)
        {
          sub_244CB40C8(a2, a1, &v8);
        }
        else
        {
          LODWORD(v8) = 43;
          *((void *)&v8 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
          LODWORD(v9) = 80;
        }
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_10;
      }
    }
  }
  return result;
}

double sub_244817728@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244816B14(a1, a2, 0, (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
      long long v8 = v11;
      uint64_t v9 = v12;
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_24481780C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265196C50;
      uint64_t v9 = 15925;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244816E60(a1, a2, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_2448178E4@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB6ADC(a2, *(char **)a1, *(void *)(a1 + 8), (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB6904();
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
        long long v8 = v11;
        uint64_t v9 = v12;
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2448179F4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_12:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265196C68;
      uint64_t v11 = 15960;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_24484B6B0(a2, (_WORD *)(a1 + 16), &v10);
      }
      else if (!(_BYTE)v12)
      {
        if (sub_244CB3B68(a2) == 16)
        {
          sub_244CB40C8(a2, (_OWORD *)a1, &v8);
        }
        else
        {
          LODWORD(v8) = 43;
          *((void *)&v8 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
          LODWORD(v9) = 80;
        }
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_12;
      }
    }
  }
  return result;
}

void sub_244817B3C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4 = *(_DWORD *)(a3 + 8);
  switch(v4)
  {
    case 0:
      goto LABEL_2;
    case 1:
      long long v5 = (unsigned char *)(a1 + 80);
      goto LABEL_12;
    case 2:
      a1 += 88;
      goto LABEL_2;
    case 3:
      a1 += 168;
LABEL_2:
      sub_24484B03C(a1, a2, a4);
      return;
    case 4:
      long long v5 = (unsigned char *)(a1 + 248);
      goto LABEL_12;
    case 5:
      long long v5 = (unsigned char *)(a1 + 249);
      goto LABEL_12;
    case 6:
      long long v5 = (unsigned char *)(a1 + 250);
      goto LABEL_12;
    case 7:
      long long v5 = (unsigned char *)(a1 + 251);
LABEL_12:
      sub_244CB3E8C(a2, v5, a4);
      break;
    default:
      switch(v4)
      {
        case 65528:
          a1 += 256;
          goto LABEL_2;
        case 65529:
          a1 += 336;
          goto LABEL_2;
        case 65530:
          a1 += 416;
          goto LABEL_2;
        case 65531:
          a1 += 496;
          goto LABEL_2;
        case 65532:
          sub_244CB3FB0(a2, (_DWORD *)(a1 + 576), a4);
          break;
        case 65533:
          sub_244CB3F40(a2, (_WORD *)(a1 + 580), a4);
          break;
        default:
          *(_DWORD *)a4 = 0;
          *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-co"
                                "mmon/app-common/zap-generated/cluster-objects.cpp";
          *(_DWORD *)(a4 + 16) = 16035;
          break;
      }
      break;
  }
}

void sub_244817C70(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  int v7 = 0;
  a4[1] = 0;
  a4[2] = 0;
  *a4 = 0;
  sub_244CB7594(a2, a3, 21, &v7, (uint64_t)a4);
  if (!*(_DWORD *)a4)
  {
    *a4 = 0;
    a4[1] = 0;
    a4[2] = 0;
    sub_244CB6ADC(a2, *(char **)a1, *(void *)(a1 + 8), (uint64_t)a4);
    if (!*(_DWORD *)a4)
    {
      *a4 = 0;
      a4[1] = 0;
      a4[2] = 0;
      sub_2447FB010((unsigned __int8 *)(a1 + 16), (uint64_t)a4);
      if (!*(_DWORD *)a4)
      {
        *a4 = 0;
        a4[1] = 0;
        a4[2] = 0;
        if (*(unsigned char *)(a1 + 18) == 13)
        {
LABEL_5:
          *(_DWORD *)a4 = 1415;
          a4[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
          *((_DWORD *)a4 + 4) = 75;
          return;
        }
        sub_244CB68B8();
        if (!*(_DWORD *)a4)
        {
          *a4 = 0;
          a4[1] = 0;
          a4[2] = 0;
          if (*(unsigned char *)(a1 + 19) == 10) {
            goto LABEL_5;
          }
          sub_244CB68B8();
          if (!*(_DWORD *)a4)
          {
            *a4 = 0;
            a4[1] = 0;
            a4[2] = 0;
            sub_244CB6904();
            if (!*(_DWORD *)a4)
            {
              *a4 = 0;
              a4[1] = 0;
              a4[2] = 0;
              sub_244817E7C(a2, 5, (unsigned char *)(a1 + 22), (uint64_t)a4);
              if (!*(_DWORD *)a4)
              {
                *a4 = 0;
                a4[1] = 0;
                a4[2] = 0;
                sub_244817F04(a2, 6, (unsigned char *)(a1 + 50), (uint64_t)a4);
                if (!*(_DWORD *)a4)
                {
                  *a4 = 0;
                  a4[1] = 0;
                  a4[2] = 0;
                  sub_244817F8C(a2, 7, (unsigned char *)(a1 + 53), (uint64_t)a4);
                  if (!*(_DWORD *)a4)
                  {
                    *a4 = 0;
                    a4[1] = 0;
                    a4[2] = 0;
                    sub_244817F8C(a2, 8, (unsigned char *)(a1 + 56), (uint64_t)a4);
                    if (!*(_DWORD *)a4)
                    {
                      *a4 = 0;
                      a4[1] = 0;
                      a4[2] = 0;
                      sub_244818014(a2, 9, (unsigned char *)(a1 + 59), (uint64_t)a4);
                      if (!*(_DWORD *)a4) {
                        sub_244CB7708((uint64_t)a2, v7, (uint64_t)a4);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void sub_244817E7C(void *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X2>, uint64_t a4@<X8>)
{
  if (*a3)
  {
    int v7 = sub_2446D1880(a3);
    sub_24484C40C(a1, a2, v7, a4);
  }
  else
  {
    *(_DWORD *)a4 = 0;
    *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    *(_DWORD *)(a4 + 16) = 171;
  }
}

void sub_244817F04(void *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X2>, uint64_t a4@<X8>)
{
  if (*a3)
  {
    int v7 = sub_2446D18C8(a3);
    sub_24484C434(a1, a2, (uint64_t)v7, a4);
  }
  else
  {
    *(_DWORD *)a4 = 0;
    *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    *(_DWORD *)(a4 + 16) = 171;
  }
}

void sub_244817F8C(void *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X2>, uint64_t a4@<X8>)
{
  if (*a3)
  {
    int v7 = sub_2446D18C8(a3);
    sub_24484C45C(a1, a2, (uint64_t)v7, a4);
  }
  else
  {
    *(_DWORD *)a4 = 0;
    *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    *(_DWORD *)(a4 + 16) = 171;
  }
}

void sub_244818014(void *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X2>, uint64_t a4@<X8>)
{
  if (*a3)
  {
    int v7 = sub_2446D18C8(a3);
    sub_24484C484(a1, a2, v7, a4);
  }
  else
  {
    *(_DWORD *)a4 = 0;
    *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    *(_DWORD *)(a4 + 16) = 171;
  }
}

double sub_24481809C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_19:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265196C80;
      uint64_t v11 = 16070;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v12)
      {
        case 0:
          if (sub_244CB3B68(a2) == 16)
          {
            sub_244CB40C8(a2, (_OWORD *)a1, &v8);
          }
          else
          {
            LODWORD(v8) = 43;
            *((void *)&v8 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
            LODWORD(v9) = 80;
          }
          goto LABEL_16;
        case 1:
          sub_2447F15BC(a2, (unsigned __int8 *)(a1 + 16), (uint64_t)&v10);
          break;
        case 2:
          sub_2447FE740(a2, (unsigned char *)(a1 + 18), &v8);
          goto LABEL_16;
        case 3:
          sub_244817088(a2, (unsigned char *)(a1 + 19), &v8);
          goto LABEL_16;
        case 4:
          sub_24484B6B0(a2, (_WORD *)(a1 + 20), &v8);
          goto LABEL_16;
        case 5:
          *(unsigned char *)(a1 + 22) = 1;
          *(void *)(a1 + 32) = 0;
          *(void *)(a1 + 40) = 0;
          *(void *)(a1 + 24) = 0;
          *(_WORD *)(a1 + 48) = 0;
          sub_24484C4AC(a2, a1 + 24, &v8);
          goto LABEL_16;
        case 6:
          *(unsigned char *)(a1 + 50) = 1;
          *(_WORD *)(a1 + 51) = 0;
          sub_24484C544(a2, (unsigned char *)(a1 + 51), &v8);
          goto LABEL_16;
        case 7:
          *(unsigned char *)(a1 + 53) = 1;
          *(_WORD *)(a1 + 54) = 0;
          sub_24484C5D4(a2, (unsigned char *)(a1 + 54), &v8);
          goto LABEL_16;
        case 8:
          *(unsigned char *)(a1 + 56) = 1;
          *(_WORD *)(a1 + 57) = 0;
          sub_24484C664(a2, (unsigned char *)(a1 + 57), &v8);
          goto LABEL_16;
        case 9:
          *(unsigned char *)(a1 + 59) = 1;
          *(_WORD *)(a1 + 60) = 0;
          sub_24484C6F4(a2, (unsigned char *)(a1 + 60), &v8);
LABEL_16:
          long long v10 = v8;
          uint64_t v11 = v9;
          break;
        default:
          break;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_19;
      }
    }
  }
  return result;
}

double sub_24481832C@<D0>(unsigned char *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_24483F918(a1, (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_2447F6524(a2, a1 + 8, (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
        long long v8 = v11;
        uint64_t v9 = v12;
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_24481843C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265196C98;
      uint64_t v11 = 16147;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        *(unsigned char *)(a1 + 8) = 1;
        *(void *)(a1 + 16) = 0;
        *(void *)(a1 + 24) = 0;
        sub_244CB41F0(a2, (_OWORD *)(a1 + 16), &v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        *(unsigned char *)a1 = 1;
        *(_DWORD *)(a1 + 4) = 0;
        sub_244CB3FB0(a2, (_DWORD *)(a1 + 4), (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_24481856C@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB6ADC(v7, *(char **)a1, *(void *)(a1 + 8), (uint64_t)&v11);
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  sub_2447EF794((uint64_t)&v7, 1, (unsigned char *)(a1 + 16));
  if (!v8)
  {
    sub_244CB68B8();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_2447FAB34(a1 + 20, (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_2447F5BC4(a1 + 32, (uint64_t)&v11);
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_244CB6D80(v7, *(char **)(a1 + 48), *(void *)(a1 + 56), (uint64_t)&v11);
          uint64_t v9 = v12;
          long long v8 = v11;
          if (!v11)
          {
            sub_24484C784(v7, 6, (unsigned char *)(a1 + 64), (uint64_t)&v11);
            uint64_t v9 = v12;
            long long v8 = v11;
            if (!v11)
            {
              sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
              long long v8 = v11;
              uint64_t v9 = v12;
            }
          }
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_24481873C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_16:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265196CB0;
      uint64_t v11 = 16193;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v12)
      {
        case 0:
          if (sub_244CB3B68(a2) == 16)
          {
            sub_244CB40C8(a2, (_OWORD *)a1, &v8);
          }
          else
          {
            LODWORD(v8) = 43;
            *((void *)&v8 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
            LODWORD(v9) = 80;
          }
          goto LABEL_13;
        case 1:
          sub_2446D1A48(a2, (unsigned char *)(a1 + 16), &v10);
          break;
        case 2:
          sub_24484B184(a2, (unsigned char *)(a1 + 17), &v8);
          goto LABEL_13;
        case 3:
          sub_2447F4140(a2, a1 + 20, (uint64_t)&v8);
          goto LABEL_13;
        case 4:
          sub_2447F5E48(a2, a1 + 32, (uint64_t)&v8);
          goto LABEL_13;
        case 5:
          sub_244CB41F0(a2, (_OWORD *)(a1 + 48), &v8);
          goto LABEL_13;
        case 6:
          sub_2447FE7A4(a2, (unsigned char *)(a1 + 64), (uint64_t)&v8);
LABEL_13:
          long long v10 = v8;
          uint64_t v11 = v9;
          break;
        default:
          break;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_16;
      }
    }
  }
  return result;
}

double sub_24481893C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_16:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265196CC8;
      uint64_t v11 = 16261;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v12)
      {
        case 0:
          if (sub_244CB3B68(a2) == 16)
          {
            sub_244CB40C8(a2, (_OWORD *)a1, &v8);
          }
          else
          {
            LODWORD(v8) = 43;
            *((void *)&v8 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
            LODWORD(v9) = 80;
          }
          goto LABEL_13;
        case 1:
          sub_2446D1A48(a2, (unsigned char *)(a1 + 16), &v10);
          break;
        case 2:
          sub_24484B184(a2, (unsigned char *)(a1 + 17), &v8);
          goto LABEL_13;
        case 3:
          sub_2447F4140(a2, a1 + 20, (uint64_t)&v8);
          goto LABEL_13;
        case 4:
          sub_2447F5E48(a2, a1 + 32, (uint64_t)&v8);
          goto LABEL_13;
        case 5:
          sub_244CB41F0(a2, (_OWORD *)(a1 + 48), &v8);
          goto LABEL_13;
        case 6:
          sub_2447FE7A4(a2, (unsigned char *)(a1 + 64), (uint64_t)&v8);
LABEL_13:
          long long v10 = v8;
          uint64_t v11 = v9;
          break;
        default:
          break;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_16;
      }
    }
  }
  return result;
}

double sub_244818B3C@<D0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  sub_2448008F4((uint64_t)&v7, 0, a1);
  if (!v8)
  {
    sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244818C04@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265196CE0;
      uint64_t v9 = 16319;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_24484B03C(a1, a2, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

void sub_244818CDC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4 = *(_DWORD *)(a3 + 8);
  switch(v4)
  {
    case 65528:
      a1 += 160;
      goto LABEL_3;
    case 65529:
      a1 += 240;
      goto LABEL_3;
    case 65530:
      a1 += 320;
      goto LABEL_3;
    case 65531:
      a1 += 400;
      goto LABEL_3;
    case 65532:
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 480), a4);
      return;
    case 65533:
      sub_244CB3F40(a2, (_WORD *)(a1 + 484), a4);
      return;
    default:
      if (v4 == 1)
      {
        a1 += 80;
LABEL_3:
        sub_24484B03C(a1, a2, a4);
        return;
      }
      if (!v4) {
        goto LABEL_3;
      }
      *(_DWORD *)a4 = 0;
      *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-common"
                            "/app-common/zap-generated/cluster-objects.cpp";
      *(_DWORD *)(a4 + 16) = 16358;
      return;
  }
}

void *sub_244818D9C@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  int v8 = 0;
  a4[1] = 0;
  a4[2] = 0;
  *a4 = 0;
  double result = sub_244CB7594(a2, a3, 21, &v8, (uint64_t)a4);
  if (!*(_DWORD *)a4)
  {
    *a4 = 0;
    a4[1] = 0;
    a4[2] = 0;
    double result = sub_244CB6ADC(a2, *(char **)a1, *(void *)(a1 + 8), (uint64_t)a4);
    if (!*(_DWORD *)a4) {
      return (void *)sub_244CB7708((uint64_t)a2, v8, (uint64_t)a4);
    }
  }
  return result;
}

double sub_244818E30@<D0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_10:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265196CF8;
      uint64_t v11 = 0x4000;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v12)
      {
        if (sub_244CB3B68(a2) == 16)
        {
          sub_244CB40C8(a2, a1, &v8);
        }
        else
        {
          LODWORD(v8) = 43;
          *((void *)&v8 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
          LODWORD(v9) = 80;
        }
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_10;
      }
    }
  }
  return result;
}

double sub_244818F58@<D0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_10:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265196D10;
      uint64_t v11 = 16419;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v12)
      {
        if (sub_244CB3B68(a2) == 16)
        {
          sub_244CB40C8(a2, a1, &v8);
        }
        else
        {
          LODWORD(v8) = 43;
          *((void *)&v8 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
          LODWORD(v9) = 80;
        }
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_10;
      }
    }
  }
  return result;
}

void sub_244819080(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  int v7 = 0;
  a4[1] = 0;
  a4[2] = 0;
  *a4 = 0;
  sub_244CB7594(a2, a3, 21, &v7, (uint64_t)a4);
  if (!*(_DWORD *)a4)
  {
    *a4 = 0;
    a4[1] = 0;
    a4[2] = 0;
    sub_244CB6ADC(a2, *(char **)a1, *(void *)(a1 + 8), (uint64_t)a4);
    if (!*(_DWORD *)a4)
    {
      *a4 = 0;
      a4[1] = 0;
      a4[2] = 0;
      sub_24480C634((unsigned char *)(a1 + 16), (uint64_t)a4);
      if (!*(_DWORD *)a4)
      {
        *a4 = 0;
        a4[1] = 0;
        a4[2] = 0;
        sub_244819180(a2, (unsigned char *)(a1 + 32), (uint64_t)a4);
        if (!*(_DWORD *)a4)
        {
          *a4 = 0;
          a4[1] = 0;
          a4[2] = 0;
          sub_244819208((unsigned __int8 *)(a1 + 64), (uint64_t)a4);
          if (!*(_DWORD *)a4) {
            sub_244CB7708((uint64_t)a2, v7, (uint64_t)a4);
          }
        }
      }
    }
  }
}

void sub_244819180(char *a1@<X0>, unsigned char *a2@<X2>, uint64_t a3@<X8>)
{
  if (*a2)
  {
    long long v5 = sub_2446D18A4(a2);
    sub_24484BC80(a1, (uint64_t)v5, a3);
  }
  else
  {
    *(_DWORD *)a3 = 0;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    *(_DWORD *)(a3 + 16) = 171;
  }
}

void sub_244819208(unsigned __int8 *a1@<X2>, uint64_t a2@<X8>)
{
  if (!a1[1])
  {
    sub_244CB710C();
    return;
  }
  int v2 = *a1;
  if (v2 == 5)
  {
    *(_DWORD *)a2 = 1415;
    *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    int v3 = 75;
    goto LABEL_7;
  }
  if (v2 == 255)
  {
    *(_DWORD *)a2 = 1415;
    *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    int v3 = 193;
LABEL_7:
    *(_DWORD *)(a2 + 16) = v3;
    return;
  }
  sub_244CB68B8();
}

double sub_244819268@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_13:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265196D28;
      uint64_t v11 = 16457;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v12)
      {
        case 0:
          if (sub_244CB3B68(a2) == 16)
          {
            sub_244CB40C8(a2, (_OWORD *)a1, &v8);
          }
          else
          {
            LODWORD(v8) = 43;
            *((void *)&v8 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
            LODWORD(v9) = 80;
          }
          goto LABEL_10;
        case 1:
          *(unsigned char *)(a1 + 16) = 1;
          *(void *)(a1 + 20) = 0;
          sub_2447F4140(a2, a1 + 20, (uint64_t)&v10);
          break;
        case 2:
          *(unsigned char *)(a1 + 32) = 1;
          *(void *)(a1 + 48) = 0;
          *(void *)(a1 + 56) = 0;
          *(void *)(a1 + 40) = 0;
          sub_244803C58(a2, a1 + 40, &v8);
          goto LABEL_10;
        case 3:
          sub_24481942C(a2, (unsigned __int8 *)(a1 + 64), (uint64_t)&v8);
LABEL_10:
          long long v10 = v8;
          uint64_t v11 = v9;
          break;
        default:
          break;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_13;
      }
    }
  }
  return result;
}

uint64_t sub_24481942C@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = sub_244CB3B68(a1);
  if (result == 20)
  {
    if (a2[1]) {
      a2[1] = 0;
    }
    *(_DWORD *)a3 = 0;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
    int v7 = 168;
LABEL_5:
    *(_DWORD *)(a3 + 16) = v7;
    return result;
  }
  *(void *)a3 = 0;
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  *(_WORD *)a2 = 256;
  uint64_t result = sub_2447FACE4(a1, a2, (void *)a3);
  if (!*(_DWORD *)a3)
  {
    if (!a2[1]) {
      sub_24479484C();
    }
    if (*a2 == 255)
    {
      *(_DWORD *)a3 = 1415;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
      int v7 = 175;
    }
    else
    {
      *(_DWORD *)a3 = 0;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
      int v7 = 177;
    }
    goto LABEL_5;
  }
  return result;
}

double sub_244819504@<D0>(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  sub_2447EF794((uint64_t)&v7, 0, a1);
  if (!v8)
  {
    sub_244CB69F4();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB68B8();
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_24483F80C(a1 + 10, (uint64_t)&v11);
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
          long long v8 = v11;
          uint64_t v9 = v12;
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244819650@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_11:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265196D40;
      uint64_t v11 = 16512;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v12)
      {
        case 0:
          sub_2446D1A48(a2, (unsigned char *)a1, &v10);
          break;
        case 1:
          sub_244CB3E0C(a2, (_DWORD *)(a1 + 4), (uint64_t)&v8);
          goto LABEL_8;
        case 2:
          sub_244CB3E8C(a2, (unsigned char *)(a1 + 8), (uint64_t)&v8);
          goto LABEL_8;
        case 3:
          *(unsigned char *)(a1 + 10) = 1;
          *(_WORD *)(a1 + 12) = 0;
          sub_244CB3F40(a2, (_WORD *)(a1 + 12), (uint64_t)&v8);
LABEL_8:
          long long v10 = v8;
          uint64_t v11 = v9;
          break;
        default:
          break;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_11;
      }
    }
  }
  return result;
}

double sub_2448197D0@<D0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  sub_244CB7594(a1, a2, 21, &v8, (uint64_t)&v9);
  long long v6 = v9;
  uint64_t v7 = v10;
  if (!v9)
  {
    sub_244CB69FC();
    uint64_t v7 = v10;
    long long v6 = v9;
    if (!v9)
    {
      sub_244CB69FC();
      uint64_t v7 = v10;
      long long v6 = v9;
      if (!v9)
      {
        sub_244CB694C();
        uint64_t v7 = v10;
        long long v6 = v9;
        if (!v9)
        {
          sub_244CB694C();
          uint64_t v7 = v10;
          long long v6 = v9;
          if (!v9)
          {
            sub_244CB7708((uint64_t)a1, v8, (uint64_t)&v9);
            long long v6 = v9;
            uint64_t v7 = v10;
          }
        }
      }
    }
  }
  double result = *(double *)&v6;
  *(_OWORD *)a3 = v6;
  *(void *)(a3 + 16) = v7;
  return result;
}

double sub_244819938@<D0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  int v6 = v16;
  if (v16 == 1)
  {
LABEL_12:
    double result = *(double *)&v14;
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 16) = v15;
  }
  else
  {
    while (1)
    {
      long long v12 = xmmword_265196D58;
      uint64_t v13 = 16563;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v14)
      {
        case 0:
          sub_244CB3CF0(a2, a1, (uint64_t)&v12);
          break;
        case 1:
          sub_244CB3CF0(a2, a1 + 1, (uint64_t)&v10);
          goto LABEL_9;
        case 2:
          uint64_t v7 = a2;
          int v8 = a1 + 2;
          goto LABEL_8;
        case 3:
          uint64_t v7 = a2;
          int v8 = (_DWORD *)a1 + 5;
LABEL_8:
          sub_244CB3FB0(v7, v8, (uint64_t)&v10);
LABEL_9:
          long long v12 = v10;
          uint64_t v13 = v11;
          break;
        default:
          break;
      }
      double result = *(double *)&v12;
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
      int v6 = v16;
      if (v16 == 1) {
        goto LABEL_12;
      }
    }
  }
  return result;
}

double sub_244819AA8@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_24484C88C(v7, 0, (uint64_t *)a1, &v11);
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  sub_2447F06A4((uint64_t)&v7, 1, (unsigned char *)(a1 + 24));
  if (!v8)
  {
    sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244819B9C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265196D70;
      uint64_t v11 = 16612;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_2447F5F24(a2, (unsigned char *)(a1 + 88), &v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_2447F50A0(a2, a1, &v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_244819CAC@<D0>(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB694C();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB694C();
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB694C();
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_244CB694C();
          uint64_t v9 = v12;
          long long v8 = v11;
          if (!v11)
          {
            sub_244CB694C();
            uint64_t v9 = v12;
            long long v8 = v11;
            if (!v11)
            {
              sub_24484B7DC(a1 + 20, (uint64_t)&v11);
              uint64_t v9 = v12;
              long long v8 = v11;
              if (!v11)
              {
                sub_24483F918(a1 + 24, (uint64_t)&v11);
                uint64_t v9 = v12;
                long long v8 = v11;
                if (!v11)
                {
                  sub_24483F918(a1 + 32, (uint64_t)&v11);
                  uint64_t v9 = v12;
                  long long v8 = v11;
                  if (!v11)
                  {
                    sub_24483F80C(a1 + 40, (uint64_t)&v11);
                    uint64_t v9 = v12;
                    long long v8 = v11;
                    if (!v11)
                    {
                      sub_24481D370(a1 + 48, (uint64_t)&v11);
                      uint64_t v9 = v12;
                      long long v8 = v11;
                      if (!v11)
                      {
                        sub_24481D370(a1 + 64, (uint64_t)&v11);
                        uint64_t v9 = v12;
                        long long v8 = v11;
                        if (!v11)
                        {
                          sub_24481D370(a1 + 80, (uint64_t)&v11);
                          uint64_t v9 = v12;
                          long long v8 = v11;
                          if (!v11)
                          {
                            sub_24481D370(a1 + 96, (uint64_t)&v11);
                            uint64_t v9 = v12;
                            long long v8 = v11;
                            if (!v11)
                            {
                              sub_24484C994(a2, 13, a1 + 112, (uint64_t)&v11);
                              uint64_t v9 = v12;
                              long long v8 = v11;
                              if (!v11)
                              {
                                sub_24481D370(a1 + 136, (uint64_t)&v11);
                                uint64_t v9 = v12;
                                long long v8 = v11;
                                if (!v11)
                                {
                                  sub_24481D370(a1 + 152, (uint64_t)&v11);
                                  uint64_t v9 = v12;
                                  long long v8 = v11;
                                  if (!v11)
                                  {
                                    sub_24483F918(a1 + 168, (uint64_t)&v11);
                                    uint64_t v9 = v12;
                                    long long v8 = v11;
                                    if (!v11)
                                    {
                                      sub_24483F918(a1 + 176, (uint64_t)&v11);
                                      uint64_t v9 = v12;
                                      long long v8 = v11;
                                      if (!v11)
                                      {
                                        sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
                                        long long v8 = v11;
                                        uint64_t v9 = v12;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_24481A07C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v19[0] = 0;
  uint64_t v20 = a2;
  sub_2447ED6F8((uint64_t)v19, (uint64_t)&v16);
  int v6 = v18;
  if (v18 == 1)
  {
LABEL_27:
    double result = *(double *)&v16;
    *(_OWORD *)a3 = v16;
    *(void *)(a3 + 16) = v17;
  }
  else
  {
    while (1)
    {
      long long v14 = xmmword_265196D88;
      uint64_t v15 = 16669;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v16)
      {
        case 0:
          sub_244CB3FB0(a2, (_DWORD *)a1, (uint64_t)&v14);
          break;
        case 1:
          uint64_t v7 = a2;
          long long v8 = (_DWORD *)(a1 + 4);
          goto LABEL_23;
        case 2:
          uint64_t v7 = a2;
          long long v8 = (_DWORD *)(a1 + 8);
          goto LABEL_23;
        case 3:
          uint64_t v7 = a2;
          long long v8 = (_DWORD *)(a1 + 12);
          goto LABEL_23;
        case 4:
          uint64_t v7 = a2;
          long long v8 = (_DWORD *)(a1 + 16);
          goto LABEL_23;
        case 5:
          *(_WORD *)(a1 + 20) = 1;
          sub_244CB3C0C(a2, (char *)(a1 + 21), (uint64_t)&v12);
          goto LABEL_24;
        case 6:
          *(unsigned char *)(a1 + 24) = 1;
          *(_DWORD *)(a1 + 28) = 0;
          uint64_t v7 = a2;
          long long v8 = (_DWORD *)(a1 + 28);
          goto LABEL_23;
        case 7:
          *(unsigned char *)(a1 + 32) = 1;
          *(_DWORD *)(a1 + 36) = 0;
          uint64_t v7 = a2;
          long long v8 = (_DWORD *)(a1 + 36);
          goto LABEL_23;
        case 8:
          *(unsigned char *)(a1 + 40) = 1;
          *(_WORD *)(a1 + 42) = 0;
          sub_244CB3F40(a2, (_WORD *)(a1 + 42), (uint64_t)&v12);
          goto LABEL_24;
        case 9:
          *(unsigned char *)(a1 + 48) = 1;
          *(void *)(a1 + 56) = 0;
          uint64_t v9 = a2;
          int v10 = (void *)(a1 + 56);
          goto LABEL_20;
        case 10:
          *(unsigned char *)(a1 + 64) = 1;
          *(void *)(a1 + 72) = 0;
          uint64_t v9 = a2;
          int v10 = (void *)(a1 + 72);
          goto LABEL_20;
        case 11:
          *(unsigned char *)(a1 + 80) = 1;
          *(void *)(a1 + 88) = 0;
          uint64_t v9 = a2;
          int v10 = (void *)(a1 + 88);
          goto LABEL_20;
        case 12:
          *(unsigned char *)(a1 + 96) = 1;
          *(void *)(a1 + 104) = 0;
          uint64_t v9 = a2;
          int v10 = (void *)(a1 + 104);
          goto LABEL_20;
        case 13:
          sub_2447FE7A4(a2, (unsigned char *)(a1 + 112), (uint64_t)&v12);
          goto LABEL_24;
        case 14:
          *(unsigned char *)(a1 + 200) = 1;
          *(void *)(a1 + 208) = 0;
          uint64_t v9 = a2;
          int v10 = (void *)(a1 + 208);
          goto LABEL_20;
        case 15:
          *(unsigned char *)(a1 + 216) = 1;
          *(void *)(a1 + 224) = 0;
          uint64_t v9 = a2;
          int v10 = (void *)(a1 + 224);
LABEL_20:
          sub_244CB3CF0(v9, v10, (uint64_t)&v12);
          goto LABEL_24;
        case 16:
          *(unsigned char *)(a1 + 232) = 1;
          *(_DWORD *)(a1 + 236) = 0;
          uint64_t v7 = a2;
          long long v8 = (_DWORD *)(a1 + 236);
          goto LABEL_23;
        case 17:
          *(unsigned char *)(a1 + 240) = 1;
          *(_DWORD *)(a1 + 244) = 0;
          uint64_t v7 = a2;
          long long v8 = (_DWORD *)(a1 + 244);
LABEL_23:
          sub_244CB3FB0(v7, v8, (uint64_t)&v12);
LABEL_24:
          long long v14 = v12;
          uint64_t v15 = v13;
          break;
        default:
          break;
      }
      double result = *(double *)&v14;
      *(_OWORD *)a3 = v14;
      *(void *)(a3 + 16) = v15;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v19, (uint64_t)&v16);
      int v6 = v18;
      if (v18 == 1) {
        goto LABEL_27;
      }
    }
  }
  return result;
}

double sub_24481A3C8@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB694C();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_2447F5C00((unsigned __int16 *)(a1 + 4), (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB694C();
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_244CB694C();
          uint64_t v9 = v12;
          long long v8 = v11;
          if (!v11)
          {
            sub_24480C634((unsigned char *)(a1 + 16), (uint64_t)&v11);
            uint64_t v9 = v12;
            long long v8 = v11;
            if (!v11)
            {
              sub_24483F918((unsigned char *)(a1 + 28), (uint64_t)&v11);
              uint64_t v9 = v12;
              long long v8 = v11;
              if (!v11)
              {
                sub_244CB65C8();
                long long v8 = v11;
                uint64_t v9 = v12;
              }
            }
          }
        }
      }
    }
  }
  sub_24481A5D4((uint64_t)&v7, 7u, a1 + 40);
  sub_2447F06A4((uint64_t)&v7, 8, (unsigned char *)(a1 + 56));
  if (!v8)
  {
    sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_24481A5D4(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = a1 + 8;
  if (!*(_DWORD *)(a1 + 8))
  {
    int v4 = *(void **)a1;
    long long v5 = *(unsigned char **)a3;
    uint64_t v6 = *(void *)(a3 + 8);
    int v11 = 0;
    uint64_t v10 = 0;
    long long v9 = 0uLL;
    sub_244CB7594(v4, a2, 22, &v11, (uint64_t)&v9);
    if (!v9)
    {
      if (v6)
      {
        uint64_t v7 = 184 * v6;
        while (1)
        {
          long long v9 = 0uLL;
          uint64_t v10 = 0;
          sub_244819CAC(v5, v4, 256, (uint64_t)&v9);
          if (v9) {
            break;
          }
          v5 += 184;
          v7 -= 184;
          if (!v7) {
            goto LABEL_7;
          }
        }
      }
      else
      {
LABEL_7:
        long long v9 = 0uLL;
        uint64_t v10 = 0;
        sub_244CB7708((uint64_t)v4, v11, (uint64_t)&v9);
        if (!v9)
        {
          LODWORD(v9) = 0;
          *((void *)&v9 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/List.h";
          LODWORD(v10) = 86;
        }
      }
    }
    double result = *(double *)&v9;
    *(_OWORD *)uint64_t v3 = v9;
    *(void *)(v3 + 16) = v10;
  }
  return result;
}

double sub_24481A6C4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  int v6 = v16;
  if (v16 == 1)
  {
LABEL_17:
    double result = *(double *)&v14;
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 16) = v15;
  }
  else
  {
    while (1)
    {
      long long v12 = xmmword_265196DA0;
      uint64_t v13 = 16781;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v14)
      {
        case 0:
          sub_244CB3FB0(a2, (_DWORD *)a1, (uint64_t)&v12);
          break;
        case 1:
          sub_2447EF9E0(a2, (__int16 *)(a1 + 4), (uint64_t)&v10);
          goto LABEL_14;
        case 2:
          uint64_t v7 = a2;
          long long v8 = (_DWORD *)(a1 + 8);
          goto LABEL_10;
        case 3:
          uint64_t v7 = a2;
          long long v8 = (_DWORD *)(a1 + 12);
          goto LABEL_10;
        case 4:
          *(unsigned char *)(a1 + 16) = 1;
          *(void *)(a1 + 20) = 0;
          sub_2447F4140(a2, a1 + 20, (uint64_t)&v10);
          goto LABEL_14;
        case 5:
          *(unsigned char *)(a1 + 28) = 1;
          *(_DWORD *)(a1 + 32) = 0;
          uint64_t v7 = a2;
          long long v8 = (_DWORD *)(a1 + 32);
LABEL_10:
          sub_244CB3FB0(v7, v8, (uint64_t)&v10);
          goto LABEL_14;
        case 6:
          sub_244CB3C0C(a2, (char *)(a1 + 36), (uint64_t)&v10);
          goto LABEL_14;
        case 7:
          sub_24484B03C(a1 + 40, a2, (uint64_t)&v10);
          goto LABEL_14;
        case 8:
          sub_2447F5F24(a2, (unsigned char *)(a1 + 120), &v10);
LABEL_14:
          long long v12 = v10;
          uint64_t v13 = v11;
          break;
        default:
          break;
      }
      double result = *(double *)&v12;
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
      int v6 = v16;
      if (v16 == 1) {
        goto LABEL_17;
      }
    }
  }
  return result;
}

double sub_24481A8E0@<D0>(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB694C();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB694C();
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_24481D370(a1 + 8, (uint64_t)&v11);
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_24481D370(a1 + 24, (uint64_t)&v11);
          uint64_t v9 = v12;
          long long v8 = v11;
          if (!v11)
          {
            sub_24484BD44(a1 + 40, (uint64_t)&v11);
            uint64_t v9 = v12;
            long long v8 = v11;
            if (!v11)
            {
              sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
              long long v8 = v11;
              uint64_t v9 = v12;
            }
          }
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_24481AA74@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  int v6 = v16;
  if (v16 == 1)
  {
LABEL_13:
    double result = *(double *)&v14;
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 16) = v15;
  }
  else
  {
    while (1)
    {
      long long v12 = xmmword_265196DB8;
      uint64_t v13 = 16853;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v14)
      {
        case 0:
          sub_244CB3FB0(a2, (_DWORD *)a1, (uint64_t)&v12);
          break;
        case 1:
          sub_244CB3FB0(a2, (_DWORD *)(a1 + 4), (uint64_t)&v10);
          goto LABEL_10;
        case 2:
          *(unsigned char *)(a1 + 8) = 1;
          *(void *)(a1 + 16) = 0;
          uint64_t v7 = a2;
          long long v8 = (void *)(a1 + 16);
          goto LABEL_8;
        case 3:
          *(unsigned char *)(a1 + 24) = 1;
          *(void *)(a1 + 32) = 0;
          uint64_t v7 = a2;
          long long v8 = (void *)(a1 + 32);
LABEL_8:
          sub_244CB3CF0(v7, v8, (uint64_t)&v10);
          goto LABEL_10;
        case 4:
          *(_WORD *)(a1 + 40) = 1;
          sub_244CB3C70(a2, (unsigned char *)(a1 + 41), (uint64_t)&v10);
LABEL_10:
          long long v12 = v10;
          uint64_t v13 = v11;
          break;
        default:
          break;
      }
      double result = *(double *)&v12;
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
      int v6 = v16;
      if (v16 == 1) {
        goto LABEL_13;
      }
    }
  }
  return result;
}

double sub_24481AC20@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB68B8();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_24481D370((unsigned char *)(a1 + 8), (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB694C();
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
          long long v8 = v11;
          uint64_t v9 = v12;
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_24481AD5C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  for (int i = v14; v14 != 1; int i = v14)
  {
    long long v10 = xmmword_265196DD0;
    uint64_t v11 = 16907;
    if (i) {
      sub_24484AFEC();
    }
    if (v12 == 2)
    {
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 24), (uint64_t)&v8);
    }
    else
    {
      if (v12 != 1)
      {
        if (!(_BYTE)v12) {
          sub_244CB3E8C(a2, (unsigned char *)a1, (uint64_t)&v10);
        }
        goto LABEL_10;
      }
      *(unsigned char *)(a1 + 8) = 1;
      *(void *)(a1 + 16) = 0;
      sub_244CB3CF0(a2, (void *)(a1 + 16), (uint64_t)&v8);
    }
    long long v10 = v8;
    uint64_t v11 = v9;
LABEL_10:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
    if (*(_DWORD *)a3) {
      return result;
    }
    sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  }
  double result = *(double *)&v12;
  *(_OWORD *)a3 = v12;
  *(void *)(a3 + 16) = v13;
  return result;
}

double sub_24481AEA0@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB69FC();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB694C();
      long long v8 = v11;
      uint64_t v9 = v12;
    }
  }
  sub_2447F1C40((uint64_t)&v7, 2, (unsigned char *)(a1 + 12));
  if (!v8)
  {
    sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_24481AFC0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  for (int i = v14; v14 != 1; int i = v14)
  {
    long long v10 = xmmword_265196DE8;
    uint64_t v11 = 16955;
    if (i) {
      sub_24484AFEC();
    }
    if (v12 == 2)
    {
      sub_2447F1DCC(a2, (unsigned char *)(a1 + 12), &v8);
    }
    else
    {
      if (v12 != 1)
      {
        if (!(_BYTE)v12) {
          sub_244CB3CF0(a2, (void *)a1, (uint64_t)&v10);
        }
        goto LABEL_10;
      }
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 8), (uint64_t)&v8);
    }
    long long v10 = v8;
    uint64_t v11 = v9;
LABEL_10:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
    if (*(_DWORD *)a3) {
      return result;
    }
    sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  }
  double result = *(double *)&v12;
  *(_OWORD *)a3 = v12;
  *(void *)(a3 + 16) = v13;
  return result;
}

double sub_24481B0F0@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB694C();
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  sub_2447F1C40((uint64_t)&v7, 1, (unsigned char *)(a1 + 4));
  if (!v8)
  {
    sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_24481B1E4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265196E00;
      uint64_t v11 = 17018;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_2447F1DCC(a2, (unsigned char *)(a1 + 4), &v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB3FB0(a2, (_DWORD *)a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_24481B2F4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265196E18;
      uint64_t v11 = 17057;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_2447F1DCC(a2, (unsigned char *)(a1 + 4), &v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB3FB0(a2, (_DWORD *)a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_24481B404@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB694C();
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  sub_24481B508((uint64_t)&v7, 1u, (uint64_t *)(a1 + 8));
  sub_2447F1C40((uint64_t)&v7, 2, (unsigned char *)(a1 + 24));
  if (!v8)
  {
    sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_24481B508(uint64_t a1, unsigned int a2, uint64_t *a3)
{
  uint64_t v3 = a1 + 8;
  if (!*(_DWORD *)(a1 + 8))
  {
    int v4 = *(void **)a1;
    uint64_t v5 = *a3;
    uint64_t v6 = a3[1];
    int v11 = 0;
    uint64_t v10 = 0;
    long long v9 = 0uLL;
    sub_244CB7594(v4, a2, 22, &v11, (uint64_t)&v9);
    if (!v9)
    {
      if (v6)
      {
        uint64_t v7 = 32 * v6;
        while (1)
        {
          long long v9 = 0uLL;
          uint64_t v10 = 0;
          sub_24481AC20(v5, v4, 256, (uint64_t)&v9);
          if (v9) {
            break;
          }
          v5 += 32;
          v7 -= 32;
          if (!v7) {
            goto LABEL_7;
          }
        }
      }
      else
      {
LABEL_7:
        long long v9 = 0uLL;
        uint64_t v10 = 0;
        sub_244CB7708((uint64_t)v4, v11, (uint64_t)&v9);
        if (!v9)
        {
          LODWORD(v9) = 0;
          *((void *)&v9 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/List.h";
          LODWORD(v10) = 86;
        }
      }
    }
    double result = *(double *)&v9;
    *(_OWORD *)uint64_t v3 = v9;
    *(void *)(v3 + 16) = v10;
  }
  return result;
}

double sub_24481B5F4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  for (int i = v14; v14 != 1; int i = v14)
  {
    long long v10 = xmmword_265196E30;
    uint64_t v11 = 17117;
    if (i) {
      sub_24484AFEC();
    }
    if (v12 == 2)
    {
      sub_2447F1DCC(a2, (unsigned char *)(a1 + 88), &v8);
    }
    else
    {
      if (v12 != 1)
      {
        if (!(_BYTE)v12) {
          sub_244CB3FB0(a2, (_DWORD *)a1, (uint64_t)&v10);
        }
        goto LABEL_10;
      }
      sub_24484B03C(a1 + 8, a2, (uint64_t)&v8);
    }
    long long v10 = v8;
    uint64_t v11 = v9;
LABEL_10:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
    if (*(_DWORD *)a3) {
      return result;
    }
    sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  }
  double result = *(double *)&v12;
  *(_OWORD *)a3 = v12;
  *(void *)(a3 + 16) = v13;
  return result;
}

double sub_24481B724@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  sub_24481B7FC((uint64_t)&v7, 0, a1);
  sub_2447F1C40((uint64_t)&v7, 1, (unsigned char *)(a1 + 16));
  if (!v8)
  {
    sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_24481B7FC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = a1 + 8;
  if (!*(_DWORD *)(a1 + 8))
  {
    int v4 = *(void **)a1;
    uint64_t v5 = *(unsigned char **)a3;
    uint64_t v6 = *(void *)(a3 + 8);
    int v11 = 0;
    uint64_t v10 = 0;
    long long v9 = 0uLL;
    sub_244CB7594(v4, a2, 22, &v11, (uint64_t)&v9);
    if (!v9)
    {
      if (v6)
      {
        uint64_t v7 = 48 * v6;
        while (1)
        {
          long long v9 = 0uLL;
          uint64_t v10 = 0;
          sub_24481A8E0(v5, v4, 256, (uint64_t)&v9);
          if (v9) {
            break;
          }
          v5 += 48;
          v7 -= 48;
          if (!v7) {
            goto LABEL_7;
          }
        }
      }
      else
      {
LABEL_7:
        long long v9 = 0uLL;
        uint64_t v10 = 0;
        sub_244CB7708((uint64_t)v4, v11, (uint64_t)&v9);
        if (!v9)
        {
          LODWORD(v9) = 0;
          *((void *)&v9 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/List.h";
          LODWORD(v10) = 86;
        }
      }
    }
    double result = *(double *)&v9;
    *(_OWORD *)uint64_t v3 = v9;
    *(void *)(v3 + 16) = v10;
  }
  return result;
}

double sub_24481B8EC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265196E48;
      uint64_t v11 = 17160;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_2447F1DCC(a2, (unsigned char *)(a1 + 80), &v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_24484B03C(a1, a2, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

void sub_24481B9FC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4 = *(_DWORD *)(a3 + 8);
  switch(v4)
  {
    case 0:
      sub_24481BB64(a2, (char *)a1, (void *)a4);
      break;
    case 1:
      sub_244CB3C0C(a2, (char *)(a1 + 1), a4);
      break;
    case 2:
      sub_2447FACE4(a2, (unsigned char *)(a1 + 2), (void *)a4);
      break;
    case 3:
      int v6 = (void *)(a1 + 8);
      goto LABEL_10;
    case 4:
      int v6 = (void *)(a1 + 16);
LABEL_10:
      sub_244CB3CF0(a2, v6, a4);
      break;
    case 5:
      sub_24481BBD0(a2, a1 + 24, (void *)a4);
      break;
    case 6:
      sub_24481BC70(a2, a1 + 128, (void *)a4);
      break;
    case 7:
      sub_2446D1A48(a2, (unsigned char *)(a1 + 264), (void *)a4);
      break;
    default:
      switch(v4)
      {
        case 65528:
          uint64_t v5 = a1 + 272;
          goto LABEL_5;
        case 65529:
          uint64_t v5 = a1 + 352;
          goto LABEL_5;
        case 65530:
          uint64_t v5 = a1 + 432;
          goto LABEL_5;
        case 65531:
          uint64_t v5 = a1 + 512;
LABEL_5:
          sub_24484B03C(v5, a2, a4);
          break;
        case 65532:
          sub_244CB3FB0(a2, (_DWORD *)(a1 + 592), a4);
          break;
        case 65533:
          sub_244CB3F40(a2, (_WORD *)(a1 + 596), a4);
          break;
        default:
          *(_DWORD *)a4 = 0;
          *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-co"
                                "mmon/app-common/zap-generated/cluster-objects.cpp";
          *(_DWORD *)(a4 + 16) = 17235;
          break;
      }
      break;
  }
}

uint64_t sub_24481BB64@<X0>(uint64_t a1@<X0>, char *a2@<X1>, void *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  uint64_t result = sub_2446D1AAC(a1, a2, a3);
  if (!*(_DWORD *)a3)
  {
    char v6 = *a2;
    if ((*a2 + 1) >= 0xFu) {
      char v6 = 14;
    }
    *a2 = v6;
    *(_DWORD *)a3 = 0;
    a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
    *((_DWORD *)a3 + 4) = 61;
  }
  return result;
}

void sub_24481BBD0(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if (sub_244CB3B68(a1) == 20)
  {
    if (*(unsigned char *)(a2 + 96)) {
      *(unsigned char *)(a2 + 96) = 0;
    }
    int v6 = 168;
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)(a2 + 48) = 0u;
    *(_OWORD *)(a2 + 64) = 0u;
    *(_OWORD *)(a2 + 80) = 0u;
    *(unsigned char *)(a2 + 96) = 1;
    sub_244819B9C(a2, a1, (uint64_t)a3);
    if (*(_DWORD *)a3) {
      return;
    }
    int v6 = 177;
  }
  *(_DWORD *)a3 = 0;
  a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
  *((_DWORD *)a3 + 4) = v6;
}

void sub_24481BC70(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if (sub_244CB3B68(a1) == 20)
  {
    if (*(unsigned char *)(a2 + 128)) {
      *(unsigned char *)(a2 + 128) = 0;
    }
    int v6 = 168;
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
    uint64_t v7 = sub_24484CA9C(a2);
    sub_24481A6C4(v7, a1, (uint64_t)a3);
    if (*(_DWORD *)a3) {
      return;
    }
    int v6 = 177;
  }
  *(_DWORD *)a3 = 0;
  a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
  *((_DWORD *)a3 + 4) = v6;
}

void sub_24481BCFC(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  int v7 = 0;
  a4[1] = 0;
  a4[2] = 0;
  *a4 = 0;
  sub_244CB7594(a2, a3, 21, &v7, (uint64_t)a4);
  if (!*(_DWORD *)a4)
  {
    *a4 = 0;
    a4[1] = 0;
    a4[2] = 0;
    if (*a1 == 5)
    {
      *(_DWORD *)a4 = 1415;
      a4[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
      *((_DWORD *)a4 + 4) = 75;
    }
    else
    {
      sub_244CB68B8();
      if (!*(_DWORD *)a4)
      {
        *a4 = 0;
        a4[1] = 0;
        a4[2] = 0;
        sub_244CB694C();
        if (!*(_DWORD *)a4)
        {
          *a4 = 0;
          a4[1] = 0;
          a4[2] = 0;
          sub_244CB69FC();
          if (!*(_DWORD *)a4) {
            sub_244CB7708((uint64_t)a2, v7, (uint64_t)a4);
          }
        }
      }
    }
  }
}

double sub_24481BE00@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  for (int i = v14; v14 != 1; int i = v14)
  {
    long long v10 = xmmword_265196E60;
    uint64_t v11 = 17284;
    if (i) {
      sub_24484AFEC();
    }
    if (v12 == 2)
    {
      sub_244CB3CF0(a2, (void *)(a1 + 8), (uint64_t)&v8);
    }
    else
    {
      if (v12 != 1)
      {
        if (!(_BYTE)v12) {
          sub_2447FACE4(a2, (unsigned char *)a1, &v10);
        }
        goto LABEL_10;
      }
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 4), (uint64_t)&v8);
    }
    long long v10 = v8;
    uint64_t v11 = v9;
LABEL_10:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
    if (*(_DWORD *)a3) {
      return result;
    }
    sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  }
  double result = *(double *)&v12;
  *(_OWORD *)a3 = v12;
  *(void *)(a3 + 16) = v13;
  return result;
}

void sub_24481BF30(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  int v7 = 0;
  a4[1] = 0;
  a4[2] = 0;
  *a4 = 0;
  sub_244CB7594(a2, a3, 21, &v7, (uint64_t)a4);
  if (!*(_DWORD *)a4)
  {
    *a4 = 0;
    a4[1] = 0;
    a4[2] = 0;
    if (*a1 == 5)
    {
      *(_DWORD *)a4 = 1415;
      a4[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
      *((_DWORD *)a4 + 4) = 75;
    }
    else
    {
      sub_244CB68B8();
      if (!*(_DWORD *)a4) {
        sub_244CB7708((uint64_t)a2, v7, (uint64_t)a4);
      }
    }
  }
}

double sub_24481BFEC@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265196E78;
      uint64_t v9 = 17348;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_2447FACE4(a2, a1, &v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_24481C0C4@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB6904();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244813DC0((unsigned char *)(a1 + 2), (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_24481D370((unsigned char *)(a1 + 8), (uint64_t)&v11);
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
          long long v8 = v11;
          uint64_t v9 = v12;
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_24481C200@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  for (int i = v14; v14 != 1; int i = v14)
  {
    long long v10 = xmmword_265196E90;
    uint64_t v11 = 17390;
    if (i) {
      sub_24484AFEC();
    }
    if (v12 == 2)
    {
      *(unsigned char *)(a1 + 8) = 1;
      *(void *)(a1 + 16) = 0;
      sub_244CB3CF0(a2, (void *)(a1 + 16), (uint64_t)&v8);
    }
    else
    {
      if (v12 != 1)
      {
        if (!(_BYTE)v12) {
          sub_244CB3F40(a2, (_WORD *)a1, (uint64_t)&v10);
        }
        goto LABEL_10;
      }
      *(_WORD *)(a1 + 2) = 1;
      sub_244CB3E8C(a2, (unsigned char *)(a1 + 3), (uint64_t)&v8);
    }
    long long v10 = v8;
    uint64_t v11 = v9;
LABEL_10:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
    if (*(_DWORD *)a3) {
      return result;
    }
    sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  }
  double result = *(double *)&v12;
  *(_OWORD *)a3 = v12;
  *(void *)(a3 + 16) = v13;
  return result;
}

double sub_24481C348@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB68B8();
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  sub_24481C43C((uint64_t)&v7, 1u, (uint64_t *)(a1 + 8));
  if (!v8)
  {
    sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_24481C43C(uint64_t a1, unsigned int a2, uint64_t *a3)
{
  uint64_t v3 = a1 + 8;
  if (!*(_DWORD *)(a1 + 8))
  {
    int v4 = *(void **)a1;
    uint64_t v5 = *a3;
    uint64_t v6 = a3[1];
    int v11 = 0;
    uint64_t v10 = 0;
    long long v9 = 0uLL;
    sub_244CB7594(v4, a2, 22, &v11, (uint64_t)&v9);
    if (!v9)
    {
      if (v6)
      {
        uint64_t v7 = 24 * v6;
        while (1)
        {
          long long v9 = 0uLL;
          uint64_t v10 = 0;
          sub_24481C0C4(v5, v4, 256, (uint64_t)&v9);
          if (v9) {
            break;
          }
          v5 += 24;
          v7 -= 24;
          if (!v7) {
            goto LABEL_7;
          }
        }
      }
      else
      {
LABEL_7:
        long long v9 = 0uLL;
        uint64_t v10 = 0;
        sub_244CB7708((uint64_t)v4, v11, (uint64_t)&v9);
        if (!v9)
        {
          LODWORD(v9) = 0;
          *((void *)&v9 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/List.h";
          LODWORD(v10) = 86;
        }
      }
    }
    double result = *(double *)&v9;
    *(_OWORD *)uint64_t v3 = v9;
    *(void *)(v3 + 16) = v10;
  }
  return result;
}

double sub_24481C52C@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265196EA8;
      uint64_t v11 = 17435;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_24484B03C((uint64_t)(a1 + 8), a2, (uint64_t)&v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_24484B184(a2, a1, &v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_24481C63C@<D0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  sub_24481C704((uint64_t)&v7, 0, a1);
  if (!v8)
  {
    sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_24481C704(uint64_t a1, unsigned int a2, uint64_t *a3)
{
  uint64_t v3 = a1 + 8;
  if (!*(_DWORD *)(a1 + 8))
  {
    int v4 = *(void **)a1;
    uint64_t v5 = *a3;
    uint64_t v6 = a3[1];
    int v11 = 0;
    uint64_t v10 = 0;
    long long v9 = 0uLL;
    sub_244CB7594(v4, a2, 22, &v11, (uint64_t)&v9);
    if (!v9)
    {
      if (v6)
      {
        uint64_t v7 = 24 * v6;
        while (1)
        {
          long long v9 = 0uLL;
          uint64_t v10 = 0;
          sub_24481C348(v5, v4, 256, (uint64_t)&v9);
          if (v9) {
            break;
          }
          v5 += 24;
          v7 -= 24;
          if (!v7) {
            goto LABEL_7;
          }
        }
      }
      else
      {
LABEL_7:
        long long v9 = 0uLL;
        uint64_t v10 = 0;
        sub_244CB7708((uint64_t)v4, v11, (uint64_t)&v9);
        if (!v9)
        {
          LODWORD(v9) = 0;
          *((void *)&v9 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/List.h";
          LODWORD(v10) = 86;
        }
      }
    }
    double result = *(double *)&v9;
    *(_OWORD *)uint64_t v3 = v9;
    *(void *)(v3 + 16) = v10;
  }
  return result;
}

double sub_24481C7F4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265196EC0;
      uint64_t v9 = 17477;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_24484B03C(a1, a2, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_24481C8CC@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_2447FAB34(a1, (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB69FC();
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB69FC();
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
          long long v8 = v11;
          uint64_t v9 = v12;
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_24481CA08@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  for (int i = v16; v16 != 1; int i = v16)
  {
    long long v12 = xmmword_265196ED8;
    uint64_t v13 = 17533;
    if (i) {
      sub_24484AFEC();
    }
    if (v14 == 2)
    {
      uint64_t v7 = a2;
      long long v8 = (void *)(a1 + 16);
    }
    else
    {
      if (v14 != 1)
      {
        if (!(_BYTE)v14) {
          sub_2447F4140(a2, a1, (uint64_t)&v12);
        }
        goto LABEL_10;
      }
      uint64_t v7 = a2;
      long long v8 = (void *)(a1 + 8);
    }
    sub_244CB3CF0(v7, v8, (uint64_t)&v10);
    long long v12 = v10;
    uint64_t v13 = v11;
LABEL_10:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
    if (*(_DWORD *)a3) {
      return result;
    }
    sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  }
  double result = *(double *)&v14;
  *(_OWORD *)a3 = v14;
  *(void *)(a3 + 16) = v15;
  return result;
}

double sub_24481CB34@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_2447FAB34(a1, (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB69FC();
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
        long long v8 = v11;
        uint64_t v9 = v12;
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_24481CC44@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265196EF0;
      uint64_t v11 = 17576;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_244CB3CF0(a2, (void *)(a1 + 8), (uint64_t)&v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_2447F4140(a2, a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_24481CD54@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265196F08;
      uint64_t v9 = 17634;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_24484B03C(a1, a2, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

void sub_24481CE2C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4 = *(_DWORD *)(a3 + 8);
  if (v4 <= 34)
  {
    switch(v4)
    {
      case 0:
        sub_244803B80(a2, (unsigned __int8 *)a1, a4);
        return;
      case 1:
        sub_2447F0A54(a2, (unsigned char *)(a1 + 2), (void *)a4);
        return;
      case 2:
        sub_24481D0E0(a2, (char *)(a1 + 3), (void *)a4);
        return;
      case 3:
        uint64_t v7 = a1 + 4;
        goto LABEL_28;
      case 4:
        uint64_t v7 = a1 + 12;
LABEL_28:
        sub_2447F4140(a2, v7, a4);
        return;
      case 5:
        uint64_t v9 = (void *)(a1 + 24);
        goto LABEL_23;
      case 6:
        uint64_t v9 = (void *)(a1 + 32);
        goto LABEL_23;
      case 7:
        uint64_t v9 = (void *)(a1 + 40);
        goto LABEL_23;
      case 8:
        uint64_t v9 = (void *)(a1 + 48);
        goto LABEL_23;
      case 9:
        uint64_t v9 = (void *)(a1 + 56);
LABEL_23:
        sub_244CB3CF0(a2, v9, a4);
        break;
      case 10:
        long long v8 = (_DWORD *)(a1 + 64);
LABEL_25:
        sub_244CB3FB0(a2, v8, a4);
        break;
      default:
LABEL_26:
        *(_DWORD *)a4 = 0;
        *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-comm"
                              "on/app-common/zap-generated/cluster-objects.cpp";
        *(_DWORD *)(a4 + 16) = 17755;
        break;
    }
  }
  else
  {
    int v5 = v4 - 65528;
    switch(v5)
    {
      case 0:
        uint64_t v6 = a1 + 200;
        goto LABEL_4;
      case 1:
        uint64_t v6 = a1 + 280;
        goto LABEL_4;
      case 2:
        uint64_t v6 = a1 + 360;
        goto LABEL_4;
      case 3:
        uint64_t v6 = a1 + 440;
LABEL_4:
        sub_24484B03C(v6, a2, a4);
        break;
      case 4:
        long long v8 = (_DWORD *)(a1 + 520);
        goto LABEL_25;
      case 5:
        sub_244CB3F40(a2, (_WORD *)(a1 + 524), a4);
        break;
      default:
        switch(v5)
        {
          case '@':
            uint64_t v7 = a1 + 152;
            goto LABEL_28;
          case 'A':
            uint64_t v7 = a1 + 160;
            goto LABEL_28;
          case 'B':
            uint64_t v10 = a1 + 168;
            break;
          case 'C':
            uint64_t v10 = a1 + 184;
            break;
          default:
            goto LABEL_26;
        }
        sub_2447FB200(a2, v10, a4);
        break;
    }
  }
}

uint64_t sub_24481D0E0@<X0>(uint64_t a1@<X0>, char *a2@<X1>, void *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  uint64_t result = sub_2446D1AAC(a1, a2, a3);
  if (!*(_DWORD *)a3)
  {
    char v6 = *a2;
    if ((*a2 + 1) >= 0x11u) {
      char v6 = 16;
    }
    *a2 = v6;
    *(_DWORD *)a3 = 0;
    a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
    *((_DWORD *)a3 + 4) = 61;
  }
  return result;
}

double sub_24481D14C@<D0>(_DWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265196F20;
      uint64_t v9 = 17781;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3FB0(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

void sub_24481D224(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  int v7 = 0;
  a4[1] = 0;
  a4[2] = 0;
  *a4 = 0;
  sub_244CB7594(a2, a3, 21, &v7, (uint64_t)a4);
  if (!*(_DWORD *)a4)
  {
    *a4 = 0;
    a4[1] = 0;
    a4[2] = 0;
    sub_244CB694C();
    if (!*(_DWORD *)a4)
    {
      *a4 = 0;
      a4[1] = 0;
      a4[2] = 0;
      if (*(unsigned char *)(a1 + 4) == 7)
      {
        *(_DWORD *)a4 = 1415;
        a4[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
        *((_DWORD *)a4 + 4) = 75;
      }
      else
      {
        sub_244CB68B8();
        if (!*(_DWORD *)a4)
        {
          *a4 = 0;
          a4[1] = 0;
          a4[2] = 0;
          sub_244CB694C();
          if (!*(_DWORD *)a4)
          {
            *a4 = 0;
            a4[1] = 0;
            a4[2] = 0;
            sub_244CB69FC();
            if (!*(_DWORD *)a4)
            {
              *a4 = 0;
              a4[1] = 0;
              a4[2] = 0;
              sub_24481D370((unsigned char *)(a1 + 24), (uint64_t)a4);
              if (!*(_DWORD *)a4) {
                sub_244CB7708((uint64_t)a2, v7, (uint64_t)a4);
              }
            }
          }
        }
      }
    }
  }
}

void sub_24481D370(unsigned char *a1@<X2>, uint64_t a2@<X8>)
{
  if (*a1)
  {
    sub_2446F7170(a1);
    sub_244CB69FC();
  }
  else
  {
    *(_DWORD *)a2 = 0;
    *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    *(_DWORD *)(a2 + 16) = 171;
  }
}

double sub_24481D3F8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  int v6 = v16;
  if (v16 == 1)
  {
LABEL_13:
    double result = *(double *)&v14;
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 16) = v15;
  }
  else
  {
    while (1)
    {
      long long v12 = xmmword_265196F38;
      uint64_t v13 = 17820;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v14)
      {
        case 0:
          sub_244CB3FB0(a2, (_DWORD *)a1, (uint64_t)&v12);
          break;
        case 1:
          sub_2447F6AD4(a2, (unsigned char *)(a1 + 4), &v10);
          goto LABEL_10;
        case 2:
          sub_244CB3FB0(a2, (_DWORD *)(a1 + 8), (uint64_t)&v10);
          goto LABEL_10;
        case 3:
          uint64_t v7 = a2;
          long long v8 = (void *)(a1 + 16);
          goto LABEL_9;
        case 4:
          *(unsigned char *)(a1 + 24) = 1;
          *(void *)(a1 + 32) = 0;
          uint64_t v7 = a2;
          long long v8 = (void *)(a1 + 32);
LABEL_9:
          sub_244CB3CF0(v7, v8, (uint64_t)&v10);
LABEL_10:
          long long v12 = v10;
          uint64_t v13 = v11;
          break;
        default:
          break;
      }
      double result = *(double *)&v12;
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
      int v6 = v16;
      if (v16 == 1) {
        goto LABEL_13;
      }
    }
  }
  return result;
}

void sub_24481D598(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  int v7 = 0;
  a4[1] = 0;
  a4[2] = 0;
  *a4 = 0;
  sub_244CB7594(a2, a3, 21, &v7, (uint64_t)a4);
  if (!*(_DWORD *)a4)
  {
    *a4 = 0;
    a4[1] = 0;
    a4[2] = 0;
    sub_244CB694C();
    if (!*(_DWORD *)a4)
    {
      *a4 = 0;
      a4[1] = 0;
      a4[2] = 0;
      if (*(unsigned char *)(a1 + 4) == 7)
      {
        *(_DWORD *)a4 = 1415;
        a4[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
        *((_DWORD *)a4 + 4) = 75;
      }
      else
      {
        sub_244CB68B8();
        if (!*(_DWORD *)a4)
        {
          *a4 = 0;
          a4[1] = 0;
          a4[2] = 0;
          sub_244CB69FC();
          if (!*(_DWORD *)a4)
          {
            *a4 = 0;
            a4[1] = 0;
            a4[2] = 0;
            sub_24481D370((unsigned char *)(a1 + 16), (uint64_t)a4);
            if (!*(_DWORD *)a4) {
              sub_244CB7708((uint64_t)a2, v7, (uint64_t)a4);
            }
          }
        }
      }
    }
  }
}

double sub_24481D6C0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  int v6 = v16;
  if (v16 == 1)
  {
LABEL_12:
    double result = *(double *)&v14;
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 16) = v15;
  }
  else
  {
    while (1)
    {
      long long v12 = xmmword_265196F50;
      uint64_t v13 = 17874;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v14)
      {
        case 0:
          sub_244CB3FB0(a2, (_DWORD *)a1, (uint64_t)&v12);
          break;
        case 1:
          sub_2447F6AD4(a2, (unsigned char *)(a1 + 4), &v10);
          goto LABEL_9;
        case 2:
          uint64_t v7 = a2;
          long long v8 = (void *)(a1 + 8);
          goto LABEL_8;
        case 3:
          *(unsigned char *)(a1 + 16) = 1;
          *(void *)(a1 + 24) = 0;
          uint64_t v7 = a2;
          long long v8 = (void *)(a1 + 24);
LABEL_8:
          sub_244CB3CF0(v7, v8, (uint64_t)&v10);
LABEL_9:
          long long v12 = v10;
          uint64_t v13 = v11;
          break;
        default:
          break;
      }
      double result = *(double *)&v12;
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
      int v6 = v16;
      if (v16 == 1) {
        goto LABEL_12;
      }
    }
  }
  return result;
}

void sub_24481D83C(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  int v7 = 0;
  a4[1] = 0;
  a4[2] = 0;
  *a4 = 0;
  sub_244CB7594(a2, a3, 21, &v7, (uint64_t)a4);
  if (!*(_DWORD *)a4)
  {
    *a4 = 0;
    a4[1] = 0;
    a4[2] = 0;
    sub_244CB694C();
    if (!*(_DWORD *)a4)
    {
      *a4 = 0;
      a4[1] = 0;
      a4[2] = 0;
      if (a1[4] == 7)
      {
LABEL_4:
        *(_DWORD *)a4 = 1415;
        a4[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
        *((_DWORD *)a4 + 4) = 75;
        return;
      }
      sub_244CB68B8();
      if (!*(_DWORD *)a4)
      {
        *a4 = 0;
        a4[1] = 0;
        a4[2] = 0;
        if (a1[5] == 3) {
          goto LABEL_4;
        }
        sub_244CB68B8();
        if (!*(_DWORD *)a4)
        {
          *a4 = 0;
          a4[1] = 0;
          a4[2] = 0;
          sub_244CB69FC();
          if (!*(_DWORD *)a4)
          {
            *a4 = 0;
            a4[1] = 0;
            a4[2] = 0;
            sub_24481D370(a1 + 16, (uint64_t)a4);
            if (!*(_DWORD *)a4) {
              sub_244CB7708((uint64_t)a2, v7, (uint64_t)a4);
            }
          }
        }
      }
    }
  }
}

double sub_24481D994@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  int v6 = v16;
  if (v16 == 1)
  {
LABEL_13:
    double result = *(double *)&v14;
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 16) = v15;
  }
  else
  {
    while (1)
    {
      long long v12 = xmmword_265196F68;
      uint64_t v13 = 17925;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v14)
      {
        case 0:
          sub_244CB3FB0(a2, (_DWORD *)a1, (uint64_t)&v12);
          break;
        case 1:
          sub_2447F6AD4(a2, (unsigned char *)(a1 + 4), &v10);
          goto LABEL_10;
        case 2:
          sub_2447F5F24(a2, (unsigned char *)(a1 + 5), &v10);
          goto LABEL_10;
        case 4:
          uint64_t v7 = a2;
          long long v8 = (void *)(a1 + 8);
          goto LABEL_9;
        case 5:
          *(unsigned char *)(a1 + 16) = 1;
          *(void *)(a1 + 24) = 0;
          uint64_t v7 = a2;
          long long v8 = (void *)(a1 + 24);
LABEL_9:
          sub_244CB3CF0(v7, v8, (uint64_t)&v10);
LABEL_10:
          long long v12 = v10;
          uint64_t v13 = v11;
          break;
        default:
          break;
      }
      double result = *(double *)&v12;
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
      int v6 = v16;
      if (v16 == 1) {
        goto LABEL_13;
      }
    }
  }
  return result;
}

void sub_24481DB38(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  int v7 = 0;
  a4[1] = 0;
  a4[2] = 0;
  *a4 = 0;
  sub_244CB7594(a2, a3, 21, &v7, (uint64_t)a4);
  if (!*(_DWORD *)a4)
  {
    *a4 = 0;
    a4[1] = 0;
    a4[2] = 0;
    sub_2447FAB34((uint64_t)a1, (uint64_t)a4);
    if (!*(_DWORD *)a4)
    {
      *a4 = 0;
      a4[1] = 0;
      a4[2] = 0;
      if (a1[8] == 7)
      {
LABEL_4:
        *(_DWORD *)a4 = 1415;
        a4[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
        *((_DWORD *)a4 + 4) = 75;
        return;
      }
      sub_244CB68B8();
      if (!*(_DWORD *)a4)
      {
        *a4 = 0;
        a4[1] = 0;
        a4[2] = 0;
        if (a1[9] == 16) {
          goto LABEL_4;
        }
        sub_244CB68B8();
        if (!*(_DWORD *)a4)
        {
          *a4 = 0;
          a4[1] = 0;
          a4[2] = 0;
          if (a1[10] == 16) {
            goto LABEL_4;
          }
          sub_244CB68B8();
          if (!*(_DWORD *)a4) {
            sub_244CB7708((uint64_t)a2, v7, (uint64_t)a4);
          }
        }
      }
    }
  }
}

double sub_24481DC74@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  int v6 = v16;
  if (v16 == 1)
  {
LABEL_12:
    double result = *(double *)&v14;
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 16) = v15;
  }
  else
  {
    while (1)
    {
      long long v12 = xmmword_265196F80;
      uint64_t v13 = 17979;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v14)
      {
        case 0:
          sub_2447F4140(a2, a1, (uint64_t)&v12);
          break;
        case 1:
          sub_2447F6AD4(a2, (unsigned char *)(a1 + 8), &v10);
          goto LABEL_9;
        case 2:
          uint64_t v7 = a2;
          long long v8 = (char *)(a1 + 9);
          goto LABEL_8;
        case 4:
          uint64_t v7 = a2;
          long long v8 = (char *)(a1 + 10);
LABEL_8:
          sub_24481D0E0(v7, v8, &v10);
LABEL_9:
          long long v12 = v10;
          uint64_t v13 = v11;
          break;
        default:
          break;
      }
      double result = *(double *)&v12;
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
      int v6 = v16;
      if (v16 == 1) {
        goto LABEL_12;
      }
    }
  }
  return result;
}

double sub_24481DDE8@<D0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_10:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265196F98;
      uint64_t v11 = 18026;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v12)
      {
        if (sub_244CB3B68(a2) == 16)
        {
          sub_244CB40C8(a2, a1, &v8);
        }
        else
        {
          LODWORD(v8) = 43;
          *((void *)&v8 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
          LODWORD(v9) = 80;
        }
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_10;
      }
    }
  }
  return result;
}

double sub_24481DF10@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265196FB0;
      uint64_t v11 = 18067;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        *(unsigned char *)(a1 + 8) = 1;
        *(void *)(a1 + 16) = 0;
        *(void *)(a1 + 24) = 0;
        sub_244CB41F0(a2, (_OWORD *)(a1 + 16), &v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB3E8C(a2, (unsigned char *)a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

void sub_24481E02C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  switch(*(_DWORD *)(a3 + 8))
  {
    case 0xFFF8:
      a1 += 256;
      goto LABEL_3;
    case 0xFFF9:
      a1 += 336;
      goto LABEL_3;
    case 0xFFFA:
      a1 += 416;
      goto LABEL_3;
    case 0xFFFB:
      a1 += 496;
LABEL_3:
      sub_24484B03C(a1, a2, a4);
      break;
    case 0xFFFC:
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 576), a4);
      break;
    case 0xFFFD:
      sub_244CB3F40(a2, (_WORD *)(a1 + 580), a4);
      break;
    default:
      switch(*(_DWORD *)(a3 + 8))
      {
        case 0xFFF8:
          goto LABEL_3;
        case 0xFFF9:
          int v4 = (unsigned char *)(a1 + 80);
          goto LABEL_15;
        case 0xFFFA:
          a1 += 88;
          goto LABEL_3;
        case 0xFFFB:
          a1 += 168;
          goto LABEL_3;
        case 0xFFFC:
          int v4 = (unsigned char *)(a1 + 248);
LABEL_15:
          sub_244CB3E8C(a2, v4, a4);
          break;
        default:
          *(_DWORD *)a4 = 0;
          *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-co"
                                "mmon/app-common/zap-generated/cluster-objects.cpp";
          *(_DWORD *)(a4 + 16) = 18119;
          break;
      }
      break;
  }
}

void sub_24481E140(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4 = *(_DWORD *)(a3 + 8);
  switch(v4)
  {
    case 65528:
      a1 += 160;
      goto LABEL_3;
    case 65529:
      a1 += 240;
      goto LABEL_3;
    case 65530:
      a1 += 320;
      goto LABEL_3;
    case 65531:
      a1 += 400;
      goto LABEL_3;
    case 65532:
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 480), a4);
      return;
    case 65533:
      sub_244CB3F40(a2, (_WORD *)(a1 + 484), a4);
      return;
    default:
      if (v4 == 1)
      {
        a1 += 80;
LABEL_3:
        sub_24484B03C(a1, a2, a4);
        return;
      }
      if (!v4) {
        goto LABEL_3;
      }
      *(_DWORD *)a4 = 0;
      *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-common"
                            "/app-common/zap-generated/cluster-objects.cpp";
      *(_DWORD *)(a4 + 16) = 18153;
      return;
  }
}

double sub_24481E200@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265196FC8;
      uint64_t v9 = 18184;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3E8C(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_24481E2D8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265196FE0;
      uint64_t v11 = 18219;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        *(unsigned char *)(a1 + 8) = 1;
        *(void *)(a1 + 16) = 0;
        *(void *)(a1 + 24) = 0;
        sub_244CB41F0(a2, (_OWORD *)(a1 + 16), &v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB3E8C(a2, (unsigned char *)a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

void sub_24481E3F4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  switch(*(_DWORD *)(a3 + 8))
  {
    case 0xFFF8:
      a1 += 88;
      goto LABEL_3;
    case 0xFFF9:
      a1 += 168;
      goto LABEL_3;
    case 0xFFFA:
      a1 += 248;
      goto LABEL_3;
    case 0xFFFB:
      a1 += 328;
LABEL_3:
      sub_24484B03C(a1, a2, a4);
      break;
    case 0xFFFC:
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 408), a4);
      break;
    case 0xFFFD:
      sub_244CB3F40(a2, (_WORD *)(a1 + 412), a4);
      break;
    default:
      switch(*(_DWORD *)(a3 + 8))
      {
        case 0xFFF8:
          goto LABEL_3;
        case 0xFFF9:
          sub_244CB3E8C(a2, (unsigned char *)(a1 + 80), a4);
          return;
        case 0xFFFA:
          int v4 = (unsigned __int8 *)(a1 + 81);
          goto LABEL_14;
        case 0xFFFB:
          int v4 = (unsigned __int8 *)(a1 + 83);
LABEL_14:
          sub_2447F15BC(a2, v4, a4);
          break;
        default:
          *(_DWORD *)a4 = 0;
          *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-co"
                                "mmon/app-common/zap-generated/cluster-objects.cpp";
          *(_DWORD *)(a4 + 16) = 18266;
          break;
      }
      break;
  }
}

double sub_24481E504@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265196FF8;
      uint64_t v9 = 18297;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3E8C(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_24481E5DC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265197010;
      uint64_t v11 = 18332;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        *(unsigned char *)(a1 + 8) = 1;
        *(void *)(a1 + 16) = 0;
        *(void *)(a1 + 24) = 0;
        sub_244CB41F0(a2, (_OWORD *)(a1 + 16), &v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB3E8C(a2, (unsigned char *)a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

void sub_24481E6F8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  switch(*(_DWORD *)(a3 + 8))
  {
    case 0xFFF8:
      a1 += 88;
      goto LABEL_3;
    case 0xFFF9:
      a1 += 168;
      goto LABEL_3;
    case 0xFFFA:
      a1 += 248;
      goto LABEL_3;
    case 0xFFFB:
      a1 += 328;
LABEL_3:
      sub_24484B03C(a1, a2, a4);
      break;
    case 0xFFFC:
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 408), a4);
      break;
    case 0xFFFD:
      sub_244CB3F40(a2, (_WORD *)(a1 + 412), a4);
      break;
    default:
      switch(*(_DWORD *)(a3 + 8))
      {
        case 0xFFF8:
          goto LABEL_3;
        case 0xFFF9:
          sub_244CB3E8C(a2, (unsigned char *)(a1 + 80), a4);
          return;
        case 0xFFFA:
          int v4 = (unsigned __int8 *)(a1 + 81);
          goto LABEL_14;
        case 0xFFFB:
          int v4 = (unsigned __int8 *)(a1 + 83);
LABEL_14:
          sub_2447F15BC(a2, v4, a4);
          break;
        default:
          *(_DWORD *)a4 = 0;
          *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-co"
                                "mmon/app-common/zap-generated/cluster-objects.cpp";
          *(_DWORD *)(a4 + 16) = 18379;
          break;
      }
      break;
  }
}

double sub_24481E808@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265197028;
      uint64_t v9 = 18410;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3E8C(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_24481E8E0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265197040;
      uint64_t v11 = 18445;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        *(unsigned char *)(a1 + 8) = 1;
        *(void *)(a1 + 16) = 0;
        *(void *)(a1 + 24) = 0;
        sub_244CB41F0(a2, (_OWORD *)(a1 + 16), &v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB3E8C(a2, (unsigned char *)a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

void sub_24481E9FC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  switch(*(_DWORD *)(a3 + 8))
  {
    case 0xFFF8:
      a1 += 88;
      goto LABEL_3;
    case 0xFFF9:
      a1 += 168;
      goto LABEL_3;
    case 0xFFFA:
      a1 += 248;
      goto LABEL_3;
    case 0xFFFB:
      a1 += 328;
LABEL_3:
      sub_24484B03C(a1, a2, a4);
      break;
    case 0xFFFC:
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 408), a4);
      break;
    case 0xFFFD:
      sub_244CB3F40(a2, (_WORD *)(a1 + 412), a4);
      break;
    default:
      switch(*(_DWORD *)(a3 + 8))
      {
        case 0xFFF8:
          goto LABEL_3;
        case 0xFFF9:
          sub_244CB3E8C(a2, (unsigned char *)(a1 + 80), a4);
          return;
        case 0xFFFA:
          int v4 = (unsigned __int8 *)(a1 + 81);
          goto LABEL_14;
        case 0xFFFB:
          int v4 = (unsigned __int8 *)(a1 + 83);
LABEL_14:
          sub_2447F15BC(a2, v4, a4);
          break;
        default:
          *(_DWORD *)a4 = 0;
          *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-co"
                                "mmon/app-common/zap-generated/cluster-objects.cpp";
          *(_DWORD *)(a4 + 16) = 18492;
          break;
      }
      break;
  }
}

double sub_24481EB0C@<D0>(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  sub_2447F4DC8((uint64_t)&v7, 0, a1);
  if (!v8)
  {
    sub_244CB6904();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
      long long v8 = v11;
      uint64_t v9 = v12;
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_24481EC00@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265197058;
      uint64_t v11 = 18523;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_244CB3F40(a2, (_WORD *)(a1 + 2), (uint64_t)&v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_2447F503C(a2, (unsigned char *)a1, &v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_24481ED10@<D0>(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  sub_24481EE04((uint64_t)&v7, 0, a1);
  if (!v8)
  {
    sub_244CB6904();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
      long long v8 = v11;
      uint64_t v9 = v12;
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_24481EE04(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  uint64_t v3 = a1 + 8;
  if (!*(_DWORD *)(a1 + 8))
  {
    if (*a3 == 9)
    {
      LODWORD(v5) = 1415;
      *((void *)&v5 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
      LODWORD(v6) = 75;
    }
    else
    {
      sub_244CB68B8();
    }
    double result = *(double *)&v5;
    *(_OWORD *)uint64_t v3 = v5;
    *(void *)(v3 + 16) = v6;
  }
  return result;
}

double sub_24481EE80@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265197070;
      uint64_t v11 = 18564;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_244CB3F40(a2, (_WORD *)(a1 + 2), (uint64_t)&v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_2447FA994(a2, (unsigned char *)a1, &v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_24481EF90@<D0>(unsigned char *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_24480248C(a2, a1, (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
      long long v8 = v11;
      uint64_t v9 = v12;
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_24481F074@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265197088;
      uint64_t v9 = 18606;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_2447F978C(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_24481F14C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_2651970A0;
      uint64_t v9 = 18640;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_2447F978C(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_24481F224@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB6904();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_24480248C(a2, (unsigned char *)(a1 + 8), (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
        long long v8 = v11;
        uint64_t v9 = v12;
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_24481F334@<D0>(_WORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_2651970B8;
      uint64_t v11 = 18675;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_2447F978C(a2, (uint64_t)(a1 + 4), (uint64_t)&v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB3F40(a2, a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_24481F444@<D0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  sub_244CB7594(a1, a2, 21, &v8, (uint64_t)&v9);
  long long v6 = v9;
  uint64_t v7 = v10;
  if (!v9)
  {
    sub_244CB68B8();
    uint64_t v7 = v10;
    long long v6 = v9;
    if (!v9)
    {
      sub_244CB6904();
      uint64_t v7 = v10;
      long long v6 = v9;
      if (!v9)
      {
        sub_244CB68B8();
        uint64_t v7 = v10;
        long long v6 = v9;
        if (!v9)
        {
          sub_244CB68B8();
          uint64_t v7 = v10;
          long long v6 = v9;
          if (!v9)
          {
            sub_244CB68B8();
            uint64_t v7 = v10;
            long long v6 = v9;
            if (!v9)
            {
              sub_244CB68B8();
              uint64_t v7 = v10;
              long long v6 = v9;
              if (!v9)
              {
                sub_244CB68B8();
                uint64_t v7 = v10;
                long long v6 = v9;
                if (!v9)
                {
                  sub_244CB7708((uint64_t)a1, v8, (uint64_t)&v9);
                  long long v6 = v9;
                  uint64_t v7 = v10;
                }
              }
            }
          }
        }
      }
    }
  }
  double result = *(double *)&v6;
  *(_OWORD *)a3 = v6;
  *(void *)(a3 + 16) = v7;
  return result;
}

double sub_24481F630@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  int v6 = v16;
  if (v16 == 1)
  {
LABEL_15:
    double result = *(double *)&v14;
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 16) = v15;
  }
  else
  {
    while (1)
    {
      long long v12 = xmmword_2651970D0;
      uint64_t v13 = 18719;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v14)
      {
        case 0:
          sub_244CB3E8C(a2, (unsigned char *)a1, (uint64_t)&v12);
          break;
        case 1:
          sub_244CB3F40(a2, (_WORD *)(a1 + 2), (uint64_t)&v10);
          goto LABEL_12;
        case 2:
          sub_24484B184(a2, (unsigned char *)(a1 + 4), &v10);
          goto LABEL_12;
        case 3:
          uint64_t v7 = a2;
          int v8 = (unsigned char *)(a1 + 5);
          goto LABEL_11;
        case 4:
          uint64_t v7 = a2;
          int v8 = (unsigned char *)(a1 + 6);
          goto LABEL_11;
        case 5:
          uint64_t v7 = a2;
          int v8 = (unsigned char *)(a1 + 7);
          goto LABEL_11;
        case 6:
          uint64_t v7 = a2;
          int v8 = (unsigned char *)(a1 + 8);
LABEL_11:
          sub_244CB3E8C(v7, v8, (uint64_t)&v10);
LABEL_12:
          long long v12 = v10;
          uint64_t v13 = v11;
          break;
        default:
          break;
      }
      double result = *(double *)&v12;
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
      int v6 = v16;
      if (v16 == 1) {
        goto LABEL_15;
      }
    }
  }
  return result;
}

double sub_24481F7F4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_2651970E8;
      uint64_t v11 = 18778;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_244CB3F40(a2, (_WORD *)(a1 + 2), (uint64_t)&v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB3E8C(a2, (unsigned char *)a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_24481F904@<D0>(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB68B8();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB6904();
      long long v8 = v11;
      uint64_t v9 = v12;
    }
  }
  sub_2447EF794((uint64_t)&v7, 2, a1 + 4);
  if (!v8)
  {
    sub_244813DC0(a1 + 5, (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244813DC0(a1 + 7, (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244813DC0(a1 + 9, (uint64_t)&v11);
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_244813DC0(a1 + 11, (uint64_t)&v11);
          uint64_t v9 = v12;
          long long v8 = v11;
          if (!v11)
          {
            sub_244813DC0(a1 + 13, (uint64_t)&v11);
            uint64_t v9 = v12;
            long long v8 = v11;
            if (!v11)
            {
              sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
              long long v8 = v11;
              uint64_t v9 = v12;
            }
          }
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_24481FB00@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  int v6 = v16;
  if (v16 == 1)
  {
LABEL_16:
    double result = *(double *)&v14;
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 16) = v15;
  }
  else
  {
    while (1)
    {
      long long v12 = xmmword_265197100;
      uint64_t v13 = 18823;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v14)
      {
        case 0:
          sub_244CB3E8C(a2, (unsigned char *)a1, (uint64_t)&v12);
          break;
        case 1:
          sub_244CB3F40(a2, (_WORD *)(a1 + 2), (uint64_t)&v10);
          goto LABEL_13;
        case 2:
          sub_24481FCFC(a2, (char *)(a1 + 4), &v10);
          goto LABEL_13;
        case 3:
          *(_WORD *)(a1 + 5) = 1;
          sub_24484B184(a2, (unsigned char *)(a1 + 6), &v10);
          goto LABEL_13;
        case 4:
          *(_WORD *)(a1 + 7) = 1;
          uint64_t v7 = a2;
          long long v8 = (unsigned char *)(a1 + 8);
          goto LABEL_12;
        case 5:
          *(_WORD *)(a1 + 9) = 1;
          uint64_t v7 = a2;
          long long v8 = (unsigned char *)(a1 + 10);
          goto LABEL_12;
        case 6:
          *(_WORD *)(a1 + 11) = 1;
          uint64_t v7 = a2;
          long long v8 = (unsigned char *)(a1 + 12);
          goto LABEL_12;
        case 7:
          *(_WORD *)(a1 + 13) = 1;
          uint64_t v7 = a2;
          long long v8 = (unsigned char *)(a1 + 14);
LABEL_12:
          sub_244CB3E8C(v7, v8, (uint64_t)&v10);
LABEL_13:
          long long v12 = v10;
          uint64_t v13 = v11;
          break;
        default:
          break;
      }
      double result = *(double *)&v12;
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
      int v6 = v16;
      if (v16 == 1) {
        goto LABEL_16;
      }
    }
  }
  return result;
}

uint64_t sub_24481FCFC@<X0>(uint64_t a1@<X0>, char *a2@<X1>, void *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  uint64_t result = sub_2446D1AAC(a1, a2, a3);
  if (!*(_DWORD *)a3)
  {
    unsigned int v6 = *a2;
    if (v6 - 133 > 6 || ((1 << (v6 + 123)) & 0x51) == 0) {
      char v8 = 4;
    }
    else {
      char v8 = *a2;
    }
    if (v6 >= 4) {
      LOBYTE(v6) = v8;
    }
    *a2 = v6;
    *(_DWORD *)a3 = 0;
    a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
    *((_DWORD *)a3 + 4) = 61;
  }
  return result;
}

double sub_24481FD80@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265197118;
      uint64_t v11 = 18886;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_244CB3F40(a2, (_WORD *)(a1 + 2), (uint64_t)&v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB3E8C(a2, (unsigned char *)a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_24481FE90@<D0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  sub_244CB7594(a1, a2, 21, &v8, (uint64_t)&v9);
  long long v6 = v9;
  uint64_t v7 = v10;
  if (!v9)
  {
    sub_244CB68B8();
    uint64_t v7 = v10;
    long long v6 = v9;
    if (!v9)
    {
      sub_244CB6904();
      uint64_t v7 = v10;
      long long v6 = v9;
      if (!v9)
      {
        sub_244CB694C();
        uint64_t v7 = v10;
        long long v6 = v9;
        if (!v9)
        {
          sub_244CB694C();
          uint64_t v7 = v10;
          long long v6 = v9;
          if (!v9)
          {
            sub_244CB7708((uint64_t)a1, v8, (uint64_t)&v9);
            long long v6 = v9;
            uint64_t v7 = v10;
          }
        }
      }
    }
  }
  double result = *(double *)&v6;
  *(_OWORD *)a3 = v6;
  *(void *)(a3 + 16) = v7;
  return result;
}

double sub_24481FFF8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  int v6 = v16;
  if (v16 == 1)
  {
LABEL_12:
    double result = *(double *)&v14;
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 16) = v15;
  }
  else
  {
    while (1)
    {
      long long v12 = xmmword_265197130;
      uint64_t v13 = 18927;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v14)
      {
        case 0:
          sub_244CB3E8C(a2, (unsigned char *)a1, (uint64_t)&v12);
          break;
        case 1:
          sub_244CB3F40(a2, (_WORD *)(a1 + 2), (uint64_t)&v10);
          goto LABEL_9;
        case 2:
          uint64_t v7 = a2;
          int v8 = (_DWORD *)(a1 + 4);
          goto LABEL_8;
        case 3:
          uint64_t v7 = a2;
          int v8 = (_DWORD *)(a1 + 8);
LABEL_8:
          sub_244CB3FB0(v7, v8, (uint64_t)&v10);
LABEL_9:
          long long v12 = v10;
          uint64_t v13 = v11;
          break;
        default:
          break;
      }
      double result = *(double *)&v12;
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
      int v6 = v16;
      if (v16 == 1) {
        goto LABEL_12;
      }
    }
  }
  return result;
}

double sub_244820168@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265197148;
      uint64_t v11 = 18974;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_244CB3F40(a2, (_WORD *)(a1 + 2), (uint64_t)&v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB3E8C(a2, (unsigned char *)a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_244820278@<D0>(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB68B8();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB6904();
      long long v8 = v11;
      uint64_t v9 = v12;
    }
  }
  sub_2447EF794((uint64_t)&v7, 2, a1 + 4);
  if (!v8)
  {
    sub_24483F918(a1 + 8, (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_24483F918(a1 + 16, (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
        long long v8 = v11;
        uint64_t v9 = v12;
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2448203F0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  int v6 = v16;
  if (v16 == 1)
  {
LABEL_13:
    double result = *(double *)&v14;
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 16) = v15;
  }
  else
  {
    while (1)
    {
      long long v12 = xmmword_265197160;
      uint64_t v13 = 19016;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v14)
      {
        case 0:
          sub_244CB3E8C(a2, (unsigned char *)a1, (uint64_t)&v12);
          break;
        case 1:
          sub_244CB3F40(a2, (_WORD *)(a1 + 2), (uint64_t)&v10);
          goto LABEL_10;
        case 2:
          sub_24481FCFC(a2, (char *)(a1 + 4), &v10);
          goto LABEL_10;
        case 3:
          *(unsigned char *)(a1 + 8) = 1;
          *(_DWORD *)(a1 + 12) = 0;
          uint64_t v7 = a2;
          long long v8 = (_DWORD *)(a1 + 12);
          goto LABEL_9;
        case 4:
          *(unsigned char *)(a1 + 16) = 1;
          *(_DWORD *)(a1 + 20) = 0;
          uint64_t v7 = a2;
          long long v8 = (_DWORD *)(a1 + 20);
LABEL_9:
          sub_244CB3FB0(v7, v8, (uint64_t)&v10);
LABEL_10:
          long long v12 = v10;
          uint64_t v13 = v11;
          break;
        default:
          break;
      }
      double result = *(double *)&v12;
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
      int v6 = v16;
      if (v16 == 1) {
        goto LABEL_13;
      }
    }
  }
  return result;
}

double sub_244820598@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265197178;
      uint64_t v11 = 19067;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_244CB3F40(a2, (_WORD *)(a1 + 2), (uint64_t)&v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB3E8C(a2, (unsigned char *)a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_2448206A8@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB68B8();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB694C();
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB694C();
        long long v8 = v11;
        uint64_t v9 = v12;
      }
    }
  }
  sub_244800450((uint64_t)&v7, 3, (unsigned char *)(a1 + 12));
  if (!v8)
  {
    sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2448207F4@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  int v6 = v16;
  if (v16 == 1)
  {
LABEL_12:
    double result = *(double *)&v14;
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 16) = v15;
  }
  else
  {
    while (1)
    {
      long long v12 = xmmword_265197190;
      uint64_t v13 = 19108;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v14)
      {
        case 0:
          sub_244CB3E8C(a2, a1, (uint64_t)&v12);
          break;
        case 1:
          uint64_t v7 = a2;
          long long v8 = a1 + 4;
          goto LABEL_7;
        case 2:
          uint64_t v7 = a2;
          long long v8 = a1 + 8;
LABEL_7:
          sub_244CB3FB0(v7, v8, (uint64_t)&v10);
          goto LABEL_9;
        case 3:
          sub_2447FACE4(a2, a1 + 12, &v10);
LABEL_9:
          long long v12 = v10;
          uint64_t v13 = v11;
          break;
        default:
          break;
      }
      double result = *(double *)&v12;
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
      int v6 = v16;
      if (v16 == 1) {
        goto LABEL_12;
      }
    }
  }
  return result;
}

double sub_244820964@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_2651971A8;
      uint64_t v9 = 19154;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3E8C(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_244820A3C@<D0>(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB68B8();
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  sub_2447EF794((uint64_t)&v7, 1, a1 + 1);
  if (!v8)
  {
    sub_24483F918(a1 + 4, (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_24483F918(a1 + 12, (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_24484CB04(a1 + 20, (uint64_t)&v11);
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
          long long v8 = v11;
          uint64_t v9 = v12;
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244820BB4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  int v6 = v16;
  if (v16 == 1)
  {
LABEL_13:
    double result = *(double *)&v14;
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 16) = v15;
  }
  else
  {
    while (1)
    {
      long long v12 = xmmword_2651971C0;
      uint64_t v13 = 19192;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v14)
      {
        case 0:
          sub_244CB3E8C(a2, (unsigned char *)a1, (uint64_t)&v12);
          break;
        case 1:
          sub_24481FCFC(a2, (char *)(a1 + 1), &v10);
          goto LABEL_10;
        case 2:
          *(unsigned char *)(a1 + 4) = 1;
          *(_DWORD *)(a1 + 8) = 0;
          uint64_t v7 = a2;
          long long v8 = (_DWORD *)(a1 + 8);
          goto LABEL_8;
        case 3:
          *(unsigned char *)(a1 + 12) = 1;
          *(_DWORD *)(a1 + 16) = 0;
          uint64_t v7 = a2;
          long long v8 = (_DWORD *)(a1 + 16);
LABEL_8:
          sub_244CB3FB0(v7, v8, (uint64_t)&v10);
          goto LABEL_10;
        case 4:
          *(_WORD *)(a1 + 20) = 1;
          sub_2447FACE4(a2, (unsigned char *)(a1 + 21), &v10);
LABEL_10:
          long long v12 = v10;
          uint64_t v13 = v11;
          break;
        default:
          break;
      }
      double result = *(double *)&v12;
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
      int v6 = v16;
      if (v16 == 1) {
        goto LABEL_13;
      }
    }
  }
  return result;
}

double sub_244820D60@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_2651971D8;
      uint64_t v9 = 19242;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3E8C(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_244820E38@<D0>(unsigned __int8 *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  sub_2447F06A4((uint64_t)&v7, 0, a1);
  if (!v8)
  {
    sub_244CB6904();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_24484BC80(v7, (uint64_t)(a1 + 8), (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_2447FAB34((uint64_t)(a1 + 32), (uint64_t)&v11);
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_24484CBB0(a1 + 40, (uint64_t)&v11);
          uint64_t v9 = v12;
          long long v8 = v11;
          if (!v11)
          {
            sub_24484CC10(a1 + 42, (uint64_t)&v11);
            uint64_t v9 = v12;
            long long v8 = v11;
            if (!v11)
            {
              sub_24484B288(a1 + 44, (uint64_t)&v11);
              uint64_t v9 = v12;
              long long v8 = v11;
              if (!v11)
              {
                sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
                long long v8 = v11;
                uint64_t v9 = v12;
              }
            }
          }
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244821008@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_14:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_2651971F0;
      uint64_t v11 = 19282;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v12)
      {
        case 0:
          sub_2447F5F24(a2, (unsigned char *)a1, &v10);
          break;
        case 1:
          sub_244CB3F40(a2, (_WORD *)(a1 + 2), (uint64_t)&v8);
          goto LABEL_11;
        case 2:
          sub_244803C58(a2, a1 + 8, &v8);
          goto LABEL_11;
        case 3:
          sub_2447F4140(a2, a1 + 32, (uint64_t)&v8);
          goto LABEL_11;
        case 4:
          sub_2448211D8(a2, (unsigned __int8 *)(a1 + 40), (uint64_t)&v8);
          goto LABEL_11;
        case 5:
          sub_2448048C0(a2, (unsigned __int8 *)(a1 + 42), (uint64_t)&v8);
          goto LABEL_11;
        case 6:
          sub_2447F21B8(a2, (unsigned __int8 *)(a1 + 44), (uint64_t)&v8);
LABEL_11:
          long long v10 = v8;
          uint64_t v11 = v9;
          break;
        default:
          break;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_14;
      }
    }
  }
  return result;
}

uint64_t sub_2448211D8@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = sub_244CB3B68(a1);
  if (result == 20)
  {
    if (a2[1]) {
      a2[1] = 0;
    }
    *(_DWORD *)a3 = 0;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
    int v7 = 168;
LABEL_5:
    *(_DWORD *)(a3 + 16) = v7;
    return result;
  }
  *(void *)a3 = 0;
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  *(_WORD *)a2 = 256;
  uint64_t result = sub_24482A24C(a1, a2, (void *)a3);
  if (!*(_DWORD *)a3)
  {
    if (!a2[1]) {
      sub_24479484C();
    }
    if (*a2 == 255)
    {
      *(_DWORD *)a3 = 1415;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
      int v7 = 175;
    }
    else
    {
      *(_DWORD *)a3 = 0;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
      int v7 = 177;
    }
    goto LABEL_5;
  }
  return result;
}

double sub_2448212B0@<D0>(_WORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265197208;
      uint64_t v9 = 19340;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3F40(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_244821388@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB6904();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_24484BC80(a2, a1 + 8, (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_2447FAB34(a1 + 32, (uint64_t)&v11);
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_24484CBB0((unsigned __int8 *)(a1 + 40), (uint64_t)&v11);
          uint64_t v9 = v12;
          long long v8 = v11;
          if (!v11)
          {
            sub_24484CC10((unsigned __int8 *)(a1 + 42), (uint64_t)&v11);
            uint64_t v9 = v12;
            long long v8 = v11;
            if (!v11)
            {
              sub_24484B288((unsigned __int8 *)(a1 + 44), (uint64_t)&v11);
              uint64_t v9 = v12;
              long long v8 = v11;
              if (!v11)
              {
                sub_24484CC70(a2, 6, a1 + 48, &v11);
                uint64_t v9 = v12;
                long long v8 = v11;
                if (!v11)
                {
                  sub_2447FB010((unsigned __int8 *)(a1 + 72), (uint64_t)&v11);
                  uint64_t v9 = v12;
                  long long v8 = v11;
                  if (!v11)
                  {
                    sub_2447FB010((unsigned __int8 *)(a1 + 74), (uint64_t)&v11);
                    uint64_t v9 = v12;
                    long long v8 = v11;
                    if (!v11)
                    {
                      sub_2447F5C00((unsigned __int16 *)(a1 + 76), (uint64_t)&v11);
                      uint64_t v9 = v12;
                      long long v8 = v11;
                      if (!v11)
                      {
                        sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
                        long long v8 = v11;
                        uint64_t v9 = v12;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2448215F8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  int v6 = v16;
  if (v16 == 1)
  {
LABEL_18:
    double result = *(double *)&v14;
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 16) = v15;
  }
  else
  {
    while (1)
    {
      long long v12 = xmmword_265197220;
      uint64_t v13 = 19383;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v14)
      {
        case 0:
          sub_244CB3F40(a2, (_WORD *)a1, (uint64_t)&v12);
          break;
        case 1:
          sub_244803C58(a2, a1 + 8, &v10);
          goto LABEL_15;
        case 2:
          sub_2447F4140(a2, a1 + 32, (uint64_t)&v10);
          goto LABEL_15;
        case 3:
          sub_2448211D8(a2, (unsigned __int8 *)(a1 + 40), (uint64_t)&v10);
          goto LABEL_15;
        case 4:
          sub_2448048C0(a2, (unsigned __int8 *)(a1 + 42), (uint64_t)&v10);
          goto LABEL_15;
        case 5:
          sub_2447F21B8(a2, (unsigned __int8 *)(a1 + 44), (uint64_t)&v10);
          goto LABEL_15;
        case 6:
          sub_2447F50A0(a2, a1 + 48, &v10);
          goto LABEL_15;
        case 7:
          uint64_t v7 = a2;
          long long v8 = (unsigned __int8 *)(a1 + 136);
          goto LABEL_13;
        case 8:
          uint64_t v7 = a2;
          long long v8 = (unsigned __int8 *)(a1 + 138);
LABEL_13:
          sub_2447F15BC(v7, v8, (uint64_t)&v10);
          goto LABEL_15;
        case 9:
          sub_2447EF9E0(a2, (__int16 *)(a1 + 140), (uint64_t)&v10);
LABEL_15:
          long long v12 = v10;
          uint64_t v13 = v11;
          break;
        default:
          break;
      }
      double result = *(double *)&v12;
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
      int v6 = v16;
      if (v16 == 1) {
        goto LABEL_18;
      }
    }
  }
  return result;
}

double sub_244821820@<D0>(_WORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265197238;
      uint64_t v9 = 19453;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3F40(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_2448218F8@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  sub_2447F06A4((uint64_t)&v7, 0, (unsigned char *)a1);
  if (!v8)
  {
    sub_24481ED10((unsigned char *)(a1 + 2), v7, 1, (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB6ADC(v7, *(char **)(a1 + 8), *(void *)(a1 + 16), (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_2447F5C00((unsigned __int16 *)(a1 + 24), (uint64_t)&v11);
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_24484CBB0((unsigned __int8 *)(a1 + 28), (uint64_t)&v11);
          uint64_t v9 = v12;
          long long v8 = v11;
          if (!v11)
          {
            sub_24484CC10((unsigned __int8 *)(a1 + 30), (uint64_t)&v11);
            uint64_t v9 = v12;
            long long v8 = v11;
            if (!v11)
            {
              sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
              long long v8 = v11;
              uint64_t v9 = v12;
            }
          }
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244821A9C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_15:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265197250;
      uint64_t v11 = 19492;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v12)
      {
        case 0:
          sub_2447F5F24(a2, (unsigned char *)a1, &v10);
          break;
        case 1:
          sub_24481EE80(a1 + 2, a2, (uint64_t)&v8);
          goto LABEL_12;
        case 2:
          if (sub_244CB3B68(a2) == 16)
          {
            sub_244CB40C8(a2, (_OWORD *)(a1 + 8), &v8);
          }
          else
          {
            LODWORD(v8) = 43;
            *((void *)&v8 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
            LODWORD(v9) = 80;
          }
          goto LABEL_12;
        case 3:
          sub_2447EF9E0(a2, (__int16 *)(a1 + 24), (uint64_t)&v8);
          goto LABEL_12;
        case 4:
          sub_2448211D8(a2, (unsigned __int8 *)(a1 + 28), (uint64_t)&v8);
          goto LABEL_12;
        case 5:
          sub_2448048C0(a2, (unsigned __int8 *)(a1 + 30), (uint64_t)&v8);
LABEL_12:
          long long v10 = v8;
          uint64_t v11 = v9;
          break;
        default:
          break;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_15;
      }
    }
  }
  return result;
}

double sub_244821C80@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  sub_2447EF794((uint64_t)&v7, 0, (unsigned char *)a1);
  if (!v8)
  {
    sub_2447F5C00((unsigned __int16 *)(a1 + 2), (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_2447F5C00((unsigned __int16 *)(a1 + 6), (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
        long long v8 = v11;
        uint64_t v9 = v12;
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244821DA0@<D0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  for (int i = v16; v16 != 1; int i = v16)
  {
    long long v12 = xmmword_265197268;
    uint64_t v13 = 19548;
    if (i) {
      sub_24484AFEC();
    }
    if (v14 == 2)
    {
      uint64_t v7 = a2;
      long long v8 = (__int16 *)(a1 + 6);
    }
    else
    {
      if (v14 != 1)
      {
        if (!(_BYTE)v14) {
          sub_24481FCFC(a2, a1, &v12);
        }
        goto LABEL_10;
      }
      uint64_t v7 = a2;
      long long v8 = (__int16 *)(a1 + 2);
    }
    sub_2447EF9E0(v7, v8, (uint64_t)&v10);
    long long v12 = v10;
    uint64_t v13 = v11;
LABEL_10:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
    if (*(_DWORD *)a3) {
      return result;
    }
    sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  }
  double result = *(double *)&v14;
  *(_OWORD *)a3 = v14;
  *(void *)(a3 + 16) = v15;
  return result;
}

double sub_244821ECC@<D0>(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_24481ED10(a1, a2, 0, (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
      long long v8 = v11;
      uint64_t v9 = v12;
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244821FB0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265197280;
      uint64_t v9 = 19590;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_24481EE80(a1, a2, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_244822088@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB65C8();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_2447F5C00((unsigned __int16 *)(a1 + 2), (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_2447FB010((unsigned __int8 *)(a1 + 6), (uint64_t)&v11);
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_2447FB010((unsigned __int8 *)(a1 + 8), (uint64_t)&v11);
          uint64_t v9 = v12;
          long long v8 = v11;
          if (!v11)
          {
            sub_2447F5C00((unsigned __int16 *)(a1 + 10), (uint64_t)&v11);
            uint64_t v9 = v12;
            long long v8 = v11;
            if (!v11)
            {
              sub_24484B864(a2, (unsigned char *)(a1 + 16), (uint64_t)&v11);
              uint64_t v9 = v12;
              long long v8 = v11;
              if (!v11)
              {
                sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
                long long v8 = v11;
                uint64_t v9 = v12;
              }
            }
          }
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244822248@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v19[0] = 0;
  uint64_t v20 = a2;
  sub_2447ED6F8((uint64_t)v19, (uint64_t)&v16);
  int v6 = v18;
  if (v18 == 1)
  {
LABEL_15:
    double result = *(double *)&v16;
    *(_OWORD *)a3 = v16;
    *(void *)(a3 + 16) = v17;
  }
  else
  {
    while (1)
    {
      long long v14 = xmmword_265197298;
      uint64_t v15 = 19629;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v16)
      {
        case 0:
          sub_244CB3C0C(a2, (char *)a1, (uint64_t)&v14);
          break;
        case 1:
          uint64_t v7 = a2;
          long long v8 = (__int16 *)(a1 + 2);
          goto LABEL_10;
        case 2:
          uint64_t v9 = a2;
          int v10 = (unsigned __int8 *)(a1 + 6);
          goto LABEL_8;
        case 3:
          uint64_t v9 = a2;
          int v10 = (unsigned __int8 *)(a1 + 8);
LABEL_8:
          sub_2447F15BC(v9, v10, (uint64_t)&v12);
          goto LABEL_12;
        case 4:
          uint64_t v7 = a2;
          long long v8 = (__int16 *)(a1 + 10);
LABEL_10:
          sub_2447EF9E0(v7, v8, (uint64_t)&v12);
          goto LABEL_12;
        case 5:
          *(unsigned char *)(a1 + 16) = 1;
          *(void *)(a1 + 32) = 0;
          *(void *)(a1 + 40) = 0;
          *(void *)(a1 + 24) = 0;
          sub_2447FFFFC(a2, a1 + 24, &v12);
LABEL_12:
          long long v14 = v12;
          uint64_t v15 = v13;
          break;
        default:
          break;
      }
      double result = *(double *)&v14;
      *(_OWORD *)a3 = v14;
      *(void *)(a3 + 16) = v15;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v19, (uint64_t)&v16);
      int v6 = v18;
      if (v18 == 1) {
        goto LABEL_15;
      }
    }
  }
  return result;
}

double sub_244822404@<D0>(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_24484CD74(a2, 0, a1, (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
      long long v8 = v11;
      uint64_t v9 = v12;
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2448224E8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_2651972B0;
      uint64_t v9 = 19683;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_2448225C0(a2, a1, &v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

void sub_2448225C0(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if (sub_244CB3B68(a1) == 20)
  {
    if (*(unsigned char *)(a2 + 4)) {
      *(unsigned char *)(a2 + 4) = 0;
    }
    int v6 = 168;
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
    *(_DWORD *)a2 = 0;
    *(unsigned char *)(a2 + 4) = 1;
    sub_24481EE80(a2, a1, (uint64_t)a3);
    if (*(_DWORD *)a3) {
      return;
    }
    int v6 = 177;
  }
  *(_DWORD *)a3 = 0;
  a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
  *((_DWORD *)a3 + 4) = v6;
}

double sub_244822654@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_2651972C8;
      uint64_t v9 = 19717;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_2447F978C(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_24482272C@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB6ADC(a2, *(char **)a1, *(void *)(a1 + 8), (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB6ADC(a2, *(char **)(a1 + 16), *(void *)(a1 + 24), (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB6ADC(a2, *(char **)(a1 + 32), *(void *)(a1 + 40), (uint64_t)&v11);
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_24480248C(a2, (unsigned char *)(a1 + 48), (uint64_t)&v11);
          uint64_t v9 = v12;
          long long v8 = v11;
          if (!v11)
          {
            sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
            long long v8 = v11;
            uint64_t v9 = v12;
          }
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244822894@<D0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  int v6 = v16;
  if (v16 != 1)
  {
    while (2)
    {
      long long v12 = xmmword_2651972E0;
      uint64_t v13 = 19754;
      if (!v6)
      {
        switch((char)v14)
        {
          case 0:
            if (sub_244CB3B68(a2) != 16) {
              goto LABEL_11;
            }
            uint64_t v7 = a2;
            long long v8 = a1;
            goto LABEL_10;
          case 1:
            if (sub_244CB3B68(a2) != 16) {
              goto LABEL_11;
            }
            uint64_t v7 = a2;
            long long v8 = a1 + 1;
            goto LABEL_10;
          case 2:
            if (sub_244CB3B68(a2) == 16)
            {
              uint64_t v7 = a2;
              long long v8 = a1 + 2;
LABEL_10:
              sub_244CB40C8(v7, v8, &v10);
            }
            else
            {
LABEL_11:
              LODWORD(v10) = 43;
              *((void *)&v10 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
              LODWORD(v11) = 80;
            }
            long long v12 = v10;
            uint64_t v13 = v11;
LABEL_14:
            double result = *(double *)&v12;
            *(_OWORD *)a3 = v12;
            *(void *)(a3 + 16) = v13;
            if (*(_DWORD *)a3) {
              return result;
            }
            sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
            int v6 = v16;
            if (v16 == 1) {
              goto LABEL_16;
            }
            continue;
          case 3:
            sub_2447F978C(a2, (uint64_t)(a1 + 3), (uint64_t)&v12);
            goto LABEL_14;
          default:
            goto LABEL_14;
        }
      }
      break;
    }
    sub_24484AFEC();
  }
LABEL_16:
  double result = *(double *)&v14;
  *(_OWORD *)a3 = v14;
  *(void *)(a3 + 16) = v15;
  return result;
}

double sub_244822A58@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  sub_2447F06A4((uint64_t)&v7, 0, (unsigned char *)a1);
  if (!v8)
  {
    sub_24481EB0C((unsigned char *)(a1 + 2), v7, 1, (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB6ADC(v7, *(char **)(a1 + 8), *(void *)(a1 + 16), (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB6904();
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
          long long v8 = v11;
          uint64_t v9 = v12;
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244822BA4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_13:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_2651972F8;
      uint64_t v11 = 19823;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v12)
      {
        case 0:
          sub_2447F5F24(a2, (unsigned char *)a1, &v10);
          break;
        case 1:
          sub_24481EC00(a1 + 2, a2, (uint64_t)&v8);
          goto LABEL_10;
        case 2:
          if (sub_244CB3B68(a2) == 16)
          {
            sub_244CB40C8(a2, (_OWORD *)(a1 + 8), &v8);
          }
          else
          {
            LODWORD(v8) = 43;
            *((void *)&v8 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
            LODWORD(v9) = 80;
          }
          goto LABEL_10;
        case 3:
          sub_244CB3F40(a2, (_WORD *)(a1 + 24), (uint64_t)&v8);
LABEL_10:
          long long v10 = v8;
          uint64_t v11 = v9;
          break;
        default:
          break;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_13;
      }
    }
  }
  return result;
}

double sub_244822D50@<D0>(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_24481EB0C(a1, a2, 0, (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
      long long v8 = v11;
      uint64_t v9 = v12;
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244822E34@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265197310;
      uint64_t v9 = 19869;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_24481EC00(a1, a2, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_244822F0C@<D0>(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_24484CD9C(a2, 0, a1, (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
      long long v8 = v11;
      uint64_t v9 = v12;
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244822FF0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265197328;
      uint64_t v9 = 19903;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_2448230C8(a2, a1, &v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

void sub_2448230C8(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if (sub_244CB3B68(a1) == 20)
  {
    if (*(unsigned char *)(a2 + 4)) {
      *(unsigned char *)(a2 + 4) = 0;
    }
    int v6 = 168;
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
    *(_DWORD *)a2 = 0;
    *(unsigned char *)(a2 + 4) = 1;
    sub_24481EC00(a2, a1, (uint64_t)a3);
    if (*(_DWORD *)a3) {
      return;
    }
    int v6 = 177;
  }
  *(_DWORD *)a3 = 0;
  a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
  *((_DWORD *)a3 + 4) = v6;
}

double sub_24482315C@<D0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  int v6 = v16;
  if (v16 != 1)
  {
    while (2)
    {
      long long v12 = xmmword_265197340;
      uint64_t v13 = 19940;
      if (!v6)
      {
        switch((char)v14)
        {
          case 0:
            if (sub_244CB3B68(a2) != 16) {
              goto LABEL_11;
            }
            uint64_t v7 = a2;
            long long v8 = a1;
            goto LABEL_10;
          case 1:
            if (sub_244CB3B68(a2) != 16) {
              goto LABEL_11;
            }
            uint64_t v7 = a2;
            long long v8 = a1 + 1;
            goto LABEL_10;
          case 2:
            if (sub_244CB3B68(a2) == 16)
            {
              uint64_t v7 = a2;
              long long v8 = a1 + 2;
LABEL_10:
              sub_244CB40C8(v7, v8, &v10);
            }
            else
            {
LABEL_11:
              LODWORD(v10) = 43;
              *((void *)&v10 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
              LODWORD(v11) = 80;
            }
            long long v12 = v10;
            uint64_t v13 = v11;
LABEL_14:
            double result = *(double *)&v12;
            *(_OWORD *)a3 = v12;
            *(void *)(a3 + 16) = v13;
            if (*(_DWORD *)a3) {
              return result;
            }
            sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
            int v6 = v16;
            if (v16 == 1) {
              goto LABEL_16;
            }
            continue;
          case 3:
            sub_2447F978C(a2, (uint64_t)(a1 + 3), (uint64_t)&v12);
            goto LABEL_14;
          default:
            goto LABEL_14;
        }
      }
      break;
    }
    sub_24484AFEC();
  }
LABEL_16:
  double result = *(double *)&v14;
  *(_OWORD *)a3 = v14;
  *(void *)(a3 + 16) = v15;
  return result;
}

void sub_244823320(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4 = *(_DWORD *)(a3 + 8);
  if (v4 > 127)
  {
    int v5 = v4 - 323551232;
    switch(v5)
    {
      case 0:
        uint64_t v6 = a1 + 672;
        goto LABEL_55;
      case 1:
        uint64_t v6 = a1 + 696;
        goto LABEL_55;
      case 2:
        sub_2447F5484(a2, (_OWORD *)(a1 + 720), a4);
        return;
      case 3:
        uint64_t v7 = a1 + 736;
        goto LABEL_8;
      case 4:
        uint64_t v6 = a1 + 816;
LABEL_55:
        sub_2447FFFFC(a2, v6, (void *)a4);
        return;
      case 5:
        uint64_t v7 = a1 + 840;
LABEL_8:
        sub_24484B03C(v7, a2, a4);
        return;
      case 6:
        uint64_t v11 = (unsigned char *)(a1 + 920);
LABEL_56:
        sub_244CB3E8C(a2, v11, a4);
        return;
      case 7:
        long long v10 = (_WORD *)(a1 + 922);
        goto LABEL_63;
      case 8:
        long long v10 = (_WORD *)(a1 + 924);
LABEL_63:
        sub_244CB3F40(a2, v10, a4);
        break;
      default:
        switch(v5)
        {
          case 65528:
            uint64_t v7 = a1 + 344;
            goto LABEL_8;
          case 65529:
            uint64_t v7 = a1 + 424;
            goto LABEL_8;
          case 65530:
            uint64_t v7 = a1 + 504;
            goto LABEL_8;
          case 65531:
            uint64_t v7 = a1 + 584;
            goto LABEL_8;
          case 65532:
            uint64_t v9 = (_DWORD *)(a1 + 664);
LABEL_61:
            sub_244CB3FB0(a2, v9, a4);
            break;
          case 65533:
            long long v10 = (_WORD *)(a1 + 668);
            goto LABEL_63;
          default:
LABEL_64:
            *(_DWORD *)a4 = 0;
            *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-"
                                  "common/app-common/zap-generated/cluster-objects.cpp";
            *(_DWORD *)(a4 + 16) = 20115;
            break;
        }
        break;
    }
  }
  else
  {
    switch(v4)
    {
      case 0:
        sub_24480CBD0(a2, (unsigned __int8 *)a1, a4);
        return;
      case 1:
        sub_244823794(a2, (unsigned char *)(a1 + 2), (void *)a4);
        return;
      case 2:
        long long v8 = (char *)(a1 + 3);
        goto LABEL_45;
      case 3:
        sub_244804260(a2, (unsigned __int8 *)(a1 + 4), a4);
        return;
      case 4:
        uint64_t v9 = (_DWORD *)(a1 + 8);
        goto LABEL_61;
      case 5:
        uint64_t v9 = (_DWORD *)(a1 + 12);
        goto LABEL_61;
      case 6:
        long long v10 = (_WORD *)(a1 + 16);
        goto LABEL_63;
      case 17:
        long long v10 = (_WORD *)(a1 + 18);
        goto LABEL_63;
      case 18:
        long long v10 = (_WORD *)(a1 + 20);
        goto LABEL_63;
      case 19:
        long long v10 = (_WORD *)(a1 + 22);
        goto LABEL_63;
      case 20:
        uint64_t v11 = (unsigned char *)(a1 + 24);
        goto LABEL_56;
      case 21:
        uint64_t v11 = (unsigned char *)(a1 + 25);
        goto LABEL_56;
      case 22:
        uint64_t v11 = (unsigned char *)(a1 + 26);
        goto LABEL_56;
      case 23:
        uint64_t v11 = (unsigned char *)(a1 + 27);
        goto LABEL_56;
      case 24:
        uint64_t v11 = (unsigned char *)(a1 + 28);
        goto LABEL_56;
      case 25:
        uint64_t v11 = (unsigned char *)(a1 + 29);
        goto LABEL_56;
      case 26:
        uint64_t v11 = (unsigned char *)(a1 + 30);
        goto LABEL_56;
      case 27:
        long long v12 = (unsigned char *)(a1 + 31);
        uint64_t v13 = a2;
        long long v14 = v12;
        goto LABEL_26;
      case 28:
        uint64_t v11 = (unsigned char *)(a1 + 32);
        goto LABEL_56;
      case 33:
        sub_244CB41F0(a2, (_OWORD *)(a1 + 40), (void *)a4);
        return;
      case 34:
        uint64_t v11 = (unsigned char *)(a1 + 56);
        goto LABEL_56;
      case 35:
        uint64_t v9 = (_DWORD *)(a1 + 60);
        goto LABEL_61;
      case 36:
        uint64_t v11 = (unsigned char *)(a1 + 64);
        goto LABEL_56;
      case 37:
        sub_2447FACE4(a2, (unsigned char *)(a1 + 65), (void *)a4);
        return;
      case 38:
        uint64_t v15 = (_WORD *)(a1 + 66);
        uint64_t v16 = a2;
        uint64_t v17 = v15;
        goto LABEL_34;
      case 39:
        uint64_t v18 = (_WORD *)(a1 + 68);
        uint64_t v16 = a2;
        uint64_t v17 = v18;
LABEL_34:
        sub_24484B6B0(v16, v17, (void *)a4);
        return;
      case 40:
        long long v8 = (char *)(a1 + 70);
        goto LABEL_45;
      case 41:
        long long v8 = (char *)(a1 + 71);
        goto LABEL_45;
      case 42:
        long long v8 = (char *)(a1 + 72);
        goto LABEL_45;
      case 43:
        long long v8 = (char *)(a1 + 73);
        goto LABEL_45;
      case 44:
        uint64_t v19 = (unsigned char *)(a1 + 74);
        uint64_t v13 = a2;
        long long v14 = v19;
LABEL_26:
        sub_24484B184(v13, v14, (void *)a4);
        return;
      case 48:
        uint64_t v11 = (unsigned char *)(a1 + 75);
        goto LABEL_56;
      case 49:
        uint64_t v11 = (unsigned char *)(a1 + 76);
        goto LABEL_56;
      case 50:
        long long v8 = (char *)(a1 + 77);
        goto LABEL_45;
      case 51:
        long long v8 = (char *)(a1 + 78);
LABEL_45:
        sub_244CB3C0C(a2, v8, a4);
        break;
      case 53:
        long long v10 = (_WORD *)(a1 + 80);
        goto LABEL_63;
      default:
        goto LABEL_64;
    }
  }
}

uint64_t sub_244823794@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  uint64_t result = sub_2446D1AAC(a1, a2, a3);
  if (!*(_DWORD *)a3)
  {
    unsigned int v6 = *a2;
    if (v6 >= 0xC) {
      LOBYTE(v6) = 12;
    }
    *a2 = v6;
    *(_DWORD *)a3 = 0;
    a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
    *((_DWORD *)a3 + 4) = 61;
  }
  return result;
}

double sub_2448237F8@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265197358;
      uint64_t v9 = 20141;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_2448238D0(a2, a1, &v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

uint64_t sub_2448238D0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  uint64_t result = sub_2446D1AAC(a1, a2, a3);
  if (!*(_DWORD *)a3)
  {
    unsigned int v6 = *a2;
    if (v6 >= 9) {
      LOBYTE(v6) = 2;
    }
    *a2 = v6;
    *(_DWORD *)a3 = 0;
    a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
    *((_DWORD *)a3 + 4) = 61;
  }
  return result;
}

void sub_244823934(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  int v7 = 0;
  a4[1] = 0;
  a4[2] = 0;
  *a4 = 0;
  sub_244CB7594(a2, a3, 21, &v7, (uint64_t)a4);
  if (!*(_DWORD *)a4)
  {
    *a4 = 0;
    a4[1] = 0;
    a4[2] = 0;
    if (*a1 == 6)
    {
      *(_DWORD *)a4 = 1415;
      a4[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
      *((_DWORD *)a4 + 4) = 75;
    }
    else
    {
      sub_244CB68B8();
      if (!*(_DWORD *)a4) {
        sub_244CB7708((uint64_t)a2, v7, (uint64_t)a4);
      }
    }
  }
}

double sub_2448239F0@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265197370;
      uint64_t v9 = 20176;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_2447F0A54(a2, a1, &v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

void sub_244823AC8(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  int v7 = 0;
  a4[1] = 0;
  a4[2] = 0;
  *a4 = 0;
  sub_244CB7594(a2, a3, 21, &v7, (uint64_t)a4);
  if (!*(_DWORD *)a4)
  {
    *a4 = 0;
    a4[1] = 0;
    a4[2] = 0;
    if (*(unsigned char *)a1 == 5)
    {
LABEL_3:
      *(_DWORD *)a4 = 1415;
      a4[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
      *((_DWORD *)a4 + 4) = 75;
      return;
    }
    sub_244CB68B8();
    if (!*(_DWORD *)a4)
    {
      *a4 = 0;
      a4[1] = 0;
      a4[2] = 0;
      if (*(unsigned char *)(a1 + 1) == 11) {
        goto LABEL_3;
      }
      sub_244CB68B8();
      if (!*(_DWORD *)a4)
      {
        *a4 = 0;
        a4[1] = 0;
        a4[2] = 0;
        sub_2447F5C00((unsigned __int16 *)(a1 + 2), (uint64_t)a4);
        if (!*(_DWORD *)a4)
        {
          *a4 = 0;
          a4[1] = 0;
          a4[2] = 0;
          sub_2447FB010((unsigned __int8 *)(a1 + 6), (uint64_t)a4);
          if (!*(_DWORD *)a4)
          {
            *a4 = 0;
            a4[1] = 0;
            a4[2] = 0;
            sub_2447F5BC4(a1 + 8, (uint64_t)a4);
            if (!*(_DWORD *)a4)
            {
              *a4 = 0;
              a4[1] = 0;
              a4[2] = 0;
              sub_244823C44(a2, 5, (unsigned char *)(a1 + 24), (uint64_t)a4);
              if (!*(_DWORD *)a4) {
                sub_244CB7708((uint64_t)a2, v7, (uint64_t)a4);
              }
            }
          }
        }
      }
    }
  }
}

void sub_244823C44(void *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X2>, uint64_t a4@<X8>)
{
  if (*a3)
  {
    int v7 = sub_2446D18A4(a3);
    sub_24484CC70(a1, a2, (uint64_t)v7, (void *)a4);
  }
  else
  {
    *(_DWORD *)a4 = 0;
    *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    *(_DWORD *)(a4 + 16) = 171;
  }
}

double sub_244823CCC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_13:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265197388;
      uint64_t v11 = 20216;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v12)
      {
        case 0:
          sub_2447FACE4(a2, (unsigned char *)a1, &v10);
          break;
        case 1:
          sub_244823E9C(a2, (unsigned char *)(a1 + 1), &v8);
          goto LABEL_10;
        case 2:
          sub_2447EF9E0(a2, (__int16 *)(a1 + 2), (uint64_t)&v8);
          goto LABEL_10;
        case 3:
          sub_2447F15BC(a2, (unsigned __int8 *)(a1 + 6), (uint64_t)&v8);
          goto LABEL_10;
        case 4:
          sub_2447F5E48(a2, a1 + 8, (uint64_t)&v8);
          goto LABEL_10;
        case 5:
          *(unsigned char *)(a1 + 24) = 1;
          *(_OWORD *)(a1 + 32) = 0u;
          *(_OWORD *)(a1 + 48) = 0u;
          *(_OWORD *)(a1 + 64) = 0u;
          *(_OWORD *)(a1 + 80) = 0u;
          *(_OWORD *)(a1 + 96) = 0u;
          *(void *)(a1 + 112) = 0;
          sub_2447F50A0(a2, a1 + 32, &v8);
LABEL_10:
          long long v10 = v8;
          uint64_t v11 = v9;
          break;
        default:
          break;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_13;
      }
    }
  }
  return result;
}

uint64_t sub_244823E9C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  uint64_t result = sub_2446D1AAC(a1, a2, a3);
  if (!*(_DWORD *)a3)
  {
    unsigned int v6 = *a2;
    if (v6 >= 0xB) {
      LOBYTE(v6) = 11;
    }
    *a2 = v6;
    *(_DWORD *)a3 = 0;
    a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
    *((_DWORD *)a3 + 4) = 61;
  }
  return result;
}

void sub_244823F00(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  int v7 = 0;
  a4[1] = 0;
  a4[2] = 0;
  *a4 = 0;
  sub_244CB7594(a2, a3, 21, &v7, (uint64_t)a4);
  if (!*(_DWORD *)a4)
  {
    *a4 = 0;
    a4[1] = 0;
    a4[2] = 0;
    if (*(unsigned char *)a1 == 5)
    {
LABEL_3:
      *(_DWORD *)a4 = 1415;
      a4[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
      *((_DWORD *)a4 + 4) = 75;
      return;
    }
    sub_244CB68B8();
    if (!*(_DWORD *)a4)
    {
      *a4 = 0;
      a4[1] = 0;
      a4[2] = 0;
      if (*(unsigned char *)(a1 + 1) == 11) {
        goto LABEL_3;
      }
      sub_244CB68B8();
      if (!*(_DWORD *)a4)
      {
        *a4 = 0;
        a4[1] = 0;
        a4[2] = 0;
        if (*(unsigned char *)(a1 + 2) == 5) {
          goto LABEL_3;
        }
        sub_244CB68B8();
        if (!*(_DWORD *)a4)
        {
          *a4 = 0;
          a4[1] = 0;
          a4[2] = 0;
          sub_2447F5C00((unsigned __int16 *)(a1 + 4), (uint64_t)a4);
          if (!*(_DWORD *)a4)
          {
            *a4 = 0;
            a4[1] = 0;
            a4[2] = 0;
            sub_2447FB010((unsigned __int8 *)(a1 + 8), (uint64_t)a4);
            if (!*(_DWORD *)a4)
            {
              *a4 = 0;
              a4[1] = 0;
              a4[2] = 0;
              sub_2447F5BC4(a1 + 16, (uint64_t)a4);
              if (!*(_DWORD *)a4)
              {
                *a4 = 0;
                a4[1] = 0;
                a4[2] = 0;
                sub_244823C44(a2, 6, (unsigned char *)(a1 + 32), (uint64_t)a4);
                if (!*(_DWORD *)a4) {
                  sub_244CB7708((uint64_t)a2, v7, (uint64_t)a4);
                }
              }
            }
          }
        }
      }
    }
  }
}

double sub_2448240A8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_14:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_2651973A0;
      uint64_t v11 = 20277;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v12)
      {
        case 0:
          sub_2447FACE4(a2, (unsigned char *)a1, &v10);
          break;
        case 1:
          sub_244823E9C(a2, (unsigned char *)(a1 + 1), &v8);
          goto LABEL_11;
        case 2:
          sub_2447FACE4(a2, (unsigned char *)(a1 + 2), &v8);
          goto LABEL_11;
        case 3:
          sub_2447EF9E0(a2, (__int16 *)(a1 + 4), (uint64_t)&v8);
          goto LABEL_11;
        case 4:
          sub_2447F15BC(a2, (unsigned __int8 *)(a1 + 8), (uint64_t)&v8);
          goto LABEL_11;
        case 5:
          sub_2447F5E48(a2, a1 + 16, (uint64_t)&v8);
          goto LABEL_11;
        case 6:
          *(unsigned char *)(a1 + 32) = 1;
          *(_OWORD *)(a1 + 40) = 0u;
          *(_OWORD *)(a1 + 56) = 0u;
          *(_OWORD *)(a1 + 72) = 0u;
          *(_OWORD *)(a1 + 88) = 0u;
          *(_OWORD *)(a1 + 104) = 0u;
          *(void *)(a1 + 120) = 0;
          sub_2447F50A0(a2, a1 + 40, &v8);
LABEL_11:
          long long v10 = v8;
          uint64_t v11 = v9;
          break;
        default:
          break;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_14;
      }
    }
  }
  return result;
}

void sub_244824294(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  int v7 = 0;
  a4[1] = 0;
  a4[2] = 0;
  *a4 = 0;
  sub_244CB7594(a2, a3, 21, &v7, (uint64_t)a4);
  if (!*(_DWORD *)a4)
  {
    *a4 = 0;
    a4[1] = 0;
    a4[2] = 0;
    if (*(unsigned char *)a1 == 14)
    {
LABEL_3:
      *(_DWORD *)a4 = 1415;
      a4[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
      *((_DWORD *)a4 + 4) = 75;
      return;
    }
    sub_244CB68B8();
    if (!*(_DWORD *)a4)
    {
      *a4 = 0;
      a4[1] = 0;
      a4[2] = 0;
      if (*(unsigned char *)(a1 + 1) == 3) {
        goto LABEL_3;
      }
      sub_244CB68B8();
      if (!*(_DWORD *)a4)
      {
        *a4 = 0;
        a4[1] = 0;
        a4[2] = 0;
        if (*(unsigned char *)(a1 + 2) == 11) {
          goto LABEL_3;
        }
        sub_244CB68B8();
        if (!*(_DWORD *)a4)
        {
          *a4 = 0;
          a4[1] = 0;
          a4[2] = 0;
          sub_2447F5C00((unsigned __int16 *)(a1 + 4), (uint64_t)a4);
          if (!*(_DWORD *)a4)
          {
            *a4 = 0;
            a4[1] = 0;
            a4[2] = 0;
            sub_2447FB010((unsigned __int8 *)(a1 + 8), (uint64_t)a4);
            if (!*(_DWORD *)a4)
            {
              *a4 = 0;
              a4[1] = 0;
              a4[2] = 0;
              sub_2447F5BC4(a1 + 16, (uint64_t)a4);
              if (!*(_DWORD *)a4)
              {
                *a4 = 0;
                a4[1] = 0;
                a4[2] = 0;
                sub_2447F5C00((unsigned __int16 *)(a1 + 32), (uint64_t)a4);
                if (!*(_DWORD *)a4) {
                  sub_244CB7708((uint64_t)a2, v7, (uint64_t)a4);
                }
              }
            }
          }
        }
      }
    }
  }
}

double sub_24482443C@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  int v6 = v16;
  if (v16 == 1)
  {
LABEL_15:
    double result = *(double *)&v14;
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 16) = v15;
  }
  else
  {
    while (1)
    {
      long long v12 = xmmword_2651973B8;
      uint64_t v13 = 20342;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v14)
      {
        case 0:
          sub_244824608(a2, a1, &v12);
          break;
        case 1:
          sub_2447F5F24(a2, a1 + 1, &v10);
          goto LABEL_12;
        case 2:
          sub_244823E9C(a2, a1 + 2, &v10);
          goto LABEL_12;
        case 3:
          uint64_t v7 = a2;
          long long v8 = (__int16 *)(a1 + 4);
          goto LABEL_11;
        case 4:
          sub_2447F15BC(a2, a1 + 8, (uint64_t)&v10);
          goto LABEL_12;
        case 5:
          sub_2447F5E48(a2, (uint64_t)(a1 + 16), (uint64_t)&v10);
          goto LABEL_12;
        case 6:
          uint64_t v7 = a2;
          long long v8 = (__int16 *)(a1 + 32);
LABEL_11:
          sub_2447EF9E0(v7, v8, (uint64_t)&v10);
LABEL_12:
          long long v12 = v10;
          uint64_t v13 = v11;
          break;
        default:
          break;
      }
      double result = *(double *)&v12;
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
      int v6 = v16;
      if (v16 == 1) {
        goto LABEL_15;
      }
    }
  }
  return result;
}

uint64_t sub_244824608@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  uint64_t result = sub_2446D1AAC(a1, a2, a3);
  if (!*(_DWORD *)a3)
  {
    unsigned int v6 = *a2;
    if (v6 >= 0xE) {
      LOBYTE(v6) = 14;
    }
    *a2 = v6;
    *(_DWORD *)a3 = 0;
    a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
    *((_DWORD *)a3 + 4) = 61;
  }
  return result;
}

void sub_24482466C(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  int v7 = 0;
  a4[1] = 0;
  a4[2] = 0;
  *a4 = 0;
  sub_244CB7594(a2, a3, 21, &v7, (uint64_t)a4);
  if (!*(_DWORD *)a4)
  {
    *a4 = 0;
    a4[1] = 0;
    a4[2] = 0;
    if (*(unsigned char *)a1 == 5)
    {
      *(_DWORD *)a4 = 1415;
      a4[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
      *((_DWORD *)a4 + 4) = 75;
    }
    else
    {
      sub_244CB68B8();
      if (!*(_DWORD *)a4)
      {
        *a4 = 0;
        a4[1] = 0;
        a4[2] = 0;
        sub_2447F5C00((unsigned __int16 *)(a1 + 2), (uint64_t)a4);
        if (!*(_DWORD *)a4)
        {
          *a4 = 0;
          a4[1] = 0;
          a4[2] = 0;
          sub_2447FB010((unsigned __int8 *)(a1 + 6), (uint64_t)a4);
          if (!*(_DWORD *)a4)
          {
            *a4 = 0;
            a4[1] = 0;
            a4[2] = 0;
            sub_244824794(a2, 3, a1 + 8, a4);
            if (!*(_DWORD *)a4) {
              sub_244CB7708((uint64_t)a2, v7, (uint64_t)a4);
            }
          }
        }
      }
    }
  }
}

void sub_244824794(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  if (*(unsigned char *)(a3 + 16))
  {
    unsigned int v6 = *(unsigned char **)a3;
    uint64_t v7 = *(void *)(a3 + 8);
    int v9 = 0;
    a4[1] = 0;
    a4[2] = 0;
    *a4 = 0;
    sub_244CB7594(a1, a2, 22, &v9, (uint64_t)a4);
    if (!*(_DWORD *)a4)
    {
      if (v7)
      {
        uint64_t v8 = 4 * v7;
        while (1)
        {
          *a4 = 0;
          a4[1] = 0;
          a4[2] = 0;
          sub_24481EB0C(v6, a1, 256, (uint64_t)a4);
          if (*(_DWORD *)a4) {
            break;
          }
          v6 += 4;
          v8 -= 4;
          if (!v8) {
            goto LABEL_7;
          }
        }
      }
      else
      {
LABEL_7:
        *a4 = 0;
        a4[1] = 0;
        a4[2] = 0;
        sub_244CB7708((uint64_t)a1, v9, (uint64_t)a4);
        if (!*(_DWORD *)a4)
        {
          *(_DWORD *)a4 = 0;
          a4[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/List.h";
          *((_DWORD *)a4 + 4) = 86;
        }
      }
    }
  }
  else
  {
    sub_244CB710C();
  }
}

double sub_244824898@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_11:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_2651973D0;
      uint64_t v11 = 20404;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v12)
      {
        case 0:
          sub_2447FACE4(a2, (unsigned char *)a1, &v10);
          break;
        case 1:
          sub_2447EF9E0(a2, (__int16 *)(a1 + 2), (uint64_t)&v8);
          goto LABEL_8;
        case 2:
          sub_2447F15BC(a2, (unsigned __int8 *)(a1 + 6), (uint64_t)&v8);
          goto LABEL_8;
        case 3:
          sub_2447F50A0(a2, a1 + 8, &v8);
LABEL_8:
          long long v10 = v8;
          uint64_t v11 = v9;
          break;
        default:
          break;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_11;
      }
    }
  }
  return result;
}

void sub_244824A0C(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  int v7 = 0;
  a4[1] = 0;
  a4[2] = 0;
  *a4 = 0;
  sub_244CB7594(a2, a3, 21, &v7, (uint64_t)a4);
  if (!*(_DWORD *)a4)
  {
    *a4 = 0;
    a4[1] = 0;
    a4[2] = 0;
    if (*(unsigned char *)a1 == 5)
    {
LABEL_3:
      *(_DWORD *)a4 = 1415;
      a4[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
      *((_DWORD *)a4 + 4) = 75;
      return;
    }
    sub_244CB68B8();
    if (!*(_DWORD *)a4)
    {
      *a4 = 0;
      a4[1] = 0;
      a4[2] = 0;
      if (*(unsigned char *)(a1 + 1) == 5) {
        goto LABEL_3;
      }
      sub_244CB68B8();
      if (!*(_DWORD *)a4)
      {
        *a4 = 0;
        a4[1] = 0;
        a4[2] = 0;
        sub_2447F5C00((unsigned __int16 *)(a1 + 2), (uint64_t)a4);
        if (!*(_DWORD *)a4)
        {
          *a4 = 0;
          a4[1] = 0;
          a4[2] = 0;
          sub_2447FB010((unsigned __int8 *)(a1 + 6), (uint64_t)a4);
          if (!*(_DWORD *)a4)
          {
            *a4 = 0;
            a4[1] = 0;
            a4[2] = 0;
            sub_244824794(a2, 4, a1 + 8, a4);
            if (!*(_DWORD *)a4) {
              sub_244CB7708((uint64_t)a2, v7, (uint64_t)a4);
            }
          }
        }
      }
    }
  }
}

double sub_244824B64@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_12:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_2651973E8;
      uint64_t v11 = 20455;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v12)
      {
        case 0:
          sub_2447FACE4(a2, (unsigned char *)a1, &v10);
          break;
        case 1:
          sub_2447FACE4(a2, (unsigned char *)(a1 + 1), &v8);
          goto LABEL_9;
        case 2:
          sub_2447EF9E0(a2, (__int16 *)(a1 + 2), (uint64_t)&v8);
          goto LABEL_9;
        case 3:
          sub_2447F15BC(a2, (unsigned __int8 *)(a1 + 6), (uint64_t)&v8);
          goto LABEL_9;
        case 4:
          sub_2447F50A0(a2, a1 + 8, &v8);
LABEL_9:
          long long v10 = v8;
          uint64_t v11 = v9;
          break;
        default:
          break;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_12;
      }
    }
  }
  return result;
}

void sub_244824CF4(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  int v7 = 0;
  a4[1] = 0;
  a4[2] = 0;
  *a4 = 0;
  sub_244CB7594(a2, a3, 21, &v7, (uint64_t)a4);
  if (!*(_DWORD *)a4)
  {
    *a4 = 0;
    a4[1] = 0;
    a4[2] = 0;
    if (!*(unsigned char *)a1) {
      goto LABEL_5;
    }
    sub_244CB68B8();
    if (*(_DWORD *)a4) {
      return;
    }
    *a4 = 0;
    a4[1] = 0;
    a4[2] = 0;
    if (*(unsigned char *)(a1 + 1) == 3) {
      goto LABEL_5;
    }
    sub_244CB68B8();
    if (!*(_DWORD *)a4)
    {
      *a4 = 0;
      a4[1] = 0;
      a4[2] = 0;
      if (!*(unsigned char *)(a1 + 2))
      {
LABEL_5:
        *(_DWORD *)a4 = 1415;
        a4[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
        *((_DWORD *)a4 + 4) = 75;
        return;
      }
      sub_244CB68B8();
      if (!*(_DWORD *)a4)
      {
        *a4 = 0;
        a4[1] = 0;
        a4[2] = 0;
        sub_2447F5C00((unsigned __int16 *)(a1 + 4), (uint64_t)a4);
        if (!*(_DWORD *)a4)
        {
          *a4 = 0;
          a4[1] = 0;
          a4[2] = 0;
          sub_2447FB010((unsigned __int8 *)(a1 + 8), (uint64_t)a4);
          if (!*(_DWORD *)a4)
          {
            *a4 = 0;
            a4[1] = 0;
            a4[2] = 0;
            sub_2447F5BC4(a1 + 16, (uint64_t)a4);
            if (!*(_DWORD *)a4)
            {
              *a4 = 0;
              a4[1] = 0;
              a4[2] = 0;
              sub_2447F5C00((unsigned __int16 *)(a1 + 32), (uint64_t)a4);
              if (!*(_DWORD *)a4) {
                sub_244CB7708((uint64_t)a2, v7, (uint64_t)a4);
              }
            }
          }
        }
      }
    }
  }
}

double sub_244824E90@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  int v6 = v16;
  if (v16 == 1)
  {
LABEL_15:
    double result = *(double *)&v14;
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 16) = v15;
  }
  else
  {
    while (1)
    {
      long long v12 = xmmword_265197400;
      uint64_t v13 = 20512;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v14)
      {
        case 0:
          sub_2447F503C(a2, a1, &v12);
          break;
        case 1:
          sub_2447F5F24(a2, a1 + 1, &v10);
          goto LABEL_12;
        case 2:
          sub_24480883C(a2, a1 + 2, &v10);
          goto LABEL_12;
        case 3:
          uint64_t v7 = a2;
          long long v8 = (__int16 *)(a1 + 4);
          goto LABEL_11;
        case 4:
          sub_2447F15BC(a2, a1 + 8, (uint64_t)&v10);
          goto LABEL_12;
        case 5:
          sub_2447F5E48(a2, (uint64_t)(a1 + 16), (uint64_t)&v10);
          goto LABEL_12;
        case 6:
          uint64_t v7 = a2;
          long long v8 = (__int16 *)(a1 + 32);
LABEL_11:
          sub_2447EF9E0(v7, v8, (uint64_t)&v10);
LABEL_12:
          long long v12 = v10;
          uint64_t v13 = v11;
          break;
        default:
          break;
      }
      double result = *(double *)&v12;
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
      int v6 = v16;
      if (v16 == 1) {
        goto LABEL_15;
      }
    }
  }
  return result;
}

double sub_24482505C@<D0>(_WORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265197418;
      uint64_t v9 = 20636;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3F40(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_244825134@<D0>(_WORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265197430;
      uint64_t v9 = 20670;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3F40(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_24482520C@<D0>(_WORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265197448;
      uint64_t v9 = 20704;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3F40(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_2448252E4@<D0>(_WORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265197460;
      uint64_t v9 = 20738;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3F40(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

void sub_2448253BC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4 = *(_DWORD *)(a3 + 8);
  switch(v4)
  {
    case 0:
      sub_2448255E8(a2, (char *)a1, (void *)a4);
      return;
    case 1:
      int v6 = (_WORD *)(a1 + 2);
      goto LABEL_36;
    case 2:
      int v6 = (_WORD *)(a1 + 4);
      goto LABEL_36;
    case 3:
      uint64_t v7 = (__int16 *)(a1 + 6);
      goto LABEL_24;
    case 4:
      uint64_t v7 = (__int16 *)(a1 + 10);
      goto LABEL_24;
    case 5:
      int v6 = (_WORD *)(a1 + 14);
      goto LABEL_36;
    case 6:
      int v6 = (_WORD *)(a1 + 16);
      goto LABEL_36;
    case 7:
      long long v8 = (unsigned char *)(a1 + 18);
      uint64_t v9 = a2;
      long long v10 = v8;
      goto LABEL_14;
    case 8:
      uint64_t v11 = (unsigned __int8 *)(a1 + 19);
      goto LABEL_17;
    case 9:
      uint64_t v11 = (unsigned __int8 *)(a1 + 21);
LABEL_17:
      sub_2447F15BC(a2, v11, a4);
      return;
    case 10:
      int v12 = (unsigned char *)(a1 + 23);
      uint64_t v9 = a2;
      long long v10 = v12;
      goto LABEL_14;
    case 11:
      uint64_t v7 = (__int16 *)(a1 + 24);
      goto LABEL_24;
    case 12:
      uint64_t v7 = (__int16 *)(a1 + 28);
      goto LABEL_24;
    case 13:
      sub_244825654(a2, (char *)(a1 + 32), (void *)a4);
      return;
    case 14:
      uint64_t v7 = (__int16 *)(a1 + 34);
      goto LABEL_24;
    case 15:
      uint64_t v7 = (__int16 *)(a1 + 38);
LABEL_24:
      sub_2447EF9E0(a2, v7, a4);
      return;
    case 16:
      int v6 = (_WORD *)(a1 + 42);
      goto LABEL_36;
    case 17:
      int v6 = (_WORD *)(a1 + 44);
      goto LABEL_36;
    case 18:
      int v6 = (_WORD *)(a1 + 46);
      goto LABEL_36;
    case 19:
      int v6 = (_WORD *)(a1 + 48);
LABEL_36:
      sub_244CB3F40(a2, v6, a4);
      break;
    case 20:
    case 21:
    case 22:
    case 24:
    case 25:
LABEL_6:
      *(_DWORD *)a4 = 0;
      *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-common"
                            "/app-common/zap-generated/cluster-objects.cpp";
      *(_DWORD *)(a4 + 16) = 20817;
      break;
    case 23:
      uint64_t v13 = (unsigned char *)(a1 + 50);
      uint64_t v9 = a2;
      long long v10 = v13;
LABEL_14:
      sub_24484B184(v9, v10, (void *)a4);
      break;
    case 26:
      sub_24484B6B0(a2, (_WORD *)(a1 + 52), (void *)a4);
      break;
    default:
      switch(v4)
      {
        case 65528:
          uint64_t v5 = a1 + 56;
          goto LABEL_5;
        case 65529:
          uint64_t v5 = a1 + 136;
          goto LABEL_5;
        case 65530:
          uint64_t v5 = a1 + 216;
          goto LABEL_5;
        case 65531:
          uint64_t v5 = a1 + 296;
LABEL_5:
          sub_24484B03C(v5, a2, a4);
          break;
        case 65532:
          sub_244CB3FB0(a2, (_DWORD *)(a1 + 376), a4);
          break;
        case 65533:
          int v6 = (_WORD *)(a1 + 380);
          goto LABEL_36;
        default:
          goto LABEL_6;
      }
      break;
  }
}

uint64_t sub_2448255E8@<X0>(uint64_t a1@<X0>, char *a2@<X1>, void *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  uint64_t result = sub_2446D1AAC(a1, a2, a3);
  if (!*(_DWORD *)a3)
  {
    char v6 = *a2;
    if ((*a2 + 1) >= 0xBu) {
      char v6 = 10;
    }
    *a2 = v6;
    *(_DWORD *)a3 = 0;
    a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
    *((_DWORD *)a3 + 4) = 61;
  }
  return result;
}

uint64_t sub_244825654@<X0>(uint64_t a1@<X0>, char *a2@<X1>, void *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  uint64_t result = sub_2446D1AAC(a1, a2, a3);
  if (!*(_DWORD *)a3)
  {
    char v6 = *a2;
    if ((*a2 + 1) >= 0x19u) {
      char v6 = 24;
    }
    *a2 = v6;
    *(_DWORD *)a3 = 0;
    a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
    *((_DWORD *)a3 + 4) = 61;
  }
  return result;
}

double sub_2448256C0@<D0>(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  sub_2448257B4((uint64_t)&v7, 0, a1);
  if (!v8)
  {
    sub_24484CDC4(a1 + 1, (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
      long long v8 = v11;
      uint64_t v9 = v12;
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2448257B4(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  uint64_t v3 = a1 + 8;
  if (!*(_DWORD *)(a1 + 8))
  {
    if (*a3 == 51)
    {
      LODWORD(v5) = 1415;
      *((void *)&v5 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
      LODWORD(v6) = 75;
    }
    else
    {
      sub_244CB68B8();
    }
    double result = *(double *)&v5;
    *(_OWORD *)uint64_t v3 = v5;
    *(void *)(v3 + 16) = v6;
  }
  return result;
}

double sub_244825830@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265197478;
      uint64_t v11 = 20848;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_244803B80(a2, a1 + 1, (uint64_t)&v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244825940(a2, a1, &v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

uint64_t sub_244825940@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  uint64_t result = sub_2446D1AAC(a1, a2, a3);
  if (!*(_DWORD *)a3)
  {
    unsigned int v6 = *a2;
    if (v6 >= 0x33) {
      LOBYTE(v6) = 51;
    }
    *a2 = v6;
    *(_DWORD *)a3 = 0;
    a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
    *((_DWORD *)a3 + 4) = 61;
  }
  return result;
}

double sub_2448259A4@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_24484CE24(a2, 0, a1, (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_24484CE4C(a2, 1, (unsigned char *)(a1 + 32), (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
        long long v8 = v11;
        uint64_t v9 = v12;
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244825AB4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265197490;
      uint64_t v11 = 20889;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_244825C5C(a2, (unsigned char *)(a1 + 32), &v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244825BC4(a2, a1, &v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

void sub_244825BC4(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if (sub_244CB3B68(a1) == 20)
  {
    if (*(unsigned char *)(a2 + 24)) {
      *(unsigned char *)(a2 + 24) = 0;
    }
    int v6 = 168;
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
    *(void *)(a2 + 8) = 0;
    *(void *)(a2 + 16) = 0;
    *(void *)a2 = 0;
    *(unsigned char *)(a2 + 24) = 1;
    sub_2447EFF0C(a2, a1, (uint64_t)a3);
    if (*(_DWORD *)a3) {
      return;
    }
    int v6 = 177;
  }
  *(_DWORD *)a3 = 0;
  a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
  *((_DWORD *)a3 + 4) = v6;
}

void sub_244825C5C(uint64_t a1@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  if (sub_244CB3B68(a1) == 20)
  {
    if (a2[3]) {
      a2[3] = 0;
    }
    int v6 = 168;
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
    *(_DWORD *)a2 = 0x1000000;
    sub_244825830(a2, a1, (uint64_t)a3);
    if (*(_DWORD *)a3) {
      return;
    }
    int v6 = 177;
  }
  *(_DWORD *)a3 = 0;
  a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
  *((_DWORD *)a3 + 4) = v6;
}

double sub_244825CEC@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB694C();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_2447FAB34(a1 + 4, (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_2448259A4(a1 + 16, a2, 2, (uint64_t)&v11);
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
          long long v8 = v11;
          uint64_t v9 = v12;
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244825E28@<D0>(_DWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  for (int i = v14; v14 != 1; int i = v14)
  {
    long long v10 = xmmword_2651974A8;
    uint64_t v11 = 20931;
    if (i) {
      sub_24484AFEC();
    }
    if (v12 == 2)
    {
      sub_244825AB4((uint64_t)(a1 + 4), a2, (uint64_t)&v8);
    }
    else
    {
      if (v12 != 1)
      {
        if (!(_BYTE)v12) {
          sub_244CB3FB0(a2, a1, (uint64_t)&v10);
        }
        goto LABEL_10;
      }
      sub_2447F4140(a2, (uint64_t)(a1 + 1), (uint64_t)&v8);
    }
    long long v10 = v8;
    uint64_t v11 = v9;
LABEL_10:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
    if (*(_DWORD *)a3) {
      return result;
    }
    sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  }
  double result = *(double *)&v12;
  *(_OWORD *)a3 = v12;
  *(void *)(a3 + 16) = v13;
  return result;
}

double sub_244825F58@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB694C();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB6D80(a2, *(char **)(a1 + 8), *(void *)(a1 + 16), (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
        long long v8 = v11;
        uint64_t v9 = v12;
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244826068@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_2651974C0;
      uint64_t v11 = 20976;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_244CB41F0(a2, (_OWORD *)(a1 + 8), &v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB3FB0(a2, (_DWORD *)a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_244826178@<D0>(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB694C();
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  sub_2447EF794((uint64_t)&v7, 1, a1 + 4);
  if (!v8)
  {
    sub_24480C634(a1 + 8, (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_24480C634(a1 + 20, (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
        long long v8 = v11;
        uint64_t v9 = v12;
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2448262C4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  int v6 = v16;
  if (v16 == 1)
  {
LABEL_12:
    double result = *(double *)&v14;
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 16) = v15;
  }
  else
  {
    while (1)
    {
      long long v12 = xmmword_2651974D8;
      uint64_t v13 = 21019;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v14)
      {
        case 0:
          sub_244CB3FB0(a2, (_DWORD *)a1, (uint64_t)&v12);
          break;
        case 1:
          sub_2446D1A48(a2, (unsigned char *)(a1 + 4), &v10);
          goto LABEL_9;
        case 2:
          *(unsigned char *)(a1 + 8) = 1;
          *(void *)(a1 + 12) = 0;
          uint64_t v7 = a2;
          uint64_t v8 = a1 + 12;
          goto LABEL_8;
        case 3:
          *(unsigned char *)(a1 + 20) = 1;
          *(void *)(a1 + 24) = 0;
          uint64_t v7 = a2;
          uint64_t v8 = a1 + 24;
LABEL_8:
          sub_2447F4140(v7, v8, (uint64_t)&v10);
LABEL_9:
          long long v12 = v10;
          uint64_t v13 = v11;
          break;
        default:
          break;
      }
      double result = *(double *)&v12;
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
      int v6 = v16;
      if (v16 == 1) {
        goto LABEL_12;
      }
    }
  }
  return result;
}

double sub_244826448@<D0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  sub_244826510((uint64_t)&v7, 0, a1);
  if (!v8)
  {
    sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244826510(uint64_t a1, unsigned int a2, uint64_t *a3)
{
  uint64_t v3 = a1 + 8;
  if (!*(_DWORD *)(a1 + 8))
  {
    int v4 = *(void **)a1;
    uint64_t v5 = *a3;
    uint64_t v6 = a3[1];
    int v11 = 0;
    uint64_t v10 = 0;
    long long v9 = 0uLL;
    sub_244CB7594(v4, a2, 22, &v11, (uint64_t)&v9);
    if (!v9)
    {
      if (v6)
      {
        uint64_t v7 = 4 * v6;
        while (1)
        {
          long long v9 = 0uLL;
          uint64_t v10 = 0;
          sub_244CB694C();
          if (v9) {
            break;
          }
          v5 += 4;
          v7 -= 4;
          if (!v7) {
            goto LABEL_7;
          }
        }
      }
      else
      {
LABEL_7:
        long long v9 = 0uLL;
        uint64_t v10 = 0;
        sub_244CB7708((uint64_t)v4, v11, (uint64_t)&v9);
        if (!v9)
        {
          LODWORD(v9) = 0;
          *((void *)&v9 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/List.h";
          LODWORD(v10) = 86;
        }
      }
    }
    double result = *(double *)&v9;
    *(_OWORD *)uint64_t v3 = v9;
    *(void *)(v3 + 16) = v10;
  }
  return result;
}

double sub_2448265FC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_2651974F0;
      uint64_t v9 = 21069;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_24484B03C(a1, a2, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_2448266D4@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  sub_2447EF794((uint64_t)&v7, 0, (unsigned char *)a1);
  if (!v8)
  {
    sub_244CB6D80(v7, *(char **)(a1 + 8), *(void *)(a1 + 16), (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
      long long v8 = v11;
      uint64_t v9 = v12;
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2448267C8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265197508;
      uint64_t v11 = 21104;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_244CB41F0(a2, (_OWORD *)(a1 + 8), &v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_2446D1A48(a2, (unsigned char *)a1, &v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_2448268D8@<D0>(_DWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265197520;
      uint64_t v9 = 21142;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3FB0(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_2448269B0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265197538;
      uint64_t v11 = 21177;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_244CB41F0(a2, (_OWORD *)(a1 + 8), &v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_2446D1A48(a2, (unsigned char *)a1, &v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

void sub_244826AC0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v6 = *(_DWORD *)(a3 + 8);
  if (!(!v5 & v4))
  {
    switch(v6)
    {
      case 0:
        goto LABEL_5;
      case 1:
        a1 += 80;
        goto LABEL_5;
      case 2:
        a1 += 160;
        goto LABEL_5;
      case 3:
        uint64_t v7 = a1 + 240;
        goto LABEL_17;
      case 4:
        uint64_t v7 = a1 + 248;
LABEL_17:
        sub_2447F4140(a2, v7, a4);
        return;
      case 5:
        a1 += 256;
        goto LABEL_5;
      default:
        JUMPOUT(0);
    }
  }
  switch(v6)
  {
    case 65528:
      a1 += 336;
      goto LABEL_5;
    case 65529:
      a1 += 416;
      goto LABEL_5;
    case 65530:
      a1 += 496;
      goto LABEL_5;
    case 65531:
      a1 += 576;
LABEL_5:
      sub_24484B03C(a1, a2, a4);
      break;
    case 65532:
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 656), a4);
      break;
    case 65533:
      sub_244CB3F40(a2, (_WORD *)(a1 + 660), a4);
      break;
    default:
      *(_DWORD *)a4 = 0;
      *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-common"
                            "/app-common/zap-generated/cluster-objects.cpp";
      *(_DWORD *)(a4 + 16) = 21228;
      break;
  }
}

void sub_244826BDC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  char v4 = (__int16 *)a1;
  int v5 = *(_DWORD *)(a3 + 8);
  switch(v5)
  {
    case 0:
      goto LABEL_22;
    case 1:
      int v6 = (__int16 *)(a1 + 4);
      goto LABEL_24;
    case 2:
      int v6 = (__int16 *)(a1 + 8);
      goto LABEL_24;
    case 3:
      char v4 = (__int16 *)(a1 + 12);
      goto LABEL_22;
    case 4:
      char v4 = (__int16 *)(a1 + 16);
      goto LABEL_22;
    case 5:
      char v4 = (__int16 *)(a1 + 20);
      goto LABEL_22;
    case 6:
      char v4 = (__int16 *)(a1 + 24);
      goto LABEL_22;
    case 7:
      int v6 = (__int16 *)(a1 + 28);
      goto LABEL_24;
    case 8:
      int v6 = (__int16 *)(a1 + 32);
      goto LABEL_24;
    case 9:
      int v6 = (__int16 *)(a1 + 36);
      goto LABEL_24;
    case 10:
      int v6 = (__int16 *)(a1 + 40);
      goto LABEL_24;
    case 11:
      char v4 = (__int16 *)(a1 + 44);
      goto LABEL_22;
    case 12:
      char v4 = (__int16 *)(a1 + 48);
      goto LABEL_22;
    case 13:
    case 14:
    case 15:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
LABEL_6:
      *(_DWORD *)a4 = 0;
      *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-common"
                            "/app-common/zap-generated/cluster-objects.cpp";
      *(_DWORD *)(a4 + 16) = 21304;
      return;
    case 16:
      sub_24484B6B0(a2, (_WORD *)(a1 + 52), (void *)a4);
      return;
    case 17:
      long long v8 = (unsigned char *)(a1 + 54);
      goto LABEL_30;
    case 18:
      uint64_t v9 = (char *)(a1 + 55);
      goto LABEL_32;
    case 19:
      char v4 = (__int16 *)(a1 + 56);
LABEL_22:
      sub_2447F003C(a2, v4, a4);
      return;
    case 20:
      int v6 = (__int16 *)(a1 + 60);
LABEL_24:
      sub_2447EF9E0(a2, v6, a4);
      return;
    case 21:
      uint64_t v10 = a1 + 64;
      goto LABEL_28;
    case 22:
      uint64_t v10 = a1 + 72;
      goto LABEL_28;
    case 23:
      uint64_t v10 = a1 + 80;
LABEL_28:
      sub_2447F4140(a2, v10, a4);
      break;
    case 32:
      long long v8 = (unsigned char *)(a1 + 88);
LABEL_30:
      sub_2446D1A48(a2, v8, (void *)a4);
      break;
    case 33:
      uint64_t v9 = (char *)(a1 + 89);
LABEL_32:
      sub_244826E18(a2, v9, (void *)a4);
      break;
    default:
      switch(v5)
      {
        case 65528:
          uint64_t v7 = a1 + 96;
          goto LABEL_5;
        case 65529:
          uint64_t v7 = a1 + 176;
          goto LABEL_5;
        case 65530:
          uint64_t v7 = a1 + 256;
          goto LABEL_5;
        case 65531:
          uint64_t v7 = a1 + 336;
LABEL_5:
          sub_24484B03C(v7, a2, a4);
          break;
        case 65532:
          sub_244CB3FB0(a2, (_DWORD *)(a1 + 416), a4);
          break;
        case 65533:
          sub_244CB3F40(a2, (_WORD *)(a1 + 420), a4);
          break;
        default:
          goto LABEL_6;
      }
      break;
  }
}

uint64_t sub_244826E18@<X0>(uint64_t a1@<X0>, char *a2@<X1>, void *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  uint64_t result = sub_2446D1AAC(a1, a2, a3);
  if (!*(_DWORD *)a3)
  {
    unint64_t v6 = *a2;
    if (v6 >= 8) {
      char v7 = 4;
    }
    else {
      char v7 = 0x704050403020100uLL >> (8 * v6);
    }
    *a2 = v7;
    *(_DWORD *)a3 = 0;
    a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
    *((_DWORD *)a3 + 4) = 61;
  }
  return result;
}

double sub_244826E94@<D0>(unsigned char *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB68B8();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB6904();
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_24480248C(a2, a1 + 8, (uint64_t)&v11);
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_24483FD8C(a1 + 32, (uint64_t)&v11);
          uint64_t v9 = v12;
          long long v8 = v11;
          if (!v11)
          {
            sub_24484BCBC(a1 + 34, (uint64_t)&v11);
            uint64_t v9 = v12;
            long long v8 = v11;
            if (!v11)
            {
              sub_24484BCBC(a1 + 38, (uint64_t)&v11);
              uint64_t v9 = v12;
              long long v8 = v11;
              if (!v11)
              {
                sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
                long long v8 = v11;
                uint64_t v9 = v12;
              }
            }
          }
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244827054@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  int v6 = v16;
  if (v16 == 1)
  {
LABEL_14:
    double result = *(double *)&v14;
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 16) = v15;
  }
  else
  {
    while (1)
    {
      long long v12 = xmmword_265197550;
      uint64_t v13 = 21697;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v14)
      {
        case 0:
          sub_24484B184(a2, (unsigned char *)a1, &v12);
          break;
        case 1:
          sub_244CB3F40(a2, (_WORD *)(a1 + 2), (uint64_t)&v10);
          goto LABEL_11;
        case 2:
          sub_2447F978C(a2, a1 + 8, (uint64_t)&v10);
          goto LABEL_11;
        case 3:
          *(_WORD *)(a1 + 32) = 1;
          sub_244827654(a2, (unsigned char *)(a1 + 33), &v10);
          goto LABEL_11;
        case 4:
          *(unsigned char *)(a1 + 34) = 1;
          *(_WORD *)(a1 + 36) = 0;
          uint64_t v7 = a2;
          long long v8 = (_WORD *)(a1 + 36);
          goto LABEL_10;
        case 5:
          *(unsigned char *)(a1 + 38) = 1;
          *(_WORD *)(a1 + 40) = 0;
          uint64_t v7 = a2;
          long long v8 = (_WORD *)(a1 + 40);
LABEL_10:
          sub_244CB3D8C(v7, v8, (uint64_t)&v10);
LABEL_11:
          long long v12 = v10;
          uint64_t v13 = v11;
          break;
        default:
          break;
      }
      double result = *(double *)&v12;
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
      int v6 = v16;
      if (v16 == 1) {
        goto LABEL_14;
      }
    }
  }
  return result;
}

double sub_24482721C@<D0>(unsigned char *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_24484B8EC(v7, (uint64_t)a1, (uint64_t)&v11);
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  sub_2447F1C40((uint64_t)&v7, 1, a1 + 24);
  if (!v8)
  {
    sub_2447F6524(v7, a1 + 32, (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_24480248C(v7, a1 + 56, (uint64_t)&v11);
      long long v8 = v11;
      uint64_t v9 = v12;
    }
  }
  sub_2448273A4((uint64_t)&v7, 4u, (uint64_t)(a1 + 80));
  if (!v8)
  {
    sub_24484BB58((uint64_t)v7, 5, (uint64_t)(a1 + 96));
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
      long long v8 = v11;
      uint64_t v9 = v12;
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2448273A4(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = a1 + 8;
  if (!*(_DWORD *)(a1 + 8))
  {
    char v4 = *(char **)a1;
    int v5 = *(unsigned char **)a3;
    uint64_t v6 = *(void *)(a3 + 8);
    int v11 = 0;
    uint64_t v10 = 0;
    long long v9 = 0uLL;
    sub_244CB7594(v4, a2, 22, &v11, (uint64_t)&v9);
    if (!v9)
    {
      if (v6)
      {
        uint64_t v7 = 48 * v6;
        while (1)
        {
          long long v9 = 0uLL;
          uint64_t v10 = 0;
          sub_244826E94(v5, v4, 256, (uint64_t)&v9);
          if (v9) {
            break;
          }
          v5 += 48;
          v7 -= 48;
          if (!v7) {
            goto LABEL_7;
          }
        }
      }
      else
      {
LABEL_7:
        long long v9 = 0uLL;
        uint64_t v10 = 0;
        sub_244CB7708((uint64_t)v4, v11, (uint64_t)&v9);
        if (!v9)
        {
          LODWORD(v9) = 0;
          *((void *)&v9 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/List.h";
          LODWORD(v10) = 86;
        }
      }
    }
    double result = *(double *)&v9;
    *(_OWORD *)uint64_t v3 = v9;
    *(void *)(v3 + 16) = v10;
  }
  return result;
}

double sub_244827494@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_13:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265197568;
      uint64_t v11 = 21758;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v12)
      {
        case 0:
          sub_2447FFFFC(a2, a1, &v10);
          break;
        case 1:
          sub_244827654(a2, (unsigned char *)(a1 + 24), &v8);
          goto LABEL_10;
        case 2:
          *(unsigned char *)(a1 + 32) = 1;
          *(void *)(a1 + 40) = 0;
          *(void *)(a1 + 48) = 0;
          sub_244CB41F0(a2, (_OWORD *)(a1 + 40), &v8);
          goto LABEL_10;
        case 3:
          sub_2447F978C(a2, a1 + 56, (uint64_t)&v8);
          goto LABEL_10;
        case 4:
          sub_24484B03C(a1 + 80, a2, (uint64_t)&v8);
          goto LABEL_10;
        case 5:
          sub_244800BF4(a2, (char *)(a1 + 160), &v8);
LABEL_10:
          long long v10 = v8;
          uint64_t v11 = v9;
          break;
        default:
          break;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_13;
      }
    }
  }
  return result;
}

uint64_t sub_244827654@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  uint64_t result = sub_2446D1AAC(a1, a2, a3);
  if (!*(_DWORD *)a3)
  {
    unsigned int v6 = *a2;
    if (v6 >= 0xA) {
      LOBYTE(v6) = 2;
    }
    *a2 = v6;
    *(_DWORD *)a3 = 0;
    a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
    *((_DWORD *)a3 + 4) = 61;
  }
  return result;
}

double sub_2448276B8@<D0>(unsigned char *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_24484B8EC(v7, (uint64_t)a1, (uint64_t)&v11);
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  sub_2447F4DC8((uint64_t)&v7, 1, a1 + 24);
  if (!v8)
  {
    sub_244819180(v7, a1 + 32, (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_24484BCBC(a1 + 64, (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_24484BCBC(a1 + 68, (uint64_t)&v11);
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_24484BB58((uint64_t)v7, 5, (uint64_t)(a1 + 72));
          uint64_t v9 = v12;
          long long v8 = v11;
          if (!v11)
          {
            sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
            long long v8 = v11;
            uint64_t v9 = v12;
          }
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_24482785C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  int v6 = v16;
  if (v16 == 1)
  {
LABEL_14:
    double result = *(double *)&v14;
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 16) = v15;
  }
  else
  {
    while (1)
    {
      long long v12 = xmmword_265197580;
      uint64_t v13 = 21819;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v14)
      {
        case 0:
          sub_2447FFFFC(a2, a1, &v12);
          break;
        case 1:
          sub_244827A2C(a2, (unsigned char *)(a1 + 24), &v10);
          goto LABEL_11;
        case 2:
          *(unsigned char *)(a1 + 32) = 1;
          *(void *)(a1 + 48) = 0;
          *(void *)(a1 + 56) = 0;
          *(void *)(a1 + 40) = 0;
          sub_244803C58(a2, a1 + 40, &v10);
          goto LABEL_11;
        case 3:
          *(unsigned char *)(a1 + 64) = 1;
          *(_WORD *)(a1 + 66) = 0;
          uint64_t v7 = a2;
          long long v8 = (_WORD *)(a1 + 66);
          goto LABEL_9;
        case 4:
          *(unsigned char *)(a1 + 68) = 1;
          *(_WORD *)(a1 + 70) = 0;
          uint64_t v7 = a2;
          long long v8 = (_WORD *)(a1 + 70);
LABEL_9:
          sub_244CB3D8C(v7, v8, (uint64_t)&v10);
          goto LABEL_11;
        case 5:
          sub_244800BF4(a2, (char *)(a1 + 72), &v10);
LABEL_11:
          long long v12 = v10;
          uint64_t v13 = v11;
          break;
        default:
          break;
      }
      double result = *(double *)&v12;
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
      int v6 = v16;
      if (v16 == 1) {
        goto LABEL_14;
      }
    }
  }
  return result;
}

uint64_t sub_244827A2C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  uint64_t result = sub_2446D1AAC(a1, a2, a3);
  if (!*(_DWORD *)a3)
  {
    if ((*a2 + 2) > 8u) {
      char v6 = 0;
    }
    else {
      char v6 = byte_244E7CA2A[(char)(*a2 + 2)];
    }
    *a2 = v6;
    *(_DWORD *)a3 = 0;
    a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
    *((_DWORD *)a3 + 4) = 61;
  }
  return result;
}

double sub_244827AAC@<D0>(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  sub_2447F4DC8((uint64_t)&v7, 0, a1);
  if (!v8)
  {
    sub_244CB68B8();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB6904();
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
        long long v8 = v11;
        uint64_t v9 = v12;
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244827BCC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  for (int i = v14; v14 != 1; int i = v14)
  {
    long long v10 = xmmword_265197598;
    uint64_t v11 = 21877;
    if (i) {
      sub_24484AFEC();
    }
    if (v12 == 2)
    {
      sub_24484B6B0(a2, (_WORD *)(a1 + 2), &v8);
    }
    else
    {
      if (v12 != 1)
      {
        if (!(_BYTE)v12) {
          sub_244827A2C(a2, (unsigned char *)a1, &v10);
        }
        goto LABEL_10;
      }
      sub_244CB3E8C(a2, (unsigned char *)(a1 + 1), (uint64_t)&v8);
    }
    long long v10 = v8;
    uint64_t v11 = v9;
LABEL_10:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
    if (*(_DWORD *)a3) {
      return result;
    }
    sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  }
  double result = *(double *)&v12;
  *(_OWORD *)a3 = v12;
  *(void *)(a3 + 16) = v13;
  return result;
}

double sub_244827CFC@<D0>(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  sub_2447F1C40((uint64_t)&v7, 0, a1);
  if (!v8)
  {
    sub_244CB68B8();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB6904();
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
        long long v8 = v11;
        uint64_t v9 = v12;
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244827E1C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  for (int i = v14; v14 != 1; int i = v14)
  {
    long long v10 = xmmword_2651975B0;
    uint64_t v11 = 21923;
    if (i) {
      sub_24484AFEC();
    }
    if (v12 == 2)
    {
      sub_24484B6B0(a2, (_WORD *)(a1 + 2), &v8);
    }
    else
    {
      if (v12 != 1)
      {
        if (!(_BYTE)v12) {
          sub_244827654(a2, (unsigned char *)a1, &v10);
        }
        goto LABEL_10;
      }
      sub_244CB3E8C(a2, (unsigned char *)(a1 + 1), (uint64_t)&v8);
    }
    long long v10 = v8;
    uint64_t v11 = v9;
LABEL_10:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
    if (*(_DWORD *)a3) {
      return result;
    }
    sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  }
  double result = *(double *)&v12;
  *(_OWORD *)a3 = v12;
  *(void *)(a3 + 16) = v13;
  return result;
}

double sub_244827F4C@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB6904();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_24484B350((unsigned __int16 *)(a1 + 2), (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_24484B350((unsigned __int16 *)(a1 + 6), (uint64_t)&v11);
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
          long long v8 = v11;
          uint64_t v9 = v12;
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244828088@<D0>(_WORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  for (int i = v16; v16 != 1; int i = v16)
  {
    long long v12 = xmmword_2651975C8;
    uint64_t v13 = 21969;
    if (i) {
      sub_24484AFEC();
    }
    if (v14 == 2)
    {
      uint64_t v7 = a2;
      long long v8 = a1 + 3;
    }
    else
    {
      if (v14 != 1)
      {
        if (!(_BYTE)v14) {
          sub_244CB3F40(a2, a1, (uint64_t)&v12);
        }
        goto LABEL_10;
      }
      uint64_t v7 = a2;
      long long v8 = a1 + 1;
    }
    sub_2447F003C(v7, v8, (uint64_t)&v10);
    long long v12 = v10;
    uint64_t v13 = v11;
LABEL_10:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
    if (*(_DWORD *)a3) {
      return result;
    }
    sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  }
  double result = *(double *)&v14;
  *(_OWORD *)a3 = v14;
  *(void *)(a3 + 16) = v15;
  return result;
}

double sub_2448281B4@<D0>(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  sub_2447F06A4((uint64_t)&v7, 0, a1);
  if (!v8)
  {
    sub_244CB69F4();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
      long long v8 = v11;
      uint64_t v9 = v12;
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2448282A8@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_2651975E0;
      uint64_t v11 = 22016;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_244CB3C70(a2, a1 + 1, (uint64_t)&v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_2447F5F24(a2, a1, &v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_2448283B8@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB68B8();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB68B8();
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB68B8();
        long long v8 = v11;
        uint64_t v9 = v12;
      }
    }
  }
  sub_244828504((uint64_t)&v7, 3u, (uint64_t *)(a1 + 8));
  if (!v8)
  {
    sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244828504(uint64_t a1, unsigned int a2, uint64_t *a3)
{
  uint64_t v3 = a1 + 8;
  if (!*(_DWORD *)(a1 + 8))
  {
    char v4 = *(void **)a1;
    uint64_t v5 = *a3;
    uint64_t v6 = a3[1];
    int v11 = 0;
    uint64_t v10 = 0;
    long long v9 = 0uLL;
    sub_244CB7594(v4, a2, 22, &v11, (uint64_t)&v9);
    if (!v9)
    {
      if (v6)
      {
        uint64_t v7 = 10 * v6;
        while (1)
        {
          long long v9 = 0uLL;
          uint64_t v10 = 0;
          sub_244827F4C(v5, v4, 256, (uint64_t)&v9);
          if (v9) {
            break;
          }
          v5 += 10;
          v7 -= 10;
          if (!v7) {
            goto LABEL_7;
          }
        }
      }
      else
      {
LABEL_7:
        long long v9 = 0uLL;
        uint64_t v10 = 0;
        sub_244CB7708((uint64_t)v4, v11, (uint64_t)&v9);
        if (!v9)
        {
          LODWORD(v9) = 0;
          *((void *)&v9 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/List.h";
          LODWORD(v10) = 86;
        }
      }
    }
    double result = *(double *)&v9;
    *(_OWORD *)uint64_t v3 = v9;
    *(void *)(v3 + 16) = v10;
  }
  return result;
}

double sub_2448285F4@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_11:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_2651975F8;
      uint64_t v11 = 22057;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v12)
      {
        case 0:
          sub_244CB3E8C(a2, a1, (uint64_t)&v10);
          break;
        case 1:
          sub_24484B184(a2, a1 + 1, &v8);
          goto LABEL_8;
        case 2:
          sub_24484B184(a2, a1 + 2, &v8);
          goto LABEL_8;
        case 3:
          sub_24484B03C((uint64_t)(a1 + 8), a2, (uint64_t)&v8);
LABEL_8:
          long long v10 = v8;
          uint64_t v11 = v9;
          break;
        default:
          break;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_11;
      }
    }
  }
  return result;
}

double sub_244828768@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_11:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265197610;
      uint64_t v11 = 22106;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v12)
      {
        case 0:
          sub_244CB3E8C(a2, a1, (uint64_t)&v10);
          break;
        case 1:
          sub_24484B184(a2, a1 + 1, &v8);
          goto LABEL_8;
        case 2:
          sub_24484B184(a2, a1 + 2, &v8);
          goto LABEL_8;
        case 3:
          sub_24484B03C((uint64_t)(a1 + 8), a2, (uint64_t)&v8);
LABEL_8:
          long long v10 = v8;
          uint64_t v11 = v9;
          break;
        default:
          break;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_11;
      }
    }
  }
  return result;
}

double sub_2448288DC@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265197628;
      uint64_t v11 = 22153;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_24484B184(a2, a1 + 1, &v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_24484B184(a2, a1, &v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_2448289EC@<D0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_10:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265197640;
      uint64_t v11 = 22211;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v12)
      {
        if (sub_244CB3B68(a2) == 16)
        {
          sub_244CB40C8(a2, a1, &v8);
        }
        else
        {
          LODWORD(v8) = 43;
          *((void *)&v8 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
          LODWORD(v9) = 80;
        }
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_10;
      }
    }
  }
  return result;
}

double sub_244828B14@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_24484B8EC(a2, a1, (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
      long long v8 = v11;
      uint64_t v9 = v12;
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244828BF8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265197658;
      uint64_t v9 = 22245;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_2447FFFFC(a2, a1, &v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_244828CD0@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB68B8();
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  sub_244828DF0((uint64_t)&v7, 1u, (uint64_t *)(a1 + 8));
  if (!v8)
  {
    sub_24483F80C((unsigned char *)(a1 + 24), (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
      long long v8 = v11;
      uint64_t v9 = v12;
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244828DF0(uint64_t a1, unsigned int a2, uint64_t *a3)
{
  uint64_t v3 = a1 + 8;
  if (!*(_DWORD *)(a1 + 8))
  {
    char v4 = *(void **)a1;
    uint64_t v5 = *a3;
    uint64_t v6 = a3[1];
    int v11 = 0;
    uint64_t v10 = 0;
    long long v9 = 0uLL;
    sub_244CB7594(v4, a2, 22, &v11, (uint64_t)&v9);
    if (!v9)
    {
      if (v6)
      {
        uint64_t v7 = 8 * v6;
        while (1)
        {
          long long v9 = 0uLL;
          uint64_t v10 = 0;
          sub_2447F01F0(v4, 256, (uint64_t)&v9);
          if (v9) {
            break;
          }
          v5 += 8;
          v7 -= 8;
          if (!v7) {
            goto LABEL_7;
          }
        }
      }
      else
      {
LABEL_7:
        long long v9 = 0uLL;
        uint64_t v10 = 0;
        sub_244CB7708((uint64_t)v4, v11, (uint64_t)&v9);
        if (!v9)
        {
          LODWORD(v9) = 0;
          *((void *)&v9 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/List.h";
          LODWORD(v10) = 86;
        }
      }
    }
    double result = *(double *)&v9;
    *(_OWORD *)uint64_t v3 = v9;
    *(void *)(v3 + 16) = v10;
  }
  return result;
}

double sub_244828EDC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  for (int i = v14; v14 != 1; int i = v14)
  {
    long long v10 = xmmword_265197670;
    uint64_t v11 = 22281;
    if (i) {
      sub_24484AFEC();
    }
    if (v12 == 2)
    {
      *(unsigned char *)(a1 + 88) = 1;
      *(_WORD *)(a1 + 90) = 0;
      sub_244CB3F40(a2, (_WORD *)(a1 + 90), (uint64_t)&v8);
    }
    else
    {
      if (v12 != 1)
      {
        if (!(_BYTE)v12) {
          sub_244CB3E8C(a2, (unsigned char *)a1, (uint64_t)&v10);
        }
        goto LABEL_10;
      }
      sub_24484B03C(a1 + 8, a2, (uint64_t)&v8);
    }
    long long v10 = v8;
    uint64_t v11 = v9;
LABEL_10:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
    if (*(_DWORD *)a3) {
      return result;
    }
    sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  }
  double result = *(double *)&v12;
  *(_OWORD *)a3 = v12;
  *(void *)(a3 + 16) = v13;
  return result;
}

double sub_244829020@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  sub_2447F06A4((uint64_t)&v7, 0, (unsigned char *)a1);
  sub_244826510((uint64_t)&v7, 1u, (uint64_t *)(a1 + 8));
  if (!v8)
  {
    sub_24483F80C((unsigned char *)(a1 + 24), (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
      long long v8 = v11;
      uint64_t v9 = v12;
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244829124@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  for (int i = v14; v14 != 1; int i = v14)
  {
    long long v10 = xmmword_265197688;
    uint64_t v11 = 22325;
    if (i) {
      sub_24484AFEC();
    }
    if (v12 == 2)
    {
      *(unsigned char *)(a1 + 88) = 1;
      *(_WORD *)(a1 + 90) = 0;
      sub_244CB3F40(a2, (_WORD *)(a1 + 90), (uint64_t)&v8);
    }
    else
    {
      if (v12 != 1)
      {
        if (!(_BYTE)v12) {
          sub_2447F5F24(a2, (unsigned char *)a1, &v10);
        }
        goto LABEL_10;
      }
      sub_24484B03C(a1 + 8, a2, (uint64_t)&v8);
    }
    long long v10 = v8;
    uint64_t v11 = v9;
LABEL_10:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
    if (*(_DWORD *)a3) {
      return result;
    }
    sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  }
  double result = *(double *)&v12;
  *(_OWORD *)a3 = v12;
  *(void *)(a3 + 16) = v13;
  return result;
}

void sub_244829268(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  char v4 = (__int16 *)a1;
  int v5 = *(_DWORD *)(a3 + 8);
  switch(v5)
  {
    case 0:
      goto LABEL_57;
    case 1:
      char v4 = (__int16 *)(a1 + 4);
      goto LABEL_57;
    case 2:
      uint64_t v7 = (unsigned char *)(a1 + 8);
      uint64_t v8 = a2;
      uint64_t v9 = v7;
      goto LABEL_8;
    case 3:
      long long v10 = (_WORD *)(a1 + 10);
      goto LABEL_25;
    case 4:
      long long v10 = (_WORD *)(a1 + 12);
      goto LABEL_25;
    case 5:
      long long v10 = (_WORD *)(a1 + 14);
      goto LABEL_25;
    case 6:
      long long v10 = (_WORD *)(a1 + 16);
      goto LABEL_25;
    case 7:
      uint64_t v11 = (unsigned char *)(a1 + 18);
      goto LABEL_64;
    case 8:
      uint64_t v11 = (unsigned char *)(a1 + 19);
      goto LABEL_64;
    case 9:
      long long v12 = (unsigned char *)(a1 + 20);
      uint64_t v8 = a2;
      uint64_t v9 = v12;
      goto LABEL_8;
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 29:
    case 31:
    case 38:
    case 39:
    case 40:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 51:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
LABEL_6:
      *(_DWORD *)a4 = 0;
      *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-common"
                            "/app-common/zap-generated/cluster-objects.cpp";
      *(_DWORD *)(a4 + 16) = 22488;
      return;
    case 16:
      uint64_t v13 = (unsigned char *)(a1 + 21);
      goto LABEL_27;
    case 17:
      long long v10 = (_WORD *)(a1 + 22);
      goto LABEL_25;
    case 18:
      long long v10 = (_WORD *)(a1 + 24);
      goto LABEL_25;
    case 19:
      long long v10 = (_WORD *)(a1 + 26);
      goto LABEL_25;
    case 20:
      long long v10 = (_WORD *)(a1 + 28);
      goto LABEL_25;
    case 21:
      long long v10 = (_WORD *)(a1 + 30);
      goto LABEL_25;
    case 22:
      long long v10 = (_WORD *)(a1 + 32);
      goto LABEL_25;
    case 23:
      long long v10 = (_WORD *)(a1 + 34);
      goto LABEL_25;
    case 24:
      long long v10 = (_WORD *)(a1 + 36);
LABEL_25:
      sub_244CB3D8C(a2, v10, a4);
      return;
    case 25:
      uint64_t v13 = (unsigned char *)(a1 + 38);
LABEL_27:
      sub_244CB3C70(a2, v13, a4);
      return;
    case 26:
      int v14 = (unsigned char *)(a1 + 39);
      uint64_t v8 = a2;
      uint64_t v9 = v14;
      goto LABEL_8;
    case 27:
      sub_2447F0A54(a2, (unsigned char *)(a1 + 40), (void *)a4);
      return;
    case 28:
      sub_244827654(a2, (unsigned char *)(a1 + 41), (void *)a4);
      return;
    case 30:
      sub_244829728(a2, (char *)(a1 + 42), (void *)a4);
      return;
    case 32:
      sub_2447F6AD4(a2, (unsigned char *)(a1 + 43), (void *)a4);
      return;
    case 33:
      uint64_t v11 = (unsigned char *)(a1 + 44);
      goto LABEL_64;
    case 34:
      uint64_t v11 = (unsigned char *)(a1 + 45);
      goto LABEL_64;
    case 35:
      sub_2447F1DCC(a2, (unsigned char *)(a1 + 46), (void *)a4);
      return;
    case 36:
      sub_2447EF9E0(a2, (__int16 *)(a1 + 48), a4);
      return;
    case 37:
      uint64_t v15 = (unsigned char *)(a1 + 52);
      uint64_t v8 = a2;
      uint64_t v9 = v15;
LABEL_8:
      sub_24484B184(v8, v9, (void *)a4);
      return;
    case 41:
      sub_24484B6B0(a2, (_WORD *)(a1 + 54), (void *)a4);
      return;
    case 48:
      sub_2447F5F24(a2, (unsigned char *)(a1 + 56), (void *)a4);
      return;
    case 49:
      char v4 = (__int16 *)(a1 + 58);
      goto LABEL_57;
    case 50:
      uint64_t v16 = (_DWORD *)(a1 + 64);
LABEL_77:
      sub_244CB3FB0(a2, v16, a4);
      return;
    case 52:
      uint64_t v17 = (unsigned __int8 *)(a1 + 68);
      goto LABEL_66;
    case 53:
      uint64_t v17 = (unsigned __int8 *)(a1 + 70);
      goto LABEL_66;
    case 54:
      uint64_t v17 = (unsigned __int8 *)(a1 + 72);
      goto LABEL_66;
    case 55:
      uint64_t v17 = (unsigned __int8 *)(a1 + 74);
      goto LABEL_66;
    case 56:
      uint64_t v17 = (unsigned __int8 *)(a1 + 76);
      goto LABEL_66;
    case 57:
      uint64_t v17 = (unsigned __int8 *)(a1 + 78);
      goto LABEL_66;
    case 58:
      uint64_t v11 = (unsigned char *)(a1 + 80);
      goto LABEL_64;
    case 64:
      sub_2447FACE4(a2, (unsigned char *)(a1 + 81), (void *)a4);
      return;
    case 65:
      uint64_t v18 = (_WORD *)(a1 + 82);
LABEL_79:
      sub_244CB3F40(a2, v18, a4);
      return;
    case 66:
      uint64_t v19 = (unsigned char *)(a1 + 84);
      uint64_t v20 = a2;
      v21 = v19;
      goto LABEL_52;
    case 67:
      uint64_t v22 = (unsigned char *)(a1 + 85);
      uint64_t v20 = a2;
      v21 = v22;
LABEL_52:
      sub_2446D1A48(v20, v21, (void *)a4);
      return;
    case 68:
      sub_24484B2E8(a2, (_DWORD *)(a1 + 88), (void *)a4);
      return;
    case 69:
      sub_2447F4FD8(a2, (unsigned char *)(a1 + 92), (void *)a4);
      return;
    case 70:
      char v4 = (__int16 *)(a1 + 94);
LABEL_57:
      sub_2447F003C(a2, v4, a4);
      return;
    case 71:
      sub_2447F092C(a2, (BOOL *)(a1 + 98), (void *)a4);
      return;
    case 72:
      uint64_t v6 = a1 + 104;
      goto LABEL_5;
    case 73:
      uint64_t v6 = a1 + 184;
      goto LABEL_5;
    case 74:
      uint64_t v11 = (unsigned char *)(a1 + 264);
      goto LABEL_64;
    case 75:
      uint64_t v11 = (unsigned char *)(a1 + 265);
      goto LABEL_64;
    case 76:
      uint64_t v11 = (unsigned char *)(a1 + 266);
LABEL_64:
      sub_244CB3E8C(a2, v11, a4);
      return;
    case 77:
      uint64_t v17 = (unsigned __int8 *)(a1 + 267);
LABEL_66:
      sub_2447F15BC(a2, v17, a4);
      return;
    case 78:
      uint64_t v23 = a1 + 272;
      goto LABEL_69;
    case 79:
      uint64_t v23 = a1 + 296;
LABEL_69:
      sub_2447FFFFC(a2, v23, (void *)a4);
      return;
    case 80:
      uint64_t v6 = a1 + 320;
      goto LABEL_5;
    case 81:
      uint64_t v6 = a1 + 400;
LABEL_5:
      sub_24484B03C(v6, a2, a4);
      break;
    case 82:
      sub_2447F4140(a2, a1 + 480, a4);
      break;
    default:
      switch(v5)
      {
        case 65528:
          uint64_t v6 = a1 + 488;
          goto LABEL_5;
        case 65529:
          uint64_t v6 = a1 + 568;
          goto LABEL_5;
        case 65530:
          uint64_t v6 = a1 + 648;
          goto LABEL_5;
        case 65531:
          uint64_t v6 = a1 + 728;
          goto LABEL_5;
        case 65532:
          uint64_t v16 = (_DWORD *)(a1 + 808);
          goto LABEL_77;
        case 65533:
          uint64_t v18 = (_WORD *)(a1 + 812);
          goto LABEL_79;
        default:
          goto LABEL_6;
      }
  }
}

uint64_t sub_244829728@<X0>(uint64_t a1@<X0>, char *a2@<X1>, void *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  uint64_t result = sub_2446D1AAC(a1, a2, a3);
  if (!*(_DWORD *)a3)
  {
    unint64_t v6 = *a2;
    if (v6 >= 5) {
      char v7 = 1;
    }
    else {
      char v7 = 0x403010100uLL >> (8 * v6);
    }
    *a2 = v7;
    *(_DWORD *)a3 = 0;
    a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
    *((_DWORD *)a3 + 4) = 61;
  }
  return result;
}

double sub_24482979C@<D0>(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  char v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  sub_2447F1C40((uint64_t)&v7, 0, a1);
  if (!v8)
  {
    sub_24484B7DC(a1 + 1, (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_24484B7DC(a1 + 3, (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
        long long v8 = v11;
        uint64_t v9 = v12;
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2448298BC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  for (int i = v16; v16 != 1; int i = v16)
  {
    long long v12 = xmmword_2651976A0;
    uint64_t v13 = 22520;
    if (i) {
      sub_24484AFEC();
    }
    if (v14 == 2)
    {
      *(_WORD *)(a1 + 3) = 1;
      uint64_t v7 = a2;
      long long v8 = (char *)(a1 + 4);
    }
    else
    {
      if (v14 != 1)
      {
        if (!(_BYTE)v14) {
          sub_2447F1DCC(a2, (unsigned char *)a1, &v12);
        }
        goto LABEL_10;
      }
      *(_WORD *)(a1 + 1) = 1;
      uint64_t v7 = a2;
      long long v8 = (char *)(a1 + 2);
    }
    sub_244CB3C0C(v7, v8, (uint64_t)&v10);
    long long v12 = v10;
    uint64_t v13 = v11;
LABEL_10:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
    if (*(_DWORD *)a3) {
      return result;
    }
    sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  }
  double result = *(double *)&v14;
  *(_OWORD *)a3 = v14;
  *(void *)(a3 + 16) = v15;
  return result;
}

void sub_2448299FC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4 = *(_DWORD *)(a3 + 8);
  switch(v4)
  {
    case 0:
      sub_2447F6AD4(a2, (unsigned char *)a1, (void *)a4);
      return;
    case 1:
      sub_2447F0A54(a2, (unsigned char *)(a1 + 1), (void *)a4);
      return;
    case 2:
      unint64_t v6 = (unsigned __int8 *)(a1 + 2);
      goto LABEL_11;
    case 3:
      uint64_t v7 = (unsigned char *)(a1 + 4);
      goto LABEL_13;
    case 4:
      uint64_t v7 = (unsigned char *)(a1 + 5);
      goto LABEL_13;
    case 5:
      unint64_t v6 = (unsigned __int8 *)(a1 + 6);
LABEL_11:
      sub_2447F15BC(a2, v6, a4);
      return;
    case 6:
      uint64_t v7 = (unsigned char *)(a1 + 8);
LABEL_13:
      sub_244CB3E8C(a2, v7, a4);
      return;
    case 7:
      long long v8 = (unsigned char *)(a1 + 9);
      goto LABEL_16;
    case 8:
      long long v8 = (unsigned char *)(a1 + 10);
LABEL_16:
      uint64_t v9 = a2;
      long long v10 = v8;
      goto LABEL_17;
    case 9:
      uint64_t v11 = (unsigned char *)(a1 + 11);
      goto LABEL_20;
    case 10:
      uint64_t v11 = (unsigned char *)(a1 + 12);
LABEL_20:
      uint64_t v9 = a2;
      long long v10 = v11;
LABEL_17:
      sub_24484B184(v9, v10, (void *)a4);
      break;
    case 11:
      sub_2447F1DCC(a2, (unsigned char *)(a1 + 13), (void *)a4);
      break;
    default:
      switch(v4)
      {
        case 65528:
          uint64_t v5 = a1 + 16;
          goto LABEL_5;
        case 65529:
          uint64_t v5 = a1 + 96;
          goto LABEL_5;
        case 65530:
          uint64_t v5 = a1 + 176;
          goto LABEL_5;
        case 65531:
          uint64_t v5 = a1 + 256;
LABEL_5:
          sub_24484B03C(v5, a2, a4);
          break;
        case 65532:
          sub_244CB3FB0(a2, (_DWORD *)(a1 + 336), a4);
          break;
        case 65533:
          sub_244CB3F40(a2, (_WORD *)(a1 + 340), a4);
          break;
        default:
          *(_DWORD *)a4 = 0;
          *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-co"
                                "mmon/app-common/zap-generated/cluster-objects.cpp";
          *(_DWORD *)(a4 + 16) = 22587;
          break;
      }
      break;
  }
}

void sub_244829B94(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v5 = *(_DWORD *)(a3 + 8);
  if (v5 <= 65527)
  {
    if (v5)
    {
      if (v5 == 1)
      {
        sub_2447F0A54(a2, (unsigned char *)(a1 + 1), (void *)a4);
        return;
      }
      if (v5 != 2)
      {
LABEL_17:
        *(_DWORD *)a4 = 0;
        *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-comm"
                              "on/app-common/zap-generated/cluster-objects.cpp";
        *(_DWORD *)(a4 + 16) = 22623;
        return;
      }
      uint64_t v7 = (unsigned char *)(a1 + 2);
      uint64_t v8 = a2;
      uint64_t v9 = v7;
    }
    else
    {
      uint64_t v8 = a2;
      uint64_t v9 = (unsigned char *)a1;
    }
    sub_2447F1DCC(v8, v9, (void *)a4);
    return;
  }
  switch(v5)
  {
    case 65528:
      uint64_t v6 = a1 + 8;
      goto LABEL_4;
    case 65529:
      uint64_t v6 = a1 + 88;
      goto LABEL_4;
    case 65530:
      uint64_t v6 = a1 + 168;
      goto LABEL_4;
    case 65531:
      uint64_t v6 = a1 + 248;
LABEL_4:
      sub_24484B03C(v6, a2, a4);
      break;
    case 65532:
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 328), a4);
      break;
    case 65533:
      sub_244CB3F40(a2, (_WORD *)(a1 + 332), a4);
      break;
    default:
      goto LABEL_17;
  }
}

double sub_244829C8C@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB68B8();
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  sub_2447EF794((uint64_t)&v7, 1, (unsigned char *)(a1 + 1));
  if (!v8)
  {
    sub_244CB6904();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB68B8();
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB68B8();
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
          long long v8 = v11;
          uint64_t v9 = v12;
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244829E04@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  int v6 = v16;
  if (v16 == 1)
  {
LABEL_13:
    double result = *(double *)&v14;
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 16) = v15;
  }
  else
  {
    while (1)
    {
      long long v12 = xmmword_2651976B8;
      uint64_t v13 = 22657;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v14)
      {
        case 0:
          sub_244CB3E8C(a2, (unsigned char *)a1, (uint64_t)&v12);
          break;
        case 1:
          sub_2446D1A48(a2, (unsigned char *)(a1 + 1), &v10);
          goto LABEL_10;
        case 2:
          sub_244CB3F40(a2, (_WORD *)(a1 + 2), (uint64_t)&v10);
          goto LABEL_10;
        case 3:
          uint64_t v7 = a2;
          long long v8 = (unsigned char *)(a1 + 4);
          goto LABEL_9;
        case 4:
          uint64_t v7 = a2;
          long long v8 = (unsigned char *)(a1 + 5);
LABEL_9:
          sub_24484B184(v7, v8, &v10);
LABEL_10:
          long long v12 = v10;
          uint64_t v13 = v11;
          break;
        default:
          break;
      }
      double result = *(double *)&v12;
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
      int v6 = v16;
      if (v16 == 1) {
        goto LABEL_13;
      }
    }
  }
  return result;
}

double sub_244829F90@<D0>(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  sub_2447F1C40((uint64_t)&v7, 0, a1);
  if (!v8)
  {
    sub_244CB68B8();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB68B8();
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB68B8();
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
          long long v8 = v11;
          uint64_t v9 = v12;
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_24482A0DC@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  int v6 = v16;
  if (v16 == 1)
  {
LABEL_12:
    double result = *(double *)&v14;
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 16) = v15;
  }
  else
  {
    while (1)
    {
      long long v12 = xmmword_2651976D0;
      uint64_t v13 = 22710;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v14)
      {
        case 0:
          sub_24482A24C(a2, a1, &v12);
          break;
        case 1:
          sub_244CB3E8C(a2, a1 + 1, (uint64_t)&v10);
          goto LABEL_9;
        case 2:
          uint64_t v7 = a2;
          long long v8 = a1 + 2;
          goto LABEL_8;
        case 3:
          uint64_t v7 = a2;
          long long v8 = a1 + 3;
LABEL_8:
          sub_24484B184(v7, v8, &v10);
LABEL_9:
          long long v12 = v10;
          uint64_t v13 = v11;
          break;
        default:
          break;
      }
      double result = *(double *)&v12;
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
      int v6 = v16;
      if (v16 == 1) {
        goto LABEL_12;
      }
    }
  }
  return result;
}

uint64_t sub_24482A24C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  uint64_t result = sub_2446D1AAC(a1, a2, a3);
  if (!*(_DWORD *)a3)
  {
    unsigned int v6 = *a2;
    if (v6 >= 4) {
      LOBYTE(v6) = 2;
    }
    *a2 = v6;
    *(_DWORD *)a3 = 0;
    a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
    *((_DWORD *)a3 + 4) = 61;
  }
  return result;
}

double sub_24482A2B0@<D0>(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  sub_2447F4DC8((uint64_t)&v7, 0, a1);
  if (!v8)
  {
    sub_244CB68B8();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB68B8();
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB68B8();
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_244CB68B8();
          uint64_t v9 = v12;
          long long v8 = v11;
          if (!v11)
          {
            sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
            long long v8 = v11;
            uint64_t v9 = v12;
          }
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_24482A428@<D0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v19[0] = 0;
  uint64_t v20 = a2;
  sub_2447ED6F8((uint64_t)v19, (uint64_t)&v16);
  int v6 = v18;
  if (v18 == 1)
  {
LABEL_14:
    double result = *(double *)&v16;
    *(_OWORD *)a3 = v16;
    *(void *)(a3 + 16) = v17;
  }
  else
  {
    while (1)
    {
      long long v14 = xmmword_2651976E8;
      uint64_t v15 = 22760;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v16)
      {
        case 0:
          sub_24482A5B0(a2, a1, &v14);
          break;
        case 1:
          uint64_t v7 = a2;
          long long v8 = a1 + 1;
          goto LABEL_7;
        case 2:
          uint64_t v7 = a2;
          long long v8 = a1 + 2;
LABEL_7:
          sub_244CB3E8C(v7, v8, (uint64_t)&v12);
          goto LABEL_11;
        case 3:
          uint64_t v9 = a2;
          int v10 = a1 + 3;
          goto LABEL_10;
        case 4:
          uint64_t v9 = a2;
          int v10 = a1 + 4;
LABEL_10:
          sub_24484B184(v9, v10, &v12);
LABEL_11:
          long long v14 = v12;
          uint64_t v15 = v13;
          break;
        default:
          break;
      }
      double result = *(double *)&v14;
      *(_OWORD *)a3 = v14;
      *(void *)(a3 + 16) = v15;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v19, (uint64_t)&v16);
      int v6 = v18;
      if (v18 == 1) {
        goto LABEL_14;
      }
    }
  }
  return result;
}

uint64_t sub_24482A5B0@<X0>(uint64_t a1@<X0>, char *a2@<X1>, void *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  uint64_t result = sub_2446D1AAC(a1, a2, a3);
  if (!*(_DWORD *)a3)
  {
    int v6 = *a2;
    if (v6 == 3) {
      char v7 = 3;
    }
    else {
      char v7 = 0;
    }
    if (v6 == 1) {
      char v8 = 1;
    }
    else {
      char v8 = v7;
    }
    *a2 = v8;
    *(_DWORD *)a3 = 0;
    a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
    *((_DWORD *)a3 + 4) = 61;
  }
  return result;
}

double sub_24482A618@<D0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  sub_244CB7594(a1, a2, 21, &v8, (uint64_t)&v9);
  long long v6 = v9;
  uint64_t v7 = v10;
  if (!v9)
  {
    sub_244CB68B8();
    uint64_t v7 = v10;
    long long v6 = v9;
    if (!v9)
    {
      sub_244CB6904();
      uint64_t v7 = v10;
      long long v6 = v9;
      if (!v9)
      {
        sub_244CB68B8();
        uint64_t v7 = v10;
        long long v6 = v9;
        if (!v9)
        {
          sub_244CB68B8();
          uint64_t v7 = v10;
          long long v6 = v9;
          if (!v9)
          {
            sub_244CB7708((uint64_t)a1, v8, (uint64_t)&v9);
            long long v6 = v9;
            uint64_t v7 = v10;
          }
        }
      }
    }
  }
  double result = *(double *)&v6;
  *(_OWORD *)a3 = v6;
  *(void *)(a3 + 16) = v7;
  return result;
}

double sub_24482A780@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  int v6 = v16;
  if (v16 == 1)
  {
LABEL_12:
    double result = *(double *)&v14;
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 16) = v15;
  }
  else
  {
    while (1)
    {
      long long v12 = xmmword_265197700;
      uint64_t v13 = 22813;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v14)
      {
        case 0:
          sub_244CB3E8C(a2, (unsigned char *)a1, (uint64_t)&v12);
          break;
        case 1:
          sub_244CB3F40(a2, (_WORD *)(a1 + 2), (uint64_t)&v10);
          goto LABEL_9;
        case 2:
          uint64_t v7 = a2;
          int v8 = (unsigned char *)(a1 + 4);
          goto LABEL_8;
        case 3:
          uint64_t v7 = a2;
          int v8 = (unsigned char *)(a1 + 5);
LABEL_8:
          sub_24484B184(v7, v8, &v10);
LABEL_9:
          long long v12 = v10;
          uint64_t v13 = v11;
          break;
        default:
          break;
      }
      double result = *(double *)&v12;
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
      int v6 = v16;
      if (v16 == 1) {
        goto LABEL_12;
      }
    }
  }
  return result;
}

double sub_24482A8F0@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  int v6 = v16;
  if (v16 == 1)
  {
LABEL_12:
    double result = *(double *)&v14;
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 16) = v15;
  }
  else
  {
    while (1)
    {
      long long v12 = xmmword_265197718;
      uint64_t v13 = 22862;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v14)
      {
        case 0:
          sub_24482A24C(a2, a1, &v12);
          break;
        case 1:
          sub_244CB3E8C(a2, a1 + 1, (uint64_t)&v10);
          goto LABEL_9;
        case 2:
          uint64_t v7 = a2;
          int v8 = a1 + 2;
          goto LABEL_8;
        case 3:
          uint64_t v7 = a2;
          int v8 = a1 + 3;
LABEL_8:
          sub_24484B184(v7, v8, &v10);
LABEL_9:
          long long v12 = v10;
          uint64_t v13 = v11;
          break;
        default:
          break;
      }
      double result = *(double *)&v12;
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
      int v6 = v16;
      if (v16 == 1) {
        goto LABEL_12;
      }
    }
  }
  return result;
}

double sub_24482AA60@<D0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v19[0] = 0;
  uint64_t v20 = a2;
  sub_2447ED6F8((uint64_t)v19, (uint64_t)&v16);
  int v6 = v18;
  if (v18 == 1)
  {
LABEL_14:
    double result = *(double *)&v16;
    *(_OWORD *)a3 = v16;
    *(void *)(a3 + 16) = v17;
  }
  else
  {
    while (1)
    {
      long long v14 = xmmword_265197730;
      uint64_t v15 = 22912;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v16)
      {
        case 0:
          sub_24482A5B0(a2, a1, &v14);
          break;
        case 1:
          uint64_t v7 = a2;
          int v8 = a1 + 1;
          goto LABEL_7;
        case 2:
          uint64_t v7 = a2;
          int v8 = a1 + 2;
LABEL_7:
          sub_244CB3E8C(v7, v8, (uint64_t)&v12);
          goto LABEL_11;
        case 3:
          uint64_t v9 = a2;
          long long v10 = a1 + 3;
          goto LABEL_10;
        case 4:
          uint64_t v9 = a2;
          long long v10 = a1 + 4;
LABEL_10:
          sub_24484B184(v9, v10, &v12);
LABEL_11:
          long long v14 = v12;
          uint64_t v15 = v13;
          break;
        default:
          break;
      }
      double result = *(double *)&v14;
      *(_OWORD *)a3 = v14;
      *(void *)(a3 + 16) = v15;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v19, (uint64_t)&v16);
      int v6 = v18;
      if (v18 == 1) {
        goto LABEL_14;
      }
    }
  }
  return result;
}

double sub_24482ABE8@<D0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  sub_244CB7594(a1, a2, 21, &v8, (uint64_t)&v9);
  long long v6 = v9;
  uint64_t v7 = v10;
  if (!v9)
  {
    sub_244CB68B8();
    uint64_t v7 = v10;
    long long v6 = v9;
    if (!v9)
    {
      sub_244CB68B8();
      uint64_t v7 = v10;
      long long v6 = v9;
      if (!v9)
      {
        sub_244CB6904();
        uint64_t v7 = v10;
        long long v6 = v9;
        if (!v9)
        {
          sub_244CB68B8();
          uint64_t v7 = v10;
          long long v6 = v9;
          if (!v9)
          {
            sub_244CB68B8();
            uint64_t v7 = v10;
            long long v6 = v9;
            if (!v9)
            {
              sub_244CB7708((uint64_t)a1, v8, (uint64_t)&v9);
              long long v6 = v9;
              uint64_t v7 = v10;
            }
          }
        }
      }
    }
  }
  double result = *(double *)&v6;
  *(_OWORD *)a3 = v6;
  *(void *)(a3 + 16) = v7;
  return result;
}

double sub_24482AD7C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  int v6 = v16;
  if (v16 == 1)
  {
LABEL_13:
    double result = *(double *)&v14;
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 16) = v15;
  }
  else
  {
    while (1)
    {
      long long v12 = xmmword_265197748;
      uint64_t v13 = 22966;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v14)
      {
        case 0:
          sub_244CB3E8C(a2, (unsigned char *)a1, (uint64_t)&v12);
          break;
        case 1:
          sub_244CB3E8C(a2, (unsigned char *)(a1 + 1), (uint64_t)&v10);
          goto LABEL_10;
        case 2:
          sub_244CB3F40(a2, (_WORD *)(a1 + 2), (uint64_t)&v10);
          goto LABEL_10;
        case 3:
          uint64_t v7 = a2;
          int v8 = (unsigned char *)(a1 + 4);
          goto LABEL_9;
        case 4:
          uint64_t v7 = a2;
          int v8 = (unsigned char *)(a1 + 5);
LABEL_9:
          sub_24484B184(v7, v8, &v10);
LABEL_10:
          long long v12 = v10;
          uint64_t v13 = v11;
          break;
        default:
          break;
      }
      double result = *(double *)&v12;
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
      int v6 = v16;
      if (v16 == 1) {
        goto LABEL_13;
      }
    }
  }
  return result;
}

double sub_24482AF08@<D0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  sub_244CB7594(a1, a2, 21, &v8, (uint64_t)&v9);
  long long v6 = v9;
  uint64_t v7 = v10;
  if (!v9)
  {
    sub_244CB6904();
    uint64_t v7 = v10;
    long long v6 = v9;
    if (!v9)
    {
      sub_244CB6904();
      uint64_t v7 = v10;
      long long v6 = v9;
      if (!v9)
      {
        sub_244CB6904();
        uint64_t v7 = v10;
        long long v6 = v9;
        if (!v9)
        {
          sub_244CB68B8();
          uint64_t v7 = v10;
          long long v6 = v9;
          if (!v9)
          {
            sub_244CB68B8();
            uint64_t v7 = v10;
            long long v6 = v9;
            if (!v9)
            {
              sub_244CB7708((uint64_t)a1, v8, (uint64_t)&v9);
              long long v6 = v9;
              uint64_t v7 = v10;
            }
          }
        }
      }
    }
  }
  double result = *(double *)&v6;
  *(_OWORD *)a3 = v6;
  *(void *)(a3 + 16) = v7;
  return result;
}

double sub_24482B09C@<D0>(_WORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v19[0] = 0;
  uint64_t v20 = a2;
  sub_2447ED6F8((uint64_t)v19, (uint64_t)&v16);
  int v6 = v18;
  if (v18 == 1)
  {
LABEL_14:
    double result = *(double *)&v16;
    *(_OWORD *)a3 = v16;
    *(void *)(a3 + 16) = v17;
  }
  else
  {
    while (1)
    {
      long long v14 = xmmword_265197760;
      uint64_t v15 = 23020;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v16)
      {
        case 0:
          sub_244CB3F40(a2, a1, (uint64_t)&v14);
          break;
        case 1:
          uint64_t v7 = a2;
          int v8 = a1 + 1;
          goto LABEL_7;
        case 2:
          uint64_t v7 = a2;
          int v8 = a1 + 2;
LABEL_7:
          sub_244CB3F40(v7, v8, (uint64_t)&v12);
          goto LABEL_11;
        case 3:
          uint64_t v9 = a2;
          uint64_t v10 = a1 + 3;
          goto LABEL_10;
        case 4:
          uint64_t v9 = a2;
          uint64_t v10 = (char *)a1 + 7;
LABEL_10:
          sub_24484B184(v9, v10, &v12);
LABEL_11:
          long long v14 = v12;
          uint64_t v15 = v13;
          break;
        default:
          break;
      }
      double result = *(double *)&v14;
      *(_OWORD *)a3 = v14;
      *(void *)(a3 + 16) = v15;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v19, (uint64_t)&v16);
      int v6 = v18;
      if (v18 == 1) {
        goto LABEL_14;
      }
    }
  }
  return result;
}

double sub_24482B224@<D0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  sub_244CB7594(a1, a2, 21, &v8, (uint64_t)&v9);
  long long v6 = v9;
  uint64_t v7 = v10;
  if (!v9)
  {
    sub_244CB69F4();
    uint64_t v7 = v10;
    long long v6 = v9;
    if (!v9)
    {
      sub_244CB69F4();
      uint64_t v7 = v10;
      long long v6 = v9;
      if (!v9)
      {
        sub_244CB68B8();
        uint64_t v7 = v10;
        long long v6 = v9;
        if (!v9)
        {
          sub_244CB68B8();
          uint64_t v7 = v10;
          long long v6 = v9;
          if (!v9)
          {
            sub_244CB7708((uint64_t)a1, v8, (uint64_t)&v9);
            long long v6 = v9;
            uint64_t v7 = v10;
          }
        }
      }
    }
  }
  double result = *(double *)&v6;
  *(_OWORD *)a3 = v6;
  *(void *)(a3 + 16) = v7;
  return result;
}

double sub_24482B38C@<D0>(_WORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  int v6 = v16;
  if (v16 == 1)
  {
LABEL_12:
    double result = *(double *)&v14;
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 16) = v15;
  }
  else
  {
    while (1)
    {
      long long v12 = xmmword_265197778;
      uint64_t v13 = 23073;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v14)
      {
        case 0:
          sub_244CB3D8C(a2, a1, (uint64_t)&v12);
          break;
        case 1:
          sub_244CB3D8C(a2, a1 + 1, (uint64_t)&v10);
          goto LABEL_9;
        case 2:
          uint64_t v7 = a2;
          int v8 = a1 + 2;
          goto LABEL_8;
        case 3:
          uint64_t v7 = a2;
          int v8 = (char *)a1 + 5;
LABEL_8:
          sub_24484B184(v7, v8, &v10);
LABEL_9:
          long long v12 = v10;
          uint64_t v13 = v11;
          break;
        default:
          break;
      }
      double result = *(double *)&v12;
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
      int v6 = v16;
      if (v16 == 1) {
        goto LABEL_12;
      }
    }
  }
  return result;
}

double sub_24482B4FC@<D0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  sub_244CB7594(a1, a2, 21, &v8, (uint64_t)&v9);
  long long v6 = v9;
  uint64_t v7 = v10;
  if (!v9)
  {
    sub_244CB69F4();
    uint64_t v7 = v10;
    long long v6 = v9;
    if (!v9)
    {
      sub_244CB69F4();
      uint64_t v7 = v10;
      long long v6 = v9;
      if (!v9)
      {
        sub_244CB6904();
        uint64_t v7 = v10;
        long long v6 = v9;
        if (!v9)
        {
          sub_244CB68B8();
          uint64_t v7 = v10;
          long long v6 = v9;
          if (!v9)
          {
            sub_244CB68B8();
            uint64_t v7 = v10;
            long long v6 = v9;
            if (!v9)
            {
              sub_244CB7708((uint64_t)a1, v8, (uint64_t)&v9);
              long long v6 = v9;
              uint64_t v7 = v10;
            }
          }
        }
      }
    }
  }
  double result = *(double *)&v6;
  *(_OWORD *)a3 = v6;
  *(void *)(a3 + 16) = v7;
  return result;
}

double sub_24482B690@<D0>(_WORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  int v6 = v16;
  if (v16 == 1)
  {
LABEL_13:
    double result = *(double *)&v14;
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 16) = v15;
  }
  else
  {
    while (1)
    {
      long long v12 = xmmword_265197790;
      uint64_t v13 = 23123;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v14)
      {
        case 0:
          sub_244CB3D8C(a2, a1, (uint64_t)&v12);
          break;
        case 1:
          sub_244CB3D8C(a2, a1 + 1, (uint64_t)&v10);
          goto LABEL_10;
        case 2:
          sub_244CB3F40(a2, a1 + 2, (uint64_t)&v10);
          goto LABEL_10;
        case 3:
          uint64_t v7 = a2;
          int v8 = a1 + 3;
          goto LABEL_9;
        case 4:
          uint64_t v7 = a2;
          int v8 = (char *)a1 + 7;
LABEL_9:
          sub_24484B184(v7, v8, &v10);
LABEL_10:
          long long v12 = v10;
          uint64_t v13 = v11;
          break;
        default:
          break;
      }
      double result = *(double *)&v12;
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
      int v6 = v16;
      if (v16 == 1) {
        goto LABEL_13;
      }
    }
  }
  return result;
}

double sub_24482B81C@<D0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  sub_244CB7594(a1, a2, 21, &v8, (uint64_t)&v9);
  long long v6 = v9;
  uint64_t v7 = v10;
  if (!v9)
  {
    sub_244CB6904();
    uint64_t v7 = v10;
    long long v6 = v9;
    if (!v9)
    {
      sub_244CB6904();
      uint64_t v7 = v10;
      long long v6 = v9;
      if (!v9)
      {
        sub_244CB68B8();
        uint64_t v7 = v10;
        long long v6 = v9;
        if (!v9)
        {
          sub_244CB68B8();
          uint64_t v7 = v10;
          long long v6 = v9;
          if (!v9)
          {
            sub_244CB7708((uint64_t)a1, v8, (uint64_t)&v9);
            long long v6 = v9;
            uint64_t v7 = v10;
          }
        }
      }
    }
  }
  double result = *(double *)&v6;
  *(_OWORD *)a3 = v6;
  *(void *)(a3 + 16) = v7;
  return result;
}

double sub_24482B984@<D0>(_WORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  int v6 = v16;
  if (v16 == 1)
  {
LABEL_12:
    double result = *(double *)&v14;
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 16) = v15;
  }
  else
  {
    while (1)
    {
      long long v12 = xmmword_2651977A8;
      uint64_t v13 = 23176;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v14)
      {
        case 0:
          sub_244CB3F40(a2, a1, (uint64_t)&v12);
          break;
        case 1:
          sub_244CB3F40(a2, a1 + 1, (uint64_t)&v10);
          goto LABEL_9;
        case 2:
          uint64_t v7 = a2;
          int v8 = a1 + 2;
          goto LABEL_8;
        case 3:
          uint64_t v7 = a2;
          int v8 = (char *)a1 + 5;
LABEL_8:
          sub_24484B184(v7, v8, &v10);
LABEL_9:
          long long v12 = v10;
          uint64_t v13 = v11;
          break;
        default:
          break;
      }
      double result = *(double *)&v12;
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
      int v6 = v16;
      if (v16 == 1) {
        goto LABEL_12;
      }
    }
  }
  return result;
}

double sub_24482BAF4@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB6904();
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  sub_2447EF794((uint64_t)&v7, 1, (unsigned char *)(a1 + 2));
  if (!v8)
  {
    sub_244CB6904();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB68B8();
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB68B8();
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
          long long v8 = v11;
          uint64_t v9 = v12;
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_24482BC6C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  int v6 = v16;
  if (v16 == 1)
  {
LABEL_13:
    double result = *(double *)&v14;
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 16) = v15;
  }
  else
  {
    while (1)
    {
      long long v12 = xmmword_2651977C0;
      uint64_t v13 = 23226;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v14)
      {
        case 0:
          sub_244CB3F40(a2, (_WORD *)a1, (uint64_t)&v12);
          break;
        case 1:
          sub_2446D1A48(a2, (unsigned char *)(a1 + 2), &v10);
          goto LABEL_10;
        case 2:
          sub_244CB3F40(a2, (_WORD *)(a1 + 4), (uint64_t)&v10);
          goto LABEL_10;
        case 3:
          uint64_t v7 = a2;
          long long v8 = (unsigned char *)(a1 + 6);
          goto LABEL_9;
        case 4:
          uint64_t v7 = a2;
          long long v8 = (unsigned char *)(a1 + 7);
LABEL_9:
          sub_24484B184(v7, v8, &v10);
LABEL_10:
          long long v12 = v10;
          uint64_t v13 = v11;
          break;
        default:
          break;
      }
      double result = *(double *)&v12;
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
      int v6 = v16;
      if (v16 == 1) {
        goto LABEL_13;
      }
    }
  }
  return result;
}

double sub_24482BDF8@<D0>(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  sub_2447F1C40((uint64_t)&v7, 0, a1);
  if (!v8)
  {
    sub_244CB6904();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB68B8();
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB68B8();
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
          long long v8 = v11;
          uint64_t v9 = v12;
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_24482BF44@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  int v6 = v16;
  if (v16 == 1)
  {
LABEL_12:
    double result = *(double *)&v14;
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 16) = v15;
  }
  else
  {
    while (1)
    {
      long long v12 = xmmword_2651977D8;
      uint64_t v13 = 23279;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v14)
      {
        case 0:
          sub_24482A24C(a2, (unsigned char *)a1, &v12);
          break;
        case 1:
          sub_244CB3F40(a2, (_WORD *)(a1 + 2), (uint64_t)&v10);
          goto LABEL_9;
        case 2:
          uint64_t v7 = a2;
          long long v8 = (unsigned char *)(a1 + 4);
          goto LABEL_8;
        case 3:
          uint64_t v7 = a2;
          long long v8 = (unsigned char *)(a1 + 5);
LABEL_8:
          sub_24484B184(v7, v8, &v10);
LABEL_9:
          long long v12 = v10;
          uint64_t v13 = v11;
          break;
        default:
          break;
      }
      double result = *(double *)&v12;
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
      int v6 = v16;
      if (v16 == 1) {
        goto LABEL_12;
      }
    }
  }
  return result;
}

double sub_24482C0B4@<D0>(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  sub_2447F4DC8((uint64_t)&v7, 0, a1);
  if (!v8)
  {
    sub_244CB6904();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB6904();
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB68B8();
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_244CB68B8();
          uint64_t v9 = v12;
          long long v8 = v11;
          if (!v11)
          {
            sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
            long long v8 = v11;
            uint64_t v9 = v12;
          }
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_24482C22C@<D0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v19[0] = 0;
  uint64_t v20 = a2;
  sub_2447ED6F8((uint64_t)v19, (uint64_t)&v16);
  int v6 = v18;
  if (v18 == 1)
  {
LABEL_14:
    double result = *(double *)&v16;
    *(_OWORD *)a3 = v16;
    *(void *)(a3 + 16) = v17;
  }
  else
  {
    while (1)
    {
      long long v14 = xmmword_2651977F0;
      uint64_t v15 = 23329;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v16)
      {
        case 0:
          sub_24482A5B0(a2, a1, &v14);
          break;
        case 1:
          uint64_t v7 = a2;
          long long v8 = a1 + 2;
          goto LABEL_7;
        case 2:
          uint64_t v7 = a2;
          long long v8 = a1 + 4;
LABEL_7:
          sub_244CB3F40(v7, v8, (uint64_t)&v12);
          goto LABEL_11;
        case 3:
          uint64_t v9 = a2;
          int v10 = a1 + 6;
          goto LABEL_10;
        case 4:
          uint64_t v9 = a2;
          int v10 = a1 + 7;
LABEL_10:
          sub_24484B184(v9, v10, &v12);
LABEL_11:
          long long v14 = v12;
          uint64_t v15 = v13;
          break;
        default:
          break;
      }
      double result = *(double *)&v14;
      *(_OWORD *)a3 = v14;
      *(void *)(a3 + 16) = v15;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v19, (uint64_t)&v16);
      int v6 = v18;
      if (v18 == 1) {
        goto LABEL_14;
      }
    }
  }
  return result;
}

double sub_24482C3B4@<D0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  sub_244CB7594(a1, a2, 21, &v8, (uint64_t)&v9);
  long long v6 = v9;
  uint64_t v7 = v10;
  if (!v9)
  {
    sub_244CB6904();
    uint64_t v7 = v10;
    long long v6 = v9;
    if (!v9)
    {
      sub_244CB68B8();
      uint64_t v7 = v10;
      long long v6 = v9;
      if (!v9)
      {
        sub_244CB6904();
        uint64_t v7 = v10;
        long long v6 = v9;
        if (!v9)
        {
          sub_244CB68B8();
          uint64_t v7 = v10;
          long long v6 = v9;
          if (!v9)
          {
            sub_244CB68B8();
            uint64_t v7 = v10;
            long long v6 = v9;
            if (!v9)
            {
              sub_244CB7708((uint64_t)a1, v8, (uint64_t)&v9);
              long long v6 = v9;
              uint64_t v7 = v10;
            }
          }
        }
      }
    }
  }
  double result = *(double *)&v6;
  *(_OWORD *)a3 = v6;
  *(void *)(a3 + 16) = v7;
  return result;
}

double sub_24482C548@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  int v6 = v16;
  if (v16 == 1)
  {
LABEL_13:
    double result = *(double *)&v14;
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 16) = v15;
  }
  else
  {
    while (1)
    {
      long long v12 = xmmword_265197808;
      uint64_t v13 = 23383;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v14)
      {
        case 0:
          sub_244CB3F40(a2, (_WORD *)a1, (uint64_t)&v12);
          break;
        case 1:
          sub_244CB3E8C(a2, (unsigned char *)(a1 + 2), (uint64_t)&v10);
          goto LABEL_10;
        case 2:
          sub_244CB3F40(a2, (_WORD *)(a1 + 4), (uint64_t)&v10);
          goto LABEL_10;
        case 3:
          uint64_t v7 = a2;
          int v8 = (unsigned char *)(a1 + 6);
          goto LABEL_9;
        case 4:
          uint64_t v7 = a2;
          int v8 = (unsigned char *)(a1 + 7);
LABEL_9:
          sub_24484B184(v7, v8, &v10);
LABEL_10:
          long long v12 = v10;
          uint64_t v13 = v11;
          break;
        default:
          break;
      }
      double result = *(double *)&v12;
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
      int v6 = v16;
      if (v16 == 1) {
        goto LABEL_13;
      }
    }
  }
  return result;
}

double sub_24482C6D4@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB68B8();
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  sub_2447F06A4((uint64_t)&v7, 1, (unsigned char *)(a1 + 1));
  sub_2447F1C40((uint64_t)&v7, 2, (unsigned char *)(a1 + 2));
  if (!v8)
  {
    sub_244CB6904();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB6904();
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB68B8();
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_244CB68B8();
          uint64_t v9 = v12;
          long long v8 = v11;
          if (!v11)
          {
            sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
            long long v8 = v11;
            uint64_t v9 = v12;
          }
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_24482C888@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v19[0] = 0;
  uint64_t v20 = a2;
  sub_2447ED6F8((uint64_t)v19, (uint64_t)&v16);
  int v6 = v18;
  if (v18 == 1)
  {
LABEL_16:
    double result = *(double *)&v16;
    *(_OWORD *)a3 = v16;
    *(void *)(a3 + 16) = v17;
  }
  else
  {
    while (1)
    {
      long long v14 = xmmword_265197820;
      uint64_t v15 = 23439;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v16)
      {
        case 0:
          sub_24484B184(a2, a1, &v14);
          break;
        case 1:
          sub_2447F5F24(a2, a1 + 1, &v12);
          goto LABEL_13;
        case 2:
          sub_2447F1DCC(a2, a1 + 2, &v12);
          goto LABEL_13;
        case 3:
          uint64_t v7 = a2;
          long long v8 = a1 + 4;
          goto LABEL_9;
        case 4:
          uint64_t v7 = a2;
          long long v8 = a1 + 6;
LABEL_9:
          sub_244CB3F40(v7, v8, (uint64_t)&v12);
          goto LABEL_13;
        case 5:
          uint64_t v9 = a2;
          int v10 = a1 + 8;
          goto LABEL_12;
        case 6:
          uint64_t v9 = a2;
          int v10 = a1 + 9;
LABEL_12:
          sub_24484B184(v9, v10, &v12);
LABEL_13:
          long long v14 = v12;
          uint64_t v15 = v13;
          break;
        default:
          break;
      }
      double result = *(double *)&v14;
      *(_OWORD *)a3 = v14;
      *(void *)(a3 + 16) = v15;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v19, (uint64_t)&v16);
      int v6 = v18;
      if (v18 == 1) {
        goto LABEL_16;
      }
    }
  }
  return result;
}

double sub_24482CA50@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265197838;
      uint64_t v11 = 23498;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_24484B184(a2, a1 + 1, &v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_24484B184(a2, a1, &v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_24482CB60@<D0>(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  sub_2447F1C40((uint64_t)&v7, 0, a1);
  if (!v8)
  {
    sub_244CB6904();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB6904();
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB6904();
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_244CB68B8();
          uint64_t v9 = v12;
          long long v8 = v11;
          if (!v11)
          {
            sub_244CB68B8();
            uint64_t v9 = v12;
            long long v8 = v11;
            if (!v11)
            {
              sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
              long long v8 = v11;
              uint64_t v9 = v12;
            }
          }
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_24482CD04@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v19[0] = 0;
  uint64_t v20 = a2;
  sub_2447ED6F8((uint64_t)v19, (uint64_t)&v16);
  int v6 = v18;
  if (v18 == 1)
  {
LABEL_15:
    double result = *(double *)&v16;
    *(_OWORD *)a3 = v16;
    *(void *)(a3 + 16) = v17;
  }
  else
  {
    while (1)
    {
      long long v14 = xmmword_265197850;
      uint64_t v15 = 23541;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v16)
      {
        case 0:
          sub_24482A24C(a2, a1, &v14);
          break;
        case 1:
          uint64_t v7 = a2;
          long long v8 = a1 + 2;
          goto LABEL_8;
        case 2:
          uint64_t v7 = a2;
          long long v8 = a1 + 4;
          goto LABEL_8;
        case 3:
          uint64_t v7 = a2;
          long long v8 = a1 + 6;
LABEL_8:
          sub_244CB3F40(v7, v8, (uint64_t)&v12);
          goto LABEL_12;
        case 4:
          uint64_t v9 = a2;
          int v10 = a1 + 8;
          goto LABEL_11;
        case 5:
          uint64_t v9 = a2;
          int v10 = a1 + 9;
LABEL_11:
          sub_24484B184(v9, v10, &v12);
LABEL_12:
          long long v14 = v12;
          uint64_t v15 = v13;
          break;
        default:
          break;
      }
      double result = *(double *)&v14;
      *(_OWORD *)a3 = v14;
      *(void *)(a3 + 16) = v15;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v19, (uint64_t)&v16);
      int v6 = v18;
      if (v18 == 1) {
        goto LABEL_15;
      }
    }
  }
  return result;
}

double sub_24482CEAC@<D0>(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  sub_2447F4DC8((uint64_t)&v7, 0, a1);
  if (!v8)
  {
    sub_244CB6904();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB6904();
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB6904();
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_244CB6904();
          uint64_t v9 = v12;
          long long v8 = v11;
          if (!v11)
          {
            sub_244CB68B8();
            uint64_t v9 = v12;
            long long v8 = v11;
            if (!v11)
            {
              sub_244CB68B8();
              uint64_t v9 = v12;
              long long v8 = v11;
              if (!v11)
              {
                sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
                long long v8 = v11;
                uint64_t v9 = v12;
              }
            }
          }
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_24482D07C@<D0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v19[0] = 0;
  uint64_t v20 = a2;
  sub_2447ED6F8((uint64_t)v19, (uint64_t)&v16);
  int v6 = v18;
  if (v18 == 1)
  {
LABEL_16:
    double result = *(double *)&v16;
    *(_OWORD *)a3 = v16;
    *(void *)(a3 + 16) = v17;
  }
  else
  {
    while (1)
    {
      long long v14 = xmmword_265197868;
      uint64_t v15 = 23601;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v16)
      {
        case 0:
          sub_24482A5B0(a2, a1, &v14);
          break;
        case 1:
          uint64_t v7 = a2;
          long long v8 = a1 + 2;
          goto LABEL_9;
        case 2:
          uint64_t v7 = a2;
          long long v8 = a1 + 4;
          goto LABEL_9;
        case 3:
          uint64_t v7 = a2;
          long long v8 = a1 + 6;
          goto LABEL_9;
        case 4:
          uint64_t v7 = a2;
          long long v8 = a1 + 8;
LABEL_9:
          sub_244CB3F40(v7, v8, (uint64_t)&v12);
          goto LABEL_13;
        case 5:
          uint64_t v9 = a2;
          int v10 = a1 + 10;
          goto LABEL_12;
        case 6:
          uint64_t v9 = a2;
          int v10 = a1 + 11;
LABEL_12:
          sub_24484B184(v9, v10, &v12);
LABEL_13:
          long long v14 = v12;
          uint64_t v15 = v13;
          break;
        default:
          break;
      }
      double result = *(double *)&v14;
      *(_OWORD *)a3 = v14;
      *(void *)(a3 + 16) = v15;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v19, (uint64_t)&v16);
      int v6 = v18;
      if (v18 == 1) {
        goto LABEL_16;
      }
    }
  }
  return result;
}

void sub_24482D23C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4 = (unsigned char *)a1;
  int v5 = *(_DWORD *)(a3 + 8);
  switch(v5)
  {
    case 0:
      goto LABEL_51;
    case 1:
      int v4 = (unsigned char *)(a1 + 1);
LABEL_51:
      sub_244CB3E8C(a2, v4, a4);
      return;
    case 2:
      uint64_t v7 = (_WORD *)(a1 + 2);
      goto LABEL_65;
    case 3:
      uint64_t v7 = (_WORD *)(a1 + 4);
      goto LABEL_65;
    case 4:
      uint64_t v7 = (_WORD *)(a1 + 6);
      goto LABEL_65;
    case 5:
      sub_2447FACE4(a2, (unsigned char *)(a1 + 8), (void *)a4);
      return;
    case 6:
      sub_244CB41F0(a2, (_OWORD *)(a1 + 16), (void *)a4);
      return;
    case 7:
      uint64_t v7 = (_WORD *)(a1 + 32);
      goto LABEL_65;
    case 8:
      sub_2447F5F24(a2, (unsigned char *)(a1 + 34), (void *)a4);
      return;
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 20:
    case 24:
    case 28:
    case 29:
    case 30:
    case 31:
    case 35:
    case 39:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 53:
    case 57:
LABEL_8:
      *(_DWORD *)a4 = 0;
      *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-common"
                            "/app-common/zap-generated/cluster-objects.cpp";
      *(_DWORD *)(a4 + 16) = 23764;
      return;
    case 15:
      sub_24484B184(a2, (unsigned char *)(a1 + 35), (void *)a4);
      return;
    case 16:
      uint64_t v9 = (unsigned __int8 *)(a1 + 36);
      goto LABEL_47;
    case 17:
      uint64_t v7 = (_WORD *)(a1 + 38);
      goto LABEL_65;
    case 18:
      uint64_t v7 = (_WORD *)(a1 + 40);
      goto LABEL_65;
    case 19:
      uint64_t v9 = (unsigned __int8 *)(a1 + 42);
      goto LABEL_47;
    case 21:
      uint64_t v7 = (_WORD *)(a1 + 44);
      goto LABEL_65;
    case 22:
      uint64_t v7 = (_WORD *)(a1 + 46);
      goto LABEL_65;
    case 23:
      uint64_t v9 = (unsigned __int8 *)(a1 + 48);
      goto LABEL_47;
    case 25:
      uint64_t v7 = (_WORD *)(a1 + 50);
      goto LABEL_65;
    case 26:
      uint64_t v7 = (_WORD *)(a1 + 52);
      goto LABEL_65;
    case 27:
      uint64_t v9 = (unsigned __int8 *)(a1 + 54);
      goto LABEL_47;
    case 32:
      uint64_t v7 = (_WORD *)(a1 + 56);
      goto LABEL_65;
    case 33:
      uint64_t v7 = (_WORD *)(a1 + 58);
      goto LABEL_65;
    case 34:
      uint64_t v9 = (unsigned __int8 *)(a1 + 60);
      goto LABEL_47;
    case 36:
      uint64_t v7 = (_WORD *)(a1 + 62);
      goto LABEL_65;
    case 37:
      uint64_t v7 = (_WORD *)(a1 + 64);
      goto LABEL_65;
    case 38:
      uint64_t v9 = (unsigned __int8 *)(a1 + 66);
      goto LABEL_47;
    case 40:
      uint64_t v7 = (_WORD *)(a1 + 68);
      goto LABEL_65;
    case 41:
      uint64_t v7 = (_WORD *)(a1 + 70);
      goto LABEL_65;
    case 42:
      uint64_t v9 = (unsigned __int8 *)(a1 + 72);
      goto LABEL_47;
    case 48:
      uint64_t v7 = (_WORD *)(a1 + 74);
      goto LABEL_65;
    case 49:
      uint64_t v7 = (_WORD *)(a1 + 76);
      goto LABEL_65;
    case 50:
      uint64_t v7 = (_WORD *)(a1 + 78);
      goto LABEL_65;
    case 51:
      uint64_t v7 = (_WORD *)(a1 + 80);
      goto LABEL_65;
    case 52:
      uint64_t v9 = (unsigned __int8 *)(a1 + 82);
      goto LABEL_47;
    case 54:
      uint64_t v7 = (_WORD *)(a1 + 84);
      goto LABEL_65;
    case 55:
      uint64_t v7 = (_WORD *)(a1 + 86);
      goto LABEL_65;
    case 56:
      uint64_t v9 = (unsigned __int8 *)(a1 + 88);
      goto LABEL_47;
    case 58:
      uint64_t v7 = (_WORD *)(a1 + 90);
      goto LABEL_65;
    case 59:
      uint64_t v7 = (_WORD *)(a1 + 92);
LABEL_65:
      sub_244CB3F40(a2, v7, a4);
      break;
    case 60:
      uint64_t v9 = (unsigned __int8 *)(a1 + 94);
LABEL_47:
      sub_2447F15BC(a2, v9, a4);
      break;
    default:
      int v6 = v5 - 0x4000;
      switch(v6)
      {
        case 0:
          uint64_t v7 = (_WORD *)(a1 + 96);
          goto LABEL_65;
        case 1:
          sub_2446D1A48(a2, (unsigned char *)(a1 + 98), (void *)a4);
          break;
        case 2:
          int v4 = (unsigned char *)(a1 + 99);
          goto LABEL_51;
        case 3:
          int v4 = (unsigned char *)(a1 + 100);
          goto LABEL_51;
        case 4:
          uint64_t v7 = (_WORD *)(a1 + 102);
          goto LABEL_65;
        case 5:
          uint64_t v7 = (_WORD *)(a1 + 104);
          goto LABEL_65;
        case 6:
          uint64_t v7 = (_WORD *)(a1 + 106);
          goto LABEL_65;
        case 7:
        case 8:
        case 9:
        case 14:
        case 15:
          goto LABEL_8;
        case 10:
          sub_24484B6B0(a2, (_WORD *)(a1 + 108), (void *)a4);
          break;
        case 11:
          uint64_t v7 = (_WORD *)(a1 + 110);
          goto LABEL_65;
        case 12:
          uint64_t v7 = (_WORD *)(a1 + 112);
          goto LABEL_65;
        case 13:
          uint64_t v7 = (_WORD *)(a1 + 114);
          goto LABEL_65;
        case 16:
          sub_2447EF9E0(a2, (__int16 *)(a1 + 116), a4);
          break;
        default:
          switch(v6)
          {
            case 65528:
              uint64_t v8 = a1 + 120;
              goto LABEL_7;
            case 65529:
              uint64_t v8 = a1 + 200;
              goto LABEL_7;
            case 65530:
              uint64_t v8 = a1 + 280;
              goto LABEL_7;
            case 65531:
              uint64_t v8 = a1 + 360;
LABEL_7:
              sub_24484B03C(v8, a2, a4);
              break;
            case 65532:
              sub_244CB3FB0(a2, (_DWORD *)(a1 + 440), a4);
              break;
            case 65533:
              uint64_t v7 = (_WORD *)(a1 + 444);
              goto LABEL_65;
            default:
              goto LABEL_8;
          }
          break;
      }
      break;
  }
}

void sub_24482D658(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4 = (unsigned char *)a1;
  int v5 = *(_DWORD *)(a3 + 8);
  if (v5 > 31)
  {
    switch(v5)
    {
      case 65528:
        uint64_t v6 = a1 + 80;
        goto LABEL_4;
      case 65529:
        uint64_t v6 = a1 + 160;
        goto LABEL_4;
      case 65530:
        uint64_t v6 = a1 + 240;
        goto LABEL_4;
      case 65531:
        uint64_t v6 = a1 + 320;
LABEL_4:
        sub_24484B03C(v6, a2, a4);
        break;
      case 65532:
        sub_244CB3FB0(a2, (_DWORD *)(a1 + 400), a4);
        break;
      case 65533:
        sub_244CB3F40(a2, (_WORD *)(a1 + 404), a4);
        break;
      default:
        if (v5 != 32) {
          goto LABEL_25;
        }
        int v4 = (unsigned char *)(a1 + 9);
        goto LABEL_19;
    }
    return;
  }
  if (v5 <= 15)
  {
    if (v5)
    {
      if (v5 != 1)
      {
        if (v5 == 2)
        {
          sub_24484B184(a2, (unsigned char *)(a1 + 2), (void *)a4);
        }
        else
        {
LABEL_25:
          *(_DWORD *)a4 = 0;
          *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-co"
                                "mmon/app-common/zap-generated/cluster-objects.cpp";
          *(_DWORD *)(a4 + 16) = 23822;
        }
        return;
      }
      int v4 = (unsigned char *)(a1 + 1);
    }
LABEL_19:
    sub_244CB3E8C(a2, v4, a4);
    return;
  }
  switch(v5)
  {
    case 16:
      int v4 = (unsigned char *)(a1 + 3);
      goto LABEL_19;
    case 17:
      int v4 = (unsigned char *)(a1 + 4);
      goto LABEL_19;
    case 20:
      uint64_t v7 = (unsigned __int8 *)(a1 + 5);
      break;
    case 21:
      uint64_t v7 = (unsigned __int8 *)(a1 + 7);
      break;
    default:
      goto LABEL_25;
  }
  sub_2447F15BC(a2, v7, a4);
}

void sub_24482D850(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4 = (__int16 *)a1;
  switch(*(_DWORD *)(a3 + 8))
  {
    case 0xFFF8:
      uint64_t v5 = a1 + 16;
      goto LABEL_3;
    case 0xFFF9:
      uint64_t v5 = a1 + 96;
      goto LABEL_3;
    case 0xFFFA:
      uint64_t v5 = a1 + 176;
      goto LABEL_3;
    case 0xFFFB:
      uint64_t v5 = a1 + 256;
LABEL_3:
      sub_24484B03C(v5, a2, a4);
      break;
    case 0xFFFC:
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 336), a4);
      break;
    case 0xFFFD:
      uint64_t v6 = (_WORD *)(a1 + 340);
LABEL_15:
      sub_244CB3F40(a2, v6, a4);
      break;
    default:
      switch(*(_DWORD *)(a3 + 8))
      {
        case 0xFFF8:
          goto LABEL_13;
        case 0xFFF9:
          int v4 = (__int16 *)(a1 + 4);
          goto LABEL_13;
        case 0xFFFA:
          int v4 = (__int16 *)(a1 + 8);
LABEL_13:
          sub_2447EF9E0(a2, v4, a4);
          break;
        case 0xFFFB:
          uint64_t v6 = (_WORD *)(a1 + 12);
          goto LABEL_15;
        case 0xFFFC:
          sub_24482D96C(a2, (unsigned __int8 *)(a1 + 14), a4);
          break;
        default:
          *(_DWORD *)a4 = 0;
          *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-co"
                                "mmon/app-common/zap-generated/cluster-objects.cpp";
          *(_DWORD *)(a4 + 16) = 23862;
          break;
      }
      break;
  }
}

uint64_t sub_24482D96C@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = sub_244CB3B68(a1);
  if (result == 20)
  {
    if (a2[1]) {
      a2[1] = 0;
    }
    *(_DWORD *)a3 = 0;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
    int v7 = 168;
LABEL_5:
    *(_DWORD *)(a3 + 16) = v7;
    return result;
  }
  *(void *)a3 = 0;
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  *(_WORD *)a2 = 256;
  uint64_t result = sub_2447F1DCC(a1, a2, (void *)a3);
  if (!*(_DWORD *)a3)
  {
    if (!a2[1]) {
      sub_24479484C();
    }
    if (*a2 == 255)
    {
      *(_DWORD *)a3 = 1415;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
      int v7 = 175;
    }
    else
    {
      *(_DWORD *)a3 = 0;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
      int v7 = 177;
    }
    goto LABEL_5;
  }
  return result;
}

void sub_24482DA44(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4 = (__int16 *)a1;
  switch(*(_DWORD *)(a3 + 8))
  {
    case 0xFFF8:
      uint64_t v5 = a1 + 16;
      goto LABEL_3;
    case 0xFFF9:
      uint64_t v5 = a1 + 96;
      goto LABEL_3;
    case 0xFFFA:
      uint64_t v5 = a1 + 176;
      goto LABEL_3;
    case 0xFFFB:
      uint64_t v5 = a1 + 256;
LABEL_3:
      sub_24484B03C(v5, a2, a4);
      break;
    case 0xFFFC:
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 336), a4);
      break;
    case 0xFFFD:
      uint64_t v6 = (_WORD *)(a1 + 340);
LABEL_15:
      sub_244CB3F40(a2, v6, a4);
      break;
    default:
      switch(*(_DWORD *)(a3 + 8))
      {
        case 0xFFF8:
          goto LABEL_13;
        case 0xFFF9:
          int v4 = (__int16 *)(a1 + 4);
          goto LABEL_13;
        case 0xFFFA:
          int v4 = (__int16 *)(a1 + 8);
LABEL_13:
          sub_2447F003C(a2, v4, a4);
          break;
        case 0xFFFB:
          uint64_t v6 = (_WORD *)(a1 + 12);
          goto LABEL_15;
        default:
          *(_DWORD *)a4 = 0;
          *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-co"
                                "mmon/app-common/zap-generated/cluster-objects.cpp";
          *(_DWORD *)(a4 + 16) = 23900;
          break;
      }
      break;
  }
}

void sub_24482DB4C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4 = (__int16 *)a1;
  int v5 = *(_DWORD *)(a3 + 8);
  switch(v5)
  {
    case 0:
      goto LABEL_12;
    case 1:
      int v4 = (__int16 *)(a1 + 4);
      goto LABEL_12;
    case 2:
      int v4 = (__int16 *)(a1 + 8);
      goto LABEL_12;
    case 3:
      int v7 = (_WORD *)(a1 + 12);
      goto LABEL_20;
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
LABEL_6:
      *(_DWORD *)a4 = 0;
      *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-common"
                            "/app-common/zap-generated/cluster-objects.cpp";
      *(_DWORD *)(a4 + 16) = 23948;
      return;
    case 16:
      int v4 = (__int16 *)(a1 + 14);
      goto LABEL_12;
    case 17:
      int v4 = (__int16 *)(a1 + 18);
      goto LABEL_12;
    case 18:
      int v4 = (__int16 *)(a1 + 22);
LABEL_12:
      sub_2447F003C(a2, v4, a4);
      break;
    case 19:
      int v7 = (_WORD *)(a1 + 26);
LABEL_20:
      sub_244CB3F40(a2, v7, a4);
      break;
    case 20:
      sub_244CB3C70(a2, (unsigned char *)(a1 + 28), a4);
      break;
    default:
      switch(v5)
      {
        case 65528:
          uint64_t v6 = a1 + 32;
          goto LABEL_5;
        case 65529:
          uint64_t v6 = a1 + 112;
          goto LABEL_5;
        case 65530:
          uint64_t v6 = a1 + 192;
          goto LABEL_5;
        case 65531:
          uint64_t v6 = a1 + 272;
LABEL_5:
          sub_24484B03C(v6, a2, a4);
          break;
        case 65532:
          sub_244CB3FB0(a2, (_DWORD *)(a1 + 352), a4);
          break;
        case 65533:
          int v7 = (_WORD *)(a1 + 356);
          goto LABEL_20;
        default:
          goto LABEL_6;
      }
      break;
  }
}

void sub_24482DCC4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4 = (__int16 *)a1;
  switch(*(_DWORD *)(a3 + 8))
  {
    case 0xFFF8:
      uint64_t v5 = a1 + 16;
      goto LABEL_3;
    case 0xFFF9:
      uint64_t v5 = a1 + 96;
      goto LABEL_3;
    case 0xFFFA:
      uint64_t v5 = a1 + 176;
      goto LABEL_3;
    case 0xFFFB:
      uint64_t v5 = a1 + 256;
LABEL_3:
      sub_24484B03C(v5, a2, a4);
      break;
    case 0xFFFC:
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 336), a4);
      break;
    case 0xFFFD:
      uint64_t v6 = (_WORD *)(a1 + 340);
LABEL_15:
      sub_244CB3F40(a2, v6, a4);
      break;
    default:
      switch(*(_DWORD *)(a3 + 8))
      {
        case 0xFFF8:
          goto LABEL_13;
        case 0xFFF9:
          int v4 = (__int16 *)(a1 + 4);
          goto LABEL_13;
        case 0xFFFA:
          int v4 = (__int16 *)(a1 + 8);
LABEL_13:
          sub_2447EF9E0(a2, v4, a4);
          break;
        case 0xFFFB:
          uint64_t v6 = (_WORD *)(a1 + 12);
          goto LABEL_15;
        default:
          *(_DWORD *)a4 = 0;
          *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-co"
                                "mmon/app-common/zap-generated/cluster-objects.cpp";
          *(_DWORD *)(a4 + 16) = 23986;
          break;
      }
      break;
  }
}

void sub_24482DDCC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4 = (__int16 *)a1;
  switch(*(_DWORD *)(a3 + 8))
  {
    case 0xFFF8:
      uint64_t v5 = a1 + 16;
      goto LABEL_3;
    case 0xFFF9:
      uint64_t v5 = a1 + 96;
      goto LABEL_3;
    case 0xFFFA:
      uint64_t v5 = a1 + 176;
      goto LABEL_3;
    case 0xFFFB:
      uint64_t v5 = a1 + 256;
LABEL_3:
      sub_24484B03C(v5, a2, a4);
      break;
    case 0xFFFC:
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 336), a4);
      break;
    case 0xFFFD:
      uint64_t v6 = (_WORD *)(a1 + 340);
LABEL_15:
      sub_244CB3F40(a2, v6, a4);
      break;
    default:
      switch(*(_DWORD *)(a3 + 8))
      {
        case 0xFFF8:
          goto LABEL_13;
        case 0xFFF9:
          int v4 = (__int16 *)(a1 + 4);
          goto LABEL_13;
        case 0xFFFA:
          int v4 = (__int16 *)(a1 + 8);
LABEL_13:
          sub_2447EF9E0(a2, v4, a4);
          break;
        case 0xFFFB:
          uint64_t v6 = (_WORD *)(a1 + 12);
          goto LABEL_15;
        default:
          *(_DWORD *)a4 = 0;
          *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-co"
                                "mmon/app-common/zap-generated/cluster-objects.cpp";
          *(_DWORD *)(a4 + 16) = 24024;
          break;
      }
      break;
  }
}

double sub_24482DED4@<D0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  sub_244CB7594(a1, a2, 21, &v8, (uint64_t)&v9);
  long long v6 = v9;
  uint64_t v7 = v10;
  if (!v9)
  {
    sub_244CB6904();
    uint64_t v7 = v10;
    long long v6 = v9;
    if (!v9)
    {
      sub_244CB6904();
      uint64_t v7 = v10;
      long long v6 = v9;
      if (!v9)
      {
        sub_244CB6904();
        uint64_t v7 = v10;
        long long v6 = v9;
        if (!v9)
        {
          sub_244CB7708((uint64_t)a1, v8, (uint64_t)&v9);
          long long v6 = v9;
          uint64_t v7 = v10;
        }
      }
    }
  }
  double result = *(double *)&v6;
  *(_OWORD *)a3 = v6;
  *(void *)(a3 + 16) = v7;
  return result;
}

double sub_24482E010@<D0>(_WORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  for (int i = v16; v16 != 1; int i = v16)
  {
    long long v12 = xmmword_265197880;
    uint64_t v13 = 24056;
    if (i) {
      sub_24484AFEC();
    }
    if (v14 == 2)
    {
      uint64_t v7 = a2;
      int v8 = a1 + 2;
    }
    else
    {
      if (v14 != 1)
      {
        if (!(_BYTE)v14) {
          sub_244CB3F40(a2, a1, (uint64_t)&v12);
        }
        goto LABEL_10;
      }
      uint64_t v7 = a2;
      int v8 = a1 + 1;
    }
    sub_244CB3F40(v7, v8, (uint64_t)&v10);
    long long v12 = v10;
    uint64_t v13 = v11;
LABEL_10:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
    if (*(_DWORD *)a3) {
      return result;
    }
    sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  }
  double result = *(double *)&v14;
  *(_OWORD *)a3 = v14;
  *(void *)(a3 + 16) = v15;
  return result;
}

void sub_24482E13C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v5 = *(_DWORD *)(a3 + 8);
  if (v5 <= 33)
  {
    switch(v5)
    {
      case 0:
        uint64_t v6 = a2;
        uint64_t v7 = (unsigned char *)a1;
        goto LABEL_4;
      case 1:
        sub_2446D1A48(a2, (unsigned char *)(a1 + 1), (void *)a4);
        return;
      case 2:
        long long v12 = (unsigned char *)(a1 + 2);
        uint64_t v6 = a2;
        uint64_t v7 = v12;
LABEL_4:
        sub_24484B184(v6, v7, (void *)a4);
        return;
      case 3:
        long long v10 = (_WORD *)(a1 + 4);
        break;
      case 4:
        sub_24482E010((_WORD *)(a1 + 6), a2, a4);
        return;
      case 5:
      case 6:
      case 7:
      case 8:
      case 9:
      case 10:
      case 11:
      case 12:
      case 13:
      case 14:
      case 15:
        goto LABEL_28;
      case 16:
        long long v10 = (_WORD *)(a1 + 12);
        break;
      case 17:
        long long v10 = (_WORD *)(a1 + 14);
        break;
      case 18:
        uint64_t v11 = (unsigned char *)(a1 + 16);
        goto LABEL_27;
      default:
        if (v5 == 32)
        {
          long long v10 = (_WORD *)(a1 + 18);
        }
        else
        {
          if (v5 != 33) {
            goto LABEL_28;
          }
          long long v10 = (_WORD *)(a1 + 20);
        }
        break;
    }
LABEL_35:
    sub_244CB3F40(a2, v10, a4);
    return;
  }
  if (v5 > 49)
  {
    int v8 = v5 - 65528;
    switch(v8)
    {
      case 0:
        uint64_t v9 = a1 + 32;
        goto LABEL_8;
      case 1:
        uint64_t v9 = a1 + 112;
        goto LABEL_8;
      case 2:
        uint64_t v9 = a1 + 192;
        goto LABEL_8;
      case 3:
        uint64_t v9 = a1 + 272;
LABEL_8:
        sub_24484B03C(v9, a2, a4);
        return;
      case 4:
        sub_244CB3FB0(a2, (_DWORD *)(a1 + 352), a4);
        return;
      case 5:
        long long v10 = (_WORD *)(a1 + 356);
        goto LABEL_35;
      default:
        if (v8 != 50) {
          goto LABEL_28;
        }
        uint64_t v11 = (unsigned char *)(a1 + 28);
        goto LABEL_27;
    }
  }
  if (v5 != 34)
  {
    if (v5 == 48)
    {
      long long v10 = (_WORD *)(a1 + 24);
    }
    else
    {
      if (v5 != 49)
      {
LABEL_28:
        *(_DWORD *)a4 = 0;
        *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-comm"
                              "on/app-common/zap-generated/cluster-objects.cpp";
        *(_DWORD *)(a4 + 16) = 24130;
        return;
      }
      long long v10 = (_WORD *)(a1 + 26);
    }
    goto LABEL_35;
  }
  uint64_t v11 = (unsigned char *)(a1 + 22);
LABEL_27:
  sub_244CB3E8C(a2, v11, a4);
}

double sub_24482E32C@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265197898;
      uint64_t v9 = 24156;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_24484B184(a2, a1, &v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

void sub_24482E404(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(a3 + 8);
  switch(v5)
  {
    case 0:
      goto LABEL_10;
    case 1:
      uint64_t v4 = a1 + 8;
      goto LABEL_10;
    case 2:
      uint64_t v4 = a1 + 16;
      goto LABEL_10;
    case 3:
      uint64_t v4 = a1 + 24;
      goto LABEL_10;
    case 4:
      uint64_t v7 = (_DWORD *)(a1 + 32);
      goto LABEL_21;
    case 5:
      uint64_t v4 = a1 + 36;
LABEL_10:
      sub_24482E57C(a2, v4, (void *)a4);
      break;
    case 6:
      uint64_t v7 = (_DWORD *)(a1 + 44);
LABEL_21:
      sub_244CB3FB0(a2, v7, a4);
      break;
    case 7:
      sub_244CB401C(a2, (_DWORD *)(a1 + 48), a4);
      break;
    case 8:
      sub_2447FCDD8(a2, (unsigned char *)(a1 + 52), (void *)a4);
      break;
    case 9:
      sub_2447F5F24(a2, (unsigned char *)(a1 + 53), (void *)a4);
      break;
    case 10:
      sub_2447FACE4(a2, (unsigned char *)(a1 + 54), (void *)a4);
      break;
    default:
      switch(v5)
      {
        case 65528:
          uint64_t v6 = a1 + 56;
          goto LABEL_5;
        case 65529:
          uint64_t v6 = a1 + 136;
          goto LABEL_5;
        case 65530:
          uint64_t v6 = a1 + 216;
          goto LABEL_5;
        case 65531:
          uint64_t v6 = a1 + 296;
LABEL_5:
          sub_24484B03C(v6, a2, a4);
          break;
        case 65532:
          uint64_t v7 = (_DWORD *)(a1 + 376);
          goto LABEL_21;
        case 65533:
          sub_244CB3F40(a2, (_WORD *)(a1 + 380), a4);
          break;
        default:
          *(_DWORD *)a4 = 0;
          *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-co"
                                "mmon/app-common/zap-generated/cluster-objects.cpp";
          *(_DWORD *)(a4 + 16) = 24218;
          break;
      }
      break;
  }
}

uint64_t sub_24482E57C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t result = sub_244CB3B68(a1);
  if (result == 20)
  {
    if (*(unsigned char *)(a2 + 4)) {
      *(unsigned char *)(a2 + 4) = 0;
    }
    int v7 = 168;
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
    *(_DWORD *)a2 = 0;
    *(unsigned char *)(a2 + 4) = 1;
    uint64_t result = sub_244CB401C(a1, (_DWORD *)a2, (uint64_t)a3);
    if (*(_DWORD *)a3) {
      return result;
    }
    int v7 = 177;
  }
  *(_DWORD *)a3 = 0;
  a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
  *((_DWORD *)a3 + 4) = v7;
  return result;
}

void sub_24482E610(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(a3 + 8);
  switch(v5)
  {
    case 0:
      goto LABEL_10;
    case 1:
      uint64_t v4 = a1 + 8;
      goto LABEL_10;
    case 2:
      uint64_t v4 = a1 + 16;
      goto LABEL_10;
    case 3:
      uint64_t v4 = a1 + 24;
      goto LABEL_10;
    case 4:
      int v7 = (_DWORD *)(a1 + 32);
      goto LABEL_21;
    case 5:
      uint64_t v4 = a1 + 36;
LABEL_10:
      sub_24482E57C(a2, v4, (void *)a4);
      break;
    case 6:
      int v7 = (_DWORD *)(a1 + 44);
LABEL_21:
      sub_244CB3FB0(a2, v7, a4);
      break;
    case 7:
      sub_244CB401C(a2, (_DWORD *)(a1 + 48), a4);
      break;
    case 8:
      sub_2447FCDD8(a2, (unsigned char *)(a1 + 52), (void *)a4);
      break;
    case 9:
      sub_2447F5F24(a2, (unsigned char *)(a1 + 53), (void *)a4);
      break;
    case 10:
      sub_2447FACE4(a2, (unsigned char *)(a1 + 54), (void *)a4);
      break;
    default:
      switch(v5)
      {
        case 65528:
          uint64_t v6 = a1 + 56;
          goto LABEL_5;
        case 65529:
          uint64_t v6 = a1 + 136;
          goto LABEL_5;
        case 65530:
          uint64_t v6 = a1 + 216;
          goto LABEL_5;
        case 65531:
          uint64_t v6 = a1 + 296;
LABEL_5:
          sub_24484B03C(v6, a2, a4);
          break;
        case 65532:
          int v7 = (_DWORD *)(a1 + 376);
          goto LABEL_21;
        case 65533:
          sub_244CB3F40(a2, (_WORD *)(a1 + 380), a4);
          break;
        default:
          *(_DWORD *)a4 = 0;
          *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-co"
                                "mmon/app-common/zap-generated/cluster-objects.cpp";
          *(_DWORD *)(a4 + 16) = 24270;
          break;
      }
      break;
  }
}

void sub_24482E788(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(a3 + 8);
  switch(v5)
  {
    case 0:
      goto LABEL_10;
    case 1:
      uint64_t v4 = a1 + 8;
      goto LABEL_10;
    case 2:
      uint64_t v4 = a1 + 16;
      goto LABEL_10;
    case 3:
      uint64_t v4 = a1 + 24;
      goto LABEL_10;
    case 4:
      int v7 = (_DWORD *)(a1 + 32);
      goto LABEL_21;
    case 5:
      uint64_t v4 = a1 + 36;
LABEL_10:
      sub_24482E57C(a2, v4, (void *)a4);
      break;
    case 6:
      int v7 = (_DWORD *)(a1 + 44);
LABEL_21:
      sub_244CB3FB0(a2, v7, a4);
      break;
    case 7:
      sub_244CB401C(a2, (_DWORD *)(a1 + 48), a4);
      break;
    case 8:
      sub_2447FCDD8(a2, (unsigned char *)(a1 + 52), (void *)a4);
      break;
    case 9:
      sub_2447F5F24(a2, (unsigned char *)(a1 + 53), (void *)a4);
      break;
    case 10:
      sub_2447FACE4(a2, (unsigned char *)(a1 + 54), (void *)a4);
      break;
    default:
      switch(v5)
      {
        case 65528:
          uint64_t v6 = a1 + 56;
          goto LABEL_5;
        case 65529:
          uint64_t v6 = a1 + 136;
          goto LABEL_5;
        case 65530:
          uint64_t v6 = a1 + 216;
          goto LABEL_5;
        case 65531:
          uint64_t v6 = a1 + 296;
LABEL_5:
          sub_24484B03C(v6, a2, a4);
          break;
        case 65532:
          int v7 = (_DWORD *)(a1 + 376);
          goto LABEL_21;
        case 65533:
          sub_244CB3F40(a2, (_WORD *)(a1 + 380), a4);
          break;
        default:
          *(_DWORD *)a4 = 0;
          *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-co"
                                "mmon/app-common/zap-generated/cluster-objects.cpp";
          *(_DWORD *)(a4 + 16) = 24322;
          break;
      }
      break;
  }
}

void sub_24482E900(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(a3 + 8);
  switch(v5)
  {
    case 0:
      goto LABEL_10;
    case 1:
      uint64_t v4 = a1 + 8;
      goto LABEL_10;
    case 2:
      uint64_t v4 = a1 + 16;
      goto LABEL_10;
    case 3:
      uint64_t v4 = a1 + 24;
      goto LABEL_10;
    case 4:
      int v7 = (_DWORD *)(a1 + 32);
      goto LABEL_21;
    case 5:
      uint64_t v4 = a1 + 36;
LABEL_10:
      sub_24482E57C(a2, v4, (void *)a4);
      break;
    case 6:
      int v7 = (_DWORD *)(a1 + 44);
LABEL_21:
      sub_244CB3FB0(a2, v7, a4);
      break;
    case 7:
      sub_244CB401C(a2, (_DWORD *)(a1 + 48), a4);
      break;
    case 8:
      sub_2447FCDD8(a2, (unsigned char *)(a1 + 52), (void *)a4);
      break;
    case 9:
      sub_2447F5F24(a2, (unsigned char *)(a1 + 53), (void *)a4);
      break;
    case 10:
      sub_2447FACE4(a2, (unsigned char *)(a1 + 54), (void *)a4);
      break;
    default:
      switch(v5)
      {
        case 65528:
          uint64_t v6 = a1 + 56;
          goto LABEL_5;
        case 65529:
          uint64_t v6 = a1 + 136;
          goto LABEL_5;
        case 65530:
          uint64_t v6 = a1 + 216;
          goto LABEL_5;
        case 65531:
          uint64_t v6 = a1 + 296;
LABEL_5:
          sub_24484B03C(v6, a2, a4);
          break;
        case 65532:
          int v7 = (_DWORD *)(a1 + 376);
          goto LABEL_21;
        case 65533:
          sub_244CB3F40(a2, (_WORD *)(a1 + 380), a4);
          break;
        default:
          *(_DWORD *)a4 = 0;
          *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-co"
                                "mmon/app-common/zap-generated/cluster-objects.cpp";
          *(_DWORD *)(a4 + 16) = 24374;
          break;
      }
      break;
  }
}

void sub_24482EA78(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(a3 + 8);
  switch(v5)
  {
    case 0:
      goto LABEL_10;
    case 1:
      uint64_t v4 = a1 + 8;
      goto LABEL_10;
    case 2:
      uint64_t v4 = a1 + 16;
      goto LABEL_10;
    case 3:
      uint64_t v4 = a1 + 24;
      goto LABEL_10;
    case 4:
      int v7 = (_DWORD *)(a1 + 32);
      goto LABEL_21;
    case 5:
      uint64_t v4 = a1 + 36;
LABEL_10:
      sub_24482E57C(a2, v4, (void *)a4);
      break;
    case 6:
      int v7 = (_DWORD *)(a1 + 44);
LABEL_21:
      sub_244CB3FB0(a2, v7, a4);
      break;
    case 7:
      sub_244CB401C(a2, (_DWORD *)(a1 + 48), a4);
      break;
    case 8:
      sub_2447FCDD8(a2, (unsigned char *)(a1 + 52), (void *)a4);
      break;
    case 9:
      sub_2447F5F24(a2, (unsigned char *)(a1 + 53), (void *)a4);
      break;
    case 10:
      sub_2447FACE4(a2, (unsigned char *)(a1 + 54), (void *)a4);
      break;
    default:
      switch(v5)
      {
        case 65528:
          uint64_t v6 = a1 + 56;
          goto LABEL_5;
        case 65529:
          uint64_t v6 = a1 + 136;
          goto LABEL_5;
        case 65530:
          uint64_t v6 = a1 + 216;
          goto LABEL_5;
        case 65531:
          uint64_t v6 = a1 + 296;
LABEL_5:
          sub_24484B03C(v6, a2, a4);
          break;
        case 65532:
          int v7 = (_DWORD *)(a1 + 376);
          goto LABEL_21;
        case 65533:
          sub_244CB3F40(a2, (_WORD *)(a1 + 380), a4);
          break;
        default:
          *(_DWORD *)a4 = 0;
          *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-co"
                                "mmon/app-common/zap-generated/cluster-objects.cpp";
          *(_DWORD *)(a4 + 16) = 24426;
          break;
      }
      break;
  }
}

void sub_24482EBF0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(a3 + 8);
  switch(v5)
  {
    case 0:
      goto LABEL_10;
    case 1:
      uint64_t v4 = a1 + 8;
      goto LABEL_10;
    case 2:
      uint64_t v4 = a1 + 16;
      goto LABEL_10;
    case 3:
      uint64_t v4 = a1 + 24;
      goto LABEL_10;
    case 4:
      int v7 = (_DWORD *)(a1 + 32);
      goto LABEL_21;
    case 5:
      uint64_t v4 = a1 + 36;
LABEL_10:
      sub_24482E57C(a2, v4, (void *)a4);
      break;
    case 6:
      int v7 = (_DWORD *)(a1 + 44);
LABEL_21:
      sub_244CB3FB0(a2, v7, a4);
      break;
    case 7:
      sub_244CB401C(a2, (_DWORD *)(a1 + 48), a4);
      break;
    case 8:
      sub_2447FCDD8(a2, (unsigned char *)(a1 + 52), (void *)a4);
      break;
    case 9:
      sub_2447F5F24(a2, (unsigned char *)(a1 + 53), (void *)a4);
      break;
    case 10:
      sub_2447FACE4(a2, (unsigned char *)(a1 + 54), (void *)a4);
      break;
    default:
      switch(v5)
      {
        case 65528:
          uint64_t v6 = a1 + 56;
          goto LABEL_5;
        case 65529:
          uint64_t v6 = a1 + 136;
          goto LABEL_5;
        case 65530:
          uint64_t v6 = a1 + 216;
          goto LABEL_5;
        case 65531:
          uint64_t v6 = a1 + 296;
LABEL_5:
          sub_24484B03C(v6, a2, a4);
          break;
        case 65532:
          int v7 = (_DWORD *)(a1 + 376);
          goto LABEL_21;
        case 65533:
          sub_244CB3F40(a2, (_WORD *)(a1 + 380), a4);
          break;
        default:
          *(_DWORD *)a4 = 0;
          *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-co"
                                "mmon/app-common/zap-generated/cluster-objects.cpp";
          *(_DWORD *)(a4 + 16) = 24478;
          break;
      }
      break;
  }
}

void sub_24482ED68(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(a3 + 8);
  switch(v5)
  {
    case 0:
      goto LABEL_10;
    case 1:
      uint64_t v4 = a1 + 8;
      goto LABEL_10;
    case 2:
      uint64_t v4 = a1 + 16;
      goto LABEL_10;
    case 3:
      uint64_t v4 = a1 + 24;
      goto LABEL_10;
    case 4:
      int v7 = (_DWORD *)(a1 + 32);
      goto LABEL_21;
    case 5:
      uint64_t v4 = a1 + 36;
LABEL_10:
      sub_24482E57C(a2, v4, (void *)a4);
      break;
    case 6:
      int v7 = (_DWORD *)(a1 + 44);
LABEL_21:
      sub_244CB3FB0(a2, v7, a4);
      break;
    case 7:
      sub_244CB401C(a2, (_DWORD *)(a1 + 48), a4);
      break;
    case 8:
      sub_2447FCDD8(a2, (unsigned char *)(a1 + 52), (void *)a4);
      break;
    case 9:
      sub_2447F5F24(a2, (unsigned char *)(a1 + 53), (void *)a4);
      break;
    case 10:
      sub_2447FACE4(a2, (unsigned char *)(a1 + 54), (void *)a4);
      break;
    default:
      switch(v5)
      {
        case 65528:
          uint64_t v6 = a1 + 56;
          goto LABEL_5;
        case 65529:
          uint64_t v6 = a1 + 136;
          goto LABEL_5;
        case 65530:
          uint64_t v6 = a1 + 216;
          goto LABEL_5;
        case 65531:
          uint64_t v6 = a1 + 296;
LABEL_5:
          sub_24484B03C(v6, a2, a4);
          break;
        case 65532:
          int v7 = (_DWORD *)(a1 + 376);
          goto LABEL_21;
        case 65533:
          sub_244CB3F40(a2, (_WORD *)(a1 + 380), a4);
          break;
        default:
          *(_DWORD *)a4 = 0;
          *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-co"
                                "mmon/app-common/zap-generated/cluster-objects.cpp";
          *(_DWORD *)(a4 + 16) = 24530;
          break;
      }
      break;
  }
}

void sub_24482EEE0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(a3 + 8);
  switch(v5)
  {
    case 0:
      goto LABEL_10;
    case 1:
      uint64_t v4 = a1 + 8;
      goto LABEL_10;
    case 2:
      uint64_t v4 = a1 + 16;
      goto LABEL_10;
    case 3:
      uint64_t v4 = a1 + 24;
      goto LABEL_10;
    case 4:
      int v7 = (_DWORD *)(a1 + 32);
      goto LABEL_21;
    case 5:
      uint64_t v4 = a1 + 36;
LABEL_10:
      sub_24482E57C(a2, v4, (void *)a4);
      break;
    case 6:
      int v7 = (_DWORD *)(a1 + 44);
LABEL_21:
      sub_244CB3FB0(a2, v7, a4);
      break;
    case 7:
      sub_244CB401C(a2, (_DWORD *)(a1 + 48), a4);
      break;
    case 8:
      sub_2447FCDD8(a2, (unsigned char *)(a1 + 52), (void *)a4);
      break;
    case 9:
      sub_2447F5F24(a2, (unsigned char *)(a1 + 53), (void *)a4);
      break;
    case 10:
      sub_2447FACE4(a2, (unsigned char *)(a1 + 54), (void *)a4);
      break;
    default:
      switch(v5)
      {
        case 65528:
          uint64_t v6 = a1 + 56;
          goto LABEL_5;
        case 65529:
          uint64_t v6 = a1 + 136;
          goto LABEL_5;
        case 65530:
          uint64_t v6 = a1 + 216;
          goto LABEL_5;
        case 65531:
          uint64_t v6 = a1 + 296;
LABEL_5:
          sub_24484B03C(v6, a2, a4);
          break;
        case 65532:
          int v7 = (_DWORD *)(a1 + 376);
          goto LABEL_21;
        case 65533:
          sub_244CB3F40(a2, (_WORD *)(a1 + 380), a4);
          break;
        default:
          *(_DWORD *)a4 = 0;
          *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-co"
                                "mmon/app-common/zap-generated/cluster-objects.cpp";
          *(_DWORD *)(a4 + 16) = 24582;
          break;
      }
      break;
  }
}

void sub_24482F058(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(a3 + 8);
  switch(v5)
  {
    case 0:
      goto LABEL_10;
    case 1:
      uint64_t v4 = a1 + 8;
      goto LABEL_10;
    case 2:
      uint64_t v4 = a1 + 16;
      goto LABEL_10;
    case 3:
      uint64_t v4 = a1 + 24;
      goto LABEL_10;
    case 4:
      int v7 = (_DWORD *)(a1 + 32);
      goto LABEL_21;
    case 5:
      uint64_t v4 = a1 + 36;
LABEL_10:
      sub_24482E57C(a2, v4, (void *)a4);
      break;
    case 6:
      int v7 = (_DWORD *)(a1 + 44);
LABEL_21:
      sub_244CB3FB0(a2, v7, a4);
      break;
    case 7:
      sub_244CB401C(a2, (_DWORD *)(a1 + 48), a4);
      break;
    case 8:
      sub_2447FCDD8(a2, (unsigned char *)(a1 + 52), (void *)a4);
      break;
    case 9:
      sub_2447F5F24(a2, (unsigned char *)(a1 + 53), (void *)a4);
      break;
    case 10:
      sub_2447FACE4(a2, (unsigned char *)(a1 + 54), (void *)a4);
      break;
    default:
      switch(v5)
      {
        case 65528:
          uint64_t v6 = a1 + 56;
          goto LABEL_5;
        case 65529:
          uint64_t v6 = a1 + 136;
          goto LABEL_5;
        case 65530:
          uint64_t v6 = a1 + 216;
          goto LABEL_5;
        case 65531:
          uint64_t v6 = a1 + 296;
LABEL_5:
          sub_24484B03C(v6, a2, a4);
          break;
        case 65532:
          int v7 = (_DWORD *)(a1 + 376);
          goto LABEL_21;
        case 65533:
          sub_244CB3F40(a2, (_WORD *)(a1 + 380), a4);
          break;
        default:
          *(_DWORD *)a4 = 0;
          *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-co"
                                "mmon/app-common/zap-generated/cluster-objects.cpp";
          *(_DWORD *)(a4 + 16) = 24634;
          break;
      }
      break;
  }
}

void sub_24482F1D0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(a3 + 8);
  switch(v5)
  {
    case 0:
      goto LABEL_10;
    case 1:
      uint64_t v4 = a1 + 8;
      goto LABEL_10;
    case 2:
      uint64_t v4 = a1 + 16;
      goto LABEL_10;
    case 3:
      uint64_t v4 = a1 + 24;
      goto LABEL_10;
    case 4:
      int v7 = (_DWORD *)(a1 + 32);
      goto LABEL_21;
    case 5:
      uint64_t v4 = a1 + 36;
LABEL_10:
      sub_24482E57C(a2, v4, (void *)a4);
      break;
    case 6:
      int v7 = (_DWORD *)(a1 + 44);
LABEL_21:
      sub_244CB3FB0(a2, v7, a4);
      break;
    case 7:
      sub_244CB401C(a2, (_DWORD *)(a1 + 48), a4);
      break;
    case 8:
      sub_2447FCDD8(a2, (unsigned char *)(a1 + 52), (void *)a4);
      break;
    case 9:
      sub_2447F5F24(a2, (unsigned char *)(a1 + 53), (void *)a4);
      break;
    case 10:
      sub_2447FACE4(a2, (unsigned char *)(a1 + 54), (void *)a4);
      break;
    default:
      switch(v5)
      {
        case 65528:
          uint64_t v6 = a1 + 56;
          goto LABEL_5;
        case 65529:
          uint64_t v6 = a1 + 136;
          goto LABEL_5;
        case 65530:
          uint64_t v6 = a1 + 216;
          goto LABEL_5;
        case 65531:
          uint64_t v6 = a1 + 296;
LABEL_5:
          sub_24484B03C(v6, a2, a4);
          break;
        case 65532:
          int v7 = (_DWORD *)(a1 + 376);
          goto LABEL_21;
        case 65533:
          sub_244CB3F40(a2, (_WORD *)(a1 + 380), a4);
          break;
        default:
          *(_DWORD *)a4 = 0;
          *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-co"
                                "mmon/app-common/zap-generated/cluster-objects.cpp";
          *(_DWORD *)(a4 + 16) = 24686;
          break;
      }
      break;
  }
}

double sub_24482F348@<D0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_10:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_2651978B0;
      uint64_t v11 = 24736;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v12)
      {
        if (sub_244CB3B68(a2) == 16)
        {
          sub_244CB40C8(a2, a1, &v8);
        }
        else
        {
          LODWORD(v8) = 43;
          *((void *)&v8 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
          LODWORD(v9) = 80;
        }
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_10;
      }
    }
  }
  return result;
}

void sub_24482F470(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4 = *(_DWORD *)(a3 + 8);
  switch(v4)
  {
    case 65528:
      uint64_t v5 = a1 + 40;
      goto LABEL_3;
    case 65529:
      uint64_t v5 = a1 + 120;
      goto LABEL_3;
    case 65530:
      uint64_t v5 = a1 + 200;
      goto LABEL_3;
    case 65531:
      uint64_t v5 = a1 + 280;
LABEL_3:
      sub_24484B03C(v5, a2, a4);
      break;
    case 65532:
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 360), a4);
      break;
    case 65533:
      sub_244CB3F40(a2, (_WORD *)(a1 + 364), a4);
      break;
    default:
      if (v4 == 1)
      {
        sub_2447F5E48(a2, a1 + 24, a4);
      }
      else if (v4)
      {
        *(_DWORD *)a4 = 0;
        *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-comm"
                              "on/app-common/zap-generated/cluster-objects.cpp";
        *(_DWORD *)(a4 + 16) = 24775;
      }
      else
      {
        sub_2447FFFFC(a2, a1, (void *)a4);
      }
      break;
  }
}

double sub_24482F544@<D0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_10:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_2651978C8;
      uint64_t v11 = 24845;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v12)
      {
        if (sub_244CB3B68(a2) == 16)
        {
          sub_244CB40C8(a2, a1, &v8);
        }
        else
        {
          LODWORD(v8) = 43;
          *((void *)&v8 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
          LODWORD(v9) = 80;
        }
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_10;
      }
    }
  }
  return result;
}

double sub_24482F66C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_12:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_2651978E0;
      uint64_t v11 = 24880;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        *(unsigned char *)(a1 + 16) = 1;
        *(void *)(a1 + 24) = 0;
        sub_244CB3EFC(a2, (void *)(a1 + 24), (uint64_t)&v10);
      }
      else if (!(_BYTE)v12)
      {
        if (sub_244CB3B68(a2) == 16)
        {
          sub_244CB40C8(a2, (_OWORD *)a1, &v8);
        }
        else
        {
          LODWORD(v8) = 43;
          *((void *)&v8 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
          LODWORD(v9) = 80;
        }
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_12;
      }
    }
  }
  return result;
}

double sub_24482F7C8@<D0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_10:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_2651978F8;
      uint64_t v11 = 24918;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v12)
      {
        if (sub_244CB3B68(a2) == 16)
        {
          sub_244CB40C8(a2, a1, &v8);
        }
        else
        {
          LODWORD(v8) = 43;
          *((void *)&v8 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
          LODWORD(v9) = 80;
        }
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_10;
      }
    }
  }
  return result;
}

void sub_24482F8F0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v9 = *(_DWORD *)(a3 + 8);
  if (!v5 & v4)
  {
    switch(v9)
    {
      case 65528:
        uint64_t v10 = a1 + 72;
        goto LABEL_12;
      case 65529:
        uint64_t v10 = a1 + 152;
        goto LABEL_12;
      case 65530:
        uint64_t v10 = a1 + 232;
        goto LABEL_12;
      case 65531:
        uint64_t v10 = a1 + 312;
LABEL_12:
        sub_24484B03C(v10, a2, a4);
        break;
      case 65532:
        sub_244CB3FB0(a2, (_DWORD *)(a1 + 392), a4);
        break;
      case 65533:
        uint64_t v11 = (_WORD *)(a1 + 396);
LABEL_25:
        sub_244CB3F40(a2, v11, a4);
        break;
      default:
        *(_DWORD *)a4 = 0;
        *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-comm"
                              "on/app-common/zap-generated/cluster-objects.cpp";
        int v13 = 24965;
LABEL_37:
        *(_DWORD *)(a4 + 16) = v13;
        break;
    }
  }
  else
  {
    switch(v9)
    {
      case 0:
        sub_244CB41F0(a2, (_OWORD *)a1, (void *)a4);
        return;
      case 1:
        if (sub_244CB3B68(a2) != 16)
        {
          *(_DWORD *)a4 = 43;
          *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
          int v13 = 80;
          goto LABEL_37;
        }
        sub_244CB40C8(a2, (_OWORD *)(a1 + 16), (void *)a4);
        break;
      case 2:
        uint64_t v11 = (_WORD *)(a1 + 32);
        goto LABEL_25;
      case 3:
        sub_244CB3C0C(a2, (char *)(a1 + 34), a4);
        return;
      case 4:
        uint64_t v12 = a1 + 40;
        goto LABEL_33;
      case 5:
        uint64_t v12 = a1 + 56;
LABEL_33:
        sub_2447F5E48(a2, v12, a4);
        return;
      default:
        JUMPOUT(0);
    }
  }
}

double sub_24482FB4C@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB6ADC(a2, *(char **)a1, *(void *)(a1 + 8), (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB6D80(a2, *(char **)(a1 + 16), *(void *)(a1 + 24), (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB6904();
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_244CB68CC();
          uint64_t v9 = v12;
          long long v8 = v11;
          if (!v11)
          {
            sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
            long long v8 = v11;
            uint64_t v9 = v12;
          }
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_24482FCB4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_13:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265197910;
      uint64_t v11 = 24998;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v12)
      {
        case 0:
          if (sub_244CB3B68(a2) == 16)
          {
            sub_244CB40C8(a2, (_OWORD *)a1, &v8);
          }
          else
          {
            LODWORD(v8) = 43;
            *((void *)&v8 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
            LODWORD(v9) = 80;
          }
          goto LABEL_10;
        case 1:
          sub_244CB41F0(a2, (_OWORD *)(a1 + 16), &v10);
          break;
        case 2:
          sub_244CB3F40(a2, (_WORD *)(a1 + 32), (uint64_t)&v8);
          goto LABEL_10;
        case 3:
          sub_244CB3EFC(a2, (void *)(a1 + 40), (uint64_t)&v8);
LABEL_10:
          long long v10 = v8;
          uint64_t v11 = v9;
          break;
        default:
          break;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_13;
      }
    }
  }
  return result;
}

double sub_24482FE60@<D0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_10:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265197928;
      uint64_t v11 = 25048;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v12)
      {
        if (sub_244CB3B68(a2) == 16)
        {
          sub_244CB40C8(a2, a1, &v8);
        }
        else
        {
          LODWORD(v8) = 43;
          *((void *)&v8 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
          LODWORD(v9) = 80;
        }
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_10;
      }
    }
  }
  return result;
}

double sub_24482FF88@<D0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_10:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265197940;
      uint64_t v11 = 25082;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v12)
      {
        if (sub_244CB3B68(a2) == 16)
        {
          sub_244CB40C8(a2, a1, &v8);
        }
        else
        {
          LODWORD(v8) = 43;
          *((void *)&v8 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
          LODWORD(v9) = 80;
        }
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_10;
      }
    }
  }
  return result;
}

double sub_2448300B0@<D0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_10:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265197958;
      uint64_t v11 = 25116;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v12)
      {
        if (sub_244CB3B68(a2) == 16)
        {
          sub_244CB40C8(a2, a1, &v8);
        }
        else
        {
          LODWORD(v8) = 43;
          *((void *)&v8 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
          LODWORD(v9) = 80;
        }
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_10;
      }
    }
  }
  return result;
}

double sub_2448301D8@<D0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_10:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265197970;
      uint64_t v11 = 25150;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v12)
      {
        if (sub_244CB3B68(a2) == 16)
        {
          sub_244CB40C8(a2, a1, &v8);
        }
        else
        {
          LODWORD(v8) = 43;
          *((void *)&v8 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
          LODWORD(v9) = 80;
        }
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_10;
      }
    }
  }
  return result;
}

void sub_244830300(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4 = *(_DWORD *)(a3 + 8);
  if (v4 <= 65527)
  {
    if (v4)
    {
      if (v4 == 1)
      {
        uint64_t v5 = a1 + 24;
LABEL_4:
        sub_24484B03C(v5, a2, a4);
      }
      else if (v4 == 2)
      {
        sub_244CB3E8C(a2, (unsigned char *)(a1 + 104), a4);
      }
      else
      {
LABEL_16:
        *(_DWORD *)a4 = 0;
        *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-comm"
                              "on/app-common/zap-generated/cluster-objects.cpp";
        *(_DWORD *)(a4 + 16) = 25191;
      }
    }
    else
    {
      sub_2447FFFFC(a2, a1, (void *)a4);
    }
  }
  else
  {
    switch(v4)
    {
      case 65528:
        uint64_t v5 = a1 + 112;
        goto LABEL_4;
      case 65529:
        uint64_t v5 = a1 + 192;
        goto LABEL_4;
      case 65530:
        uint64_t v5 = a1 + 272;
        goto LABEL_4;
      case 65531:
        uint64_t v5 = a1 + 352;
        goto LABEL_4;
      case 65532:
        sub_244CB3FB0(a2, (_DWORD *)(a1 + 432), a4);
        break;
      case 65533:
        sub_244CB3F40(a2, (_WORD *)(a1 + 436), a4);
        break;
      default:
        goto LABEL_16;
    }
  }
}

void sub_2448303F0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v7 = *(_DWORD *)(a3 + 8);
  switch(v7)
  {
    case 65528:
      uint64_t v8 = a1 + 32;
      goto LABEL_11;
    case 65529:
      uint64_t v8 = a1 + 112;
      goto LABEL_11;
    case 65530:
      uint64_t v8 = a1 + 192;
      goto LABEL_11;
    case 65531:
      uint64_t v8 = a1 + 272;
LABEL_11:
      sub_24484B03C(v8, a2, a4);
      return;
    case 65532:
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 352), a4);
      return;
    case 65533:
      sub_244CB3F40(a2, (_WORD *)(a1 + 356), a4);
      return;
    default:
      if (v7 != 1)
      {
        if (!v7)
        {
          sub_244CB41F0(a2, (_OWORD *)a1, (void *)a4);
          return;
        }
        *(_DWORD *)a4 = 0;
        *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-comm"
                              "on/app-common/zap-generated/cluster-objects.cpp";
        int v9 = 25225;
LABEL_26:
        *(_DWORD *)(a4 + 16) = v9;
        return;
      }
      if (sub_244CB3B68(a2) != 16)
      {
        *(_DWORD *)a4 = 43;
        *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
        int v9 = 80;
        goto LABEL_26;
      }
      sub_244CB40C8(a2, (_OWORD *)(a1 + 16), (void *)a4);
      return;
  }
}

double sub_2448305B0@<D0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265197988;
      uint64_t v11 = 25256;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_244CB41F0(a2, a1 + 1, &v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB41F0(a2, a1, &v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_2448306C0@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB6D80(a2, *(char **)a1, *(void *)(a1 + 8), (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_2447F6524(a2, (unsigned char *)(a1 + 16), (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
        long long v8 = v11;
        uint64_t v9 = v12;
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2448307D0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_2651979A0;
      uint64_t v11 = 25297;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        *(unsigned char *)(a1 + 16) = 1;
        *(void *)(a1 + 24) = 0;
        *(void *)(a1 + 32) = 0;
        sub_244CB41F0(a2, (_OWORD *)(a1 + 24), &v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB41F0(a2, (_OWORD *)a1, &v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_2448308EC@<D0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_2651979B8;
      uint64_t v11 = 25338;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_244CB41F0(a2, a1 + 1, &v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB41F0(a2, a1, &v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_2448309FC@<D0>(unsigned char *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB6904();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB6904();
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_2447F6524(a2, a1 + 8, (uint64_t)&v11);
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_2447F6524(a2, a1 + 32, (uint64_t)&v11);
          uint64_t v9 = v12;
          long long v8 = v11;
          if (!v11)
          {
            sub_2447F6524(a2, a1 + 56, (uint64_t)&v11);
            uint64_t v9 = v12;
            long long v8 = v11;
            if (!v11)
            {
              sub_2447F6524(a2, a1 + 80, (uint64_t)&v11);
              uint64_t v9 = v12;
              long long v8 = v11;
              if (!v11)
              {
                sub_24484CE74(a1 + 104, (uint64_t)&v11);
                uint64_t v9 = v12;
                long long v8 = v11;
                if (!v11)
                {
                  sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
                  long long v8 = v11;
                  uint64_t v9 = v12;
                }
              }
            }
          }
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244830BE8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  int v6 = v16;
  if (v16 == 1)
  {
LABEL_15:
    double result = *(double *)&v14;
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 16) = v15;
  }
  else
  {
    while (1)
    {
      long long v12 = xmmword_2651979D0;
      uint64_t v13 = 25384;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v14)
      {
        case 0:
          sub_244CB3F40(a2, (_WORD *)a1, (uint64_t)&v12);
          break;
        case 1:
          sub_244CB3F40(a2, (_WORD *)(a1 + 2), (uint64_t)&v10);
          goto LABEL_12;
        case 2:
          *(unsigned char *)(a1 + 8) = 1;
          *(void *)(a1 + 16) = 0;
          *(void *)(a1 + 24) = 0;
          uint64_t v7 = a2;
          long long v8 = (_OWORD *)(a1 + 16);
          goto LABEL_10;
        case 3:
          *(unsigned char *)(a1 + 32) = 1;
          *(void *)(a1 + 40) = 0;
          *(void *)(a1 + 48) = 0;
          uint64_t v7 = a2;
          long long v8 = (_OWORD *)(a1 + 40);
          goto LABEL_10;
        case 4:
          *(unsigned char *)(a1 + 56) = 1;
          *(void *)(a1 + 64) = 0;
          *(void *)(a1 + 72) = 0;
          uint64_t v7 = a2;
          long long v8 = (_OWORD *)(a1 + 64);
          goto LABEL_10;
        case 5:
          *(unsigned char *)(a1 + 80) = 1;
          *(void *)(a1 + 88) = 0;
          *(void *)(a1 + 96) = 0;
          uint64_t v7 = a2;
          long long v8 = (_OWORD *)(a1 + 88);
LABEL_10:
          sub_244CB41F0(v7, v8, &v10);
          goto LABEL_12;
        case 6:
          *(_WORD *)(a1 + 104) = 1;
          sub_2446D1A48(a2, (unsigned char *)(a1 + 105), &v10);
LABEL_12:
          long long v12 = v10;
          uint64_t v13 = v11;
          break;
        default:
          break;
      }
      double result = *(double *)&v12;
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
      int v6 = v16;
      if (v16 == 1) {
        goto LABEL_15;
      }
    }
  }
  return result;
}

double sub_244830DD8@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB6D80(a2, *(char **)a1, *(void *)(a1 + 8), (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_2448309FC((unsigned char *)(a1 + 16), a2, 1, (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB694C();
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_244CB694C();
          uint64_t v9 = v12;
          long long v8 = v11;
          if (!v11)
          {
            sub_244CB6D80(a2, *(char **)(a1 + 136), *(void *)(a1 + 144), (uint64_t)&v11);
            uint64_t v9 = v12;
            long long v8 = v11;
            if (!v11)
            {
              sub_2447F6524(a2, (unsigned char *)(a1 + 152), (uint64_t)&v11);
              uint64_t v9 = v12;
              long long v8 = v11;
              if (!v11)
              {
                sub_2447F6524(a2, (unsigned char *)(a1 + 176), (uint64_t)&v11);
                uint64_t v9 = v12;
                long long v8 = v11;
                if (!v11)
                {
                  sub_24484CF20((uint64_t)a2, 7, (unsigned char *)(a1 + 200), (uint64_t)&v11);
                  uint64_t v9 = v12;
                  long long v8 = v11;
                  if (!v11)
                  {
                    sub_24484CF20((uint64_t)a2, 8, (unsigned char *)(a1 + 224), (uint64_t)&v11);
                    uint64_t v9 = v12;
                    long long v8 = v11;
                    if (!v11)
                    {
                      sub_2447F6524(a2, (unsigned char *)(a1 + 248), (uint64_t)&v11);
                      uint64_t v9 = v12;
                      long long v8 = v11;
                      if (!v11)
                      {
                        sub_2447F6524(a2, (unsigned char *)(a1 + 272), (uint64_t)&v11);
                        uint64_t v9 = v12;
                        long long v8 = v11;
                        if (!v11)
                        {
                          sub_2447F6524(a2, (unsigned char *)(a1 + 296), (uint64_t)&v11);
                          uint64_t v9 = v12;
                          long long v8 = v11;
                          if (!v11)
                          {
                            sub_2447F6524(a2, (unsigned char *)(a1 + 320), (uint64_t)&v11);
                            uint64_t v9 = v12;
                            long long v8 = v11;
                            if (!v11)
                            {
                              sub_2447F6524(a2, (unsigned char *)(a1 + 344), (uint64_t)&v11);
                              uint64_t v9 = v12;
                              long long v8 = v11;
                              if (!v11)
                              {
                                sub_24483F918((unsigned char *)(a1 + 368), (uint64_t)&v11);
                                uint64_t v9 = v12;
                                long long v8 = v11;
                                if (!v11)
                                {
                                  sub_24484D028(a2, 15, (unsigned char *)(a1 + 376), (uint64_t)&v11);
                                  uint64_t v9 = v12;
                                  long long v8 = v11;
                                  if (!v11)
                                  {
                                    sub_24484D0D8(a2, 16, (unsigned char *)(a1 + 424), (uint64_t)&v11);
                                    uint64_t v9 = v12;
                                    long long v8 = v11;
                                    if (!v11)
                                    {
                                      sub_24484D1E4(a2, 17, (unsigned char *)(a1 + 448), (uint64_t)&v11);
                                      uint64_t v9 = v12;
                                      long long v8 = v11;
                                      if (!v11)
                                      {
                                        sub_24484D1E4(a2, 18, (unsigned char *)(a1 + 472), (uint64_t)&v11);
                                        uint64_t v9 = v12;
                                        long long v8 = v11;
                                        if (!v11)
                                        {
                                          sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
                                          long long v8 = v11;
                                          uint64_t v9 = v12;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2448311D4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v21[0] = 0;
  uint64_t v22 = a2;
  sub_2447ED6F8((uint64_t)v21, (uint64_t)&v18);
  int v6 = v20;
  if (v20 == 1)
  {
LABEL_2:
    double result = *(double *)&v18;
    *(_OWORD *)a3 = v18;
    *(void *)(a3 + 16) = v19;
  }
  else
  {
    while (1)
    {
      long long v16 = xmmword_2651979E8;
      uint64_t v17 = 25462;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v18)
      {
        case 0:
          sub_244CB41F0(a2, (_OWORD *)a1, &v16);
          break;
        case 1:
          sub_244830BE8(a1 + 16, a2, (uint64_t)&v14);
          goto LABEL_24;
        case 2:
          uint64_t v8 = a2;
          uint64_t v9 = (_DWORD *)(a1 + 128);
          goto LABEL_10;
        case 3:
          uint64_t v8 = a2;
          uint64_t v9 = (_DWORD *)(a1 + 132);
LABEL_10:
          sub_244CB3FB0(v8, v9, (uint64_t)&v14);
          goto LABEL_24;
        case 4:
          uint64_t v10 = a2;
          uint64_t v11 = a1 + 136;
          goto LABEL_23;
        case 5:
          *(unsigned char *)(a1 + 152) = 1;
          *(void *)(a1 + 160) = 0;
          *(void *)(a1 + 168) = 0;
          uint64_t v10 = a2;
          uint64_t v11 = a1 + 160;
          goto LABEL_23;
        case 6:
          *(unsigned char *)(a1 + 176) = 1;
          *(void *)(a1 + 184) = 0;
          *(void *)(a1 + 192) = 0;
          uint64_t v10 = a2;
          uint64_t v11 = a1 + 184;
          goto LABEL_23;
        case 7:
          uint64_t v12 = a2;
          uint64_t v13 = (unsigned char *)(a1 + 200);
          goto LABEL_16;
        case 8:
          uint64_t v12 = a2;
          uint64_t v13 = (unsigned char *)(a1 + 288);
          goto LABEL_16;
        case 9:
          *(unsigned char *)(a1 + 376) = 1;
          *(void *)(a1 + 384) = 0;
          *(void *)(a1 + 392) = 0;
          uint64_t v10 = a2;
          uint64_t v11 = a1 + 384;
          goto LABEL_23;
        case 10:
          *(unsigned char *)(a1 + 400) = 1;
          *(void *)(a1 + 408) = 0;
          *(void *)(a1 + 416) = 0;
          uint64_t v10 = a2;
          uint64_t v11 = a1 + 408;
          goto LABEL_23;
        case 11:
          *(unsigned char *)(a1 + 424) = 1;
          uint64_t v11 = a1 + 432;
          goto LABEL_22;
        case 12:
          *(unsigned char *)(a1 + 448) = 1;
          uint64_t v11 = a1 + 456;
          goto LABEL_22;
        case 13:
          *(unsigned char *)(a1 + 472) = 1;
          uint64_t v11 = a1 + 480;
LABEL_22:
          *(void *)uint64_t v11 = 0;
          *(void *)(v11 + 8) = 0;
          uint64_t v10 = a2;
LABEL_23:
          sub_244CB41F0(v10, (_OWORD *)v11, &v14);
          goto LABEL_24;
        case 14:
          *(unsigned char *)(a1 + 496) = 1;
          *(_DWORD *)(a1 + 500) = 0;
          sub_24484B2E8(a2, (_DWORD *)(a1 + 500), &v14);
          goto LABEL_24;
        case 15:
          *(unsigned char *)(a1 + 504) = 1;
          *(_OWORD *)(a1 + 512) = 0u;
          *(_OWORD *)(a1 + 528) = 0u;
          *(void *)(a1 + 544) = 0;
          sub_24484D2EC(a2, a1 + 512, &v14);
          goto LABEL_24;
        case 16:
          sub_2447FE7A4(a2, (unsigned char *)(a1 + 552), (uint64_t)&v14);
          goto LABEL_24;
        case 17:
          uint64_t v12 = a2;
          uint64_t v13 = (unsigned char *)(a1 + 640);
          goto LABEL_16;
        case 18:
          uint64_t v12 = a2;
          uint64_t v13 = (unsigned char *)(a1 + 728);
LABEL_16:
          sub_2447FE7A4(v12, v13, (uint64_t)&v14);
LABEL_24:
          long long v16 = v14;
          uint64_t v17 = v15;
          break;
        default:
          break;
      }
      double result = *(double *)&v16;
      *(_OWORD *)a3 = v16;
      *(void *)(a3 + 16) = v17;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v21, (uint64_t)&v18);
      int v6 = v20;
      if (v20 == 1) {
        goto LABEL_2;
      }
    }
  }
  return result;
}

double sub_244831528@<D0>(unsigned char *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_24483F80C(a1, (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_2447F6524(a2, a1 + 8, (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_2447F6524(a2, a1 + 32, (uint64_t)&v11);
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
          long long v8 = v11;
          uint64_t v9 = v12;
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244831664@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  for (int i = v16; v16 != 1; int i = v16)
  {
    long long v12 = xmmword_265197A00;
    uint64_t v13 = 25572;
    if (i) {
      sub_24484AFEC();
    }
    if (v14 == 2)
    {
      *(unsigned char *)(a1 + 32) = 1;
      *(void *)(a1 + 40) = 0;
      *(void *)(a1 + 48) = 0;
      uint64_t v7 = a2;
      long long v8 = (_OWORD *)(a1 + 40);
    }
    else
    {
      if (v14 != 1)
      {
        if (!(_BYTE)v14)
        {
          *(unsigned char *)a1 = 1;
          *(_WORD *)(a1 + 2) = 0;
          sub_244CB3F40(a2, (_WORD *)(a1 + 2), (uint64_t)&v12);
        }
        goto LABEL_10;
      }
      *(unsigned char *)(a1 + 8) = 1;
      *(void *)(a1 + 16) = 0;
      *(void *)(a1 + 24) = 0;
      uint64_t v7 = a2;
      long long v8 = (_OWORD *)(a1 + 16);
    }
    sub_244CB41F0(v7, v8, &v10);
    long long v12 = v10;
    uint64_t v13 = v11;
LABEL_10:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
    if (*(_DWORD *)a3) {
      return result;
    }
    sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  }
  double result = *(double *)&v14;
  *(_OWORD *)a3 = v14;
  *(void *)(a3 + 16) = v15;
  return result;
}

double sub_2448317B8@<D0>(unsigned char *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_24484D384(a2, 0, a1, (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_24484D384(a2, 1, a1 + 72, (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
        long long v8 = v11;
        uint64_t v9 = v12;
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2448318C8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265197A18;
      uint64_t v11 = 25617;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        *(unsigned char *)(a1 + 72) = 1;
        *(_OWORD *)(a1 + 80) = 0u;
        *(_OWORD *)(a1 + 96) = 0u;
        *(_OWORD *)(a1 + 112) = 0u;
        *(_OWORD *)(a1 + 128) = 0u;
        sub_24484D434(a2, a1 + 80, &v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        *(unsigned char *)a1 = 1;
        *(_OWORD *)(a1 + 8) = 0u;
        *(_OWORD *)(a1 + 24) = 0u;
        *(_OWORD *)(a1 + 40) = 0u;
        *(_OWORD *)(a1 + 56) = 0u;
        sub_24484D434(a2, a1 + 8, &v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_244831A08@<D0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265197A30;
      uint64_t v11 = 25658;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_244CB41F0(a2, a1 + 1, &v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB41F0(a2, a1, &v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_244831B18@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB6D80(v7, *(char **)a1, *(void *)(a1 + 8), (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_2447F6524(v7, (unsigned char *)(a1 + 16), (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_2447F6524(v7, (unsigned char *)(a1 + 40), (uint64_t)&v11);
        long long v8 = v11;
        uint64_t v9 = v12;
      }
    }
  }
  sub_2447F0720((uint64_t)&v7, 3, (unsigned char *)(a1 + 64));
  if (!v8)
  {
    sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244831C64@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  int v6 = v16;
  if (v16 == 1)
  {
LABEL_12:
    double result = *(double *)&v14;
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 16) = v15;
  }
  else
  {
    while (1)
    {
      long long v12 = xmmword_265197A48;
      uint64_t v13 = 25701;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v14)
      {
        case 0:
          sub_244CB41F0(a2, (_OWORD *)a1, &v12);
          break;
        case 1:
          *(unsigned char *)(a1 + 16) = 1;
          *(void *)(a1 + 24) = 0;
          *(void *)(a1 + 32) = 0;
          uint64_t v7 = a2;
          long long v8 = (_OWORD *)(a1 + 24);
          goto LABEL_7;
        case 2:
          *(unsigned char *)(a1 + 40) = 1;
          *(void *)(a1 + 48) = 0;
          *(void *)(a1 + 56) = 0;
          uint64_t v7 = a2;
          long long v8 = (_OWORD *)(a1 + 48);
LABEL_7:
          sub_244CB41F0(v7, v8, &v10);
          goto LABEL_9;
        case 3:
          sub_2447F092C(a2, (BOOL *)(a1 + 64), &v10);
LABEL_9:
          long long v12 = v10;
          uint64_t v13 = v11;
          break;
        default:
          break;
      }
      double result = *(double *)&v12;
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
      int v6 = v16;
      if (v16 == 1) {
        goto LABEL_12;
      }
    }
  }
  return result;
}

double sub_244831DE8@<D0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265197A60;
      uint64_t v9 = 25751;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB41F0(a2, a1, &v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_244831EC0@<D0>(unsigned char *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  sub_2447F06A4((uint64_t)&v7, 0, a1);
  if (!v8)
  {
    sub_2447F6524(v7, a1 + 8, (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
      long long v8 = v11;
      uint64_t v9 = v12;
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244831FB4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265197A78;
      uint64_t v11 = 25786;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        *(unsigned char *)(a1 + 8) = 1;
        *(void *)(a1 + 16) = 0;
        *(void *)(a1 + 24) = 0;
        sub_244CB41F0(a2, (_OWORD *)(a1 + 16), &v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_2447F5F24(a2, (unsigned char *)a1, &v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_2448320D0@<D0>(_WORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265197A90;
      uint64_t v11 = 25825;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_244CB3F40(a2, a1 + 1, (uint64_t)&v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB3F40(a2, a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_2448321E0@<D0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  sub_244CB7594(a1, a2, 21, &v8, (uint64_t)&v9);
  long long v6 = v9;
  uint64_t v7 = v10;
  if (!v9)
  {
    sub_244CB69F4();
    uint64_t v7 = v10;
    long long v6 = v9;
    if (!v9)
    {
      sub_244CB7708((uint64_t)a1, v8, (uint64_t)&v9);
      long long v6 = v9;
      uint64_t v7 = v10;
    }
  }
  double result = *(double *)&v6;
  *(_OWORD *)a3 = v6;
  *(void *)(a3 + 16) = v7;
  return result;
}

double sub_2448322C4@<D0>(_WORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265197AA8;
      uint64_t v9 = 25863;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3D8C(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_24483239C@<D0>(unsigned char *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_24483F918(a1, (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_24483F918(a1 + 8, (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_24484D4D4(a2, 2, a1 + 16, (uint64_t)&v11);
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_24484D5E0(a2, 3, a1 + 40, (uint64_t)&v11);
          uint64_t v9 = v12;
          long long v8 = v11;
          if (!v11)
          {
            sub_24483F918(a1 + 104, (uint64_t)&v11);
            uint64_t v9 = v12;
            long long v8 = v11;
            if (!v11)
            {
              sub_24484D1E4(a2, 5, a1 + 112, (uint64_t)&v11);
              uint64_t v9 = v12;
              long long v8 = v11;
              if (!v11)
              {
                sub_24480248C(a2, a1 + 136, (uint64_t)&v11);
                uint64_t v9 = v12;
                long long v8 = v11;
                if (!v11)
                {
                  sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
                  long long v8 = v11;
                  uint64_t v9 = v12;
                }
              }
            }
          }
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244832588@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_14:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265197AC0;
      uint64_t v11 = 25903;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v12)
      {
        case 0:
          *(unsigned char *)a1 = 1;
          *(_DWORD *)(a1 + 4) = 0;
          sub_244CB3FB0(a2, (_DWORD *)(a1 + 4), (uint64_t)&v10);
          break;
        case 1:
          *(unsigned char *)(a1 + 8) = 1;
          *(_DWORD *)(a1 + 12) = 0;
          sub_244CB3FB0(a2, (_DWORD *)(a1 + 12), (uint64_t)&v8);
          goto LABEL_11;
        case 2:
          sub_2447FE7A4(a2, (unsigned char *)(a1 + 16), (uint64_t)&v8);
          goto LABEL_11;
        case 3:
          *(unsigned char *)(a1 + 104) = 1;
          *(_OWORD *)(a1 + 112) = 0u;
          *(_OWORD *)(a1 + 128) = 0u;
          *(_OWORD *)(a1 + 144) = 0u;
          *(void *)(a1 + 160) = 0;
          sub_244831664(a1 + 112, a2, (uint64_t)&v8);
          goto LABEL_11;
        case 4:
          *(unsigned char *)(a1 + 168) = 1;
          *(_DWORD *)(a1 + 172) = 0;
          sub_24484B2E8(a2, (_DWORD *)(a1 + 172), &v8);
          goto LABEL_11;
        case 5:
          sub_2447FE7A4(a2, (unsigned char *)(a1 + 176), (uint64_t)&v8);
          goto LABEL_11;
        case 6:
          sub_2447F978C(a2, a1 + 264, (uint64_t)&v8);
LABEL_11:
          long long v10 = v8;
          uint64_t v11 = v9;
          break;
        default:
          break;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_14;
      }
    }
  }
  return result;
}

double sub_244832790@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_2448317B8((unsigned char *)a1, v7, 0, (uint64_t)&v11);
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  sub_244832884((uint64_t)&v7, 1u, (uint64_t *)(a1 + 144));
  if (!v8)
  {
    sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244832884(uint64_t a1, unsigned int a2, uint64_t *a3)
{
  uint64_t v3 = a1 + 8;
  if (!*(_DWORD *)(a1 + 8))
  {
    int v4 = *(char **)a1;
    uint64_t v5 = *a3;
    uint64_t v6 = a3[1];
    int v11 = 0;
    uint64_t v10 = 0;
    long long v9 = 0uLL;
    sub_244CB7594(v4, a2, 22, &v11, (uint64_t)&v9);
    if (!v9)
    {
      if (v6)
      {
        uint64_t v7 = 496 * v6;
        while (1)
        {
          long long v9 = 0uLL;
          uint64_t v10 = 0;
          sub_244830DD8(v5, v4, 256, (uint64_t)&v9);
          if (v9) {
            break;
          }
          v5 += 496;
          v7 -= 496;
          if (!v7) {
            goto LABEL_7;
          }
        }
      }
      else
      {
LABEL_7:
        long long v9 = 0uLL;
        uint64_t v10 = 0;
        sub_244CB7708((uint64_t)v4, v11, (uint64_t)&v9);
        if (!v9)
        {
          LODWORD(v9) = 0;
          *((void *)&v9 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/List.h";
          LODWORD(v10) = 86;
        }
      }
    }
    double result = *(double *)&v9;
    *(_OWORD *)uint64_t v3 = v9;
    *(void *)(v3 + 16) = v10;
  }
  return result;
}

double sub_244832974@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_9:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265197AD8;
      uint64_t v9 = 25962;
      if (v6) {
        sub_24484AFEC();
      }
      if (v10 == 1)
      {
        sub_24484B03C(a1 + 144, a2, (uint64_t)&v8);
      }
      else if (!(_BYTE)v10)
      {
        sub_2448318C8(a1, a2, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_244832A74@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB6D80(v7, *(char **)a1, *(void *)(a1 + 8), (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB65C8();
      long long v8 = v11;
      uint64_t v9 = v12;
    }
  }
  sub_244832BC0((uint64_t)&v7, 2u, (uint64_t *)(a1 + 24));
  if (!v8)
  {
    sub_244CB6ADC(v7, *(char **)(a1 + 40), *(void *)(a1 + 48), (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
      long long v8 = v11;
      uint64_t v9 = v12;
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244832BC0(uint64_t a1, unsigned int a2, uint64_t *a3)
{
  uint64_t v3 = a1 + 8;
  if (!*(_DWORD *)(a1 + 8))
  {
    int v4 = *(char **)a1;
    uint64_t v5 = *a3;
    uint64_t v6 = a3[1];
    int v11 = 0;
    uint64_t v10 = 0;
    long long v9 = 0uLL;
    sub_244CB7594(v4, a2, 22, &v11, (uint64_t)&v9);
    if (!v9)
    {
      if (v6)
      {
        uint64_t v7 = 32 * v6;
        while (1)
        {
          long long v9 = 0uLL;
          uint64_t v10 = 0;
          sub_2447EEEA4(v5, v4, 256, (uint64_t)&v9);
          if (v9) {
            break;
          }
          v5 += 32;
          v7 -= 32;
          if (!v7) {
            goto LABEL_7;
          }
        }
      }
      else
      {
LABEL_7:
        long long v9 = 0uLL;
        uint64_t v10 = 0;
        sub_244CB7708((uint64_t)v4, v11, (uint64_t)&v9);
        if (!v9)
        {
          LODWORD(v9) = 0;
          *((void *)&v9 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/List.h";
          LODWORD(v10) = 86;
        }
      }
    }
    double result = *(double *)&v9;
    *(_OWORD *)uint64_t v3 = v9;
    *(void *)(v3 + 16) = v10;
  }
  return result;
}

double sub_244832CAC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_13:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265197AF0;
      uint64_t v11 = 26003;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v12)
      {
        case 0:
          sub_244CB41F0(a2, (_OWORD *)a1, &v10);
          break;
        case 1:
          sub_244CB3C0C(a2, (char *)(a1 + 16), (uint64_t)&v8);
          goto LABEL_10;
        case 2:
          sub_24484B03C(a1 + 24, a2, (uint64_t)&v8);
          goto LABEL_10;
        case 3:
          if (sub_244CB3B68(a2) == 16)
          {
            sub_244CB40C8(a2, (_OWORD *)(a1 + 104), &v8);
          }
          else
          {
            LODWORD(v8) = 43;
            *((void *)&v8 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
            LODWORD(v9) = 80;
          }
LABEL_10:
          long long v10 = v8;
          uint64_t v11 = v9;
          break;
        default:
          break;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_13;
      }
    }
  }
  return result;
}

double sub_244832E58@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_13:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265197B08;
      uint64_t v11 = 26052;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v12)
      {
        case 0:
          sub_244CB41F0(a2, (_OWORD *)a1, &v10);
          break;
        case 1:
          sub_244CB3C0C(a2, (char *)(a1 + 16), (uint64_t)&v8);
          goto LABEL_10;
        case 2:
          sub_24484B03C(a1 + 24, a2, (uint64_t)&v8);
          goto LABEL_10;
        case 3:
          if (sub_244CB3B68(a2) == 16)
          {
            sub_244CB40C8(a2, (_OWORD *)(a1 + 104), &v8);
          }
          else
          {
            LODWORD(v8) = 43;
            *((void *)&v8 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
            LODWORD(v9) = 80;
          }
LABEL_10:
          long long v10 = v8;
          uint64_t v11 = v9;
          break;
        default:
          break;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_13;
      }
    }
  }
  return result;
}

void sub_244833004(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4 = *(_DWORD *)(a3 + 8);
  if (v4 <= 65527)
  {
    if (v4)
    {
      if (v4 == 1)
      {
        sub_2448330F0(a2, a1 + 80, (void *)a4);
      }
      else if (v4 == 2)
      {
        sub_244833190(a2, a1 + 160, (void *)a4);
      }
      else
      {
LABEL_16:
        *(_DWORD *)a4 = 0;
        *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-comm"
                              "on/app-common/zap-generated/cluster-objects.cpp";
        *(_DWORD *)(a4 + 16) = 26105;
      }
    }
    else
    {
LABEL_4:
      sub_24484B03C(a1, a2, a4);
    }
  }
  else
  {
    switch(v4)
    {
      case 65528:
        a1 += 280;
        goto LABEL_4;
      case 65529:
        a1 += 360;
        goto LABEL_4;
      case 65530:
        a1 += 440;
        goto LABEL_4;
      case 65531:
        a1 += 520;
        goto LABEL_4;
      case 65532:
        sub_244CB3FB0(a2, (_DWORD *)(a1 + 600), a4);
        break;
      case 65533:
        sub_244CB3F40(a2, (_WORD *)(a1 + 604), a4);
        break;
      default:
        goto LABEL_16;
    }
  }
}

void sub_2448330F0(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if (sub_244CB3B68(a1) == 20)
  {
    if (*(unsigned char *)(a2 + 72)) {
      *(unsigned char *)(a2 + 72) = 0;
    }
    int v6 = 168;
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)(a2 + 48) = 0u;
    *(void *)(a2 + 64) = 0;
    *(unsigned char *)(a2 + 72) = 1;
    sub_244831C64(a2, a1, (uint64_t)a3);
    if (*(_DWORD *)a3) {
      return;
    }
    int v6 = 177;
  }
  *(_DWORD *)a3 = 0;
  a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
  *((_DWORD *)a3 + 4) = v6;
}

void sub_244833190(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if (sub_244CB3B68(a1) == 20)
  {
    if (*(unsigned char *)(a2 + 112)) {
      *(unsigned char *)(a2 + 112) = 0;
    }
    int v6 = 168;
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)(a2 + 48) = 0u;
    *(_OWORD *)(a2 + 64) = 0u;
    *(_OWORD *)(a2 + 80) = 0u;
    *(_OWORD *)(a2 + 96) = 0u;
    *(unsigned char *)(a2 + 112) = 1;
    sub_244830BE8(a2, a1, (uint64_t)a3);
    if (*(_DWORD *)a3) {
      return;
    }
    int v6 = 177;
  }
  *(_DWORD *)a3 = 0;
  a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
  *((_DWORD *)a3 + 4) = v6;
}

double sub_244833234@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB68B8();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB6D80(a2, *(char **)(a1 + 8), *(void *)(a1 + 16), (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
        long long v8 = v11;
        uint64_t v9 = v12;
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244833344@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265197B20;
      uint64_t v11 = 26136;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_244CB41F0(a2, (_OWORD *)(a1 + 8), &v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB3E8C(a2, (unsigned char *)a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_244833454@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265197B38;
      uint64_t v11 = 26179;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        *(unsigned char *)(a1 + 8) = 1;
        *(void *)(a1 + 16) = 0;
        *(void *)(a1 + 24) = 0;
        sub_244CB41F0(a2, (_OWORD *)(a1 + 16), &v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB3E8C(a2, (unsigned char *)a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_244833570@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265197B50;
      uint64_t v11 = 26218;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        *(unsigned char *)(a1 + 8) = 1;
        *(void *)(a1 + 16) = 0;
        *(void *)(a1 + 24) = 0;
        sub_244CB41F0(a2, (_OWORD *)(a1 + 16), &v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_2447F5F24(a2, (unsigned char *)a1, &v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

void sub_24483368C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4 = *(_DWORD *)(a3 + 8);
  switch(v4)
  {
    case 65528:
      a1 += 88;
      goto LABEL_3;
    case 65529:
      a1 += 168;
      goto LABEL_3;
    case 65530:
      a1 += 248;
      goto LABEL_3;
    case 65531:
      a1 += 328;
      goto LABEL_3;
    case 65532:
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 408), a4);
      return;
    case 65533:
      sub_244CB3F40(a2, (_WORD *)(a1 + 412), a4);
      return;
    default:
      if (v4 == 1)
      {
        sub_244CB3E8C(a2, (unsigned char *)(a1 + 80), a4);
      }
      else if (v4)
      {
        *(_DWORD *)a4 = 0;
        *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-comm"
                              "on/app-common/zap-generated/cluster-objects.cpp";
        *(_DWORD *)(a4 + 16) = 26261;
      }
      else
      {
LABEL_3:
        sub_24484B03C(a1, a2, a4);
      }
      return;
  }
}

void sub_244833754(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  int v10 = 0;
  a4[1] = 0;
  a4[2] = 0;
  *a4 = 0;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)a4);
  if (!*(_DWORD *)a4)
  {
    uint64_t v7 = *(void *)a1;
    uint64_t v8 = *(void *)(a1 + 8);
    int v11 = 0;
    a4[1] = 0;
    a4[2] = 0;
    *a4 = 0;
    sub_244CB7594(a2, 0, 22, &v11, (uint64_t)a4);
    if (!*(_DWORD *)a4)
    {
      if (v8)
      {
        uint64_t v9 = 24 * v8;
        while (1)
        {
          *a4 = 0;
          a4[1] = 0;
          a4[2] = 0;
          sub_244833234(v7, a2, 256, (uint64_t)a4);
          if (*(_DWORD *)a4) {
            break;
          }
          v7 += 24;
          v9 -= 24;
          if (!v9) {
            goto LABEL_7;
          }
        }
      }
      else
      {
LABEL_7:
        *a4 = 0;
        a4[1] = 0;
        a4[2] = 0;
        sub_244CB7708((uint64_t)a2, v11, (uint64_t)a4);
        if (!*(_DWORD *)a4)
        {
          *a4 = 0;
          a4[1] = 0;
          a4[2] = 0;
          sub_244CB68B8();
          if (!*(_DWORD *)a4)
          {
            *a4 = 0;
            a4[1] = 0;
            a4[2] = 0;
            sub_244CB6ADC(a2, *(char **)(a1 + 24), *(void *)(a1 + 32), (uint64_t)a4);
            if (!*(_DWORD *)a4) {
              sub_244CB7708((uint64_t)a2, v10, (uint64_t)a4);
            }
          }
        }
      }
    }
  }
}

double sub_2448338A0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  for (int i = v14; v14 != 1; int i = v14)
  {
    long long v10 = xmmword_265197B68;
    uint64_t v11 = 26289;
    if (i) {
      sub_24484AFEC();
    }
    if (v12 == 2)
    {
      if (sub_244CB3B68(a2) == 16)
      {
        sub_244CB40C8(a2, (_OWORD *)(a1 + 88), &v8);
      }
      else
      {
        LODWORD(v8) = 43;
        *((void *)&v8 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
        LODWORD(v9) = 80;
      }
    }
    else
    {
      if (v12 != 1)
      {
        if (!(_BYTE)v12) {
          sub_24484B03C(a1, a2, (uint64_t)&v10);
        }
        goto LABEL_12;
      }
      sub_244CB3E8C(a2, (unsigned char *)(a1 + 80), (uint64_t)&v8);
    }
    long long v10 = v8;
    uint64_t v11 = v9;
LABEL_12:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
    if (*(_DWORD *)a3) {
      return result;
    }
    sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  }
  double result = *(double *)&v12;
  *(_OWORD *)a3 = v12;
  *(void *)(a3 + 16) = v13;
  return result;
}

double sub_244833A10@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB6D80(a2, *(char **)a1, *(void *)(a1 + 8), (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244819180(a2, (unsigned char *)(a1 + 16), (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
        long long v8 = v11;
        uint64_t v9 = v12;
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244833B20@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265197B80;
      uint64_t v11 = 26338;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        *(unsigned char *)(a1 + 16) = 1;
        *(void *)(a1 + 32) = 0;
        *(void *)(a1 + 40) = 0;
        *(void *)(a1 + 24) = 0;
        sub_244803C58(a2, a1 + 24, &v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB41F0(a2, (_OWORD *)a1, &v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_244833C40@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB6D80(a2, *(char **)a1, *(void *)(a1 + 8), (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_24484D664(a2, 1, a1 + 16, (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
        long long v8 = v11;
        uint64_t v9 = v12;
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244833D50@<D0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265197B98;
      uint64_t v11 = 26379;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_244833E60(a2, (uint64_t)(a1 + 1), &v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB41F0(a2, a1, &v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

void sub_244833E60(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if (sub_244CB3B68(a1) == 20)
  {
    if (*(unsigned char *)(a2 + 48)) {
      *(unsigned char *)(a2 + 48) = 0;
    }
    int v6 = 168;
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(unsigned char *)(a2 + 48) = 1;
    sub_244833B20(a2, a1, (uint64_t)a3);
    if (*(_DWORD *)a3) {
      return;
    }
    int v6 = 177;
  }
  *(_DWORD *)a3 = 0;
  a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
  *((_DWORD *)a3 + 4) = v6;
}

double sub_244833EFC@<D0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265197BB0;
      uint64_t v11 = 26420;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_2447F5E48(a2, (uint64_t)(a1 + 1), (uint64_t)&v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB3EFC(a2, a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_24483400C@<D0>(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_24484B7DC(a1, (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
      long long v8 = v11;
      uint64_t v9 = v12;
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2448340F0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265197BC8;
      uint64_t v9 = 26582;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10)
      {
        *(_WORD *)a1 = 1;
        sub_244CB3C0C(a2, (char *)(a1 + 1), (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_2448341DC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265197BE0;
      uint64_t v9 = 26616;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10)
      {
        *(_WORD *)a1 = 1;
        sub_244CB3C0C(a2, (char *)(a1 + 1), (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_2448342C8@<D0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265197BF8;
      uint64_t v9 = 26650;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3EFC(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_2448343A0@<D0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265197C10;
      uint64_t v9 = 26684;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3EFC(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_244834478@<D0>(unsigned char *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  sub_2447F8840((uint64_t)&v7, 0, a1);
  if (!v8)
  {
    sub_2447F6524(v7, a1 + 8, (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
      long long v8 = v11;
      uint64_t v9 = v12;
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_24483456C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265197C28;
      uint64_t v11 = 26719;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        *(unsigned char *)(a1 + 8) = 1;
        *(void *)(a1 + 16) = 0;
        *(void *)(a1 + 24) = 0;
        sub_244CB41F0(a2, (_OWORD *)(a1 + 16), &v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_2447F0A54(a2, (unsigned char *)a1, &v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_244834688@<D0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265197C40;
      uint64_t v9 = 26757;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3EFC(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_244834760@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB6D80(a2, *(char **)a1, *(void *)(a1 + 8), (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB68B8();
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
        long long v8 = v11;
        uint64_t v9 = v12;
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244834870@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265197C58;
      uint64_t v11 = 26792;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_244CB3E8C(a2, (unsigned char *)(a1 + 16), (uint64_t)&v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB41F0(a2, (_OWORD *)a1, &v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_244834980@<D0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265197C70;
      uint64_t v9 = 26830;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB41F0(a2, a1, &v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

void sub_244834A58(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4 = *(_DWORD *)(a3 + 8);
  switch(v4)
  {
    case 0:
      sub_2446D1A48(a2, (unsigned char *)a1, (void *)a4);
      return;
    case 1:
      uint64_t v6 = a1 + 8;
      goto LABEL_12;
    case 2:
      uint64_t v6 = a1 + 24;
      goto LABEL_12;
    case 3:
      sub_244834BDC(a2, a1 + 40, (void *)a4);
      return;
    case 4:
      sub_244CB401C(a2, (_DWORD *)(a1 + 72), a4);
      return;
    case 5:
      uint64_t v6 = a1 + 80;
      goto LABEL_12;
    case 6:
      uint64_t v6 = a1 + 96;
LABEL_12:
      sub_2447F5E48(a2, v6, a4);
      return;
    case 7:
      uint64_t v7 = a1 + 112;
      goto LABEL_16;
    case 8:
      uint64_t v8 = a1 + 192;
      goto LABEL_18;
    case 9:
      uint64_t v7 = a1 + 280;
LABEL_16:
      sub_244834C74(a2, v7, (void *)a4);
      break;
    case 10:
      uint64_t v8 = a1 + 360;
LABEL_18:
      sub_2447F50A0(a2, v8, (void *)a4);
      break;
    default:
      switch(v4)
      {
        case 65528:
          uint64_t v5 = a1 + 448;
          goto LABEL_5;
        case 65529:
          uint64_t v5 = a1 + 528;
          goto LABEL_5;
        case 65530:
          uint64_t v5 = a1 + 608;
          goto LABEL_5;
        case 65531:
          uint64_t v5 = a1 + 688;
LABEL_5:
          sub_24484B03C(v5, a2, a4);
          break;
        case 65532:
          sub_244CB3FB0(a2, (_DWORD *)(a1 + 768), a4);
          break;
        case 65533:
          sub_244CB3F40(a2, (_WORD *)(a1 + 772), a4);
          break;
        default:
          *(_DWORD *)a4 = 0;
          *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-co"
                                "mmon/app-common/zap-generated/cluster-objects.cpp";
          *(_DWORD *)(a4 + 16) = 26907;
          break;
      }
      break;
  }
}

void sub_244834BDC(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if (sub_244CB3B68(a1) == 20)
  {
    if (*(unsigned char *)(a2 + 24)) {
      *(unsigned char *)(a2 + 24) = 0;
    }
    int v6 = 168;
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
    *(void *)(a2 + 8) = 0;
    *(void *)(a2 + 16) = 0;
    *(void *)a2 = 0;
    *(unsigned char *)(a2 + 24) = 1;
    sub_244833EFC((void *)a2, a1, (uint64_t)a3);
    if (*(_DWORD *)a3) {
      return;
    }
    int v6 = 177;
  }
  *(_DWORD *)a3 = 0;
  a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
  *((_DWORD *)a3 + 4) = v6;
}

void sub_244834C74(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if (sub_244CB3B68(a1) == 20)
  {
    if (*(unsigned char *)(a2 + 72)) {
      *(unsigned char *)(a2 + 72) = 0;
    }
    int v6 = 168;
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)(a2 + 48) = 0u;
    *(void *)(a2 + 64) = 0;
    *(unsigned char *)(a2 + 72) = 1;
    sub_244833D50((_OWORD *)a2, a1, (uint64_t)a3);
    if (*(_DWORD *)a3) {
      return;
    }
    int v6 = 177;
  }
  *(_DWORD *)a3 = 0;
  a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
  *((_DWORD *)a3 + 4) = v6;
}

void sub_244834D14(unsigned char *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  int v7 = 0;
  a4[1] = 0;
  a4[2] = 0;
  *a4 = 0;
  sub_244CB7594(a2, a3, 21, &v7, (uint64_t)a4);
  if (!*(_DWORD *)a4)
  {
    *a4 = 0;
    a4[1] = 0;
    a4[2] = 0;
    if (*a1 == 4)
    {
      *(_DWORD *)a4 = 1415;
      a4[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
      *((_DWORD *)a4 + 4) = 75;
    }
    else
    {
      sub_244CB68B8();
      if (!*(_DWORD *)a4)
      {
        *a4 = 0;
        a4[1] = 0;
        a4[2] = 0;
        sub_244CB68CC();
        if (!*(_DWORD *)a4)
        {
          *a4 = 0;
          a4[1] = 0;
          a4[2] = 0;
          sub_244CB68CC();
          if (!*(_DWORD *)a4)
          {
            *a4 = 0;
            a4[1] = 0;
            a4[2] = 0;
            sub_244800EDC((uint64_t)(a1 + 24), a2, 3, (uint64_t)a4);
            if (!*(_DWORD *)a4)
            {
              *a4 = 0;
              a4[1] = 0;
              a4[2] = 0;
              sub_244CB6ABC();
              if (!*(_DWORD *)a4)
              {
                *a4 = 0;
                a4[1] = 0;
                a4[2] = 0;
                sub_244CB68CC();
                if (!*(_DWORD *)a4)
                {
                  *a4 = 0;
                  a4[1] = 0;
                  a4[2] = 0;
                  sub_244CB68CC();
                  if (!*(_DWORD *)a4)
                  {
                    *a4 = 0;
                    a4[1] = 0;
                    a4[2] = 0;
                    sub_24480248C(a2, a1 + 72, (uint64_t)a4);
                    if (!*(_DWORD *)a4)
                    {
                      *a4 = 0;
                      a4[1] = 0;
                      a4[2] = 0;
                      sub_244CB65C8();
                      if (!*(_DWORD *)a4) {
                        sub_244CB7708((uint64_t)a2, v7, (uint64_t)a4);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

double sub_244834EF0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  int v6 = v16;
  if (v16 == 1)
  {
LABEL_2:
    double result = *(double *)&v14;
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 16) = v15;
  }
  else
  {
    while (1)
    {
      long long v12 = xmmword_265197C88;
      uint64_t v13 = 26941;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v14)
      {
        case 0:
          sub_2446D1A48(a2, (unsigned char *)a1, &v12);
          break;
        case 1:
          uint64_t v8 = a2;
          uint64_t v9 = (void *)(a1 + 8);
          goto LABEL_13;
        case 2:
          uint64_t v8 = a2;
          uint64_t v9 = (void *)(a1 + 16);
          goto LABEL_13;
        case 3:
          sub_244833EFC((void *)(a1 + 24), a2, (uint64_t)&v10);
          goto LABEL_14;
        case 4:
          sub_244CB401C(a2, (_DWORD *)(a1 + 48), (uint64_t)&v10);
          goto LABEL_14;
        case 5:
          uint64_t v8 = a2;
          uint64_t v9 = (void *)(a1 + 56);
          goto LABEL_13;
        case 6:
          uint64_t v8 = a2;
          uint64_t v9 = (void *)(a1 + 64);
LABEL_13:
          sub_244CB3EFC(v8, v9, (uint64_t)&v10);
          goto LABEL_14;
        case 7:
          sub_2447F978C(a2, a1 + 72, (uint64_t)&v10);
          goto LABEL_14;
        case 8:
          sub_244CB3C0C(a2, (char *)(a1 + 96), (uint64_t)&v10);
LABEL_14:
          long long v12 = v10;
          uint64_t v13 = v11;
          break;
        default:
          break;
      }
      double result = *(double *)&v12;
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
      int v6 = v16;
      if (v16 == 1) {
        goto LABEL_2;
      }
    }
  }
  return result;
}

double sub_2448350F4@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB68B8();
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  sub_244835240((uint64_t)&v7, 1, (unsigned char *)(a1 + 1));
  if (!v8)
  {
    sub_244CB6D80(v7, *(char **)(a1 + 8), *(void *)(a1 + 16), (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB6D80(v7, *(char **)(a1 + 24), *(void *)(a1 + 32), (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
        long long v8 = v11;
        uint64_t v9 = v12;
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244835240(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  uint64_t v3 = a1 + 8;
  if (!*(_DWORD *)(a1 + 8))
  {
    if (*a3 == 12)
    {
      LODWORD(v5) = 1415;
      *((void *)&v5 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
      LODWORD(v6) = 75;
    }
    else
    {
      sub_244CB68B8();
    }
    double result = *(double *)&v5;
    *(_OWORD *)uint64_t v3 = v5;
    *(void *)(v3 + 16) = v6;
  }
  return result;
}

double sub_2448352BC@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  int v6 = v16;
  if (v16 == 1)
  {
LABEL_12:
    double result = *(double *)&v14;
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 16) = v15;
  }
  else
  {
    while (1)
    {
      long long v12 = xmmword_265197CA0;
      uint64_t v13 = 27016;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v14)
      {
        case 0:
          sub_244CB3E8C(a2, a1, (uint64_t)&v12);
          break;
        case 1:
          sub_244823794(a2, a1 + 1, &v10);
          goto LABEL_9;
        case 2:
          uint64_t v7 = a2;
          long long v8 = a1 + 8;
          goto LABEL_8;
        case 3:
          uint64_t v7 = a2;
          long long v8 = a1 + 24;
LABEL_8:
          sub_244CB41F0(v7, v8, &v10);
LABEL_9:
          long long v12 = v10;
          uint64_t v13 = v11;
          break;
        default:
          break;
      }
      double result = *(double *)&v12;
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
      int v6 = v16;
      if (v16 == 1) {
        goto LABEL_12;
      }
    }
  }
  return result;
}

double sub_24483542C@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265197CB8;
      uint64_t v9 = 27066;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3E8C(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_244835504@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265197CD0;
      uint64_t v11 = 27141;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_244CB41F0(a2, (_OWORD *)(a1 + 8), &v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB3E8C(a2, (unsigned char *)a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

void sub_244835614(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4 = *(_DWORD *)(a3 + 8);
  switch(v4)
  {
    case 65528:
      a1 += 88;
      goto LABEL_3;
    case 65529:
      a1 += 168;
      goto LABEL_3;
    case 65530:
      a1 += 248;
      goto LABEL_3;
    case 65531:
      a1 += 328;
      goto LABEL_3;
    case 65532:
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 408), a4);
      return;
    case 65533:
      sub_244CB3F40(a2, (_WORD *)(a1 + 412), a4);
      return;
    default:
      if (v4 == 1)
      {
        sub_244CB3E8C(a2, (unsigned char *)(a1 + 80), a4);
      }
      else if (v4)
      {
        *(_DWORD *)a4 = 0;
        *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-comm"
                              "on/app-common/zap-generated/cluster-objects.cpp";
        *(_DWORD *)(a4 + 16) = 27184;
      }
      else
      {
LABEL_3:
        sub_24484B03C(a1, a2, a4);
      }
      return;
  }
}

void sub_2448356DC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  switch(*(_DWORD *)(a3 + 8))
  {
    case 0xFFF8:
      goto LABEL_2;
    case 0xFFF9:
      a1 += 80;
      goto LABEL_2;
    case 0xFFFA:
      a1 += 160;
      goto LABEL_2;
    case 0xFFFB:
      a1 += 240;
LABEL_2:
      sub_24484B03C(a1, a2, a4);
      break;
    case 0xFFFC:
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 320), a4);
      break;
    case 0xFFFD:
      sub_244CB3F40(a2, (_WORD *)(a1 + 324), a4);
      break;
    default:
      *(_DWORD *)a4 = 0;
      *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-common"
                            "/app-common/zap-generated/cluster-objects.cpp";
      *(_DWORD *)(a4 + 16) = 27235;
      break;
  }
}

double sub_244835780@<D0>(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  sub_244835848((uint64_t)&v7, 0, a1);
  if (!v8)
  {
    sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244835848(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  uint64_t v3 = a1 + 8;
  if (!*(_DWORD *)(a1 + 8))
  {
    if (*a3 == 14)
    {
      LODWORD(v5) = 1415;
      *((void *)&v5 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
      LODWORD(v6) = 75;
    }
    else
    {
      sub_244CB68B8();
    }
    double result = *(double *)&v5;
    *(_OWORD *)uint64_t v3 = v5;
    *(void *)(v3 + 16) = v6;
  }
  return result;
}

double sub_2448358C4@<D0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265197CE8;
      uint64_t v9 = 27265;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_24483599C(a2, a1, &v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

uint64_t sub_24483599C@<X0>(uint64_t a1@<X0>, char *a2@<X1>, void *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  uint64_t result = sub_2446D1AAC(a1, a2, a3);
  if (!*(_DWORD *)a3)
  {
    unint64_t v6 = *a2;
    if (v6 > 0x76) {
      char v7 = 14;
    }
    else {
      char v7 = byte_244E7CA33[v6];
    }
    *a2 = v7;
    *(_DWORD *)a3 = 0;
    a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
    *((_DWORD *)a3 + 4) = 61;
  }
  return result;
}

double sub_244835A10@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265197D00;
      uint64_t v9 = 27299;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_2447F5F24(a2, a1, &v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

void sub_244835AE8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  switch(*(_DWORD *)(a3 + 8))
  {
    case 0xFFF8:
      goto LABEL_2;
    case 0xFFF9:
      a1 += 80;
      goto LABEL_2;
    case 0xFFFA:
      a1 += 160;
      goto LABEL_2;
    case 0xFFFB:
      a1 += 240;
LABEL_2:
      sub_24484B03C(a1, a2, a4);
      break;
    case 0xFFFC:
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 320), a4);
      break;
    case 0xFFFD:
      sub_244CB3F40(a2, (_WORD *)(a1 + 324), a4);
      break;
    default:
      *(_DWORD *)a4 = 0;
      *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-common"
                            "/app-common/zap-generated/cluster-objects.cpp";
      *(_DWORD *)(a4 + 16) = 27334;
      break;
  }
}

double sub_244835B8C@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  char v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB6ACC();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB6ACC();
      long long v8 = v11;
      uint64_t v9 = v12;
    }
  }
  sub_2447F1C40((uint64_t)&v7, 2, (unsigned char *)(a1 + 16));
  if (!v8)
  {
    sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244835CAC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  for (int i = v14; v14 != 1; int i = v14)
  {
    long long v10 = xmmword_265197D18;
    uint64_t v11 = 27366;
    if (i) {
      sub_24484AFEC();
    }
    if (v12 == 2)
    {
      sub_2447F1DCC(a2, (unsigned char *)(a1 + 16), &v8);
    }
    else
    {
      if (v12 != 1)
      {
        if (!(_BYTE)v12) {
          sub_244CB4060(a2, (double *)a1, (uint64_t)&v10);
        }
        goto LABEL_10;
      }
      sub_244CB4060(a2, (double *)(a1 + 8), (uint64_t)&v8);
    }
    long long v10 = v8;
    uint64_t v11 = v9;
LABEL_10:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
    if (*(_DWORD *)a3) {
      return result;
    }
    sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  }
  double result = *(double *)&v12;
  *(_OWORD *)a3 = v12;
  *(void *)(a3 + 16) = v13;
  return result;
}

double sub_244835DDC@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB6D80(a2, *(char **)a1, *(void *)(a1 + 8), (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_24484D68C(a2, 1, (unsigned char *)(a1 + 16), &v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB68B8();
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
          long long v8 = v11;
          uint64_t v9 = v12;
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244835F18@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  for (int i = v14; v14 != 1; int i = v14)
  {
    long long v10 = xmmword_265197D30;
    uint64_t v11 = 27412;
    if (i) {
      sub_24484AFEC();
    }
    if (v12 == 2)
    {
      sub_244CB3E8C(a2, (unsigned char *)(a1 + 104), (uint64_t)&v8);
    }
    else
    {
      if (v12 != 1)
      {
        if (!(_BYTE)v12) {
          sub_244CB41F0(a2, (_OWORD *)a1, &v10);
        }
        goto LABEL_10;
      }
      sub_2447FE7A4(a2, (unsigned char *)(a1 + 16), (uint64_t)&v8);
    }
    long long v10 = v8;
    uint64_t v11 = v9;
LABEL_10:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
    if (*(_DWORD *)a3) {
      return result;
    }
    sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  }
  double result = *(double *)&v12;
  *(_OWORD *)a3 = v12;
  *(void *)(a3 + 16) = v13;
  return result;
}

double sub_244836048@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB68CC();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244835DDC(a1 + 8, a2, 1, (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_24484D7B0(a2, 2, (unsigned char *)(a1 + 56), (uint64_t)&v11);
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
          long long v8 = v11;
          uint64_t v9 = v12;
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244836184@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  for (int i = v14; v14 != 1; int i = v14)
  {
    long long v10 = xmmword_265197D48;
    uint64_t v11 = 27458;
    if (i) {
      sub_24484AFEC();
    }
    if (v12 == 2)
    {
      sub_2447FE7A4(a2, (unsigned char *)(a1 + 120), (uint64_t)&v8);
    }
    else
    {
      if (v12 != 1)
      {
        if (!(_BYTE)v12) {
          sub_244CB3EFC(a2, (void *)a1, (uint64_t)&v10);
        }
        goto LABEL_10;
      }
      sub_244835F18(a1 + 8, a2, (uint64_t)&v8);
    }
    long long v10 = v8;
    uint64_t v11 = v9;
LABEL_10:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
    if (*(_DWORD *)a3) {
      return result;
    }
    sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  }
  double result = *(double *)&v12;
  *(_OWORD *)a3 = v12;
  *(void *)(a3 + 16) = v13;
  return result;
}

double sub_2448362B4@<D0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265197D60;
      uint64_t v11 = 27503;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_244CB41F0(a2, a1 + 1, &v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB41F0(a2, a1, &v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_2448363C4@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  char v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  sub_2448364E4((uint64_t)&v7, 0, (unsigned char *)a1);
  if (!v8)
  {
    sub_244CB6D80(v7, *(char **)(a1 + 8), *(void *)(a1 + 16), (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_24484D1E4(v7, 2, (unsigned char *)(a1 + 24), (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
        long long v8 = v11;
        uint64_t v9 = v12;
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2448364E4(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  uint64_t v3 = a1 + 8;
  if (!*(_DWORD *)(a1 + 8))
  {
    if (*a3 == 17)
    {
      LODWORD(v5) = 1415;
      *((void *)&v5 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
      LODWORD(v6) = 75;
    }
    else
    {
      sub_244CB68B8();
    }
    double result = *(double *)&v5;
    *(_OWORD *)uint64_t v3 = v5;
    *(void *)(v3 + 16) = v6;
  }
  return result;
}

double sub_244836560@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  for (int i = v14; v14 != 1; int i = v14)
  {
    long long v10 = xmmword_265197D78;
    uint64_t v11 = 27545;
    if (i) {
      sub_24484AFEC();
    }
    if (v12 == 2)
    {
      sub_2447FE7A4(a2, (unsigned char *)(a1 + 24), (uint64_t)&v8);
    }
    else
    {
      if (v12 != 1)
      {
        if (!(_BYTE)v12) {
          sub_2448061FC(a2, (unsigned char *)a1, &v10);
        }
        goto LABEL_10;
      }
      sub_244CB41F0(a2, (_OWORD *)(a1 + 8), &v8);
    }
    long long v10 = v8;
    uint64_t v11 = v9;
LABEL_10:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
    if (*(_DWORD *)a3) {
      return result;
    }
    sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  }
  double result = *(double *)&v12;
  *(_OWORD *)a3 = v12;
  *(void *)(a3 + 16) = v13;
  return result;
}

double sub_244836690@<D0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  char v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  sub_244836758((uint64_t)&v7, 0, a1);
  if (!v8)
  {
    sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244836758(uint64_t a1, unsigned int a2, uint64_t *a3)
{
  uint64_t v3 = a1 + 8;
  if (!*(_DWORD *)(a1 + 8))
  {
    int v4 = *(char **)a1;
    uint64_t v5 = *a3;
    uint64_t v6 = a3[1];
    int v11 = 0;
    uint64_t v10 = 0;
    long long v9 = 0uLL;
    sub_244CB7594(v4, a2, 22, &v11, (uint64_t)&v9);
    if (!v9)
    {
      if (v6)
      {
        uint64_t v7 = 48 * v6;
        while (1)
        {
          long long v9 = 0uLL;
          uint64_t v10 = 0;
          sub_2448363C4(v5, v4, 256, (uint64_t)&v9);
          if (v9) {
            break;
          }
          v5 += 48;
          v7 -= 48;
          if (!v7) {
            goto LABEL_7;
          }
        }
      }
      else
      {
LABEL_7:
        long long v9 = 0uLL;
        uint64_t v10 = 0;
        sub_244CB7708((uint64_t)v4, v11, (uint64_t)&v9);
        if (!v9)
        {
          LODWORD(v9) = 0;
          *((void *)&v9 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/List.h";
          LODWORD(v10) = 86;
        }
      }
    }
    double result = *(double *)&v9;
    *(_OWORD *)uint64_t v3 = v9;
    *(void *)(v3 + 16) = v10;
  }
  return result;
}

double sub_244836848@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265197D90;
      uint64_t v9 = 27589;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_24484B03C(a1, a2, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_244836920@<D0>(unsigned char *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_2447F6524(a2, a1, (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_2447F6524(a2, a1 + 24, (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_24484D8BC(a2, 2, a1 + 48, (uint64_t)&v11);
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
          long long v8 = v11;
          uint64_t v9 = v12;
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244836A5C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  for (int i = v14; v14 != 1; int i = v14)
  {
    long long v10 = xmmword_265197DA8;
    uint64_t v11 = 27627;
    if (i) {
      sub_24484AFEC();
    }
    if (v12 == 2)
    {
      *(unsigned char *)(a1 + 48) = 1;
      *(void *)(a1 + 64) = 0;
      *(void *)(a1 + 72) = 0;
      *(void *)(a1 + 56) = 0;
      sub_244835CAC(a1 + 56, a2, (uint64_t)&v8);
    }
    else
    {
      if (v12 != 1)
      {
        if (!(_BYTE)v12)
        {
          *(unsigned char *)a1 = 1;
          *(void *)(a1 + 8) = 0;
          *(void *)(a1 + 16) = 0;
          sub_244CB41F0(a2, (_OWORD *)(a1 + 8), &v10);
        }
        goto LABEL_10;
      }
      *(unsigned char *)(a1 + 24) = 1;
      *(void *)(a1 + 32) = 0;
      *(void *)(a1 + 40) = 0;
      sub_244CB41F0(a2, (_OWORD *)(a1 + 32), &v8);
    }
    long long v10 = v8;
    uint64_t v11 = v9;
LABEL_10:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
    if (*(_DWORD *)a3) {
      return result;
    }
    sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  }
  double result = *(double *)&v12;
  *(_OWORD *)a3 = v12;
  *(void *)(a3 + 16) = v13;
  return result;
}

double sub_244836BB8@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB6D80(a2, *(char **)a1, *(void *)(a1 + 8), (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_24484D940(a2, 1, (unsigned char *)(a1 + 16), (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_24484D940(a2, 2, (unsigned char *)(a1 + 104), (uint64_t)&v11);
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_24484D940(a2, 3, (unsigned char *)(a1 + 192), (uint64_t)&v11);
          uint64_t v9 = v12;
          long long v8 = v11;
          if (!v11)
          {
            sub_24484D940(a2, 4, (unsigned char *)(a1 + 280), (uint64_t)&v11);
            uint64_t v9 = v12;
            long long v8 = v11;
            if (!v11)
            {
              sub_24484D940(a2, 5, (unsigned char *)(a1 + 368), (uint64_t)&v11);
              uint64_t v9 = v12;
              long long v8 = v11;
              if (!v11)
              {
                sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
                long long v8 = v11;
                uint64_t v9 = v12;
              }
            }
          }
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244836D78@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v16[0] = 0;
  uint64_t v17 = a2;
  sub_2447ED6F8((uint64_t)v16, (uint64_t)&v13);
  int v6 = v15;
  if (v15 == 1)
  {
LABEL_13:
    double result = *(double *)&v13;
    *(_OWORD *)a3 = v13;
    *(void *)(a3 + 16) = v14;
  }
  else
  {
    while (1)
    {
      long long v11 = xmmword_265197DC0;
      uint64_t v12 = 27676;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v13)
      {
        case 0:
          sub_244CB41F0(a2, (_OWORD *)a1, &v11);
          break;
        case 1:
          *(unsigned char *)(a1 + 16) = 1;
          *(_OWORD *)(a1 + 24) = 0u;
          *(_OWORD *)(a1 + 40) = 0u;
          *(_OWORD *)(a1 + 56) = 0u;
          *(_OWORD *)(a1 + 72) = 0u;
          *(_OWORD *)(a1 + 88) = 0u;
          uint64_t v7 = a1 + 24;
          goto LABEL_10;
        case 2:
          *(unsigned char *)(a1 + 104) = 1;
          *(_OWORD *)(a1 + 112) = 0u;
          *(_OWORD *)(a1 + 128) = 0u;
          *(_OWORD *)(a1 + 144) = 0u;
          *(_OWORD *)(a1 + 160) = 0u;
          *(_OWORD *)(a1 + 176) = 0u;
          uint64_t v7 = a1 + 112;
          goto LABEL_10;
        case 3:
          *(unsigned char *)(a1 + 192) = 1;
          *(_OWORD *)(a1 + 200) = 0u;
          *(_OWORD *)(a1 + 216) = 0u;
          *(_OWORD *)(a1 + 232) = 0u;
          *(_OWORD *)(a1 + 248) = 0u;
          *(_OWORD *)(a1 + 264) = 0u;
          uint64_t v7 = a1 + 200;
          goto LABEL_10;
        case 4:
          *(unsigned char *)(a1 + 280) = 1;
          *(_OWORD *)(a1 + 288) = 0u;
          *(_OWORD *)(a1 + 304) = 0u;
          *(_OWORD *)(a1 + 320) = 0u;
          *(_OWORD *)(a1 + 336) = 0u;
          *(_OWORD *)(a1 + 352) = 0u;
          uint64_t v7 = a1 + 288;
          goto LABEL_10;
        case 5:
          *(unsigned char *)(a1 + 368) = 1;
          *(_OWORD *)(a1 + 376) = 0u;
          *(_OWORD *)(a1 + 392) = 0u;
          *(_OWORD *)(a1 + 408) = 0u;
          *(_OWORD *)(a1 + 424) = 0u;
          *(_OWORD *)(a1 + 440) = 0u;
          uint64_t v7 = a1 + 376;
LABEL_10:
          sub_244836A5C(v7, a2, (uint64_t)&v9);
          long long v11 = v9;
          uint64_t v12 = v10;
          break;
        default:
          break;
      }
      double result = *(double *)&v11;
      *(_OWORD *)a3 = v11;
      *(void *)(a3 + 16) = v12;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v16, (uint64_t)&v13);
      int v6 = v15;
      if (v15 == 1) {
        goto LABEL_13;
      }
    }
  }
  return result;
}

double sub_244836F74@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244836690((uint64_t *)a1, a2, 0, (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB65C8();
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_2447F6524(a2, (unsigned char *)(a1 + 24), (uint64_t)&v11);
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_24484D9C4(a2, 3, (unsigned char *)(a1 + 48), (uint64_t)&v11);
          uint64_t v9 = v12;
          long long v8 = v11;
          if (!v11)
          {
            sub_24484B7DC((unsigned char *)(a1 + 136), (uint64_t)&v11);
            uint64_t v9 = v12;
            long long v8 = v11;
            if (!v11)
            {
              sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
              long long v8 = v11;
              uint64_t v9 = v12;
            }
          }
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244837108@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_12:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265197DD8;
      uint64_t v11 = 27738;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v12)
      {
        case 0:
          sub_244836848(a1, a2, (uint64_t)&v10);
          break;
        case 1:
          sub_244CB3C0C(a2, (char *)(a1 + 80), (uint64_t)&v10);
          break;
        case 2:
          *(unsigned char *)(a1 + 88) = 1;
          *(void *)(a1 + 96) = 0;
          *(void *)(a1 + 104) = 0;
          sub_244CB41F0(a2, (_OWORD *)(a1 + 96), &v8);
          goto LABEL_9;
        case 3:
          *(unsigned char *)(a1 + 112) = 1;
          *(_OWORD *)(a1 + 120) = 0u;
          *(_OWORD *)(a1 + 136) = 0u;
          *(_OWORD *)(a1 + 152) = 0u;
          *(_OWORD *)(a1 + 168) = 0u;
          *(_OWORD *)(a1 + 184) = 0u;
          *(_OWORD *)(a1 + 200) = 0u;
          *(_OWORD *)(a1 + 216) = 0u;
          *(_OWORD *)(a1 + 232) = 0u;
          *(_OWORD *)(a1 + 248) = 0u;
          *(_OWORD *)(a1 + 264) = 0u;
          *(_OWORD *)(a1 + 280) = 0u;
          *(_OWORD *)(a1 + 296) = 0u;
          *(_OWORD *)(a1 + 312) = 0u;
          sub_244836184(a1 + 120, a2, (uint64_t)&v8);
          goto LABEL_9;
        case 4:
          *(_WORD *)(a1 + 328) = 1;
          sub_244CB3C0C(a2, (char *)(a1 + 329), (uint64_t)&v8);
LABEL_9:
          long long v10 = v8;
          uint64_t v11 = v9;
          break;
        default:
          break;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_12;
      }
    }
  }
  return result;
}

double sub_2448372D4@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB6D80(a2, *(char **)a1, *(void *)(a1 + 8), (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_2447F6524(a2, (unsigned char *)(a1 + 16), (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_24484DA48(a2, 2, (unsigned char *)(a1 + 40), (uint64_t)&v11);
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
          long long v8 = v11;
          uint64_t v9 = v12;
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244837410@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  for (int i = v14; v14 != 1; int i = v14)
  {
    long long v10 = xmmword_265197DF0;
    uint64_t v11 = 27790;
    if (i) {
      sub_24484AFEC();
    }
    if (v12 == 2)
    {
      *(unsigned char *)(a1 + 40) = 1;
      *(_OWORD *)(a1 + 48) = 0u;
      *(_OWORD *)(a1 + 64) = 0u;
      *(_OWORD *)(a1 + 80) = 0u;
      *(_OWORD *)(a1 + 96) = 0u;
      *(_OWORD *)(a1 + 112) = 0u;
      *(_OWORD *)(a1 + 128) = 0u;
      *(_OWORD *)(a1 + 144) = 0u;
      *(_OWORD *)(a1 + 160) = 0u;
      *(_OWORD *)(a1 + 176) = 0u;
      *(_OWORD *)(a1 + 192) = 0u;
      *(_OWORD *)(a1 + 208) = 0u;
      *(_OWORD *)(a1 + 224) = 0u;
      *(_OWORD *)(a1 + 240) = 0u;
      *(_OWORD *)(a1 + 256) = 0u;
      *(_OWORD *)(a1 + 272) = 0u;
      *(_OWORD *)(a1 + 288) = 0u;
      *(_OWORD *)(a1 + 304) = 0u;
      *(_OWORD *)(a1 + 320) = 0u;
      *(_OWORD *)(a1 + 336) = 0u;
      *(_OWORD *)(a1 + 352) = 0u;
      *(_OWORD *)(a1 + 368) = 0u;
      *(_OWORD *)(a1 + 384) = 0u;
      *(_OWORD *)(a1 + 400) = 0u;
      *(_OWORD *)(a1 + 416) = 0u;
      *(_OWORD *)(a1 + 432) = 0u;
      *(_OWORD *)(a1 + 448) = 0u;
      *(_OWORD *)(a1 + 464) = 0u;
      *(_OWORD *)(a1 + 480) = 0u;
      *(void *)(a1 + 496) = 0;
      sub_244836D78(a1 + 48, a2, (uint64_t)&v8);
    }
    else
    {
      if (v12 != 1)
      {
        if (!(_BYTE)v12) {
          sub_244CB41F0(a2, (_OWORD *)a1, &v10);
        }
        goto LABEL_10;
      }
      *(unsigned char *)(a1 + 16) = 1;
      *(void *)(a1 + 24) = 0;
      *(void *)(a1 + 32) = 0;
      sub_244CB41F0(a2, (_OWORD *)(a1 + 24), &v8);
    }
    long long v10 = v8;
    uint64_t v11 = v9;
LABEL_10:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
    if (*(_DWORD *)a3) {
      return result;
    }
    sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  }
  double result = *(double *)&v12;
  *(_OWORD *)a3 = v12;
  *(void *)(a3 + 16) = v13;
  return result;
}

double sub_244837598@<D0>(unsigned char *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  sub_244800450((uint64_t)&v7, 0, a1);
  if (!v8)
  {
    sub_2447F6524(v7, a1 + 8, (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
      long long v8 = v11;
      uint64_t v9 = v12;
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_24483768C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265197E08;
      uint64_t v11 = 27833;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        *(unsigned char *)(a1 + 8) = 1;
        *(void *)(a1 + 16) = 0;
        *(void *)(a1 + 24) = 0;
        sub_244CB41F0(a2, (_OWORD *)(a1 + 16), &v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_2447FACE4(a2, (unsigned char *)a1, &v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

void sub_2448377A8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4 = *(_DWORD *)(a3 + 8);
  switch(v4)
  {
    case 65528:
      a1 += 88;
      goto LABEL_3;
    case 65529:
      a1 += 168;
      goto LABEL_3;
    case 65530:
      a1 += 248;
      goto LABEL_3;
    case 65531:
      a1 += 328;
      goto LABEL_3;
    case 65532:
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 408), a4);
      return;
    case 65533:
      sub_244CB3F40(a2, (_WORD *)(a1 + 412), a4);
      return;
    default:
      if (v4 == 1)
      {
        sub_24484B2E8(a2, (_DWORD *)(a1 + 80), (void *)a4);
      }
      else if (v4)
      {
        *(_DWORD *)a4 = 0;
        *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-comm"
                              "on/app-common/zap-generated/cluster-objects.cpp";
        *(_DWORD *)(a4 + 16) = 27876;
      }
      else
      {
LABEL_3:
        sub_24484B03C(a1, a2, a4);
      }
      return;
  }
}

double sub_244837870@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB68B8();
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  sub_2447F8840((uint64_t)&v7, 1, (unsigned char *)(a1 + 1));
  if (!v8)
  {
    sub_244CB6D80(v7, *(char **)(a1 + 8), *(void *)(a1 + 16), (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
      long long v8 = v11;
      uint64_t v9 = v12;
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244837990@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  for (int i = v14; v14 != 1; int i = v14)
  {
    long long v10 = xmmword_265197E20;
    uint64_t v11 = 27908;
    if (i) {
      sub_24484AFEC();
    }
    if (v12 == 2)
    {
      sub_244CB41F0(a2, (_OWORD *)(a1 + 8), &v8);
    }
    else
    {
      if (v12 != 1)
      {
        if (!(_BYTE)v12) {
          sub_244CB3E8C(a2, (unsigned char *)a1, (uint64_t)&v10);
        }
        goto LABEL_10;
      }
      sub_2447F0A54(a2, (unsigned char *)(a1 + 1), &v8);
    }
    long long v10 = v8;
    uint64_t v11 = v9;
LABEL_10:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
    if (*(_DWORD *)a3) {
      return result;
    }
    sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  }
  double result = *(double *)&v12;
  *(_OWORD *)a3 = v12;
  *(void *)(a3 + 16) = v13;
  return result;
}

double sub_244837AC0@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265197E38;
      uint64_t v9 = 27954;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3E8C(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_244837B98@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265197E50;
      uint64_t v11 = 27989;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_244CB41F0(a2, (_OWORD *)(a1 + 8), &v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB3E8C(a2, (unsigned char *)a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

void sub_244837CA8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4 = *(_DWORD *)(a3 + 8);
  switch(v4)
  {
    case 65528:
      a1 += 88;
      goto LABEL_3;
    case 65529:
      a1 += 168;
      goto LABEL_3;
    case 65530:
      a1 += 248;
      goto LABEL_3;
    case 65531:
      a1 += 328;
      goto LABEL_3;
    case 65532:
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 408), a4);
      return;
    case 65533:
      sub_244CB3F40(a2, (_WORD *)(a1 + 412), a4);
      return;
    default:
      if (v4 == 1)
      {
        sub_244CB3E8C(a2, (unsigned char *)(a1 + 80), a4);
      }
      else if (v4)
      {
        *(_DWORD *)a4 = 0;
        *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-comm"
                              "on/app-common/zap-generated/cluster-objects.cpp";
        *(_DWORD *)(a4 + 16) = 28032;
      }
      else
      {
LABEL_3:
        sub_24484B03C(a1, a2, a4);
      }
      return;
  }
}

double sub_244837D70@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_2447EE638(a1, a2, 0, (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_24483F80C((unsigned char *)(a1 + 24), (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
        long long v8 = v11;
        uint64_t v9 = v12;
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244837E80@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_9:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265197E68;
      uint64_t v9 = 28063;
      if (v6) {
        sub_24484AFEC();
      }
      if (v10 == 1)
      {
        *(unsigned char *)(a1 + 24) = 1;
        *(_WORD *)(a1 + 26) = 0;
        sub_244CB3F40(a2, (_WORD *)(a1 + 26), (uint64_t)&v8);
      }
      else if (!(_BYTE)v10)
      {
        sub_2447EE748(a1, a2, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_244837F8C@<D0>(unsigned char *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_24484DACC(a2, 0, a1, (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_24480248C(a2, a1 + 32, (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
        long long v8 = v11;
        uint64_t v9 = v12;
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_24483809C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_9:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265197E80;
      uint64_t v9 = 28106;
      if (v6) {
        sub_24484AFEC();
      }
      if (v10 == 1)
      {
        sub_2447F978C(a2, a1 + 32, (uint64_t)&v8);
      }
      else if (!(_BYTE)v10)
      {
        *(unsigned char *)a1 = 1;
        *(void *)(a1 + 16) = 0;
        *(void *)(a1 + 24) = 0;
        *(void *)(a1 + 8) = 0;
        sub_2447EE748(a1 + 8, a2, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_2448381B8@<D0>(unsigned char *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_24484DACC(a2, 0, a1, (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
      long long v8 = v11;
      uint64_t v9 = v12;
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_24483829C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265197E98;
      uint64_t v9 = 28144;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10)
      {
        *(unsigned char *)a1 = 1;
        *(void *)(a1 + 16) = 0;
        *(void *)(a1 + 24) = 0;
        *(void *)(a1 + 8) = 0;
        sub_2447EE748(a1 + 8, a2, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_244838390@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265197EB0;
      uint64_t v9 = 28178;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10)
      {
        *(unsigned char *)a1 = 1;
        *(void *)(a1 + 16) = 0;
        *(void *)(a1 + 24) = 0;
        *(void *)(a1 + 8) = 0;
        sub_2447EE748(a1 + 8, a2, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_244838484@<D0>(unsigned char *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  sub_2447F8840((uint64_t)&v7, 0, a1);
  if (!v8)
  {
    sub_24480248C(v7, a1 + 8, (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
      long long v8 = v11;
      uint64_t v9 = v12;
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244838578@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265197EC8;
      uint64_t v11 = 28213;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_2447F978C(a2, (uint64_t)(a1 + 8), (uint64_t)&v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_2447F0A54(a2, a1, &v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

void sub_244838688(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4 = *(_DWORD *)(a3 + 8);
  switch(v4)
  {
    case 65528:
      a1 += 120;
      goto LABEL_3;
    case 65529:
      a1 += 200;
      goto LABEL_3;
    case 65530:
      a1 += 280;
      goto LABEL_3;
    case 65531:
      a1 += 360;
      goto LABEL_3;
    case 65532:
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 440), a4);
      return;
    case 65533:
      sub_244CB3F40(a2, (_WORD *)(a1 + 444), a4);
      return;
    default:
      if (v4 == 1)
      {
        sub_244838750(a2, a1 + 80, (void *)a4);
      }
      else if (v4)
      {
        *(_DWORD *)a4 = 0;
        *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-comm"
                              "on/app-common/zap-generated/cluster-objects.cpp";
        *(_DWORD *)(a4 + 16) = 28256;
      }
      else
      {
LABEL_3:
        sub_24484B03C(a1, a2, a4);
      }
      return;
  }
}

void sub_244838750(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if (sub_244CB3B68(a1) == 20)
  {
    if (*(unsigned char *)(a2 + 32)) {
      *(unsigned char *)(a2 + 32) = 0;
    }
    int v6 = 168;
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(unsigned char *)(a2 + 32) = 1;
    sub_244837E80(a2, a1, (uint64_t)a3);
    if (*(_DWORD *)a3) {
      return;
    }
    int v6 = 177;
  }
  *(_DWORD *)a3 = 0;
  a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
  *((_DWORD *)a3 + 4) = v6;
}

void sub_2448387E8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  int v4 = (_OWORD *)a1;
  int v6 = *(_DWORD *)(a3 + 8);
  switch(v6)
  {
    case 0:
      goto LABEL_15;
    case 1:
      *a4 = 0;
      a4[1] = 0;
      a4[2] = 0;
      sub_24484B11C(a2, (_WORD *)(a1 + 16), a4);
      if (!*(_DWORD *)a4)
      {
        *(_DWORD *)a4 = 0;
        a4[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
        int v7 = 61;
LABEL_22:
        *((_DWORD *)a4 + 4) = v7;
      }
      return;
    case 2:
      int v4 = (_OWORD *)(a1 + 24);
      goto LABEL_15;
    case 3:
      uint64_t v9 = (_WORD *)(a1 + 40);
LABEL_34:
      sub_244CB3F40(a2, v9, (uint64_t)a4);
      return;
    case 4:
      uint64_t v10 = a1 + 48;
      sub_2447EE748(v10, a2, (uint64_t)a4);
      return;
    case 5:
      sub_2446D1A48(a2, (unsigned char *)(a1 + 72), a4);
      return;
    case 6:
      int v4 = (_OWORD *)(a1 + 80);
LABEL_15:
      sub_244CB41F0(a2, v4, a4);
      break;
    case 7:
      uint64_t v8 = a1 + 96;
LABEL_20:
      sub_24484B03C(v8, a2, (uint64_t)a4);
      break;
    default:
      switch(v6)
      {
        case 65528:
          uint64_t v8 = a1 + 176;
          goto LABEL_27;
        case 65529:
          uint64_t v8 = a1 + 256;
          goto LABEL_27;
        case 65530:
          uint64_t v8 = a1 + 336;
          goto LABEL_27;
        case 65531:
          uint64_t v8 = a1 + 416;
LABEL_27:
          goto LABEL_20;
        case 65532:
          sub_244CB3FB0(a2, (_DWORD *)(a1 + 496), (uint64_t)a4);
          return;
        case 65533:
          uint64_t v9 = (_WORD *)(a1 + 500);
          goto LABEL_34;
        default:
          *(_DWORD *)a4 = 0;
          a4[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-common/app-commo"
                  "n/zap-generated/cluster-objects.cpp";
          int v7 = 28303;
          goto LABEL_22;
      }
  }
}

double sub_244838A38@<D0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265197EE0;
      uint64_t v9 = 28333;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB41F0(a2, a1, &v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_244838B10@<D0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265197EF8;
      uint64_t v9 = 28367;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB41F0(a2, a1, &v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_244838BE8@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB6D80(a2, *(char **)a1, *(void *)(a1 + 8), (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB6D80(a2, *(char **)(a1 + 16), *(void *)(a1 + 24), (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244839174((unsigned char *)(a1 + 32), (uint64_t)&v11);
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
          long long v8 = v11;
          uint64_t v9 = v12;
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244838D24@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  for (int i = v14; v14 != 1; int i = v14)
  {
    long long v10 = xmmword_265197F10;
    uint64_t v11 = 28403;
    if (i) {
      sub_24484AFEC();
    }
    if (v12 == 2)
    {
      *(unsigned char *)(a1 + 32) = 1;
      *(void *)(a1 + 40) = 0;
      sub_244CB3EFC(a2, (void *)(a1 + 40), (uint64_t)&v8);
    }
    else
    {
      if (v12 != 1)
      {
        if (!(_BYTE)v12) {
          sub_244CB41F0(a2, (_OWORD *)a1, &v10);
        }
        goto LABEL_10;
      }
      sub_244CB41F0(a2, (_OWORD *)(a1 + 16), &v8);
    }
    long long v10 = v8;
    uint64_t v11 = v9;
LABEL_10:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
    if (*(_DWORD *)a3) {
      return result;
    }
    sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  }
  double result = *(double *)&v12;
  *(_OWORD *)a3 = v12;
  *(void *)(a3 + 16) = v13;
  return result;
}

double sub_244838E68@<D0>(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244839174(a1, (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
      long long v8 = v11;
      uint64_t v9 = v12;
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244838F4C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265197F28;
      uint64_t v9 = 28445;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10)
      {
        *(unsigned char *)a1 = 1;
        *(void *)(a1 + 8) = 0;
        sub_244CB3EFC(a2, (void *)(a1 + 8), (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

void sub_24483903C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  switch(*(_DWORD *)(a3 + 8))
  {
    case 0xFFF8:
      goto LABEL_2;
    case 0xFFF9:
      a1 += 80;
      goto LABEL_2;
    case 0xFFFA:
      a1 += 160;
      goto LABEL_2;
    case 0xFFFB:
      a1 += 240;
LABEL_2:
      sub_24484B03C(a1, a2, a4);
      break;
    case 0xFFFC:
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 320), a4);
      break;
    case 0xFFFD:
      sub_244CB3F40(a2, (_WORD *)(a1 + 324), a4);
      break;
    default:
      *(_DWORD *)a4 = 0;
      *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-common"
                            "/app-common/zap-generated/cluster-objects.cpp";
      *(_DWORD *)(a4 + 16) = 28480;
      break;
  }
}

void sub_2448390E0(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  int v7 = 0;
  a4[1] = 0;
  a4[2] = 0;
  *a4 = 0;
  sub_244CB7594(a2, a3, 21, &v7, (uint64_t)a4);
  if (!*(_DWORD *)a4)
  {
    *a4 = 0;
    a4[1] = 0;
    a4[2] = 0;
    sub_244839174(a1, (uint64_t)a4);
    if (!*(_DWORD *)a4) {
      sub_244CB7708((uint64_t)a2, v7, (uint64_t)a4);
    }
  }
}

void sub_244839174(unsigned char *a1@<X2>, uint64_t a2@<X8>)
{
  if (*a1)
  {
    sub_2446F7170(a1);
    sub_244CB68CC();
  }
  else
  {
    *(_DWORD *)a2 = 0;
    *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    *(_DWORD *)(a2 + 16) = 171;
  }
}

double sub_2448391FC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265197F40;
      uint64_t v9 = 28506;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10)
      {
        *(unsigned char *)a1 = 1;
        *(void *)(a1 + 8) = 0;
        sub_244CB3EFC(a2, (void *)(a1 + 8), (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_2448392EC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265197F58;
      uint64_t v11 = 28547;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        *(unsigned char *)(a1 + 16) = 1;
        *(void *)(a1 + 24) = 0;
        *(void *)(a1 + 32) = 0;
        sub_244CB41F0(a2, (_OWORD *)(a1 + 24), &v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB41F0(a2, (_OWORD *)a1, &v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_244839408@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_2447F6524(a2, (unsigned char *)a1, (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB6D80(a2, *(char **)(a1 + 24), *(void *)(a1 + 32), (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
        long long v8 = v11;
        uint64_t v9 = v12;
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244839518@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265197F70;
      uint64_t v11 = 28590;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_244CB41F0(a2, (_OWORD *)(a1 + 24), &v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        *(unsigned char *)a1 = 1;
        *(void *)(a1 + 8) = 0;
        *(void *)(a1 + 16) = 0;
        sub_244CB41F0(a2, (_OWORD *)(a1 + 8), &v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_244839640@<D0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265197F88;
      uint64_t v9 = 28648;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB41F0(a2, a1, &v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_244839718@<D0>(unsigned char *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_2447F6524(a2, a1, (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_24483F918(a1 + 24, (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
        long long v8 = v11;
        uint64_t v9 = v12;
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244839828@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265197FA0;
      uint64_t v11 = 28723;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        *(unsigned char *)(a1 + 24) = 1;
        *(_DWORD *)(a1 + 28) = 0;
        sub_244CB3FB0(a2, (_DWORD *)(a1 + 28), (uint64_t)&v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        *(unsigned char *)a1 = 1;
        *(void *)(a1 + 8) = 0;
        *(void *)(a1 + 16) = 0;
        sub_244CB41F0(a2, (_OWORD *)(a1 + 8), &v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_244839958@<D0>(_DWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265197FB8;
      uint64_t v9 = 28761;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3FB0(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_244839A30@<D0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265197FD0;
      uint64_t v9 = 28835;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB41F0(a2, a1, &v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_244839B08@<D0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265197FE8;
      uint64_t v9 = 28869;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB41F0(a2, a1, &v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

void sub_244839BE0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4 = (char *)a1;
  int v5 = *(_DWORD *)(a3 + 8);
  switch(v5)
  {
    case 0:
      goto LABEL_13;
    case 1:
      uint64_t v6 = a1 + 8;
      goto LABEL_3;
    case 2:
      int v7 = (_OWORD *)(a1 + 88);
      goto LABEL_9;
    case 3:
      uint64_t v6 = a1 + 104;
LABEL_3:
      sub_24484B03C(v6, a2, a4);
      return;
    case 4:
      int v7 = (_OWORD *)(a1 + 184);
LABEL_9:
      sub_244CB41F0(a2, v7, (void *)a4);
      return;
    case 5:
      long long v8 = (_DWORD *)(a1 + 200);
      goto LABEL_19;
    case 6:
      long long v8 = (_DWORD *)(a1 + 204);
LABEL_19:
      sub_244CB3FB0(a2, v8, a4);
      break;
    case 7:
      int v4 = (char *)(a1 + 208);
LABEL_13:
      sub_244CB3C0C(a2, v4, a4);
      break;
    default:
      switch(v5)
      {
        case 65528:
          uint64_t v6 = a1 + 216;
          goto LABEL_3;
        case 65529:
          uint64_t v6 = a1 + 296;
          goto LABEL_3;
        case 65530:
          uint64_t v6 = a1 + 376;
          goto LABEL_3;
        case 65531:
          uint64_t v6 = a1 + 456;
          goto LABEL_3;
        case 65532:
          long long v8 = (_DWORD *)(a1 + 536);
          goto LABEL_19;
        case 65533:
          sub_244CB3F40(a2, (_WORD *)(a1 + 540), a4);
          break;
        default:
          *(_DWORD *)a4 = 0;
          *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-co"
                                "mmon/app-common/zap-generated/cluster-objects.cpp";
          *(_DWORD *)(a4 + 16) = 28920;
          break;
      }
      break;
  }
}

double sub_244839D1C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265198000;
      uint64_t v11 = 28973;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_244CB41F0(a2, (_OWORD *)(a1 + 24), &v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        *(unsigned char *)a1 = 1;
        *(void *)(a1 + 8) = 0;
        *(void *)(a1 + 16) = 0;
        sub_244CB41F0(a2, (_OWORD *)(a1 + 8), &v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_244839E44@<D0>(unsigned char *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  sub_2447F1C40((uint64_t)&v7, 0, a1);
  if (!v8)
  {
    sub_2447F6524(v7, a1 + 8, (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_2447F6524(v7, a1 + 32, (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
        long long v8 = v11;
        uint64_t v9 = v12;
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244839F64@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  for (int i = v16; v16 != 1; int i = v16)
  {
    long long v12 = xmmword_265198018;
    uint64_t v13 = 29013;
    if (i) {
      sub_24484AFEC();
    }
    if (v14 == 2)
    {
      *(unsigned char *)(a1 + 32) = 1;
      *(void *)(a1 + 40) = 0;
      *(void *)(a1 + 48) = 0;
      uint64_t v7 = a2;
      long long v8 = (_OWORD *)(a1 + 40);
    }
    else
    {
      if (v14 != 1)
      {
        if (!(_BYTE)v14) {
          sub_2447F1DCC(a2, (unsigned char *)a1, &v12);
        }
        goto LABEL_10;
      }
      *(unsigned char *)(a1 + 8) = 1;
      *(void *)(a1 + 16) = 0;
      *(void *)(a1 + 24) = 0;
      uint64_t v7 = a2;
      long long v8 = (_OWORD *)(a1 + 16);
    }
    sub_244CB41F0(v7, v8, &v10);
    long long v12 = v10;
    uint64_t v13 = v11;
LABEL_10:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
    if (*(_DWORD *)a3) {
      return result;
    }
    sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  }
  double result = *(double *)&v14;
  *(_OWORD *)a3 = v14;
  *(void *)(a3 + 16) = v15;
  return result;
}

void sub_24483A0AC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  switch(*(_DWORD *)(a3 + 8))
  {
    case 0xFFF8:
      goto LABEL_2;
    case 0xFFF9:
      a1 += 80;
      goto LABEL_2;
    case 0xFFFA:
      a1 += 160;
      goto LABEL_2;
    case 0xFFFB:
      a1 += 240;
LABEL_2:
      sub_24484B03C(a1, a2, a4);
      break;
    case 0xFFFC:
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 320), a4);
      break;
    case 0xFFFD:
      sub_244CB3F40(a2, (_WORD *)(a1 + 324), a4);
      break;
    default:
      *(_DWORD *)a4 = 0;
      *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-common"
                            "/app-common/zap-generated/cluster-objects.cpp";
      *(_DWORD *)(a4 + 16) = 29056;
      break;
  }
}

double sub_24483A150@<D0>(_WORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265198030;
      uint64_t v11 = 29087;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_244CB3F40(a2, a1 + 1, (uint64_t)&v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB3F40(a2, a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_24483A260@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB6D80(v7, *(char **)a1, *(void *)(a1 + 8), (uint64_t)&v11);
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  sub_2447F06A4((uint64_t)&v7, 1, (unsigned char *)(a1 + 16));
  sub_24480CF08((uint64_t)&v7, 2u, (uint64_t *)(a1 + 24));
  if (!v8)
  {
    sub_2447F6524(v7, (unsigned char *)(a1 + 40), (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
      long long v8 = v11;
      uint64_t v9 = v12;
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_24483A390@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_11:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265198048;
      uint64_t v11 = 29130;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v12)
      {
        case 0:
          sub_244CB41F0(a2, (_OWORD *)a1, &v10);
          break;
        case 1:
          sub_2447F5F24(a2, (unsigned char *)(a1 + 16), &v8);
          goto LABEL_8;
        case 2:
          sub_24484B03C(a1 + 24, a2, (uint64_t)&v8);
          goto LABEL_8;
        case 3:
          *(unsigned char *)(a1 + 104) = 1;
          *(void *)(a1 + 112) = 0;
          *(void *)(a1 + 120) = 0;
          sub_244CB41F0(a2, (_OWORD *)(a1 + 112), &v8);
LABEL_8:
          long long v10 = v8;
          uint64_t v11 = v9;
          break;
        default:
          break;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_11;
      }
    }
  }
  return result;
}

double sub_24483A510@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB6904();
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  sub_2447F0720((uint64_t)&v7, 1, (unsigned char *)(a1 + 2));
  sub_2447F1C40((uint64_t)&v7, 2, (unsigned char *)(a1 + 3));
  if (!v8)
  {
    sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_24483A614@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  for (int i = v14; v14 != 1; int i = v14)
  {
    long long v10 = xmmword_265198060;
    uint64_t v11 = 29180;
    if (i) {
      sub_24484AFEC();
    }
    if (v12 == 2)
    {
      sub_2447F1DCC(a2, (unsigned char *)(a1 + 3), &v8);
    }
    else
    {
      if (v12 != 1)
      {
        if (!(_BYTE)v12) {
          sub_244CB3F40(a2, (_WORD *)a1, (uint64_t)&v10);
        }
        goto LABEL_10;
      }
      sub_2447F092C(a2, (BOOL *)(a1 + 2), &v8);
    }
    long long v10 = v8;
    uint64_t v11 = v9;
LABEL_10:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
    if (*(_DWORD *)a3) {
      return result;
    }
    sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  }
  double result = *(double *)&v12;
  *(_OWORD *)a3 = v12;
  *(void *)(a3 + 16) = v13;
  return result;
}

double sub_24483A744@<D0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  sub_244CB7594(a1, a2, 21, &v8, (uint64_t)&v9);
  long long v6 = v9;
  uint64_t v7 = v10;
  if (!v9)
  {
    sub_244CB6904();
    uint64_t v7 = v10;
    long long v6 = v9;
    if (!v9)
    {
      sub_244CB6904();
      uint64_t v7 = v10;
      long long v6 = v9;
      if (!v9)
      {
        sub_244CB694C();
        uint64_t v7 = v10;
        long long v6 = v9;
        if (!v9)
        {
          sub_244CB6904();
          uint64_t v7 = v10;
          long long v6 = v9;
          if (!v9)
          {
            sub_244CB7708((uint64_t)a1, v8, (uint64_t)&v9);
            long long v6 = v9;
            uint64_t v7 = v10;
          }
        }
      }
    }
  }
  double result = *(double *)&v6;
  *(_OWORD *)a3 = v6;
  *(void *)(a3 + 16) = v7;
  return result;
}

double sub_24483A8AC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  int v6 = v16;
  if (v16 == 1)
  {
LABEL_12:
    double result = *(double *)&v14;
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 16) = v15;
  }
  else
  {
    while (1)
    {
      long long v12 = xmmword_265198078;
      uint64_t v13 = 29227;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v14)
      {
        case 0:
          sub_244CB3F40(a2, (_WORD *)a1, (uint64_t)&v12);
          break;
        case 1:
          uint64_t v7 = a2;
          int v8 = (_WORD *)(a1 + 2);
          goto LABEL_8;
        case 2:
          sub_244CB3FB0(a2, (_DWORD *)(a1 + 4), (uint64_t)&v10);
          goto LABEL_9;
        case 3:
          uint64_t v7 = a2;
          int v8 = (_WORD *)(a1 + 8);
LABEL_8:
          sub_244CB3F40(v7, v8, (uint64_t)&v10);
LABEL_9:
          long long v12 = v10;
          uint64_t v13 = v11;
          break;
        default:
          break;
      }
      double result = *(double *)&v12;
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
      int v6 = v16;
      if (v16 == 1) {
        goto LABEL_12;
      }
    }
  }
  return result;
}

double sub_24483AA1C@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_24483A260(a1, a2, 0, (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
      long long v8 = v11;
      uint64_t v9 = v12;
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_24483AB00@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265198090;
      uint64_t v9 = 29277;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_24483A390(a1, a2, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_24483ABD8@<D0>(_WORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_2651980A8;
      uint64_t v9 = 29311;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3F40(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_24483ACB0@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB6904();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_24483A260(a1 + 8, a2, 1, (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
        long long v8 = v11;
        uint64_t v9 = v12;
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_24483ADC0@<D0>(_WORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_2651980C0;
      uint64_t v11 = 29346;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_24483A390((uint64_t)(a1 + 4), a2, (uint64_t)&v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB3F40(a2, a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_24483AED0@<D0>(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_24484C0EC(a1, (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
      long long v8 = v11;
      uint64_t v9 = v12;
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_24483AFB4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_2651980D8;
      uint64_t v9 = 29384;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10)
      {
        *(unsigned char *)a1 = 1;
        *(_DWORD *)(a1 + 2) = 0;
        sub_2447EF9E0(a2, (__int16 *)(a1 + 2), (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_24483B0A4@<D0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  sub_24483B16C((uint64_t)&v7, 0, a1);
  if (!v8)
  {
    sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_24483B16C(uint64_t a1, unsigned int a2, uint64_t *a3)
{
  uint64_t v3 = a1 + 8;
  if (!*(_DWORD *)(a1 + 8))
  {
    int v4 = *(char **)a1;
    uint64_t v5 = *a3;
    uint64_t v6 = a3[1];
    int v11 = 0;
    uint64_t v10 = 0;
    long long v9 = 0uLL;
    sub_244CB7594(v4, a2, 22, &v11, (uint64_t)&v9);
    if (!v9)
    {
      if (v6)
      {
        uint64_t v7 = v6 << 6;
        while (1)
        {
          long long v9 = 0uLL;
          uint64_t v10 = 0;
          sub_24483A260(v5, v4, 256, (uint64_t)&v9);
          if (v9) {
            break;
          }
          v5 += 64;
          v7 -= 64;
          if (!v7) {
            goto LABEL_7;
          }
        }
      }
      else
      {
LABEL_7:
        long long v9 = 0uLL;
        uint64_t v10 = 0;
        sub_244CB7708((uint64_t)v4, v11, (uint64_t)&v9);
        if (!v9)
        {
          LODWORD(v9) = 0;
          *((void *)&v9 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/List.h";
          LODWORD(v10) = 86;
        }
      }
    }
    double result = *(double *)&v9;
    *(_OWORD *)uint64_t v3 = v9;
    *(void *)(v3 + 16) = v10;
  }
  return result;
}

double sub_24483B258@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_2651980F0;
      uint64_t v9 = 29418;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_24484B03C(a1, a2, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_24483B330@<D0>(_WORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265198108;
      uint64_t v9 = 29452;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3F40(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

void sub_24483B408(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  switch(*(_DWORD *)(a3 + 8))
  {
    case 0xFFF8:
      a1 += 248;
      goto LABEL_3;
    case 0xFFF9:
      a1 += 328;
      goto LABEL_3;
    case 0xFFFA:
      a1 += 408;
      goto LABEL_3;
    case 0xFFFB:
      a1 += 488;
LABEL_3:
      sub_24484B03C(a1, a2, a4);
      break;
    case 0xFFFC:
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 568), a4);
      break;
    case 0xFFFD:
      sub_244CB3F40(a2, (_WORD *)(a1 + 572), a4);
      break;
    default:
      switch(*(_DWORD *)(a3 + 8))
      {
        case 0xFFF8:
          goto LABEL_3;
        case 0xFFF9:
          a1 += 80;
          goto LABEL_3;
        case 0xFFFA:
          a1 += 160;
          goto LABEL_3;
        case 0xFFFB:
          sub_244CB3E8C(a2, (unsigned char *)(a1 + 240), a4);
          break;
        default:
          *(_DWORD *)a4 = 0;
          *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-co"
                                "mmon/app-common/zap-generated/cluster-objects.cpp";
          *(_DWORD *)(a4 + 16) = 29495;
          break;
      }
      break;
  }
}

void sub_24483B510(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  int v10 = 0;
  a4[1] = 0;
  a4[2] = 0;
  *a4 = 0;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)a4);
  if (!*(_DWORD *)a4)
  {
    uint64_t v7 = *a1;
    uint64_t v8 = a1[1];
    int v11 = 0;
    a4[1] = 0;
    a4[2] = 0;
    *a4 = 0;
    sub_244CB7594(a2, 0, 22, &v11, (uint64_t)a4);
    if (!*(_DWORD *)a4)
    {
      if (v8)
      {
        uint64_t v9 = 2 * v8;
        while (1)
        {
          *a4 = 0;
          a4[1] = 0;
          a4[2] = 0;
          sub_244CB6904();
          if (*(_DWORD *)a4) {
            break;
          }
          v7 += 2;
          v9 -= 2;
          if (!v9) {
            goto LABEL_7;
          }
        }
      }
      else
      {
LABEL_7:
        *a4 = 0;
        a4[1] = 0;
        a4[2] = 0;
        sub_244CB7708((uint64_t)a2, v11, (uint64_t)a4);
        if (!*(_DWORD *)a4)
        {
          *a4 = 0;
          a4[1] = 0;
          a4[2] = 0;
          if (*((unsigned char *)a1 + 16) == 1)
          {
            *(_DWORD *)a4 = 1415;
            a4[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
            *((_DWORD *)a4 + 4) = 75;
          }
          else
          {
            sub_244CB68B8();
            if (!*(_DWORD *)a4) {
              sub_244CB7708((uint64_t)a2, v10, (uint64_t)a4);
            }
          }
        }
      }
    }
  }
}

double sub_24483B65C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265198120;
      uint64_t v11 = 29522;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_2447F092C(a2, (BOOL *)(a1 + 80), &v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_24484B03C(a1, a2, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

void sub_24483B76C(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  int v10 = 0;
  a4[1] = 0;
  a4[2] = 0;
  *a4 = 0;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)a4);
  if (!*(_DWORD *)a4)
  {
    uint64_t v7 = *a1;
    uint64_t v8 = a1[1];
    int v11 = 0;
    a4[1] = 0;
    a4[2] = 0;
    *a4 = 0;
    sub_244CB7594(a2, 0, 22, &v11, (uint64_t)a4);
    if (!*(_DWORD *)a4)
    {
      if (v8)
      {
        uint64_t v9 = 2 * v8;
        while (1)
        {
          *a4 = 0;
          a4[1] = 0;
          a4[2] = 0;
          sub_244CB6904();
          if (*(_DWORD *)a4) {
            break;
          }
          v7 += 2;
          v9 -= 2;
          if (!v9) {
            goto LABEL_7;
          }
        }
      }
      else
      {
LABEL_7:
        *a4 = 0;
        a4[1] = 0;
        a4[2] = 0;
        sub_244CB7708((uint64_t)a2, v11, (uint64_t)a4);
        if (!*(_DWORD *)a4)
        {
          *a4 = 0;
          a4[1] = 0;
          a4[2] = 0;
          if (*((unsigned char *)a1 + 16) == 2)
          {
            *(_DWORD *)a4 = 1415;
            a4[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
            *((_DWORD *)a4 + 4) = 75;
          }
          else
          {
            sub_244CB68B8();
            if (!*(_DWORD *)a4) {
              sub_244CB7708((uint64_t)a2, v10, (uint64_t)a4);
            }
          }
        }
      }
    }
  }
}

double sub_24483B8B8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265198138;
      uint64_t v11 = 29562;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_2447F1DCC(a2, (unsigned char *)(a1 + 80), &v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_24484B03C(a1, a2, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_24483B9C8@<D0>(_WORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265198150;
      uint64_t v11 = 29607;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_244CB3F40(a2, a1 + 1, (uint64_t)&v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB3F40(a2, a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_24483BAD8@<D0>(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB6904();
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  sub_2447EF794((uint64_t)&v7, 1, a1 + 2);
  sub_2447EF794((uint64_t)&v7, 2, a1 + 3);
  if (!v8)
  {
    sub_244CB6904();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB6904();
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_2447F852C(v7, 5, (uint64_t)&v11);
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_2447F852C(v7, 6, (uint64_t)&v11);
          uint64_t v9 = v12;
          long long v8 = v11;
          if (!v11)
          {
            sub_244CB694C();
            uint64_t v9 = v12;
            long long v8 = v11;
            if (!v11)
            {
              sub_244CB694C();
              uint64_t v9 = v12;
              long long v8 = v11;
              if (!v11)
              {
                sub_244CB6904();
                uint64_t v9 = v12;
                long long v8 = v11;
                if (!v11)
                {
                  sub_244CB6904();
                  uint64_t v9 = v12;
                  long long v8 = v11;
                  if (!v11)
                  {
                    sub_24484B7DC(a1 + 28, (uint64_t)&v11);
                    uint64_t v9 = v12;
                    long long v8 = v11;
                    if (!v11)
                    {
                      sub_24484B7DC(a1 + 30, (uint64_t)&v11);
                      uint64_t v9 = v12;
                      long long v8 = v11;
                      if (!v11)
                      {
                        sub_244CB68B8();
                        uint64_t v9 = v12;
                        long long v8 = v11;
                        if (!v11)
                        {
                          sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
                          long long v8 = v11;
                          uint64_t v9 = v12;
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_24483BDC0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v22[0] = 0;
  uint64_t v23 = a2;
  sub_2447ED6F8((uint64_t)v22, (uint64_t)&v19);
  int v6 = v21;
  if (v21 == 1)
  {
LABEL_2:
    double result = *(double *)&v19;
    *(_OWORD *)a3 = v19;
    *(void *)(a3 + 16) = v20;
  }
  else
  {
    while (1)
    {
      long long v17 = xmmword_265198168;
      uint64_t v18 = 29660;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v19)
      {
        case 0:
          sub_244CB3F40(a2, (_WORD *)a1, (uint64_t)&v17);
          break;
        case 1:
          sub_2446D1A48(a2, (unsigned char *)(a1 + 2), &v15);
          goto LABEL_23;
        case 2:
          sub_2446D1A48(a2, (unsigned char *)(a1 + 3), &v15);
          goto LABEL_23;
        case 3:
          uint64_t v8 = a2;
          uint64_t v9 = (_WORD *)(a1 + 4);
          goto LABEL_22;
        case 4:
          uint64_t v8 = a2;
          uint64_t v9 = (_WORD *)(a1 + 6);
          goto LABEL_22;
        case 5:
          uint64_t v12 = (_WORD *)(a1 + 8);
          goto LABEL_17;
        case 6:
          uint64_t v12 = (_WORD *)(a1 + 12);
LABEL_17:
          sub_24483B9C8(v12, a2, (uint64_t)&v15);
          goto LABEL_23;
        case 7:
          uint64_t v13 = a2;
          int v14 = (_DWORD *)(a1 + 16);
          goto LABEL_20;
        case 8:
          uint64_t v13 = a2;
          int v14 = (_DWORD *)(a1 + 20);
LABEL_20:
          sub_244CB3FB0(v13, v14, (uint64_t)&v15);
          goto LABEL_23;
        case 9:
          uint64_t v8 = a2;
          uint64_t v9 = (_WORD *)(a1 + 24);
          goto LABEL_22;
        case 10:
          uint64_t v8 = a2;
          uint64_t v9 = (_WORD *)(a1 + 26);
LABEL_22:
          sub_244CB3F40(v8, v9, (uint64_t)&v15);
          goto LABEL_23;
        case 11:
          *(_WORD *)(a1 + 28) = 1;
          uint64_t v10 = a2;
          long long v11 = (char *)(a1 + 29);
          goto LABEL_12;
        case 12:
          *(_WORD *)(a1 + 30) = 1;
          uint64_t v10 = a2;
          long long v11 = (char *)(a1 + 31);
LABEL_12:
          sub_244CB3C0C(v10, v11, (uint64_t)&v15);
          goto LABEL_23;
        case 13:
          sub_244CB3E8C(a2, (unsigned char *)(a1 + 32), (uint64_t)&v15);
LABEL_23:
          long long v17 = v15;
          uint64_t v18 = v16;
          break;
        default:
          break;
      }
      double result = *(double *)&v17;
      *(_OWORD *)a3 = v17;
      *(void *)(a3 + 16) = v18;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v22, (uint64_t)&v19);
      int v6 = v21;
      if (v21 == 1) {
        goto LABEL_2;
      }
    }
  }
  return result;
}

double sub_24483C05C@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB6904();
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  sub_2447F0720((uint64_t)&v7, 1, (unsigned char *)(a1 + 2));
  if (!v8)
  {
    sub_244CB6904();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB694C();
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_2447F852C(v7, 4, (uint64_t)&v11);
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_2447F852C(v7, 5, (uint64_t)&v11);
          uint64_t v9 = v12;
          long long v8 = v11;
          if (!v11)
          {
            sub_244CB68B8();
            uint64_t v9 = v12;
            long long v8 = v11;
            if (!v11)
            {
              sub_244CB68B8();
              uint64_t v9 = v12;
              long long v8 = v11;
              if (!v11)
              {
                sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
                long long v8 = v11;
                uint64_t v9 = v12;
              }
            }
          }
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_24483C258@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v18[0] = 0;
  uint64_t v19 = a2;
  sub_2447ED6F8((uint64_t)v18, (uint64_t)&v15);
  int v6 = v17;
  if (v17 == 1)
  {
LABEL_17:
    double result = *(double *)&v15;
    *(_OWORD *)a3 = v15;
    *(void *)(a3 + 16) = v16;
  }
  else
  {
    while (1)
    {
      long long v13 = xmmword_265198180;
      uint64_t v14 = 29755;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v15)
      {
        case 0:
          sub_244CB3F40(a2, (_WORD *)a1, (uint64_t)&v13);
          break;
        case 1:
          sub_2447F092C(a2, (BOOL *)(a1 + 2), &v11);
          goto LABEL_14;
        case 2:
          sub_244CB3F40(a2, (_WORD *)(a1 + 4), (uint64_t)&v11);
          goto LABEL_14;
        case 3:
          sub_244CB3FB0(a2, (_DWORD *)(a1 + 8), (uint64_t)&v11);
          goto LABEL_14;
        case 4:
          uint64_t v7 = (_WORD *)(a1 + 12);
          goto LABEL_10;
        case 5:
          uint64_t v7 = (_WORD *)(a1 + 16);
LABEL_10:
          sub_24483B9C8(v7, a2, (uint64_t)&v11);
          goto LABEL_14;
        case 6:
          uint64_t v8 = a2;
          uint64_t v9 = (unsigned char *)(a1 + 20);
          goto LABEL_13;
        case 7:
          uint64_t v8 = a2;
          uint64_t v9 = (unsigned char *)(a1 + 21);
LABEL_13:
          sub_244CB3E8C(v8, v9, (uint64_t)&v11);
LABEL_14:
          long long v13 = v11;
          uint64_t v14 = v12;
          break;
        default:
          break;
      }
      double result = *(double *)&v13;
      *(_OWORD *)a3 = v13;
      *(void *)(a3 + 16) = v14;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v18, (uint64_t)&v15);
      int v6 = v17;
      if (v17 == 1) {
        goto LABEL_17;
      }
    }
  }
  return result;
}

double sub_24483C43C@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_2447F852C(v7, 0, (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB6904();
      long long v8 = v11;
      uint64_t v9 = v12;
    }
  }
  sub_2447F0720((uint64_t)&v7, 2, (unsigned char *)(a1 + 6));
  if (!v8)
  {
    sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_24483C55C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_11:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265198198;
      uint64_t v11 = 29821;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 2)
      {
        sub_2447F092C(a2, (BOOL *)(a1 + 6), &v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (v12 == 1)
      {
        sub_244CB3F40(a2, (_WORD *)(a1 + 4), (uint64_t)&v10);
      }
      else if (!(_BYTE)v12)
      {
        sub_24483B9C8((_WORD *)a1, a2, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_11;
      }
    }
  }
  return result;
}

double sub_24483C68C@<D0>(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  sub_2447EF794((uint64_t)&v7, 0, a1);
  if (!v8)
  {
    sub_2447F852C(v7, 1, (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB694C();
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
        long long v8 = v11;
        uint64_t v9 = v12;
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_24483C7AC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  for (int i = v14; v14 != 1; int i = v14)
  {
    long long v10 = xmmword_2651981B0;
    uint64_t v11 = 29867;
    if (i) {
      sub_24484AFEC();
    }
    if (v12 == 2)
    {
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 8), (uint64_t)&v8);
    }
    else
    {
      if (v12 != 1)
      {
        if (!(_BYTE)v12) {
          sub_2446D1A48(a2, (unsigned char *)a1, &v10);
        }
        goto LABEL_10;
      }
      sub_24483B9C8((_WORD *)(a1 + 2), a2, (uint64_t)&v8);
    }
    long long v10 = v8;
    uint64_t v11 = v9;
LABEL_10:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
    if (*(_DWORD *)a3) {
      return result;
    }
    sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  }
  double result = *(double *)&v12;
  *(_OWORD *)a3 = v12;
  *(void *)(a3 + 16) = v13;
  return result;
}

double sub_24483C8DC@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB68B8();
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  sub_24483C9F0((uint64_t)&v7, 1u, a1 + 8);
  sub_244826510((uint64_t)&v7, 2u, (uint64_t *)(a1 + 24));
  sub_24483CB00((uint64_t)&v7, 3u, (uint64_t *)(a1 + 40));
  if (!v8)
  {
    sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_24483C9F0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = a1 + 8;
  if (!*(_DWORD *)(a1 + 8))
  {
    int v4 = *(void **)a1;
    uint64_t v5 = *(unsigned char **)a3;
    uint64_t v6 = *(void *)(a3 + 8);
    int v13 = 0;
    uint64_t v12 = 0;
    long long v11 = 0uLL;
    sub_244CB7594(v4, a2, 22, &v13, (uint64_t)&v11);
    if (!v11)
    {
      if (v6)
      {
        uint64_t v7 = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
        while (1)
        {
          long long v11 = 0uLL;
          uint64_t v12 = 0;
          if (*v5 == 2) {
            break;
          }
          sub_244CB68B8();
          if (v11) {
            goto LABEL_12;
          }
          ++v5;
          if (!--v6) {
            goto LABEL_8;
          }
        }
        int v9 = 75;
        int v8 = 1415;
        goto LABEL_11;
      }
LABEL_8:
      long long v11 = 0uLL;
      uint64_t v12 = 0;
      sub_244CB7708((uint64_t)v4, v13, (uint64_t)&v11);
      if (!v11)
      {
        int v8 = 0;
        int v9 = 86;
        uint64_t v7 = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/List.h";
LABEL_11:
        LODWORD(v11) = v8;
        *((void *)&v11 + 1) = v7;
        LODWORD(v12) = v9;
      }
    }
LABEL_12:
    double result = *(double *)&v11;
    *(_OWORD *)uint64_t v3 = v11;
    *(void *)(v3 + 16) = v12;
  }
  return result;
}

double sub_24483CB00(uint64_t a1, unsigned int a2, uint64_t *a3)
{
  uint64_t v3 = a1 + 8;
  if (!*(_DWORD *)(a1 + 8))
  {
    int v4 = *(void **)a1;
    uint64_t v5 = *a3;
    uint64_t v6 = a3[1];
    int v10 = 0;
    uint64_t v9 = 0;
    long long v8 = 0uLL;
    sub_244CB7594(v4, a2, 22, &v10, (uint64_t)&v8);
    if (!v8)
    {
      if (v6)
      {
        while (1)
        {
          long long v8 = 0uLL;
          uint64_t v9 = 0;
          sub_244CB68B8();
          if (v8) {
            break;
          }
          ++v5;
          if (!--v6) {
            goto LABEL_6;
          }
        }
      }
      else
      {
LABEL_6:
        long long v8 = 0uLL;
        uint64_t v9 = 0;
        sub_244CB7708((uint64_t)v4, v10, (uint64_t)&v8);
        if (!v8)
        {
          LODWORD(v8) = 0;
          *((void *)&v8 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/List.h";
          LODWORD(v9) = 86;
        }
      }
    }
    double result = *(double *)&v8;
    *(_OWORD *)uint64_t v3 = v8;
    *(void *)(v3 + 16) = v9;
  }
  return result;
}

double sub_24483CBE8@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_11:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_2651981C8;
      uint64_t v11 = 29914;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v12)
      {
        case 0:
          sub_244CB3E8C(a2, a1, (uint64_t)&v10);
          break;
        case 1:
          sub_24484B03C((uint64_t)(a1 + 8), a2, (uint64_t)&v8);
          goto LABEL_8;
        case 2:
          sub_24484B03C((uint64_t)(a1 + 88), a2, (uint64_t)&v8);
          goto LABEL_8;
        case 3:
          sub_24484B03C((uint64_t)(a1 + 168), a2, (uint64_t)&v8);
LABEL_8:
          long long v10 = v8;
          uint64_t v11 = v9;
          break;
        default:
          break;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_11;
      }
    }
  }
  return result;
}

double sub_24483CD5C@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB6904();
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  sub_2447EF794((uint64_t)&v7, 1, (unsigned char *)(a1 + 2));
  sub_2447F1C40((uint64_t)&v7, 2, (unsigned char *)(a1 + 3));
  if (!v8)
  {
    sub_244CB68B8();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB694C();
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB694C();
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_244CB68B8();
          uint64_t v9 = v12;
          long long v8 = v11;
          if (!v11)
          {
            sub_244CB68B8();
            uint64_t v9 = v12;
            long long v8 = v11;
            if (!v11)
            {
              sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
              long long v8 = v11;
              uint64_t v9 = v12;
            }
          }
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_24483CF3C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v19[0] = 0;
  uint64_t v20 = a2;
  sub_2447ED6F8((uint64_t)v19, (uint64_t)&v16);
  int v6 = v18;
  if (v18 == 1)
  {
LABEL_17:
    double result = *(double *)&v16;
    *(_OWORD *)a3 = v16;
    *(void *)(a3 + 16) = v17;
  }
  else
  {
    while (1)
    {
      long long v14 = xmmword_2651981E0;
      uint64_t v15 = 29969;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v16)
      {
        case 0:
          sub_244CB3F40(a2, (_WORD *)a1, (uint64_t)&v14);
          break;
        case 1:
          sub_2446D1A48(a2, (unsigned char *)(a1 + 2), &v12);
          goto LABEL_14;
        case 2:
          sub_2447F1DCC(a2, (unsigned char *)(a1 + 3), &v12);
          goto LABEL_14;
        case 3:
          uint64_t v7 = a2;
          long long v8 = (unsigned char *)(a1 + 4);
          goto LABEL_13;
        case 4:
          uint64_t v9 = a2;
          int v10 = (_DWORD *)(a1 + 8);
          goto LABEL_10;
        case 5:
          uint64_t v9 = a2;
          int v10 = (_DWORD *)(a1 + 12);
LABEL_10:
          sub_244CB3FB0(v9, v10, (uint64_t)&v12);
          goto LABEL_14;
        case 6:
          uint64_t v7 = a2;
          long long v8 = (unsigned char *)(a1 + 16);
          goto LABEL_13;
        case 7:
          uint64_t v7 = a2;
          long long v8 = (unsigned char *)(a1 + 17);
LABEL_13:
          sub_244CB3E8C(v7, v8, (uint64_t)&v12);
LABEL_14:
          long long v14 = v12;
          uint64_t v15 = v13;
          break;
        default:
          break;
      }
      double result = *(double *)&v14;
      *(_OWORD *)a3 = v14;
      *(void *)(a3 + 16) = v15;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v19, (uint64_t)&v16);
      int v6 = v18;
      if (v18 == 1) {
        goto LABEL_17;
      }
    }
  }
  return result;
}

double sub_24483D120@<D0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  sub_244CB7594(a1, a2, 21, &v8, (uint64_t)&v9);
  long long v6 = v9;
  uint64_t v7 = v10;
  if (!v9)
  {
    sub_244CB6904();
    uint64_t v7 = v10;
    long long v6 = v9;
    if (!v9)
    {
      sub_244CB6904();
      uint64_t v7 = v10;
      long long v6 = v9;
      if (!v9)
      {
        sub_244CB65C8();
        uint64_t v7 = v10;
        long long v6 = v9;
        if (!v9)
        {
          sub_244CB6904();
          uint64_t v7 = v10;
          long long v6 = v9;
          if (!v9)
          {
            sub_244CB6904();
            uint64_t v7 = v10;
            long long v6 = v9;
            if (!v9)
            {
              sub_244CB7708((uint64_t)a1, v8, (uint64_t)&v9);
              long long v6 = v9;
              uint64_t v7 = v10;
            }
          }
        }
      }
    }
  }
  double result = *(double *)&v6;
  *(_OWORD *)a3 = v6;
  *(void *)(a3 + 16) = v7;
  return result;
}

double sub_24483D2B4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  int v6 = v16;
  if (v16 == 1)
  {
LABEL_13:
    double result = *(double *)&v14;
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 16) = v15;
  }
  else
  {
    while (1)
    {
      long long v12 = xmmword_2651981F8;
      uint64_t v13 = 30037;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v14)
      {
        case 0:
          sub_244CB3F40(a2, (_WORD *)a1, (uint64_t)&v12);
          break;
        case 1:
          uint64_t v7 = a2;
          int v8 = (_WORD *)(a1 + 2);
          goto LABEL_9;
        case 2:
          sub_244CB3C0C(a2, (char *)(a1 + 4), (uint64_t)&v10);
          goto LABEL_10;
        case 3:
          uint64_t v7 = a2;
          int v8 = (_WORD *)(a1 + 6);
          goto LABEL_9;
        case 4:
          uint64_t v7 = a2;
          int v8 = (_WORD *)(a1 + 8);
LABEL_9:
          sub_244CB3F40(v7, v8, (uint64_t)&v10);
LABEL_10:
          long long v12 = v10;
          uint64_t v13 = v11;
          break;
        default:
          break;
      }
      double result = *(double *)&v12;
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
      int v6 = v16;
      if (v16 == 1) {
        goto LABEL_13;
      }
    }
  }
  return result;
}

double sub_24483D43C@<D0>(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  sub_2447EF794((uint64_t)&v7, 0, a1);
  sub_2447F1C40((uint64_t)&v7, 1, a1 + 1);
  if (!v8)
  {
    sub_244CB68B8();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB694C();
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB694C();
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_244CB68B8();
          uint64_t v9 = v12;
          long long v8 = v11;
          if (!v11)
          {
            sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
            long long v8 = v11;
            uint64_t v9 = v12;
          }
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_24483D5C4@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v19[0] = 0;
  uint64_t v20 = a2;
  sub_2447ED6F8((uint64_t)v19, (uint64_t)&v16);
  int v6 = v18;
  if (v18 == 1)
  {
LABEL_15:
    double result = *(double *)&v16;
    *(_OWORD *)a3 = v16;
    *(void *)(a3 + 16) = v17;
  }
  else
  {
    while (1)
    {
      long long v14 = xmmword_265198210;
      uint64_t v15 = 30096;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v16)
      {
        case 0:
          sub_2446D1A48(a2, a1, &v14);
          break;
        case 1:
          sub_2447F1DCC(a2, a1 + 1, &v12);
          goto LABEL_12;
        case 2:
          uint64_t v7 = a2;
          long long v8 = a1 + 2;
          goto LABEL_11;
        case 3:
          uint64_t v9 = a2;
          int v10 = a1 + 4;
          goto LABEL_9;
        case 4:
          uint64_t v9 = a2;
          int v10 = a1 + 8;
LABEL_9:
          sub_244CB3FB0(v9, v10, (uint64_t)&v12);
          goto LABEL_12;
        case 5:
          uint64_t v7 = a2;
          long long v8 = a1 + 12;
LABEL_11:
          sub_244CB3E8C(v7, v8, (uint64_t)&v12);
LABEL_12:
          long long v14 = v12;
          uint64_t v15 = v13;
          break;
        default:
          break;
      }
      double result = *(double *)&v14;
      *(_OWORD *)a3 = v14;
      *(void *)(a3 + 16) = v15;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v19, (uint64_t)&v16);
      int v6 = v18;
      if (v18 == 1) {
        goto LABEL_15;
      }
    }
  }
  return result;
}

double sub_24483D770@<D0>(_WORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265198228;
      uint64_t v9 = 30150;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3F40(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_24483D848@<D0>(_WORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265198240;
      uint64_t v9 = 30184;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3F40(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_24483D920@<D0>(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  sub_2447EF794((uint64_t)&v7, 0, a1);
  sub_2447EF794((uint64_t)&v7, 1, a1 + 1);
  if (!v8)
  {
    sub_244CB6904();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB6904();
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_2447F852C(v7, 4, (uint64_t)&v11);
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_2447F852C(v7, 5, (uint64_t)&v11);
          uint64_t v9 = v12;
          long long v8 = v11;
          if (!v11)
          {
            sub_244CB694C();
            uint64_t v9 = v12;
            long long v8 = v11;
            if (!v11)
            {
              sub_244CB694C();
              uint64_t v9 = v12;
              long long v8 = v11;
              if (!v11)
              {
                sub_244CB6904();
                uint64_t v9 = v12;
                long long v8 = v11;
                if (!v11)
                {
                  sub_244CB6904();
                  uint64_t v9 = v12;
                  long long v8 = v11;
                  if (!v11)
                  {
                    sub_24484B7DC(a1 + 28, (uint64_t)&v11);
                    uint64_t v9 = v12;
                    long long v8 = v11;
                    if (!v11)
                    {
                      sub_24484B7DC(a1 + 30, (uint64_t)&v11);
                      uint64_t v9 = v12;
                      long long v8 = v11;
                      if (!v11)
                      {
                        sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
                        long long v8 = v11;
                        uint64_t v9 = v12;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_24483DBB0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v22[0] = 0;
  uint64_t v23 = a2;
  sub_2447ED6F8((uint64_t)v22, (uint64_t)&v19);
  int v6 = v21;
  if (v21 == 1)
  {
LABEL_23:
    double result = *(double *)&v19;
    *(_OWORD *)a3 = v19;
    *(void *)(a3 + 16) = v20;
  }
  else
  {
    while (1)
    {
      long long v17 = xmmword_265198258;
      uint64_t v18 = 30229;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v19)
      {
        case 0:
          sub_2446D1A48(a2, (unsigned char *)a1, &v17);
          break;
        case 1:
          sub_2446D1A48(a2, (unsigned char *)(a1 + 1), &v15);
          goto LABEL_20;
        case 2:
          uint64_t v7 = a2;
          long long v8 = (_WORD *)(a1 + 2);
          goto LABEL_16;
        case 3:
          uint64_t v7 = a2;
          long long v8 = (_WORD *)(a1 + 4);
          goto LABEL_16;
        case 4:
          uint64_t v9 = (_WORD *)(a1 + 6);
          goto LABEL_10;
        case 5:
          uint64_t v9 = (_WORD *)(a1 + 10);
LABEL_10:
          sub_24483B9C8(v9, a2, (uint64_t)&v15);
          goto LABEL_20;
        case 6:
          uint64_t v10 = a2;
          long long v11 = (_DWORD *)(a1 + 16);
          goto LABEL_13;
        case 7:
          uint64_t v10 = a2;
          long long v11 = (_DWORD *)(a1 + 20);
LABEL_13:
          sub_244CB3FB0(v10, v11, (uint64_t)&v15);
          goto LABEL_20;
        case 8:
          uint64_t v7 = a2;
          long long v8 = (_WORD *)(a1 + 24);
          goto LABEL_16;
        case 9:
          uint64_t v7 = a2;
          long long v8 = (_WORD *)(a1 + 26);
LABEL_16:
          sub_244CB3F40(v7, v8, (uint64_t)&v15);
          goto LABEL_20;
        case 10:
          *(_WORD *)(a1 + 28) = 1;
          uint64_t v12 = a2;
          uint64_t v13 = (char *)(a1 + 29);
          goto LABEL_19;
        case 11:
          *(_WORD *)(a1 + 30) = 1;
          uint64_t v12 = a2;
          uint64_t v13 = (char *)(a1 + 31);
LABEL_19:
          sub_244CB3C0C(v12, v13, (uint64_t)&v15);
LABEL_20:
          long long v17 = v15;
          uint64_t v18 = v16;
          break;
        default:
          break;
      }
      double result = *(double *)&v17;
      *(_OWORD *)a3 = v17;
      *(void *)(a3 + 16) = v18;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v22, (uint64_t)&v19);
      int v6 = v21;
      if (v21 == 1) {
        goto LABEL_23;
      }
    }
  }
  return result;
}

double sub_24483DE0C@<D0>(_WORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265198270;
      uint64_t v9 = 30307;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3F40(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_24483DEE4@<D0>(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB6904();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_24483F894(a2, 1, a1 + 2, (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_24484B7DC(a1 + 8, (uint64_t)&v11);
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_24484B7DC(a1 + 10, (uint64_t)&v11);
          uint64_t v9 = v12;
          long long v8 = v11;
          if (!v11)
          {
            sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
            long long v8 = v11;
            uint64_t v9 = v12;
          }
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_24483E04C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  int v6 = v16;
  if (v16 == 1)
  {
LABEL_12:
    double result = *(double *)&v14;
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 16) = v15;
  }
  else
  {
    while (1)
    {
      long long v12 = xmmword_265198288;
      uint64_t v13 = 30344;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v14)
      {
        case 0:
          sub_244CB3F40(a2, (_WORD *)a1, (uint64_t)&v12);
          break;
        case 1:
          *(unsigned char *)(a1 + 2) = 1;
          *(_DWORD *)(a1 + 4) = 0;
          sub_24483B9C8((_WORD *)(a1 + 4), a2, (uint64_t)&v10);
          goto LABEL_9;
        case 2:
          *(_WORD *)(a1 + 8) = 1;
          uint64_t v7 = a2;
          long long v8 = (char *)(a1 + 9);
          goto LABEL_8;
        case 3:
          *(_WORD *)(a1 + 10) = 1;
          uint64_t v7 = a2;
          long long v8 = (char *)(a1 + 11);
LABEL_8:
          sub_244CB3C0C(v7, v8, (uint64_t)&v10);
LABEL_9:
          long long v12 = v10;
          uint64_t v13 = v11;
          break;
        default:
          break;
      }
      double result = *(double *)&v12;
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
      int v6 = v16;
      if (v16 == 1) {
        goto LABEL_12;
      }
    }
  }
  return result;
}

double sub_24483E1D0@<D0>(_WORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_2651982A0;
      uint64_t v9 = 30390;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3F40(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_24483E2A8@<D0>(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  sub_2447F0720((uint64_t)&v7, 0, a1);
  if (!v8)
  {
    sub_244CB6904();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB694C();
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_2447F852C(v7, 3, (uint64_t)&v11);
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_2447F852C(v7, 4, (uint64_t)&v11);
          uint64_t v9 = v12;
          long long v8 = v11;
          if (!v11)
          {
            sub_244CB68B8();
            uint64_t v9 = v12;
            long long v8 = v11;
            if (!v11)
            {
              sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
              long long v8 = v11;
              uint64_t v9 = v12;
            }
          }
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_24483E44C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v16[0] = 0;
  uint64_t v17 = a2;
  sub_2447ED6F8((uint64_t)v16, (uint64_t)&v13);
  int v6 = v15;
  if (v15 == 1)
  {
LABEL_14:
    double result = *(double *)&v13;
    *(_OWORD *)a3 = v13;
    *(void *)(a3 + 16) = v14;
  }
  else
  {
    while (1)
    {
      long long v11 = xmmword_2651982B8;
      uint64_t v12 = 30429;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v13)
      {
        case 0:
          sub_2447F092C(a2, (BOOL *)a1, &v11);
          break;
        case 1:
          sub_244CB3F40(a2, (_WORD *)(a1 + 2), (uint64_t)&v9);
          goto LABEL_11;
        case 2:
          sub_244CB3FB0(a2, (_DWORD *)(a1 + 4), (uint64_t)&v9);
          goto LABEL_11;
        case 3:
          uint64_t v7 = (_WORD *)(a1 + 8);
          goto LABEL_9;
        case 4:
          uint64_t v7 = (_WORD *)(a1 + 12);
LABEL_9:
          sub_24483B9C8(v7, a2, (uint64_t)&v9);
          goto LABEL_11;
        case 5:
          sub_244CB3E8C(a2, (unsigned char *)(a1 + 16), (uint64_t)&v9);
LABEL_11:
          long long v11 = v9;
          uint64_t v12 = v10;
          break;
        default:
          break;
      }
      double result = *(double *)&v11;
      *(_OWORD *)a3 = v11;
      *(void *)(a3 + 16) = v12;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v16, (uint64_t)&v13);
      int v6 = v15;
      if (v15 == 1) {
        goto LABEL_14;
      }
    }
  }
  return result;
}

double sub_24483E5F8@<D0>(_WORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_2651982D0;
      uint64_t v9 = 30483;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3F40(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_24483E6D0@<D0>(_WORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_2651982E8;
      uint64_t v9 = 30517;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3F40(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_24483E7A8@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  sub_2447F944C((uint64_t)&v7, 0, a1);
  if (!v8)
  {
    sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_24483E870@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265198300;
      uint64_t v9 = 30551;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_24484B03C(a1, a2, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_24483E948@<D0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  sub_244CB7594(a1, a2, 21, &v8, (uint64_t)&v9);
  long long v6 = v9;
  uint64_t v7 = v10;
  if (!v9)
  {
    sub_244CB6904();
    uint64_t v7 = v10;
    long long v6 = v9;
    if (!v9)
    {
      sub_2447F852C(a1, 1, (uint64_t)&v9);
      uint64_t v7 = v10;
      long long v6 = v9;
      if (!v9)
      {
        sub_244CB7708((uint64_t)a1, v8, (uint64_t)&v9);
        long long v6 = v9;
        uint64_t v7 = v10;
      }
    }
  }
  double result = *(double *)&v6;
  *(_OWORD *)a3 = v6;
  *(void *)(a3 + 16) = v7;
  return result;
}

double sub_24483EA58@<D0>(_WORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265198318;
      uint64_t v11 = 30586;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_24483B9C8(a1 + 1, a2, (uint64_t)&v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB3F40(a2, a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_24483EB68@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB6ADC(v7, *(char **)a1, *(void *)(a1 + 8), (uint64_t)&v11);
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  sub_2447F0720((uint64_t)&v7, 1, (unsigned char *)(a1 + 16));
  if (!v8)
  {
    sub_2447F852C(v7, 2, (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
      long long v8 = v11;
      uint64_t v9 = v12;
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_24483EC88@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 != 1)
  {
    while (1)
    {
      long long v10 = xmmword_265198330;
      uint64_t v11 = 30626;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 2) {
        break;
      }
      if (v12 == 1)
      {
        sub_2447F092C(a2, (BOOL *)(a1 + 16), &v10);
      }
      else if (!(_BYTE)v12)
      {
        if (sub_244CB3B68(a2) == 16)
        {
          sub_244CB40C8(a2, (_OWORD *)a1, &v8);
        }
        else
        {
          LODWORD(v8) = 43;
          *((void *)&v8 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
          LODWORD(v9) = 80;
        }
        goto LABEL_11;
      }
LABEL_12:
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        return result;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_14;
      }
    }
    sub_24483B9C8((_WORD *)(a1 + 18), a2, (uint64_t)&v8);
LABEL_11:
    long long v10 = v8;
    uint64_t v11 = v9;
    goto LABEL_12;
  }
LABEL_14:
  double result = *(double *)&v12;
  *(_OWORD *)a3 = v12;
  *(void *)(a3 + 16) = v13;
  return result;
}

double sub_24483EDF8@<D0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  sub_244CB7594(a1, a2, 21, &v8, (uint64_t)&v9);
  long long v6 = v9;
  uint64_t v7 = v10;
  if (!v9)
  {
    sub_2447EF2F0(a1, 0, (uint64_t)&v9);
    uint64_t v7 = v10;
    long long v6 = v9;
    if (!v9)
    {
      sub_244CB7708((uint64_t)a1, v8, (uint64_t)&v9);
      long long v6 = v9;
      uint64_t v7 = v10;
    }
  }
  double result = *(double *)&v6;
  *(_OWORD *)a3 = v6;
  *(void *)(a3 + 16) = v7;
  return result;
}

double sub_24483EEDC@<D0>(_WORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265198348;
      uint64_t v9 = 30668;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_2447EF458(a1, a2, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_24483EFB4@<D0>(_WORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265198360;
      uint64_t v9 = 30702;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3F40(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_24483F08C@<D0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265198378;
      uint64_t v9 = 30736;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3C0C(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_24483F164@<D0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265198390;
      uint64_t v9 = 30770;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3C0C(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

void sub_24483F23C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4 = (unsigned char *)a1;
  int v5 = *(_DWORD *)(a3 + 8);
  switch(v5)
  {
    case 0:
      goto LABEL_44;
    case 1:
      int v6 = (_DWORD *)(a1 + 4);
      goto LABEL_61;
    case 2:
      sub_24483D2B4(a1 + 8, a2, a4);
      return;
    case 3:
      long long v8 = (char *)(a1 + 18);
      goto LABEL_52;
    case 4:
      sub_24483B9C8((_WORD *)(a1 + 20), a2, a4);
      return;
    case 5:
      uint64_t v7 = a1 + 24;
      goto LABEL_5;
    case 6:
      int v6 = (_DWORD *)(a1 + 104);
      goto LABEL_61;
    case 7:
      uint64_t v9 = (unsigned char *)(a1 + 112);
      goto LABEL_12;
    case 8:
      uint64_t v9 = (unsigned char *)(a1 + 360);
LABEL_12:
      sub_24483CBE8(v9, a2, a4);
      return;
    case 9:
      long long v10 = (unsigned char *)(a1 + 608);
      uint64_t v11 = a2;
      int v12 = v10;
      goto LABEL_15;
    case 10:
      uint64_t v7 = a1 + 616;
      goto LABEL_5;
    case 11:
      int v6 = (_DWORD *)(a1 + 696);
LABEL_61:
      sub_244CB3FB0(a2, v6, a4);
      return;
    case 12:
      uint64_t v13 = (_WORD *)(a1 + 700);
      goto LABEL_63;
    case 13:
      long long v8 = (char *)(a1 + 702);
      goto LABEL_52;
    case 14:
      uint64_t v7 = a1 + 704;
      goto LABEL_5;
    case 15:
      sub_24483C55C(a1 + 784, a2, a4);
      return;
    case 16:
      uint64_t v7 = a1 + 792;
      goto LABEL_5;
    case 17:
      uint64_t v7 = a1 + 872;
      goto LABEL_5;
    case 18:
      uint64_t v7 = a1 + 952;
      goto LABEL_5;
    case 19:
      uint64_t v7 = a1 + 1032;
      goto LABEL_5;
    case 20:
      uint64_t v7 = a1 + 1112;
LABEL_5:
      sub_24484B03C(v7, a2, a4);
      return;
    case 21:
      long long v8 = (char *)(a1 + 1192);
      goto LABEL_52;
    case 22:
      long long v8 = (char *)(a1 + 1193);
      goto LABEL_52;
    case 23:
      long long v8 = (char *)(a1 + 1194);
      goto LABEL_52;
    case 24:
      uint64_t v14 = (unsigned char *)(a1 + 1195);
      goto LABEL_55;
    case 25:
      uint64_t v14 = (unsigned char *)(a1 + 1196);
      goto LABEL_55;
    case 26:
      long long v8 = (char *)(a1 + 1197);
      goto LABEL_52;
    case 27:
      long long v8 = (char *)(a1 + 1198);
      goto LABEL_52;
    case 28:
      long long v8 = (char *)(a1 + 1199);
      goto LABEL_52;
    case 29:
      sub_2447EF458((_WORD *)(a1 + 1200), a2, a4);
      return;
    case 30:
      long long v8 = (char *)(a1 + 1208);
      goto LABEL_52;
    case 31:
      int v4 = (unsigned char *)(a1 + 1209);
      goto LABEL_44;
    case 32:
      int v4 = (unsigned char *)(a1 + 1210);
      goto LABEL_44;
    case 33:
      int v4 = (unsigned char *)(a1 + 1211);
      goto LABEL_44;
    case 34:
      long long v8 = (char *)(a1 + 1212);
      goto LABEL_52;
    case 35:
      int v4 = (unsigned char *)(a1 + 1213);
      goto LABEL_44;
    case 36:
      int v4 = (unsigned char *)(a1 + 1214);
      goto LABEL_44;
    case 37:
      int v4 = (unsigned char *)(a1 + 1215);
LABEL_44:
      sub_244CB3E8C(a2, v4, a4);
      return;
    case 38:
      long long v8 = (char *)(a1 + 1216);
      goto LABEL_52;
    case 39:
      uint64_t v13 = (_WORD *)(a1 + 1218);
LABEL_63:
      sub_244CB3F40(a2, v13, a4);
      return;
    case 40:
      long long v8 = (char *)(a1 + 1220);
      goto LABEL_52;
    case 41:
      long long v8 = (char *)(a1 + 1221);
      goto LABEL_52;
    case 42:
      long long v8 = (char *)(a1 + 1222);
      goto LABEL_52;
    case 43:
      long long v8 = (char *)(a1 + 1223);
      goto LABEL_52;
    case 44:
      long long v8 = (char *)(a1 + 1224);
LABEL_52:
      sub_244CB3C0C(a2, v8, a4);
      break;
    case 45:
      sub_2446D1A48(a2, (unsigned char *)(a1 + 1225), (void *)a4);
      break;
    case 46:
      uint64_t v14 = (unsigned char *)(a1 + 1226);
LABEL_55:
      uint64_t v11 = a2;
      int v12 = v14;
LABEL_15:
      sub_2447F5F24(v11, v12, (void *)a4);
      break;
    default:
      switch(v5)
      {
        case 65528:
          uint64_t v7 = a1 + 1232;
          goto LABEL_5;
        case 65529:
          uint64_t v7 = a1 + 1312;
          goto LABEL_5;
        case 65530:
          uint64_t v7 = a1 + 1392;
          goto LABEL_5;
        case 65531:
          uint64_t v7 = a1 + 1472;
          goto LABEL_5;
        case 65532:
          int v6 = (_DWORD *)(a1 + 1552);
          goto LABEL_61;
        case 65533:
          uint64_t v13 = (_WORD *)(a1 + 1556);
          goto LABEL_63;
        default:
          *(_DWORD *)a4 = 0;
          *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-co"
                                "mmon/app-common/zap-generated/cluster-objects.cpp";
          *(_DWORD *)(a4 + 16) = 30899;
          break;
      }
      break;
  }
}

void sub_24483F564(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  int v7 = 0;
  a4[1] = 0;
  a4[2] = 0;
  *a4 = 0;
  sub_244CB7594(a2, a3, 21, &v7, (uint64_t)a4);
  if (!*(_DWORD *)a4)
  {
    *a4 = 0;
    a4[1] = 0;
    a4[2] = 0;
    sub_244CB6904();
    if (!*(_DWORD *)a4)
    {
      *a4 = 0;
      a4[1] = 0;
      a4[2] = 0;
      sub_24483F760(a1 + 2, (uint64_t)a4);
      if (!*(_DWORD *)a4)
      {
        *a4 = 0;
        a4[1] = 0;
        a4[2] = 0;
        sub_24483F760(a1 + 4, (uint64_t)a4);
        if (!*(_DWORD *)a4)
        {
          *a4 = 0;
          a4[1] = 0;
          a4[2] = 0;
          sub_24483F80C(a1 + 6, (uint64_t)a4);
          if (!*(_DWORD *)a4)
          {
            *a4 = 0;
            a4[1] = 0;
            a4[2] = 0;
            sub_24483F80C(a1 + 10, (uint64_t)a4);
            if (!*(_DWORD *)a4)
            {
              *a4 = 0;
              a4[1] = 0;
              a4[2] = 0;
              sub_24483F894(a2, 5, a1 + 14, (uint64_t)a4);
              if (!*(_DWORD *)a4)
              {
                *a4 = 0;
                a4[1] = 0;
                a4[2] = 0;
                sub_24483F894(a2, 6, a1 + 20, (uint64_t)a4);
                if (!*(_DWORD *)a4)
                {
                  *a4 = 0;
                  a4[1] = 0;
                  a4[2] = 0;
                  sub_24483F918(a1 + 28, (uint64_t)a4);
                  if (!*(_DWORD *)a4)
                  {
                    *a4 = 0;
                    a4[1] = 0;
                    a4[2] = 0;
                    sub_24483F918(a1 + 36, (uint64_t)a4);
                    if (!*(_DWORD *)a4)
                    {
                      *a4 = 0;
                      a4[1] = 0;
                      a4[2] = 0;
                      sub_24483F80C(a1 + 44, (uint64_t)a4);
                      if (!*(_DWORD *)a4)
                      {
                        *a4 = 0;
                        a4[1] = 0;
                        a4[2] = 0;
                        sub_24483F80C(a1 + 48, (uint64_t)a4);
                        if (!*(_DWORD *)a4) {
                          sub_244CB7708((uint64_t)a2, v7, (uint64_t)a4);
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void sub_24483F760(unsigned char *a1@<X2>, uint64_t a2@<X8>)
{
  if (!*a1)
  {
    *(_DWORD *)a2 = 0;
    *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    int v3 = 171;
    goto LABEL_5;
  }
  if (*sub_2446D18C8(a1) == 4)
  {
    *(_DWORD *)a2 = 1415;
    *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    int v3 = 75;
LABEL_5:
    *(_DWORD *)(a2 + 16) = v3;
    return;
  }

  sub_244CB68B8();
}

void sub_24483F80C(unsigned char *a1@<X2>, uint64_t a2@<X8>)
{
  if (*a1)
  {
    sub_2446D1880(a1);
    sub_244CB6904();
  }
  else
  {
    *(_DWORD *)a2 = 0;
    *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    *(_DWORD *)(a2 + 16) = 171;
  }
}

void sub_24483F894(void *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X2>, uint64_t a4@<X8>)
{
  if (*a3)
  {
    sub_2446D1880(a3);
    sub_2447F852C(a1, a2, a4);
  }
  else
  {
    *(_DWORD *)a4 = 0;
    *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    *(_DWORD *)(a4 + 16) = 171;
  }
}

void sub_24483F918(unsigned char *a1@<X2>, uint64_t a2@<X8>)
{
  if (*a1)
  {
    sub_2446F12CC(a1);
    sub_244CB694C();
  }
  else
  {
    *(_DWORD *)a2 = 0;
    *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    *(_DWORD *)(a2 + 16) = 171;
  }
}

double sub_24483F9A0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v20[0] = 0;
  uint64_t v21 = a2;
  sub_2447ED6F8((uint64_t)v20, (uint64_t)&v17);
  int v6 = v19;
  if (v19 == 1)
  {
LABEL_21:
    double result = *(double *)&v17;
    *(_OWORD *)a3 = v17;
    *(void *)(a3 + 16) = v18;
  }
  else
  {
    while (1)
    {
      long long v15 = xmmword_2651983A8;
      uint64_t v16 = 30935;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v17)
      {
        case 0:
          sub_244CB3F40(a2, (_WORD *)a1, (uint64_t)&v15);
          break;
        case 1:
          *(_WORD *)(a1 + 2) = 1;
          sub_2446D1A48(a2, (unsigned char *)(a1 + 3), &v13);
          goto LABEL_18;
        case 2:
          *(_WORD *)(a1 + 4) = 1;
          sub_2446D1A48(a2, (unsigned char *)(a1 + 5), &v13);
          goto LABEL_18;
        case 3:
          *(unsigned char *)(a1 + 6) = 1;
          *(_WORD *)(a1 + 8) = 0;
          uint64_t v7 = a2;
          long long v8 = (_WORD *)(a1 + 8);
          goto LABEL_17;
        case 4:
          *(unsigned char *)(a1 + 10) = 1;
          *(_WORD *)(a1 + 12) = 0;
          uint64_t v7 = a2;
          long long v8 = (_WORD *)(a1 + 12);
          goto LABEL_17;
        case 5:
          *(unsigned char *)(a1 + 14) = 1;
          *(_DWORD *)(a1 + 16) = 0;
          uint64_t v9 = (_WORD *)(a1 + 16);
          goto LABEL_11;
        case 6:
          *(unsigned char *)(a1 + 20) = 1;
          *(_DWORD *)(a1 + 22) = 0;
          uint64_t v9 = (_WORD *)(a1 + 22);
LABEL_11:
          sub_24483B9C8(v9, a2, (uint64_t)&v13);
          goto LABEL_18;
        case 7:
          *(unsigned char *)(a1 + 28) = 1;
          *(_DWORD *)(a1 + 32) = 0;
          uint64_t v10 = a2;
          uint64_t v11 = (_DWORD *)(a1 + 32);
          goto LABEL_14;
        case 8:
          *(unsigned char *)(a1 + 36) = 1;
          *(_DWORD *)(a1 + 40) = 0;
          uint64_t v10 = a2;
          uint64_t v11 = (_DWORD *)(a1 + 40);
LABEL_14:
          sub_244CB3FB0(v10, v11, (uint64_t)&v13);
          goto LABEL_18;
        case 9:
          *(unsigned char *)(a1 + 44) = 1;
          *(_WORD *)(a1 + 46) = 0;
          uint64_t v7 = a2;
          long long v8 = (_WORD *)(a1 + 46);
          goto LABEL_17;
        case 10:
          *(unsigned char *)(a1 + 48) = 1;
          *(_WORD *)(a1 + 50) = 0;
          uint64_t v7 = a2;
          long long v8 = (_WORD *)(a1 + 50);
LABEL_17:
          sub_244CB3F40(v7, v8, (uint64_t)&v13);
LABEL_18:
          long long v15 = v13;
          uint64_t v16 = v14;
          break;
        default:
          break;
      }
      double result = *(double *)&v15;
      *(_OWORD *)a3 = v15;
      *(void *)(a3 + 16) = v16;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v20, (uint64_t)&v17);
      int v6 = v19;
      if (v19 == 1) {
        goto LABEL_21;
      }
    }
  }
  return result;
}

void sub_24483FC20(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  int v7 = 0;
  a4[1] = 0;
  a4[2] = 0;
  *a4 = 0;
  sub_244CB7594(a2, a3, 21, &v7, (uint64_t)a4);
  if (!*(_DWORD *)a4)
  {
    *a4 = 0;
    a4[1] = 0;
    a4[2] = 0;
    sub_244CB6904();
    if (!*(_DWORD *)a4)
    {
      *a4 = 0;
      a4[1] = 0;
      a4[2] = 0;
      sub_24483F760(a1 + 2, (uint64_t)a4);
      if (!*(_DWORD *)a4)
      {
        *a4 = 0;
        a4[1] = 0;
        a4[2] = 0;
        sub_24483FD8C(a1 + 4, (uint64_t)a4);
        if (!*(_DWORD *)a4)
        {
          *a4 = 0;
          a4[1] = 0;
          a4[2] = 0;
          sub_244813DC0(a1 + 6, (uint64_t)a4);
          if (!*(_DWORD *)a4)
          {
            *a4 = 0;
            a4[1] = 0;
            a4[2] = 0;
            sub_24483F918(a1 + 8, (uint64_t)a4);
            if (!*(_DWORD *)a4)
            {
              *a4 = 0;
              a4[1] = 0;
              a4[2] = 0;
              sub_24483F918(a1 + 16, (uint64_t)a4);
              if (!*(_DWORD *)a4)
              {
                *a4 = 0;
                a4[1] = 0;
                a4[2] = 0;
                sub_244813DC0(a1 + 24, (uint64_t)a4);
                if (!*(_DWORD *)a4) {
                  sub_244CB7708((uint64_t)a2, v7, (uint64_t)a4);
                }
              }
            }
          }
        }
      }
    }
  }
}

void sub_24483FD8C(unsigned char *a1@<X2>, uint64_t a2@<X8>)
{
  if (!*a1)
  {
    *(_DWORD *)a2 = 0;
    *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    int v3 = 171;
    goto LABEL_5;
  }
  if (*sub_2446D18C8(a1) == 2)
  {
    *(_DWORD *)a2 = 1415;
    *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    int v3 = 75;
LABEL_5:
    *(_DWORD *)(a2 + 16) = v3;
    return;
  }

  sub_244CB68B8();
}

double sub_24483FE38@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v19[0] = 0;
  uint64_t v20 = a2;
  sub_2447ED6F8((uint64_t)v19, (uint64_t)&v16);
  int v6 = v18;
  if (v18 == 1)
  {
LABEL_16:
    double result = *(double *)&v16;
    *(_OWORD *)a3 = v16;
    *(void *)(a3 + 16) = v17;
  }
  else
  {
    while (1)
    {
      long long v14 = xmmword_2651983C0;
      uint64_t v15 = 31016;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v16)
      {
        case 0:
          sub_244CB3F40(a2, (_WORD *)a1, (uint64_t)&v14);
          break;
        case 1:
          *(_WORD *)(a1 + 2) = 1;
          sub_2446D1A48(a2, (unsigned char *)(a1 + 3), &v12);
          goto LABEL_13;
        case 2:
          *(_WORD *)(a1 + 4) = 1;
          sub_2447F1DCC(a2, (unsigned char *)(a1 + 5), &v12);
          goto LABEL_13;
        case 3:
          *(_WORD *)(a1 + 6) = 1;
          uint64_t v7 = a2;
          long long v8 = (unsigned char *)(a1 + 7);
          goto LABEL_12;
        case 4:
          *(unsigned char *)(a1 + 8) = 1;
          *(_DWORD *)(a1 + 12) = 0;
          uint64_t v9 = a2;
          uint64_t v10 = (_DWORD *)(a1 + 12);
          goto LABEL_10;
        case 5:
          *(unsigned char *)(a1 + 16) = 1;
          *(_DWORD *)(a1 + 20) = 0;
          uint64_t v9 = a2;
          uint64_t v10 = (_DWORD *)(a1 + 20);
LABEL_10:
          sub_244CB3FB0(v9, v10, (uint64_t)&v12);
          goto LABEL_13;
        case 6:
          *(_WORD *)(a1 + 24) = 1;
          uint64_t v7 = a2;
          long long v8 = (unsigned char *)(a1 + 25);
LABEL_12:
          sub_244CB3E8C(v7, v8, (uint64_t)&v12);
LABEL_13:
          long long v14 = v12;
          uint64_t v15 = v13;
          break;
        default:
          break;
      }
      double result = *(double *)&v14;
      *(_OWORD *)a3 = v14;
      *(void *)(a3 + 16) = v15;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v19, (uint64_t)&v16);
      int v6 = v18;
      if (v18 == 1) {
        goto LABEL_16;
      }
    }
  }
  return result;
}

void sub_244840028(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  int v7 = 0;
  a4[1] = 0;
  a4[2] = 0;
  *a4 = 0;
  sub_244CB7594(a2, a3, 21, &v7, (uint64_t)a4);
  if (!*(_DWORD *)a4)
  {
    *a4 = 0;
    a4[1] = 0;
    a4[2] = 0;
    sub_244CB6904();
    if (!*(_DWORD *)a4)
    {
      *a4 = 0;
      a4[1] = 0;
      a4[2] = 0;
      sub_244840194(a1 + 2, (uint64_t)a4);
      if (!*(_DWORD *)a4)
      {
        *a4 = 0;
        a4[1] = 0;
        a4[2] = 0;
        sub_24483F80C(a1 + 4, (uint64_t)a4);
        if (!*(_DWORD *)a4)
        {
          *a4 = 0;
          a4[1] = 0;
          a4[2] = 0;
          sub_24483F918(a1 + 8, (uint64_t)a4);
          if (!*(_DWORD *)a4)
          {
            *a4 = 0;
            a4[1] = 0;
            a4[2] = 0;
            sub_24483F894(a2, 4, a1 + 16, (uint64_t)a4);
            if (!*(_DWORD *)a4)
            {
              *a4 = 0;
              a4[1] = 0;
              a4[2] = 0;
              sub_24483F894(a2, 5, a1 + 22, (uint64_t)a4);
              if (!*(_DWORD *)a4)
              {
                *a4 = 0;
                a4[1] = 0;
                a4[2] = 0;
                sub_244813DC0(a1 + 28, (uint64_t)a4);
                if (!*(_DWORD *)a4) {
                  sub_244CB7708((uint64_t)a2, v7, (uint64_t)a4);
                }
              }
            }
          }
        }
      }
    }
  }
}

void sub_244840194(unsigned char *a1@<X2>, uint64_t a2@<X8>)
{
  if (!*a1)
  {
    *(_DWORD *)a2 = 0;
    *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    int v3 = 171;
    goto LABEL_5;
  }
  if (*sub_2446D18C8(a1) == 1)
  {
    *(_DWORD *)a2 = 1415;
    *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    int v3 = 75;
LABEL_5:
    *(_DWORD *)(a2 + 16) = v3;
    return;
  }

  sub_244CB68B8();
}

double sub_244840240@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v16[0] = 0;
  uint64_t v17 = a2;
  sub_2447ED6F8((uint64_t)v16, (uint64_t)&v13);
  int v6 = v15;
  if (v15 == 1)
  {
LABEL_15:
    double result = *(double *)&v13;
    *(_OWORD *)a3 = v13;
    *(void *)(a3 + 16) = v14;
  }
  else
  {
    while (1)
    {
      long long v11 = xmmword_2651983D8;
      uint64_t v12 = 31081;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v13)
      {
        case 0:
          sub_244CB3F40(a2, (_WORD *)a1, (uint64_t)&v11);
          break;
        case 1:
          *(_WORD *)(a1 + 2) = 1;
          sub_2447F092C(a2, (BOOL *)(a1 + 3), &v9);
          goto LABEL_12;
        case 2:
          *(unsigned char *)(a1 + 4) = 1;
          *(_WORD *)(a1 + 6) = 0;
          sub_244CB3F40(a2, (_WORD *)(a1 + 6), (uint64_t)&v9);
          goto LABEL_12;
        case 3:
          *(unsigned char *)(a1 + 8) = 1;
          *(_DWORD *)(a1 + 12) = 0;
          sub_244CB3FB0(a2, (_DWORD *)(a1 + 12), (uint64_t)&v9);
          goto LABEL_12;
        case 4:
          *(unsigned char *)(a1 + 16) = 1;
          *(_DWORD *)(a1 + 18) = 0;
          int v7 = (_WORD *)(a1 + 18);
          goto LABEL_10;
        case 5:
          *(unsigned char *)(a1 + 22) = 1;
          *(_DWORD *)(a1 + 24) = 0;
          int v7 = (_WORD *)(a1 + 24);
LABEL_10:
          sub_24483B9C8(v7, a2, (uint64_t)&v9);
          goto LABEL_12;
        case 6:
          *(_WORD *)(a1 + 28) = 1;
          sub_244CB3E8C(a2, (unsigned char *)(a1 + 29), (uint64_t)&v9);
LABEL_12:
          long long v11 = v9;
          uint64_t v12 = v10;
          break;
        default:
          break;
      }
      double result = *(double *)&v11;
      *(_OWORD *)a3 = v11;
      *(void *)(a3 + 16) = v12;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v16, (uint64_t)&v13);
      int v6 = v15;
      if (v15 == 1) {
        goto LABEL_15;
      }
    }
  }
  return result;
}

double sub_244840438@<D0>(unsigned char *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  sub_2447EF794((uint64_t)&v7, 0, a1);
  if (!v8)
  {
    sub_24484C0EC(a1 + 2, (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_24484C0EC(a1 + 8, (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_24484DB50(v7, 3, a1 + 16, (uint64_t)&v11);
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_2447F6524(v7, a1 + 40, (uint64_t)&v11);
          uint64_t v9 = v12;
          long long v8 = v11;
          if (!v11)
          {
            sub_2448136AC(a1 + 64, (uint64_t)&v11);
            uint64_t v9 = v12;
            long long v8 = v11;
            if (!v11)
            {
              sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
              long long v8 = v11;
              uint64_t v9 = v12;
            }
          }
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2448405DC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  int v6 = v16;
  if (v16 == 1)
  {
LABEL_14:
    double result = *(double *)&v14;
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 16) = v15;
  }
  else
  {
    while (1)
    {
      long long v12 = xmmword_2651983F0;
      uint64_t v13 = 31151;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v14)
      {
        case 0:
          sub_2446D1A48(a2, (unsigned char *)a1, &v12);
          break;
        case 1:
          *(unsigned char *)(a1 + 2) = 1;
          *(_DWORD *)(a1 + 4) = 0;
          uint64_t v7 = a2;
          long long v8 = (__int16 *)(a1 + 4);
          goto LABEL_7;
        case 2:
          *(unsigned char *)(a1 + 8) = 1;
          *(_DWORD *)(a1 + 10) = 0;
          uint64_t v7 = a2;
          long long v8 = (__int16 *)(a1 + 10);
LABEL_7:
          sub_2447EF9E0(v7, v8, (uint64_t)&v10);
          goto LABEL_11;
        case 3:
          sub_2447FE7A4(a2, (unsigned char *)(a1 + 16), (uint64_t)&v10);
          goto LABEL_11;
        case 4:
          *(unsigned char *)(a1 + 104) = 1;
          *(void *)(a1 + 112) = 0;
          *(void *)(a1 + 120) = 0;
          sub_244CB41F0(a2, (_OWORD *)(a1 + 112), &v10);
          goto LABEL_11;
        case 5:
          *(_WORD *)(a1 + 128) = 1;
          sub_24484B184(a2, (unsigned char *)(a1 + 129), &v10);
LABEL_11:
          long long v12 = v10;
          uint64_t v13 = v11;
          break;
        default:
          break;
      }
      double result = *(double *)&v12;
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
      int v6 = v16;
      if (v16 == 1) {
        goto LABEL_14;
      }
    }
  }
  return result;
}

double sub_2448407AC@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB6904();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB65C8();
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_24484C0EC((unsigned char *)(a1 + 4), (uint64_t)&v11);
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_24484C0EC((unsigned char *)(a1 + 10), (uint64_t)&v11);
          uint64_t v9 = v12;
          long long v8 = v11;
          if (!v11)
          {
            sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
            long long v8 = v11;
            uint64_t v9 = v12;
          }
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244840914@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  int v6 = v16;
  if (v16 == 1)
  {
LABEL_12:
    double result = *(double *)&v14;
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 16) = v15;
  }
  else
  {
    while (1)
    {
      long long v12 = xmmword_265198408;
      uint64_t v13 = 31208;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v14)
      {
        case 0:
          sub_244CB3F40(a2, (_WORD *)a1, (uint64_t)&v12);
          break;
        case 1:
          sub_244CB3C0C(a2, (char *)(a1 + 2), (uint64_t)&v10);
          goto LABEL_9;
        case 2:
          *(unsigned char *)(a1 + 4) = 1;
          *(_DWORD *)(a1 + 6) = 0;
          uint64_t v7 = a2;
          long long v8 = (__int16 *)(a1 + 6);
          goto LABEL_8;
        case 3:
          *(unsigned char *)(a1 + 10) = 1;
          *(_DWORD *)(a1 + 12) = 0;
          uint64_t v7 = a2;
          long long v8 = (__int16 *)(a1 + 12);
LABEL_8:
          sub_2447EF9E0(v7, v8, (uint64_t)&v10);
LABEL_9:
          long long v12 = v10;
          uint64_t v13 = v11;
          break;
        default:
          break;
      }
      double result = *(double *)&v12;
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
      int v6 = v16;
      if (v16 == 1) {
        goto LABEL_12;
      }
    }
  }
  return result;
}

double sub_244840A98@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_2447F5C00((unsigned __int16 *)a1, (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB6D80(v7, *(char **)(a1 + 8), *(void *)(a1 + 16), (uint64_t)&v11);
      long long v8 = v11;
      uint64_t v9 = v12;
    }
  }
  sub_2447EF794((uint64_t)&v7, 2, (unsigned char *)(a1 + 24));
  if (!v8)
  {
    sub_24484C0EC((unsigned char *)(a1 + 26), (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_24484C0EC((unsigned char *)(a1 + 32), (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_24484DB50(v7, 5, (unsigned char *)(a1 + 40), (uint64_t)&v11);
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_2447F6524(v7, (unsigned char *)(a1 + 64), (uint64_t)&v11);
          uint64_t v9 = v12;
          long long v8 = v11;
          if (!v11)
          {
            sub_2448136AC((unsigned char *)(a1 + 88), (uint64_t)&v11);
            uint64_t v9 = v12;
            long long v8 = v11;
            if (!v11)
            {
              sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
              long long v8 = v11;
              uint64_t v9 = v12;
            }
          }
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244840C94@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v19[0] = 0;
  uint64_t v20 = a2;
  sub_2447ED6F8((uint64_t)v19, (uint64_t)&v16);
  int v6 = v18;
  if (v18 == 1)
  {
LABEL_17:
    double result = *(double *)&v16;
    *(_OWORD *)a3 = v16;
    *(void *)(a3 + 16) = v17;
  }
  else
  {
    while (1)
    {
      long long v14 = xmmword_265198420;
      uint64_t v15 = 31261;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v16)
      {
        case 0:
          sub_2447EF9E0(a2, (__int16 *)a1, (uint64_t)&v14);
          break;
        case 1:
          uint64_t v7 = a2;
          long long v8 = (_OWORD *)(a1 + 8);
          goto LABEL_12;
        case 2:
          sub_2446D1A48(a2, (unsigned char *)(a1 + 24), &v12);
          goto LABEL_14;
        case 3:
          *(unsigned char *)(a1 + 26) = 1;
          *(_DWORD *)(a1 + 28) = 0;
          uint64_t v9 = a2;
          int v10 = (__int16 *)(a1 + 28);
          goto LABEL_9;
        case 4:
          *(unsigned char *)(a1 + 32) = 1;
          *(_DWORD *)(a1 + 34) = 0;
          uint64_t v9 = a2;
          int v10 = (__int16 *)(a1 + 34);
LABEL_9:
          sub_2447EF9E0(v9, v10, (uint64_t)&v12);
          goto LABEL_14;
        case 5:
          sub_2447FE7A4(a2, (unsigned char *)(a1 + 40), (uint64_t)&v12);
          goto LABEL_14;
        case 6:
          *(unsigned char *)(a1 + 128) = 1;
          *(void *)(a1 + 136) = 0;
          *(void *)(a1 + 144) = 0;
          uint64_t v7 = a2;
          long long v8 = (_OWORD *)(a1 + 136);
LABEL_12:
          sub_244CB41F0(v7, v8, &v12);
          goto LABEL_14;
        case 7:
          *(_WORD *)(a1 + 152) = 1;
          sub_24484B184(a2, (unsigned char *)(a1 + 153), &v12);
LABEL_14:
          long long v14 = v12;
          uint64_t v15 = v13;
          break;
        default:
          break;
      }
      double result = *(double *)&v14;
      *(_OWORD *)a3 = v14;
      *(void *)(a3 + 16) = v15;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v19, (uint64_t)&v16);
      int v6 = v18;
      if (v18 == 1) {
        goto LABEL_17;
      }
    }
  }
  return result;
}

double sub_244840E9C@<D0>(_WORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  for (int i = v16; v16 != 1; int i = v16)
  {
    long long v12 = xmmword_265198438;
    uint64_t v13 = 31325;
    if (i) {
      sub_24484AFEC();
    }
    if (v14 == 2)
    {
      uint64_t v7 = a2;
      long long v8 = a1 + 2;
    }
    else
    {
      if (v14 != 1)
      {
        if (!(_BYTE)v14) {
          sub_244CB3F40(a2, a1, (uint64_t)&v12);
        }
        goto LABEL_10;
      }
      uint64_t v7 = a2;
      long long v8 = a1 + 1;
    }
    sub_244CB3F40(v7, v8, (uint64_t)&v10);
    long long v12 = v10;
    uint64_t v13 = v11;
LABEL_10:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
    if (*(_DWORD *)a3) {
      return result;
    }
    sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  }
  double result = *(double *)&v14;
  *(_OWORD *)a3 = v14;
  *(void *)(a3 + 16) = v15;
  return result;
}

double sub_244840FC8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265198450;
      uint64_t v11 = 31368;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_244CB41F0(a2, (_OWORD *)(a1 + 8), &v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB3F40(a2, (_WORD *)a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_2448410D8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265198468;
      uint64_t v11 = 31407;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_244CB41F0(a2, (_OWORD *)(a1 + 8), &v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB3F40(a2, (_WORD *)a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_2448411E8@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB6904();
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  sub_244835240((uint64_t)&v7, 1, (unsigned char *)(a1 + 2));
  if (!v8)
  {
    sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2448412DC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265198480;
      uint64_t v11 = 31446;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_244823794(a2, (unsigned char *)(a1 + 2), &v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB3F40(a2, (_WORD *)a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

void sub_2448413EC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4 = *(_DWORD *)(a3 + 8);
  switch(v4)
  {
    case 65528:
      a1 += 80;
      goto LABEL_3;
    case 65529:
      a1 += 160;
      goto LABEL_3;
    case 65530:
      a1 += 240;
      goto LABEL_3;
    case 65531:
      a1 += 320;
      goto LABEL_3;
    case 65532:
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 400), a4);
      return;
    case 65533:
      sub_244CB3F40(a2, (_WORD *)(a1 + 404), a4);
      return;
    default:
      if (v4)
      {
        *(_DWORD *)a4 = 0;
        *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-comm"
                              "on/app-common/zap-generated/cluster-objects.cpp";
        *(_DWORD *)(a4 + 16) = 31487;
      }
      else
      {
LABEL_3:
        sub_24484B03C(a1, a2, a4);
      }
      return;
  }
}

double sub_24484149C@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB6904();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB6D80(a2, *(char **)(a1 + 8), *(void *)(a1 + 16), (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_24484DB50(a2, 2, (unsigned char *)(a1 + 24), (uint64_t)&v11);
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_2447F6524(a2, (unsigned char *)(a1 + 48), (uint64_t)&v11);
          uint64_t v9 = v12;
          long long v8 = v11;
          if (!v11)
          {
            sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
            long long v8 = v11;
            uint64_t v9 = v12;
          }
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244841604@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  int v6 = v16;
  if (v16 == 1)
  {
LABEL_12:
    double result = *(double *)&v14;
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 16) = v15;
  }
  else
  {
    while (1)
    {
      long long v12 = xmmword_265198498;
      uint64_t v13 = 31521;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v14)
      {
        case 0:
          sub_244CB3F40(a2, (_WORD *)a1, (uint64_t)&v12);
          break;
        case 1:
          uint64_t v7 = a2;
          long long v8 = (_OWORD *)(a1 + 8);
          goto LABEL_8;
        case 2:
          sub_2447FE7A4(a2, (unsigned char *)(a1 + 24), (uint64_t)&v10);
          goto LABEL_9;
        case 3:
          *(unsigned char *)(a1 + 112) = 1;
          *(void *)(a1 + 120) = 0;
          *(void *)(a1 + 128) = 0;
          uint64_t v7 = a2;
          long long v8 = (_OWORD *)(a1 + 120);
LABEL_8:
          sub_244CB41F0(v7, v8, &v10);
LABEL_9:
          long long v12 = v10;
          uint64_t v13 = v11;
          break;
        default:
          break;
      }
      double result = *(double *)&v12;
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
      int v6 = v16;
      if (v16 == 1) {
        goto LABEL_12;
      }
    }
  }
  return result;
}

double sub_244841780@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_2651984B0;
      uint64_t v11 = 31568;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_244CB41F0(a2, (_OWORD *)(a1 + 8), &v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB3F40(a2, (_WORD *)a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_244841890@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_2651984C8;
      uint64_t v11 = 31607;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_244CB41F0(a2, (_OWORD *)(a1 + 8), &v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB3F40(a2, (_WORD *)a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_2448419A0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_2651984E0;
      uint64_t v11 = 31646;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_244823794(a2, (unsigned char *)(a1 + 2), &v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB3F40(a2, (_WORD *)a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

void sub_244841AB0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4 = *(_DWORD *)(a3 + 8);
  switch(v4)
  {
    case 65528:
      a1 += 80;
      goto LABEL_3;
    case 65529:
      a1 += 160;
      goto LABEL_3;
    case 65530:
      a1 += 240;
      goto LABEL_3;
    case 65531:
      a1 += 320;
      goto LABEL_3;
    case 65532:
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 400), a4);
      return;
    case 65533:
      sub_244CB3F40(a2, (_WORD *)(a1 + 404), a4);
      return;
    default:
      if (v4)
      {
        *(_DWORD *)a4 = 0;
        *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-comm"
                              "on/app-common/zap-generated/cluster-objects.cpp";
        *(_DWORD *)(a4 + 16) = 31687;
      }
      else
      {
LABEL_3:
        sub_24484B03C(a1, a2, a4);
      }
      return;
  }
}

double sub_244841B60@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_2651984F8;
      uint64_t v11 = 31718;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_244CB41F0(a2, (_OWORD *)(a1 + 8), &v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB3E8C(a2, (unsigned char *)a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

void sub_244841C70(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4 = *(_DWORD *)(a3 + 8);
  if (v4 <= 65527)
  {
    if (v4)
    {
      if (v4 == 1)
      {
        sub_244CB3E8C(a2, (unsigned char *)(a1 + 80), a4);
      }
      else if (v4 == 2)
      {
        sub_244CB3C0C(a2, (char *)(a1 + 81), a4);
      }
      else
      {
LABEL_16:
        *(_DWORD *)a4 = 0;
        *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-comm"
                              "on/app-common/zap-generated/cluster-objects.cpp";
        *(_DWORD *)(a4 + 16) = 31787;
      }
    }
    else
    {
LABEL_4:
      sub_24484B03C(a1, a2, a4);
    }
  }
  else
  {
    switch(v4)
    {
      case 65528:
        a1 += 88;
        goto LABEL_4;
      case 65529:
        a1 += 168;
        goto LABEL_4;
      case 65530:
        a1 += 248;
        goto LABEL_4;
      case 65531:
        a1 += 328;
        goto LABEL_4;
      case 65532:
        sub_244CB3FB0(a2, (_DWORD *)(a1 + 408), a4);
        break;
      case 65533:
        sub_244CB3F40(a2, (_WORD *)(a1 + 412), a4);
        break;
      default:
        goto LABEL_16;
    }
  }
}

double sub_244841D5C@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v5[0] = 0;
  return sub_244841D84(a1, a2, a3, v5, a4);
}

double sub_244841D84@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, unsigned char *a4@<X3>, uint64_t a5@<X8>)
{
  if (*a4)
  {
    int v10 = *sub_2446F9190(a4);
    int v11 = *(unsigned __int8 *)(a1 + 88);
    uint64_t v13 = a2;
    sub_244CB7594(a2, a3, 21, &v16, (uint64_t)&v17);
    long long v14 = v17;
    uint64_t v15 = v18;
    if (v10 != v11) {
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v13 = a2;
    sub_244CB7594(a2, a3, 21, &v16, (uint64_t)&v17);
    long long v14 = v17;
    uint64_t v15 = v18;
  }
  if (!v14)
  {
    sub_2447F6524(v13, (unsigned char *)a1, (uint64_t)&v17);
    uint64_t v15 = v18;
    long long v14 = v17;
    if (!v17)
    {
      sub_244839174((unsigned char *)(a1 + 24), (uint64_t)&v17);
      uint64_t v15 = v18;
      long long v14 = v17;
      if (!v17)
      {
        sub_244CB6904();
        uint64_t v15 = v18;
        long long v14 = v17;
        if (!v17)
        {
          sub_244CB6904();
          long long v14 = v17;
          uint64_t v15 = v18;
        }
      }
    }
  }
  sub_244842038((uint64_t)&v13, 4u, (uint64_t *)(a1 + 48));
  sub_2447EEC28((uint64_t)&v13, 5u, (uint64_t *)(a1 + 64));
  if (!v14)
  {
    sub_244CB68CC();
    long long v14 = v17;
    uint64_t v15 = v18;
  }
LABEL_12:
  if (*a4 && !v14)
  {
    sub_244CB68B8();
    long long v14 = v17;
    uint64_t v15 = v18;
  }
  if (!v14)
  {
    sub_244CB7708((uint64_t)v13, v16, (uint64_t)&v17);
    long long v14 = v17;
    uint64_t v15 = v18;
  }
  double result = *(double *)&v14;
  *(_OWORD *)a5 = v14;
  *(void *)(a5 + 16) = v15;
  return result;
}

double sub_244842008@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  v6[0] = 1;
  v6[1] = a4;
  return sub_244841D84(a1, a2, a3, v6, a5);
}

double sub_244842038(uint64_t a1, unsigned int a2, uint64_t *a3)
{
  uint64_t v3 = a1 + 8;
  if (!*(_DWORD *)(a1 + 8))
  {
    int v4 = *(void **)a1;
    uint64_t v5 = *a3;
    uint64_t v6 = a3[1];
    int v11 = 0;
    uint64_t v10 = 0;
    long long v9 = 0uLL;
    sub_244CB7594(v4, a2, 22, &v11, (uint64_t)&v9);
    if (!v9)
    {
      if (v6)
      {
        uint64_t v7 = 8 * v6;
        while (1)
        {
          long long v9 = 0uLL;
          uint64_t v10 = 0;
          sub_2447EE418(v4, 256, (uint64_t)&v9);
          if (v9) {
            break;
          }
          v5 += 8;
          v7 -= 8;
          if (!v7) {
            goto LABEL_7;
          }
        }
      }
      else
      {
LABEL_7:
        long long v9 = 0uLL;
        uint64_t v10 = 0;
        sub_244CB7708((uint64_t)v4, v11, (uint64_t)&v9);
        if (!v9)
        {
          LODWORD(v9) = 0;
          *((void *)&v9 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/List.h";
          LODWORD(v10) = 86;
        }
      }
    }
    double result = *(double *)&v9;
    *(_OWORD *)uint64_t v3 = v9;
    *(void *)(v3 + 16) = v10;
  }
  return result;
}

double sub_244842124@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v19[0] = 0;
  uint64_t v20 = a2;
  sub_2447ED6F8((uint64_t)v19, (uint64_t)&v16);
  int v6 = v18;
  if (v18 != 1)
  {
    while (2)
    {
      long long v14 = xmmword_265198510;
      uint64_t v15 = 31862;
      if (!v6)
      {
        switch((char)v16)
        {
          case 0:
            *(unsigned char *)a1 = 1;
            *(void *)(a1 + 8) = 0;
            *(void *)(a1 + 16) = 0;
            sub_244CB41F0(a2, (_OWORD *)(a1 + 8), &v14);
            goto LABEL_16;
          case 1:
            *(unsigned char *)(a1 + 24) = 1;
            *(void *)(a1 + 32) = 0;
            uint64_t v7 = a2;
            long long v8 = (void *)(a1 + 32);
            goto LABEL_14;
          case 2:
            uint64_t v9 = a2;
            uint64_t v10 = (_WORD *)(a1 + 40);
            goto LABEL_10;
          case 3:
            uint64_t v9 = a2;
            uint64_t v10 = (_WORD *)(a1 + 42);
LABEL_10:
            sub_244CB3F40(v9, v10, (uint64_t)&v12);
            goto LABEL_15;
          case 4:
            sub_24484B03C(a1 + 48, a2, (uint64_t)&v12);
            goto LABEL_15;
          case 5:
            sub_24484B03C(a1 + 128, a2, (uint64_t)&v12);
            goto LABEL_15;
          case 6:
            uint64_t v7 = a2;
            long long v8 = (void *)(a1 + 208);
LABEL_14:
            sub_244CB3EFC(v7, v8, (uint64_t)&v12);
            goto LABEL_15;
          default:
            if (v16 != 254) {
              goto LABEL_16;
            }
            sub_244CB3E8C(a2, (unsigned char *)(a1 + 216), (uint64_t)&v12);
LABEL_15:
            long long v14 = v12;
            uint64_t v15 = v13;
LABEL_16:
            double result = *(double *)&v14;
            *(_OWORD *)a3 = v14;
            *(void *)(a3 + 16) = v15;
            if (*(_DWORD *)a3) {
              return result;
            }
            sub_2447ED6F8((uint64_t)v19, (uint64_t)&v16);
            int v6 = v18;
            if (v18 == 1) {
              goto LABEL_18;
            }
            continue;
        }
      }
      break;
    }
    sub_24484AFEC();
  }
LABEL_18:
  double result = *(double *)&v16;
  *(_OWORD *)a3 = v16;
  *(void *)(a3 + 16) = v17;
  return result;
}

double sub_24484232C@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v5[0] = 0;
  return sub_244842354(a1, a2, a3, v5, a4);
}

double sub_244842354@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, unsigned char *a4@<X3>, uint64_t a5@<X8>)
{
  if (*a4)
  {
    int v10 = *sub_2446F9190(a4);
    int v11 = *(unsigned __int8 *)(a1 + 48);
    uint64_t v13 = a2;
    sub_244CB7594(a2, a3, 21, &v16, (uint64_t)&v17);
    long long v14 = v17;
    uint64_t v15 = v18;
    if (v10 != v11) {
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v13 = a2;
    sub_244CB7594(a2, a3, 21, &v16, (uint64_t)&v17);
    long long v14 = v17;
    uint64_t v15 = v18;
  }
  if (!v14)
  {
    sub_244CB6D80(v13, *(char **)a1, *(void *)(a1 + 8), (uint64_t)&v17);
    uint64_t v15 = v18;
    long long v14 = v17;
    if (!v17)
    {
      sub_2447EFDD0(a1 + 16, v13, 1, (uint64_t)&v17);
      uint64_t v15 = v18;
      long long v14 = v17;
      if (!v17)
      {
        sub_244CB68CC();
        long long v14 = v17;
        uint64_t v15 = v18;
      }
    }
  }
LABEL_9:
  if (*a4 && !v14)
  {
    sub_244CB68B8();
    long long v14 = v17;
    uint64_t v15 = v18;
  }
  if (!v14)
  {
    sub_244CB7708((uint64_t)v13, v16, (uint64_t)&v17);
    long long v14 = v17;
    uint64_t v15 = v18;
  }
  double result = *(double *)&v14;
  *(_OWORD *)a5 = v14;
  *(void *)(a5 + 16) = v15;
  return result;
}

double sub_244842560@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  v6[0] = 1;
  v6[1] = a4;
  return sub_244842354(a1, a2, a3, v6, a5);
}

double sub_244842590@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  for (int i = v14; v14 != 1; int i = v14)
  {
    long long v10 = xmmword_265198528;
    uint64_t v11 = 31955;
    if (i) {
      sub_24484AFEC();
    }
    if (v12 > 1u)
    {
      if (v12 == 2)
      {
        sub_244CB3EFC(a2, (void *)(a1 + 40), (uint64_t)&v8);
        goto LABEL_12;
      }
      if (v12 == 254)
      {
        sub_244CB3E8C(a2, (unsigned char *)(a1 + 48), (uint64_t)&v8);
        goto LABEL_12;
      }
    }
    else if ((_BYTE)v12)
    {
      if (v12 == 1)
      {
        sub_2447EFF0C(a1 + 16, a2, (uint64_t)&v8);
LABEL_12:
        long long v10 = v8;
        uint64_t v11 = v9;
      }
    }
    else
    {
      sub_244CB41F0(a2, (_OWORD *)a1, &v10);
    }
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
    if (*(_DWORD *)a3) {
      return result;
    }
    sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  }
  double result = *(double *)&v12;
  *(_OWORD *)a3 = v12;
  *(void *)(a3 + 16) = v13;
  return result;
}

void sub_2448426F0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4 = *(_DWORD *)(a3 + 8);
  switch(v4)
  {
    case 65528:
      a1 += 160;
      goto LABEL_3;
    case 65529:
      a1 += 240;
      goto LABEL_3;
    case 65530:
      a1 += 320;
      goto LABEL_3;
    case 65531:
      a1 += 400;
      goto LABEL_3;
    case 65532:
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 480), a4);
      return;
    case 65533:
      sub_244CB3F40(a2, (_WORD *)(a1 + 484), a4);
      return;
    default:
      if (v4 == 1)
      {
        a1 += 80;
LABEL_3:
        sub_24484B03C(a1, a2, a4);
        return;
      }
      if (!v4) {
        goto LABEL_3;
      }
      *(_DWORD *)a4 = 0;
      *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-common"
                            "/app-common/zap-generated/cluster-objects.cpp";
      *(_DWORD *)(a4 + 16) = 32009;
      return;
  }
}

double sub_2448427B0@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB68CC();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB6904();
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB6904();
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_2447F6524(a2, (unsigned char *)(a1 + 16), (uint64_t)&v11);
          uint64_t v9 = v12;
          long long v8 = v11;
          if (!v11)
          {
            sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
            long long v8 = v11;
            uint64_t v9 = v12;
          }
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244842918@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_12:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265198540;
      uint64_t v11 = 32042;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v12)
      {
        case 0:
          sub_244CB3EFC(a2, (void *)a1, (uint64_t)&v10);
          break;
        case 1:
          long long v8 = 0uLL;
          uint64_t v9 = 0;
          sub_24484B11C(a2, (_WORD *)(a1 + 8), &v8);
          if (!v8)
          {
            LODWORD(v8) = 0;
            *((void *)&v8 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
            LODWORD(v9) = 61;
          }
          goto LABEL_9;
        case 2:
          sub_244CB3F40(a2, (_WORD *)(a1 + 10), (uint64_t)&v8);
          goto LABEL_9;
        case 3:
          *(unsigned char *)(a1 + 16) = 1;
          *(void *)(a1 + 24) = 0;
          *(void *)(a1 + 32) = 0;
          sub_244CB41F0(a2, (_OWORD *)(a1 + 24), &v8);
LABEL_9:
          long long v10 = v8;
          uint64_t v11 = v9;
          break;
        default:
          break;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_12;
      }
    }
  }
  return result;
}

double sub_244842AC8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265198558;
      uint64_t v11 = 32089;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_244CB3F40(a2, (_WORD *)(a1 + 8), (uint64_t)&v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB3EFC(a2, (void *)a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_244842BD8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  int v6 = v16;
  if (v16 == 1)
  {
LABEL_16:
    double result = *(double *)&v14;
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 16) = v15;
  }
  else
  {
    while (1)
    {
      long long v12 = xmmword_265198570;
      uint64_t v13 = 32131;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v14)
      {
        case 0:
          sub_244CB3F40(a2, (_WORD *)a1, (uint64_t)&v12);
          break;
        case 1:
          if (sub_244CB3B68(a2) != 16) {
            goto LABEL_12;
          }
          uint64_t v7 = a2;
          long long v8 = (_OWORD *)(a1 + 8);
          goto LABEL_11;
        case 2:
          sub_244CB3F40(a2, (_WORD *)(a1 + 24), (uint64_t)&v10);
          goto LABEL_13;
        case 3:
          sub_244CB3FB0(a2, (_DWORD *)(a1 + 28), (uint64_t)&v10);
          goto LABEL_13;
        case 4:
          if (sub_244CB3B68(a2) == 16)
          {
            uint64_t v7 = a2;
            long long v8 = (_OWORD *)(a1 + 32);
LABEL_11:
            sub_244CB40C8(v7, v8, &v10);
          }
          else
          {
LABEL_12:
            LODWORD(v10) = 43;
            *((void *)&v10 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
            LODWORD(v11) = 80;
          }
LABEL_13:
          long long v12 = v10;
          uint64_t v13 = v11;
          break;
        default:
          break;
      }
      double result = *(double *)&v12;
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
      int v6 = v16;
      if (v16 == 1) {
        goto LABEL_16;
      }
    }
  }
  return result;
}

void sub_244842DAC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4 = *(_DWORD *)(a3 + 8);
  switch(v4)
  {
    case 65528:
      uint64_t v5 = a1 + 8;
      goto LABEL_3;
    case 65529:
      uint64_t v5 = a1 + 88;
      goto LABEL_3;
    case 65530:
      uint64_t v5 = a1 + 168;
      goto LABEL_3;
    case 65531:
      uint64_t v5 = a1 + 248;
LABEL_3:
      sub_24484B03C(v5, a2, a4);
      break;
    case 65532:
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 328), a4);
      break;
    case 65533:
      sub_244CB3F40(a2, (_WORD *)(a1 + 332), a4);
      break;
    default:
      if (v4)
      {
        *(_DWORD *)a4 = 0;
        *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-comm"
                              "on/app-common/zap-generated/cluster-objects.cpp";
        *(_DWORD *)(a4 + 16) = 32184;
      }
      else
      {
        sub_24484B2E8(a2, (_DWORD *)a1, (void *)a4);
      }
      break;
  }
}

void sub_244842E68(void *a1@<X1>, uint64_t a2@<X2>, void *a3@<X8>)
{
  int v5 = 0;
  a3[1] = 0;
  a3[2] = 0;
  *a3 = 0;
  sub_244CB7594(a1, a2, 21, &v5, (uint64_t)a3);
  if (!*(_DWORD *)a3)
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
    sub_244CB68CC();
    if (!*(_DWORD *)a3)
    {
      *a3 = 0;
      a3[1] = 0;
      a3[2] = 0;
      sub_244CB68CC();
      if (!*(_DWORD *)a3)
      {
        *a3 = 0;
        a3[1] = 0;
        a3[2] = 0;
        sub_244CB68B8();
        if (!*(_DWORD *)a3)
        {
          *a3 = 0;
          a3[1] = 0;
          a3[2] = 0;
          sub_244CB68B8();
          if (!*(_DWORD *)a3) {
            sub_244CB7708((uint64_t)a1, v5, (uint64_t)a3);
          }
        }
      }
    }
  }
}

double sub_244842F68@<D0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  for (int i = v16; v16 != 1; int i = v16)
  {
    long long v12 = xmmword_265198588;
    uint64_t v13 = 32213;
    if (i) {
      sub_24484AFEC();
    }
    if (v14 > 1u)
    {
      if (v14 == 2)
      {
        uint64_t v7 = a2;
        long long v8 = a1 + 2;
LABEL_12:
        sub_244CB3E8C(v7, v8, (uint64_t)&v10);
LABEL_13:
        long long v12 = v10;
        uint64_t v13 = v11;
        goto LABEL_14;
      }
      if (v14 == 254)
      {
        uint64_t v7 = a2;
        long long v8 = (char *)a1 + 17;
        goto LABEL_12;
      }
    }
    else if ((_BYTE)v14)
    {
      if (v14 == 1)
      {
        sub_244CB3EFC(a2, a1 + 1, (uint64_t)&v10);
        goto LABEL_13;
      }
    }
    else
    {
      sub_244CB3EFC(a2, a1, (uint64_t)&v12);
    }
LABEL_14:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
    if (*(_DWORD *)a3) {
      return result;
    }
    sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  }
  double result = *(double *)&v14;
  *(_OWORD *)a3 = v14;
  *(void *)(a3 + 16) = v15;
  return result;
}

double sub_2448430C4@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB68B8();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB65C8();
      long long v8 = v11;
      uint64_t v9 = v12;
    }
  }
  sub_2447EF794((uint64_t)&v7, 2, (unsigned char *)(a1 + 2));
  if (!v8)
  {
    sub_244CB6ADC(v7, *(char **)(a1 + 8), *(void *)(a1 + 16), (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB6D80(v7, *(char **)(a1 + 24), *(void *)(a1 + 32), (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB68B8();
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_244CB6ABC();
          uint64_t v9 = v12;
          long long v8 = v11;
          if (!v11)
          {
            sub_244CB6ACC();
            uint64_t v9 = v12;
            long long v8 = v11;
            if (!v11)
            {
              sub_24484DC5C((unsigned char *)(a1 + 56), (uint64_t)&v11);
              uint64_t v9 = v12;
              long long v8 = v11;
              if (!v11)
              {
                sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
                long long v8 = v11;
                uint64_t v9 = v12;
              }
            }
          }
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2448432EC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_18:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_2651985A0;
      uint64_t v11 = 32273;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v12)
      {
        case 0:
          sub_244CB3E8C(a2, (unsigned char *)a1, (uint64_t)&v10);
          break;
        case 1:
          sub_244CB3C0C(a2, (char *)(a1 + 1), (uint64_t)&v8);
          goto LABEL_15;
        case 2:
          sub_2446D1A48(a2, (unsigned char *)(a1 + 2), &v8);
          goto LABEL_15;
        case 3:
          if (sub_244CB3B68(a2) == 16)
          {
            sub_244CB40C8(a2, (_OWORD *)(a1 + 8), &v8);
          }
          else
          {
            LODWORD(v8) = 43;
            *((void *)&v8 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
            LODWORD(v9) = 80;
          }
          goto LABEL_15;
        case 4:
          sub_244CB41F0(a2, (_OWORD *)(a1 + 24), &v8);
          goto LABEL_15;
        case 5:
          sub_24484B184(a2, (unsigned char *)(a1 + 40), &v8);
          goto LABEL_15;
        case 6:
          sub_244CB401C(a2, (_DWORD *)(a1 + 44), (uint64_t)&v8);
          goto LABEL_15;
        case 7:
          sub_244CB4060(a2, (double *)(a1 + 48), (uint64_t)&v8);
          goto LABEL_15;
        case 8:
          *(_WORD *)(a1 + 56) = 1;
          sub_2447F5F24(a2, (unsigned char *)(a1 + 57), &v8);
LABEL_15:
          long long v10 = v8;
          uint64_t v11 = v9;
          break;
        default:
          break;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_18;
      }
    }
  }
  return result;
}

double sub_244843530@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v5[0] = 0;
  return sub_244843558(a1, a2, a3, v5, a4);
}

double sub_244843558@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, unsigned char *a4@<X3>, uint64_t a5@<X8>)
{
  if (*a4)
  {
    int v10 = *sub_2446F9190(a4);
    int v11 = *(unsigned __int8 *)(a1 + 104);
    uint64_t v13 = a2;
    sub_244CB7594(a2, a3, 21, &v16, (uint64_t)&v17);
    long long v14 = v17;
    uint64_t v15 = v18;
    if (v10 != v11) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v13 = a2;
    sub_244CB7594(a2, a3, 21, &v16, (uint64_t)&v17);
    long long v14 = v17;
    uint64_t v15 = v18;
  }
  if (!v14)
  {
    sub_244CB68B8();
    uint64_t v15 = v18;
    long long v14 = v17;
    if (!v17)
    {
      sub_244813DC0((unsigned char *)(a1 + 1), (uint64_t)&v17);
      uint64_t v15 = v18;
      long long v14 = v17;
      if (!v17)
      {
        sub_2447FB010((unsigned __int8 *)(a1 + 3), (uint64_t)&v17);
        uint64_t v15 = v18;
        long long v14 = v17;
        if (!v17)
        {
          sub_24484DD08((unsigned char *)(a1 + 5), (uint64_t)&v17);
          uint64_t v15 = v18;
          long long v14 = v17;
          if (!v17)
          {
            sub_244CB6D80(v13, *(char **)(a1 + 8), *(void *)(a1 + 16), (uint64_t)&v17);
            uint64_t v15 = v18;
            long long v14 = v17;
            if (!v17)
            {
              sub_2448430C4(a1 + 24, v13, 6, (uint64_t)&v17);
              long long v14 = v17;
              uint64_t v15 = v18;
            }
          }
        }
      }
    }
  }
  sub_24483CB00((uint64_t)&v13, 7u, (uint64_t *)(a1 + 88));
LABEL_13:
  if (*a4 && !v14)
  {
    sub_244CB68B8();
    long long v14 = v17;
    uint64_t v15 = v18;
  }
  if (!v14)
  {
    sub_244CB7708((uint64_t)v13, v16, (uint64_t)&v17);
    long long v14 = v17;
    uint64_t v15 = v18;
  }
  double result = *(double *)&v14;
  *(_OWORD *)a5 = v14;
  *(void *)(a5 + 16) = v15;
  return result;
}

double sub_2448437F8@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  v6[0] = 1;
  v6[1] = a4;
  return sub_244843558(a1, a2, a3, v6, a5);
}

double sub_244843828@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v19[0] = 0;
  uint64_t v20 = a2;
  sub_2447ED6F8((uint64_t)v19, (uint64_t)&v16);
  int v6 = v18;
  if (v18 != 1)
  {
    while (2)
    {
      long long v14 = xmmword_2651985B8;
      uint64_t v15 = 32386;
      if (!v6)
      {
        switch((char)v16)
        {
          case 1:
            sub_244CB3E8C(a2, (unsigned char *)a1, (uint64_t)&v14);
            goto LABEL_16;
          case 2:
            *(_WORD *)(a1 + 1) = 1;
            uint64_t v7 = a2;
            long long v8 = (unsigned char *)(a1 + 2);
            goto LABEL_8;
          case 3:
            uint64_t v9 = a2;
            int v10 = (unsigned __int8 *)(a1 + 3);
            goto LABEL_11;
          case 4:
            *(unsigned char *)(a1 + 5) = 1;
            *(_WORD *)(a1 + 6) = 0;
            uint64_t v9 = a2;
            int v10 = (unsigned __int8 *)(a1 + 6);
LABEL_11:
            sub_2447F15BC(v9, v10, (uint64_t)&v12);
            goto LABEL_15;
          case 5:
            sub_244CB41F0(a2, (_OWORD *)(a1 + 8), &v12);
            goto LABEL_15;
          case 6:
            sub_2448432EC(a1 + 24, a2, (uint64_t)&v12);
            goto LABEL_15;
          case 7:
            sub_24484B03C(a1 + 88, a2, (uint64_t)&v12);
            goto LABEL_15;
          default:
            if (v16 != 254) {
              goto LABEL_16;
            }
            uint64_t v7 = a2;
            long long v8 = (unsigned char *)(a1 + 168);
LABEL_8:
            sub_244CB3E8C(v7, v8, (uint64_t)&v12);
LABEL_15:
            long long v14 = v12;
            uint64_t v15 = v13;
LABEL_16:
            double result = *(double *)&v14;
            *(_OWORD *)a3 = v14;
            *(void *)(a3 + 16) = v15;
            if (*(_DWORD *)a3) {
              return result;
            }
            sub_2447ED6F8((uint64_t)v19, (uint64_t)&v16);
            int v6 = v18;
            if (v18 == 1) {
              goto LABEL_18;
            }
            continue;
        }
      }
      break;
    }
    sub_24484AFEC();
  }
LABEL_18:
  double result = *(double *)&v16;
  *(_OWORD *)a3 = v16;
  *(void *)(a3 + 16) = v17;
  return result;
}

double sub_244843A2C@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_2447F5C00((unsigned __int16 *)a1, (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_24483F80C((unsigned char *)(a1 + 4), (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_24484C0EC((unsigned char *)(a1 + 8), (uint64_t)&v11);
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_24484BC80(a2, a1 + 16, (uint64_t)&v11);
          uint64_t v9 = v12;
          long long v8 = v11;
          if (!v11)
          {
            sub_2447F6524(a2, (unsigned char *)(a1 + 40), (uint64_t)&v11);
            uint64_t v9 = v12;
            long long v8 = v11;
            if (!v11)
            {
              sub_244819180(a2, (unsigned char *)(a1 + 64), (uint64_t)&v11);
              uint64_t v9 = v12;
              long long v8 = v11;
              if (!v11)
              {
                sub_24484DD90(a2, 6, a1 + 96, (uint64_t)&v11);
                uint64_t v9 = v12;
                long long v8 = v11;
                if (!v11)
                {
                  sub_24484DDB8(a2, 7, (unsigned char *)(a1 + 168), (uint64_t)&v11);
                  uint64_t v9 = v12;
                  long long v8 = v11;
                  if (!v11)
                  {
                    sub_24484DE3C(a2, 8, (unsigned char *)(a1 + 240), (uint64_t)&v11);
                    uint64_t v9 = v12;
                    long long v8 = v11;
                    if (!v11)
                    {
                      sub_24484DEC4(a2, 9, a1 + 320, &v11);
                      uint64_t v9 = v12;
                      long long v8 = v11;
                      if (!v11)
                      {
                        sub_24484DFF0(a2, 10, (unsigned char *)(a1 + 344), &v11);
                        uint64_t v9 = v12;
                        long long v8 = v11;
                        if (!v11)
                        {
                          sub_24484E114(a2, 11, (unsigned char *)(a1 + 368), (uint64_t)&v11);
                          uint64_t v9 = v12;
                          long long v8 = v11;
                          if (!v11)
                          {
                            sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
                            long long v8 = v11;
                            uint64_t v9 = v12;
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244843CF4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v21[0] = 0;
  uint64_t v22 = a2;
  sub_2447ED6F8((uint64_t)v21, (uint64_t)&v18);
  int v6 = v20;
  if (v20 == 1)
  {
LABEL_22:
    double result = *(double *)&v18;
    *(_OWORD *)a3 = v18;
    *(void *)(a3 + 16) = v19;
  }
  else
  {
    while (1)
    {
      long long v16 = xmmword_2651985D0;
      uint64_t v17 = 32461;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v18)
      {
        case 0:
          sub_2447EF9E0(a2, (__int16 *)a1, (uint64_t)&v16);
          break;
        case 1:
          *(unsigned char *)(a1 + 4) = 1;
          *(_WORD *)(a1 + 6) = 0;
          sub_244CB3F40(a2, (_WORD *)(a1 + 6), (uint64_t)&v14);
          goto LABEL_19;
        case 2:
          *(unsigned char *)(a1 + 8) = 1;
          *(_DWORD *)(a1 + 10) = 0;
          sub_2447EF9E0(a2, (__int16 *)(a1 + 10), (uint64_t)&v14);
          goto LABEL_19;
        case 3:
          uint64_t v7 = a2;
          uint64_t v8 = a1 + 16;
          goto LABEL_10;
        case 4:
          *(unsigned char *)(a1 + 40) = 1;
          *(void *)(a1 + 48) = 0;
          *(void *)(a1 + 56) = 0;
          sub_244CB41F0(a2, (_OWORD *)(a1 + 48), &v14);
          goto LABEL_19;
        case 5:
          *(unsigned char *)(a1 + 64) = 1;
          *(void *)(a1 + 80) = 0;
          *(void *)(a1 + 88) = 0;
          *(void *)(a1 + 72) = 0;
          uint64_t v7 = a2;
          uint64_t v8 = a1 + 72;
LABEL_10:
          sub_244803C58(v7, v8, &v14);
          goto LABEL_19;
        case 6:
          uint64_t v9 = a2;
          uint64_t v10 = a1 + 96;
          goto LABEL_14;
        case 7:
          *(unsigned char *)(a1 + 168) = 1;
          *(_OWORD *)(a1 + 176) = 0u;
          *(_OWORD *)(a1 + 192) = 0u;
          *(_OWORD *)(a1 + 208) = 0u;
          *(_OWORD *)(a1 + 224) = 0u;
          sub_2448432EC(a1 + 176, a2, (uint64_t)&v14);
          goto LABEL_19;
        case 8:
          *(unsigned char *)(a1 + 240) = 1;
          *(_OWORD *)(a1 + 248) = 0u;
          *(_OWORD *)(a1 + 264) = 0u;
          *(_OWORD *)(a1 + 280) = 0u;
          *(_OWORD *)(a1 + 296) = 0u;
          *(void *)(a1 + 312) = 0;
          uint64_t v9 = a2;
          uint64_t v10 = a1 + 248;
LABEL_14:
          sub_244843FB4(v9, v10, &v14);
          goto LABEL_19;
        case 9:
          uint64_t v11 = a2;
          uint64_t v12 = a1 + 320;
          goto LABEL_18;
        case 10:
          sub_2447FE7A4(a2, (unsigned char *)(a1 + 408), (uint64_t)&v14);
          goto LABEL_19;
        case 11:
          *(unsigned char *)(a1 + 496) = 1;
          *(_OWORD *)(a1 + 504) = 0u;
          *(_OWORD *)(a1 + 520) = 0u;
          *(_OWORD *)(a1 + 536) = 0u;
          *(_OWORD *)(a1 + 552) = 0u;
          *(_OWORD *)(a1 + 568) = 0u;
          *(void *)(a1 + 584) = 0;
          uint64_t v11 = a2;
          uint64_t v12 = a1 + 504;
LABEL_18:
          sub_2447F50A0(v11, v12, &v14);
LABEL_19:
          long long v16 = v14;
          uint64_t v17 = v15;
          break;
        default:
          break;
      }
      double result = *(double *)&v16;
      *(_OWORD *)a3 = v16;
      *(void *)(a3 + 16) = v17;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v21, (uint64_t)&v18);
      int v6 = v20;
      if (v20 == 1) {
        goto LABEL_22;
      }
    }
  }
  return result;
}

void sub_244843FB4(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if (sub_244CB3B68(a1) == 20)
  {
    if (*(unsigned char *)(a2 + 64)) {
      *(unsigned char *)(a2 + 64) = 0;
    }
    int v6 = 168;
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)(a2 + 48) = 0u;
    *(unsigned char *)(a2 + 64) = 1;
    sub_2448432EC(a2, a1, (uint64_t)a3);
    if (*(_DWORD *)a3) {
      return;
    }
    int v6 = 177;
  }
  *(_DWORD *)a3 = 0;
  a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
  *((_DWORD *)a3 + 4) = v6;
}

double sub_244844050@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB68B8();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB65C8();
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_2448430C4(a1 + 8, a2, 2, (uint64_t)&v11);
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_24484E19C(a2, 3, (unsigned char *)(a1 + 72), (uint64_t)&v11);
          uint64_t v9 = v12;
          long long v8 = v11;
          if (!v11)
          {
            sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
            long long v8 = v11;
            uint64_t v9 = v12;
          }
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2448441B8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_11:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_2651985E8;
      uint64_t v11 = 32544;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v12)
      {
        case 0:
          sub_244CB3E8C(a2, (unsigned char *)a1, (uint64_t)&v10);
          break;
        case 1:
          sub_244CB3C0C(a2, (char *)(a1 + 1), (uint64_t)&v8);
          goto LABEL_8;
        case 2:
          sub_2448432EC(a1 + 8, a2, (uint64_t)&v8);
          goto LABEL_8;
        case 3:
          *(unsigned char *)(a1 + 72) = 1;
          *(_OWORD *)(a1 + 80) = 0u;
          *(_OWORD *)(a1 + 96) = 0u;
          sub_2447EFBF8(a1 + 80, a2, (uint64_t)&v8);
LABEL_8:
          long long v10 = v8;
          uint64_t v11 = v9;
          break;
        default:
          break;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_11;
      }
    }
  }
  return result;
}

double sub_24484433C@<D0>(uint64_t *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB68B8();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB65C8();
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_2448430C4((uint64_t)(a1 + 1), v7, 2, (uint64_t)&v11);
        long long v8 = v11;
        uint64_t v9 = v12;
      }
    }
  }
  sub_2448444B8((uint64_t)&v7, 3u, a1 + 9);
  sub_244826510((uint64_t)&v7, 4u, a1 + 11);
  sub_2448008F4((uint64_t)&v7, 5u, a1 + 13);
  sub_24483CB00((uint64_t)&v7, 6u, a1 + 15);
  if (!v8)
  {
    sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2448444B8(uint64_t a1, unsigned int a2, uint64_t *a3)
{
  uint64_t v3 = a1 + 8;
  if (!*(_DWORD *)(a1 + 8))
  {
    int v4 = *(char **)a1;
    uint64_t v5 = *a3;
    uint64_t v6 = a3[1];
    int v11 = 0;
    uint64_t v10 = 0;
    long long v9 = 0uLL;
    sub_244CB7594(v4, a2, 22, &v11, (uint64_t)&v9);
    if (!v9)
    {
      if (v6)
      {
        uint64_t v7 = v6 << 6;
        while (1)
        {
          long long v9 = 0uLL;
          uint64_t v10 = 0;
          sub_2448430C4(v5, v4, 256, (uint64_t)&v9);
          if (v9) {
            break;
          }
          v5 += 64;
          v7 -= 64;
          if (!v7) {
            goto LABEL_7;
          }
        }
      }
      else
      {
LABEL_7:
        long long v9 = 0uLL;
        uint64_t v10 = 0;
        sub_244CB7708((uint64_t)v4, v11, (uint64_t)&v9);
        if (!v9)
        {
          LODWORD(v9) = 0;
          *((void *)&v9 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/List.h";
          LODWORD(v10) = 86;
        }
      }
    }
    double result = *(double *)&v9;
    *(_OWORD *)uint64_t v3 = v9;
    *(void *)(v3 + 16) = v10;
  }
  return result;
}

double sub_2448445A4@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_14:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265198600;
      uint64_t v11 = 32598;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v12)
      {
        case 0:
          sub_244CB3E8C(a2, a1, (uint64_t)&v10);
          break;
        case 1:
          sub_244CB3C0C(a2, a1 + 1, (uint64_t)&v8);
          goto LABEL_11;
        case 2:
          sub_2448432EC((uint64_t)(a1 + 8), a2, (uint64_t)&v8);
          goto LABEL_11;
        case 3:
          sub_24484B03C((uint64_t)(a1 + 72), a2, (uint64_t)&v8);
          goto LABEL_11;
        case 4:
          sub_24484B03C((uint64_t)(a1 + 152), a2, (uint64_t)&v8);
          goto LABEL_11;
        case 5:
          sub_24484B03C((uint64_t)(a1 + 232), a2, (uint64_t)&v8);
          goto LABEL_11;
        case 6:
          sub_24484B03C((uint64_t)(a1 + 312), a2, (uint64_t)&v8);
LABEL_11:
          long long v10 = v8;
          uint64_t v11 = v9;
          break;
        default:
          break;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_14;
      }
    }
  }
  return result;
}

double sub_244844774@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  sub_24484483C((uint64_t)&v7, 0, a1);
  if (!v8)
  {
    sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_24484483C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = a1 + 8;
  if (!*(_DWORD *)(a1 + 8))
  {
    int v4 = *(char **)a1;
    uint64_t v5 = *(uint64_t **)a3;
    uint64_t v6 = *(void *)(a3 + 8);
    int v11 = 0;
    uint64_t v10 = 0;
    long long v9 = 0uLL;
    sub_244CB7594(v4, a2, 22, &v11, (uint64_t)&v9);
    if (!v9)
    {
      if (v6)
      {
        uint64_t v7 = 136 * v6;
        while (1)
        {
          long long v9 = 0uLL;
          uint64_t v10 = 0;
          sub_24484433C(v5, v4, 256, (uint64_t)&v9);
          if (v9) {
            break;
          }
          v5 += 17;
          v7 -= 136;
          if (!v7) {
            goto LABEL_7;
          }
        }
      }
      else
      {
LABEL_7:
        long long v9 = 0uLL;
        uint64_t v10 = 0;
        sub_244CB7708((uint64_t)v4, v11, (uint64_t)&v9);
        if (!v9)
        {
          LODWORD(v9) = 0;
          *((void *)&v9 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/List.h";
          LODWORD(v10) = 86;
        }
      }
    }
    double result = *(double *)&v9;
    *(_OWORD *)uint64_t v3 = v9;
    *(void *)(v3 + 16) = v10;
  }
  return result;
}

double sub_24484492C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265198618;
      uint64_t v9 = 32658;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_24484B03C(a1, a2, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_244844A04@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB68CC();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB6ADC(a2, *(char **)(a1 + 8), *(void *)(a1 + 16), (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
        long long v8 = v11;
        uint64_t v9 = v12;
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244844B14@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_12:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265198630;
      uint64_t v11 = 32695;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        if (sub_244CB3B68(a2) == 16)
        {
          sub_244CB40C8(a2, (_OWORD *)(a1 + 8), &v8);
        }
        else
        {
          LODWORD(v8) = 43;
          *((void *)&v8 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
          LODWORD(v9) = 80;
        }
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB3EFC(a2, (void *)a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_12;
      }
    }
  }
  return result;
}

double sub_244844C5C@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265198648;
      uint64_t v9 = 32757;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3E8C(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_244844D34@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265198660;
      uint64_t v9 = 32811;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3E8C(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_244844E0C@<D0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265198678;
      uint64_t v9 = 32865;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3C0C(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_244844EE4@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  sub_24484483C((uint64_t)&v7, 0, a1);
  sub_2448444B8((uint64_t)&v7, 1u, (uint64_t *)(a1 + 16));
  sub_2447F944C((uint64_t)&v7, 2u, a1 + 32);
  sub_244845018((uint64_t)&v7, 3u, (uint64_t *)(a1 + 48));
  sub_2447EF794((uint64_t)&v7, 4, (unsigned char *)(a1 + 64));
  if (!v8)
  {
    sub_244CB65C8();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
      long long v8 = v11;
      uint64_t v9 = v12;
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244845018(uint64_t a1, unsigned int a2, uint64_t *a3)
{
  uint64_t v3 = a1 + 8;
  if (!*(_DWORD *)(a1 + 8))
  {
    int v4 = *(void **)a1;
    uint64_t v5 = *a3;
    uint64_t v6 = a3[1];
    int v10 = 0;
    uint64_t v9 = 0;
    long long v8 = 0uLL;
    sub_244CB7594(v4, a2, 22, &v10, (uint64_t)&v8);
    if (!v8)
    {
      if (v6)
      {
        while (1)
        {
          long long v8 = 0uLL;
          uint64_t v9 = 0;
          sub_244CB65C8();
          if (v8) {
            break;
          }
          ++v5;
          if (!--v6) {
            goto LABEL_6;
          }
        }
      }
      else
      {
LABEL_6:
        long long v8 = 0uLL;
        uint64_t v9 = 0;
        sub_244CB7708((uint64_t)v4, v10, (uint64_t)&v8);
        if (!v8)
        {
          LODWORD(v8) = 0;
          *((void *)&v8 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/List.h";
          LODWORD(v9) = 86;
        }
      }
    }
    double result = *(double *)&v8;
    *(_OWORD *)uint64_t v3 = v8;
    *(void *)(v3 + 16) = v9;
  }
  return result;
}

double sub_244845100@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_13:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265198690;
      uint64_t v11 = 32924;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v12)
      {
        case 0:
          sub_24484B03C(a1, a2, (uint64_t)&v10);
          break;
        case 1:
          sub_24484B03C(a1 + 80, a2, (uint64_t)&v8);
          goto LABEL_10;
        case 2:
          sub_24484B03C(a1 + 160, a2, (uint64_t)&v8);
          goto LABEL_10;
        case 3:
          sub_24484B03C(a1 + 240, a2, (uint64_t)&v8);
          goto LABEL_10;
        case 4:
          sub_2446D1A48(a2, (unsigned char *)(a1 + 320), &v8);
          goto LABEL_10;
        case 5:
          sub_244CB3C0C(a2, (char *)(a1 + 321), (uint64_t)&v8);
LABEL_10:
          long long v10 = v8;
          uint64_t v11 = v9;
          break;
        default:
          break;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_13;
      }
    }
  }
  return result;
}

double sub_2448452B4@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_2651986A8;
      uint64_t v11 = 32979;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_244CB3E8C(a2, a1 + 1, (uint64_t)&v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB3E8C(a2, a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_2448453C4@<D0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  sub_24483CB00((uint64_t)&v7, 0, a1);
  if (!v8)
  {
    sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_24484548C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_2651986C0;
      uint64_t v9 = 33017;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_24484B03C(a1, a2, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_244845564@<D0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_2651986D8;
      uint64_t v9 = 33051;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3C0C(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_24484563C@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB6904();
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  sub_2447EF794((uint64_t)&v7, 1, (unsigned char *)(a1 + 2));
  if (!v8)
  {
    sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244845730@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_11:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_2651986F0;
      uint64_t v11 = 33086;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_2446D1A48(a2, (unsigned char *)(a1 + 2), &v10);
      }
      else if (!(_BYTE)v12)
      {
        long long v8 = 0uLL;
        uint64_t v9 = 0;
        sub_24484B11C(a2, (_WORD *)a1, &v8);
        if (!v8)
        {
          LODWORD(v8) = 0;
          *((void *)&v8 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
          LODWORD(v9) = 61;
        }
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_11;
      }
    }
  }
  return result;
}

double sub_244845870@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_13:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265198708;
      uint64_t v11 = 33129;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v12)
      {
        case 0:
          sub_24484B03C(a1, a2, (uint64_t)&v10);
          break;
        case 1:
          sub_24484B03C(a1 + 80, a2, (uint64_t)&v8);
          goto LABEL_10;
        case 2:
          sub_24484B03C(a1 + 160, a2, (uint64_t)&v8);
          goto LABEL_10;
        case 3:
          sub_24484B03C(a1 + 240, a2, (uint64_t)&v8);
          goto LABEL_10;
        case 4:
          sub_2446D1A48(a2, (unsigned char *)(a1 + 320), &v8);
          goto LABEL_10;
        case 5:
          sub_244CB3C0C(a2, (char *)(a1 + 321), (uint64_t)&v8);
LABEL_10:
          long long v10 = v8;
          uint64_t v11 = v9;
          break;
        default:
          break;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_13;
      }
    }
  }
  return result;
}

double sub_244845A24@<D0>(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB65C8();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_24484B7DC(a1 + 1, (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244813DC0(a1 + 3, (uint64_t)&v11);
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_24484DD08(a1 + 5, (uint64_t)&v11);
          uint64_t v9 = v12;
          long long v8 = v11;
          if (!v11)
          {
            sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
            long long v8 = v11;
            uint64_t v9 = v12;
          }
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244845B8C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_11:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265198720;
      uint64_t v11 = 33186;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v12)
      {
        case 0:
          sub_244CB3C0C(a2, (char *)a1, (uint64_t)&v10);
          break;
        case 1:
          *(_WORD *)(a1 + 1) = 1;
          sub_244CB3C0C(a2, (char *)(a1 + 2), (uint64_t)&v8);
          goto LABEL_8;
        case 2:
          *(_WORD *)(a1 + 3) = 1;
          sub_244CB3E8C(a2, (unsigned char *)(a1 + 4), (uint64_t)&v8);
          goto LABEL_8;
        case 3:
          *(unsigned char *)(a1 + 5) = 1;
          *(_WORD *)(a1 + 6) = 0;
          sub_2447F15BC(a2, (unsigned __int8 *)(a1 + 6), (uint64_t)&v8);
LABEL_8:
          long long v10 = v8;
          uint64_t v11 = v9;
          break;
        default:
          break;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_11;
      }
    }
  }
  return result;
}

double sub_244845D14@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_2448430C4(a1, a2, 0, (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
      long long v8 = v11;
      uint64_t v9 = v12;
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244845DF8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265198738;
      uint64_t v9 = 33232;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_2448432EC(a1, a2, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_244845ED0@<D0>(unsigned char *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB65C8();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_24483F80C(a1 + 2, (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB65C8();
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_24483F80C(a1 + 8, (uint64_t)&v11);
          uint64_t v9 = v12;
          long long v8 = v11;
          if (!v11)
          {
            sub_244CB65C8();
            uint64_t v9 = v12;
            long long v8 = v11;
            if (!v11)
            {
              sub_24484B7DC(a1 + 13, (uint64_t)&v11);
              uint64_t v9 = v12;
              long long v8 = v11;
              if (!v11)
              {
                sub_24483F80C(a1 + 16, (uint64_t)&v11);
                uint64_t v9 = v12;
                long long v8 = v11;
                if (!v11)
                {
                  sub_244CB65C8();
                  uint64_t v9 = v12;
                  long long v8 = v11;
                  if (!v11)
                  {
                    sub_2447F6524(a2, a1 + 24, (uint64_t)&v11);
                    uint64_t v9 = v12;
                    long long v8 = v11;
                    if (!v11)
                    {
                      sub_244CB65C8();
                      uint64_t v9 = v12;
                      long long v8 = v11;
                      if (!v11)
                      {
                        sub_2447F6524(a2, a1 + 56, (uint64_t)&v11);
                        uint64_t v9 = v12;
                        long long v8 = v11;
                        if (!v11)
                        {
                          sub_244CB65C8();
                          uint64_t v9 = v12;
                          long long v8 = v11;
                          if (!v11)
                          {
                            sub_24484B7DC(a1 + 81, (uint64_t)&v11);
                            uint64_t v9 = v12;
                            long long v8 = v11;
                            if (!v11)
                            {
                              sub_2447F6524(a2, a1 + 88, (uint64_t)&v11);
                              uint64_t v9 = v12;
                              long long v8 = v11;
                              if (!v11)
                              {
                                sub_244CB65C8();
                                uint64_t v9 = v12;
                                long long v8 = v11;
                                if (!v11)
                                {
                                  sub_24484DDB8(a2, 15, a1 + 120, (uint64_t)&v11);
                                  uint64_t v9 = v12;
                                  long long v8 = v11;
                                  if (!v11)
                                  {
                                    sub_244CB65C8();
                                    uint64_t v9 = v12;
                                    long long v8 = v11;
                                    if (!v11)
                                    {
                                      sub_24484DDB8(a2, 17, a1 + 200, (uint64_t)&v11);
                                      uint64_t v9 = v12;
                                      long long v8 = v11;
                                      if (!v11)
                                      {
                                        sub_244CB65C8();
                                        uint64_t v9 = v12;
                                        long long v8 = v11;
                                        if (!v11)
                                        {
                                          sub_24484B7DC(a1 + 273, (uint64_t)&v11);
                                          uint64_t v9 = v12;
                                          long long v8 = v11;
                                          if (!v11)
                                          {
                                            sub_24484DDB8(a2, 20, a1 + 280, (uint64_t)&v11);
                                            uint64_t v9 = v12;
                                            long long v8 = v11;
                                            if (!v11)
                                            {
                                              sub_244CB65C8();
                                              uint64_t v9 = v12;
                                              long long v8 = v11;
                                              if (!v11)
                                              {
                                                sub_24484DFF0(a2, 22, a1 + 360, &v11);
                                                uint64_t v9 = v12;
                                                long long v8 = v11;
                                                if (!v11)
                                                {
                                                  sub_244CB65C8();
                                                  uint64_t v9 = v12;
                                                  long long v8 = v11;
                                                  if (!v11)
                                                  {
                                                    sub_24484DFF0(a2, 24, a1 + 392, &v11);
                                                    uint64_t v9 = v12;
                                                    long long v8 = v11;
                                                    if (!v11)
                                                    {
                                                      sub_244CB65C8();
                                                      uint64_t v9 = v12;
                                                      long long v8 = v11;
                                                      if (!v11)
                                                      {
                                                        sub_24484B7DC(a1 + 417, (uint64_t)&v11);
                                                        uint64_t v9 = v12;
                                                        long long v8 = v11;
                                                        if (!v11)
                                                        {
                                                          sub_24484DFF0(a2, 27, a1 + 424, &v11);
                                                          uint64_t v9 = v12;
                                                          long long v8 = v11;
                                                          if (!v11)
                                                          {
                                                            sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
                                                            long long v8 = v11;
                                                            uint64_t v9 = v12;
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244846458@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v24[0] = 0;
  uint64_t v25 = a2;
  sub_2447ED6F8((uint64_t)v24, (uint64_t)&v21);
  int v6 = v23;
  if (v23 == 1)
  {
LABEL_2:
    double result = *(double *)&v21;
    *(_OWORD *)a3 = v21;
    *(void *)(a3 + 16) = v22;
  }
  else
  {
    while (1)
    {
      long long v19 = xmmword_265198750;
      uint64_t v20 = 33293;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v21)
      {
        case 0:
          sub_244CB3C0C(a2, (char *)a1, (uint64_t)&v19);
          break;
        case 1:
          *(unsigned char *)(a1 + 2) = 1;
          *(_WORD *)(a1 + 4) = 0;
          uint64_t v8 = a2;
          uint64_t v9 = (_WORD *)(a1 + 4);
          goto LABEL_13;
        case 2:
          uint64_t v10 = a2;
          long long v11 = (char *)(a1 + 6);
          goto LABEL_36;
        case 3:
          *(unsigned char *)(a1 + 8) = 1;
          *(_WORD *)(a1 + 10) = 0;
          uint64_t v8 = a2;
          uint64_t v9 = (_WORD *)(a1 + 10);
          goto LABEL_13;
        case 4:
          uint64_t v10 = a2;
          long long v11 = (char *)(a1 + 12);
          goto LABEL_36;
        case 5:
          *(_WORD *)(a1 + 13) = 1;
          uint64_t v10 = a2;
          long long v11 = (char *)(a1 + 14);
          goto LABEL_36;
        case 6:
          *(unsigned char *)(a1 + 16) = 1;
          *(_WORD *)(a1 + 18) = 0;
          uint64_t v8 = a2;
          uint64_t v9 = (_WORD *)(a1 + 18);
LABEL_13:
          sub_244CB3F40(v8, v9, (uint64_t)&v17);
          goto LABEL_37;
        case 7:
          uint64_t v10 = a2;
          long long v11 = (char *)(a1 + 20);
          goto LABEL_36;
        case 8:
          *(unsigned char *)(a1 + 24) = 1;
          *(void *)(a1 + 32) = 0;
          *(void *)(a1 + 40) = 0;
          uint64_t v12 = a2;
          uint64_t v13 = (_OWORD *)(a1 + 32);
          goto LABEL_21;
        case 9:
          uint64_t v10 = a2;
          long long v11 = (char *)(a1 + 48);
          goto LABEL_36;
        case 10:
          *(unsigned char *)(a1 + 56) = 1;
          *(void *)(a1 + 64) = 0;
          *(void *)(a1 + 72) = 0;
          uint64_t v12 = a2;
          uint64_t v13 = (_OWORD *)(a1 + 64);
          goto LABEL_21;
        case 11:
          uint64_t v10 = a2;
          long long v11 = (char *)(a1 + 80);
          goto LABEL_36;
        case 12:
          *(_WORD *)(a1 + 81) = 1;
          uint64_t v10 = a2;
          long long v11 = (char *)(a1 + 82);
          goto LABEL_36;
        case 13:
          *(unsigned char *)(a1 + 88) = 1;
          *(void *)(a1 + 96) = 0;
          *(void *)(a1 + 104) = 0;
          uint64_t v12 = a2;
          uint64_t v13 = (_OWORD *)(a1 + 96);
LABEL_21:
          sub_244CB41F0(v12, v13, &v17);
          goto LABEL_37;
        case 14:
          uint64_t v10 = a2;
          long long v11 = (char *)(a1 + 112);
          goto LABEL_36;
        case 15:
          *(unsigned char *)(a1 + 120) = 1;
          *(_OWORD *)(a1 + 128) = 0u;
          *(_OWORD *)(a1 + 144) = 0u;
          *(_OWORD *)(a1 + 160) = 0u;
          *(_OWORD *)(a1 + 176) = 0u;
          uint64_t v14 = a1 + 128;
          goto LABEL_29;
        case 16:
          uint64_t v10 = a2;
          long long v11 = (char *)(a1 + 192);
          goto LABEL_36;
        case 17:
          *(unsigned char *)(a1 + 200) = 1;
          *(_OWORD *)(a1 + 208) = 0u;
          *(_OWORD *)(a1 + 224) = 0u;
          *(_OWORD *)(a1 + 240) = 0u;
          *(_OWORD *)(a1 + 256) = 0u;
          uint64_t v14 = a1 + 208;
          goto LABEL_29;
        case 18:
          uint64_t v10 = a2;
          long long v11 = (char *)(a1 + 272);
          goto LABEL_36;
        case 19:
          *(_WORD *)(a1 + 273) = 1;
          uint64_t v10 = a2;
          long long v11 = (char *)(a1 + 274);
          goto LABEL_36;
        case 20:
          *(unsigned char *)(a1 + 280) = 1;
          *(_OWORD *)(a1 + 288) = 0u;
          *(_OWORD *)(a1 + 304) = 0u;
          *(_OWORD *)(a1 + 320) = 0u;
          *(_OWORD *)(a1 + 336) = 0u;
          uint64_t v14 = a1 + 288;
LABEL_29:
          sub_2448432EC(v14, a2, (uint64_t)&v17);
          goto LABEL_37;
        case 21:
          uint64_t v10 = a2;
          long long v11 = (char *)(a1 + 352);
          goto LABEL_36;
        case 22:
          uint64_t v15 = a2;
          uint64_t v16 = (unsigned char *)(a1 + 360);
          goto LABEL_42;
        case 23:
          uint64_t v10 = a2;
          long long v11 = (char *)(a1 + 448);
          goto LABEL_36;
        case 24:
          uint64_t v15 = a2;
          uint64_t v16 = (unsigned char *)(a1 + 456);
          goto LABEL_42;
        case 25:
          uint64_t v10 = a2;
          long long v11 = (char *)(a1 + 544);
          goto LABEL_36;
        case 26:
          *(_WORD *)(a1 + 545) = 1;
          uint64_t v10 = a2;
          long long v11 = (char *)(a1 + 546);
LABEL_36:
          sub_244CB3C0C(v10, v11, (uint64_t)&v17);
          goto LABEL_37;
        case 27:
          uint64_t v15 = a2;
          uint64_t v16 = (unsigned char *)(a1 + 552);
LABEL_42:
          sub_2447FE7A4(v15, v16, (uint64_t)&v17);
LABEL_37:
          long long v19 = v17;
          uint64_t v20 = v18;
          break;
        default:
          break;
      }
      double result = *(double *)&v19;
      *(_OWORD *)a3 = v19;
      *(void *)(a3 + 16) = v20;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v24, (uint64_t)&v21);
      int v6 = v23;
      if (v23 == 1) {
        goto LABEL_2;
      }
    }
  }
  return result;
}

double sub_2448468F0@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244844050(a1, a2, 0, (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
      long long v8 = v11;
      uint64_t v9 = v12;
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2448469D4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265198768;
      uint64_t v9 = 33435;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_2448441B8(a1, a2, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_244846AAC@<D0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265198780;
      uint64_t v9 = 33469;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3C0C(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_244846B84@<D0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  sub_2448444B8((uint64_t)&v7, 0, a1);
  if (!v8)
  {
    sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244846C4C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265198798;
      uint64_t v9 = 33503;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_24484B03C(a1, a2, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_244846D24@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_2651987B0;
      uint64_t v9 = 33537;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_2448432EC(a1, a2, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_244846DFC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_2651987C8;
      uint64_t v9 = 33571;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_24484B03C(a1, a2, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_244846ED4@<D0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_2651987E0;
      uint64_t v9 = 33605;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3EFC(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_244846FAC@<D0>(uint64_t *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_24484433C(a1, a2, 0, (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
      long long v8 = v11;
      uint64_t v9 = v12;
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244847090@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_2651987F8;
      uint64_t v9 = 33639;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_2448445A4(a1, a2, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_244847168@<D0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265198810;
      uint64_t v9 = 33673;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3EFC(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_244847240@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265198828;
      uint64_t v9 = 33707;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_24484B03C(a1, a2, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_244847318@<D0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_10:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265198840;
      uint64_t v11 = 33741;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v12)
      {
        if (sub_244CB3B68(a2) == 16)
        {
          sub_244CB40C8(a2, a1, &v8);
        }
        else
        {
          LODWORD(v8) = 43;
          *((void *)&v8 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
          LODWORD(v9) = 80;
        }
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_10;
      }
    }
  }
  return result;
}

double sub_244847440@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265198858;
      uint64_t v9 = 33775;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_24484B03C(a1, a2, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_244847518@<D0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_10:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265198870;
      uint64_t v11 = 33809;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v12)
      {
        if (sub_244CB3B68(a2) == 16)
        {
          sub_244CB40C8(a2, a1, &v8);
        }
        else
        {
          LODWORD(v8) = 43;
          *((void *)&v8 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
          LODWORD(v9) = 80;
        }
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_10;
      }
    }
  }
  return result;
}

double sub_244847640@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_11:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265198888;
      uint64_t v11 = 33844;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_2446D1A48(a2, (unsigned char *)(a1 + 2), &v10);
      }
      else if (!(_BYTE)v12)
      {
        long long v8 = 0uLL;
        uint64_t v9 = 0;
        sub_24484B11C(a2, (_WORD *)a1, &v8);
        if (!v8)
        {
          LODWORD(v8) = 0;
          *((void *)&v8 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
          LODWORD(v9) = 61;
        }
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_11;
      }
    }
  }
  return result;
}

double sub_244847780@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_2447EFABC(a1, v7, 0, (uint64_t)&v11);
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  sub_2447F06A4((uint64_t)&v7, 1, (unsigned char *)(a1 + 32));
  if (!v8)
  {
    sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244847874@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_9:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_2651988A0;
      uint64_t v9 = 33883;
      if (v6) {
        sub_24484AFEC();
      }
      if (v10 == 1)
      {
        sub_2447F5F24(a2, (unsigned char *)(a1 + 32), &v8);
      }
      else if (!(_BYTE)v10)
      {
        sub_2447EFBF8(a1, a2, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_244847974@<D0>(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_24484DD08(a1, (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
      long long v8 = v11;
      uint64_t v9 = v12;
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244847A58@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_2651988B8;
      uint64_t v9 = 33921;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10)
      {
        *a1 = 1;
        *(_WORD *)(a1 + 1) = 0;
        sub_2447F15BC(a2, a1 + 1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_244847B48@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v21[0] = 0;
  uint64_t v22 = a2;
  sub_2447ED6F8((uint64_t)v21, (uint64_t)&v18);
  int v6 = v20;
  if (v20 == 1)
  {
LABEL_22:
    double result = *(double *)&v18;
    *(_OWORD *)a3 = v18;
    *(void *)(a3 + 16) = v19;
  }
  else
  {
    while (1)
    {
      long long v16 = xmmword_2651988D0;
      uint64_t v17 = 33966;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v18)
      {
        case 0:
          sub_2447EF9E0(a2, (__int16 *)a1, (uint64_t)&v16);
          break;
        case 1:
          *(unsigned char *)(a1 + 4) = 1;
          *(_WORD *)(a1 + 6) = 0;
          sub_244CB3F40(a2, (_WORD *)(a1 + 6), (uint64_t)&v14);
          goto LABEL_19;
        case 2:
          *(unsigned char *)(a1 + 8) = 1;
          *(_DWORD *)(a1 + 10) = 0;
          sub_2447EF9E0(a2, (__int16 *)(a1 + 10), (uint64_t)&v14);
          goto LABEL_19;
        case 3:
          uint64_t v7 = a2;
          uint64_t v8 = a1 + 16;
          goto LABEL_10;
        case 4:
          *(unsigned char *)(a1 + 40) = 1;
          *(void *)(a1 + 48) = 0;
          *(void *)(a1 + 56) = 0;
          sub_244CB41F0(a2, (_OWORD *)(a1 + 48), &v14);
          goto LABEL_19;
        case 5:
          *(unsigned char *)(a1 + 64) = 1;
          *(void *)(a1 + 80) = 0;
          *(void *)(a1 + 88) = 0;
          *(void *)(a1 + 72) = 0;
          uint64_t v7 = a2;
          uint64_t v8 = a1 + 72;
LABEL_10:
          sub_244803C58(v7, v8, &v14);
          goto LABEL_19;
        case 6:
          uint64_t v9 = a2;
          uint64_t v10 = a1 + 96;
          goto LABEL_14;
        case 7:
          *(unsigned char *)(a1 + 168) = 1;
          *(_OWORD *)(a1 + 176) = 0u;
          *(_OWORD *)(a1 + 192) = 0u;
          *(_OWORD *)(a1 + 208) = 0u;
          *(_OWORD *)(a1 + 224) = 0u;
          sub_2448432EC(a1 + 176, a2, (uint64_t)&v14);
          goto LABEL_19;
        case 8:
          *(unsigned char *)(a1 + 240) = 1;
          *(_OWORD *)(a1 + 248) = 0u;
          *(_OWORD *)(a1 + 264) = 0u;
          *(_OWORD *)(a1 + 280) = 0u;
          *(_OWORD *)(a1 + 296) = 0u;
          *(void *)(a1 + 312) = 0;
          uint64_t v9 = a2;
          uint64_t v10 = a1 + 248;
LABEL_14:
          sub_244843FB4(v9, v10, &v14);
          goto LABEL_19;
        case 9:
          uint64_t v11 = a2;
          uint64_t v12 = a1 + 320;
          goto LABEL_18;
        case 10:
          sub_2447FE7A4(a2, (unsigned char *)(a1 + 408), (uint64_t)&v14);
          goto LABEL_19;
        case 11:
          *(unsigned char *)(a1 + 496) = 1;
          *(_OWORD *)(a1 + 504) = 0u;
          *(_OWORD *)(a1 + 520) = 0u;
          *(_OWORD *)(a1 + 536) = 0u;
          *(_OWORD *)(a1 + 552) = 0u;
          *(_OWORD *)(a1 + 568) = 0u;
          *(void *)(a1 + 584) = 0;
          uint64_t v11 = a2;
          uint64_t v12 = a1 + 504;
LABEL_18:
          sub_2447F50A0(v11, v12, &v14);
LABEL_19:
          long long v16 = v14;
          uint64_t v17 = v15;
          break;
        default:
          break;
      }
      double result = *(double *)&v16;
      *(_OWORD *)a3 = v16;
      *(void *)(a3 + 16) = v17;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v21, (uint64_t)&v18);
      int v6 = v20;
      if (v20 == 1) {
        goto LABEL_22;
      }
    }
  }
  return result;
}

double sub_244847E08@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_2651988E8;
      uint64_t v9 = 34044;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_2448432EC(a1, a2, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_244847EE0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265198900;
      uint64_t v9 = 34098;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10)
      {
        *(_WORD *)a1 = 1;
        sub_244CB3C0C(a2, (char *)(a1 + 1), (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_244847FCC@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB68B8();
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  sub_2447EF794((uint64_t)&v7, 1, (unsigned char *)(a1 + 1));
  if (!v8)
  {
    sub_244CB65C8();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
      long long v8 = v11;
      uint64_t v9 = v12;
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2448480EC@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  for (int i = v14; v14 != 1; int i = v14)
  {
    long long v10 = xmmword_265198918;
    uint64_t v11 = 34134;
    if (i) {
      sub_24484AFEC();
    }
    if (v12 == 2)
    {
      sub_244CB3C0C(a2, a1 + 2, (uint64_t)&v8);
    }
    else
    {
      if (v12 != 1)
      {
        if (!(_BYTE)v12) {
          sub_244CB3E8C(a2, a1, (uint64_t)&v10);
        }
        goto LABEL_10;
      }
      sub_2446D1A48(a2, a1 + 1, &v8);
    }
    long long v10 = v8;
    uint64_t v11 = v9;
LABEL_10:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
    if (*(_DWORD *)a3) {
      return result;
    }
    sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  }
  double result = *(double *)&v12;
  *(_OWORD *)a3 = v12;
  *(void *)(a3 + 16) = v13;
  return result;
}

double sub_24484821C@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265198930;
      uint64_t v9 = 34176;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3E8C(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_2448482F4@<D0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  sub_244CB7594(a1, a2, 21, &v8, (uint64_t)&v9);
  long long v6 = v9;
  uint64_t v7 = v10;
  if (!v9)
  {
    sub_244CB6904();
    uint64_t v7 = v10;
    long long v6 = v9;
    if (!v9)
    {
      sub_244CB6904();
      uint64_t v7 = v10;
      long long v6 = v9;
      if (!v9)
      {
        sub_244CB68B8();
        uint64_t v7 = v10;
        long long v6 = v9;
        if (!v9)
        {
          sub_244CB7708((uint64_t)a1, v8, (uint64_t)&v9);
          long long v6 = v9;
          uint64_t v7 = v10;
        }
      }
    }
  }
  double result = *(double *)&v6;
  *(_OWORD *)a3 = v6;
  *(void *)(a3 + 16) = v7;
  return result;
}

double sub_244848430@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  for (int i = v14; v14 != 1; int i = v14)
  {
    long long v10 = xmmword_265198948;
    uint64_t v11 = 34212;
    if (i) {
      sub_24484AFEC();
    }
    if (v12 == 2)
    {
      sub_244CB3E8C(a2, (unsigned char *)(a1 + 4), (uint64_t)&v8);
    }
    else
    {
      if (v12 != 1)
      {
        if (!(_BYTE)v12) {
          sub_244CB3F40(a2, (_WORD *)a1, (uint64_t)&v10);
        }
        goto LABEL_10;
      }
      sub_244CB3F40(a2, (_WORD *)(a1 + 2), (uint64_t)&v8);
    }
    long long v10 = v8;
    uint64_t v11 = v9;
LABEL_10:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
    if (*(_DWORD *)a3) {
      return result;
    }
    sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  }
  double result = *(double *)&v12;
  *(_OWORD *)a3 = v12;
  *(void *)(a3 + 16) = v13;
  return result;
}

double sub_244848560@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  for (int i = v14; v14 != 1; int i = v14)
  {
    long long v10 = xmmword_265198960;
    uint64_t v11 = 34256;
    if (i) {
      sub_24484AFEC();
    }
    if (v12 == 2)
    {
      sub_244CB3E8C(a2, (unsigned char *)(a1 + 4), (uint64_t)&v8);
    }
    else
    {
      if (v12 != 1)
      {
        if (!(_BYTE)v12) {
          sub_244CB3F40(a2, (_WORD *)a1, (uint64_t)&v10);
        }
        goto LABEL_10;
      }
      sub_244CB3F40(a2, (_WORD *)(a1 + 2), (uint64_t)&v8);
    }
    long long v10 = v8;
    uint64_t v11 = v9;
LABEL_10:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
    if (*(_DWORD *)a3) {
      return result;
    }
    sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  }
  double result = *(double *)&v12;
  *(_OWORD *)a3 = v12;
  *(void *)(a3 + 16) = v13;
  return result;
}

double sub_244848690@<D0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_10:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265198978;
      uint64_t v11 = 34298;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v12)
      {
        if (sub_244CB3B68(a2) == 16)
        {
          sub_244CB40C8(a2, a1, &v8);
        }
        else
        {
          LODWORD(v8) = 43;
          *((void *)&v8 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
          LODWORD(v9) = 80;
        }
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_10;
      }
    }
  }
  return result;
}

double sub_2448487B8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_9:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265198990;
      uint64_t v9 = 34333;
      if (v6) {
        sub_24484AFEC();
      }
      if (v10 == 1)
      {
        sub_2447F5F24(a2, (unsigned char *)(a1 + 32), &v8);
      }
      else if (!(_BYTE)v10)
      {
        sub_2447EFBF8(a1, a2, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_2448488B8@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_2651989A8;
      uint64_t v9 = 34371;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3E8C(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_244848990@<D0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  sub_244CB7594(a1, a2, 21, &v8, (uint64_t)&v9);
  long long v6 = v9;
  uint64_t v7 = v10;
  if (!v9)
  {
    sub_244CB68B8();
    uint64_t v7 = v10;
    long long v6 = v9;
    if (!v9)
    {
      sub_244CB68CC();
      uint64_t v7 = v10;
      long long v6 = v9;
      if (!v9)
      {
        sub_244CB7708((uint64_t)a1, v8, (uint64_t)&v9);
        long long v6 = v9;
        uint64_t v7 = v10;
      }
    }
  }
  double result = *(double *)&v6;
  *(_OWORD *)a3 = v6;
  *(void *)(a3 + 16) = v7;
  return result;
}

double sub_244848AA0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_2651989C0;
      uint64_t v11 = 34406;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_244CB3EFC(a2, (void *)(a1 + 8), (uint64_t)&v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB3E8C(a2, (unsigned char *)a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

void sub_244848BB0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4 = (char *)a1;
  int v6 = *(_DWORD *)(a3 + 8);
  if (v6 >= 12288)
  {
    if (v6 > 65527)
    {
      switch(v6)
      {
        case 65528:
          uint64_t v8 = a1 + 1240;
          goto LABEL_106;
        case 65529:
          uint64_t v8 = a1 + 1320;
          goto LABEL_106;
        case 65530:
          uint64_t v8 = a1 + 1400;
          goto LABEL_106;
        case 65531:
          uint64_t v8 = a1 + 1480;
LABEL_106:
LABEL_108:
          sub_24484B03C(v8, a2, a4);
          break;
        case 65532:
          uint64_t v9 = (_DWORD *)(a1 + 1560);
          goto LABEL_172;
        case 65533:
          int v20 = (_WORD *)(a1 + 1564);
LABEL_194:
          sub_244CB3F40(a2, v20, a4);
          break;
        default:
LABEL_19:
          *(_DWORD *)a4 = 0;
          *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-co"
                                "mmon/app-common/zap-generated/cluster-objects.cpp";
          int v10 = 34623;
LABEL_177:
          *(_DWORD *)(a4 + 16) = v10;
          break;
      }
    }
    else
    {
      int v7 = v6 - 0x4000;
      switch(v7)
      {
        case 0:
          sub_244800BF4(a2, (char *)(a1 + 816), (void *)a4);
          return;
        case 1:
          sub_24484981C(a2, (unsigned char *)(a1 + 818), (void *)a4);
          return;
        case 2:
          sub_2448498AC(a2, a1 + 820, (void *)a4);
          return;
        case 3:
          sub_2447EFD3C(a2, a1 + 824, (void *)a4);
          return;
        case 4:
          sub_244849940(a2, a1 + 832, (void *)a4);
          return;
        case 5:
          uint64_t v11 = (unsigned __int8 *)(a1 + 848);
          goto LABEL_81;
        case 6:
          long long v12 = (__int16 *)(a1 + 850);
          goto LABEL_89;
        case 7:
          uint64_t v13 = a1 + 856;
          goto LABEL_36;
        case 8:
          uint64_t v13 = a1 + 864;
LABEL_36:
          sub_2447F4140(a2, v13, a4);
          return;
        case 9:
          uint64_t v14 = a1 + 872;
          goto LABEL_43;
        case 10:
          uint64_t v14 = a1 + 888;
          goto LABEL_43;
        case 11:
          uint64_t v14 = a1 + 904;
          goto LABEL_43;
        case 12:
          uint64_t v14 = a1 + 920;
LABEL_43:
          sub_2447F5E48(a2, v14, a4);
          return;
        case 13:
          uint64_t v15 = (unsigned __int8 *)(a1 + 936);
          goto LABEL_85;
        case 14:
          uint64_t v16 = (__int16 *)(a1 + 938);
          goto LABEL_93;
        case 15:
          uint64_t v17 = a1 + 944;
          goto LABEL_50;
        case 16:
          uint64_t v17 = a1 + 952;
LABEL_50:
          sub_2447FF66C(a2, v17, a4);
          return;
        case 17:
          uint64_t v18 = a1 + 960;
          goto LABEL_57;
        case 18:
          uint64_t v18 = a1 + 976;
          goto LABEL_57;
        case 19:
          uint64_t v18 = a1 + 992;
          goto LABEL_57;
        case 20:
          uint64_t v18 = a1 + 1008;
LABEL_57:
          sub_2447FB200(a2, v18, a4);
          return;
        case 21:
          uint64_t v11 = (unsigned __int8 *)(a1 + 1024);
          goto LABEL_81;
        case 22:
          long long v12 = (__int16 *)(a1 + 1026);
          goto LABEL_89;
        case 23:
          sub_24482E57C(a2, a1 + 1032, (void *)a4);
          return;
        case 24:
          sub_2448499D4(a2, a1 + 1040, (void *)a4);
          return;
        case 25:
          sub_2447FFFFC(a2, a1 + 1056, (void *)a4);
          return;
        case 26:
        case 27:
        case 28:
        case 29:
        case 31:
        case 32:
        case 33:
        case 34:
        case 35:
        case 43:
        case 44:
        case 45:
        case 46:
        case 47:
        case 48:
        case 49:
        case 50:
          goto LABEL_19;
        case 30:
          sub_244803C58(a2, a1 + 1080, (void *)a4);
          return;
        case 36:
          sub_24480CBD0(a2, (unsigned __int8 *)(a1 + 1104), a4);
          return;
        case 37:
          sub_244843FB4(a2, a1 + 1112, (void *)a4);
          return;
        case 38:
          uint64_t v11 = (unsigned __int8 *)(a1 + 1184);
LABEL_81:
          sub_2447F15BC(a2, v11, a4);
          return;
        case 39:
          uint64_t v15 = (unsigned __int8 *)(a1 + 1186);
LABEL_85:
          sub_244802BFC(a2, v15, a4);
          return;
        case 40:
          long long v12 = (__int16 *)(a1 + 1188);
LABEL_89:
          sub_2447EF9E0(a2, v12, a4);
          return;
        case 41:
          uint64_t v16 = (__int16 *)(a1 + 1192);
LABEL_93:
          sub_2447F003C(a2, v16, a4);
          return;
        case 42:
          uint64_t v19 = (unsigned char *)(a1 + 1196);
          goto LABEL_222;
        case 51:
          sub_2447F21B8(a2, (unsigned __int8 *)(a1 + 1197), a4);
          return;
        case 52:
          sub_244849A68(a2, a1 + 1200, (void *)a4);
          return;
        default:
          if (v7 == 12288)
          {
            uint64_t v19 = (unsigned char *)(a1 + 809);
LABEL_222:
            sub_244CB3E8C(a2, v19, a4);
            return;
          }
          if (v7 != 12289) {
            goto LABEL_19;
          }
          uint64_t v9 = (_DWORD *)(a1 + 812);
          break;
      }
LABEL_172:
      sub_244CB3FB0(a2, v9, a4);
    }
  }
  else
  {
    switch(v6)
    {
      case 0:
        goto LABEL_211;
      case 1:
        sub_24484B184(a2, (unsigned char *)(a1 + 1), (void *)a4);
        return;
      case 2:
        sub_24484B6B0(a2, (_WORD *)(a1 + 2), (void *)a4);
        return;
      case 3:
        sub_24484B2E8(a2, (_DWORD *)(a1 + 4), (void *)a4);
        return;
      case 4:
        sub_24484E220(a2, (void *)(a1 + 8), (void *)a4);
        return;
      case 5:
        uint64_t v19 = (unsigned char *)(a1 + 16);
        goto LABEL_222;
      case 6:
        int v20 = (_WORD *)(a1 + 18);
        goto LABEL_194;
      case 7:
        uint64_t v9 = (_DWORD *)(a1 + 20);
        goto LABEL_172;
      case 8:
        uint64_t v9 = (_DWORD *)(a1 + 24);
        goto LABEL_172;
      case 9:
        long long v21 = (void *)(a1 + 32);
        goto LABEL_168;
      case 10:
        long long v21 = (void *)(a1 + 40);
        goto LABEL_168;
      case 11:
        long long v21 = (void *)(a1 + 48);
        goto LABEL_168;
      case 12:
        long long v21 = (void *)(a1 + 56);
        goto LABEL_168;
      case 13:
        uint64_t v22 = (unsigned char *)(a1 + 64);
        goto LABEL_190;
      case 14:
        int v23 = (_WORD *)(a1 + 66);
        goto LABEL_198;
      case 15:
        v24 = (_DWORD *)(a1 + 68);
        goto LABEL_132;
      case 16:
        v24 = (_DWORD *)(a1 + 72);
LABEL_132:
        sub_244CB3E0C(a2, v24, a4);
        return;
      case 17:
        uint64_t v25 = (void *)(a1 + 80);
        goto LABEL_139;
      case 18:
        uint64_t v25 = (void *)(a1 + 88);
        goto LABEL_139;
      case 19:
        uint64_t v25 = (void *)(a1 + 96);
        goto LABEL_139;
      case 20:
        uint64_t v25 = (void *)(a1 + 104);
LABEL_139:
        sub_244CB3CF0(a2, v25, a4);
        return;
      case 21:
        uint64_t v19 = (unsigned char *)(a1 + 112);
        goto LABEL_222;
      case 22:
        int v20 = (_WORD *)(a1 + 114);
        goto LABEL_194;
      case 23:
        sub_244CB401C(a2, (_DWORD *)(a1 + 116), a4);
        return;
      case 24:
        sub_244CB4060(a2, (double *)(a1 + 120), a4);
        return;
      case 25:
        v26 = (_OWORD *)(a1 + 128);
        goto LABEL_159;
      case 26:
        uint64_t v8 = a1 + 144;
        goto LABEL_108;
      case 27:
        uint64_t v8 = a1 + 224;
        goto LABEL_202;
      case 28:
        uint64_t v8 = a1 + 304;
        goto LABEL_108;
      case 29:
        v26 = (_OWORD *)(a1 + 384);
LABEL_159:
        sub_2447F5484(a2, v26, a4);
        return;
      case 30:
        v27 = (_OWORD *)(a1 + 400);
        goto LABEL_164;
      case 31:
        v27 = (_OWORD *)(a1 + 416);
LABEL_164:
        sub_244CB41F0(a2, v27, (void *)a4);
        return;
      case 32:
        long long v21 = (void *)(a1 + 432);
LABEL_168:
        sub_244CB3EFC(a2, v21, a4);
        return;
      case 33:
        uint64_t v9 = (_DWORD *)(a1 + 440);
        goto LABEL_172;
      case 34:
        *(void *)a4 = 0;
        *(void *)(a4 + 8) = 0;
        *(void *)(a4 + 16) = 0;
        sub_24484B11C(a2, (_WORD *)(a1 + 444), (void *)a4);
        if (*(_DWORD *)a4) {
          return;
        }
        *(_DWORD *)a4 = 0;
        *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
        int v10 = 61;
        goto LABEL_177;
      case 35:
        uint64_t v8 = a1 + 448;
        goto LABEL_108;
      case 36:
        sub_2446D1A48(a2, (unsigned char *)(a1 + 528), (void *)a4);
        return;
      case 37:
        uint64_t v28 = a1 + 536;
        sub_2448432EC(v28, a2, a4);
        return;
      case 38:
        uint64_t v19 = (unsigned char *)(a1 + 600);
        goto LABEL_222;
      case 39:
        uint64_t v22 = (unsigned char *)(a1 + 601);
LABEL_190:
        sub_244CB3C70(a2, v22, a4);
        return;
      case 40:
        int v20 = (_WORD *)(a1 + 602);
        goto LABEL_194;
      case 41:
        int v23 = (_WORD *)(a1 + 604);
LABEL_198:
        sub_244CB3D8C(a2, v23, a4);
        return;
      case 42:
        uint64_t v8 = a1 + 608;
LABEL_202:
        goto LABEL_108;
      case 43:
        uint64_t v8 = a1 + 688;
        goto LABEL_108;
      case 44:
      case 45:
      case 46:
      case 47:
        goto LABEL_19;
      case 48:
        int v4 = (char *)(a1 + 768);
        goto LABEL_211;
      case 49:
        int v4 = (char *)(a1 + 769);
        goto LABEL_211;
      case 50:
        int v4 = (char *)(a1 + 770);
        goto LABEL_211;
      case 51:
        sub_2447F5F24(a2, (unsigned char *)(a1 + 771), (void *)a4);
        return;
      case 52:
        uint64_t v29 = a1 + 776;
        sub_2447EFBF8(v29, a2, a4);
        return;
      default:
        if (v6 == -897279)
        {
          uint64_t v19 = (unsigned char *)(a1 + 1566);
          goto LABEL_222;
        }
        if (v6 != 255) {
          goto LABEL_19;
        }
        int v4 = (char *)(a1 + 808);
LABEL_211:
        sub_244CB3C0C(a2, v4, a4);
        break;
    }
  }
}

uint64_t sub_24484981C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  uint64_t result = sub_244CB3B68(a1);
  if (result == 20)
  {
    if (a2[1]) {
      a2[1] = 0;
    }
    int v7 = 168;
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
    *(_WORD *)a2 = 256;
    uint64_t result = sub_24484B184(a1, a2, a3);
    if (*(_DWORD *)a3) {
      return result;
    }
    int v7 = 177;
  }
  *(_DWORD *)a3 = 0;
  a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
  *((_DWORD *)a3 + 4) = v7;
  return result;
}

uint64_t sub_2448498AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t result = sub_244CB3B68(a1);
  if (result == 20)
  {
    if (*(unsigned char *)(a2 + 2)) {
      *(unsigned char *)(a2 + 2) = 0;
    }
    int v7 = 168;
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
    *(_WORD *)a2 = 0;
    *(unsigned char *)(a2 + 2) = 1;
    uint64_t result = sub_24484B6B0(a1, (_WORD *)a2, a3);
    if (*(_DWORD *)a3) {
      return result;
    }
    int v7 = 177;
  }
  *(_DWORD *)a3 = 0;
  a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
  *((_DWORD *)a3 + 4) = v7;
  return result;
}

uint64_t sub_244849940@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t result = sub_244CB3B68(a1);
  if (result == 20)
  {
    if (*(unsigned char *)(a2 + 8)) {
      *(unsigned char *)(a2 + 8) = 0;
    }
    int v7 = 168;
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
    *(void *)a2 = 0;
    *(unsigned char *)(a2 + 8) = 1;
    uint64_t result = sub_24484E220(a1, (void *)a2, a3);
    if (*(_DWORD *)a3) {
      return result;
    }
    int v7 = 177;
  }
  *(_DWORD *)a3 = 0;
  a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
  *((_DWORD *)a3 + 4) = v7;
  return result;
}

uint64_t sub_2448499D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t result = sub_244CB3B68(a1);
  if (result == 20)
  {
    if (*(unsigned char *)(a2 + 8)) {
      *(unsigned char *)(a2 + 8) = 0;
    }
    int v7 = 168;
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
    *(void *)a2 = 0;
    *(unsigned char *)(a2 + 8) = 1;
    uint64_t result = sub_244CB4060(a1, (double *)a2, (uint64_t)a3);
    if (*(_DWORD *)a3) {
      return result;
    }
    int v7 = 177;
  }
  *(_DWORD *)a3 = 0;
  a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
  *((_DWORD *)a3 + 4) = v7;
  return result;
}

void sub_244849A68(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if (sub_244CB3B68(a1) == 20)
  {
    if (*(unsigned char *)(a2 + 32)) {
      *(unsigned char *)(a2 + 32) = 0;
    }
    int v6 = 168;
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(unsigned char *)(a2 + 32) = 1;
    sub_2447EFBF8(a2, a1, (uint64_t)a3);
    if (*(_DWORD *)a3) {
      return;
    }
    int v6 = 177;
  }
  *(_DWORD *)a3 = 0;
  a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
  *((_DWORD *)a3 + 4) = v6;
}

void sub_244849B00(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  int v10 = 0;
  a4[1] = 0;
  a4[2] = 0;
  *a4 = 0;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)a4);
  if (!*(_DWORD *)a4)
  {
    *a4 = 0;
    a4[1] = 0;
    a4[2] = 0;
    sub_244CB68B8();
    if (!*(_DWORD *)a4)
    {
      *a4 = 0;
      a4[1] = 0;
      a4[2] = 0;
      if (*(unsigned char *)(a1 + 1) == 4)
      {
        *(_DWORD *)a4 = 1415;
        a4[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
        *((_DWORD *)a4 + 4) = 75;
      }
      else
      {
        sub_244CB68B8();
        if (!*(_DWORD *)a4)
        {
          *a4 = 0;
          a4[1] = 0;
          a4[2] = 0;
          sub_244CB65C8();
          if (!*(_DWORD *)a4)
          {
            *a4 = 0;
            a4[1] = 0;
            a4[2] = 0;
            sub_2448430C4(a1 + 8, a2, 4, (uint64_t)a4);
            if (!*(_DWORD *)a4)
            {
              uint64_t v7 = *(void *)(a1 + 72);
              uint64_t v8 = *(void *)(a1 + 80);
              int v11 = 0;
              a4[1] = 0;
              a4[2] = 0;
              *a4 = 0;
              sub_244CB7594(a2, 5, 22, &v11, (uint64_t)a4);
              if (!*(_DWORD *)a4)
              {
                if (v8)
                {
                  uint64_t v9 = v8 << 6;
                  while (1)
                  {
                    *a4 = 0;
                    a4[1] = 0;
                    a4[2] = 0;
                    sub_2448430C4(v7, a2, 256, (uint64_t)a4);
                    if (*(_DWORD *)a4) {
                      break;
                    }
                    v7 += 64;
                    v9 -= 64;
                    if (!v9) {
                      goto LABEL_13;
                    }
                  }
                }
                else
                {
LABEL_13:
                  *a4 = 0;
                  a4[1] = 0;
                  a4[2] = 0;
                  sub_244CB7708((uint64_t)a2, v11, (uint64_t)a4);
                  if (!*(_DWORD *)a4)
                  {
                    *a4 = 0;
                    a4[1] = 0;
                    a4[2] = 0;
                    sub_244849CDC(a2, 6, *(unsigned char **)(a1 + 88), *(void *)(a1 + 96), a4);
                    if (!*(_DWORD *)a4) {
                      sub_244CB7708((uint64_t)a2, v10, (uint64_t)a4);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void sub_244849CDC(void *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  int v12 = 0;
  a5[1] = 0;
  a5[2] = 0;
  *a5 = 0;
  sub_244CB7594(a1, a2, 22, &v12, (uint64_t)a5);
  if (!*(_DWORD *)a5)
  {
    if (a4)
    {
      uint64_t v9 = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
      while (1)
      {
        *a5 = 0;
        a5[1] = 0;
        a5[2] = 0;
        if (*a3 == 4) {
          break;
        }
        sub_244CB68B8();
        if (*(_DWORD *)a5) {
          return;
        }
        ++a3;
        if (!--a4) {
          goto LABEL_7;
        }
      }
      int v11 = 75;
      int v10 = 1415;
    }
    else
    {
LABEL_7:
      *a5 = 0;
      a5[1] = 0;
      a5[2] = 0;
      sub_244CB7708((uint64_t)a1, v12, (uint64_t)a5);
      if (*(_DWORD *)a5) {
        return;
      }
      int v10 = 0;
      int v11 = 86;
      uint64_t v9 = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/List.h";
    }
    *(_DWORD *)a5 = v10;
    a5[1] = v9;
    *((_DWORD *)a5 + 4) = v11;
  }
}

double sub_244849DCC@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_13:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_2651989D8;
      uint64_t v11 = 34654;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v12)
      {
        case 1:
          sub_244CB3E8C(a2, a1, (uint64_t)&v10);
          break;
        case 2:
          sub_2446D1A48(a2, a1 + 1, &v8);
          goto LABEL_10;
        case 3:
          sub_244CB3C0C(a2, a1 + 2, (uint64_t)&v8);
          goto LABEL_10;
        case 4:
          sub_2448432EC((uint64_t)(a1 + 8), a2, (uint64_t)&v8);
          goto LABEL_10;
        case 5:
          sub_24484B03C((uint64_t)(a1 + 72), a2, (uint64_t)&v8);
          goto LABEL_10;
        case 6:
          sub_24484B03C((uint64_t)(a1 + 152), a2, (uint64_t)&v8);
LABEL_10:
          long long v10 = v8;
          uint64_t v11 = v9;
          break;
        default:
          break;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_13;
      }
    }
  }
  return result;
}

void sub_244849F84(void *a1@<X1>, uint64_t a2@<X2>, void *a3@<X8>)
{
  int v5 = 0;
  a3[1] = 0;
  a3[2] = 0;
  *a3 = 0;
  sub_244CB7594(a1, a2, 21, &v5, (uint64_t)a3);
  if (!*(_DWORD *)a3)
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
    sub_244CB68B8();
    if (!*(_DWORD *)a3) {
      sub_244CB7708((uint64_t)a1, v5, (uint64_t)a3);
    }
  }
}

double sub_24484A018@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_2651989F0;
      uint64_t v9 = 34709;
      if (v6) {
        sub_24484AFEC();
      }
      if (v10 == 254) {
        sub_244CB3E8C(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

void sub_24484A0F4(void *a1@<X1>, uint64_t a2@<X2>, void *a3@<X8>)
{
  int v5 = 0;
  a3[1] = 0;
  a3[2] = 0;
  *a3 = 0;
  sub_244CB7594(a1, a2, 21, &v5, (uint64_t)a3);
  if (!*(_DWORD *)a3)
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
    sub_244CB68B8();
    if (!*(_DWORD *)a3) {
      sub_244CB7708((uint64_t)a1, v5, (uint64_t)a3);
    }
  }
}

double sub_24484A188@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265198A08;
      uint64_t v9 = 34744;
      if (v6) {
        sub_24484AFEC();
      }
      if (v10 == 1) {
        sub_244CB3E8C(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

void sub_24484A264(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4 = *(_DWORD *)(a3 + 8);
  switch(v4)
  {
    case 65528:
      uint64_t v5 = a1 + 8;
      goto LABEL_3;
    case 65529:
      uint64_t v5 = a1 + 88;
      goto LABEL_3;
    case 65530:
      goto LABEL_6;
    case 65531:
      uint64_t v5 = a1 + 168;
LABEL_3:
      sub_24484B03C(v5, a2, a4);
      break;
    case 65532:
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 248), a4);
      break;
    case 65533:
      sub_244CB3F40(a2, (_WORD *)(a1 + 252), a4);
      break;
    default:
      if (v4)
      {
LABEL_6:
        *(_DWORD *)a4 = 0;
        *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-comm"
                              "on/app-common/zap-generated/cluster-objects.cpp";
        *(_DWORD *)(a4 + 16) = 34784;
      }
      else
      {
        sub_244CB3C0C(a2, (char *)a1, a4);
      }
      break;
  }
}

void sub_24484A318(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4 = *(_DWORD *)(a3 + 8);
  switch(v4)
  {
    case 65528:
      uint64_t v5 = a1 + 8;
      goto LABEL_3;
    case 65529:
      uint64_t v5 = a1 + 88;
      goto LABEL_3;
    case 65530:
      goto LABEL_6;
    case 65531:
      uint64_t v5 = a1 + 168;
LABEL_3:
      sub_24484B03C(v5, a2, a4);
      break;
    case 65532:
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 248), a4);
      break;
    case 65533:
      sub_244CB3F40(a2, (_WORD *)(a1 + 252), a4);
      break;
    default:
      if (v4)
      {
LABEL_6:
        *(_DWORD *)a4 = 0;
        *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-comm"
                              "on/app-common/zap-generated/cluster-objects.cpp";
        *(_DWORD *)(a4 + 16) = 34814;
      }
      else
      {
        sub_24484B184(a2, (unsigned char *)a1, (void *)a4);
      }
      break;
  }
}

double sub_24484A3CC@<D0>(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  sub_244800450((uint64_t)&v7, 0, a1);
  if (!v8)
  {
    sub_244CB694C();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB694C();
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB694C();
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_244CB65C8();
          uint64_t v9 = v12;
          long long v8 = v11;
          if (!v11)
          {
            sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
            long long v8 = v11;
            uint64_t v9 = v12;
          }
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_24484A544@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  int v6 = v16;
  if (v16 == 1)
  {
LABEL_13:
    double result = *(double *)&v14;
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 16) = v15;
  }
  else
  {
    while (1)
    {
      long long v12 = xmmword_265198A20;
      uint64_t v13 = 34848;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v14)
      {
        case 0:
          sub_2447FACE4(a2, a1, &v12);
          break;
        case 1:
          uint64_t v7 = a2;
          long long v8 = a1 + 4;
          goto LABEL_8;
        case 2:
          uint64_t v7 = a2;
          long long v8 = a1 + 8;
          goto LABEL_8;
        case 3:
          uint64_t v7 = a2;
          long long v8 = a1 + 12;
LABEL_8:
          sub_244CB3FB0(v7, v8, (uint64_t)&v10);
          goto LABEL_10;
        case 4:
          sub_244CB3C0C(a2, a1 + 16, (uint64_t)&v10);
LABEL_10:
          long long v12 = v10;
          uint64_t v13 = v11;
          break;
        default:
          break;
      }
      double result = *(double *)&v12;
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
      int v6 = v16;
      if (v16 == 1) {
        goto LABEL_13;
      }
    }
  }
  return result;
}

double sub_24484A6CC@<D0>(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  sub_244800450((uint64_t)&v7, 0, a1);
  if (!v8)
  {
    sub_244CB694C();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB68B8();
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
        long long v8 = v11;
        uint64_t v9 = v12;
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_24484A7EC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  for (int i = v14; v14 != 1; int i = v14)
  {
    long long v10 = xmmword_265198A38;
    uint64_t v11 = 34900;
    if (i) {
      sub_24484AFEC();
    }
    if (v12 == 2)
    {
      sub_244CB3E8C(a2, (unsigned char *)(a1 + 8), (uint64_t)&v8);
    }
    else
    {
      if (v12 != 1)
      {
        if (!(_BYTE)v12) {
          sub_2447FACE4(a2, (unsigned char *)a1, &v10);
        }
        goto LABEL_10;
      }
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 4), (uint64_t)&v8);
    }
    long long v10 = v8;
    uint64_t v11 = v9;
LABEL_10:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
    if (*(_DWORD *)a3) {
      return result;
    }
    sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  }
  double result = *(double *)&v12;
  *(_OWORD *)a3 = v12;
  *(void *)(a3 + 16) = v13;
  return result;
}

void sub_24484A91C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  switch(*(_DWORD *)(a3 + 8))
  {
    case 0xFFF8:
      goto LABEL_2;
    case 0xFFF9:
      a1 += 80;
      goto LABEL_2;
    case 0xFFFA:
      a1 += 160;
      goto LABEL_2;
    case 0xFFFB:
      a1 += 240;
LABEL_2:
      sub_24484B03C(a1, a2, a4);
      break;
    case 0xFFFC:
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 320), a4);
      break;
    case 0xFFFD:
      sub_244CB3F40(a2, (_WORD *)(a1 + 324), a4);
      break;
    default:
      *(_DWORD *)a4 = 0;
      *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-common"
                            "/app-common/zap-generated/cluster-objects.cpp";
      *(_DWORD *)(a4 + 16) = 34943;
      break;
  }
}

double sub_24484A9C0@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265198A50;
      uint64_t v9 = 34993;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3E8C(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_24484AA98@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265198A68;
      uint64_t v11 = 35028;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_244CB3E8C(a2, a1 + 1, (uint64_t)&v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB3E8C(a2, a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

void sub_24484ABA8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4 = *(_DWORD *)(a3 + 8);
  switch(v4)
  {
    case 65528:
      uint64_t v5 = a1 + 8;
      goto LABEL_3;
    case 65529:
      uint64_t v5 = a1 + 88;
      goto LABEL_3;
    case 65530:
      uint64_t v5 = a1 + 168;
      goto LABEL_3;
    case 65531:
      uint64_t v5 = a1 + 248;
LABEL_3:
      sub_24484B03C(v5, a2, a4);
      break;
    case 65532:
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 328), a4);
      break;
    case 65533:
      sub_244CB3F40(a2, (_WORD *)(a1 + 332), a4);
      break;
    default:
      if (v4)
      {
        *(_DWORD *)a4 = 0;
        *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-comm"
                              "on/app-common/zap-generated/cluster-objects.cpp";
        *(_DWORD *)(a4 + 16) = 35069;
      }
      else
      {
        sub_244CB3C0C(a2, (char *)a1, a4);
      }
      break;
  }
}

void sub_24484AC64(void *a1@<X1>, uint64_t a2@<X2>, void *a3@<X8>)
{
  int v5 = 0;
  a3[1] = 0;
  a3[2] = 0;
  *a3 = 0;
  sub_244CB7594(a1, a2, 21, &v5, (uint64_t)a3);
  if (!*(_DWORD *)a3)
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
    sub_244CB694C();
    if (!*(_DWORD *)a3)
    {
      *a3 = 0;
      a3[1] = 0;
      a3[2] = 0;
      sub_244CB68B8();
      if (!*(_DWORD *)a3) {
        sub_244CB7708((uint64_t)a1, v5, (uint64_t)a3);
      }
    }
  }
}

double sub_24484AD1C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265198A80;
      uint64_t v11 = 35096;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 254)
      {
        sub_244CB3E8C(a2, (unsigned char *)(a1 + 4), (uint64_t)&v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (v12 == 1)
      {
        sub_244CB3FB0(a2, (_DWORD *)a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

uint64_t sub_24484AE30(int a1, unsigned int a2)
{
  if (a1 > 256)
  {
    if (a1 == 257)
    {
      uint64_t result = 1;
      if ((a2 > 0x29 || ((1 << a2) & 0x3C42400000BLL) == 0) && (a2 - 323551232 > 4 || a2 == 323551233)) {
        return 0;
      }
    }
    else
    {
      unsigned int v5 = (0xDu >> (a2 & 0xF)) & 1;
      if (a2 >= 4) {
        unsigned int v5 = 0;
      }
      if (a1 != 1294) {
        unsigned int v5 = 0;
      }
      if (a1 == 1107) {
        return a2 < 2;
      }
      else {
        return v5;
      }
    }
  }
  else
  {
    BOOL v2 = a2 < 3;
    BOOL v3 = a2 - 1 < 7;
    if (a1 != 153) {
      BOOL v3 = 0;
    }
    if (a1 != 60) {
      BOOL v2 = v3;
    }
    if (a1 == -918523) {
      return a2 == 18;
    }
    else {
      return v2;
    }
  }
  return result;
}

uint64_t sub_24484AF04(int a1, unsigned int a2)
{
  if (a1 > 62)
  {
    BOOL v2 = a2 < 7 || a2 == 64;
    BOOL v10 = a2 < 2;
    unsigned int v11 = (0xDu >> (a2 & 0xF)) & 1;
    if (a2 >= 4) {
      unsigned int v11 = 0;
    }
    if (a1 != 1294) {
      unsigned int v11 = 0;
    }
    if (a1 != 151) {
      BOOL v10 = v11;
    }
    if (a1 != 98) {
      BOOL v2 = v10;
    }
    unsigned int v5 = (0x1Bu >> a2) & 1;
    if (a2 >= 5) {
      unsigned int v5 = 0;
    }
    BOOL v12 = (a2 & 0xFFFFFFFD) == 0;
    if (a1 != 70) {
      BOOL v12 = 0;
    }
    if (a1 != 63) {
      unsigned int v5 = v12;
    }
    BOOL v9 = __OFSUB__(a1, 97);
    BOOL v7 = a1 == 97;
    BOOL v8 = a1 - 97 < 0;
  }
  else
  {
    BOOL v2 = a2 == 4;
    BOOL v3 = a2 == 1;
    BOOL v4 = ((a2 - 7) & 0xFFFFFFFD) == 0;
    if (a1 != 62) {
      BOOL v4 = 0;
    }
    if (a1 != 56) {
      BOOL v3 = v4;
    }
    if (a1 != 48) {
      BOOL v2 = v3;
    }
    unsigned int v5 = a2 < 6;
    BOOL v6 = a2 == 0;
    if (a1 != 31) {
      BOOL v6 = 0;
    }
    if (a1 != 4) {
      unsigned int v5 = v6;
    }
    BOOL v9 = __OFSUB__(a1, 47);
    BOOL v7 = a1 == 47;
    BOOL v8 = a1 - 47 < 0;
  }
  if (v8 ^ v9 | v7) {
    return v5;
  }
  else {
    return v2;
  }
}

void sub_24484AFEC()
{
  exception = __cxa_allocate_exception(8uLL);
  void *exception = MEMORY[0x263F8C3A8] + 16;
  __cxa_throw(exception, MEMORY[0x263F8C1F8], (void (*)(void *))std::exception::~exception);
}

void sub_24484B03C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (sub_244CB3B68(a2) != 22)
  {
    *(_DWORD *)a3 = 142;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
    int v9 = 213;
    goto LABEL_6;
  }
  int v10 = 0;
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  *(void *)a3 = 0;
  sub_244CB4C90(a2, &v10, a3);
  if (!*(_DWORD *)a3)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    long long v6 = *(_OWORD *)(a2 + 16);
    long long v7 = *(_OWORD *)(a2 + 32);
    long long v8 = *(_OWORD *)(a2 + 48);
    *(void *)(a1 + 63) = *(void *)(a2 + 63);
    *(_OWORD *)(a1 + 32) = v7;
    *(_OWORD *)(a1 + 48) = v8;
    *(_OWORD *)(a1 + 16) = v6;
    *(void *)(a3 + 8) = 0;
    *(void *)(a3 + 16) = 0;
    *(void *)a3 = 0;
    sub_244CB4D00(a2, v10, a3);
    if (!*(_DWORD *)a3)
    {
      *(_DWORD *)a3 = 0;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
      int v9 = 218;
LABEL_6:
      *(_DWORD *)(a3 + 16) = v9;
    }
  }
}

uint64_t sub_24484B11C@<X0>(uint64_t a1@<X0>, _WORD *a2@<X1>, void *a3@<X8>)
{
  __int16 v6 = 0;
  a3[1] = 0;
  a3[2] = 0;
  *a3 = 0;
  uint64_t result = sub_244CB3F40(a1, &v6, (uint64_t)a3);
  if (!*(_DWORD *)a3)
  {
    *a2 = v6;
    *(_DWORD *)a3 = 0;
    a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/lib/core/TLVReader.h";
    *((_DWORD *)a3 + 4) = 519;
  }
  return result;
}

uint64_t sub_24484B184@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  char v6 = 0;
  a3[1] = 0;
  a3[2] = 0;
  *a3 = 0;
  uint64_t result = sub_244CB3E8C(a1, &v6, (uint64_t)a3);
  if (!*(_DWORD *)a3)
  {
    *a2 = v6;
    *(_DWORD *)a3 = 0;
    a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/lib/core/TLVReader.h";
    *((_DWORD *)a3 + 4) = 534;
  }
  return result;
}

void sub_24484B1EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(unsigned char *)(a3 + 4)) {
    sub_244CB694C();
  }
  else {
    sub_244CB710C();
  }
}

void sub_24484B200(unsigned char *a1@<X2>, uint64_t a2@<X8>)
{
  if (*a1)
  {
    BOOL v3 = sub_2446F9190(a1);
    sub_24484B288(v3, a2);
  }
  else
  {
    *(_DWORD *)a2 = 0;
    *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    *(_DWORD *)(a2 + 16) = 171;
  }
}

void sub_24484B288(unsigned __int8 *a1@<X2>, uint64_t a2@<X8>)
{
  if (!a1[1])
  {
    sub_244CB710C();
    return;
  }
  int v2 = *a1;
  if (v2 == 3)
  {
    *(_DWORD *)a2 = 1415;
    *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    int v3 = 75;
    goto LABEL_7;
  }
  if (v2 == 255)
  {
    *(_DWORD *)a2 = 1415;
    *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    int v3 = 193;
LABEL_7:
    *(_DWORD *)(a2 + 16) = v3;
    return;
  }
  sub_244CB68B8();
}

uint64_t sub_24484B2E8@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X1>, void *a3@<X8>)
{
  int v6 = 0;
  a3[1] = 0;
  a3[2] = 0;
  *a3 = 0;
  uint64_t result = sub_244CB3FB0(a1, &v6, (uint64_t)a3);
  if (!*(_DWORD *)a3)
  {
    *a2 = v6;
    *(_DWORD *)a3 = 0;
    a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/lib/core/TLVReader.h";
    *((_DWORD *)a3 + 4) = 534;
  }
  return result;
}

void sub_24484B350(unsigned __int16 *a1@<X2>, uint64_t a2@<X8>)
{
  if (*((unsigned char *)a1 + 2))
  {
    if (*a1 == 0x8000)
    {
      *(_DWORD *)a2 = 1415;
      *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
      *(_DWORD *)(a2 + 16) = 193;
    }
    else
    {
      sub_244CB69F4();
    }
  }
  else
  {
    sub_244CB710C();
  }
}

void sub_24484B390(unsigned __int8 *a1@<X2>, uint64_t a2@<X8>)
{
  if (!a1[1])
  {
    sub_244CB710C();
    return;
  }
  int v2 = *a1;
  if (v2 == 95)
  {
    *(_DWORD *)a2 = 1415;
    *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    int v3 = 75;
    goto LABEL_7;
  }
  if (v2 == 255)
  {
    *(_DWORD *)a2 = 1415;
    *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    int v3 = 193;
LABEL_7:
    *(_DWORD *)(a2 + 16) = v3;
    return;
  }
  sub_244CB68B8();
}

uint64_t sub_24484B3F0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  uint64_t result = sub_2446D1AAC(a1, a2, a3);
  if (!*(_DWORD *)a3)
  {
    unsigned int v6 = *a2;
    if (v6 >= 0x5F) {
      LOBYTE(v6) = 95;
    }
    *a2 = v6;
    *(_DWORD *)a3 = 0;
    a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
    *((_DWORD *)a3 + 4) = 61;
  }
  return result;
}

void sub_24484B454(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, void *a4@<X8>)
{
  if (*((unsigned char *)a3 + 16))
  {
    uint64_t v6 = *a3;
    uint64_t v7 = a3[1];
    int v9 = 0;
    a4[1] = 0;
    a4[2] = 0;
    *a4 = 0;
    sub_244CB7594(a1, a2, 22, &v9, (uint64_t)a4);
    if (!*(_DWORD *)a4)
    {
      if (v7)
      {
        uint64_t v8 = 8 * v7;
        while (1)
        {
          *a4 = 0;
          a4[1] = 0;
          a4[2] = 0;
          sub_244CB68CC();
          if (*(_DWORD *)a4) {
            break;
          }
          v6 += 8;
          v8 -= 8;
          if (!v8) {
            goto LABEL_7;
          }
        }
      }
      else
      {
LABEL_7:
        *a4 = 0;
        a4[1] = 0;
        a4[2] = 0;
        sub_244CB7708((uint64_t)a1, v9, (uint64_t)a4);
        if (!*(_DWORD *)a4)
        {
          *(_DWORD *)a4 = 0;
          a4[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/List.h";
          *((_DWORD *)a4 + 4) = 86;
        }
      }
    }
  }
  else
  {
    sub_244CB710C();
  }
}

void sub_24484B558(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  if (*(unsigned char *)(a3 + 16))
  {
    uint64_t v6 = *(void *)a3;
    uint64_t v7 = *(void *)(a3 + 8);
    int v9 = 0;
    a4[1] = 0;
    a4[2] = 0;
    *a4 = 0;
    sub_244CB7594(a1, a2, 22, &v9, (uint64_t)a4);
    if (!*(_DWORD *)a4)
    {
      if (v7)
      {
        uint64_t v8 = 20 * v7;
        while (1)
        {
          *a4 = 0;
          a4[1] = 0;
          a4[2] = 0;
          sub_2447F4904(v6, a1, 256, (uint64_t)a4);
          if (*(_DWORD *)a4) {
            break;
          }
          v6 += 20;
          v8 -= 20;
          if (!v8) {
            goto LABEL_7;
          }
        }
      }
      else
      {
LABEL_7:
        *a4 = 0;
        a4[1] = 0;
        a4[2] = 0;
        sub_244CB7708((uint64_t)a1, v9, (uint64_t)a4);
        if (!*(_DWORD *)a4)
        {
          *(_DWORD *)a4 = 0;
          a4[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/List.h";
          *((_DWORD *)a4 + 4) = 86;
        }
      }
    }
  }
  else
  {
    sub_244CB710C();
  }
}

uint64_t sub_24484B660(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 80)) {
    *(unsigned char *)(a1 + 80) = 0;
  }
  sub_244CB3988(a1);
  *(unsigned char *)(a1 + 72) = 0;
  sub_244CB39B8(v2, 0, 0);
  *(unsigned char *)(a1 + 80) = 1;
  return a1;
}

uint64_t sub_24484B6B0@<X0>(uint64_t a1@<X0>, _WORD *a2@<X1>, void *a3@<X8>)
{
  __int16 v6 = 0;
  a3[1] = 0;
  a3[2] = 0;
  *a3 = 0;
  uint64_t result = sub_244CB3F40(a1, &v6, (uint64_t)a3);
  if (!*(_DWORD *)a3)
  {
    *a2 = v6;
    *(_DWORD *)a3 = 0;
    a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/lib/core/TLVReader.h";
    *((_DWORD *)a3 + 4) = 534;
  }
  return result;
}

void sub_24484B718(unsigned __int8 *a1@<X2>, uint64_t a2@<X8>)
{
  if (!a1[1])
  {
    sub_244CB710C();
    return;
  }
  int v2 = *a1;
  if (v2 == 21)
  {
    *(_DWORD *)a2 = 1415;
    *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    int v3 = 75;
    goto LABEL_7;
  }
  if (v2 == 255)
  {
    *(_DWORD *)a2 = 1415;
    *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    int v3 = 193;
LABEL_7:
    *(_DWORD *)(a2 + 16) = v3;
    return;
  }
  sub_244CB68B8();
}

uint64_t sub_24484B778@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  uint64_t result = sub_2446D1AAC(a1, a2, a3);
  if (!*(_DWORD *)a3)
  {
    unsigned int v6 = *a2;
    if (v6 >= 0x15) {
      LOBYTE(v6) = 21;
    }
    *a2 = v6;
    *(_DWORD *)a3 = 0;
    a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
    *((_DWORD *)a3 + 4) = 61;
  }
  return result;
}

void sub_24484B7DC(unsigned char *a1@<X2>, uint64_t a2@<X8>)
{
  if (*a1)
  {
    sub_2446D18C8(a1);
    sub_244CB65C8();
  }
  else
  {
    *(_DWORD *)a2 = 0;
    *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    *(_DWORD *)(a2 + 16) = 171;
  }
}

void sub_24484B864(char *a1@<X0>, unsigned char *a2@<X2>, uint64_t a3@<X8>)
{
  if (*a2)
  {
    unsigned int v5 = sub_2446F7170(a2);
    sub_24484B8EC(a1, (uint64_t)v5, a3);
  }
  else
  {
    *(_DWORD *)a3 = 0;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    *(_DWORD *)(a3 + 16) = 171;
  }
}

void sub_24484B8EC(char *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  if (*(unsigned char *)(a2 + 16)) {
    sub_244CB6ADC(a1, *(char **)a2, *(void *)(a2 + 8), a3);
  }
  else {
    sub_244CB710C();
  }
}

void sub_24484B904(char *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X2>, uint64_t a4@<X8>)
{
  if (!*a3)
  {
    *(_DWORD *)a4 = 0;
    *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    int v11 = 171;
LABEL_10:
    *(_DWORD *)(a4 + 16) = v11;
    return;
  }
  uint64_t v7 = (uint64_t *)sub_2446D18A4(a3);
  uint64_t v8 = *v7;
  uint64_t v9 = v7[1];
  int v12 = 0;
  *(void *)(a4 + 8) = 0;
  *(void *)(a4 + 16) = 0;
  *(void *)a4 = 0;
  sub_244CB7594(a1, a2, 22, &v12, a4);
  if (*(_DWORD *)a4) {
    return;
  }
  if (!v9)
  {
LABEL_7:
    *(void *)a4 = 0;
    *(void *)(a4 + 8) = 0;
    *(void *)(a4 + 16) = 0;
    sub_244CB7708((uint64_t)a1, v12, a4);
    if (*(_DWORD *)a4) {
      return;
    }
    *(_DWORD *)a4 = 0;
    *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/List.h";
    int v11 = 86;
    goto LABEL_10;
  }
  uint64_t v10 = 48 * v9;
  while (1)
  {
    *(void *)a4 = 0;
    *(void *)(a4 + 8) = 0;
    *(void *)(a4 + 16) = 0;
    sub_2447FDE20(v8, a1, 256, a4);
    if (*(_DWORD *)a4) {
      break;
    }
    v8 += 48;
    v10 -= 48;
    if (!v10) {
      goto LABEL_7;
    }
  }
}

void sub_24484BA10(char *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X2>, uint64_t a4@<X8>)
{
  if (!*a3)
  {
    *(_DWORD *)a4 = 0;
    *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    int v11 = 171;
LABEL_10:
    *(_DWORD *)(a4 + 16) = v11;
    return;
  }
  uint64_t v7 = (uint64_t *)sub_2446D18A4(a3);
  uint64_t v8 = *v7;
  uint64_t v9 = v7[1];
  int v12 = 0;
  *(void *)(a4 + 8) = 0;
  *(void *)(a4 + 16) = 0;
  *(void *)a4 = 0;
  sub_244CB7594(a1, a2, 22, &v12, a4);
  if (*(_DWORD *)a4) {
    return;
  }
  if (!v9)
  {
LABEL_7:
    *(void *)a4 = 0;
    *(void *)(a4 + 8) = 0;
    *(void *)(a4 + 16) = 0;
    sub_244CB7708((uint64_t)a1, v12, a4);
    if (*(_DWORD *)a4) {
      return;
    }
    *(_DWORD *)a4 = 0;
    *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/List.h";
    int v11 = 86;
    goto LABEL_10;
  }
  uint64_t v10 = v9 << 6;
  while (1)
  {
    *(void *)a4 = 0;
    *(void *)(a4 + 8) = 0;
    *(void *)(a4 + 16) = 0;
    sub_2447FD9EC(v8, a1, 256, a4);
    if (*(_DWORD *)a4) {
      break;
    }
    v8 += 64;
    v10 -= 64;
    if (!v10) {
      goto LABEL_7;
    }
  }
}

void sub_24484BB18(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  if (*(unsigned char *)(a1 + 4))
  {
    if (*(_DWORD *)a1 == 0x80000000)
    {
      *(_DWORD *)a2 = 1415;
      *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
      *(_DWORD *)(a2 + 16) = 193;
    }
    else
    {
      sub_244CB69F4();
    }
  }
  else
  {
    sub_244CB710C();
  }
}

void sub_24484BB58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(unsigned char *)(a3 + 1)) {
    sub_244CB65C8();
  }
  else {
    sub_244CB710C();
  }
}

void sub_24484BB6C(unsigned __int8 *a1@<X2>, uint64_t a2@<X8>)
{
  if (a1[1])
  {
    if (*a1 == 128)
    {
      *(_DWORD *)a2 = 1415;
      *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
      *(_DWORD *)(a2 + 16) = 193;
    }
    else
    {
      sub_244CB69F4();
    }
  }
  else
  {
    sub_244CB710C();
  }
}

void sub_24484BBAC(unsigned char *a1@<X2>, uint64_t a2@<X8>)
{
  if (!*a1)
  {
    *(_DWORD *)a2 = 0;
    *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    int v3 = 171;
    goto LABEL_5;
  }
  if (*sub_2446D18C8(a1) == 17)
  {
    *(_DWORD *)a2 = 1415;
    *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    int v3 = 75;
LABEL_5:
    *(_DWORD *)(a2 + 16) = v3;
    return;
  }

  sub_244CB68B8();
}

void sub_24484BC58(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (*(unsigned char *)(a3 + 16)) {
    sub_244804C04(a1, a2, a4);
  }
  else {
    sub_244CB710C();
  }
}

void sub_24484BC80(char *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  if (*(unsigned char *)(a2 + 16)) {
    sub_244CB6D80(a1, *(char **)a2, *(void *)(a2 + 8), a3);
  }
  else {
    sub_244CB710C();
  }
}

unsigned char *sub_24484BC98(unsigned char *a1)
{
  if (!*a1) {
    sub_244E1E8A4();
  }
  return a1 + 4;
}

void sub_24484BCBC(unsigned char *a1@<X2>, uint64_t a2@<X8>)
{
  if (*a1)
  {
    sub_24471C2FC(a1);
    sub_244CB69F4();
  }
  else
  {
    *(_DWORD *)a2 = 0;
    *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    *(_DWORD *)(a2 + 16) = 171;
  }
}

void sub_24484BD44(unsigned char *a1@<X2>, uint64_t a2@<X8>)
{
  if (*a1)
  {
    sub_2446F9190(a1);
    sub_244CB69F4();
  }
  else
  {
    *(_DWORD *)a2 = 0;
    *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    *(_DWORD *)(a2 + 16) = 171;
  }
}

void sub_24484BDCC(unsigned char *a1@<X2>, uint64_t a2@<X8>)
{
  if (*a1)
  {
    sub_2446F12CC(a1);
    sub_244CB69F4();
  }
  else
  {
    *(_DWORD *)a2 = 0;
    *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    *(_DWORD *)(a2 + 16) = 171;
  }
}

void sub_24484BE54(void *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X2>, uint64_t a4@<X8>)
{
  if (!*a3)
  {
    *(_DWORD *)a4 = 0;
    *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    int v11 = 171;
LABEL_10:
    *(_DWORD *)(a4 + 16) = v11;
    return;
  }
  uint64_t v7 = (uint64_t *)sub_2446D18A4(a3);
  uint64_t v8 = *v7;
  uint64_t v9 = v7[1];
  int v12 = 0;
  *(void *)(a4 + 8) = 0;
  *(void *)(a4 + 16) = 0;
  *(void *)a4 = 0;
  sub_244CB7594(a1, a2, 22, &v12, a4);
  if (*(_DWORD *)a4) {
    return;
  }
  if (!v9)
  {
LABEL_7:
    *(void *)a4 = 0;
    *(void *)(a4 + 8) = 0;
    *(void *)(a4 + 16) = 0;
    sub_244CB7708((uint64_t)a1, v12, a4);
    if (*(_DWORD *)a4) {
      return;
    }
    *(_DWORD *)a4 = 0;
    *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/List.h";
    int v11 = 86;
    goto LABEL_10;
  }
  uint64_t v10 = 24 * v9;
  while (1)
  {
    *(void *)a4 = 0;
    *(void *)(a4 + 8) = 0;
    *(void *)(a4 + 16) = 0;
    sub_244810808(v8, a1, 256, a4);
    if (*(_DWORD *)a4) {
      break;
    }
    v8 += 24;
    v10 -= 24;
    if (!v10) {
      goto LABEL_7;
    }
  }
}

void sub_24484BF60(void *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X2>, uint64_t a4@<X8>)
{
  if (!*a3)
  {
    *(_DWORD *)a4 = 0;
    *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    int v10 = 171;
LABEL_9:
    *(_DWORD *)(a4 + 16) = v10;
    return;
  }
  uint64_t v7 = (uint64_t *)sub_2446D18A4(a3);
  uint64_t v8 = *v7;
  uint64_t v9 = v7[1];
  int v11 = 0;
  *(void *)(a4 + 8) = 0;
  *(void *)(a4 + 16) = 0;
  *(void *)a4 = 0;
  sub_244CB7594(a1, a2, 22, &v11, a4);
  if (*(_DWORD *)a4) {
    return;
  }
  if (!v9)
  {
LABEL_6:
    *(void *)a4 = 0;
    *(void *)(a4 + 8) = 0;
    *(void *)(a4 + 16) = 0;
    sub_244CB7708((uint64_t)a1, v11, a4);
    if (*(_DWORD *)a4) {
      return;
    }
    *(_DWORD *)a4 = 0;
    *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/List.h";
    int v10 = 86;
    goto LABEL_9;
  }
  while (1)
  {
    *(void *)a4 = 0;
    *(void *)(a4 + 8) = 0;
    *(void *)(a4 + 16) = 0;
    sub_244CB68B8();
    if (*(_DWORD *)a4) {
      break;
    }
    ++v8;
    if (!--v9) {
      goto LABEL_6;
    }
  }
}

void sub_24484C064(unsigned char *a1@<X2>, uint64_t a2@<X8>)
{
  if (*a1)
  {
    int v3 = sub_2446D18A4(a1);
    sub_2447F5BC4((uint64_t)v3, a2);
  }
  else
  {
    *(_DWORD *)a2 = 0;
    *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    *(_DWORD *)(a2 + 16) = 171;
  }
}

void sub_24484C0EC(unsigned char *a1@<X2>, uint64_t a2@<X8>)
{
  if (*a1)
  {
    int v3 = (unsigned __int16 *)sub_24471C2FC(a1);
    sub_2447F5C00(v3, a2);
  }
  else
  {
    *(_DWORD *)a2 = 0;
    *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    *(_DWORD *)(a2 + 16) = 171;
  }
}

void sub_24484C174(unsigned char *a1@<X2>, uint64_t a2@<X8>)
{
  if (*a1)
  {
    int v3 = (unsigned __int16 *)sub_2446D1880(a1);
    sub_24484B350(v3, a2);
  }
  else
  {
    *(_DWORD *)a2 = 0;
    *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    *(_DWORD *)(a2 + 16) = 171;
  }
}

void sub_24484C1FC(void *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X2>, uint64_t a4@<X8>)
{
  if (*a3)
  {
    uint64_t v7 = sub_2446D1880(a3);
    sub_24481642C(v7, a1, a2, a4);
  }
  else
  {
    *(_DWORD *)a4 = 0;
    *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    *(_DWORD *)(a4 + 16) = 171;
  }
}

void sub_24484C280(void *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X2>, uint64_t a4@<X8>)
{
  if (*a3)
  {
    sub_2446D18C8(a3);
    sub_244816270(a1, a2, a4);
  }
  else
  {
    *(_DWORD *)a4 = 0;
    *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    *(_DWORD *)(a4 + 16) = 171;
  }
}

void sub_24484C304(void *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X2>, uint64_t a4@<X8>)
{
  if (*a3)
  {
    sub_2446D18C8(a3);
    sub_2448096EC(a1, a2, a4);
  }
  else
  {
    *(_DWORD *)a4 = 0;
    *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    *(_DWORD *)(a4 + 16) = 171;
  }
}

void sub_24484C388(void *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X2>, uint64_t a4@<X8>)
{
  if (*a3)
  {
    uint64_t v7 = sub_2446D18C8(a3);
    sub_244815F20(v7, a1, a2, a4);
  }
  else
  {
    *(_DWORD *)a4 = 0;
    *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    *(_DWORD *)(a4 + 16) = 171;
  }
}

void sub_24484C40C(void *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X2>, uint64_t a4@<X8>)
{
  if (a3[24]) {
    sub_24481642C(a3, a1, a2, a4);
  }
  else {
    sub_244CB710C();
  }
}

void sub_24484C434(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (*(unsigned char *)(a3 + 1)) {
    sub_244816270(a1, a2, a4);
  }
  else {
    sub_244CB710C();
  }
}

void sub_24484C45C(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (*(unsigned char *)(a3 + 1)) {
    sub_2448096EC(a1, a2, a4);
  }
  else {
    sub_244CB710C();
  }
}

void sub_24484C484(void *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X2>, uint64_t a4@<X8>)
{
  if (a3[1]) {
    sub_244815F20(a3, a1, a2, a4);
  }
  else {
    sub_244CB710C();
  }
}

void sub_24484C4AC(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if (sub_244CB3B68(a1) == 20)
  {
    if (*(unsigned char *)(a2 + 24)) {
      *(unsigned char *)(a2 + 24) = 0;
    }
    int v6 = 168;
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
    *(void *)(a2 + 8) = 0;
    *(void *)(a2 + 16) = 0;
    *(void *)a2 = 0;
    *(unsigned char *)(a2 + 24) = 1;
    sub_244816594(a2, a1, (uint64_t)a3);
    if (*(_DWORD *)a3) {
      return;
    }
    int v6 = 177;
  }
  *(_DWORD *)a3 = 0;
  a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
  *((_DWORD *)a3 + 4) = v6;
}

void sub_24484C544(uint64_t a1@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  if (sub_244CB3B68(a1) == 20)
  {
    if (a2[1]) {
      a2[1] = 0;
    }
    int v6 = 168;
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
    *(_WORD *)a2 = 256;
    sub_244816354(a2, a1, (uint64_t)a3);
    if (*(_DWORD *)a3) {
      return;
    }
    int v6 = 177;
  }
  *(_DWORD *)a3 = 0;
  a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
  *((_DWORD *)a3 + 4) = v6;
}

void sub_24484C5D4(uint64_t a1@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  if (sub_244CB3B68(a1) == 20)
  {
    if (a2[1]) {
      a2[1] = 0;
    }
    int v6 = 168;
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
    *(_WORD *)a2 = 256;
    sub_244816198(a2, a1, (uint64_t)a3);
    if (*(_DWORD *)a3) {
      return;
    }
    int v6 = 177;
  }
  *(_DWORD *)a3 = 0;
  a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
  *((_DWORD *)a3 + 4) = v6;
}

void sub_24484C664(uint64_t a1@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  if (sub_244CB3B68(a1) == 20)
  {
    if (a2[1]) {
      a2[1] = 0;
    }
    int v6 = 168;
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
    *(_WORD *)a2 = 256;
    sub_2448160C0(a2, a1, (uint64_t)a3);
    if (*(_DWORD *)a3) {
      return;
    }
    int v6 = 177;
  }
  *(_DWORD *)a3 = 0;
  a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
  *((_DWORD *)a3 + 4) = v6;
}

void sub_24484C6F4(uint64_t a1@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  if (sub_244CB3B68(a1) == 20)
  {
    if (a2[1]) {
      a2[1] = 0;
    }
    int v6 = 168;
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
    *(_WORD *)a2 = 256;
    sub_244815FE8(a2, a1, (uint64_t)a3);
    if (*(_DWORD *)a3) {
      return;
    }
    int v6 = 177;
  }
  *(_DWORD *)a3 = 0;
  a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
  *((_DWORD *)a3 + 4) = v6;
}

void sub_24484C784(char *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X2>, uint64_t a4@<X8>)
{
  if (!*a3)
  {
    *(_DWORD *)a4 = 0;
    *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    int v11 = 171;
LABEL_10:
    *(_DWORD *)(a4 + 16) = v11;
    return;
  }
  uint64_t v7 = sub_2446D18A4(a3);
  uint64_t v8 = *(unsigned char **)v7;
  uint64_t v9 = *((void *)v7 + 1);
  int v12 = 0;
  *(void *)(a4 + 8) = 0;
  *(void *)(a4 + 16) = 0;
  *(void *)a4 = 0;
  sub_244CB7594(a1, a2, 22, &v12, a4);
  if (*(_DWORD *)a4) {
    return;
  }
  if (!v9)
  {
LABEL_7:
    *(void *)a4 = 0;
    *(void *)(a4 + 8) = 0;
    *(void *)(a4 + 16) = 0;
    sub_244CB7708((uint64_t)a1, v12, a4);
    if (*(_DWORD *)a4) {
      return;
    }
    *(_DWORD *)a4 = 0;
    *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/List.h";
    int v11 = 86;
    goto LABEL_10;
  }
  uint64_t v10 = 32 * v9;
  while (1)
  {
    *(void *)a4 = 0;
    *(void *)(a4 + 8) = 0;
    *(void *)(a4 + 16) = 0;
    sub_24481832C(v8, a1, 256, a4);
    if (*(_DWORD *)a4) {
      break;
    }
    v8 += 32;
    v10 -= 32;
    if (!v10) {
      goto LABEL_7;
    }
  }
}

void sub_24484C88C(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, void *a4@<X8>)
{
  if (*((unsigned char *)a3 + 16))
  {
    uint64_t v6 = *a3;
    uint64_t v7 = a3[1];
    int v9 = 0;
    a4[1] = 0;
    a4[2] = 0;
    *a4 = 0;
    sub_244CB7594(a1, a2, 22, &v9, (uint64_t)a4);
    if (!*(_DWORD *)a4)
    {
      if (v7)
      {
        uint64_t v8 = 24 * v7;
        while (1)
        {
          *a4 = 0;
          a4[1] = 0;
          a4[2] = 0;
          sub_2448197D0(a1, 256, (uint64_t)a4);
          if (*(_DWORD *)a4) {
            break;
          }
          v6 += 24;
          v8 -= 24;
          if (!v8) {
            goto LABEL_7;
          }
        }
      }
      else
      {
LABEL_7:
        *a4 = 0;
        a4[1] = 0;
        a4[2] = 0;
        sub_244CB7708((uint64_t)a1, v9, (uint64_t)a4);
        if (!*(_DWORD *)a4)
        {
          *(_DWORD *)a4 = 0;
          a4[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/List.h";
          *((_DWORD *)a4 + 4) = 86;
        }
      }
    }
  }
  else
  {
    sub_244CB710C();
  }
}

void sub_24484C994(void *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X2>, uint64_t a4@<X8>)
{
  if (!*a3)
  {
    *(_DWORD *)a4 = 0;
    *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    int v11 = 171;
LABEL_10:
    *(_DWORD *)(a4 + 16) = v11;
    return;
  }
  uint64_t v7 = sub_2446D18A4(a3);
  uint64_t v8 = *(unsigned char **)v7;
  uint64_t v9 = *((void *)v7 + 1);
  int v12 = 0;
  *(void *)(a4 + 8) = 0;
  *(void *)(a4 + 16) = 0;
  *(void *)a4 = 0;
  sub_244CB7594(a1, a2, 22, &v12, a4);
  if (*(_DWORD *)a4) {
    return;
  }
  if (!v9)
  {
LABEL_7:
    *(void *)a4 = 0;
    *(void *)(a4 + 8) = 0;
    *(void *)(a4 + 16) = 0;
    sub_244CB7708((uint64_t)a1, v12, a4);
    if (*(_DWORD *)a4) {
      return;
    }
    *(_DWORD *)a4 = 0;
    *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/List.h";
    int v11 = 86;
    goto LABEL_10;
  }
  uint64_t v10 = 16 * v9;
  while (1)
  {
    *(void *)a4 = 0;
    *(void *)(a4 + 8) = 0;
    *(void *)(a4 + 16) = 0;
    sub_244819504(v8, a1, 256, a4);
    if (*(_DWORD *)a4) {
      break;
    }
    v8 += 16;
    v10 -= 16;
    if (!v10) {
      goto LABEL_7;
    }
  }
}

uint64_t sub_24484CA9C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 128)) {
    *(unsigned char *)(a1 + 128) = 0;
  }
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  sub_244CB3988(a1 + 40);
  *(unsigned char *)(a1 + 112) = 0;
  sub_244CB39B8(v2, 0, 0);
  *(unsigned char *)(a1 + 120) = 0;
  *(unsigned char *)(a1 + 128) = 1;
  return a1;
}

void sub_24484CB04(unsigned char *a1@<X2>, uint64_t a2@<X8>)
{
  if (!*a1)
  {
    *(_DWORD *)a2 = 0;
    *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    int v3 = 171;
    goto LABEL_5;
  }
  if (*sub_2446F9190(a1) == 5)
  {
    *(_DWORD *)a2 = 1415;
    *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    int v3 = 75;
LABEL_5:
    *(_DWORD *)(a2 + 16) = v3;
    return;
  }

  sub_244CB68B8();
}

void sub_24484CBB0(unsigned __int8 *a1@<X2>, uint64_t a2@<X8>)
{
  if (!a1[1])
  {
    sub_244CB710C();
    return;
  }
  int v2 = *a1;
  if (v2 == 2)
  {
    *(_DWORD *)a2 = 1415;
    *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    int v3 = 75;
    goto LABEL_7;
  }
  if (v2 == 255)
  {
    *(_DWORD *)a2 = 1415;
    *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    int v3 = 193;
LABEL_7:
    *(_DWORD *)(a2 + 16) = v3;
    return;
  }
  sub_244CB68B8();
}

void sub_24484CC10(unsigned __int8 *a1@<X2>, uint64_t a2@<X8>)
{
  if (!a1[1])
  {
    sub_244CB710C();
    return;
  }
  int v2 = *a1;
  if (v2 == 10)
  {
    *(_DWORD *)a2 = 1415;
    *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    int v3 = 75;
    goto LABEL_7;
  }
  if (v2 == 255)
  {
    *(_DWORD *)a2 = 1415;
    *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    int v3 = 193;
LABEL_7:
    *(_DWORD *)(a2 + 16) = v3;
    return;
  }
  sub_244CB68B8();
}

void sub_24484CC70(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  if (*(unsigned char *)(a3 + 16))
  {
    uint64_t v6 = *(unsigned char **)a3;
    uint64_t v7 = *(void *)(a3 + 8);
    int v9 = 0;
    a4[1] = 0;
    a4[2] = 0;
    *a4 = 0;
    sub_244CB7594(a1, a2, 22, &v9, (uint64_t)a4);
    if (!*(_DWORD *)a4)
    {
      if (v7)
      {
        uint64_t v8 = 4 * v7;
        while (1)
        {
          *a4 = 0;
          a4[1] = 0;
          a4[2] = 0;
          sub_24481ED10(v6, a1, 256, (uint64_t)a4);
          if (*(_DWORD *)a4) {
            break;
          }
          v6 += 4;
          v8 -= 4;
          if (!v8) {
            goto LABEL_7;
          }
        }
      }
      else
      {
LABEL_7:
        *a4 = 0;
        a4[1] = 0;
        a4[2] = 0;
        sub_244CB7708((uint64_t)a1, v9, (uint64_t)a4);
        if (!*(_DWORD *)a4)
        {
          *(_DWORD *)a4 = 0;
          a4[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/List.h";
          *((_DWORD *)a4 + 4) = 86;
        }
      }
    }
  }
  else
  {
    sub_244CB710C();
  }
}

void sub_24484CD74(void *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X2>, uint64_t a4@<X8>)
{
  if (a3[4]) {
    sub_24481ED10(a3, a1, a2, a4);
  }
  else {
    sub_244CB710C();
  }
}

void sub_24484CD9C(void *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X2>, uint64_t a4@<X8>)
{
  if (a3[4]) {
    sub_24481EB0C(a3, a1, a2, a4);
  }
  else {
    sub_244CB710C();
  }
}

void sub_24484CDC4(unsigned __int8 *a1@<X2>, uint64_t a2@<X8>)
{
  if (!a1[1])
  {
    sub_244CB710C();
    return;
  }
  int v2 = *a1;
  if (v2 == 7)
  {
    *(_DWORD *)a2 = 1415;
    *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    int v3 = 75;
    goto LABEL_7;
  }
  if (v2 == 255)
  {
    *(_DWORD *)a2 = 1415;
    *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    int v3 = 193;
LABEL_7:
    *(_DWORD *)(a2 + 16) = v3;
    return;
  }
  sub_244CB68B8();
}

void sub_24484CE24(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (*(unsigned char *)(a3 + 24)) {
    sub_2447EFDD0(a3, a1, a2, a4);
  }
  else {
    sub_244CB710C();
  }
}

void sub_24484CE4C(void *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X2>, uint64_t a4@<X8>)
{
  if (a3[3]) {
    sub_2448256C0(a3, a1, a2, a4);
  }
  else {
    sub_244CB710C();
  }
}

void sub_24484CE74(unsigned char *a1@<X2>, uint64_t a2@<X8>)
{
  if (!*a1)
  {
    *(_DWORD *)a2 = 0;
    *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    int v3 = 171;
    goto LABEL_5;
  }
  if (*sub_2446F9190(a1) == 4)
  {
    *(_DWORD *)a2 = 1415;
    *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    int v3 = 75;
LABEL_5:
    *(_DWORD *)(a2 + 16) = v3;
    return;
  }

  sub_244CB68B8();
}

uint64_t sub_24484CF20@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X2>, uint64_t a4@<X8>)
{
  if (!*a3)
  {
    *(_DWORD *)a4 = 0;
    *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    int v11 = 171;
LABEL_10:
    *(_DWORD *)(a4 + 16) = v11;
    return result;
  }
  uint64_t v6 = (char *)result;
  uint64_t v7 = (uint64_t *)sub_2446D18A4(a3);
  uint64_t v8 = *v7;
  uint64_t v9 = v7[1];
  int v12 = 0;
  *(void *)(a4 + 8) = 0;
  *(void *)(a4 + 16) = 0;
  *(void *)a4 = 0;
  uint64_t result = (uint64_t)sub_244CB7594(v6, a2, 22, &v12, a4);
  if (*(_DWORD *)a4) {
    return result;
  }
  if (!v9)
  {
LABEL_7:
    *(void *)a4 = 0;
    *(void *)(a4 + 8) = 0;
    *(void *)(a4 + 16) = 0;
    uint64_t result = sub_244CB7708((uint64_t)v6, v12, a4);
    if (*(_DWORD *)a4) {
      return result;
    }
    *(_DWORD *)a4 = 0;
    *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/List.h";
    int v11 = 86;
    goto LABEL_10;
  }
  uint64_t v10 = v8 + 16 * v9;
  while (1)
  {
    *(void *)a4 = 0;
    *(void *)(a4 + 8) = 0;
    *(void *)(a4 + 16) = 0;
    uint64_t result = (uint64_t)sub_244CB6D80(v6, *(char **)v8, *(void *)(v8 + 8), a4);
    if (*(_DWORD *)a4) {
      return result;
    }
    v8 += 16;
    if (v8 == v10) {
      goto LABEL_7;
    }
  }
}

void sub_24484D028(char *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X2>, uint64_t a4@<X8>)
{
  if (*a3)
  {
    uint64_t v7 = sub_2446F7170(a3);
    sub_24484D0B0(a1, a2, (uint64_t)v7, a4);
  }
  else
  {
    *(_DWORD *)a4 = 0;
    *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    *(_DWORD *)(a4 + 16) = 171;
  }
}

void sub_24484D0B0(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (*(unsigned char *)(a3 + 32)) {
    sub_2447EEEA4(a3, a1, a2, a4);
  }
  else {
    sub_244CB710C();
  }
}

void sub_24484D0D8(char *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X2>, uint64_t a4@<X8>)
{
  if (!*a3)
  {
    *(_DWORD *)a4 = 0;
    *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    int v11 = 171;
LABEL_10:
    *(_DWORD *)(a4 + 16) = v11;
    return;
  }
  uint64_t v7 = (uint64_t *)sub_2446D18A4(a3);
  uint64_t v8 = *v7;
  uint64_t v9 = v7[1];
  int v12 = 0;
  *(void *)(a4 + 8) = 0;
  *(void *)(a4 + 16) = 0;
  *(void *)a4 = 0;
  sub_244CB7594(a1, a2, 22, &v12, a4);
  if (*(_DWORD *)a4) {
    return;
  }
  if (!v9)
  {
LABEL_7:
    *(void *)a4 = 0;
    *(void *)(a4 + 8) = 0;
    *(void *)(a4 + 16) = 0;
    sub_244CB7708((uint64_t)a1, v12, a4);
    if (*(_DWORD *)a4) {
      return;
    }
    *(_DWORD *)a4 = 0;
    *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/List.h";
    int v11 = 86;
    goto LABEL_10;
  }
  uint64_t v10 = 40 * v9;
  while (1)
  {
    *(void *)a4 = 0;
    *(void *)(a4 + 8) = 0;
    *(void *)(a4 + 16) = 0;
    sub_2448306C0(v8, a1, 256, a4);
    if (*(_DWORD *)a4) {
      break;
    }
    v8 += 40;
    v10 -= 40;
    if (!v10) {
      goto LABEL_7;
    }
  }
}

void sub_24484D1E4(char *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X2>, uint64_t a4@<X8>)
{
  if (!*a3)
  {
    *(_DWORD *)a4 = 0;
    *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    int v11 = 171;
LABEL_10:
    *(_DWORD *)(a4 + 16) = v11;
    return;
  }
  uint64_t v7 = (uint64_t *)sub_2446D18A4(a3);
  uint64_t v8 = *v7;
  uint64_t v9 = v7[1];
  int v12 = 0;
  *(void *)(a4 + 8) = 0;
  *(void *)(a4 + 16) = 0;
  *(void *)a4 = 0;
  sub_244CB7594(a1, a2, 22, &v12, a4);
  if (*(_DWORD *)a4) {
    return;
  }
  if (!v9)
  {
LABEL_7:
    *(void *)a4 = 0;
    *(void *)(a4 + 8) = 0;
    *(void *)(a4 + 16) = 0;
    sub_244CB7708((uint64_t)a1, v12, a4);
    if (*(_DWORD *)a4) {
      return;
    }
    *(_DWORD *)a4 = 0;
    *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/List.h";
    int v11 = 86;
    goto LABEL_10;
  }
  uint64_t v10 = 32 * v9;
  while (1)
  {
    *(void *)a4 = 0;
    *(void *)(a4 + 8) = 0;
    *(void *)(a4 + 16) = 0;
    sub_2447EEEA4(v8, a1, 256, a4);
    if (*(_DWORD *)a4) {
      break;
    }
    v8 += 32;
    v10 -= 32;
    if (!v10) {
      goto LABEL_7;
    }
  }
}

void sub_24484D2EC(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if (sub_244CB3B68(a1) == 20)
  {
    if (*(unsigned char *)(a2 + 32)) {
      *(unsigned char *)(a2 + 32) = 0;
    }
    int v6 = 168;
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(unsigned char *)(a2 + 32) = 1;
    sub_2448308EC((_OWORD *)a2, a1, (uint64_t)a3);
    if (*(_DWORD *)a3) {
      return;
    }
    int v6 = 177;
  }
  *(_DWORD *)a3 = 0;
  a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
  *((_DWORD *)a3 + 4) = v6;
}

void sub_24484D384(char *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X2>, uint64_t a4@<X8>)
{
  if (*a3)
  {
    uint64_t v7 = sub_2446F7170(a3);
    sub_24484D40C(a1, a2, v7, a4);
  }
  else
  {
    *(_DWORD *)a4 = 0;
    *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    *(_DWORD *)(a4 + 16) = 171;
  }
}

void sub_24484D40C(char *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X2>, uint64_t a4@<X8>)
{
  if (a3[56]) {
    sub_244831528(a3, a1, a2, a4);
  }
  else {
    sub_244CB710C();
  }
}

void sub_24484D434(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if (sub_244CB3B68(a1) == 20)
  {
    if (*(unsigned char *)(a2 + 56)) {
      *(unsigned char *)(a2 + 56) = 0;
    }
    int v6 = 168;
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(void *)(a2 + 48) = 0;
    *(unsigned char *)(a2 + 56) = 1;
    sub_244831664(a2, a1, (uint64_t)a3);
    if (*(_DWORD *)a3) {
      return;
    }
    int v6 = 177;
  }
  *(_DWORD *)a3 = 0;
  a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
  *((_DWORD *)a3 + 4) = v6;
}

void sub_24484D4D4(char *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X2>, uint64_t a4@<X8>)
{
  if (!*a3)
  {
    *(_DWORD *)a4 = 0;
    *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    int v11 = 171;
LABEL_10:
    *(_DWORD *)(a4 + 16) = v11;
    return;
  }
  uint64_t v7 = sub_2446D18A4(a3);
  uint64_t v8 = *(unsigned char **)v7;
  uint64_t v9 = *((void *)v7 + 1);
  int v12 = 0;
  *(void *)(a4 + 8) = 0;
  *(void *)(a4 + 16) = 0;
  *(void *)a4 = 0;
  sub_244CB7594(a1, a2, 22, &v12, a4);
  if (*(_DWORD *)a4) {
    return;
  }
  if (!v9)
  {
LABEL_7:
    *(void *)a4 = 0;
    *(void *)(a4 + 8) = 0;
    *(void *)(a4 + 16) = 0;
    sub_244CB7708((uint64_t)a1, v12, a4);
    if (*(_DWORD *)a4) {
      return;
    }
    *(_DWORD *)a4 = 0;
    *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/List.h";
    int v11 = 86;
    goto LABEL_10;
  }
  uint64_t v10 = 112 * v9;
  while (1)
  {
    *(void *)a4 = 0;
    *(void *)(a4 + 8) = 0;
    *(void *)(a4 + 16) = 0;
    sub_2448309FC(v8, a1, 256, a4);
    if (*(_DWORD *)a4) {
      break;
    }
    v8 += 112;
    v10 -= 112;
    if (!v10) {
      goto LABEL_7;
    }
  }
}

void sub_24484D5E0(char *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X2>, uint64_t a4@<X8>)
{
  if (*a3)
  {
    uint64_t v7 = sub_2446D18A4(a3);
    sub_244831528(v7, a1, a2, a4);
  }
  else
  {
    *(_DWORD *)a4 = 0;
    *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    *(_DWORD *)(a4 + 16) = 171;
  }
}

void sub_24484D664(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (*(unsigned char *)(a3 + 48)) {
    sub_244833A10(a3, a1, a2, a4);
  }
  else {
    sub_244CB710C();
  }
}

void sub_24484D68C(void *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X2>, void *a4@<X8>)
{
  if (*a3)
  {
    uint64_t v7 = sub_2446D18A4(a3);
    uint64_t v8 = *(unsigned char **)v7;
    uint64_t v9 = *((void *)v7 + 1);
    int v13 = 0;
    a4[1] = 0;
    a4[2] = 0;
    *a4 = 0;
    sub_244CB7594(a1, a2, 22, &v13, (uint64_t)a4);
    if (*(_DWORD *)a4) {
      return;
    }
    if (v9)
    {
      uint64_t v10 = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
      while (1)
      {
        *a4 = 0;
        a4[1] = 0;
        a4[2] = 0;
        if (*v8 == 18) {
          break;
        }
        sub_244CB68B8();
        if (*(_DWORD *)a4) {
          return;
        }
        ++v8;
        if (!--v9) {
          goto LABEL_8;
        }
      }
      int v12 = 75;
      int v11 = 1415;
    }
    else
    {
LABEL_8:
      *a4 = 0;
      a4[1] = 0;
      a4[2] = 0;
      sub_244CB7708((uint64_t)a1, v13, (uint64_t)a4);
      if (*(_DWORD *)a4) {
        return;
      }
      int v11 = 0;
      int v12 = 86;
      uint64_t v10 = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/List.h";
    }
    *(_DWORD *)a4 = v11;
    a4[1] = v10;
  }
  else
  {
    *(_DWORD *)a4 = 0;
    a4[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    int v12 = 171;
  }
  *((_DWORD *)a4 + 4) = v12;
}

void sub_24484D7B0(char *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X2>, uint64_t a4@<X8>)
{
  if (!*a3)
  {
    *(_DWORD *)a4 = 0;
    *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    int v11 = 171;
LABEL_10:
    *(_DWORD *)(a4 + 16) = v11;
    return;
  }
  uint64_t v7 = (uint64_t *)sub_2446D18A4(a3);
  uint64_t v8 = *v7;
  uint64_t v9 = v7[1];
  int v12 = 0;
  *(void *)(a4 + 8) = 0;
  *(void *)(a4 + 16) = 0;
  *(void *)a4 = 0;
  sub_244CB7594(a1, a2, 22, &v12, a4);
  if (*(_DWORD *)a4) {
    return;
  }
  if (!v9)
  {
LABEL_7:
    *(void *)a4 = 0;
    *(void *)(a4 + 8) = 0;
    *(void *)(a4 + 16) = 0;
    sub_244CB7708((uint64_t)a1, v12, a4);
    if (*(_DWORD *)a4) {
      return;
    }
    *(_DWORD *)a4 = 0;
    *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/List.h";
    int v11 = 86;
    goto LABEL_10;
  }
  uint64_t v10 = 48 * v9;
  while (1)
  {
    *(void *)a4 = 0;
    *(void *)(a4 + 8) = 0;
    *(void *)(a4 + 16) = 0;
    sub_244835DDC(v8, a1, 256, a4);
    if (*(_DWORD *)a4) {
      break;
    }
    v8 += 48;
    v10 -= 48;
    if (!v10) {
      goto LABEL_7;
    }
  }
}

void sub_24484D8BC(void *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X2>, uint64_t a4@<X8>)
{
  if (*a3)
  {
    uint64_t v7 = sub_2446D18A4(a3);
    sub_244835B8C((uint64_t)v7, a1, a2, a4);
  }
  else
  {
    *(_DWORD *)a4 = 0;
    *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    *(_DWORD *)(a4 + 16) = 171;
  }
}

void sub_24484D940(char *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X2>, uint64_t a4@<X8>)
{
  if (*a3)
  {
    uint64_t v7 = sub_2446D18A4(a3);
    sub_244836920(v7, a1, a2, a4);
  }
  else
  {
    *(_DWORD *)a4 = 0;
    *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    *(_DWORD *)(a4 + 16) = 171;
  }
}

void sub_24484D9C4(char *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X2>, uint64_t a4@<X8>)
{
  if (*a3)
  {
    uint64_t v7 = sub_2446D18A4(a3);
    sub_244836048((uint64_t)v7, a1, a2, a4);
  }
  else
  {
    *(_DWORD *)a4 = 0;
    *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    *(_DWORD *)(a4 + 16) = 171;
  }
}

void sub_24484DA48(char *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X2>, uint64_t a4@<X8>)
{
  if (*a3)
  {
    uint64_t v7 = sub_2446D18A4(a3);
    sub_244836BB8((uint64_t)v7, a1, a2, a4);
  }
  else
  {
    *(_DWORD *)a4 = 0;
    *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    *(_DWORD *)(a4 + 16) = 171;
  }
}

void sub_24484DACC(char *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X2>, uint64_t a4@<X8>)
{
  if (*a3)
  {
    uint64_t v7 = sub_2446D18A4(a3);
    sub_2447EE638((uint64_t)v7, a1, a2, a4);
  }
  else
  {
    *(_DWORD *)a4 = 0;
    *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    *(_DWORD *)(a4 + 16) = 171;
  }
}

void sub_24484DB50(char *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X2>, uint64_t a4@<X8>)
{
  if (!*a3)
  {
    *(_DWORD *)a4 = 0;
    *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    int v11 = 171;
LABEL_10:
    *(_DWORD *)(a4 + 16) = v11;
    return;
  }
  uint64_t v7 = (uint64_t *)sub_2446D18A4(a3);
  uint64_t v8 = *v7;
  uint64_t v9 = v7[1];
  int v12 = 0;
  *(void *)(a4 + 8) = 0;
  *(void *)(a4 + 16) = 0;
  *(void *)a4 = 0;
  sub_244CB7594(a1, a2, 22, &v12, a4);
  if (*(_DWORD *)a4) {
    return;
  }
  if (!v9)
  {
LABEL_7:
    *(void *)a4 = 0;
    *(void *)(a4 + 8) = 0;
    *(void *)(a4 + 16) = 0;
    sub_244CB7708((uint64_t)a1, v12, a4);
    if (*(_DWORD *)a4) {
      return;
    }
    *(_DWORD *)a4 = 0;
    *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/List.h";
    int v11 = 86;
    goto LABEL_10;
  }
  uint64_t v10 = 72 * v9;
  while (1)
  {
    *(void *)a4 = 0;
    *(void *)(a4 + 8) = 0;
    *(void *)(a4 + 16) = 0;
    sub_2447EEADC(v8, a1, 256, a4);
    if (*(_DWORD *)a4) {
      break;
    }
    v8 += 72;
    v10 -= 72;
    if (!v10) {
      goto LABEL_7;
    }
  }
}

void sub_24484DC5C(unsigned char *a1@<X2>, uint64_t a2@<X8>)
{
  if (!*a1)
  {
    *(_DWORD *)a2 = 0;
    *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    int v3 = 171;
    goto LABEL_5;
  }
  if (*sub_2446F9190(a1) == 3)
  {
    *(_DWORD *)a2 = 1415;
    *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    int v3 = 75;
LABEL_5:
    *(_DWORD *)(a2 + 16) = v3;
    return;
  }

  sub_244CB68B8();
}

void sub_24484DD08(unsigned char *a1@<X2>, uint64_t a2@<X8>)
{
  if (*a1)
  {
    int v3 = sub_2446F9190(a1);
    sub_2447FB010(v3, a2);
  }
  else
  {
    *(_DWORD *)a2 = 0;
    *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    *(_DWORD *)(a2 + 16) = 171;
  }
}

void sub_24484DD90(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (*(unsigned char *)(a3 + 64)) {
    sub_2448430C4(a3, a1, a2, a4);
  }
  else {
    sub_244CB710C();
  }
}

void sub_24484DDB8(char *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X2>, uint64_t a4@<X8>)
{
  if (*a3)
  {
    uint64_t v7 = sub_2446F7170(a3);
    sub_2448430C4((uint64_t)v7, a1, a2, a4);
  }
  else
  {
    *(_DWORD *)a4 = 0;
    *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    *(_DWORD *)(a4 + 16) = 171;
  }
}

void sub_24484DE3C(char *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X2>, uint64_t a4@<X8>)
{
  if (*a3)
  {
    uint64_t v7 = sub_2446D18A4(a3);
    sub_24484DD90(a1, a2, (uint64_t)v7, a4);
  }
  else
  {
    *(_DWORD *)a4 = 0;
    *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    *(_DWORD *)(a4 + 16) = 171;
  }
}

void sub_24484DEC4(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  if (*(unsigned char *)(a3 + 16))
  {
    int v6 = *(unsigned char **)a3;
    uint64_t v7 = *(void *)(a3 + 8);
    int v11 = 0;
    a4[1] = 0;
    a4[2] = 0;
    *a4 = 0;
    sub_244CB7594(a1, a2, 22, &v11, (uint64_t)a4);
    if (*(_DWORD *)a4) {
      return;
    }
    if (v7)
    {
      uint64_t v8 = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
      while (1)
      {
        *a4 = 0;
        a4[1] = 0;
        a4[2] = 0;
        if (*v6 == 4) {
          break;
        }
        sub_244CB68B8();
        if (*(_DWORD *)a4) {
          return;
        }
        ++v6;
        if (!--v7) {
          goto LABEL_8;
        }
      }
      int v10 = 75;
      int v9 = 1415;
    }
    else
    {
LABEL_8:
      *a4 = 0;
      a4[1] = 0;
      a4[2] = 0;
      sub_244CB7708((uint64_t)a1, v11, (uint64_t)a4);
      if (*(_DWORD *)a4) {
        return;
      }
      int v9 = 0;
      int v10 = 86;
      uint64_t v8 = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/List.h";
    }
    *(_DWORD *)a4 = v9;
    a4[1] = v8;
    *((_DWORD *)a4 + 4) = v10;
  }
  else
  {
    sub_244CB710C();
  }
}

void sub_24484DFF0(void *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X2>, void *a4@<X8>)
{
  if (*a3)
  {
    uint64_t v7 = sub_2446D18A4(a3);
    uint64_t v8 = *(unsigned char **)v7;
    uint64_t v9 = *((void *)v7 + 1);
    int v13 = 0;
    a4[1] = 0;
    a4[2] = 0;
    *a4 = 0;
    sub_244CB7594(a1, a2, 22, &v13, (uint64_t)a4);
    if (*(_DWORD *)a4) {
      return;
    }
    if (v9)
    {
      int v10 = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
      while (1)
      {
        *a4 = 0;
        a4[1] = 0;
        a4[2] = 0;
        if (*v8 == 4) {
          break;
        }
        sub_244CB68B8();
        if (*(_DWORD *)a4) {
          return;
        }
        ++v8;
        if (!--v9) {
          goto LABEL_8;
        }
      }
      int v12 = 75;
      int v11 = 1415;
    }
    else
    {
LABEL_8:
      *a4 = 0;
      a4[1] = 0;
      a4[2] = 0;
      sub_244CB7708((uint64_t)a1, v13, (uint64_t)a4);
      if (*(_DWORD *)a4) {
        return;
      }
      int v11 = 0;
      int v12 = 86;
      int v10 = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/List.h";
    }
    *(_DWORD *)a4 = v11;
    a4[1] = v10;
  }
  else
  {
    *(_DWORD *)a4 = 0;
    a4[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    int v12 = 171;
  }
  *((_DWORD *)a4 + 4) = v12;
}

void sub_24484E114(void *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X2>, uint64_t a4@<X8>)
{
  if (*a3)
  {
    uint64_t v7 = sub_2446D18A4(a3);
    sub_24484DEC4(a1, a2, (uint64_t)v7, (void *)a4);
  }
  else
  {
    *(_DWORD *)a4 = 0;
    *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    *(_DWORD *)(a4 + 16) = 171;
  }
}

void sub_24484E19C(char *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X2>, uint64_t a4@<X8>)
{
  if (*a3)
  {
    uint64_t v7 = sub_2446D18A4(a3);
    sub_2447EFABC((uint64_t)v7, a1, a2, a4);
  }
  else
  {
    *(_DWORD *)a4 = 0;
    *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    *(_DWORD *)(a4 + 16) = 171;
  }
}

uint64_t sub_24484E220@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = 0;
  a3[1] = 0;
  a3[2] = 0;
  *a3 = 0;
  uint64_t result = sub_244CB3EFC(a1, &v6, (uint64_t)a3);
  if (!*(_DWORD *)a3)
  {
    *a2 = v6;
    *(_DWORD *)a3 = 0;
    a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/lib/core/TLVReader.h";
    *((_DWORD *)a3 + 4) = 534;
  }
  return result;
}

uint64_t sub_24484E288(unsigned int a1, unsigned int a2, unsigned int a3)
{
  sub_244D6A434("/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/reporting/reporting.cpp", 31);
  uint64_t v6 = sub_2448567A4();

  return sub_2448567C8(a1, a2, a3, (uint64_t)v6);
}

uint64_t sub_24484E2EC(unsigned __int16 *a1)
{
  sub_244D6A434("/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/reporting/reporting.cpp", 40);
  unsigned int v2 = *a1;
  unsigned int v4 = *((_DWORD *)a1 + 1);
  unsigned int v3 = *((_DWORD *)a1 + 2);
  unsigned int v5 = sub_2448567A4();

  return sub_2448567C8(v2, v4, v3, (uint64_t)v5);
}

uint64_t sub_24484E350(__int16 a1)
{
  sub_244D6A434("/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/reporting/reporting.cpp", 50);
  unsigned int v2 = sub_2448567A4();

  return sub_244856744(a1, (uint64_t)v2);
}

void sub_24484E480(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24484E640(_Unwind_Exception *a1)
{
  unsigned int v5 = v4;

  _Unwind_Resume(a1);
}

void sub_24484E678(void *a1@<X0>, _OWORD *a2@<X1>, _OWORD *a3@<X2>, void *a4@<X8>)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  id v7 = a1;
  v19[0] = 0;
  v19[1] = 0;
  v18[0] = 0;
  v18[1] = 0;
  v17[0] = 0;
  v17[1] = 0;
  a4[1] = 0;
  a4[2] = 0;
  *a4 = 0;
  id v8 = v7;
  uint64_t v11 = objc_msgSend_bytes(v8, v9, v10);
  uint64_t v14 = objc_msgSend_length(v8, v12, v13);
  sub_2446C1098(&v20, v11, v14);

  *(_OWORD *)buf = v20;
  sub_244D9C950((uint64_t)buf, a2, a3, v19, v18, v17, (uint64_t)a4);
  if (*(_DWORD *)a4)
  {
    uint64_t v15 = sub_244CC8484(0, "NotSpecified");
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
    {
      long long v20 = *(_OWORD *)a4;
      uint64_t v21 = a4[2];
      uint64_t v16 = sub_244CB7B34((const char **)&v20, 1);
      *(_DWORD *)buf = 138412546;
      *(void *)&buf[4] = v8;
      *(_WORD *)&buf[12] = 2080;
      *(void *)&buf[14] = v16;
      _os_log_impl(&dword_2446BD000, v15, OS_LOG_TYPE_ERROR, "Failed to parse csrElementsTLV %@: %s", buf, 0x16u);
    }

    if (sub_244CC4E58(1u))
    {
      long long v20 = *(_OWORD *)a4;
      uint64_t v21 = a4[2];
      sub_244CB7B34((const char **)&v20, 1);
      sub_244CC4DE0(0, 1);
    }
  }
}

void sub_24484E824(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24484E93C(_Unwind_Exception *a1)
{
  unsigned int v5 = v4;

  _Unwind_Resume(a1);
}

void sub_24484E9E8(_Unwind_Exception *a1)
{
  unsigned int v4 = v3;

  _Unwind_Resume(a1);
}

void sub_24484EB78(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24484ECC4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24484EDF8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24484F1A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24484F298(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24484F3EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24484F4B0(uint64_t a1, void *a2)
{
  id v4 = a2;
  if (objc_opt_respondsToSelector()) {
    objc_msgSend_controller_suspendedChangedTo_(v4, v3, *(void *)(a1 + 32), *(unsigned __int8 *)(a1 + 40));
  }
}

void sub_24484F514(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24484F8CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24484FCE8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24484FEA0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24485003C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2448501D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244850374(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244850510(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2448506AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244850808(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244850964(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244850ABC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244850C58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244850CD8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244850E58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244850F1C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v2);

  _Unwind_Resume(a1);
}

void sub_2448510BC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v2);
  _Unwind_Resume(a1);
}

void sub_244851244(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244851458(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  sub_244855660((uint64_t *)va);

  _Unwind_Resume(a1);
}

void sub_2448515DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244851738(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2448518D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244851AC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244851C90(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244851E64(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244852058(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244852234(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244852468(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244852484(uint64_t a1, const char *a2)
{
  uint64_t result = objc_msgSend_checkIsRunning_(*(void **)(a1 + 32), a2, *(void *)(a1 + 48));
  if (result)
  {
    id v4 = *(uint64_t (**)(void))(*(void *)(a1 + 40) + 16);
    return v4();
  }
  return result;
}

void sub_244852604(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  _Block_object_dispose(&a15, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_244852634(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_244852644(uint64_t a1)
{
}

void sub_24485264C(uint64_t a1)
{
  uint64_t v2 = (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_244852784(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, ...)
{
  va_start(va, a7);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_2448527AC(uint64_t a1)
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = result;
  return result;
}

void sub_244852A4C(_Unwind_Exception *a1)
{
  objc_sync_exit(v3);

  _Unwind_Resume(a1);
}

void sub_244852D00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, ...)
{
  va_start(va, a11);
  uint64_t v16 = v15;

  _Block_object_dispose(va, 8);
  objc_sync_exit(v12);

  _Unwind_Resume(a1);
}

void sub_244852D68(uint64_t a1, void *a2, uint64_t a3)
{
  id v4 = objc_msgSend_delegate(a2, (const char *)a2, a3);
  unsigned int v5 = *(void **)(a1 + 32);

  if (v4 == v5) {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 1;
  }
}

void sub_24485305C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id a24)
{
  v27 = v26;

  _Block_object_dispose(&a19, 8);
  objc_sync_exit(v24);

  _Unwind_Resume(a1);
}

void sub_2448530C8(uint64_t a1, void *a2)
{
  id v8 = a2;
  uint64_t v6 = objc_msgSend_delegate(v8, v4, v5);
  id v7 = *(void **)(a1 + 32);

  if (v6 == v7) {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
  }
}

void sub_244853148(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448531C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
  _Unwind_Resume(a1);
}

void sub_244853500(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id obj)
{
  objc_sync_exit(obj);

  _Unwind_Resume(a1);
}

void sub_2448536E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  _Unwind_Resume(a1);
}

void sub_244853710(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v6 = objc_msgSend_delegate(v3, v4, v5);
  uint64_t v9 = objc_msgSend_queue(v3, v7, v8);
  v12[0] = MEMORY[0x263EF8330];
  v12[1] = 3221225472;
  v12[2] = sub_244853800;
  v12[3] = &unk_265194F48;
  id v10 = *(id *)(a1 + 32);
  id v13 = v6;
  id v14 = v10;
  id v11 = v6;
  dispatch_async(v9, v12);
}

void sub_2448537E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244853800(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

void sub_2448538B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_2448538CC(uint64_t a1, void *a2)
{
  id v4 = a2;
  if (objc_opt_respondsToSelector()) {
    objc_msgSend_controller_statusUpdate_(v4, v3, *(void *)(a1 + 32), *(void *)(a1 + 40));
  }
}

void sub_24485392C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244853A04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_244853A28(uint64_t a1, void *a2)
{
  id v4 = a2;
  if (objc_opt_respondsToSelector()) {
    objc_msgSend_controller_commissioningSessionEstablishmentDone_(v4, v3, *(void *)(a1 + 32), *(void *)(a1 + 40));
  }
}

void sub_244853A88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244853BAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, void *a15, void *a16)
{
  _Unwind_Resume(a1);
}

void sub_244853BE8(uint64_t *a1, void *a2)
{
  id v6 = a2;
  if (objc_opt_respondsToSelector())
  {
    objc_msgSend_controller_commissioningComplete_nodeID_metrics_(v6, v3, a1[4], a1[5], a1[6], a1[7]);
  }
  else if (objc_opt_respondsToSelector())
  {
    objc_msgSend_controller_commissioningComplete_nodeID_(v6, v4, a1[4], a1[5], a1[6]);
  }
  else if (objc_opt_respondsToSelector())
  {
    objc_msgSend_controller_commissioningComplete_(v6, v5, a1[4], a1[5]);
  }
}

void sub_244853C98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244853D70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_244853D94(uint64_t a1, void *a2)
{
  id v4 = a2;
  if (objc_opt_respondsToSelector()) {
    objc_msgSend_controller_readCommissioningInfo_(v4, v3, *(void *)(a1 + 32), *(void *)(a1 + 40));
  }
}

void sub_244853DF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448540E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2448541C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244854230(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448542A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244854324(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448543A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244854454(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2448546DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, _Unwind_Exception *exception_object, void *a13, void *a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  _Unwind_Resume(a1);
}

void sub_2448547B8()
{
}

void sub_2448547C0(uint64_t a1, void *a2, void *a3, void *a4, uint64_t a5, void *a6, void *a7)
{
  id v18 = a2;
  id v12 = a3;
  id v13 = a4;
  id v14 = a6;
  uint64_t v15 = [MTROperationalCertificateChain alloc];
  uint64_t v17 = objc_msgSend_initWithOperationalCertificate_intermediateCertificate_rootCertificate_adminSubject_(v15, v16, (uint64_t)v18, v12, v13, v14);
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  if (a7) {
    *a7 = 0;
  }
}

void sub_244854890(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24485493C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244854A84(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244854C20(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244854DBC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244854F58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244854FF0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244855068(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2448550E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244855270(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24485540C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2448554E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244855590(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24485563C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

uint64_t *sub_244855660(uint64_t *a1)
{
  uint64_t v2 = *a1;
  id v3 = (int *)a1[1];
  int v5 = 1;
  uint64_t v6 = v2;
  int v7 = *v3;
  char v8 = 3;
  sub_244D7E78C((uint64_t)&v5);
  return a1;
}

void sub_244855718(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

__n128 sub_2448557A8()
{
  word_268EBE920 = 0;
  v0 = &xmmword_268EB86C2;
  uint64_t v1 = 254;
  do
  {
    memset(&v3[6], 0, 23);
    memset(&v3[3], 0, 23);
    memset(v3, 0, 22);
    *((_WORD *)v0 - 25) = -1;
    *(v0 - 3) = *(_OWORD *)&v3[6];
    *(void *)((char *)v0 - 33) = *(void *)((char *)&v3[7] + 7);
    *(void *)((char *)v0 - 10) = 0;
    *(long long *)((char *)v0 - 25) = *(_OWORD *)&v3[3];
    *((_WORD *)v0 - 1) = -1;
    __n128 result = *(__n128 *)v3;
    *(void *)((char *)v0 + 14) = 0;
    long long *v0 = *(_OWORD *)v3;
    v0 = (long long *)((char *)v0 + 72);
    --v1;
  }
  while (v1);
  return result;
}

uint64_t sub_244855888(uint64_t result)
{
  word_268EBE920 = result;
  return result;
}

uint64_t sub_244855894(int a1)
{
  LOWORD(v1) = -1;
  if (a1 != 0xFFFF)
  {
    uint64_t v1 = 0;
    uint64_t v2 = &word_268EB8690;
    while (1)
    {
      int v3 = (unsigned __int16)*v2;
      v2 += 36;
      if (v3 == a1) {
        break;
      }
      if (++v1 == 254)
      {
        LOWORD(v1) = -1;
        return (unsigned __int16)v1;
      }
    }
  }
  return (unsigned __int16)v1;
}

uint64_t sub_2448558D0@<X0>(uint64_t result@<X0>, int a2@<W1>, unsigned __int8 *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, __int16 a7@<W6>, uint64_t a8@<X8>)
{
  if (result > 0xFD)
  {
    int v9 = 277;
LABEL_12:
    int v16 = 11;
    goto LABEL_13;
  }
  if (a2 == 0xFFFF)
  {
    int v9 = 281;
    int v16 = 47;
  }
  else
  {
    if (a3[8])
    {
      uint64_t v12 = 0;
      unint64_t v13 = (unint64_t)a3[8] << 6;
      id v14 = (unsigned __int8 *)(*(void *)a3 + 20);
      do
      {
        unsigned int v15 = *v14;
        v14 += 64;
        v12 += ((unint64_t)v15 >> 6) & 1;
        v13 -= 64;
      }
      while (v13);
      LODWORD(v12) = v12;
    }
    else
    {
      LODWORD(v12) = 0;
    }
    if (*(void *)(a4 + 8) < (unint64_t)v12)
    {
      int v9 = 287;
      goto LABEL_12;
    }
    uint64_t v17 = 254;
    id v18 = word_268EB8690;
    do
    {
      int v19 = (unsigned __int16)*v18;
      v18 += 36;
      if (v19 == a2)
      {
        int v9 = 295;
        int v16 = 127;
        goto LABEL_13;
      }
      --v17;
    }
    while (v17);
    long long v20 = &word_268EB8690[36 * result];
    *long long v20 = a2;
    *((void *)v20 + 1) = a5;
    *((void *)v20 + 2) = a6;
    *((void *)v20 + 4) = a3;
    uint64_t v21 = *(char **)a4;
    *((void *)v20 + 5) = *(void *)a4;
    *((unsigned char *)v20 + 24) &= ~1u;
    v20[24] = a7;
    word_268EBE920 = 254;
    if (v12)
    {
      unint64_t v22 = 4 * v12;
      sub_244CECD5C(v21, v22, (uint64_t)v23);
      if (v23[0]) {
        bzero(*(void **)a4, v22);
      }
    }
    __n128 result = sub_244855A4C(a2, 1);
    int v16 = 0;
    ++dword_268EBE924;
    int v9 = 324;
  }
LABEL_13:
  *(_DWORD *)a8 = v16;
  *(void *)(a8 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/util/attribute-storage.cpp";
  *(_DWORD *)(a8 + 16) = v9;
  return result;
}

uint64_t sub_244855A4C(int a1, int a2)
{
  if (a1 == 0xFFFF) {
    return 0;
  }
  uint64_t v26 = v2;
  uint64_t v27 = v3;
  uint64_t v5 = (unsigned __int16)word_268EBE920;
  if (!word_268EBE920) {
    return 0;
  }
  __int16 v6 = a1;
  uint64_t v7 = 0xFFFFLL;
  for (int i = word_268EB8690; (unsigned __int16)*i != a1; i += 36)
  {
    --v7;
    if (!--v5) {
      return 0;
    }
  }
  if (!v7) {
    return 0;
  }
  char v9 = *((unsigned char *)i + 24);
  if (a2)
  {
    *((unsigned char *)i + 24) = v9 | 1;
    if ((v9 & 1) == 0)
    {
      sub_244855FD8((uint64_t)i);
      uint64_t v23 = -1;
      __int16 v24 = v6;
      __int16 v25 = -1;
      (*((void (**)(_UNKNOWN **, uint64_t *))off_26BA163A8 + 2))(&off_26BA163A8, &v23);
LABEL_25:
      for (int j = (unsigned __int16)i[24]; j != 0xFFFF; int j = (unsigned __int16)word_268EB8690[36 * v22 + 24])
      {
        int v21 = (unsigned __int16)j;
        sub_2448567C8((unsigned __int16)j, 0x1Du, 3u, (uint64_t)&off_26BA163A8);
        int v22 = sub_2448562B0(v21);
        if (v22 == 0xFFFF) {
          break;
        }
      }
      sub_2448567C8(0, 0x1Du, 3u, (uint64_t)&off_26BA163A8);
    }
  }
  else if (i[12])
  {
    uint64_t v10 = *((void *)i + 4);
    unsigned int v11 = *(unsigned __int8 *)(v10 + 8);
    if (*(unsigned char *)(v10 + 8))
    {
      unint64_t v12 = 0;
      do
      {
        int v13 = *(unsigned __int8 *)(*(void *)v10 + (v12 << 6) + 20);
        if ((v13 & 0x10) != 0)
        {
          unsigned __int8 v14 = 0;
          unsigned int v15 = 1;
          int v16 = 1;
          do
          {
            if ((v16 & v13) != 0) {
              ++v14;
            }
            int v16 = 2 * v15;
            unsigned int v15 = (2 * v15) & 0xFE;
          }
          while (v15 < 0x10);
          uint64_t v17 = *(void (**)(void))(*(void *)(*(void *)v10 + (v12 << 6) + 24) + 8 * v14);
          if (v17)
          {
            v17((unsigned __int16)*i);
            unsigned int v11 = *(unsigned __int8 *)(v10 + 8);
          }
        }
        ++v12;
      }
      while (v12 < v11);
    }
    id v18 = sub_244DD5868();
    sub_244DD59A0(v18, (unsigned __int16)*i);
    int v19 = sub_244CB24F4();
    sub_244CB25CC(v19, (unsigned __int16)*i);
    *((unsigned char *)i + 24) &= ~1u;
    goto LABEL_25;
  }
  ++dword_268EBE924;
  return 1;
}

uint64_t sub_244855C60(unsigned int a1)
{
  if (a1 <= 0xFD
    && (v1 = &word_268EB8690[36 * a1], uint64_t v2 = (unsigned __int16)*v1, v2 != 0xFFFF)
    && (word_268EB8690[36 * a1 + 12] & 1) != 0)
  {
    sub_244855A4C((unsigned __int16)*v1, 0);
    __int16 *v1 = -1;
  }
  else
  {
    uint64_t v2 = 0;
  }
  ++dword_268EBE924;
  return v2;
}

uint64_t sub_244855CE8(int a1)
{
  return word_268EB8690[36 * a1 + 12] & 1;
}

uint64_t sub_244855D04()
{
  return 0;
}

uint64_t sub_244855D0C()
{
  return (unsigned __int16)word_268EBE920;
}

uint64_t sub_244855D18(unsigned __int16 *a1)
{
  uint64_t result = sub_244855D80(*a1, *((_DWORD *)a1 + 1));
  if (result)
  {
    if ((*(unsigned char *)(result + 20) & 2) != 0)
    {
      uint64_t v3 = *(uint64_t (**)(unsigned __int16 *))(*(void *)(result + 24) + 8 * (*(unsigned char *)(result + 20) & 1));
      if (v3)
      {
        return v3(a1);
      }
    }
  }
  return result;
}

uint64_t sub_244855D80(int a1, int a2)
{
  int v3 = sub_2448562B0(a1);
  if (v3 == 0xFFFF) {
    return 0;
  }
  id v4 = *(uint64_t **)&word_268EB8690[36 * v3 + 16];
  uint64_t v5 = *((unsigned __int8 *)v4 + 8);
  if (!*((unsigned char *)v4 + 8)) {
    return 0;
  }
  for (uint64_t result = *v4; (*(unsigned char *)(result + 20) & 0x40) == 0 || *(_DWORD *)result != a2; result += 64)
  {
    if (!--v5) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_244855DF4(uint64_t a1, unsigned int a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 20);
  if ((v2 & a2) == 0) {
    return 0;
  }
  if (a2 < 2)
  {
    uint64_t v6 = 0;
  }
  else
  {
    unsigned __int8 v3 = 0;
    unsigned int v4 = 1;
    int v5 = 1;
    do
    {
      if ((v5 & v2) != 0) {
        ++v3;
      }
      int v5 = 2 * v4;
      unsigned int v4 = (2 * v4) & 0xFE;
    }
    while (v4 < a2);
    uint64_t v6 = v3;
  }
  return *(void *)(*(void *)(a1 + 24) + 8 * v6);
}

uint64_t sub_244855E4C(unsigned __int16 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v8 = *a1;
  uint64_t v9 = sub_244855D80(v8, *((_DWORD *)a1 + 1));
  if (!v9)
  {
    if (v8 == 0xFFFF) {
      return 127;
    }
    uint64_t v17 = (unsigned __int16)word_268EBE920;
    if (!word_268EBE920)
    {
      return 127;
    }
    else
    {
      id v18 = word_268EB8690;
      uint64_t v19 = 0xFFFFLL;
      while ((unsigned __int16)*v18 != v8)
      {
        v18 += 36;
        --v19;
        if (!--v17) {
          return 127;
        }
      }
      unsigned __int8 v16 = 127;
      if (v19)
      {
        if (v18[12]) {
          return -61;
        }
        else {
          return 127;
        }
      }
    }
    return v16;
  }
  int v10 = *(unsigned __int8 *)(v9 + 20);
  if ((v10 & 0x20) == 0) {
    return 0;
  }
  unsigned __int8 v11 = 0;
  unsigned int v12 = 1;
  int v13 = 1;
  do
  {
    if ((v13 & v10) != 0) {
      ++v11;
    }
    int v13 = 2 * v12;
    unsigned int v12 = (2 * v12) & 0xFE;
  }
  while (v12 < 0x20);
  unsigned __int8 v14 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 + 24) + 8 * v11);
  if (!v14) {
    return 0;
  }

  return v14(a1, a2, a3, a4);
}

uint64_t sub_244855F78()
{
  unsigned int v0 = (unsigned __int16)word_268EBE920;
  if (word_268EBE920)
  {
    unint64_t v1 = 0;
    int v2 = word_268EB8690;
    do
    {
      if (v2[12])
      {
        uint64_t result = sub_244855FD8((uint64_t)v2);
        unsigned int v0 = (unsigned __int16)word_268EBE920;
      }
      v2 += 36;
      ++v1;
    }
    while (v1 < v0);
  }
  return result;
}

uint64_t sub_244855FD8(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 32);
  if (*(unsigned char *)(v1 + 8))
  {
    int v2 = (unsigned __int16 *)result;
    uint64_t v3 = 0;
    unint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)v1 + v3;
      uint64_t result = sub_2446CD4D0();
      if (*(unsigned char *)(v5 + 20))
      {
        uint64_t v6 = **(uint64_t (***)(void))(v5 + 24);
        if (v6) {
          uint64_t result = v6(*v2);
        }
      }
      ++v4;
      v3 += 64;
    }
    while (v4 < *(unsigned __int8 *)(v1 + 8));
  }
  return result;
}

uint64_t sub_244856060(unsigned __int16 a1, int a2, int a3)
{
  uint64_t v7 = 0;
  unsigned __int16 v4 = a1;
  int v5 = a2;
  int v6 = a3;
  sub_2448560A4(&v4, &v7, 0, 0, 0);
  return v7;
}

uint64_t sub_2448560A4(unsigned __int16 *a1, void *a2, uint64_t a3, uint64_t a4, int a5)
{
  sub_244D6A434("/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/util/attribute-storage.cpp", 581);
  uint64_t v9 = (unsigned __int16)word_268EBE920;
  if (!word_268EBE920) {
    return 127;
  }
  for (int i = &qword_268EB86B0; *((unsigned __int16 *)i - 16) != *a1 || (*(unsigned char *)(i - 1) & 1) == 0; i += 9)
  {
    if (!--v9) {
      return 127;
    }
  }
  unsigned int v12 = (unsigned __int8 *)*i;
  uint64_t v13 = v12[8];
  if (!v12[8]) {
    return 195;
  }
  for (int j = (unsigned __int16 *)(*(void *)v12 + 16);
        *((_DWORD *)j - 4) != *((_DWORD *)a1 + 1) || (j[2] & 0x40) == 0;
        j += 32)
  {
    if (!--v13) {
      return 195;
    }
  }
  if (!*j) {
    return 134;
  }
  unint64_t v15 = 0;
  uint64_t v16 = *((void *)j - 1);
  uint64_t result = 134;
  while (*(_DWORD *)(v16 + 8) != *((_DWORD *)a1 + 2))
  {
    ++v15;
    v16 += 16;
    if (v15 >= *j) {
      return result;
    }
  }
  if (a2) {
    *a2 = v16;
  }
  if (a5)
  {
    if (sub_24485780C())
    {
      if ((*(unsigned char *)(v16 + 15) & 0x10) != 0)
      {
        return sub_24485780C();
      }
      return 1;
    }
    return 126;
  }
  if (a3)
  {
    if (sub_24485780C())
    {
      if ((*(unsigned char *)(v16 + 15) & 0x10) != 0)
      {
        return sub_24485780C();
      }
      return 1;
    }
    return 126;
  }
  return 0;
}

uint64_t sub_244856270(int a1)
{
  int v1 = sub_2448562B0(a1);
  if (v1 == 0xFFFF) {
    return 0;
  }
  else {
    return *(void *)&word_268EB8690[36 * v1 + 16];
  }
}

uint64_t sub_2448562B0(int a1)
{
  LOWORD(v1) = -1;
  if (a1 != 0xFFFF)
  {
    if (word_268EBE920)
    {
      uint64_t v1 = 0;
      int v2 = word_268EB8690;
      while ((unsigned __int16)*v2 != a1 || (v2[12] & 1) == 0)
      {
        ++v1;
        v2 += 36;
        if ((unsigned __int16)word_268EBE920 == v1) {
          goto LABEL_7;
        }
      }
    }
    else
    {
LABEL_7:
      LOWORD(v1) = -1;
    }
  }
  return (unsigned __int16)v1;
}

uint64_t sub_244856304(uint64_t *a1, int a2, int a3, unsigned char *a4)
{
  uint64_t v4 = *((unsigned __int8 *)a1 + 8);
  if (!*((unsigned char *)a1 + 8)) {
    return 0;
  }
  char v5 = 0;
  for (uint64_t result = *a1; ; result += 64)
  {
    if (a3 && (*(unsigned char *)(result + 20) & a3) == 0) {
      goto LABEL_7;
    }
    if (*(_DWORD *)result == a2) {
      break;
    }
    ++v5;
LABEL_7:
    if (!--v4) {
      return 0;
    }
  }
  if (a4) {
    *a4 = v5;
  }
  return result;
}

uint64_t sub_244856354(int a1, int a2, int a3)
{
  if (word_268EBE920)
  {
    uint64_t v3 = 0;
    do
    {
      if ((unsigned __int16)word_268EB8690[36 * v3] == a1)
      {
        uint64_t v4 = *(uint64_t **)&word_268EB8690[36 * v3 + 16];
        uint64_t v5 = *((unsigned __int8 *)v4 + 8);
        if (*((unsigned char *)v4 + 8))
        {
          unsigned __int8 v6 = 0;
          uint64_t v7 = *v4;
          do
          {
            if (!a3 || (*(unsigned char *)(v7 + 20) & a3) != 0)
            {
              if (*(_DWORD *)v7 == a2) {
                return v6;
              }
              ++v6;
            }
            v7 += 64;
            --v5;
          }
          while (v5);
        }
      }
      ++v3;
    }
    while (v3 != (unsigned __int16)word_268EBE920);
  }
  return -1;
}

BOOL sub_2448563DC(int a1, int a2)
{
  return sub_244855D80(a1, a2) != 0;
}

uint64_t sub_2448563FC(int a1, int a2)
{
  int v3 = sub_2448562B0(a1);
  if (v3 == 0xFFFF) {
    return 0;
  }
  uint64_t v4 = *(uint64_t **)&word_268EB8690[36 * v3 + 16];
  uint64_t v5 = *((unsigned __int8 *)v4 + 8);
  if (!*((unsigned char *)v4 + 8)) {
    return 0;
  }
  for (uint64_t i = *v4; (*(char *)(i + 20) & 0x80000000) == 0 || *(_DWORD *)i != a2; i += 64)
  {
    if (!--v5) {
      return 0;
    }
  }
  return 1;
}

uint64_t sub_244856478(int a1, int a2)
{
  if (a1 == 0xFFFF) {
    return 0;
  }
  int v2 = *(uint64_t **)&word_268EB8690[36 * a1 + 16];
  uint64_t v3 = *((unsigned __int8 *)v2 + 8);
  if (!*((unsigned char *)v2 + 8)) {
    return 0;
  }
  for (uint64_t i = *v2; (*(unsigned char *)(i + 20) & 0x40) == 0 || *(_DWORD *)i != a2; i += 64)
  {
    if (!--v3) {
      return 0;
    }
  }
  return 1;
}

uint64_t sub_2448564D4(uint64_t a1, int a2)
{
  *(_WORD *)a1 = 0;
  *(_WORD *)(a1 + 2) = word_268EBE920;
  *(_DWORD *)(a1 + 4) = a2;
  sub_244856510(a1);
  return a1;
}

uint64_t sub_244856510(uint64_t result)
{
  unsigned int v1 = *(unsigned __int16 *)(result + 2);
  unsigned int v2 = *(unsigned __int16 *)result;
  if (v2 < v1)
  {
    uint64_t v3 = result;
    uint64_t v4 = &word_268EB8690[36 * *(unsigned __int16 *)result + 12];
    do
    {
      char v5 = *(unsigned char *)v4;
      v4 += 36;
      if (v5)
      {
        uint64_t result = sub_244856478((unsigned __int16)v2, *(_DWORD *)(v3 + 4));
        if (result) {
          break;
        }
      }
      LOWORD(v2) = v2 + 1;
      *(_WORD *)uint64_t v3 = v2;
    }
    while (v1 != (unsigned __int16)v2);
  }
  return result;
}

uint64_t sub_244856584(unsigned __int16 *a1)
{
  return (unsigned __int16)word_268EB8690[36 * *a1];
}

uint64_t sub_2448565A0(int a1)
{
  return (unsigned __int16)word_268EB8690[36 * a1];
}

_WORD *sub_2448565B8(_WORD *a1)
{
  return a1;
}

uint64_t sub_2448565EC(int a1, int a2, int a3)
{
  if (a1 == 0xFFFF || !word_268EBE920) {
    return 0;
  }
  uint64_t v3 = 0;
  for (uint64_t i = &qword_268EB86B0; *((unsigned __int16 *)i - 16) != a1; i += 9)
  {
    if ((unsigned __int16)word_268EBE920 == ++v3) {
      return 0;
    }
  }
  if ((unsigned __int16)v3 > 0xFDu) {
    return 0;
  }
  uint64_t v5 = *i;
  uint64_t v6 = *(unsigned __int8 *)(v5 + 8);
  if (!*(unsigned char *)(v5 + 8)) {
    return 0;
  }
  for (uint64_t j = *(void *)v5; a3 && (*(unsigned char *)(j + 20) & a3) == 0 || *(_DWORD *)j != a2; j += 64)
  {
    uint64_t result = 0;
    if (!--v6) {
      return result;
    }
  }
  return j;
}

uint64_t sub_24485668C(int a1, int a2, int a3)
{
  if (a3) {
    sub_244E200B8();
  }
  unsigned __int16 v3 = -1;
  if (a1 == 0xFFFF) {
    return v3;
  }
  if (!word_268EBE920) {
    return (unsigned __int16)-1;
  }
  uint64_t v4 = 0;
  for (uint64_t i = &qword_268EB86B0; *((unsigned __int16 *)i - 16) != a1 || (*(unsigned char *)(i - 1) & 1) == 0; i += 9)
  {
    if ((unsigned __int16)word_268EBE920 == ++v4) {
      return (unsigned __int16)-1;
    }
  }
  unsigned __int16 v3 = -1;
  if ((_WORD)v4 != 0xFFFF)
  {
    uint64_t v7 = (uint64_t *)*i;
    uint64_t v8 = *(unsigned __int8 *)(*i + 8);
    if (v8)
    {
      for (uint64_t j = *v7; (*(unsigned char *)(j + 20) & 0x40) == 0 || *(_DWORD *)j != a2; j += 64)
      {
        unsigned __int16 v3 = -1;
        if (!--v8) {
          return v3;
        }
      }
      return (unsigned __int16)v4;
    }
    return (unsigned __int16)-1;
  }
  return v3;
}

uint64_t sub_244856744(__int16 a1, uint64_t a2)
{
  uint64_t v3 = -1;
  __int16 v4 = a1;
  __int16 v5 = -1;
  return (*(uint64_t (**)(uint64_t, uint64_t *))(*(void *)a2 + 16))(a2, &v3);
}

_UNKNOWN **sub_2448567A4()
{
  return &off_26BA163A8;
}

uint64_t sub_2448567B0(int a1)
{
  return (unsigned __int16)word_268EB8690[36 * a1 + 24];
}

uint64_t sub_2448567C8(unsigned int a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  *(_WORD *)buf = a1;
  unsigned int v16 = a2;
  uint64_t v8 = (int *)sub_24485773C((unsigned __int16 *)buf);
  if (v8)
  {
    uint64_t v9 = v8;
    ++*v8;
    int v10 = sub_244CC8484(0xDu, "DataManagement");
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      int v11 = *v9;
      *(_DWORD *)buf = 67109888;
      unsigned int v16 = a1;
      __int16 v17 = 1024;
      unsigned int v18 = HIWORD(a2);
      __int16 v19 = 1024;
      int v20 = (unsigned __int16)a2;
      __int16 v21 = 1024;
      int v22 = v11;
      _os_log_impl(&dword_2446BD000, v10, OS_LOG_TYPE_INFO, "Endpoint %x, Cluster 0x%04X_%04X update version to %x", buf, 0x1Au);
    }
    if (sub_244CC4E58(3u))
    {
      uint64_t v12 = 3;
LABEL_10:
      sub_244CC4DE0(0xDu, v12);
    }
  }
  else
  {
    uint64_t v13 = sub_244CC8484(0xDu, "DataManagement");
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 67109632;
      unsigned int v16 = a1;
      __int16 v17 = 1024;
      unsigned int v18 = HIWORD(a2);
      __int16 v19 = 1024;
      int v20 = (unsigned __int16)a2;
      _os_log_impl(&dword_2446BD000, v13, OS_LOG_TYPE_ERROR, "Endpoint %x, Cluster 0x%04X_%04X not found in IncreaseClusterDataVersion!", buf, 0x14u);
    }
    if (sub_244CC4E58(1u))
    {
      uint64_t v12 = 1;
      goto LABEL_10;
    }
  }
  *(_DWORD *)buf = a2;
  unsigned int v16 = a3;
  __int16 v17 = a1;
  LOWORD(v18) = -1;
  return (*(uint64_t (**)(uint64_t, uint8_t *))(*(void *)a4 + 16))(a4, buf);
}

uint64_t sub_2448569F0()
{
  return dword_268EBE924;
}

uint64_t sub_2448569FC(int a1, int a2)
{
  int v3 = sub_2448562B0(a1);
  if (v3 != 0xFFFF
    && (__int16 v4 = *(uint64_t **)&word_268EB8690[36 * v3 + 16]) != 0
    && (!a2 ? (int v5 = -128) : (int v5 = 64), *((unsigned char *)v4 + 8)))
  {
    unsigned __int8 v6 = 0;
    uint64_t v7 = *v4;
    unint64_t v8 = (unint64_t)*((unsigned __int8 *)v4 + 8) << 6;
    uint64_t v9 = (unsigned __int8 *)(v7 + 20);
    do
    {
      int v10 = *v9;
      v9 += 64;
      if ((v5 & v10) != 0) {
        ++v6;
      }
      v8 -= 64;
    }
    while (v8);
  }
  else
  {
    return 0;
  }
  return v6;
}

uint64_t sub_244856A8C(int a1)
{
  int v1 = sub_2448562B0(a1);
  if (v1 == 0xFFFF) {
    return 0;
  }
  else {
    return *(unsigned __int8 *)(*(void *)&word_268EB8690[36 * v1 + 16] + 8);
  }
}

uint64_t sub_244856AD0(int a1, uint64_t a2)
{
  int v3 = sub_2448562B0(a1);
  *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/util/attribute-storage.cpp";
  if (v3 == 0xFFFF)
  {
    uint64_t result = 0;
    int v6 = 1030;
    int v4 = 47;
  }
  else
  {
    int v4 = 0;
    uint64_t result = *(void *)&word_268EB8690[36 * v3 + 4];
    int v6 = 1034;
  }
  *(_DWORD *)a2 = v4;
  *(_DWORD *)(a2 + 16) = v6;
  return result;
}

uint64_t sub_244856B44(int a1, uint64_t a2)
{
  *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/util/attribute-storage.cpp";
  if (a1 == 0xFFFF)
  {
    uint64_t result = 0;
    int v3 = 1030;
    int v4 = 47;
  }
  else
  {
    int v4 = 0;
    uint64_t result = *(void *)&word_268EB8690[36 * a1 + 4];
    int v3 = 1034;
  }
  *(_DWORD *)a2 = v4;
  *(_DWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_244856B9C@<X0>(int a1@<W0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result = sub_2448562B0(a1);
  if (result == 0xFFFF || *(void *)&word_268EB8690[36 * result + 32] <= a2)
  {
    int v12 = 1045;
    int v10 = 216;
  }
  else
  {
    uint64_t result = sub_244856C64(&word_268EB8690[36 * result + 28], a2);
    int v8 = *(_DWORD *)result;
    *(_WORD *)(a3 + 4) = *(_WORD *)(result + 4);
    *(_DWORD *)a3 = v8;
    int v9 = *(unsigned __int8 *)(result + 8);
    *(unsigned char *)(a3 + 8) = v9;
    int v10 = 0;
    if (v9)
    {
      long long v11 = *(_OWORD *)(result + 16);
      *(void *)(a3 + 32) = *(void *)(result + 32);
      *(_OWORD *)(a3 + 16) = v11;
    }
    int v12 = 1048;
  }
  *(_DWORD *)a4 = v10;
  *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/util/attribute-storage.cpp";
  *(_DWORD *)(a4 + 16) = v12;
  return result;
}

uint64_t sub_244856C64(void *a1, unint64_t a2)
{
  if (a1[1] <= a2) {
    sub_244E1EF08();
  }
  return *a1 + 40 * a2;
}

uint64_t sub_244856C94@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result = sub_2448562B0(a1);
  if (result == 0xFFFF)
  {
    int v10 = 1056;
    int v8 = 47;
  }
  else
  {
    int v8 = 0;
    int v9 = &word_268EB8690[36 * result];
    *((void *)v9 + 1) = a2;
    *((void *)v9 + 2) = a3;
    int v10 = 1060;
  }
  *(_DWORD *)a4 = v8;
  *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/util/attribute-storage.cpp";
  *(_DWORD *)(a4 + 16) = v10;
  return result;
}

uint64_t sub_244856D10@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result = sub_2448562B0(a1);
  if (result == 0xFFFF)
  {
    int v10 = 1068;
    int v8 = 47;
  }
  else
  {
    int v8 = 0;
    int v9 = &word_268EB8690[36 * result];
    *((void *)v9 + 7) = a2;
    *((void *)v9 + 8) = a3;
    int v10 = 1072;
  }
  *(_DWORD *)a4 = v8;
  *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/util/attribute-storage.cpp";
  *(_DWORD *)(a4 + 16) = v10;
  return result;
}

uint64_t sub_244856D8C(int a1, int a2, int a3)
{
  int v5 = sub_2448562B0(a1);
  if (v5 != 0xFFFF)
  {
    int v6 = *(uint64_t **)&word_268EB8690[36 * v5 + 16];
    uint64_t v7 = *((unsigned __int8 *)v6 + 8);
    if (*((unsigned char *)v6 + 8))
    {
      unsigned __int8 v8 = 0;
      uint64_t result = *v6;
      if (a3) {
        char v10 = 64;
      }
      else {
        char v10 = 0x80;
      }
      do
      {
        if ((v10 & *(unsigned char *)(result + 20)) != 0)
        {
          if (a2 == v8) {
            return result;
          }
          ++v8;
        }
        result += 64;
        --v7;
      }
      while (v7);
    }
  }
  return 0;
}

_DWORD *sub_244856E1C@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t result = (_DWORD *)sub_244856D8C(a1, a2, a3);
  if (result)
  {
    *(_DWORD *)(a4 + 4) = *result;
    char v6 = 1;
  }
  else
  {
    char v6 = 0;
  }
  *(unsigned char *)a4 = v6;
  return result;
}

uint64_t sub_244856E5C(int a1, uint64_t a2, int a3, int a4)
{
  LODWORD(v5) = a3;
  unsigned int v8 = sub_2448569FC(a1, a4);
  if (v8 >= v5) {
    uint64_t v5 = v5;
  }
  else {
    uint64_t v5 = v8;
  }
  if (v5)
  {
    for (uint64_t i = 0; i != v5; ++i)
    {
      char v10 = (int *)sub_244856D8C(a1, i, a4);
      if (v10) {
        int v11 = *v10;
      }
      else {
        int v11 = 0xFFFF;
      }
      *(_DWORD *)(a2 + 4 * i) = v11;
    }
  }
  return v5;
}

uint64_t sub_244856EE4(int a1)
{
  uint64_t v42 = *MEMORY[0x263EF8340];
  v31[0] = 0;
  unsigned int v2 = (unsigned __int16)word_268EBE920;
  uint64_t result = sub_244CA2E2C();
  unsigned int v24 = v2;
  if (v2)
  {
    uint64_t v4 = result;
    uint64_t result = 0;
    int v23 = a1;
    while (1)
    {
      if (a1 != 0xFFFF)
      {
        uint64_t result = sub_2448562B0(a1);
        if (result == 0xFFFF) {
          return result;
        }
      }
      uint64_t v29 = &word_268EB8690[36 * (unsigned __int16)result];
      uint64_t v5 = (uint64_t *)*((void *)v29 + 4);
      uint64_t v25 = result;
      uint64_t v26 = v29 + 16;
      if (*((unsigned char *)v5 + 8)) {
        break;
      }
LABEL_33:
      a1 = v23;
      uint64_t result = v25;
      if (v23 == 0xFFFF)
      {
        uint64_t result = (v25 + 1);
        if (v24 > (unsigned __int16)(v25 + 1)) {
          continue;
        }
      }
      return result;
    }
    uint64_t v6 = 0;
    while (1)
    {
      uint64_t v7 = *v5;
      uint64_t v27 = v6;
      v30 = (int *)(*v5 + (v6 << 6));
      if (!v31[0] || *(_DWORD *)sub_2447A4A8C(v31) == *v30)
      {
        if (*((_WORD *)v30 + 8)) {
          break;
        }
      }
LABEL_32:
      uint64_t v6 = v27 + 1;
      uint64_t v5 = *(uint64_t **)v26;
      if (v27 + 1 >= (unint64_t)*(unsigned __int8 *)(*(void *)v26 + 8)) {
        goto LABEL_33;
      }
    }
    uint64_t v8 = 0;
    unint64_t v9 = 0;
    uint64_t v28 = (uint64_t *)(v7 + (v27 << 6) + 8);
    while (1)
    {
      uint64_t v10 = *v28;
      int v11 = (char *)(*v28 + v8);
      char v12 = v11[15];
      if ((v12 & 0x12) == 2)
      {
        if (!v4) {
          sub_244E20170();
        }
        uint64_t v33 = 0;
        v34[0] = &v35;
        v34[1] = 1;
        long long v32 = 0uLL;
        int v13 = *v30;
        int v14 = *(_DWORD *)(v10 + v8 + 8);
        *(_WORD *)buf = *v29;
        *(_DWORD *)&uint8_t buf[4] = v13;
        *(_DWORD *)&buf[8] = v14;
        buf[2] = 0;
        (*(void (**)(long long *__return_ptr, uint64_t, uint8_t *, char *, void *))(*(void *)v4 + 24))(&v32, v4, buf, v11, v34);
        if (v32)
        {
          unint64_t v15 = sub_244CC8484(0xDu, "DataManagement");
          if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
          {
            int v16 = (unsigned __int16)*v29;
            unsigned int v17 = *v30;
            unsigned int v18 = *(_DWORD *)(v10 + v8 + 8);
            *(_OWORD *)buf = v32;
            *(void *)v37 = v33;
            __int16 v19 = sub_244CB7B34((const char **)buf, 1);
            *(_DWORD *)buf = 67110402;
            *(_DWORD *)&uint8_t buf[4] = v16;
            *(_WORD *)&buf[8] = 1024;
            *(_DWORD *)&buf[10] = HIWORD(v17);
            *(_WORD *)&buf[14] = 1024;
            *(_DWORD *)v37 = (unsigned __int16)v17;
            *(_WORD *)&v37[4] = 1024;
            *(_DWORD *)&v37[6] = HIWORD(v18);
            __int16 v38 = 1024;
            int v39 = (unsigned __int16)v18;
            __int16 v40 = 2080;
            v41 = v19;
            _os_log_impl(&dword_2446BD000, v15, OS_LOG_TYPE_INFO, "Failed to read stored attribute (%u, 0x%04X_%04X, 0x%04X_%04X: %s", buf, 0x2Au);
          }
          if (sub_244CC4E58(3u))
          {
            *(_OWORD *)buf = v32;
            *(void *)v37 = v33;
            sub_244CB7B34((const char **)buf, 1);
            sub_244CC4DE0(0xDu, 3);
          }
          int v20 = 0;
        }
        else
        {
          int v20 = &v35;
        }
        char v12 = v11[15];
        if ((v12 & 0x10) != 0) {
          goto LABEL_31;
        }
      }
      else
      {
        int v20 = 0;
        if ((v11[15] & 0x10) != 0) {
          goto LABEL_31;
        }
      }
      *(_WORD *)buf = *v29;
      *(_DWORD *)&uint8_t buf[4] = *v30;
      *(_DWORD *)&buf[8] = *(_DWORD *)(v10 + v8 + 8);
      if (!v20)
      {
        unsigned int v21 = *(unsigned __int16 *)(v10 + v8 + 12);
        if ((v12 & 4) == 0)
        {
          if (v21 <= 4)
          {
            BOOL v22 = sub_244CB2C20(*(unsigned __int8 *)(v10 + v8 + 14));
            int v20 = v11;
            if (!v22) {
              goto LABEL_30;
            }
          }
LABEL_29:
          int v20 = *(char **)v11;
          goto LABEL_30;
        }
        int v11 = *(char **)v11;
        int v20 = v11;
        if (v21 >= 3) {
          goto LABEL_29;
        }
      }
LABEL_30:
      sub_2448560A4((unsigned __int16 *)buf, 0, (uint64_t)v20, 0, 1);
LABEL_31:
      ++v9;
      v8 += 16;
      if (v9 >= *((unsigned __int16 *)v30 + 8)) {
        goto LABEL_32;
      }
    }
  }
  return result;
}

uint64_t sub_2448572F0(uint64_t result, __int16 a2, int a3, uint64_t a4)
{
  if ((*(unsigned char *)(a4 + 15) & 0x12) == 2)
  {
    char v20 = 0;
    if (result) {
      uint64_t v7 = (unsigned __int8 *)result;
    }
    else {
      uint64_t v7 = (unsigned __int8 *)&v20;
    }
    int v8 = *(unsigned __int8 *)(a4 + 14);
    if (sub_244CB2C20(v8))
    {
      uint64_t v9 = sub_244CB2C40(v7) + 1;
    }
    else if (sub_244CB2C30(v8))
    {
      uint64_t v9 = sub_244CB2C50((unsigned __int16 *)v7) + 2;
    }
    else
    {
      uint64_t v9 = *(unsigned __int16 *)(a4 + 12);
    }
    uint64_t v10 = sub_244CA2E2C();
    if (v10)
    {
      uint64_t v11 = v10;
      int v12 = *(_DWORD *)(a4 + 8);
      __int16 v16 = a2;
      int v18 = a3;
      int v19 = v12;
      char v17 = 0;
      sub_2446C1098(v15, (uint64_t)v7, v9);
      return (uint64_t)(*(void *(**)(uint8_t *__return_ptr, uint64_t, __int16 *, void *))(*(void *)v11 + 16))(v14, v11, &v16, v15);
    }
    else
    {
      int v13 = sub_244CC8484(0xDu, "DataManagement");
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)int v14 = 0;
        _os_log_impl(&dword_2446BD000, v13, OS_LOG_TYPE_DEFAULT, "Can't store attribute value: no persistence provider", v14, 2u);
      }
      uint64_t result = sub_244CC4E58(2u);
      if (result) {
        return sub_244CC4DE0(0xDu, 2);
      }
    }
  }
  return result;
}

uint64_t sub_244857468@<X0>(int a1@<W0>, int a2@<W1>, uint64_t a3@<X8>)
{
  int v5 = sub_2448562B0(a1);
  uint64_t result = sub_2448562B0(a2);
  int v7 = 1368;
  int v8 = 47;
  if (v5 != 0xFFFF && result != 0xFFFF)
  {
    int v8 = 0;
    word_268EB8690[36 * v5 + 24] = a2;
    int v7 = 1371;
  }
  *(_DWORD *)a3 = v8;
  *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/util/attribute-storage.cpp";
  *(_DWORD *)(a3 + 16) = v7;
  return result;
}

uint64_t sub_2448574F0@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_2448562B0(a1);
  if (result == 0xFFFF)
  {
    int v5 = 1379;
    int v4 = 47;
  }
  else
  {
    int v4 = 0;
    LOBYTE(word_268EB8690[36 * result + 12]) = word_268EB8690[36 * result + 12] & 0xFC | 2;
    int v5 = 1383;
  }
  *(_DWORD *)a2 = v4;
  *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/util/attribute-storage.cpp";
  *(_DWORD *)(a2 + 16) = v5;
  return result;
}

uint64_t sub_244857568@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_2448562B0(a1);
  if (result == 0xFFFF)
  {
    int v5 = 1391;
    int v4 = 47;
  }
  else
  {
    int v4 = 0;
    LOBYTE(word_268EB8690[36 * result + 12]) |= 3u;
    int v5 = 1395;
  }
  *(_DWORD *)a2 = v4;
  *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/util/attribute-storage.cpp";
  *(_DWORD *)(a2 + 16) = v5;
  return result;
}

uint64_t sub_2448575DC(int a1)
{
  int v1 = sub_2448562B0(a1);
  if (v1 == 0xFFFF) {
    return 0;
  }
  else {
    return (LOBYTE(word_268EB8690[36 * v1 + 12]) >> 1) & 1;
  }
}

BOOL sub_244857620(int a1)
{
  int v1 = sub_2448562B0(a1);
  return v1 != 0xFFFF && (word_268EB8690[36 * v1 + 12] & 3) != 0;
}

uint64_t sub_244857668(int a1, int a2)
{
  uint64_t result = sub_244855D80(a1, a2);
  if (result) {
    return *(unsigned __int16 *)(result + 16);
  }
  return result;
}

uint64_t sub_244857688(int a1, int a2, int a3)
{
  uint64_t v4 = sub_244855D80(a1, a2);
  if (v4 && *(_WORD *)(v4 + 16))
  {
    unsigned int v5 = 0;
    while (*(_DWORD *)(*(void *)(v4 + 8) + 16 * v5 + 8) != a3)
    {
      if (++v5 >= *(unsigned __int16 *)(v4 + 16)) {
        goto LABEL_6;
      }
    }
  }
  else
  {
LABEL_6:
    LOWORD(v5) = -1;
  }
  return (unsigned __int16)v5;
}

uint64_t sub_2448576E4@<X0>(int a1@<W0>, int a2@<W1>, unsigned int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t result = sub_244855D80(a1, a2);
  if (result && *(unsigned __int16 *)(result + 16) > a3)
  {
    uint64_t v7 = *(void *)(result + 8) + 16 * a3;
    *(unsigned char *)a4 = 1;
    *(_DWORD *)(a4 + 4) = *(_DWORD *)(v7 + 8);
  }
  else
  {
    *(unsigned char *)a4 = 0;
  }
  return result;
}

uint64_t sub_24485773C(unsigned __int16 *a1)
{
  int v2 = *a1;
  int v3 = sub_2448562B0(v2);
  if (v3 == 0xFFFF) {
    return 0;
  }
  uint64_t v4 = *(void *)&word_268EB8690[36 * v3 + 20];
  if (!v4) {
    return 0;
  }
  unsigned int v5 = sub_244856354(v2, *((_DWORD *)a1 + 1), 64);
  if (v5 == 255) {
    return 0;
  }
  else {
    return v4 + 4 * v5;
  }
}

void sub_2448577BC()
{
}

uint64_t sub_2448577D0(uint64_t a1, uint64_t a2)
{
  int v3 = (unint64_t *)sub_244DBE094();
  return sub_244DCB76C(v3 + 170, a2, v5);
}

uint64_t sub_24485780C()
{
  return 1;
}

void sub_244857ABC(_Unwind_Exception *a1)
{
  sub_2446D7EC0(v3);

  _Unwind_Resume(a1);
}

void sub_244857CD0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244857F80(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id *sub_244857FD4(id *a1, void *a2, void *a3)
{
  id v6 = a2;
  id v7 = a3;
  if (a1)
  {
    v10.receiver = a1;
    v10.super_class = (Class)MTRDeviceTypeRevision;
    int v8 = (id *)objc_msgSendSuper2(&v10, sel_init);
    a1 = v8;
    if (v8)
    {
      objc_storeStrong(v8 + 1, a2);
      objc_storeStrong(a1 + 2, a3);
    }
  }

  return a1;
}

void sub_244858070(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244858148(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2448582BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448583D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448584B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244858588(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448586A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_244858784(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244858854(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_24485896C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_244858A50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244858B20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_244858C38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_244858D1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244858DEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_244858F04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_244858FE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448590B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448591D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448592B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244859384(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448595B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244859654(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_244859668@<X0>(void **a1@<X0>, const char *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, __n128 *a7@<X8>)
{
  v33[0] = 0;
  int v14 = a1[4];
  if (v14)
  {
    unint64_t v15 = objc_msgSend_timedWriteTimeout(v14, a2, (uint64_t)a3);

    if (v15)
    {
      __int16 v16 = objc_msgSend_timedWriteTimeout(a1[4], a2, (uint64_t)a3);
      v33[0] = 1;
      __int16 v34 = objc_msgSend_unsignedShortValue(v16, v17, v18);
    }
  }
  v32[0] = 0;
  v32[1] = 0;
  v31 = v32;
  char v30 = objc_msgSend_unsignedCharValue(a1[5], a2, (uint64_t)a3);
  unsigned int v21 = objc_msgSend_endpointID(a1[6], v19, v20);
  __int16 v24 = objc_msgSend_unsignedShortValue(v21, v22, v23);
  v27[0] = &unk_26F945B38;
  v27[1] = a2;
  sub_244AD7C98((uint64_t)v28, a3);
  v28[20] = v24;
  char v29 = 0;

  v26[0] = 0;
  sub_244AD8658((uint64_t)v27, a6, 0x1349FC03u, 0, a4, a5, v33, a7, 0, (uint64_t)v26);
  v27[0] = &unk_26F945B38;
  sub_244D87F44(v28);
  return sub_24479466C((uint64_t)&v31);
}

void sub_2448597CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *sub_244859810(void *a1)
{
  *a1 = &unk_26F945B38;
  sub_244D87F44(a1 + 2);
  return a1;
}

void sub_244859930(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_244859A14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244859AE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_244859BFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_244859CE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244859DB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_244859EC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_244859FAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24485A07C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_24485A194(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_24485A278(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24485A348(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_24485A460(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_24485A544(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24485A614(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_24485A72C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_24485A810(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24485A9A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24485A9F8()
{
}

void sub_24485AA00()
{
}

uint64_t sub_24485AA08(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24485AB90(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24485ABE4()
{
}

void sub_24485ABEC()
{
}

uint64_t sub_24485ABF4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24485ACB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_24485AEEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24485AF88(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_24485AF9C@<X0>(void **a1@<X0>, const char *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, __n128 *a7@<X8>)
{
  v33[0] = 0;
  int v14 = a1[4];
  if (v14)
  {
    unint64_t v15 = objc_msgSend_timedWriteTimeout(v14, a2, (uint64_t)a3);

    if (v15)
    {
      __int16 v16 = objc_msgSend_timedWriteTimeout(a1[4], a2, (uint64_t)a3);
      v33[0] = 1;
      __int16 v34 = objc_msgSend_unsignedShortValue(v16, v17, v18);
    }
  }
  v32[0] = 0;
  v32[1] = 0;
  v31 = v32;
  __int16 v30 = objc_msgSend_unsignedShortValue(a1[5], a2, (uint64_t)a3);
  unsigned int v21 = objc_msgSend_endpointID(a1[6], v19, v20);
  __int16 v24 = objc_msgSend_unsignedShortValue(v21, v22, v23);
  v27[0] = &unk_26F945B38;
  v27[1] = a2;
  sub_244AD7C98((uint64_t)v28, a3);
  v28[20] = v24;
  char v29 = 0;

  v26[0] = 0;
  sub_244AD9184((uint64_t)v27, a6, 3u, 0, a4, a5, v33, a7, 0, (uint64_t)v26);
  v27[0] = &unk_26F945B38;
  sub_244D87F44(v28);
  return sub_24479466C((uint64_t)&v31);
}

void sub_24485B0FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24485B21C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_24485B2FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24485B3CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_24485B4E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_24485B5C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24485B694(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_24485B7AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_24485B88C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24485B95C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_24485BA74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_24485BB54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24485BC24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_24485BD3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_24485BE1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24485BEEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_24485C004(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_24485C0E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24485C1B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_24485C2CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_24485C3AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24485C47C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_24485C594(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_24485C674(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24485C730(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24485C748(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24485C8A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24485C8D8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24485C9D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24485CA00(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24485CAA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24485CABC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24485CC04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24485CC3C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24485CD38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24485CD64(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24485CE08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24485CE20(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24485CF68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24485CFA0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24485D09C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24485D0C8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24485D16C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24485D184(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24485D2CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24485D304(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24485D400(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24485D42C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24485D4D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24485D4E8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24485D630(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24485D668(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24485D764(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24485D790(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24485D834(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24485D84C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24485D994(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24485D9CC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24485DAC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24485DAF4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24485DB98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24485DBB0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24485DCF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24485DD30(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24485DE2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24485DE58(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24485DEE8(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_24485E08C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24485E0F0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24485E284(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24485E2E8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24485E47C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24485E4E0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24485E674(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24485E6D8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24485E868(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24485E8BC()
{
}

void sub_24485E8C4()
{
}

uint64_t sub_24485E8CC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24485EA54(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24485EAA8()
{
}

void sub_24485EAB0()
{
}

uint64_t sub_24485EAB8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24485EB7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_24485EC94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_24485ED74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24485EE44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_24485EF5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_24485F03C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24485F10C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_24485F224(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_24485F304(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24485F3D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_24485F4EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_24485F5CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24485F69C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_24485F7B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_24485F894(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24485F964(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_24485FA7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_24485FB5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24485FC2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_24485FD44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_24485FE24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24485FEE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24485FF00(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24485FFB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24485FFCC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244860080(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244860098(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24486014C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244860164(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24486021C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244860234(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24486037C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448603B4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448604B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448604DC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244860580(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244860598(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448606E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244860718(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244860814(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244860840(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448608E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448608FC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244860A44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244860A7C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244860B78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244860BA4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244860C48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244860C60(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244860DA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244860DE0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244860EDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244860F08(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244860FAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244860FC4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24486110C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244861144(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244861240(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24486126C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244861310(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244861328(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244861470(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448614A8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448615A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448615D0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244861660(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_244861800(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244861854()
{
}

void sub_24486185C()
{
}

uint64_t sub_244861864(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448619F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244861A4C()
{
}

void sub_244861A54()
{
}

uint64_t sub_244861A5C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244861BF0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244861C44()
{
}

void sub_244861C4C()
{
}

uint64_t sub_244861C54(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244861DDC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244861E30()
{
}

void sub_244861E38()
{
}

uint64_t sub_244861E40(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244861FD4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244862028()
{
}

void sub_244862030()
{
}

uint64_t sub_244862038(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448621C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244862214()
{
}

void sub_24486221C()
{
}

uint64_t sub_244862224(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448622E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_244862400(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448624E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448625B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448626C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448627A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244862878(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_244862AAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244862B48(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_244862B5C@<X0>(void **a1@<X0>, const char *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, __n128 *a7@<X8>)
{
  v33[0] = 0;
  int v14 = a1[4];
  if (v14)
  {
    unint64_t v15 = objc_msgSend_timedWriteTimeout(v14, a2, (uint64_t)a3);

    if (v15)
    {
      __int16 v16 = objc_msgSend_timedWriteTimeout(a1[4], a2, (uint64_t)a3);
      v33[0] = 1;
      __int16 v34 = objc_msgSend_unsignedShortValue(v16, v17, v18);
    }
  }
  v32[0] = 0;
  v32[1] = 0;
  v31 = v32;
  __int16 v30 = objc_msgSend_unsignedShortValue(a1[5], a2, (uint64_t)a3);
  unsigned int v21 = objc_msgSend_endpointID(a1[6], v19, v20);
  __int16 v24 = objc_msgSend_unsignedShortValue(v21, v22, v23);
  v27[0] = &unk_26F945B38;
  v27[1] = a2;
  sub_244AD7C98((uint64_t)v28, a3);
  v28[20] = v24;
  char v29 = 0;

  v26[0] = 0;
  sub_244AD9184((uint64_t)v27, a6, 6u, 0x4001u, a4, a5, v33, a7, 0, (uint64_t)v26);
  v27[0] = &unk_26F945B38;
  sub_244D87F44(v28);
  return sub_24479466C((uint64_t)&v31);
}

void sub_244862CBC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244862DDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_244862EBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244862F8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448631C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24486325C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_244863270@<X0>(void **a1@<X0>, const char *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, __n128 *a7@<X8>)
{
  v33[0] = 0;
  int v14 = a1[4];
  if (v14)
  {
    unint64_t v15 = objc_msgSend_timedWriteTimeout(v14, a2, (uint64_t)a3);

    if (v15)
    {
      __int16 v16 = objc_msgSend_timedWriteTimeout(a1[4], a2, (uint64_t)a3);
      v33[0] = 1;
      __int16 v34 = objc_msgSend_unsignedShortValue(v16, v17, v18);
    }
  }
  v32[0] = 0;
  v32[1] = 0;
  v31 = v32;
  __int16 v30 = objc_msgSend_unsignedShortValue(a1[5], a2, (uint64_t)a3);
  unsigned int v21 = objc_msgSend_endpointID(a1[6], v19, v20);
  __int16 v24 = objc_msgSend_unsignedShortValue(v21, v22, v23);
  v27[0] = &unk_26F945B38;
  v27[1] = a2;
  sub_244AD7C98((uint64_t)v28, a3);
  v28[20] = v24;
  char v29 = 0;

  v26[0] = 0;
  sub_244AD9184((uint64_t)v27, a6, 6u, 0x4002u, a4, a5, v33, a7, 0, (uint64_t)v26);
  v27[0] = &unk_26F945B38;
  sub_244D87F44(v28);
  return sub_24479466C((uint64_t)&v31);
}

void sub_2448633D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2448634F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448635D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448636A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448638D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244863970(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_244863984@<X0>(uint64_t a1@<X0>, const char *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, __n128 *a7@<X8>)
{
  v32[0] = 0;
  int v14 = *(void **)(a1 + 32);
  if (v14)
  {
    unint64_t v15 = objc_msgSend_timedWriteTimeout(v14, a2, (uint64_t)a3);

    if (v15)
    {
      __int16 v16 = objc_msgSend_timedWriteTimeout(*(void **)(a1 + 32), a2, (uint64_t)a3);
      v32[0] = 1;
      __int16 v33 = objc_msgSend_unsignedShortValue(v16, v17, v18);
    }
  }
  v31[0] = 0;
  v31[1] = 0;
  __int16 v30 = v31;
  __int16 v29 = 0;
  int v19 = *(void **)(a1 + 40);
  if (v19)
  {
    HIBYTE(v29) = 1;
    LOBYTE(v29) = objc_msgSend_unsignedCharValue(v19, a2, (uint64_t)a3);
  }
  uint64_t v20 = objc_msgSend_endpointID(*(void **)(a1 + 48), a2, (uint64_t)a3);
  __int16 v23 = objc_msgSend_unsignedShortValue(v20, v21, v22);
  v26[0] = &unk_26F945B38;
  v26[1] = a2;
  sub_244AD7C98((uint64_t)v27, a3);
  v27[20] = v23;
  char v28 = 0;

  v25[0] = 0;
  sub_244AD9CB0((uint64_t)v26, (unsigned __int8 *)&v29, a6, 6u, 0x4003u, a4, a5, v32, a7, 0, (uint64_t)v25);
  v26[0] = &unk_26F945B38;
  sub_244D87F44(v27);
  return sub_24479466C((uint64_t)&v30);
}

void sub_244863AF4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244863C14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_244863CF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244863DC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_244863EDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_244863FBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24486408C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448641A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_244864284(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244864354(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_24486446C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_24486454C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24486461C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_244864734(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_244864814(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448648E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448649FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_244864ADC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244864BAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_244864CC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_244864DA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244864EA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244864EB8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244865000(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244865038(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244865134(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244865160(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244865204(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24486521C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244865364(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24486539C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244865498(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448654C4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244865568(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244865580(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448656D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244865710(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24486580C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244865838(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448658DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448658F4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244865A4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244865A84(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244865B80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244865BAC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244865C50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244865C68(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244865DC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244865DF8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244865EF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244865F20(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244865FC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244865FDC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244866124(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24486615C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244866258(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244866284(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244866328(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244866340(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244866488(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448664C0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448665BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448665E8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24486668C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448666A4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448667EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244866824(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244866920(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24486694C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448669F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244866A08(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244866B50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244866B88(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244866C84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244866CB0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244866D54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244866D6C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244866EB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244866EEC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244866FE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244867014(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448670A4(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_244867238(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24486728C()
{
}

void sub_244867294()
{
}

uint64_t sub_24486729C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244867424(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244867478()
{
}

void sub_244867480()
{
}

uint64_t sub_244867488(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244867610(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244867664()
{
}

void sub_24486766C()
{
}

uint64_t sub_244867674(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448677FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244867850()
{
}

void sub_244867858()
{
}

uint64_t sub_244867860(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448679E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244867A3C()
{
}

void sub_244867A44()
{
}

uint64_t sub_244867A4C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244867BD4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244867C28()
{
}

void sub_244867C30()
{
}

uint64_t sub_244867C38(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244867DC0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244867E14()
{
}

void sub_244867E1C()
{
}

uint64_t sub_244867E24(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244867FAC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244868000()
{
}

void sub_244868008()
{
}

uint64_t sub_244868010(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244868198(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2448681EC()
{
}

void sub_2448681F4()
{
}

uint64_t sub_2448681FC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448682C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448683D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448684B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244868588(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448686A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_244868780(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244868850(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_244868968(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_244868A48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244868B18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_244868C30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_244868D10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244868DE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_244868EF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_244868FD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448690A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448691C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448692A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244869370(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_244869488(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_244869568(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244869638(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_24486986C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244869908(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_24486991C@<X0>(void **a1@<X0>, const char *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, __n128 *a7@<X8>)
{
  v33[0] = 0;
  int v14 = a1[4];
  if (v14)
  {
    unint64_t v15 = objc_msgSend_timedWriteTimeout(v14, a2, (uint64_t)a3);

    if (v15)
    {
      __int16 v16 = objc_msgSend_timedWriteTimeout(a1[4], a2, (uint64_t)a3);
      v33[0] = 1;
      __int16 v34 = objc_msgSend_unsignedShortValue(v16, v17, v18);
    }
  }
  v32[0] = 0;
  v32[1] = 0;
  v31 = v32;
  char v30 = objc_msgSend_unsignedCharValue(a1[5], a2, (uint64_t)a3);
  unsigned int v21 = objc_msgSend_endpointID(a1[6], v19, v20);
  __int16 v24 = objc_msgSend_unsignedShortValue(v21, v22, v23);
  v27[0] = &unk_26F945B38;
  v27[1] = a2;
  sub_244AD7C98((uint64_t)v28, a3);
  v28[20] = v24;
  char v29 = 0;

  v26[0] = 0;
  sub_244ADAAB0((uint64_t)v27, a6, 8u, 0xFu, a4, a5, v33, a7, 0, (uint64_t)v26);
  v27[0] = &unk_26F945B38;
  sub_244D87F44(v28);
  return sub_24479466C((uint64_t)&v31);
}

void sub_244869A7C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244869B9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_244869C7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244869D4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_244869F80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24486A01C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_24486A030@<X0>(void **a1@<X0>, const char *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, __n128 *a7@<X8>)
{
  v33[0] = 0;
  int v14 = a1[4];
  if (v14)
  {
    unint64_t v15 = objc_msgSend_timedWriteTimeout(v14, a2, (uint64_t)a3);

    if (v15)
    {
      __int16 v16 = objc_msgSend_timedWriteTimeout(a1[4], a2, (uint64_t)a3);
      v33[0] = 1;
      __int16 v34 = objc_msgSend_unsignedShortValue(v16, v17, v18);
    }
  }
  v32[0] = 0;
  v32[1] = 0;
  v31 = v32;
  __int16 v30 = objc_msgSend_unsignedShortValue(a1[5], a2, (uint64_t)a3);
  unsigned int v21 = objc_msgSend_endpointID(a1[6], v19, v20);
  __int16 v24 = objc_msgSend_unsignedShortValue(v21, v22, v23);
  v27[0] = &unk_26F945B38;
  v27[1] = a2;
  sub_244AD7C98((uint64_t)v28, a3);
  v28[20] = v24;
  char v29 = 0;

  v26[0] = 0;
  sub_244AD9184((uint64_t)v27, a6, 8u, 0x10u, a4, a5, v33, a7, 0, (uint64_t)v26);
  v27[0] = &unk_26F945B38;
  sub_244D87F44(v28);
  return sub_24479466C((uint64_t)&v31);
}

void sub_24486A190(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24486A2B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_24486A390(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24486A460(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_24486A694(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24486A730(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_24486A744@<X0>(uint64_t a1@<X0>, const char *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, __n128 *a7@<X8>)
{
  v32[0] = 0;
  int v14 = *(void **)(a1 + 32);
  if (v14)
  {
    unint64_t v15 = objc_msgSend_timedWriteTimeout(v14, a2, (uint64_t)a3);

    if (v15)
    {
      __int16 v16 = objc_msgSend_timedWriteTimeout(*(void **)(a1 + 32), a2, (uint64_t)a3);
      v32[0] = 1;
      __int16 v33 = objc_msgSend_unsignedShortValue(v16, v17, v18);
    }
  }
  v31[0] = 0;
  v31[1] = 0;
  __int16 v30 = v31;
  __int16 v29 = 0;
  int v19 = *(void **)(a1 + 40);
  if (v19)
  {
    HIBYTE(v29) = 1;
    LOBYTE(v29) = objc_msgSend_unsignedCharValue(v19, a2, (uint64_t)a3);
  }
  uint64_t v20 = objc_msgSend_endpointID(*(void **)(a1 + 48), a2, (uint64_t)a3);
  __int16 v23 = objc_msgSend_unsignedShortValue(v20, v21, v22);
  v26[0] = &unk_26F945B38;
  v26[1] = a2;
  sub_244AD7C98((uint64_t)v27, a3);
  v27[20] = v23;
  char v28 = 0;

  v25[0] = 0;
  sub_244ADB378((uint64_t)v26, (unsigned __int8 *)&v29, a6, 8u, 0x11u, a4, a5, v32, a7, 0, (uint64_t)v25);
  v26[0] = &unk_26F945B38;
  sub_244D87F44(v27);
  return sub_24479466C((uint64_t)&v30);
}

void sub_24486A8B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24486A9D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_24486AAB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24486AB84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_24486ADB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24486AE54(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_24486AE68@<X0>(uint64_t a1@<X0>, const char *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, __n128 *a7@<X8>)
{
  v33[0] = 0;
  int v14 = *(void **)(a1 + 32);
  if (v14)
  {
    unint64_t v15 = objc_msgSend_timedWriteTimeout(v14, a2, (uint64_t)a3);

    if (v15)
    {
      __int16 v16 = objc_msgSend_timedWriteTimeout(*(void **)(a1 + 32), a2, (uint64_t)a3);
      v33[0] = 1;
      __int16 v34 = objc_msgSend_unsignedShortValue(v16, v17, v18);
    }
  }
  v32[0] = 0;
  v32[1] = 0;
  v31 = v32;
  LOBYTE(v29) = 0;
  char v30 = 0;
  int v19 = *(void **)(a1 + 40);
  if (v19)
  {
    char v30 = 1;
    __int16 v29 = objc_msgSend_unsignedShortValue(v19, a2, (uint64_t)a3);
  }
  uint64_t v20 = objc_msgSend_endpointID(*(void **)(a1 + 48), a2, (uint64_t)a3);
  __int16 v23 = objc_msgSend_unsignedShortValue(v20, v21, v22);
  v26[0] = &unk_26F945B38;
  v26[1] = a2;
  sub_244AD7C98((uint64_t)v27, a3);
  v27[20] = v23;
  char v28 = 0;

  v25[0] = 0;
  sub_244ADBEEC((uint64_t)v26, (uint64_t)&v29, a6, 8u, 0x12u, a4, a5, v33, a7, 0, (uint64_t)v25);
  v26[0] = &unk_26F945B38;
  sub_244D87F44(v27);
  return sub_24479466C((uint64_t)&v31);
}

void sub_24486AFDC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24486B0FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_24486B1DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24486B2AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_24486B4E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24486B57C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_24486B590@<X0>(uint64_t a1@<X0>, const char *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, __n128 *a7@<X8>)
{
  v33[0] = 0;
  int v14 = *(void **)(a1 + 32);
  if (v14)
  {
    unint64_t v15 = objc_msgSend_timedWriteTimeout(v14, a2, (uint64_t)a3);

    if (v15)
    {
      __int16 v16 = objc_msgSend_timedWriteTimeout(*(void **)(a1 + 32), a2, (uint64_t)a3);
      v33[0] = 1;
      __int16 v34 = objc_msgSend_unsignedShortValue(v16, v17, v18);
    }
  }
  v32[0] = 0;
  v32[1] = 0;
  v31 = v32;
  LOBYTE(v29) = 0;
  char v30 = 0;
  int v19 = *(void **)(a1 + 40);
  if (v19)
  {
    char v30 = 1;
    __int16 v29 = objc_msgSend_unsignedShortValue(v19, a2, (uint64_t)a3);
  }
  uint64_t v20 = objc_msgSend_endpointID(*(void **)(a1 + 48), a2, (uint64_t)a3);
  __int16 v23 = objc_msgSend_unsignedShortValue(v20, v21, v22);
  v26[0] = &unk_26F945B38;
  v26[1] = a2;
  sub_244AD7C98((uint64_t)v27, a3);
  v27[20] = v23;
  char v28 = 0;

  v25[0] = 0;
  sub_244ADBEEC((uint64_t)v26, (uint64_t)&v29, a6, 8u, 0x13u, a4, a5, v33, a7, 0, (uint64_t)v25);
  v26[0] = &unk_26F945B38;
  sub_244D87F44(v27);
  return sub_24479466C((uint64_t)&v31);
}

void sub_24486B704(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24486B824(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_24486B904(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24486B9D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_24486BC08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24486BCA4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_24486BCB8@<X0>(uint64_t a1@<X0>, const char *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, __n128 *a7@<X8>)
{
  v32[0] = 0;
  int v14 = *(void **)(a1 + 32);
  if (v14)
  {
    unint64_t v15 = objc_msgSend_timedWriteTimeout(v14, a2, (uint64_t)a3);

    if (v15)
    {
      __int16 v16 = objc_msgSend_timedWriteTimeout(*(void **)(a1 + 32), a2, (uint64_t)a3);
      v32[0] = 1;
      __int16 v33 = objc_msgSend_unsignedShortValue(v16, v17, v18);
    }
  }
  v31[0] = 0;
  v31[1] = 0;
  char v30 = v31;
  __int16 v29 = 0;
  int v19 = *(void **)(a1 + 40);
  if (v19)
  {
    HIBYTE(v29) = 1;
    LOBYTE(v29) = objc_msgSend_unsignedCharValue(v19, a2, (uint64_t)a3);
  }
  uint64_t v20 = objc_msgSend_endpointID(*(void **)(a1 + 48), a2, (uint64_t)a3);
  __int16 v23 = objc_msgSend_unsignedShortValue(v20, v21, v22);
  v26[0] = &unk_26F945B38;
  v26[1] = a2;
  sub_244AD7C98((uint64_t)v27, a3);
  v27[20] = v23;
  char v28 = 0;

  v25[0] = 0;
  sub_244ADB378((uint64_t)v26, (unsigned __int8 *)&v29, a6, 8u, 0x14u, a4, a5, v32, a7, 0, (uint64_t)v25);
  v26[0] = &unk_26F945B38;
  sub_244D87F44(v27);
  return sub_24479466C((uint64_t)&v30);
}

void sub_24486BE28(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24486BF48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_24486C028(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24486C0F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_24486C32C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24486C3C8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_24486C3DC@<X0>(uint64_t a1@<X0>, const char *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, __n128 *a7@<X8>)
{
  v32[0] = 0;
  int v14 = *(void **)(a1 + 32);
  if (v14)
  {
    unint64_t v15 = objc_msgSend_timedWriteTimeout(v14, a2, (uint64_t)a3);

    if (v15)
    {
      __int16 v16 = objc_msgSend_timedWriteTimeout(*(void **)(a1 + 32), a2, (uint64_t)a3);
      v32[0] = 1;
      __int16 v33 = objc_msgSend_unsignedShortValue(v16, v17, v18);
    }
  }
  v31[0] = 0;
  v31[1] = 0;
  char v30 = v31;
  __int16 v29 = 0;
  int v19 = *(void **)(a1 + 40);
  if (v19)
  {
    HIBYTE(v29) = 1;
    LOBYTE(v29) = objc_msgSend_unsignedCharValue(v19, a2, (uint64_t)a3);
  }
  uint64_t v20 = objc_msgSend_endpointID(*(void **)(a1 + 48), a2, (uint64_t)a3);
  __int16 v23 = objc_msgSend_unsignedShortValue(v20, v21, v22);
  v26[0] = &unk_26F945B38;
  v26[1] = a2;
  sub_244AD7C98((uint64_t)v27, a3);
  v27[20] = v23;
  char v28 = 0;

  v25[0] = 0;
  sub_244ADB378((uint64_t)v26, (unsigned __int8 *)&v29, a6, 8u, 0x4000u, a4, a5, v32, a7, 0, (uint64_t)v25);
  v26[0] = &unk_26F945B38;
  sub_244D87F44(v27);
  return sub_24479466C((uint64_t)&v30);
}

void sub_24486C54C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24486C66C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_24486C74C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24486C81C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_24486C934(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_24486CA14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24486CAE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_24486CBFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_24486CCDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24486CDAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_24486CEC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_24486CFA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24486D074(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_24486D18C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_24486D26C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24486D33C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_24486D454(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_24486D534(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24486D604(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_24486D71C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_24486D7FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24486D8D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24486D8EC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24486DA34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24486DA6C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24486DB68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24486DB94(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24486DC38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24486DC50(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24486DD98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24486DDD0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24486DECC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24486DEF8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24486DF9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24486DFB4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24486E0FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24486E134(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24486E230(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24486E25C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24486E300(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24486E318(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24486E460(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24486E498(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24486E594(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24486E5C0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24486E664(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24486E67C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24486E7C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24486E7FC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24486E8F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24486E924(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24486E9C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24486E9E0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24486EB28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24486EB60(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24486EC5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24486EC88(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24486ED2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24486ED44(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24486EE8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24486EEC4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24486EFC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24486EFEC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24486F090(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24486F0A8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24486F200(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24486F238(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24486F334(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24486F360(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24486F404(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24486F41C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24486F574(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24486F5AC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24486F6A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24486F6D4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24486F778(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24486F790(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24486F8E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24486F920(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24486FA1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24486FA48(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24486FAEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24486FB04(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24486FC5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24486FC94(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24486FD90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24486FDBC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24486FE60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24486FE78(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24486FFD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244870008(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244870104(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244870130(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448701D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448701EC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244870344(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24487037C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244870478(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448704A4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244870548(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244870560(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448706B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448706F0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448707EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244870818(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448708BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448708D4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244870A1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244870A54(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244870B50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244870B7C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244870C20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244870C38(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244870D80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244870DB8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244870EB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244870EE0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244870F84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244870F9C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448710E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24487111C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244871218(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244871244(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448712E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244871300(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244871448(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244871480(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24487157C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448715A8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24487164C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244871664(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448717AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448717E4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448718E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24487190C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24487199C(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_244871A6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_244871B84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_244871C64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244871D34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_244871E4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_244871F2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244871FFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_244872114(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448721F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448722C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448723DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448724BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24487258C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448726A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_244872784(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244872854(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_24487296C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_244872A4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244872B1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_244872C34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_244872D14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244872DE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_244872EFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_244872FDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448730AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448731C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448732A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244873374(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_24487348C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_24487356C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24487363C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_244873754(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_244873834(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244873904(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_244873A1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_244873AFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244873BCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_244873CE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_244873DC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244873E94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_244873FAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_24487408C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24487415C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_244874274(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_244874354(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244874424(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_24487453C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_24487461C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448746EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_244874804(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448748E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244874998(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448749B0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244874AF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244874B30(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244874C2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244874C58(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244874CFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244874D14(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244874E5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244874E94(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244874F90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244874FBC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244875060(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244875078(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448751C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448751F8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448752F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244875320(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448753C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448753DC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244875524(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24487555C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244875658(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244875684(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244875728(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244875740(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244875888(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448758C0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448759BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448759E8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244875A8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244875AA4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244875BEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244875C24(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244875D20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244875D4C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244875DF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244875E08(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244875F50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244875F88(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244876084(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448760B0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244876154(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24487616C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448762B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448762EC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448763E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244876414(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448764B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448764D0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244876618(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244876650(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24487674C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244876778(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244876808(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_2448768E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244876B20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244876BBC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_244876BD0@<X0>(void **a1@<X0>, const char *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, __n128 *a7@<X8>)
{
  v33[0] = 0;
  int v14 = a1[4];
  if (v14)
  {
    unint64_t v15 = objc_msgSend_timedWriteTimeout(v14, a2, (uint64_t)a3);

    if (v15)
    {
      __int16 v16 = objc_msgSend_timedWriteTimeout(a1[4], a2, (uint64_t)a3);
      v33[0] = 1;
      __int16 v34 = objc_msgSend_unsignedShortValue(v16, v17, v18);
    }
  }
  v32[0] = 0;
  v32[1] = 0;
  v31 = v32;
  if (objc_msgSend_count(a1[5], a2, (uint64_t)a3)) {
    operator new();
  }
  long long v30 = 0uLL;
  unsigned int v21 = objc_msgSend_endpointID(a1[6], v19, v20);
  __int16 v24 = objc_msgSend_unsignedShortValue(v21, v22, v23);
  v27[0] = &unk_26F945B38;
  v27[1] = a2;
  sub_244AD7C98((uint64_t)v28, a3);
  v28[20] = v24;
  char v29 = 0;

  v26[0] = 0;
  sub_244ADCC04((uint64_t)v27, &v30, a6, 0x1Eu, 0, a4, a5, v33, a7, 0, (uint64_t)v26);
  v27[0] = &unk_26F945B38;
  sub_244D87F44(v28);
  return sub_24479466C((uint64_t)&v31);
}

void sub_244876FA4(_Unwind_Exception *a1)
{
  sub_24479466C(v1 - 120);
  _Unwind_Resume(a1);
}

void sub_244877130(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_244877210(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448772E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448773F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448774D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448775A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448776C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448777A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244877870(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_244877988(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_244877A68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244877B38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_244877C50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_244877D30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244877E00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_244877F18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_244877FF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448780C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448781E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448782C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244878384(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24487839C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448784F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24487852C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244878628(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244878654(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448786F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244878710(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244878858(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244878890(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24487898C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448789B8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244878A5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244878A74(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244878BBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244878BF4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244878CF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244878D1C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244878DC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244878DD8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244878F20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244878F58(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244879054(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244879080(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244879124(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24487913C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244879284(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448792BC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448793B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448793E4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244879488(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448794A0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448795E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244879620(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24487971C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244879748(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448797D8(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_24487997C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448799E0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244879AB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v14 = v13;

  _Unwind_Resume(a1);
}

void sub_244879CE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244879D84(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_244879D98@<X0>(void **a1@<X0>, const char *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, __n128 *a7@<X8>)
{
  v33[0] = 0;
  int v13 = a1[4];
  if (v13)
  {
    int v14 = objc_msgSend_timedWriteTimeout(v13, a2, (uint64_t)a3);

    if (v14)
    {
      unint64_t v15 = objc_msgSend_timedWriteTimeout(a1[4], a2, (uint64_t)a3);
      v33[0] = 1;
      __int16 v34 = objc_msgSend_unsignedShortValue(v15, v16, v17);
    }
  }
  v32[0] = 0;
  v32[1] = 0;
  v31 = v32;
  long long v30 = 0uLL;
  if (objc_msgSend_count(a1[5], a2, (uint64_t)a3)) {
    operator new();
  }
  long long v30 = 0uLL;
  uint64_t v20 = objc_msgSend_endpointID(a1[6], v18, v19);
  __int16 v23 = objc_msgSend_unsignedShortValue(v20, v21, v22);
  v27[0] = &unk_26F945B38;
  v27[1] = a2;
  sub_244AD7C98((uint64_t)v28, a3);
  v28[20] = v23;
  char v29 = 0;

  v26[0] = 0;
  sub_244ADDB80((uint64_t)v27, &v30, a6, 0x1Fu, 0, a4, a5, v33, a7, 0, (uint64_t)v26);
  v27[0] = &unk_26F945B38;
  sub_244D87F44(v28);
  return sub_24479466C((uint64_t)&v31);
}

void sub_24487A588(_Unwind_Exception *a1)
{
  sub_24479466C(v1 - 120);
  _Unwind_Resume(a1);
}

void sub_24487A7E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_24487A8C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24487A9A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v14 = v13;

  _Unwind_Resume(a1);
}

void sub_24487ABD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24487AC74(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_24487AC88@<X0>(void **a1@<X0>, const char *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, __n128 *a7@<X8>)
{
  v33[0] = 0;
  int v14 = a1[4];
  if (v14)
  {
    unint64_t v15 = objc_msgSend_timedWriteTimeout(v14, a2, (uint64_t)a3);

    if (v15)
    {
      __int16 v16 = objc_msgSend_timedWriteTimeout(a1[4], a2, (uint64_t)a3);
      v33[0] = 1;
      __int16 v34 = objc_msgSend_unsignedShortValue(v16, v17, v18);
    }
  }
  v32[0] = 0;
  v32[1] = 0;
  v31 = v32;
  if (objc_msgSend_count(a1[5], a2, (uint64_t)a3)) {
    operator new();
  }
  long long v30 = 0uLL;
  unsigned int v21 = objc_msgSend_endpointID(a1[6], v19, v20);
  __int16 v24 = objc_msgSend_unsignedShortValue(v21, v22, v23);
  v27[0] = &unk_26F945B38;
  v27[1] = a2;
  sub_244AD7C98((uint64_t)v28, a3);
  v28[20] = v24;
  char v29 = 0;

  v26[0] = 0;
  sub_244ADE8A0((uint64_t)v27, &v30, a6, 0x1Fu, 1u, a4, a5, v33, a7, 0, (uint64_t)v26);
  v27[0] = &unk_26F945B38;
  sub_244D87F44(v28);
  return sub_24479466C((uint64_t)&v31);
}

void sub_24487AF8C(_Unwind_Exception *a1)
{
  sub_24479466C(v1 - 120);
  _Unwind_Resume(a1);
}

void sub_24487B108(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_24487B1E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24487B2B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_24487B3D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_24487B4B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24487B580(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_24487B698(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_24487B778(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24487B848(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_24487B960(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_24487BA40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24487BB10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_24487BC28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_24487BD08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24487BDE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v14 = v13;

  _Unwind_Resume(a1);
}

void sub_24487BF04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_24487BFE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24487C0B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_24487C1CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_24487C2AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24487C37C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_24487C494(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_24487C574(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24487C644(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_24487C75C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_24487C83C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24487C90C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_24487CA24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_24487CB04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24487CBD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_24487CCEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_24487CDCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24487CE9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_24487CFB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_24487D094(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24487D158(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24487D170(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24487D2C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24487D300(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24487D3FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24487D428(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24487D4DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24487D4F4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24487D64C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24487D684(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24487D780(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24487D7AC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24487D850(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24487D868(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24487D9B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24487D9E8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24487DAE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24487DB10(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24487DBB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24487DBCC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24487DD14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24487DD4C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24487DE48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24487DE74(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24487DF18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24487DF30(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24487E078(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24487E0B0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24487E1AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24487E1D8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24487E27C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24487E294(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24487E3DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24487E414(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24487E510(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24487E53C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24487E5E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24487E5F8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24487E740(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24487E778(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24487E874(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24487E8A0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24487E944(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24487E95C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24487EAA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24487EADC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24487EBD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24487EC04(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24487ECA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24487ECC0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24487EE08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24487EE40(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24487EF3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24487EF68(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24487F00C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24487F024(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24487F16C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24487F1A4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24487F2A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24487F2CC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24487F35C(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_24487F4F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24487F544()
{
}

void sub_24487F54C()
{
}

uint64_t sub_24487F554(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24487F6DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24487F730()
{
}

void sub_24487F738()
{
}

uint64_t sub_24487F740(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24487F8C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24487F91C()
{
}

void sub_24487F924()
{
}

uint64_t sub_24487F92C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24487FAB4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24487FB08()
{
}

void sub_24487FB10()
{
}

uint64_t sub_24487FB18(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24487FCA0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24487FCF4()
{
}

void sub_24487FCFC()
{
}

uint64_t sub_24487FD04(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24487FE8C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24487FEE0()
{
}

void sub_24487FEE8()
{
}

uint64_t sub_24487FEF0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244880078(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2448800CC()
{
}

void sub_2448800D4()
{
}

uint64_t sub_2448800DC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244880264(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2448802B8()
{
}

void sub_2448802C0()
{
}

uint64_t sub_2448802C8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244880450(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2448804A4()
{
}

void sub_2448804AC()
{
}

uint64_t sub_2448804B4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488063C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244880690()
{
}

void sub_244880698()
{
}

uint64_t sub_2448806A0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244880828(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24488087C()
{
}

void sub_244880884()
{
}

uint64_t sub_24488088C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244880A14(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244880A68()
{
}

void sub_244880A70()
{
}

uint64_t sub_244880A78(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244880B3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_244880C54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_244880D34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244880E04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_244880F1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_244880FFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448810CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448811E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448812C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244881394(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448814AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_24488158C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24488165C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_244881774(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_244881854(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244881924(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_244881A3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_244881B1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244881BEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_244881D04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_244881DE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244881EB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_244881FCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448820AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24488217C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_244882294(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_244882374(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244882458(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244882470(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448825B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448825F0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448826EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244882718(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448827BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448827D4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488291C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244882954(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244882A50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244882A7C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244882B20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244882B38(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244882C80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244882CB8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244882DB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244882DE0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244882E84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244882E9C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244882FE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488301C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244883118(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244883144(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448831E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244883200(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244883348(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244883380(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488347C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448834A8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488354C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244883564(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448836AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448836E4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448837E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488380C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448838B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448838C8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244883A10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244883A48(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244883B44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244883B70(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244883C14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244883C2C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244883D74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244883DAC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244883EA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244883ED4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244883F64(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_244884104(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244884158()
{
}

void sub_244884160()
{
}

uint64_t sub_244884168(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488422C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_244884344(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_244884424(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448844F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_24488460C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448846EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448847BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448848D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448849B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244884A84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_244884B9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_244884C7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244884D4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_244884E64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_244884F44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244885014(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_244885248(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448852E4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_2448852F8@<X0>(void **a1@<X0>, const char *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, __n128 *a7@<X8>)
{
  v40[0] = 0;
  int v14 = a1[4];
  if (v14)
  {
    unint64_t v15 = objc_msgSend_timedWriteTimeout(v14, a2, (uint64_t)a3);

    if (v15)
    {
      uint64_t v18 = objc_msgSend_timedWriteTimeout(a1[4], v16, v17);
      v40[0] = 1;
      __int16 v41 = objc_msgSend_unsignedShortValue(v18, v19, v20);
    }
  }
  v39[0] = 0;
  v39[1] = 0;
  __int16 v38 = v39;
  id v21 = a1[5];
  uint64_t v24 = objc_msgSend_UTF8String(v21, v22, v23);
  uint64_t v26 = objc_msgSend_lengthOfBytesUsingEncoding_(v21, v25, 4);
  sub_24479476C(&v34, v24, v26);

  long long v37 = v34;
  char v29 = objc_msgSend_endpointID(a1[6], v27, v28);
  LOWORD(v24) = objc_msgSend_unsignedShortValue(v29, v30, v31);
  *(void *)&long long v34 = &unk_26F945B38;
  *((void *)&v34 + 1) = a2;
  sub_244AD7C98((uint64_t)v35, a3);
  v35[20] = v24;
  char v36 = 0;

  v33[0] = 0;
  sub_244ADF450((uint64_t)&v34, (uint64_t)&v37, a6, 0x28u, 5u, a4, a5, v40, a7, 0, (uint64_t)v33);
  *(void *)&long long v34 = &unk_26F945B38;
  sub_244D87F44(v35);
  return sub_24479466C((uint64_t)&v38);
}

void sub_24488548C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2448855AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_24488568C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24488575C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_244885990(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244885A2C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_244885A40@<X0>(void **a1@<X0>, const char *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, __n128 *a7@<X8>)
{
  v40[0] = 0;
  int v14 = a1[4];
  if (v14)
  {
    unint64_t v15 = objc_msgSend_timedWriteTimeout(v14, a2, (uint64_t)a3);

    if (v15)
    {
      uint64_t v18 = objc_msgSend_timedWriteTimeout(a1[4], v16, v17);
      v40[0] = 1;
      __int16 v41 = objc_msgSend_unsignedShortValue(v18, v19, v20);
    }
  }
  v39[0] = 0;
  v39[1] = 0;
  __int16 v38 = v39;
  id v21 = a1[5];
  uint64_t v24 = objc_msgSend_UTF8String(v21, v22, v23);
  uint64_t v26 = objc_msgSend_lengthOfBytesUsingEncoding_(v21, v25, 4);
  sub_24479476C(&v34, v24, v26);

  long long v37 = v34;
  char v29 = objc_msgSend_endpointID(a1[6], v27, v28);
  LOWORD(v24) = objc_msgSend_unsignedShortValue(v29, v30, v31);
  *(void *)&long long v34 = &unk_26F945B38;
  *((void *)&v34 + 1) = a2;
  sub_244AD7C98((uint64_t)v35, a3);
  v35[20] = v24;
  char v36 = 0;

  v33[0] = 0;
  sub_244ADF450((uint64_t)&v34, (uint64_t)&v37, a6, 0x28u, 6u, a4, a5, v40, a7, 0, (uint64_t)v33);
  *(void *)&long long v34 = &unk_26F945B38;
  sub_244D87F44(v35);
  return sub_24479466C((uint64_t)&v38);
}

void sub_244885BD4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244885CF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_244885DD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244885EA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_244885FBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_24488609C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24488616C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_244886284(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_244886364(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244886434(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_24488654C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_24488662C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448866FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_244886814(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448868F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448869C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_244886ADC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_244886BBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244886C8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_244886DA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_244886E84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244886F54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_24488706C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_24488714C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24488721C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_244887334(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_244887414(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448874E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448875FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448876DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448877AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448879E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244887A7C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_244887A90@<X0>(void **a1@<X0>, const char *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, __n128 *a7@<X8>)
{
  v33[0] = 0;
  int v14 = a1[4];
  if (v14)
  {
    unint64_t v15 = objc_msgSend_timedWriteTimeout(v14, a2, (uint64_t)a3);

    if (v15)
    {
      __int16 v16 = objc_msgSend_timedWriteTimeout(a1[4], a2, (uint64_t)a3);
      v33[0] = 1;
      __int16 v34 = objc_msgSend_unsignedShortValue(v16, v17, v18);
    }
  }
  v32[0] = 0;
  v32[1] = 0;
  uint64_t v31 = v32;
  char v30 = objc_msgSend_BOOLValue(a1[5], a2, (uint64_t)a3);
  id v21 = objc_msgSend_endpointID(a1[6], v19, v20);
  __int16 v24 = objc_msgSend_unsignedShortValue(v21, v22, v23);
  v27[0] = &unk_26F945B38;
  v27[1] = a2;
  sub_244AD7C98((uint64_t)v28, a3);
  v28[20] = v24;
  char v29 = 0;

  v26[0] = 0;
  sub_244ADFF7C((uint64_t)v27, a6, 0x28u, 0x10u, a4, a5, v33, a7, 0, (uint64_t)v26);
  v27[0] = &unk_26F945B38;
  sub_244D87F44(v28);
  return sub_24479466C((uint64_t)&v31);
}

void sub_244887BF0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244887D10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_244887DF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244887EC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_244887FD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448880B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244888188(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448882A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_244888380(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244888450(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_244888568(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_244888648(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244888718(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_244888830(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_244888910(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448889E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_244888AF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_244888BD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244888CA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_244888DC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_244888EA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244888F70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_244889088(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_244889168(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244889238(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_244889350(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_244889430(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244889500(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_244889618(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448896F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448897C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448898E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448899C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244889A90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_244889BA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_244889C88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244889D58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_244889E70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_244889F50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24488A014(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488A02C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488A174(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488A1AC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488A2A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488A2D4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488A378(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488A390(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488A4D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488A510(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488A60C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488A638(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488A6DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488A6F4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488A83C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488A874(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488A970(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488A99C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488AA40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488AA58(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488ABA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488ABD8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488ACD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488AD00(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488ADA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488ADBC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488AF04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488AF3C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488B038(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488B064(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488B108(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488B120(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488B278(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488B2B0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488B3AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488B3D8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488B47C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488B494(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488B5EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488B624(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488B720(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488B74C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488B7F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488B808(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488B950(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488B988(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488BA84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488BAB0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488BB54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488BB6C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488BCB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488BCEC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488BDE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488BE14(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488BEB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488BED0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488C018(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488C050(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488C14C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488C178(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488C21C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488C234(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488C37C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488C3B4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488C4B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488C4DC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488C580(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488C598(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488C6E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488C718(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488C814(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488C840(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488C8E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488C8FC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488CA44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488CA7C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488CB78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488CBA4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488CC48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488CC60(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488CDA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488CDE0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488CEDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488CF08(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488CFAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488CFC4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488D10C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488D144(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488D240(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488D26C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488D310(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488D328(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488D470(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488D4A8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488D5A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488D5D0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488D674(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488D68C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488D7E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488D81C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488D918(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488D944(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488D9E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488DA00(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488DB48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488DB80(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488DC7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488DCA8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488DD4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488DD64(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488DEAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488DEE4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488DFE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488E00C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488E0B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488E0C8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488E210(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488E248(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488E344(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488E370(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488E414(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488E42C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488E574(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488E5AC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488E6A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488E6D4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488E778(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488E790(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488E8D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488E910(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488EA0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488EA38(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488EADC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488EAF4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488EC3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488EC74(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488ED70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488ED9C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488EE40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488EE58(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488EFA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488EFD8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488F0D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488F100(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488F1A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488F1BC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488F304(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488F33C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488F438(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488F464(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488F4F4(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_24488F698(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488F6FC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488F890(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24488F8F4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488FA78(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24488FACC()
{
}

void sub_24488FAD4()
{
}

uint64_t sub_24488FADC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24488FBA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_24488FCB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_24488FD98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24488FE68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_24488FF80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_244890060(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244890130(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_244890248(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_244890328(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448903F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_244890510(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448905F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448906C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448907D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448908B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244890988(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_244890AA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_244890B80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244890C44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244890C5C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244890D10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244890D28(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244890DD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244890DE8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244890F30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244890F68(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244891064(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244891090(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244891134(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24489114C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244891294(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448912CC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448913C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448913F4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244891498(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448914B0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448915F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244891630(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24489172C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244891758(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448917FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244891814(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24489195C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244891994(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244891A90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244891ABC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244891B60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244891B78(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244891CC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244891CF8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244891DF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244891E20(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244891EB0(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_244892044(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244892098()
{
}

void sub_2448920A0()
{
}

uint64_t sub_2448920A8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24489217C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v14 = v13;

  _Unwind_Resume(a1);
}

void sub_2448923B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244892450(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_244892464@<X0>(void **a1@<X0>, const char *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, __n128 *a7@<X8>)
{
  v33[0] = 0;
  int v14 = a1[4];
  if (v14)
  {
    unint64_t v15 = objc_msgSend_timedWriteTimeout(v14, a2, (uint64_t)a3);

    if (v15)
    {
      __int16 v16 = objc_msgSend_timedWriteTimeout(a1[4], a2, (uint64_t)a3);
      v33[0] = 1;
      __int16 v34 = objc_msgSend_unsignedShortValue(v16, v17, v18);
    }
  }
  v32[0] = 0;
  v32[1] = 0;
  uint64_t v31 = v32;
  if (objc_msgSend_count(a1[5], a2, (uint64_t)a3)) {
    operator new();
  }
  long long v30 = 0uLL;
  id v21 = objc_msgSend_endpointID(a1[6], v19, v20);
  __int16 v24 = objc_msgSend_unsignedShortValue(v21, v22, v23);
  v27[0] = &unk_26F945B38;
  v27[1] = a2;
  sub_244AD7C98((uint64_t)v28, a3);
  v28[20] = v24;
  char v29 = 0;

  v26[0] = 0;
  sub_244AE0C10((uint64_t)v27, (uint64_t)&v30, a6, 0x2Au, 0, a4, a5, v33, a7, 0, (uint64_t)v26);
  v27[0] = &unk_26F945B38;
  sub_244D87F44(v28);
  return sub_24479466C((uint64_t)&v31);
}

void sub_244892760(_Unwind_Exception *a1)
{
  sub_24479466C(v1 - 120);
  _Unwind_Resume(a1);
}

void sub_2448928D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448929B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244892A84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_244892B9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_244892C7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244892D4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_244892E64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_244892F44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244893014(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_24489312C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_24489320C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448932DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448933F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448934D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448935A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448936BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_24489379C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24489386C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_244893984(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_244893A64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244893B34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_244893C4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_244893D2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244893DFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_244893F14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_244893FF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448940C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448941DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448942BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244894384(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24489439C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448944F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24489452C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244894628(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244894654(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448946F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244894710(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244894858(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244894890(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24489498C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448949B8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244894A5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244894A74(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244894BBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244894BF4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244894CF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244894D1C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244894DC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244894DD8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244894F20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244894F58(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244895054(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244895080(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244895124(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24489513C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244895284(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448952BC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448953B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448953E4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244895488(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448954A0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448955E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244895620(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24489571C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244895748(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448957EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244895804(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24489594C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244895984(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244895A80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244895AAC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244895B50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244895B68(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244895CB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244895CE8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244895DE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244895E10(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244895EB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244895ECC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244896014(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24489604C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244896148(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244896174(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244896204(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_2448962D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_244896508(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448965A4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_2448965B8@<X0>(void **a1@<X0>, const char *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, __n128 *a7@<X8>)
{
  v40[0] = 0;
  int v14 = a1[4];
  if (v14)
  {
    unint64_t v15 = objc_msgSend_timedWriteTimeout(v14, a2, (uint64_t)a3);

    if (v15)
    {
      uint64_t v18 = objc_msgSend_timedWriteTimeout(a1[4], v16, v17);
      v40[0] = 1;
      __int16 v41 = objc_msgSend_unsignedShortValue(v18, v19, v20);
    }
  }
  v39[0] = 0;
  v39[1] = 0;
  __int16 v38 = v39;
  id v21 = a1[5];
  uint64_t v24 = objc_msgSend_UTF8String(v21, v22, v23);
  uint64_t v26 = objc_msgSend_lengthOfBytesUsingEncoding_(v21, v25, 4);
  sub_24479476C(&v34, v24, v26);

  long long v37 = v34;
  char v29 = objc_msgSend_endpointID(a1[6], v27, v28);
  LOWORD(v24) = objc_msgSend_unsignedShortValue(v29, v30, v31);
  *(void *)&long long v34 = &unk_26F945B38;
  *((void *)&v34 + 1) = a2;
  sub_244AD7C98((uint64_t)v35, a3);
  v35[20] = v24;
  char v36 = 0;

  v33[0] = 0;
  sub_244ADF450((uint64_t)&v34, (uint64_t)&v37, a6, 0x2Bu, 0, a4, a5, v40, a7, 0, (uint64_t)v33);
  *(void *)&long long v34 = &unk_26F945B38;
  sub_244D87F44(v35);
  return sub_24479466C((uint64_t)&v38);
}

void sub_24489674C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24489686C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_24489694C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244896A1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_244896B34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_244896C14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244896CE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_244896DFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_244896EDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244896FAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448970C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448971A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244897274(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_24489738C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_24489746C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24489753C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_244897654(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_244897734(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244897804(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_24489791C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448979FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244897ACC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_244897BE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_244897CC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244897D78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244897D90(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244897EE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244897F20(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24489801C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244898048(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448980EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244898104(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24489824C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244898284(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244898380(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448983AC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244898450(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244898468(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448985B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448985E8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448986E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244898710(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448987B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448987CC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244898914(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24489894C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244898A48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244898A74(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244898B18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244898B30(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244898C78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244898CB0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244898DAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244898DD8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244898E7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244898E94(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244898FDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244899014(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244899110(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24489913C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448991E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448991F8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244899340(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244899378(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244899474(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448994A0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_244899530(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_244899600(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_244899834(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448998D0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_2448998E4@<X0>(void **a1@<X0>, const char *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, __n128 *a7@<X8>)
{
  v33[0] = 0;
  int v14 = a1[4];
  if (v14)
  {
    unint64_t v15 = objc_msgSend_timedWriteTimeout(v14, a2, (uint64_t)a3);

    if (v15)
    {
      __int16 v16 = objc_msgSend_timedWriteTimeout(a1[4], a2, (uint64_t)a3);
      v33[0] = 1;
      __int16 v34 = objc_msgSend_unsignedShortValue(v16, v17, v18);
    }
  }
  v32[0] = 0;
  v32[1] = 0;
  uint64_t v31 = v32;
  char v30 = objc_msgSend_unsignedCharValue(a1[5], a2, (uint64_t)a3);
  id v21 = objc_msgSend_endpointID(a1[6], v19, v20);
  __int16 v24 = objc_msgSend_unsignedShortValue(v21, v22, v23);
  v27[0] = &unk_26F945B38;
  v27[1] = a2;
  sub_244AD7C98((uint64_t)v28, a3);
  v28[20] = v24;
  char v29 = 0;

  v26[0] = 0;
  sub_244AE17C0((uint64_t)v27, &v30, a6, 0x2Cu, 0, a4, a5, v33, a7, 0, (uint64_t)v26);
  v27[0] = &unk_26F945B38;
  sub_244D87F44(v28);
  return sub_24479466C((uint64_t)&v31);
}

void sub_244899A44(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244899B64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_244899C44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_244899D14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_244899F48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244899FE4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_244899FF8@<X0>(void **a1@<X0>, const char *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, __n128 *a7@<X8>)
{
  v33[0] = 0;
  int v14 = a1[4];
  if (v14)
  {
    unint64_t v15 = objc_msgSend_timedWriteTimeout(v14, a2, (uint64_t)a3);

    if (v15)
    {
      __int16 v16 = objc_msgSend_timedWriteTimeout(a1[4], a2, (uint64_t)a3);
      v33[0] = 1;
      __int16 v34 = objc_msgSend_unsignedShortValue(v16, v17, v18);
    }
  }
  v32[0] = 0;
  v32[1] = 0;
  uint64_t v31 = v32;
  char v30 = objc_msgSend_unsignedCharValue(a1[5], a2, (uint64_t)a3);
  id v21 = objc_msgSend_endpointID(a1[6], v19, v20);
  __int16 v24 = objc_msgSend_unsignedShortValue(v21, v22, v23);
  v27[0] = &unk_26F945B38;
  v27[1] = a2;
  sub_244AD7C98((uint64_t)v28, a3);
  v28[20] = v24;
  char v29 = 0;

  v26[0] = 0;
  sub_244AE2314((uint64_t)v27, &v30, a6, 0x2Cu, 1u, a4, a5, v33, a7, 0, (uint64_t)v26);
  v27[0] = &unk_26F945B38;
  sub_244D87F44(v28);
  return sub_24479466C((uint64_t)&v31);
}

void sub_24489A158(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24489A278(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_24489A358(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24489A428(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_24489A540(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_24489A620(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24489A6F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_24489A808(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_24489A8E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24489A9B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_24489AAD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_24489ABB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24489AC80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_24489AD98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_24489AE78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24489AF48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_24489B060(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_24489B140(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24489B210(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_24489B328(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_24489B408(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24489B4D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_24489B5F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_24489B6D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24489B784(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24489B79C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24489B8F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24489B92C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24489BA28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24489BA54(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24489BAF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24489BB10(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24489BC68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24489BCA0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24489BD9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24489BDC8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24489BE6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24489BE84(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24489BFCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24489C004(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24489C100(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24489C12C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24489C1D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24489C1E8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24489C330(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24489C368(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24489C464(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24489C490(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24489C534(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24489C54C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24489C694(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24489C6CC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24489C7C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24489C7F4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24489C898(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24489C8B0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24489C9F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24489CA30(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24489CB2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24489CB58(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24489CBFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24489CC14(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24489CD5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24489CD94(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24489CE90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24489CEBC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24489CF60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24489CF78(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24489D0C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24489D0F8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24489D1F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24489D220(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24489D2B0(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_24489D380(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_24489D5B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24489D650(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_24489D664@<X0>(void **a1@<X0>, const char *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, __n128 *a7@<X8>)
{
  v33[0] = 0;
  int v14 = a1[4];
  if (v14)
  {
    unint64_t v15 = objc_msgSend_timedWriteTimeout(v14, a2, (uint64_t)a3);

    if (v15)
    {
      __int16 v16 = objc_msgSend_timedWriteTimeout(a1[4], a2, (uint64_t)a3);
      v33[0] = 1;
      __int16 v34 = objc_msgSend_unsignedShortValue(v16, v17, v18);
    }
  }
  v32[0] = 0;
  v32[1] = 0;
  uint64_t v31 = v32;
  char v30 = objc_msgSend_unsignedCharValue(a1[5], a2, (uint64_t)a3);
  id v21 = objc_msgSend_endpointID(a1[6], v19, v20);
  __int16 v24 = objc_msgSend_unsignedShortValue(v21, v22, v23);
  v27[0] = &unk_26F945B38;
  v27[1] = a2;
  sub_244AD7C98((uint64_t)v28, a3);
  v28[20] = v24;
  char v29 = 0;

  v26[0] = 0;
  sub_244AE2E68((uint64_t)v27, &v30, a6, 0x2Du, 0, a4, a5, v33, a7, 0, (uint64_t)v26);
  v27[0] = &unk_26F945B38;
  sub_244D87F44(v28);
  return sub_24479466C((uint64_t)&v31);
}

void sub_24489D7C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24489D8E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_24489D9C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24489DA94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_24489DBAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_24489DC8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24489DD5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_24489DE74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_24489DF54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24489E024(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_24489E13C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_24489E21C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24489E2EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_24489E404(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_24489E4E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24489E5B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_24489E6CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_24489E7AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24489E87C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_24489E994(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_24489EA74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24489EB28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24489EB40(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24489EC98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24489ECD0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24489EDCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24489EDF8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24489EE9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24489EEB4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24489EFFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24489F034(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24489F130(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24489F15C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24489F200(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24489F218(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24489F360(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24489F398(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24489F494(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24489F4C0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24489F564(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24489F57C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24489F6C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24489F6FC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24489F7F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24489F824(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24489F8C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24489F8E0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24489FA28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24489FA60(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24489FB5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24489FB88(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24489FC2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24489FC44(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24489FD8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24489FDC4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24489FEC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24489FEEC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24489FF7C(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_2448A004C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448A0164(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448A0244(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448A0314(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448A042C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448A050C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448A05DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448A06F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448A07D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448A08A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448A09BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448A0A9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448A0B6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448A0C84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448A0D64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448A0E34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448A0F4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448A102C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448A10FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448A1214(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448A12F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448A13A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448A13C0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448A1508(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448A1540(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448A163C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448A1668(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448A170C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448A1724(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448A186C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448A18A4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448A19A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448A19CC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448A1A70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448A1A88(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448A1BD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448A1C08(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448A1D04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448A1D30(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448A1DD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448A1DEC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448A1F34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448A1F6C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448A2068(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448A2094(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448A2138(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448A2150(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448A2298(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448A22D0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448A23CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448A23F8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448A249C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448A24B4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448A25FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448A2634(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448A2730(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448A275C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448A27EC(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_2448A28BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448A29D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448A2AB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448A2B84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448A2C9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448A2D7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448A2E4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448A2F64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448A3044(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448A3114(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448A322C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448A330C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448A33DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448A34F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448A35D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448A36A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448A37BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448A389C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448A396C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448A3A84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448A3B64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448A3C34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448A3D4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448A3E2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448A3EFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448A4014(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448A40F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448A41C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448A42DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448A43BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448A448C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448A45A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448A4684(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448A4754(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448A486C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448A494C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448A4A1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448A4B34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448A4C14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448A4CE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448A4DFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448A4EDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448A4FAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448A50C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448A51A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448A5274(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448A538C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448A546C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448A553C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448A5654(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448A5734(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448A5804(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448A591C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448A59FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448A5ACC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448A5BE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448A5CC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448A5D94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448A5EAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448A5F8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448A605C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448A6174(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448A6254(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448A6324(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448A643C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448A651C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448A65EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448A6704(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448A67E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448A68B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448A69CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448A6AAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448A6B7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448A6C94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448A6D74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448A6E44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448A6F5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448A703C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448A710C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448A7224(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448A7304(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448A73D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448A74EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448A75CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448A769C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448A77B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448A7894(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448A7964(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448A7A7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448A7B5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448A7C2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448A7D44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448A7E24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448A7EF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448A800C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448A80EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448A81BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448A82D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448A83B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448A8484(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448A859C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448A867C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448A874C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448A8864(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448A8944(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448A8A14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448A8B2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448A8C0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448A8CDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448A8DF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448A8ED4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448A8FA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448A90BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448A919C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448A9250(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448A9268(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448A93B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448A93E8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448A94E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448A9510(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448A95B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448A95CC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448A9714(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448A974C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448A9848(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448A9874(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448A9918(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448A9930(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448A9A78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448A9AB0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448A9BAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448A9BD8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448A9C7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448A9C94(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448A9DDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448A9E14(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448A9F10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448A9F3C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448A9FE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448A9FF8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448AA140(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448AA178(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448AA274(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448AA2A0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448AA344(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448AA35C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448AA4A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448AA4DC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448AA5D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448AA604(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448AA6A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448AA6C0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448AA808(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448AA840(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448AA93C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448AA968(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448AAA0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448AAA24(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448AAB6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448AABA4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448AACA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448AACCC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448AAD70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448AAD88(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448AAED0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448AAF08(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448AB004(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448AB030(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448AB0D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448AB0EC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448AB234(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448AB26C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448AB368(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448AB394(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448AB438(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448AB450(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448AB598(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448AB5D0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448AB6CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448AB6F8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448AB79C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448AB7B4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448AB8FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448AB934(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448ABA30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448ABA5C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448ABB00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448ABB18(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448ABC60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448ABC98(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448ABD94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448ABDC0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448ABE64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448ABE7C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448ABFC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448ABFFC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448AC0F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448AC124(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448AC1C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448AC1E0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448AC328(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448AC360(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448AC45C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448AC488(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448AC52C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448AC544(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448AC68C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448AC6C4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448AC7C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448AC7EC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448AC890(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448AC8A8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448AC9F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448ACA28(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448ACB24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448ACB50(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448ACBF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448ACC0C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448ACD54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448ACD8C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448ACE88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448ACEB4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448ACF58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448ACF70(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448AD0B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448AD0F0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448AD1EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448AD218(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448AD2BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448AD2D4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448AD41C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448AD454(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448AD550(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448AD57C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448AD620(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448AD638(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448AD780(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448AD7B8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448AD8B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448AD8E0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448AD984(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448AD99C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448ADAE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448ADB1C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448ADC18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448ADC44(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448ADCE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448ADD00(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448ADE48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448ADE80(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448ADF7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448ADFA8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448AE04C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448AE064(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448AE1AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448AE1E4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448AE2E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448AE30C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448AE3B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448AE3C8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448AE510(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448AE548(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448AE644(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448AE670(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448AE714(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448AE72C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448AE874(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448AE8AC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448AE9A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448AE9D4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448AEA78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448AEA90(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448AEBD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448AEC10(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448AED0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448AED38(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448AEDDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448AEDF4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448AEF3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448AEF74(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448AF070(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448AF09C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448AF140(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448AF158(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448AF2A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448AF2D8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448AF3D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448AF400(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448AF4A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448AF4BC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448AF604(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448AF63C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448AF738(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448AF764(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448AF808(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448AF820(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448AF968(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448AF9A0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448AFA9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448AFAC8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448AFB6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448AFB84(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448AFCCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448AFD04(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448AFE00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448AFE2C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448AFED0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448AFEE8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448B0030(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448B0068(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448B0164(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448B0190(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448B0234(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448B024C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448B0394(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448B03CC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448B04C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448B04F4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448B0598(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448B05B0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448B06F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448B0730(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448B082C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448B0858(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448B08FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448B0914(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448B0A5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448B0A94(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448B0B90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448B0BBC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448B0C4C(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_2448B0DF0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448B0E54(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448B0FE8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448B104C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448B11EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448B1250(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448B13E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448B1448(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448B1508(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448B173C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448B17D8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_2448B17EC@<X0>(void **a1@<X0>, const char *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, __n128 *a7@<X8>)
{
  v33[0] = 0;
  int v14 = a1[4];
  if (v14)
  {
    unint64_t v15 = objc_msgSend_timedWriteTimeout(v14, a2, (uint64_t)a3);

    if (v15)
    {
      __int16 v16 = objc_msgSend_timedWriteTimeout(a1[4], a2, (uint64_t)a3);
      v33[0] = 1;
      __int16 v34 = objc_msgSend_unsignedShortValue(v16, v17, v18);
    }
  }
  v32[0] = 0;
  v32[1] = 0;
  uint64_t v31 = v32;
  uint64_t v30 = objc_msgSend_unsignedLongLongValue(a1[5], a2, (uint64_t)a3);
  id v21 = objc_msgSend_endpointID(a1[6], v19, v20);
  __int16 v24 = objc_msgSend_unsignedShortValue(v21, v22, v23);
  v27[0] = &unk_26F945B38;
  v27[1] = a2;
  sub_244AD7C98((uint64_t)v28, a3);
  v28[20] = v24;
  char v29 = 0;

  v26[0] = 0;
  sub_244AE3730((uint64_t)v27, a6, 0x30u, 0, a4, a5, v33, a7, 0, (uint64_t)v26);
  v27[0] = &unk_26F945B38;
  sub_244D87F44(v28);
  return sub_24479466C((uint64_t)&v31);
}

void sub_2448B194C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2448B1A6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448B1B4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448B1C1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448B1D34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448B1E14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448B1EE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448B1FFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448B20DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448B21AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448B22C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448B23A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448B2474(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448B258C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448B266C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448B273C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448B2854(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448B2934(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448B2A04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448B2B1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448B2BFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448B2CCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448B2DE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448B2EC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448B2F94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448B30AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448B318C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448B325C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448B3374(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448B3454(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448B3524(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448B363C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448B371C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448B37EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448B3904(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448B39E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448B3AB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448B3BCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448B3CAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448B3D7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448B3E94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448B3F74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448B4044(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448B415C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448B423C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448B430C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448B4424(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448B4504(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448B45C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448B45E0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448B4694(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448B46AC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448B4760(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448B4778(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448B4828(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448B4840(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448B4998(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448B49D0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448B4ACC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448B4AF8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448B4B9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448B4BB4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448B4CFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448B4D34(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448B4E30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448B4E5C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448B4F00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448B4F18(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448B5060(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448B5098(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448B5194(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448B51C0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448B5264(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448B527C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448B53C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448B53FC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448B54F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448B5524(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448B55C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448B55E0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448B5728(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448B5760(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448B585C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448B5888(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448B592C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448B5944(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448B5A8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448B5AC4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448B5BC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448B5BEC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448B5C90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448B5CA8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448B5DF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448B5E28(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448B5F24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448B5F50(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448B5FF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448B600C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448B6154(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448B618C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448B6288(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448B62B4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448B6358(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448B6370(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448B64B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448B64F0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448B65EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448B6618(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448B66BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448B66D4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448B681C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448B6854(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448B6950(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448B697C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448B6A0C(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_2448B6BBC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448B6C20(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448B6DB4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448B6E18(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448B6FAC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448B7010(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448B71A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448B7208(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448B739C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448B7400(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448B7594(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448B75F8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448B778C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448B77F0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448B78B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448B79C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448B7AA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448B7B78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448B7C90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448B7D70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448B7E40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448B7F58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448B8038(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448B8108(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448B8220(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448B8300(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448B83D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448B8604(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448B86A0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_2448B86B4@<X0>(void **a1@<X0>, const char *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, __n128 *a7@<X8>)
{
  v33[0] = 0;
  int v14 = a1[4];
  if (v14)
  {
    unint64_t v15 = objc_msgSend_timedWriteTimeout(v14, a2, (uint64_t)a3);

    if (v15)
    {
      __int16 v16 = objc_msgSend_timedWriteTimeout(a1[4], a2, (uint64_t)a3);
      v33[0] = 1;
      __int16 v34 = objc_msgSend_unsignedShortValue(v16, v17, v18);
    }
  }
  v32[0] = 0;
  v32[1] = 0;
  uint64_t v31 = v32;
  char v30 = objc_msgSend_BOOLValue(a1[5], a2, (uint64_t)a3);
  id v21 = objc_msgSend_endpointID(a1[6], v19, v20);
  __int16 v24 = objc_msgSend_unsignedShortValue(v21, v22, v23);
  v27[0] = &unk_26F945B38;
  v27[1] = a2;
  sub_244AD7C98((uint64_t)v28, a3);
  v28[20] = v24;
  char v29 = 0;

  v26[0] = 0;
  sub_244ADFF7C((uint64_t)v27, a6, 0x31u, 4u, a4, a5, v33, a7, 0, (uint64_t)v26);
  v27[0] = &unk_26F945B38;
  sub_244D87F44(v28);
  return sub_24479466C((uint64_t)&v31);
}

void sub_2448B8814(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2448B8934(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448B8A14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448B8AE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448B8BFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448B8CDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448B8DAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448B8EC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448B8FA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448B9074(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448B918C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448B926C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448B933C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448B9454(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448B9534(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448B9604(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448B971C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448B97FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448B98CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448B99E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448B9AC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448B9B94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448B9CAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448B9D8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448B9E5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448B9F74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448BA054(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448BA124(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448BA23C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448BA31C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448BA3EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448BA504(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448BA5E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448BA6B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448BA7CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448BA8AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448BA97C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448BAA94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448BAB74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448BAC38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448BAC50(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448BAD04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448BAD1C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448BADD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448BADE8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448BAE9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448BAEB4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448BAF68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448BAF80(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448BB034(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448BB04C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448BB0F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448BB108(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448BB250(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448BB288(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448BB384(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448BB3B0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448BB454(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448BB46C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448BB5B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448BB5EC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448BB6E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448BB714(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448BB7B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448BB7D0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448BB918(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448BB950(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448BBA4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448BBA78(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448BBB1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448BBB34(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448BBC7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448BBCB4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448BBDB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448BBDDC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448BBE80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448BBE98(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448BBFF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448BC028(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448BC124(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448BC150(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448BC1F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448BC20C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448BC354(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448BC38C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448BC488(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448BC4B4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448BC558(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448BC570(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448BC6B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448BC6F0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448BC7EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448BC818(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448BC8BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448BC8D4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448BCA1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448BCA54(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448BCB50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448BCB7C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448BCC20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448BCC38(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448BCD80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448BCDB8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448BCEB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448BCEE0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448BCF84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448BCF9C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448BD0E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448BD11C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448BD218(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448BD244(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448BD2E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448BD300(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448BD448(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448BD480(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448BD57C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448BD5A8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448BD64C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448BD664(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448BD7AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448BD7E4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448BD8E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448BD90C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448BD9B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448BD9C8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448BDB10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448BDB48(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448BDC44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448BDC70(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448BDD00(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_2448BDEA4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448BDF08(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448BDFC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448BE0E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448BE1C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448BE290(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448BE3A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448BE488(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448BE558(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448BE670(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448BE750(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448BE820(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448BE938(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448BEA18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448BEAE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448BEC00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448BECE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448BEDB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448BEEC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448BEFA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448BF06C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448BF084(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448BF128(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448BF140(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448BF288(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448BF2C0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448BF3BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448BF3E8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448BF48C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448BF4A4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448BF5EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448BF624(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448BF720(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448BF74C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448BF7F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448BF808(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448BF950(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448BF988(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448BFA84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448BFAB0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448BFB54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448BFB6C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448BFCB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448BFCEC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448BFDE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448BFE14(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448BFEB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448BFED0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448C0018(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448C0050(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448C014C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448C0178(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448C0208(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_2448C039C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2448C03F0()
{
}

void sub_2448C03F8()
{
}

uint64_t sub_2448C0400(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448C05A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448C0608(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448C079C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448C0800(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448C08C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448C09D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448C0AB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448C0B88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448C0CA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448C0D80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448C0E50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448C0F68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448C1048(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448C1118(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448C1230(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448C1310(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448C13E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448C14F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448C15D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448C16A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448C17C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448C18A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448C1970(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448C1A88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448C1B68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448C1C38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448C1D50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448C1E30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448C1F00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448C2018(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448C20F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448C21C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448C22E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448C23C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448C2490(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448C25A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448C2688(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448C2758(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448C2870(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448C2950(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448C2A20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448C2B38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448C2C18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448C2CE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448C2E00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448C2EE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448C2FB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448C30C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448C31A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448C3260(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448C3278(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448C33C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448C33F8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448C34F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448C3520(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448C35C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448C35DC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448C3724(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448C375C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448C3858(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448C3884(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448C3928(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448C3940(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448C3A88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448C3AC0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448C3BBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448C3BE8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448C3C8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448C3CA4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448C3DEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448C3E24(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448C3F20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448C3F4C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448C3FF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448C4008(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448C4150(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448C4188(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448C4284(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448C42B0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448C4354(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448C436C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448C44B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448C44EC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448C45E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448C4614(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448C46B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448C46D0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448C4818(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448C4850(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448C494C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448C4978(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448C4A1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448C4A34(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448C4B7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448C4BB4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448C4CB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448C4CDC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448C4D80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448C4D98(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448C4EE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448C4F18(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448C5014(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448C5040(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448C50E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448C50FC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448C5244(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448C527C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448C5378(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448C53A4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448C5448(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448C5460(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448C55A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448C55E0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448C56DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448C5708(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448C57AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448C57C4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448C590C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448C5944(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448C5A40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448C5A6C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448C5B10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448C5B28(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448C5C70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448C5CA8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448C5DA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448C5DD0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448C5E74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448C5E8C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448C5FD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448C600C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448C6108(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448C6134(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448C61C4(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_2448C6364(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2448C63B8()
{
}

void sub_2448C63C0()
{
}

uint64_t sub_2448C63C8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448C648C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448C65A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448C6684(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448C6754(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448C686C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448C694C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448C6A1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448C6B34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448C6C14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448C6CE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448C6DFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448C6EDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448C6FAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448C70C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448C71A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448C7274(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448C738C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448C746C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448C753C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448C7654(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448C7734(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448C7804(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448C791C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448C79FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448C7ACC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448C7BE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448C7CC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448C7D94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448C7EAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448C7F8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448C8050(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448C8068(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448C81B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448C81E8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448C82E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448C8310(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448C83B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448C83CC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448C8514(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448C854C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448C8648(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448C8674(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448C8718(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448C8730(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448C8878(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448C88B0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448C89AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448C89D8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448C8A7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448C8A94(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448C8BDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448C8C14(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448C8D10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448C8D3C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448C8DE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448C8DF8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448C8F40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448C8F78(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448C9074(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448C90A0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448C9144(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448C915C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448C92A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448C92DC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448C93D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448C9404(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448C94A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448C94C0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448C9608(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448C9640(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448C973C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448C9768(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448C980C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448C9824(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448C996C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448C99A4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448C9AA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448C9ACC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448C9B70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448C9B88(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448C9CD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448C9D08(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448C9E04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448C9E30(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448C9EC0(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_2448CA060(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2448CA0B4()
{
}

void sub_2448CA0BC()
{
}

uint64_t sub_2448CA0C4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448CA188(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448CA2A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448CA380(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448CA450(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448CA568(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448CA648(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448CA718(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448CA830(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448CA910(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448CA9E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448CAAF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448CABD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448CACA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448CADC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448CAEA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448CAF70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448CB088(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448CB168(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448CB238(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448CB350(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448CB430(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448CB500(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448CB618(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448CB6F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448CB7C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448CB8E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448CB9C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448CBA90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448CBBA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448CBC88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448CBD58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448CBE70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448CBF50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448CC020(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448CC138(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448CC218(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448CC2E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448CC400(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448CC4E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448CC5B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448CC6C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448CC7A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448CC878(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448CC990(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448CCA70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448CCB40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448CCC58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448CCD38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448CCE08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448CCF20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448CD000(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448CD0D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448CD1E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448CD2C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448CD398(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448CD4B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448CD590(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448CD660(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448CD778(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448CD858(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448CD928(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448CDA40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448CDB20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448CDBF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448CDD08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448CDDE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448CDEB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448CDFD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448CE0B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448CE180(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448CE298(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448CE378(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448CE448(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448CE560(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448CE640(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448CE710(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448CE828(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448CE908(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448CE9D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448CEAF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448CEBD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448CECA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448CEDB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448CEE98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448CEF68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448CF080(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448CF160(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448CF230(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448CF348(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448CF428(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448CF4F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448CF610(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448CF6F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448CF7C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448CF8D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448CF9B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448CFA88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448CFBA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448CFC80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448CFD50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448CFE68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448CFF48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448D0018(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448D0130(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448D0210(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448D02E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448D03F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448D04D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448D05A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448D06C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448D07A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448D0870(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448D0988(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448D0A68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448D0B38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448D0C50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448D0D30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448D0E00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448D0F18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448D0FF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448D10C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448D11E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448D12C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448D1390(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448D14A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448D1588(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448D1658(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448D1770(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448D1850(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448D1920(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448D1A38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448D1B18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448D1BE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448D1D00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448D1DE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448D1EB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448D1FC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448D20A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448D2178(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448D2290(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448D2370(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448D2440(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448D2558(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448D2638(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448D2708(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448D2820(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448D2900(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448D29D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448D2AE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448D2BC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448D2C98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448D2DB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448D2E90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448D2F60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448D3078(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448D3158(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448D3228(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448D3340(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448D3420(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448D34F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448D3608(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448D36E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448D37B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448D38D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448D39B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448D3A80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448D3B98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448D3C78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448D3D48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448D3E60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448D3F40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448D4010(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448D4128(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448D4208(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448D42D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448D43F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448D44D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448D45A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448D46B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448D4798(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448D4868(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448D4980(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448D4A60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448D4B30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448D4C48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448D4D28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448D4DF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448D4F10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448D4FF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448D50C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448D51D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448D52B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448D5388(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448D54A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448D5580(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448D5650(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448D5768(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448D5848(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448D5918(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448D5A30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448D5B10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448D5BE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448D5CF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448D5DD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448D5EA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448D5FC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448D60A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448D6164(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448D617C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448D62C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448D62FC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448D63F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448D6424(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448D64C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448D64E0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448D6628(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448D6660(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448D675C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448D6788(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448D682C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448D6844(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448D698C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448D69C4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448D6AC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448D6AEC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448D6B90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448D6BA8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448D6CF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448D6D28(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448D6E24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448D6E50(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448D6EF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448D6F0C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448D7054(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448D708C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448D7188(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448D71B4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448D7258(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448D7270(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448D73B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448D73F0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448D74EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448D7518(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448D75BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448D75D4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448D771C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448D7754(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448D7850(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448D787C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448D7920(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448D7938(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448D7A80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448D7AB8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448D7BB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448D7BE0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448D7C84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448D7C9C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448D7DE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448D7E1C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448D7F18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448D7F44(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448D7FE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448D8000(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448D8148(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448D8180(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448D827C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448D82A8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448D834C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448D8364(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448D84AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448D84E4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448D85E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448D860C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448D86B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448D86C8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448D8810(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448D8848(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448D8944(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448D8970(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448D8A14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448D8A2C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448D8B74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448D8BAC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448D8CA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448D8CD4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448D8D78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448D8D90(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448D8ED8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448D8F10(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448D900C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448D9038(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448D90DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448D90F4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448D923C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448D9274(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448D9370(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448D939C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448D9440(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448D9458(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448D95A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448D95D8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448D96D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448D9700(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448D97A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448D97BC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448D9904(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448D993C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448D9A38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448D9A64(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448D9B08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448D9B20(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448D9C68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448D9CA0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448D9D9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448D9DC8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448D9E6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448D9E84(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448D9FCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DA004(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DA100(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DA12C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DA1D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DA1E8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DA330(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DA368(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DA464(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DA490(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DA534(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DA54C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DA694(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DA6CC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DA7C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DA7F4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DA898(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DA8B0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DA9F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DAA30(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DAB2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DAB58(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DABFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DAC14(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DAD5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DAD94(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DAE90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DAEBC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DAF60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DAF78(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DB0C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DB0F8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DB1F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DB220(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DB2C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DB2DC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DB424(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DB45C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DB558(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DB584(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DB628(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DB640(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DB788(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DB7C0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DB8BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DB8E8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DB98C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DB9A4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DBAEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DBB24(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DBC20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DBC4C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DBCF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DBD08(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DBE50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DBE88(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DBF84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DBFB0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DC054(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DC06C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DC1B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DC1EC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DC2E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DC314(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DC3B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DC3D0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DC518(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DC550(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DC64C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DC678(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DC71C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DC734(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DC87C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DC8B4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DC9B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DC9DC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DCA80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DCA98(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DCBE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DCC18(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DCD14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DCD40(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DCDE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DCDFC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DCF44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DCF7C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DD078(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DD0A4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DD148(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DD160(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DD2A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DD2E0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DD3DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DD408(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DD4AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DD4C4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DD60C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DD644(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DD740(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DD76C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DD810(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DD828(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DD970(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DD9A8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DDAA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DDAD0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DDB74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DDB8C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DDCD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DDD0C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DDE08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DDE34(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DDED8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DDEF0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DE038(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DE070(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DE16C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DE198(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DE23C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DE254(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DE39C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DE3D4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DE4D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DE4FC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DE5A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DE5B8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DE700(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DE738(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DE834(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DE860(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DE904(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DE91C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DEA64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DEA9C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DEB98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DEBC4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DEC68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DEC80(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DEDC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DEE00(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DEEFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DEF28(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DEFCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DEFE4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DF12C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DF164(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DF260(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DF28C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DF330(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DF348(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DF490(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DF4C8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DF5C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DF5F0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DF694(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DF6AC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DF7F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DF82C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DF928(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DF954(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DF9F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DFA10(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DFB58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DFB90(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DFC8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DFCB8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DFD5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DFD74(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DFEBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448DFEF4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448DFFF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E001C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E00C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E00D8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E0220(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E0258(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E0354(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E0380(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E0424(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E043C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E0584(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E05BC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E06B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E06E4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E0788(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E07A0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E08E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E0920(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E0A1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E0A48(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E0AEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E0B04(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E0C4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E0C84(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E0D80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E0DAC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E0E50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E0E68(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E0FB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E0FE8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E10E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E1110(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E11B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E11CC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E1314(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E134C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E1448(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E1474(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E1518(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E1530(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E1678(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E16B0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E17AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E17D8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E187C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E1894(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E19DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E1A14(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E1B10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E1B3C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E1BE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E1BF8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E1D40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E1D78(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E1E74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E1EA0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E1F44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E1F5C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E20A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E20DC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E21D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E2204(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E22A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E22C0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E2408(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E2440(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E253C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E2568(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E260C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E2624(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E276C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E27A4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E28A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E28CC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E2970(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E2988(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E2AD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E2B08(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E2C04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E2C30(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E2CD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E2CEC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E2E34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E2E6C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E2F68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E2F94(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E3038(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E3050(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E3198(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E31D0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E32CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E32F8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E339C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E33B4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E34FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E3534(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E3630(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E365C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E3700(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E3718(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E3860(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E3898(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E3994(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E39C0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E3A64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E3A7C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E3BC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E3BFC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E3CF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E3D24(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E3DC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E3DE0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E3F28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E3F60(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E405C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E4088(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E412C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E4144(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E428C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E42C4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E43C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E43EC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E4490(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E44A8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E45F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E4628(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E4724(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E4750(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E47E0(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_2448E4980(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2448E49D4()
{
}

void sub_2448E49DC()
{
}

uint64_t sub_2448E49E4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E4AA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448E4BC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448E4CA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448E4D70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448E4E88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448E4F68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448E5038(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448E5150(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448E5230(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448E5300(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448E5418(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448E54F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448E55C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448E56E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448E57C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448E5890(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448E59A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448E5A88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448E5B58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448E5C70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448E5D50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448E5E20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448E5F38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448E6018(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448E60E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448E6200(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448E62E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448E63B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448E64C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448E65A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448E6678(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448E6790(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448E6870(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448E6940(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448E6A58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448E6B38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448E6C08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448E6D20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448E6E00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448E6ED0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448E6FE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448E70C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448E7198(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448E72B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448E7390(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448E7460(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448E7578(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448E7658(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448E7728(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448E7840(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448E7920(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448E79F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448E7B08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448E7BE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448E7CB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448E7DD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448E7EB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448E7F74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E7F8C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E80D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E810C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E8208(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E8234(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E82D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E82F0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E8438(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E8470(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E856C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E8598(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E863C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E8654(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E879C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E87D4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E88D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E88FC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E89A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E89B8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E8B00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E8B38(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E8C34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E8C60(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E8D04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E8D1C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E8E64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E8E9C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E8F98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E8FC4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E9068(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E9080(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E91C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E9200(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E92FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E9328(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E93CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E93E4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E952C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E9564(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E9660(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E968C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E9730(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E9748(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E9890(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E98C8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E99C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E99F0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E9A94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E9AAC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E9BF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E9C2C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E9D28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E9D54(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E9DF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E9E10(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448E9F58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448E9F90(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448EA08C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448EA0B8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448EA15C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448EA174(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448EA2BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448EA2F4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448EA3F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448EA41C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448EA4C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448EA4D8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448EA620(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448EA658(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448EA754(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448EA780(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448EA824(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448EA83C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448EA984(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448EA9BC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448EAAB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448EAAE4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448EAB88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448EABA0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448EACE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448EAD20(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448EAE1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448EAE48(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448EAEEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448EAF04(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448EB04C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448EB084(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448EB180(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448EB1AC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448EB250(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448EB268(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448EB3B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448EB3E8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448EB4E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448EB510(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448EB5B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448EB5CC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448EB714(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448EB74C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448EB848(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448EB874(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448EB918(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448EB930(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448EBA78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448EBAB0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448EBBAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448EBBD8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448EBC68(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_2448EBE08(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2448EBE5C()
{
}

void sub_2448EBE64()
{
}

uint64_t sub_2448EBE6C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448EBF30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448EC048(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448EC128(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448EC1F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448EC310(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448EC3F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448EC4C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448EC5D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448EC6B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448EC788(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448EC8A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448EC980(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448ECA50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448ECB68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448ECC48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448ECD18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448ECE30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448ECF10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448ECFE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448ED0F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448ED1D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448ED2A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448ED3C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448ED4A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448ED570(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448ED688(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448ED768(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448ED838(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448ED950(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448EDA30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448EDB00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448EDC18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448EDCF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448EDDC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448EDEE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448EDFC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448EE090(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448EE1A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448EE288(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448EE358(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448EE470(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448EE550(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448EE620(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2448EE738(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v15 = v14;

  _Unwind_Resume(a1);
}

void sub_2448EE818(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2448EE8DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448EE8F4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448EEA3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448EEA74(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448EEB70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448EEB9C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448EEC40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448EEC58(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448EEDA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448EEDD8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448EEED4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448EEF00(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448EEFA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448EEFBC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448EF104(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448EF13C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448EF238(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448EF264(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448EF308(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448EF320(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448EF468(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448EF4A0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448EF59C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448EF5C8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448EF66C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448EF684(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448EF7CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448EF804(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448EF900(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448EF92C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448EF9D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448EF9E8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448EFB30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448EFB68(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448EFC64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448EFC90(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448EFD34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448EFD4C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448EFE94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448EFECC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448EFFC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448EFFF4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448F0098(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448F00B0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448F01F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448F0230(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448F032C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448F0358(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448F03FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448F0414(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448F055C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448F0594(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448F0690(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448F06BC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448F0760(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448F0778(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448F08C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448F08F8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448F09F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448F0A20(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448F0AC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2448F0ADC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2448F0C24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}