void sub_2446BE638()
{
  byte_26B0D4360 = 0;
  dword_26B0D4364 = 29;
  qword_26B0D4368 = 0;
  qword_26B0D4358 = (uint64_t)&unk_26F952588;
}

uint64_t sub_2446BE670(void *a1, void *a2)
{
  unint64_t v3 = a1;
  uint64_t v4 = a2;
  v6 = (void *)v4;
  uint64_t isEqual = (v3 | v4) == 0;
  if (v3 && v4) {
    uint64_t isEqual = objc_msgSend_isEqual_((void *)v3, v5, v4);
  }

  return isEqual;
}

void sub_2446BE6D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_2446BE6EC(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  uint64_t v10 = objc_msgSend_compare_(v5, v8, (uint64_t)v6);
  v11 = v6;
  if (v10 != -1)
  {
    if (objc_msgSend_compare_(v5, v9, (uint64_t)v7) == 1) {
      v11 = v7;
    }
    else {
      v11 = v5;
    }
  }
  id v12 = v11;

  return v12;
}

void sub_2446BE778(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *sub_2446BE790(void *a1, void *a2)
{
  id v3 = a2;
  *a1 = &unk_26F943DE8;
  a1[1] = v3;
  uint64_t v4 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  a1[2] = dispatch_queue_create("org.csa-iot.matter.framework.storage.workqueue", v4);

  return a1;
}

uint64_t sub_2446BE804(uint64_t a1)
{
  return a1;
}

uint64_t sub_2446BE838(uint64_t a1)
{
  return a1;
}

void sub_2446BE86C(uint64_t a1)
{
  JUMPOUT(0x245695FA0);
}

void sub_2446BE8C0(uint64_t a1@<X0>, const char *a2@<X1>, uint64_t a3@<X2>, _WORD *a4@<X3>, uint64_t a5@<X8>)
{
  if (a3 || !*a4)
  {
    uint64_t v19 = 0;
    v20 = &v19;
    uint64_t v21 = 0x4812000000;
    v22 = sub_2446BEA4C;
    v23 = nullsub_1;
    v24 = "";
    long long v25 = xmmword_2651932D8;
    uint64_t v26 = 39;
    v9 = objc_msgSend_stringWithUTF8String_(NSString, a2, (uint64_t)a2);
    uint64_t v10 = *(NSObject **)(a1 + 16);
    v13[0] = MEMORY[0x263EF8330];
    v13[1] = 3221225472;
    v13[2] = sub_2446BEA64;
    v13[3] = &unk_2651932F8;
    id v14 = v9;
    v15 = &v19;
    uint64_t v16 = a1;
    v17 = a4;
    uint64_t v18 = a3;
    id v11 = v9;
    dispatch_sync(v10, v13);
    id v12 = v20;
    *(_OWORD *)a5 = *((_OWORD *)v20 + 3);
    *(void *)(a5 + 16) = v12[8];

    _Block_object_dispose(&v19, 8);
  }
  else
  {
    *(_DWORD *)a5 = 47;
    *(void *)(a5 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "MTRPersistentStorageDelegateBridge.mm";
    *(_DWORD *)(a5 + 16) = 36;
  }
}

void sub_2446BEA34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

__n128 sub_2446BEA4C(__n128 *a1, __n128 *a2)
{
  __n128 result = a2[3];
  a1[4].n128_u64[0] = a2[4].n128_u64[0];
  a1[3] = result;
  return result;
}

void sub_2446BEA64(uint64_t *a1, const char *a2)
{
  id v3 = objc_msgSend_storageDataForKey_(*(void **)(a1[6] + 8), a2, a1[4]);
  if (v3)
  {
    id v19 = v3;
    if ((unint64_t)objc_msgSend_length(v3, v4, v5) < 0x10000)
    {
      unsigned __int16 v10 = objc_msgSend_length(v19, v6, v7);
      id v11 = (unsigned __int16 *)a1[7];
      if (*v11 >= v10)
      {
        int v13 = v10;
        unsigned __int16 *v11 = v10;
      }
      else
      {
        uint64_t v12 = *(void *)(a1[5] + 8);
        *(_DWORD *)(v12 + 48) = 25;
        *(void *)(v12 + 56) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework"
                                "/CHIP/MTRPersistentStorageDelegateBridge.mm";
        *(_DWORD *)(v12 + 64) = 61;
        int v13 = *(unsigned __int16 *)a1[7];
      }
      id v3 = v19;
      if (!v13) {
        goto LABEL_11;
      }
      id v14 = (void *)a1[8];
      id v15 = v19;
      uint64_t v18 = (const void *)objc_msgSend_bytes(v15, v16, v17);
      memcpy(v14, v18, *(unsigned __int16 *)a1[7]);
    }
    else
    {
      uint64_t v8 = *(void *)(a1[5] + 8);
      *(_DWORD *)(v8 + 48) = 159;
      *(void *)(v8 + 56) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CH"
                             "IP/MTRPersistentStorageDelegateBridge.mm";
      *(_DWORD *)(v8 + 64) = 55;
    }
    id v3 = v19;
  }
  else
  {
    uint64_t v9 = *(void *)(a1[5] + 8);
    *(_DWORD *)(v9 + 48) = 160;
    *(void *)(v9 + 56) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP"
                           "/MTRPersistentStorageDelegateBridge.mm";
    *(_DWORD *)(v9 + 64) = 50;
  }
LABEL_11:
}

void sub_2446BEB90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2446BEBA8(uint64_t a1@<X0>, const char *a2@<X1>, uint64_t a3@<X2>, unsigned int a4@<W3>, uint64_t a5@<X8>)
{
  if (a3 || !a4)
  {
    id v11 = objc_msgSend_stringWithUTF8String_(NSString, a2, (uint64_t)a2);
    if (a3) {
      objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v9, a3, a4);
    }
    else {
    uint64_t v12 = objc_msgSend_data(MEMORY[0x263EFF8F8], v9, v10);
    }
    uint64_t v22 = 0;
    v23 = &v22;
    uint64_t v24 = 0x4812000000;
    long long v25 = sub_2446BEA4C;
    uint64_t v26 = nullsub_1;
    v27 = "";
    long long v28 = xmmword_265193318;
    uint64_t v29 = 84;
    int v13 = *(NSObject **)(a1 + 16);
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = sub_2446BED6C;
    block[3] = &unk_265193338;
    id v18 = v12;
    id v19 = v11;
    v20 = &v22;
    uint64_t v21 = a1;
    id v14 = v11;
    id v15 = v12;
    dispatch_sync(v13, block);
    uint64_t v16 = v23;
    *(_OWORD *)a5 = *((_OWORD *)v23 + 3);
    *(void *)(a5 + 16) = v16[8];

    _Block_object_dispose(&v22, 8);
  }
  else
  {
    *(_DWORD *)a5 = 47;
    *(void *)(a5 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "MTRPersistentStorageDelegateBridge.mm";
    *(_DWORD *)(a5 + 16) = 78;
  }
}

void sub_2446BED58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2446BED6C(uint64_t *a1, const char *a2)
{
  uint64_t result = objc_msgSend_setStorageData_forKey_(*(void **)(a1[7] + 8), a2, a1[4], a1[5]);
  if ((result & 1) == 0)
  {
    uint64_t v4 = *(void *)(a1[6] + 8);
    *(_DWORD *)(v4 + 48) = 159;
    *(void *)(v4 + 56) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP"
                           "/MTRPersistentStorageDelegateBridge.mm";
    *(_DWORD *)(v4 + 64) = 91;
  }
  return result;
}

void sub_2446BEDC4(uint64_t a1@<X0>, const char *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = objc_msgSend_stringWithUTF8String_(NSString, a2, (uint64_t)a2);
  uint64_t v13 = 0;
  id v14 = &v13;
  uint64_t v15 = 0x4812000000;
  uint64_t v16 = sub_2446BEA4C;
  uint64_t v17 = nullsub_1;
  id v18 = "";
  long long v19 = xmmword_265193358;
  uint64_t v20 = 102;
  id v6 = *(NSObject **)(a1 + 16);
  v9[0] = MEMORY[0x263EF8330];
  v9[1] = 3221225472;
  v9[2] = sub_2446BEEF8;
  v9[3] = &unk_265193378;
  id v11 = &v13;
  uint64_t v12 = a1;
  id v10 = v5;
  id v7 = v5;
  dispatch_sync(v6, v9);
  uint64_t v8 = v14;
  *(_OWORD *)a3 = *((_OWORD *)v14 + 3);
  *(void *)(a3 + 16) = v8[8];

  _Block_object_dispose(&v13, 8);
}

uint64_t sub_2446BEEF8(uint64_t *a1, const char *a2)
{
  uint64_t result = objc_msgSend_removeStorageDataForKey_(*(void **)(a1[6] + 8), a2, a1[4]);
  if ((result & 1) == 0)
  {
    uint64_t v4 = *(void *)(a1[5] + 8);
    *(_DWORD *)(v4 + 48) = 160;
    *(void *)(v4 + 56) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP"
                           "/MTRPersistentStorageDelegateBridge.mm";
    *(_DWORD *)(v4 + 64) = 109;
  }
  return result;
}

BOOL sub_2446BEF50(uint64_t a1)
{
  __int16 v4 = 0;
  memset(v3, 0, sizeof(v3));
  (*(void (**)(void *__return_ptr))(*(void *)a1 + 16))(v3);
  return LODWORD(v3[0]) == 25 || LODWORD(v3[0]) == 0;
}

void *sub_2446BF0E8(void *result)
{
  *uint64_t result = &unk_26F943E50;
  result[1] = 0;
  result[2] = 0;
  result[3] = 0;
  return result;
}

id *sub_2446BF10C(id *a1)
{
  objc_destroyWeak(a1 + 1);
  return a1;
}

void sub_2446BF14C(id *a1)
{
  sub_2446BF10C(a1);

  JUMPOUT(0x245695FA0);
}

void sub_2446BF184(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v13 = a3;
  id v8 = a4;
  uint64_t v9 = (id *)(a1 + 8);
  if (v13 && v8)
  {
    objc_storeWeak(v9, a2);
    objc_storeStrong((id *)(a1 + 16), a3);
    id v10 = v8;
    id v11 = *(void **)(a1 + 24);
    *(void *)(a1 + 24) = v10;
  }
  else
  {
    objc_storeWeak(v9, 0);
    uint64_t v12 = *(void **)(a1 + 16);
    *(void *)(a1 + 16) = 0;

    id v11 = *(void **)(a1 + 24);
    *(void *)(a1 + 24) = 0;
  }
}

uint64_t sub_2446BF248(uint64_t a1, int a2)
{
  if (a2) {
    return 2 * (a2 == 1);
  }
  else {
    return 1;
  }
}

void sub_2446BF260(uint64_t a1, int a2)
{
  uint64_t v20 = *MEMORY[0x263EF8340];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 8));
  uint64_t v5 = sub_244CC8484(0, "NotSpecified");
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412546;
    *(void *)&long long v18 = WeakRetained;
    WORD4(v18) = 1024;
    *(_DWORD *)((char *)&v18 + 10) = a2;
    _os_log_impl(&dword_2446BD000, v5, OS_LOG_TYPE_DEFAULT, "%@ DeviceControllerDelegate status updated: %d", buf, 0x12u);
  }

  if (sub_244CC4E58(2u)) {
    sub_244CC4DE0(0, 2);
  }
  if (a2 == 1)
  {
    *(_DWORD *)buf = 1;
    *(void *)((char *)&v18 + 4) = "dwnfw_setup_pase_session";
    HIDWORD(v18) = 50;
    char v19 = 3;
    sub_244D7E78C((uint64_t)buf);
  }
  id v6 = *(id *)(a1 + 16);
  if (v6 && *(void *)(a1 + 24) && WeakRetained)
  {
    if (objc_opt_respondsToSelector())
    {
      if (a2) {
        uint64_t v7 = 2 * (a2 == 1);
      }
      else {
        uint64_t v7 = 1;
      }
      id v8 = *(NSObject **)(a1 + 24);
      block[0] = MEMORY[0x263EF8330];
      block[1] = 3221225472;
      block[2] = sub_2446BF4F8;
      block[3] = &unk_2651933A0;
      id v14 = v6;
      id v15 = WeakRetained;
      uint64_t v16 = v7;
      dispatch_async(v8, block);
    }
    if (a2 == 1 && (objc_opt_respondsToSelector() & 1) != 0)
    {
      uint64_t v9 = *(void *)(a1 + 32);
      int v10 = 50;
      id v11 = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTRDeviceContr"
            "ollerDelegateBridge.mm";
      int v12 = 90;
      (*(void (**)(uint64_t, uint64_t, int *))(*(void *)a1 + 40))(a1, v9, &v10);
    }
  }
}

void sub_2446BF4CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2446BF4F8(uint64_t a1, const char *a2)
{
  return objc_msgSend_controller_statusUpdate_(*(void **)(a1 + 32), a2, *(void *)(a1 + 40), *(void *)(a1 + 48));
}

void sub_2446BF508(uint64_t a1, long long *a2)
{
  uint64_t v20 = *MEMORY[0x263EF8340];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 8));
  if (*(_DWORD *)a2)
  {
    uint64_t v5 = sub_244CC8484(0, "NotSpecified");
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      *(_OWORD *)long long v18 = *a2;
      uint64_t v19 = *((void *)a2 + 2);
      *(_DWORD *)buf = 138412546;
      id v15 = WeakRetained;
      __int16 v16 = 2080;
      uint64_t v17 = sub_244CB7B34((const char **)v18, 1);
      _os_log_impl(&dword_2446BD000, v5, OS_LOG_TYPE_ERROR, "%@ MTRDeviceControllerDelegate PASE session establishment failed: %s", buf, 0x16u);
    }

    if (sub_244CC4E58(1u))
    {
      *(_OWORD *)long long v18 = *a2;
      uint64_t v19 = *((void *)a2 + 2);
      sub_244CB7B34((const char **)v18, 1);
      sub_244CC4DE0(0, 1);
    }
  }
  else
  {
    id v6 = sub_244CC8484(0, "NotSpecified");
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long v18 = 138412290;
      *(void *)&v18[4] = WeakRetained;
      _os_log_impl(&dword_2446BD000, v6, OS_LOG_TYPE_DEFAULT, "%@ MTRDeviceControllerDelegate PASE session establishment succeeded.", v18, 0xCu);
    }

    if (sub_244CC4E58(2u)) {
      sub_244CC4DE0(0, 2);
    }
  }
  *(_DWORD *)long long v18 = 1;
  *(void *)&v18[8] = "dwnfw_setup_pase_session";
  LODWORD(v19) = *(_DWORD *)a2;
  BYTE4(v19) = 3;
  sub_244D7E78C((uint64_t)v18);
  id v7 = *(id *)(a1 + 16);
  if (v7 && *(void *)(a1 + 24) && WeakRetained && (objc_opt_respondsToSelector() & 1) != 0)
  {
    id v8 = *(NSObject **)(a1 + 24);
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = sub_2446BF7F4;
    block[3] = &unk_2651933C8;
    long long v12 = *a2;
    uint64_t v13 = *((void *)a2 + 2);
    id v10 = v7;
    id v11 = WeakRetained;
    dispatch_async(v8, block);
  }
}

void sub_2446BF7B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446BF7F4(uint64_t a1)
{
  long long v4 = *(_OWORD *)(a1 + 48);
  uint64_t v5 = *(void *)(a1 + 64);
  v2 = sub_244B26908((uint64_t)MTRError, &v4);
  objc_msgSend_controller_commissioningSessionEstablishmentDone_(*(void **)(a1 + 32), v3, *(void *)(a1 + 40), v2);
}

void sub_2446BF854(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2446BF864(uint64_t a1, long long *a2)
{
  uint64_t v12 = *MEMORY[0x263EF8340];
  id v3 = sub_244CC8484(0, "NotSpecified");
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    long long v8 = *a2;
    uint64_t v9 = *((void *)a2 + 2);
    long long v4 = sub_244CB7B34((const char **)&v8, 1);
    *(_DWORD *)buf = 136315138;
    id v11 = v4;
    _os_log_impl(&dword_2446BD000, v3, OS_LOG_TYPE_DEFAULT, "DeviceControllerDelegate Pairing deleted. Status %s", buf, 0xCu);
  }

  uint64_t result = sub_244CC4E58(2u);
  if (result)
  {
    long long v6 = *a2;
    uint64_t v7 = *((void *)a2 + 2);
    sub_244CB7B34((const char **)&v6, 1);
    return sub_244CC4DE0(0, 2);
  }
  return result;
}

void sub_2446BF970(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446BF988(uint64_t a1, uint64_t a2)
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 8));
  int v5 = *(unsigned __int16 *)(a2 + 12);
  int v6 = *(unsigned __int16 *)(a2 + 14);
  uint64_t v7 = sub_244CC8484(0, "NotSpecified");
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412802;
    id v16 = WeakRetained;
    __int16 v17 = 1024;
    int v18 = v5;
    __int16 v19 = 1024;
    int v20 = v6;
    _os_log_impl(&dword_2446BD000, v7, OS_LOG_TYPE_DEFAULT, "%@ DeviceControllerDelegate Read Commissioning Info. VendorId %u ProductId %u", buf, 0x18u);
  }

  if (sub_244CC4E58(2u)) {
    sub_244CC4DE0(0, 2);
  }
  id v8 = *(id *)(a1 + 16);
  if (v8 && *(void *)(a1 + 24) && WeakRetained && (objc_opt_respondsToSelector() & 1) != 0)
  {
    uint64_t v9 = *(NSObject **)(a1 + 24);
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = sub_2446BFB7C;
    block[3] = &unk_2651933F0;
    __int16 v13 = v5;
    __int16 v14 = v6;
    id v11 = v8;
    id v12 = WeakRetained;
    dispatch_async(v9, block);
  }
}

void sub_2446BFB54(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446BFB7C(uint64_t a1)
{
  v2 = [MTRProductIdentity alloc];
  long long v4 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v3, *(unsigned __int16 *)(a1 + 48));
  int v6 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v5, *(unsigned __int16 *)(a1 + 50));
  id v9 = (id)objc_msgSend_initWithVendorID_productID_(v2, v7, (uint64_t)v4, v6);

  objc_msgSend_controller_readCommissioningInfo_(*(void **)(a1 + 32), v8, *(void *)(a1 + 40), v9);
}

void sub_2446BFC24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_2446BFC4C(uint64_t a1, uint64_t a2, long long *a3)
{
  uint64_t v41 = *MEMORY[0x263EF8340];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 8));
  uint64_t v7 = sub_244CC8484(0, "NotSpecified");
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    long long v35 = *a3;
    uint64_t v36 = *((void *)a3 + 2);
    id v8 = sub_244CB7B34((const char **)&v35, 1);
    *(_DWORD *)buf = 138412802;
    *(void *)v38 = WeakRetained;
    *(_WORD *)&v38[8] = 2048;
    *(void *)&v38[10] = a2;
    __int16 v39 = 2080;
    v40 = v8;
    _os_log_impl(&dword_2446BD000, v7, OS_LOG_TYPE_DEFAULT, "%@ DeviceControllerDelegate Commissioning complete. NodeId 0x%016llx Status %s", buf, 0x20u);
  }

  if (sub_244CC4E58(2u))
  {
    long long v33 = *a3;
    uint64_t v34 = *((void *)a3 + 2);
    sub_244CB7B34((const char **)&v33, 1);
    sub_244CC4DE0(0, 2);
  }
  *(_DWORD *)buf = 1;
  *(void *)&v38[4] = "dwnfw_device_commissioning";
  *(_DWORD *)&v38[12] = *(_DWORD *)a3;
  v38[16] = 3;
  sub_244D7E78C((uint64_t)buf);
  id v11 = *(id *)(a1 + 16);
  if (v11 && *(void *)(a1 + 24) && WeakRetained)
  {
    id v12 = objc_msgSend_sharedInstance(MTRMetricsCollector, v9, v10);
    __int16 v14 = objc_msgSend_metricSnapshot_(v12, v13, 1);

    id v15 = sub_244CC8484(0, "NotSpecified");
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412546;
      *(void *)v38 = WeakRetained;
      *(_WORD *)&v38[8] = 2112;
      *(void *)&v38[10] = v14;
      _os_log_impl(&dword_2446BD000, v15, OS_LOG_TYPE_DEFAULT, "%@ Device commissioning complete with metrics %@", buf, 0x16u);
    }

    if (sub_244CC4E58(2u)) {
      sub_244CC4DE0(0, 2);
    }
    if (objc_opt_respondsToSelector() & 1) != 0 || (objc_opt_respondsToSelector())
    {
      id v16 = *(NSObject **)(a1 + 24);
      block[0] = MEMORY[0x263EF8330];
      block[1] = 3221225472;
      block[2] = sub_2446C005C;
      block[3] = &unk_265193418;
      long long v30 = *a3;
      uint64_t v31 = *((void *)a3 + 2);
      uint64_t v32 = a2;
      id v27 = v11;
      id v28 = WeakRetained;
      id v29 = v14;
      id v17 = v14;
      dispatch_async(v16, block);

      int v18 = &v27;
      __int16 v19 = &v28;
    }
    else
    {
      if ((objc_opt_respondsToSelector() & 1) == 0) {
        goto LABEL_16;
      }
      int v20 = *(NSObject **)(a1 + 24);
      v21[0] = MEMORY[0x263EF8330];
      v21[1] = 3221225472;
      v21[2] = sub_2446C0138;
      v21[3] = &unk_2651933C8;
      long long v24 = *a3;
      uint64_t v25 = *((void *)a3 + 2);
      int v18 = &v22;
      id v22 = v11;
      __int16 v19 = &v23;
      id v23 = WeakRetained;
      dispatch_async(v20, v21);
    }

LABEL_16:
  }
}

void sub_2446C0008(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446C005C(uint64_t a1)
{
  long long v9 = *(_OWORD *)(a1 + 56);
  uint64_t v10 = *(void *)(a1 + 72);
  id v3 = sub_244B26908((uint64_t)MTRError, &v9);
  if (*(_DWORD *)(a1 + 56))
  {
    long long v4 = 0;
  }
  else
  {
    long long v4 = objc_msgSend_numberWithUnsignedLongLong_(NSNumber, v2, *(void *)(a1 + 80));
  }
  char v6 = objc_opt_respondsToSelector();
  uint64_t v7 = *(void **)(a1 + 32);
  uint64_t v8 = *(void *)(a1 + 40);
  if (v6) {
    objc_msgSend_controller_commissioningComplete_nodeID_metrics_(v7, v5, v8, v3, v4, *(void *)(a1 + 48));
  }
  else {
    objc_msgSend_controller_commissioningComplete_nodeID_(v7, v5, v8, v3, v4);
  }
}

void sub_2446C0124(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446C0138(uint64_t a1)
{
  long long v4 = *(_OWORD *)(a1 + 48);
  uint64_t v5 = *(void *)(a1 + 64);
  v2 = sub_244B26908((uint64_t)MTRError, &v4);
  objc_msgSend_controller_commissioningComplete_(*(void **)(a1 + 32), v3, *(void *)(a1 + 40), v2);
}

void sub_2446C0198(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2446C01A8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 32) = a2;
  return result;
}

void sub_2446C0248(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446C0494(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446C08B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446C0A4C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446C0D78(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446C0F90(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446C106C(_Unwind_Exception *a1)
{
  uint64_t v7 = v6;

  _Unwind_Resume(a1);
}

void *sub_2446C1098(void *result, uint64_t a2, uint64_t a3)
{
  *uint64_t result = a2;
  result[1] = a3;
  if (!a2)
  {
    if (a3) {
      sub_244E1E494();
    }
  }
  return result;
}

uint64_t sub_2446C10E4()
{
  sub_244CC4CFC(v1);
  return sub_244CC4E48(0);
}

void sub_2446C11F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446C12B0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v29 = *MEMORY[0x263EF8340];
  if (*(void *)(a2 + 8) == 20)
  {
    __n[0] = 0;
    __n[1] = 0;
    if (objc_msgSend_count(*(void **)(a1 + 8), (const char *)a2, a3))
    {
      uint64_t v9 = 0;
      uint64_t v10 = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTRAttestation"
            "TrustStoreBridge.mm";
      while (1)
      {
        v27[0] = 0;
        v27[1] = 0;
        int v28 = 0;
        objc_msgSend_objectAtIndexedSubscript_(*(void **)(a1 + 8), v8, v9);
        id v11 = objc_claimAutoreleasedReturnValue();
        uint64_t v14 = objc_msgSend_bytes(v11, v12, v13);
        uint64_t v17 = objc_msgSend_length(v11, v15, v16);
        sub_2446C1098(__s2, v14, v17);

        *(_OWORD *)__n = *(_OWORD *)__s2;
        long long v24 = v27;
        uint64_t v25 = 20;
        sub_244CEFCC4((uint64_t *)__n, (uint64_t *)&v24, (uint64_t)__s2);
        if (LODWORD(__s2[0]))
        {
          int v20 = 34;
          int v21 = 172;
          goto LABEL_15;
        }
        sub_2446C1098(__s2, (uint64_t)v24, v25);
        __int16 v19 = *(void **)(a2 + 8);
        if (v19 == __s2[1] && (!v19 || !memcmp(*(const void **)a2, __s2[0], (size_t)v19))) {
          break;
        }
        if (++v9 >= (unint64_t)objc_msgSend_count(*(void **)(a1 + 8), v18, (uint64_t)v19)) {
          goto LABEL_9;
        }
      }
      unint64_t v22 = __n[1];
      if (*(void *)(a3 + 8) >= __n[1])
      {
        memcpy(*(void **)a3, (const void *)__n[0], __n[1]);
        sub_2446C1548(a3, v22);
        int v21 = 0;
        int v20 = 380;
        uint64_t v10 = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/lib/support/Span.h";
      }
      else
      {
        int v20 = 375;
        uint64_t v10 = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/lib/support/Span.h";
        int v21 = 25;
      }
LABEL_15:
      *(_DWORD *)a4 = v21;
      *(void *)(a4 + 8) = v10;
    }
    else
    {
LABEL_9:
      *(_DWORD *)a4 = 74;
      *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/MTRAttestationTrustStoreBridge.mm";
      int v20 = 41;
    }
  }
  else
  {
    *(_DWORD *)a4 = 47;
    *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "MTRAttestationTrustStoreBridge.mm";
    int v20 = 24;
  }
  *(_DWORD *)(a4 + 16) = v20;
}

void sub_2446C14B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2446C14D0(uint64_t a1)
{
  return a1;
}

void sub_2446C14FC(uint64_t a1)
{
  JUMPOUT(0x245695FA0);
}

uint64_t sub_2446C1548(uint64_t result, unint64_t a2)
{
  if (*(void *)(result + 8) < a2) {
    sub_244E1E644();
  }
  *(void *)(result + 8) = a2;
  return result;
}

void sub_2446C1570(void *a1, int a2, int a3, const char *a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint8_t buf)
{
  _os_log_impl(a1, v13, OS_LOG_TYPE_ERROR, a4, &buf, 0x1Cu);
}

__CFString *MTRClusterNameForID(uint64_t a1, const char *a2)
{
  if ((int)a1 <= 256)
  {
    switch((int)a1)
    {
      case 3:
        id v3 = @"Identify";
        return v3;
      case 4:
        id v3 = @"Groups";
        return v3;
      case 5:
      case 7:
      case 9:
      case 10:
      case 11:
      case 12:
      case 13:
      case 14:
      case 15:
      case 16:
      case 17:
      case 18:
      case 19:
      case 20:
      case 21:
      case 22:
      case 23:
      case 24:
      case 25:
      case 26:
      case 27:
      case 32:
      case 33:
      case 34:
      case 35:
      case 36:
      case 38:
      case 39:
      case 58:
      case 61:
      case 66:
      case 67:
      case 68:
      case 75:
      case 76:
      case 77:
      case 78:
      case 79:
      case 88:
      case 90:
      case 99:
      case 100:
      case 101:
      case 102:
      case 103:
      case 104:
      case 105:
      case 106:
      case 107:
      case 108:
      case 109:
      case 110:
      case 111:
      case 112:
      case 115:
      case 116:
      case 117:
      case 118:
      case 119:
      case 120:
      case 121:
      case 122:
      case 123:
      case 124:
      case 125:
      case 126:
      case 127:
      case 130:
      case 131:
      case 132:
      case 133:
      case 134:
      case 135:
      case 136:
      case 137:
      case 138:
      case 139:
      case 140:
      case 141:
      case 142:
      case 143:
      case 146:
      case 147:
      case 149:
      case 154:
        goto LABEL_83;
      case 6:
        id v3 = @"OnOff";
        return v3;
      case 8:
        id v3 = @"LevelControl";
        return v3;
      case 28:
        id v3 = @"PulseWidthModulation";
        return v3;
      case 29:
        id v3 = @"Descriptor";
        return v3;
      case 30:
        id v3 = @"Binding";
        return v3;
      case 31:
        id v3 = @"AccessControl";
        return v3;
      case 37:
        id v3 = @"Actions";
        return v3;
      case 40:
        id v3 = @"BasicInformation";
        return v3;
      case 41:
        id v3 = @"OTASoftwareUpdateProvider";
        return v3;
      case 42:
        id v3 = @"OTASoftwareUpdateRequestor";
        return v3;
      case 43:
        id v3 = @"LocalizationConfiguration";
        return v3;
      case 44:
        id v3 = @"TimeFormatLocalization";
        return v3;
      case 45:
        id v3 = @"UnitLocalization";
        return v3;
      case 46:
        id v3 = @"PowerSourceConfiguration";
        return v3;
      case 47:
        id v3 = @"PowerSource";
        return v3;
      case 48:
        id v3 = @"GeneralCommissioning";
        return v3;
      case 49:
        id v3 = @"NetworkCommissioning";
        return v3;
      case 50:
        id v3 = @"DiagnosticLogs";
        return v3;
      case 51:
        id v3 = @"GeneralDiagnostics";
        return v3;
      case 52:
        id v3 = @"SoftwareDiagnostics";
        return v3;
      case 53:
        id v3 = @"ThreadNetworkDiagnostics";
        return v3;
      case 54:
        id v3 = @"WiFiNetworkDiagnostics";
        return v3;
      case 55:
        id v3 = @"EthernetNetworkDiagnostics";
        return v3;
      case 56:
        id v3 = @"TimeSynchronization";
        return v3;
      case 57:
        id v3 = @"BridgedDeviceBasicInformation";
        return v3;
      case 59:
        id v3 = @"Switch";
        return v3;
      case 60:
        id v3 = @"AdministratorCommissioning";
        return v3;
      case 62:
        id v3 = @"OperationalCredentials";
        return v3;
      case 63:
        id v3 = @"GroupKeyManagement";
        return v3;
      case 64:
        id v3 = @"FixedLabel";
        return v3;
      case 65:
        id v3 = @"UserLabel";
        return v3;
      case 69:
        id v3 = @"BooleanState";
        return v3;
      case 70:
        id v3 = @"ICDManagement";
        return v3;
      case 71:
        id v3 = @"Timer";
        return v3;
      case 72:
        id v3 = @"OvenCavityOperationalState";
        return v3;
      case 73:
        id v3 = @"OvenMode";
        return v3;
      case 74:
        id v3 = @"LaundryDryerControls";
        return v3;
      case 80:
        id v3 = @"ModeSelect";
        return v3;
      case 81:
        id v3 = @"LaundryWasherMode";
        return v3;
      case 82:
        id v3 = @"RefrigeratorAndTemperatureControlledCabinetMode";
        return v3;
      case 83:
        id v3 = @"LaundryWasherControls";
        return v3;
      case 84:
        id v3 = @"RVCRunMode";
        return v3;
      case 85:
        id v3 = @"RVCCleanMode";
        return v3;
      case 86:
        id v3 = @"TemperatureControl";
        return v3;
      case 87:
        id v3 = @"RefrigeratorAlarm";
        return v3;
      case 89:
        id v3 = @"DishwasherMode";
        return v3;
      case 91:
        id v3 = @"AirQuality";
        return v3;
      case 92:
        id v3 = @"SmokeCOAlarm";
        return v3;
      case 93:
        id v3 = @"DishwasherAlarm";
        return v3;
      case 94:
        id v3 = @"MicrowaveOvenMode";
        return v3;
      case 95:
        id v3 = @"MicrowaveOvenControl";
        return v3;
      case 96:
        id v3 = @"OperationalState";
        return v3;
      case 97:
        id v3 = @"RVCOperationalState";
        return v3;
      case 98:
        id v3 = @"ScenesManagement";
        return v3;
      case 113:
        id v3 = @"HEPAFilterMonitoring";
        return v3;
      case 114:
        id v3 = @"ActivatedCarbonFilterMonitoring";
        return v3;
      case 128:
        id v3 = @"BooleanStateConfiguration";
        return v3;
      case 129:
        id v3 = @"ValveConfigurationAndControl";
        return v3;
      case 144:
        id v3 = @"ElectricalPowerMeasurement";
        return v3;
      case 145:
        id v3 = @"ElectricalEnergyMeasurement";
        return v3;
      case 148:
        id v3 = @"WaterHeaterManagement";
        return v3;
      case 150:
        id v3 = @"DemandResponseLoadControl";
        return v3;
      case 151:
        id v3 = @"Messages";
        return v3;
      case 152:
        id v3 = @"DeviceEnergyManagement";
        return v3;
      case 153:
        id v3 = @"EnergyEVSE";
        return v3;
      case 155:
        id v3 = @"EnergyPreference";
        return v3;
      case 156:
        id v3 = @"PowerTopology";
        return v3;
      case 157:
        id v3 = @"EnergyEVSEMode";
        return v3;
      case 158:
        id v3 = @"WaterHeaterMode";
        return v3;
      case 159:
        id v3 = @"DeviceEnergyManagementMode";
        return v3;
      default:
        if (a1 == -918523)
        {
          id v3 = @"UnitTesting";
        }
        else
        {
          if (a1 != -918496) {
            goto LABEL_83;
          }
          id v3 = @"SampleMEI";
        }
        break;
    }
    return v3;
  }
  if ((int)a1 <= 1104)
  {
    if ((int)a1 <= 768)
    {
      if ((int)a1 <= 511)
      {
        switch(a1)
        {
          case 0x101:
            id v3 = @"DoorLock";
            break;
          case 0x102:
            id v3 = @"WindowCovering";
            break;
          case 0x150:
            id v3 = @"ServiceArea";
            break;
          default:
            goto LABEL_83;
        }
      }
      else
      {
        switch((int)a1)
        {
          case 512:
            id v3 = @"PumpConfigurationAndControl";
            break;
          case 513:
            id v3 = @"Thermostat";
            break;
          case 514:
            id v3 = @"FanControl";
            break;
          case 515:
            goto LABEL_83;
          case 516:
            id v3 = @"ThermostatUserInterfaceConfiguration";
            break;
          default:
            if (a1 != 768) {
              goto LABEL_83;
            }
            id v3 = @"ColorControl";
            break;
        }
      }
    }
    else
    {
      switch((int)a1)
      {
        case 1024:
          id v3 = @"IlluminanceMeasurement";
          break;
        case 1025:
        case 1031:
        case 1032:
        case 1033:
        case 1034:
        case 1035:
        case 1038:
        case 1039:
        case 1040:
        case 1041:
        case 1042:
        case 1044:
          goto LABEL_83;
        case 1026:
          id v3 = @"TemperatureMeasurement";
          break;
        case 1027:
          id v3 = @"PressureMeasurement";
          break;
        case 1028:
          id v3 = @"FlowMeasurement";
          break;
        case 1029:
          id v3 = @"RelativeHumidityMeasurement";
          break;
        case 1030:
          id v3 = @"OccupancySensing";
          break;
        case 1036:
          id v3 = @"CarbonMonoxideConcentrationMeasurement";
          break;
        case 1037:
          id v3 = @"CarbonDioxideConcentrationMeasurement";
          break;
        case 1043:
          id v3 = @"NitrogenDioxideConcentrationMeasurement";
          break;
        case 1045:
          id v3 = @"OzoneConcentrationMeasurement";
          break;
        default:
          switch((int)a1)
          {
            case 1066:
              id v3 = @"PM25ConcentrationMeasurement";
              break;
            case 1067:
              id v3 = @"FormaldehydeConcentrationMeasurement";
              break;
            case 1068:
              id v3 = @"PM1ConcentrationMeasurement";
              break;
            case 1069:
              id v3 = @"PM10ConcentrationMeasurement";
              break;
            case 1070:
              id v3 = @"TotalVolatileOrganicCompoundsConcentrationMeasurement";
              break;
            case 1071:
              id v3 = @"RadonConcentrationMeasurement";
              break;
            default:
              if (a1 != 769) {
                goto LABEL_83;
              }
              id v3 = @"BallastConfiguration";
              break;
          }
          break;
      }
    }
  }
  else if ((int)a1 > 1359)
  {
    if ((int)a1 > 1871)
    {
      if ((int)a1 > 323615743)
      {
        if (a1 == 323615744)
        {
          id v3 = @"AppleDeviceInformation";
        }
        else
        {
          if (a1 != 323615747) {
            goto LABEL_83;
          }
          id v3 = @"AppleLockCluster";
        }
      }
      else if (a1 == 1872)
      {
        id v3 = @"EcosystemInformation";
      }
      else
      {
        if (a1 != 1873) {
          goto LABEL_83;
        }
        id v3 = @"CommissionerControl";
      }
    }
    else
    {
      switch((int)a1)
      {
        case 1360:
          id v3 = @"ZoneManagement";
          break;
        case 1361:
          id v3 = @"CameraAVStreamManagement";
          break;
        case 1363:
          id v3 = @"WebRTCTransportProvider";
          break;
        case 1364:
          id v3 = @"WebRTCTransportRequestor";
          break;
        case 1366:
          id v3 = @"Chime";
          break;
        default:
          goto LABEL_83;
      }
    }
  }
  else
  {
    if ((int)a1 > 1282)
    {
      switch((int)a1)
      {
        case 1283:
          id v3 = @"WakeOnLAN";
          break;
        case 1284:
          id v3 = @"Channel";
          break;
        case 1285:
          id v3 = @"TargetNavigator";
          break;
        case 1286:
          id v3 = @"MediaPlayback";
          break;
        case 1287:
          id v3 = @"MediaInput";
          break;
        case 1288:
          id v3 = @"LowPower";
          break;
        case 1289:
          id v3 = @"KeypadInput";
          break;
        case 1290:
          id v3 = @"ContentLauncher";
          break;
        case 1291:
          id v3 = @"AudioOutput";
          break;
        case 1292:
          id v3 = @"ApplicationLauncher";
          break;
        case 1293:
          id v3 = @"ApplicationBasic";
          break;
        case 1294:
          id v3 = @"AccountLogin";
          break;
        case 1295:
          id v3 = @"ContentControl";
          break;
        case 1296:
          id v3 = @"ContentAppObserver";
          break;
        default:
          goto LABEL_83;
      }
      return v3;
    }
    switch(a1)
    {
      case 0x451:
        id v3 = @"WiFiNetworkManagement";
        break;
      case 0x452:
        id v3 = @"ThreadBorderRouterManagement";
        break;
      case 0x453:
        id v3 = @"ThreadNetworkDirectory";
        return v3;
      default:
LABEL_83:
        objc_msgSend_stringWithFormat_(NSString, a2, @"<Unknown clusterID %u>", a1);
        id v3 = (__CFString *)objc_claimAutoreleasedReturnValue();
        return v3;
    }
  }
  return v3;
}

__CFString *MTRAttributeNameForID(uint64_t a1, const char *a2)
{
  if ((int)a1 <= 256)
  {
    switch((int)a1)
    {
      case 3:
        switch((int)a2)
        {
          case 65528:
            goto LABEL_455;
          case 65529:
            goto LABEL_456;
          case 65530:
            goto LABEL_457;
          case 65531:
            goto LABEL_458;
          case 65532:
            goto LABEL_459;
          case 65533:
            goto LABEL_460;
          default:
            if (a2)
            {
              if (a2 != 1) {
                goto LABEL_4;
              }
              long long v4 = @"IdentifyType";
            }
            else
            {
              long long v4 = @"IdentifyTime";
            }
            break;
        }
        goto LABEL_687;
      case 4:
        switch((int)a2)
        {
          case 65528:
            goto LABEL_455;
          case 65529:
            goto LABEL_456;
          case 65530:
            goto LABEL_457;
          case 65531:
            goto LABEL_458;
          case 65532:
            goto LABEL_459;
          case 65533:
            goto LABEL_460;
          default:
            if (a2) {
              goto LABEL_4;
            }
            long long v4 = @"NameSupport";
            break;
        }
        goto LABEL_687;
      case 5:
      case 7:
      case 9:
      case 10:
      case 11:
      case 12:
      case 13:
      case 14:
      case 15:
      case 16:
      case 17:
      case 18:
      case 19:
      case 20:
      case 21:
      case 22:
      case 23:
      case 24:
      case 25:
      case 26:
      case 27:
      case 32:
      case 33:
      case 34:
      case 35:
      case 36:
      case 38:
      case 39:
      case 58:
      case 61:
      case 66:
      case 67:
      case 68:
      case 75:
      case 76:
      case 77:
      case 78:
      case 79:
      case 88:
      case 90:
      case 99:
      case 100:
      case 101:
      case 102:
      case 103:
      case 104:
      case 105:
      case 106:
      case 107:
      case 108:
      case 109:
      case 110:
      case 111:
      case 112:
      case 115:
      case 116:
      case 117:
      case 118:
      case 119:
      case 120:
      case 121:
      case 122:
      case 123:
      case 124:
      case 125:
      case 126:
      case 127:
      case 130:
      case 131:
      case 132:
      case 133:
      case 134:
      case 135:
      case 136:
      case 137:
      case 138:
      case 139:
      case 140:
      case 141:
      case 142:
      case 143:
      case 146:
      case 147:
      case 149:
      case 154:
        goto LABEL_60;
      case 6:
        switch((int)a2)
        {
          case 65528:
            goto LABEL_455;
          case 65529:
            goto LABEL_456;
          case 65530:
            goto LABEL_457;
          case 65531:
            goto LABEL_458;
          case 65532:
            goto LABEL_459;
          case 65533:
            goto LABEL_460;
          default:
            switch((int)a2)
            {
              case 16384:
                long long v4 = @"GlobalSceneControl";
                break;
              case 16385:
                long long v4 = @"OnTime";
                break;
              case 16386:
                long long v4 = @"OffWaitTime";
                break;
              case 16387:
                long long v4 = @"StartUpOnOff";
                break;
              default:
                if (a2) {
                  goto LABEL_4;
                }
                long long v4 = @"OnOff";
                break;
            }
            break;
        }
        goto LABEL_687;
      case 8:
        long long v4 = @"CurrentLevel";
        switch((int)a2)
        {
          case 0:
            goto LABEL_687;
          case 1:
            long long v4 = @"RemainingTime";
            break;
          case 2:
            long long v4 = @"MinLevel";
            break;
          case 3:
            long long v4 = @"MaxLevel";
            break;
          case 4:
            long long v4 = @"CurrentFrequency";
            break;
          case 5:
            long long v4 = @"MinFrequency";
            break;
          case 6:
            long long v4 = @"MaxFrequency";
            break;
          case 7:
          case 8:
          case 9:
          case 10:
          case 11:
          case 12:
          case 13:
          case 14:
            goto LABEL_4;
          case 15:
            long long v4 = @"Options";
            break;
          case 16:
            long long v4 = @"OnOffTransitionTime";
            break;
          case 17:
            long long v4 = @"OnLevel";
            break;
          case 18:
            long long v4 = @"OnTransitionTime";
            break;
          case 19:
            long long v4 = @"OffTransitionTime";
            break;
          case 20:
            long long v4 = @"DefaultMoveRate";
            break;
          default:
            switch((int)a2)
            {
              case 65528:
                goto LABEL_455;
              case 65529:
                goto LABEL_456;
              case 65530:
                goto LABEL_457;
              case 65531:
                goto LABEL_458;
              case 65532:
                goto LABEL_459;
              case 65533:
                goto LABEL_460;
              default:
                if (a2 != 0x4000) {
                  goto LABEL_4;
                }
                long long v4 = @"StartUpCurrentLevel";
                break;
            }
            break;
        }
        goto LABEL_687;
      case 28:
      case 41:
        int v2 = a2 - 65528;
        if ((a2 - 65528) >= 6) {
          goto LABEL_4;
        }
        goto LABEL_95;
      case 29:
        switch((int)a2)
        {
          case 65528:
            goto LABEL_455;
          case 65529:
            goto LABEL_456;
          case 65530:
            goto LABEL_457;
          case 65531:
            goto LABEL_458;
          case 65532:
            goto LABEL_459;
          case 65533:
            goto LABEL_460;
          default:
            long long v4 = @"DeviceTypeList";
            switch((int)a2)
            {
              case 0:
                goto LABEL_687;
              case 1:
                long long v4 = @"ServerList";
                break;
              case 2:
                long long v4 = @"ClientList";
                break;
              case 3:
                long long v4 = @"PartsList";
                break;
              case 4:
                long long v4 = @"TagList";
                break;
              default:
                goto LABEL_4;
            }
            break;
        }
        goto LABEL_687;
      case 30:
        switch((int)a2)
        {
          case 65528:
            goto LABEL_455;
          case 65529:
            goto LABEL_456;
          case 65530:
            goto LABEL_457;
          case 65531:
            goto LABEL_458;
          case 65532:
            goto LABEL_459;
          case 65533:
            goto LABEL_460;
          default:
            if (a2) {
              goto LABEL_4;
            }
            long long v4 = @"Binding";
            break;
        }
        goto LABEL_687;
      case 31:
        if (a1 <= 0x100)
        {
          long long v4 = @"ACL";
          switch((int)a2)
          {
            case 0:
              goto LABEL_687;
            case 1:
              long long v4 = @"Extension";
              goto LABEL_687;
            case 2:
              long long v4 = @"SubjectsPerAccessControlEntry";
              goto LABEL_687;
            case 3:
              long long v4 = @"TargetsPerAccessControlEntry";
              goto LABEL_687;
            case 4:
              long long v4 = @"AccessControlEntriesPerFabric";
              goto LABEL_687;
            case 5:
              long long v4 = @"CommissioningARL";
              goto LABEL_687;
            case 6:
              long long v4 = @"ARL";
              goto LABEL_687;
            default:
              goto LABEL_1274;
          }
        }
        switch((int)a2)
        {
          case 65528:
            goto LABEL_455;
          case 65529:
            goto LABEL_456;
          case 65530:
            goto LABEL_457;
          case 65531:
            goto LABEL_458;
          case 65532:
            goto LABEL_459;
          case 65533:
            goto LABEL_460;
          default:
            goto LABEL_4;
        }
      case 37:
        if ((int)a2 > 65527)
        {
          switch((int)a2)
          {
            case 65528:
              goto LABEL_455;
            case 65529:
              goto LABEL_456;
            case 65530:
              goto LABEL_457;
            case 65531:
              goto LABEL_458;
            case 65532:
              goto LABEL_459;
            case 65533:
              goto LABEL_460;
            default:
              goto LABEL_4;
          }
        }
        if (a2)
        {
          if (a2 == 1)
          {
            long long v4 = @"EndpointLists";
          }
          else
          {
            if (a2 != 2) {
              goto LABEL_4;
            }
            long long v4 = @"SetupURL";
          }
        }
        else
        {
          long long v4 = @"ActionList";
        }
        goto LABEL_687;
      case 40:
        long long v4 = @"DataModelRevision";
        switch((int)a2)
        {
          case 0:
            goto LABEL_687;
          case 1:
            long long v4 = @"VendorName";
            break;
          case 2:
            long long v4 = @"VendorID";
            break;
          case 3:
            long long v4 = @"ProductName";
            break;
          case 4:
            long long v4 = @"ProductID";
            break;
          case 5:
            long long v4 = @"NodeLabel";
            break;
          case 6:
            long long v4 = @"Location";
            break;
          case 7:
            long long v4 = @"HardwareVersion";
            break;
          case 8:
            long long v4 = @"HardwareVersionString";
            break;
          case 9:
            long long v4 = @"SoftwareVersion";
            break;
          case 10:
            long long v4 = @"SoftwareVersionString";
            break;
          case 11:
            long long v4 = @"ManufacturingDate";
            break;
          case 12:
            long long v4 = @"PartNumber";
            break;
          case 13:
            long long v4 = @"ProductURL";
            break;
          case 14:
            long long v4 = @"ProductLabel";
            break;
          case 15:
            long long v4 = @"SerialNumber";
            break;
          case 16:
            long long v4 = @"LocalConfigDisabled";
            break;
          case 17:
            long long v4 = @"Reachable";
            break;
          case 18:
            long long v4 = @"UniqueID";
            break;
          case 19:
            long long v4 = @"CapabilityMinima";
            break;
          case 20:
            long long v4 = @"ProductAppearance";
            break;
          case 21:
            long long v4 = @"SpecificationVersion";
            break;
          case 22:
            long long v4 = @"MaxPathsPerInvoke";
            break;
          default:
            switch((int)a2)
            {
              case 65528:
                goto LABEL_455;
              case 65529:
                goto LABEL_456;
              case 65530:
                goto LABEL_457;
              case 65531:
                goto LABEL_458;
              case 65532:
                goto LABEL_459;
              case 65533:
                goto LABEL_460;
              default:
                goto LABEL_4;
            }
        }
        goto LABEL_687;
      case 42:
        switch((int)a2)
        {
          case 65528:
            goto LABEL_455;
          case 65529:
            goto LABEL_456;
          case 65530:
            goto LABEL_457;
          case 65531:
            goto LABEL_458;
          case 65532:
            goto LABEL_459;
          case 65533:
            goto LABEL_460;
          default:
            long long v4 = @"DefaultOTAProviders";
            switch((int)a2)
            {
              case 0:
                goto LABEL_687;
              case 1:
                long long v4 = @"UpdatePossible";
                break;
              case 2:
                long long v4 = @"UpdateState";
                break;
              case 3:
                long long v4 = @"UpdateStateProgress";
                break;
              default:
                goto LABEL_4;
            }
            break;
        }
        goto LABEL_687;
      case 43:
        switch((int)a2)
        {
          case 65528:
            goto LABEL_455;
          case 65529:
            goto LABEL_456;
          case 65530:
            goto LABEL_457;
          case 65531:
            goto LABEL_458;
          case 65532:
            goto LABEL_459;
          case 65533:
            goto LABEL_460;
          default:
            if (a2)
            {
              if (a2 != 1) {
                goto LABEL_4;
              }
              long long v4 = @"SupportedLocales";
            }
            else
            {
              long long v4 = @"ActiveLocale";
            }
            break;
        }
        goto LABEL_687;
      case 44:
        if ((int)a2 > 65527)
        {
          switch((int)a2)
          {
            case 65528:
              goto LABEL_455;
            case 65529:
              goto LABEL_456;
            case 65530:
              goto LABEL_457;
            case 65531:
              goto LABEL_458;
            case 65532:
              goto LABEL_459;
            case 65533:
              goto LABEL_460;
            default:
              goto LABEL_4;
          }
        }
        if (a2)
        {
          if (a2 == 1)
          {
            long long v4 = @"ActiveCalendarType";
          }
          else
          {
            if (a2 != 2) {
              goto LABEL_4;
            }
            long long v4 = @"SupportedCalendarTypes";
          }
        }
        else
        {
          long long v4 = @"HourFormat";
        }
        goto LABEL_687;
      case 45:
        switch((int)a2)
        {
          case 65528:
            goto LABEL_455;
          case 65529:
            goto LABEL_456;
          case 65530:
            goto LABEL_457;
          case 65531:
            goto LABEL_458;
          case 65532:
            goto LABEL_459;
          case 65533:
            goto LABEL_460;
          default:
            if (a2) {
              goto LABEL_4;
            }
            long long v4 = @"TemperatureUnit";
            break;
        }
        goto LABEL_687;
      case 46:
        switch((int)a2)
        {
          case 65528:
LABEL_455:
            long long v4 = @"GeneratedCommandList";
            break;
          case 65529:
LABEL_456:
            long long v4 = @"AcceptedCommandList";
            break;
          case 65530:
LABEL_457:
            long long v4 = @"EventList";
            break;
          case 65531:
LABEL_458:
            long long v4 = @"AttributeList";
            break;
          case 65532:
LABEL_459:
            long long v4 = @"FeatureMap";
            break;
          case 65533:
LABEL_460:
            long long v4 = @"ClusterRevision";
            break;
          default:
            if (a2) {
              goto LABEL_4;
            }
            long long v4 = @"Sources";
            break;
        }
        goto LABEL_687;
      case 47:
        long long v4 = @"Status";
        switch((int)a2)
        {
          case 0:
            goto LABEL_687;
          case 1:
            long long v4 = @"Order";
            break;
          case 2:
            long long v4 = @"Description";
            break;
          case 3:
            long long v4 = @"WiredAssessedInputVoltage";
            break;
          case 4:
            long long v4 = @"WiredAssessedInputFrequency";
            break;
          case 5:
            long long v4 = @"WiredCurrentType";
            break;
          case 6:
            long long v4 = @"WiredAssessedCurrent";
            break;
          case 7:
            long long v4 = @"WiredNominalVoltage";
            break;
          case 8:
            long long v4 = @"WiredMaximumCurrent";
            break;
          case 9:
            long long v4 = @"WiredPresent";
            break;
          case 10:
            long long v4 = @"ActiveWiredFaults";
            break;
          case 11:
            long long v4 = @"BatVoltage";
            break;
          case 12:
            long long v4 = @"BatPercentRemaining";
            break;
          case 13:
            long long v4 = @"BatTimeRemaining";
            break;
          case 14:
            long long v4 = @"BatChargeLevel";
            break;
          case 15:
            long long v4 = @"BatReplacementNeeded";
            break;
          case 16:
            long long v4 = @"BatReplaceability";
            break;
          case 17:
            long long v4 = @"BatPresent";
            break;
          case 18:
            long long v4 = @"ActiveBatFaults";
            break;
          case 19:
            long long v4 = @"BatReplacementDescription";
            break;
          case 20:
            long long v4 = @"BatCommonDesignation";
            break;
          case 21:
            long long v4 = @"BatANSIDesignation";
            break;
          case 22:
            long long v4 = @"BatIECDesignation";
            break;
          case 23:
            long long v4 = @"BatApprovedChemistry";
            break;
          case 24:
            long long v4 = @"BatCapacity";
            break;
          case 25:
            long long v4 = @"BatQuantity";
            break;
          case 26:
            long long v4 = @"BatChargeState";
            break;
          case 27:
            long long v4 = @"BatTimeToFullCharge";
            break;
          case 28:
            long long v4 = @"BatFunctionalWhileCharging";
            break;
          case 29:
            long long v4 = @"BatChargingCurrent";
            break;
          case 30:
            long long v4 = @"ActiveBatChargeFaults";
            break;
          case 31:
            long long v4 = @"EndpointList";
            break;
          default:
            switch((int)a2)
            {
              case 65528:
                goto LABEL_478;
              case 65529:
                goto LABEL_479;
              case 65530:
                goto LABEL_480;
              case 65531:
                goto LABEL_481;
              case 65532:
                goto LABEL_482;
              case 65533:
                goto LABEL_483;
              default:
                goto LABEL_4;
            }
        }
        goto LABEL_687;
      case 48:
        long long v4 = @"Breadcrumb";
        switch((int)a2)
        {
          case 0:
            goto LABEL_687;
          case 1:
            long long v4 = @"BasicCommissioningInfo";
            break;
          case 2:
            long long v4 = @"RegulatoryConfig";
            break;
          case 3:
            long long v4 = @"LocationCapability";
            break;
          case 4:
            long long v4 = @"SupportsConcurrentConnection";
            break;
          case 5:
            long long v4 = @"TCAcceptedVersion";
            break;
          case 6:
            long long v4 = @"TCMinRequiredVersion";
            break;
          case 7:
            long long v4 = @"TCAcknowledgements";
            break;
          case 8:
            long long v4 = @"TCAcknowledgementsRequired";
            break;
          case 9:
            long long v4 = @"TCUpdateDeadline";
            break;
          default:
            switch((int)a2)
            {
              case 65528:
                goto LABEL_478;
              case 65529:
                goto LABEL_479;
              case 65530:
                goto LABEL_480;
              case 65531:
                goto LABEL_481;
              case 65532:
                goto LABEL_482;
              case 65533:
                goto LABEL_483;
              default:
                goto LABEL_435;
            }
        }
        goto LABEL_687;
      case 49:
        long long v4 = @"MaxNetworks";
        switch((int)a2)
        {
          case 0:
            goto LABEL_687;
          case 1:
            long long v4 = @"Networks";
            break;
          case 2:
            long long v4 = @"ScanMaxTimeSeconds";
            break;
          case 3:
            long long v4 = @"ConnectMaxTimeSeconds";
            break;
          case 4:
            long long v4 = @"InterfaceEnabled";
            break;
          case 5:
            long long v4 = @"LastNetworkingStatus";
            break;
          case 6:
            long long v4 = @"LastNetworkID";
            break;
          case 7:
            long long v4 = @"LastConnectErrorValue";
            break;
          case 8:
            long long v4 = @"SupportedWiFiBands";
            break;
          case 9:
            long long v4 = @"SupportedThreadFeatures";
            break;
          case 10:
            long long v4 = @"ThreadVersion";
            break;
          default:
            switch((int)a2)
            {
              case 65528:
                goto LABEL_478;
              case 65529:
                goto LABEL_479;
              case 65530:
                goto LABEL_480;
              case 65531:
                goto LABEL_481;
              case 65532:
                goto LABEL_482;
              case 65533:
                goto LABEL_483;
              default:
                goto LABEL_435;
            }
        }
        goto LABEL_687;
      case 50:
        int v2 = a2 - 65528;
        if ((a2 - 65528) >= 6) {
          goto LABEL_435;
        }
LABEL_95:
        long long v4 = off_265193458[v2];
        goto LABEL_687;
      case 51:
        long long v4 = @"NetworkInterfaces";
        switch((int)a2)
        {
          case 0:
            goto LABEL_687;
          case 1:
            long long v4 = @"RebootCount";
            break;
          case 2:
            long long v4 = @"UpTime";
            break;
          case 3:
            long long v4 = @"TotalOperationalHours";
            break;
          case 4:
            long long v4 = @"BootReason";
            break;
          case 5:
            long long v4 = @"ActiveHardwareFaults";
            break;
          case 6:
            long long v4 = @"ActiveRadioFaults";
            break;
          case 7:
            long long v4 = @"ActiveNetworkFaults";
            break;
          case 8:
            long long v4 = @"TestEventTriggersEnabled";
            break;
          default:
            switch((int)a2)
            {
              case 65528:
                goto LABEL_478;
              case 65529:
                goto LABEL_479;
              case 65530:
                goto LABEL_480;
              case 65531:
                goto LABEL_481;
              case 65532:
                goto LABEL_482;
              case 65533:
                goto LABEL_483;
              default:
                goto LABEL_435;
            }
        }
        goto LABEL_687;
      case 52:
        switch((int)a2)
        {
          case 65528:
LABEL_478:
            long long v4 = @"GeneratedCommandList";
            break;
          case 65529:
LABEL_479:
            long long v4 = @"AcceptedCommandList";
            break;
          case 65530:
LABEL_480:
            long long v4 = @"EventList";
            break;
          case 65531:
LABEL_481:
            long long v4 = @"AttributeList";
            break;
          case 65532:
LABEL_482:
            long long v4 = @"FeatureMap";
            break;
          case 65533:
LABEL_483:
            long long v4 = @"ClusterRevision";
            break;
          default:
            long long v4 = @"ThreadMetrics";
            switch((int)a2)
            {
              case 0:
                goto LABEL_687;
              case 1:
                long long v4 = @"CurrentHeapFree";
                break;
              case 2:
                long long v4 = @"CurrentHeapUsed";
                break;
              case 3:
                long long v4 = @"CurrentHeapHighWatermark";
                break;
              default:
                goto LABEL_435;
            }
            break;
        }
        goto LABEL_687;
      case 53:
        long long v4 = @"Channel";
        switch((int)a2)
        {
          case 0:
            goto LABEL_687;
          case 1:
            long long v4 = @"RoutingRole";
            break;
          case 2:
            long long v4 = @"NetworkName";
            break;
          case 3:
            long long v4 = @"PanId";
            break;
          case 4:
            long long v4 = @"ExtendedPanId";
            break;
          case 5:
            long long v4 = @"MeshLocalPrefix";
            break;
          case 6:
            long long v4 = @"OverrunCount";
            break;
          case 7:
            long long v4 = @"NeighborTable";
            break;
          case 8:
            long long v4 = @"RouteTable";
            break;
          case 9:
            long long v4 = @"PartitionId";
            break;
          case 10:
            long long v4 = @"Weighting";
            break;
          case 11:
            long long v4 = @"DataVersion";
            break;
          case 12:
            long long v4 = @"StableDataVersion";
            break;
          case 13:
            long long v4 = @"LeaderRouterId";
            break;
          case 14:
            long long v4 = @"DetachedRoleCount";
            break;
          case 15:
            long long v4 = @"ChildRoleCount";
            break;
          case 16:
            long long v4 = @"RouterRoleCount";
            break;
          case 17:
            long long v4 = @"LeaderRoleCount";
            break;
          case 18:
            long long v4 = @"AttachAttemptCount";
            break;
          case 19:
            long long v4 = @"PartitionIdChangeCount";
            break;
          case 20:
            long long v4 = @"BetterPartitionAttachAttemptCount";
            break;
          case 21:
            long long v4 = @"ParentChangeCount";
            break;
          case 22:
            long long v4 = @"TxTotalCount";
            break;
          case 23:
            long long v4 = @"TxUnicastCount";
            break;
          case 24:
            long long v4 = @"TxBroadcastCount";
            break;
          case 25:
            long long v4 = @"TxAckRequestedCount";
            break;
          case 26:
            long long v4 = @"TxAckedCount";
            break;
          case 27:
            long long v4 = @"TxNoAckRequestedCount";
            break;
          case 28:
            long long v4 = @"TxDataCount";
            break;
          case 29:
            long long v4 = @"TxDataPollCount";
            break;
          case 30:
            long long v4 = @"TxBeaconCount";
            break;
          case 31:
            long long v4 = @"TxBeaconRequestCount";
            break;
          case 32:
            long long v4 = @"TxOtherCount";
            break;
          case 33:
            long long v4 = @"TxRetryCount";
            break;
          case 34:
            long long v4 = @"TxDirectMaxRetryExpiryCount";
            break;
          case 35:
            long long v4 = @"TxIndirectMaxRetryExpiryCount";
            break;
          case 36:
            long long v4 = @"TxErrCcaCount";
            break;
          case 37:
            long long v4 = @"TxErrAbortCount";
            break;
          case 38:
            long long v4 = @"TxErrBusyChannelCount";
            break;
          case 39:
            long long v4 = @"RxTotalCount";
            break;
          case 40:
            long long v4 = @"RxUnicastCount";
            break;
          case 41:
            long long v4 = @"RxBroadcastCount";
            break;
          case 42:
            long long v4 = @"RxDataCount";
            break;
          case 43:
            long long v4 = @"RxDataPollCount";
            break;
          case 44:
            long long v4 = @"RxBeaconCount";
            break;
          case 45:
            long long v4 = @"RxBeaconRequestCount";
            break;
          case 46:
            long long v4 = @"RxOtherCount";
            break;
          case 47:
            long long v4 = @"RxAddressFilteredCount";
            break;
          case 48:
            long long v4 = @"RxDestAddrFilteredCount";
            break;
          case 49:
            long long v4 = @"RxDuplicatedCount";
            break;
          case 50:
            long long v4 = @"RxErrNoFrameCount";
            break;
          case 51:
            long long v4 = @"RxErrUnknownNeighborCount";
            break;
          case 52:
            long long v4 = @"RxErrInvalidSrcAddrCount";
            break;
          case 53:
            long long v4 = @"RxErrSecCount";
            break;
          case 54:
            long long v4 = @"RxErrFcsCount";
            break;
          case 55:
            long long v4 = @"RxErrOtherCount";
            break;
          case 56:
            long long v4 = @"ActiveTimestamp";
            break;
          case 57:
            long long v4 = @"PendingTimestamp";
            break;
          case 58:
            long long v4 = @"Delay";
            break;
          case 59:
            long long v4 = @"SecurityPolicy";
            break;
          case 60:
            long long v4 = @"ChannelPage0Mask";
            break;
          case 61:
            long long v4 = @"OperationalDatasetComponents";
            break;
          case 62:
            long long v4 = @"ActiveNetworkFaultsList";
            break;
          default:
            switch((int)a2)
            {
              case 65528:
                goto LABEL_540;
              case 65529:
                goto LABEL_541;
              case 65530:
                goto LABEL_542;
              case 65531:
                goto LABEL_543;
              case 65532:
                goto LABEL_544;
              case 65533:
                goto LABEL_545;
              default:
                goto LABEL_435;
            }
        }
        goto LABEL_687;
      case 54:
        long long v4 = @"BSSID";
        switch((int)a2)
        {
          case 0:
            goto LABEL_687;
          case 1:
            long long v4 = @"SecurityType";
            goto LABEL_687;
          case 2:
            long long v4 = @"WiFiVersion";
            goto LABEL_687;
          case 3:
            long long v4 = @"ChannelNumber";
            goto LABEL_687;
          case 4:
            long long v4 = @"RSSI";
            goto LABEL_687;
          case 5:
            long long v4 = @"BeaconLostCount";
            goto LABEL_687;
          case 6:
            long long v4 = @"BeaconRxCount";
            goto LABEL_687;
          case 7:
            long long v4 = @"PacketMulticastRxCount";
            goto LABEL_687;
          case 8:
            long long v4 = @"PacketMulticastTxCount";
            goto LABEL_687;
          case 9:
            long long v4 = @"PacketUnicastRxCount";
            goto LABEL_687;
          case 10:
            long long v4 = @"PacketUnicastTxCount";
            goto LABEL_687;
          case 11:
            long long v4 = @"CurrentMaxRate";
            goto LABEL_687;
          case 12:
            goto LABEL_512;
          default:
            switch((int)a2)
            {
              case 65528:
                goto LABEL_540;
              case 65529:
                goto LABEL_541;
              case 65530:
                goto LABEL_542;
              case 65531:
                goto LABEL_543;
              case 65532:
                goto LABEL_544;
              case 65533:
                goto LABEL_545;
              default:
                goto LABEL_435;
            }
        }
      case 55:
        long long v4 = @"PHYRate";
        switch((int)a2)
        {
          case 0:
            goto LABEL_687;
          case 1:
            long long v4 = @"FullDuplex";
            break;
          case 2:
            long long v4 = @"PacketRxCount";
            break;
          case 3:
            long long v4 = @"PacketTxCount";
            break;
          case 4:
            long long v4 = @"TxErrCount";
            break;
          case 5:
            long long v4 = @"CollisionCount";
            break;
          case 6:
LABEL_512:
            long long v4 = @"OverrunCount";
            break;
          case 7:
            long long v4 = @"CarrierDetect";
            break;
          case 8:
            long long v4 = @"TimeSinceReset";
            break;
          default:
            switch((int)a2)
            {
              case 65528:
                goto LABEL_540;
              case 65529:
                goto LABEL_541;
              case 65530:
                goto LABEL_542;
              case 65531:
                goto LABEL_543;
              case 65532:
                goto LABEL_544;
              case 65533:
                goto LABEL_545;
              default:
                goto LABEL_435;
            }
        }
        goto LABEL_687;
      case 56:
        long long v4 = @"UTCTime";
        switch((int)a2)
        {
          case 0:
            goto LABEL_687;
          case 1:
            long long v4 = @"Granularity";
            break;
          case 2:
            long long v4 = @"TimeSource";
            break;
          case 3:
            long long v4 = @"TrustedTimeSource";
            break;
          case 4:
            long long v4 = @"DefaultNTP";
            break;
          case 5:
            long long v4 = @"TimeZone";
            break;
          case 6:
            long long v4 = @"DSTOffset";
            break;
          case 7:
            long long v4 = @"LocalTime";
            break;
          case 8:
            long long v4 = @"TimeZoneDatabase";
            break;
          case 9:
            long long v4 = @"NTPServerAvailable";
            break;
          case 10:
            long long v4 = @"TimeZoneListMaxSize";
            break;
          case 11:
            long long v4 = @"DSTOffsetListMaxSize";
            break;
          case 12:
            long long v4 = @"SupportsDNSResolve";
            break;
          default:
            switch((int)a2)
            {
              case 65528:
                goto LABEL_540;
              case 65529:
                goto LABEL_541;
              case 65530:
                goto LABEL_542;
              case 65531:
                goto LABEL_543;
              case 65532:
                goto LABEL_544;
              case 65533:
                goto LABEL_545;
              default:
                goto LABEL_435;
            }
        }
        goto LABEL_687;
      case 57:
        long long v4 = @"VendorName";
        switch((int)a2)
        {
          case 1:
            goto LABEL_687;
          case 2:
            long long v4 = @"VendorID";
            goto LABEL_687;
          case 3:
            long long v4 = @"ProductName";
            goto LABEL_687;
          case 4:
            long long v4 = @"ProductID";
            goto LABEL_687;
          case 5:
            long long v4 = @"NodeLabel";
            goto LABEL_687;
          case 6:
          case 16:
          case 19:
            goto LABEL_435;
          case 7:
            long long v4 = @"HardwareVersion";
            goto LABEL_687;
          case 8:
            long long v4 = @"HardwareVersionString";
            goto LABEL_687;
          case 9:
            long long v4 = @"SoftwareVersion";
            goto LABEL_687;
          case 10:
            long long v4 = @"SoftwareVersionString";
            goto LABEL_687;
          case 11:
            long long v4 = @"ManufacturingDate";
            goto LABEL_687;
          case 12:
            long long v4 = @"PartNumber";
            goto LABEL_687;
          case 13:
            long long v4 = @"ProductURL";
            goto LABEL_687;
          case 14:
            long long v4 = @"ProductLabel";
            goto LABEL_687;
          case 15:
            long long v4 = @"SerialNumber";
            goto LABEL_687;
          case 17:
            long long v4 = @"Reachable";
            goto LABEL_687;
          case 18:
            long long v4 = @"UniqueID";
            goto LABEL_687;
          case 20:
            long long v4 = @"ProductAppearance";
            goto LABEL_687;
          default:
            switch((int)a2)
            {
              case 65528:
                goto LABEL_540;
              case 65529:
                goto LABEL_541;
              case 65530:
                goto LABEL_542;
              case 65531:
                goto LABEL_543;
              case 65532:
                goto LABEL_544;
              case 65533:
                goto LABEL_545;
              default:
                goto LABEL_435;
            }
        }
      case 59:
        if ((int)a2 > 65527)
        {
          switch((int)a2)
          {
            case 65528:
              goto LABEL_540;
            case 65529:
              goto LABEL_541;
            case 65530:
              goto LABEL_542;
            case 65531:
              goto LABEL_543;
            case 65532:
              goto LABEL_544;
            case 65533:
              goto LABEL_545;
            default:
              goto LABEL_435;
          }
        }
        if (a2)
        {
          if (a2 == 1)
          {
            long long v4 = @"CurrentPosition";
          }
          else
          {
            if (a2 != 2) {
              goto LABEL_435;
            }
            long long v4 = @"MultiPressMax";
          }
        }
        else
        {
          long long v4 = @"NumberOfPositions";
        }
        goto LABEL_687;
      case 60:
        if ((int)a2 > 65527)
        {
          switch((int)a2)
          {
            case 65528:
              goto LABEL_540;
            case 65529:
              goto LABEL_541;
            case 65530:
              goto LABEL_542;
            case 65531:
              goto LABEL_543;
            case 65532:
              goto LABEL_544;
            case 65533:
              goto LABEL_545;
            default:
              goto LABEL_435;
          }
        }
        if (a2)
        {
          if (a2 == 1)
          {
            long long v4 = @"AdminFabricIndex";
          }
          else
          {
            if (a2 != 2) {
              goto LABEL_435;
            }
            long long v4 = @"AdminVendorId";
          }
        }
        else
        {
          long long v4 = @"WindowStatus";
        }
        goto LABEL_687;
      case 62:
        if (a1 <= 0x100)
        {
          long long v4 = @"NOCs";
          switch((int)a2)
          {
            case 0:
              goto LABEL_687;
            case 1:
              long long v4 = @"Fabrics";
              goto LABEL_687;
            case 2:
              long long v4 = @"SupportedFabrics";
              goto LABEL_687;
            case 3:
              long long v4 = @"CommissionedFabrics";
              goto LABEL_687;
            case 4:
              long long v4 = @"TrustedRootCertificates";
              goto LABEL_687;
            case 5:
              long long v4 = @"CurrentFabricIndex";
              goto LABEL_687;
            default:
              goto LABEL_1274;
          }
        }
        switch((int)a2)
        {
          case 65528:
            goto LABEL_540;
          case 65529:
            goto LABEL_541;
          case 65530:
            goto LABEL_542;
          case 65531:
            goto LABEL_543;
          case 65532:
            goto LABEL_544;
          case 65533:
            goto LABEL_545;
          default:
            goto LABEL_435;
        }
      case 63:
        switch((int)a2)
        {
          case 65528:
            goto LABEL_540;
          case 65529:
            goto LABEL_541;
          case 65530:
            goto LABEL_542;
          case 65531:
            goto LABEL_543;
          case 65532:
            goto LABEL_544;
          case 65533:
            goto LABEL_545;
          default:
            long long v4 = @"GroupKeyMap";
            switch((int)a2)
            {
              case 0:
                goto LABEL_687;
              case 1:
                long long v4 = @"GroupTable";
                break;
              case 2:
                long long v4 = @"MaxGroupsPerFabric";
                break;
              case 3:
                long long v4 = @"MaxGroupKeysPerFabric";
                break;
              default:
                goto LABEL_435;
            }
            break;
        }
        goto LABEL_687;
      case 64:
        switch((int)a2)
        {
          case 65528:
            goto LABEL_540;
          case 65529:
            goto LABEL_541;
          case 65530:
            goto LABEL_542;
          case 65531:
            goto LABEL_543;
          case 65532:
            goto LABEL_544;
          case 65533:
            goto LABEL_545;
          default:
            goto LABEL_247;
        }
      case 65:
        switch((int)a2)
        {
          case 65528:
            goto LABEL_540;
          case 65529:
            goto LABEL_541;
          case 65530:
            goto LABEL_542;
          case 65531:
            goto LABEL_543;
          case 65532:
            goto LABEL_544;
          case 65533:
            goto LABEL_545;
          default:
LABEL_247:
            if (a2) {
              goto LABEL_435;
            }
            long long v4 = @"LabelList";
            break;
        }
        goto LABEL_687;
      case 69:
        switch((int)a2)
        {
          case 65528:
            goto LABEL_540;
          case 65529:
            goto LABEL_541;
          case 65530:
            goto LABEL_542;
          case 65531:
            goto LABEL_543;
          case 65532:
            goto LABEL_544;
          case 65533:
            goto LABEL_545;
          default:
            if (a2) {
              goto LABEL_435;
            }
            long long v4 = @"StateValue";
            break;
        }
        goto LABEL_687;
      case 70:
        long long v4 = @"IdleModeDuration";
        switch((int)a2)
        {
          case 0:
            goto LABEL_687;
          case 1:
            long long v4 = @"ActiveModeDuration";
            break;
          case 2:
            long long v4 = @"ActiveModeThreshold";
            break;
          case 3:
            long long v4 = @"RegisteredClients";
            break;
          case 4:
            long long v4 = @"ICDCounter";
            break;
          case 5:
            long long v4 = @"ClientsSupportedPerFabric";
            break;
          case 6:
            long long v4 = @"UserActiveModeTriggerHint";
            break;
          case 7:
            long long v4 = @"UserActiveModeTriggerInstruction";
            break;
          case 8:
            long long v4 = @"OperatingMode";
            break;
          case 9:
            long long v4 = @"MaximumCheckInBackOff";
            break;
          default:
            switch((int)a2)
            {
              case 65528:
                goto LABEL_540;
              case 65529:
                goto LABEL_541;
              case 65530:
                goto LABEL_542;
              case 65531:
                goto LABEL_543;
              case 65532:
                goto LABEL_544;
              case 65533:
                goto LABEL_545;
              default:
                goto LABEL_435;
            }
        }
        goto LABEL_687;
      case 71:
        if ((int)a2 > 65527)
        {
          switch((int)a2)
          {
            case 65528:
              goto LABEL_540;
            case 65529:
              goto LABEL_541;
            case 65530:
              goto LABEL_542;
            case 65531:
              goto LABEL_543;
            case 65532:
              goto LABEL_544;
            case 65533:
              goto LABEL_545;
            default:
              goto LABEL_435;
          }
        }
        if (a2)
        {
          if (a2 == 1)
          {
            long long v4 = @"TimeRemaining";
          }
          else
          {
            if (a2 != 2) {
              goto LABEL_435;
            }
            long long v4 = @"TimerState";
          }
        }
        else
        {
          long long v4 = @"SetTime";
        }
        goto LABEL_687;
      case 72:
        if (a1 <= 0x100)
        {
          long long v4 = @"PhaseList";
          switch((int)a2)
          {
            case 0:
              goto LABEL_687;
            case 1:
              goto LABEL_269;
            case 2:
              goto LABEL_461;
            case 3:
              goto LABEL_462;
            case 4:
              goto LABEL_463;
            case 5:
              goto LABEL_464;
            default:
              goto LABEL_1274;
          }
        }
        switch((int)a2)
        {
          case 65528:
            goto LABEL_540;
          case 65529:
            goto LABEL_541;
          case 65530:
            goto LABEL_542;
          case 65531:
            goto LABEL_543;
          case 65532:
            goto LABEL_544;
          case 65533:
            goto LABEL_545;
          default:
            goto LABEL_435;
        }
      case 73:
        switch((int)a2)
        {
          case 65528:
            goto LABEL_540;
          case 65529:
            goto LABEL_541;
          case 65530:
            goto LABEL_542;
          case 65531:
            goto LABEL_543;
          case 65532:
            goto LABEL_544;
          case 65533:
            goto LABEL_545;
          default:
            long long v4 = @"SupportedModes";
            switch((int)a2)
            {
              case 0:
                goto LABEL_687;
              case 1:
                goto LABEL_293;
              case 2:
                goto LABEL_302;
              case 3:
                goto LABEL_303;
              default:
                goto LABEL_435;
            }
        }
        goto LABEL_687;
      case 74:
        switch((int)a2)
        {
          case 65528:
            goto LABEL_540;
          case 65529:
            goto LABEL_541;
          case 65530:
            goto LABEL_542;
          case 65531:
            goto LABEL_543;
          case 65532:
            goto LABEL_544;
          case 65533:
            goto LABEL_545;
          default:
            if (a2)
            {
              if (a2 != 1) {
                goto LABEL_435;
              }
              long long v4 = @"SelectedDrynessLevel";
            }
            else
            {
              long long v4 = @"SupportedDrynessLevels";
            }
            break;
        }
        goto LABEL_687;
      case 80:
        if (a1 <= 0x100)
        {
          long long v4 = @"Description";
          switch((int)a2)
          {
            case 0:
              goto LABEL_687;
            case 1:
              long long v4 = @"StandardNamespace";
              goto LABEL_687;
            case 2:
              long long v4 = @"SupportedModes";
              goto LABEL_687;
            case 3:
              goto LABEL_293;
            case 4:
              goto LABEL_302;
            case 5:
              goto LABEL_303;
            default:
              goto LABEL_1274;
          }
        }
        switch((int)a2)
        {
          case 65528:
            goto LABEL_540;
          case 65529:
            goto LABEL_541;
          case 65530:
            goto LABEL_542;
          case 65531:
            goto LABEL_543;
          case 65532:
            goto LABEL_544;
          case 65533:
            goto LABEL_545;
          default:
            goto LABEL_435;
        }
      case 81:
        switch((int)a2)
        {
          case 65528:
            goto LABEL_540;
          case 65529:
            goto LABEL_541;
          case 65530:
            goto LABEL_542;
          case 65531:
            goto LABEL_543;
          case 65532:
            goto LABEL_544;
          case 65533:
            goto LABEL_545;
          default:
            long long v4 = @"SupportedModes";
            switch((int)a2)
            {
              case 0:
                goto LABEL_687;
              case 1:
                goto LABEL_293;
              case 2:
                goto LABEL_302;
              case 3:
                goto LABEL_303;
              default:
                goto LABEL_435;
            }
        }
        goto LABEL_687;
      case 82:
        switch((int)a2)
        {
          case 65528:
            goto LABEL_540;
          case 65529:
            goto LABEL_541;
          case 65530:
            goto LABEL_542;
          case 65531:
            goto LABEL_543;
          case 65532:
            goto LABEL_544;
          case 65533:
            goto LABEL_545;
          default:
            long long v4 = @"SupportedModes";
            switch((int)a2)
            {
              case 0:
                goto LABEL_687;
              case 1:
                goto LABEL_293;
              case 2:
                goto LABEL_302;
              case 3:
                goto LABEL_303;
              default:
                goto LABEL_435;
            }
        }
        goto LABEL_687;
      case 83:
        switch((int)a2)
        {
          case 65528:
            goto LABEL_540;
          case 65529:
            goto LABEL_541;
          case 65530:
            goto LABEL_542;
          case 65531:
            goto LABEL_543;
          case 65532:
            goto LABEL_544;
          case 65533:
            goto LABEL_545;
          default:
            long long v4 = @"SpinSpeeds";
            switch((int)a2)
            {
              case 0:
                goto LABEL_687;
              case 1:
                long long v4 = @"SpinSpeedCurrent";
                break;
              case 2:
                long long v4 = @"NumberOfRinses";
                break;
              case 3:
                long long v4 = @"SupportedRinses";
                break;
              default:
                goto LABEL_435;
            }
            break;
        }
        goto LABEL_687;
      case 84:
        switch((int)a2)
        {
          case 65528:
            goto LABEL_540;
          case 65529:
            goto LABEL_541;
          case 65530:
            goto LABEL_542;
          case 65531:
            goto LABEL_543;
          case 65532:
            goto LABEL_544;
          case 65533:
            goto LABEL_545;
          default:
            goto LABEL_188;
        }
      case 85:
        switch((int)a2)
        {
          case 65528:
            goto LABEL_540;
          case 65529:
            goto LABEL_541;
          case 65530:
            goto LABEL_542;
          case 65531:
            goto LABEL_543;
          case 65532:
            goto LABEL_544;
          case 65533:
            goto LABEL_545;
          default:
            goto LABEL_188;
        }
      case 86:
        if (a1 <= 0x100)
        {
          long long v4 = @"TemperatureSetpoint";
          switch((int)a2)
          {
            case 0:
              goto LABEL_687;
            case 1:
              long long v4 = @"MinTemperature";
              goto LABEL_687;
            case 2:
              long long v4 = @"MaxTemperature";
              goto LABEL_687;
            case 3:
              long long v4 = @"Step";
              goto LABEL_687;
            case 4:
              long long v4 = @"SelectedTemperatureLevel";
              goto LABEL_687;
            case 5:
              long long v4 = @"SupportedTemperatureLevels";
              goto LABEL_687;
            default:
              goto LABEL_1274;
          }
        }
        switch((int)a2)
        {
          case 65528:
            goto LABEL_540;
          case 65529:
            goto LABEL_541;
          case 65530:
            goto LABEL_542;
          case 65531:
            goto LABEL_543;
          case 65532:
            goto LABEL_544;
          case 65533:
            goto LABEL_545;
          default:
            goto LABEL_435;
        }
      case 87:
        if ((int)a2 > 65527)
        {
          switch((int)a2)
          {
            case 65528:
              goto LABEL_540;
            case 65529:
              goto LABEL_541;
            case 65530:
              goto LABEL_542;
            case 65531:
              goto LABEL_543;
            case 65532:
              goto LABEL_544;
            case 65533:
              goto LABEL_545;
            default:
              goto LABEL_435;
          }
        }
        if (a2)
        {
          if (a2 == 2)
          {
LABEL_476:
            long long v4 = @"State";
          }
          else
          {
            if (a2 != 3) {
              goto LABEL_435;
            }
LABEL_376:
            long long v4 = @"Supported";
          }
        }
        else
        {
          long long v4 = @"Mask";
        }
        goto LABEL_687;
      case 89:
        switch((int)a2)
        {
          case 65528:
            goto LABEL_540;
          case 65529:
            goto LABEL_541;
          case 65530:
            goto LABEL_542;
          case 65531:
            goto LABEL_543;
          case 65532:
            goto LABEL_544;
          case 65533:
            goto LABEL_545;
          default:
            long long v4 = @"SupportedModes";
            switch((int)a2)
            {
              case 0:
                goto LABEL_687;
              case 1:
                goto LABEL_293;
              case 2:
LABEL_302:
                long long v4 = @"StartUpMode";
                break;
              case 3:
LABEL_303:
                long long v4 = @"OnMode";
                break;
              default:
                goto LABEL_435;
            }
            break;
        }
        goto LABEL_687;
      case 91:
        switch((int)a2)
        {
          case 65528:
            goto LABEL_540;
          case 65529:
            goto LABEL_541;
          case 65530:
            goto LABEL_542;
          case 65531:
            goto LABEL_543;
          case 65532:
            goto LABEL_544;
          case 65533:
            goto LABEL_545;
          default:
            if (a2) {
              goto LABEL_435;
            }
            long long v4 = @"AirQuality";
            break;
        }
        goto LABEL_687;
      case 92:
        long long v4 = @"ExpressedState";
        switch((int)a2)
        {
          case 0:
            goto LABEL_687;
          case 1:
            long long v4 = @"SmokeState";
            break;
          case 2:
            long long v4 = @"COState";
            break;
          case 3:
            long long v4 = @"BatteryAlert";
            break;
          case 4:
            long long v4 = @"DeviceMuted";
            break;
          case 5:
            long long v4 = @"TestInProgress";
            break;
          case 6:
            long long v4 = @"HardwareFaultAlert";
            break;
          case 7:
            long long v4 = @"EndOfServiceAlert";
            break;
          case 8:
            long long v4 = @"InterconnectSmokeAlarm";
            break;
          case 9:
            long long v4 = @"InterconnectCOAlarm";
            break;
          case 10:
            long long v4 = @"ContaminationState";
            break;
          case 11:
            long long v4 = @"SmokeSensitivityLevel";
            break;
          case 12:
            long long v4 = @"ExpiryDate";
            break;
          default:
            switch((int)a2)
            {
              case 65528:
                goto LABEL_540;
              case 65529:
                goto LABEL_541;
              case 65530:
                goto LABEL_542;
              case 65531:
                goto LABEL_543;
              case 65532:
                goto LABEL_544;
              case 65533:
                goto LABEL_545;
              default:
                goto LABEL_435;
            }
        }
        goto LABEL_687;
      case 93:
        switch((int)a2)
        {
          case 65528:
            goto LABEL_540;
          case 65529:
            goto LABEL_541;
          case 65530:
            goto LABEL_542;
          case 65531:
            goto LABEL_543;
          case 65532:
            goto LABEL_544;
          case 65533:
            goto LABEL_545;
          default:
            long long v4 = @"Mask";
            switch((int)a2)
            {
              case 0:
                goto LABEL_687;
              case 1:
                long long v4 = @"Latch";
                break;
              case 2:
                goto LABEL_476;
              case 3:
                goto LABEL_376;
              default:
                goto LABEL_435;
            }
            break;
        }
        goto LABEL_687;
      case 94:
        switch((int)a2)
        {
          case 65528:
            goto LABEL_540;
          case 65529:
            goto LABEL_541;
          case 65530:
            goto LABEL_542;
          case 65531:
            goto LABEL_543;
          case 65532:
            goto LABEL_544;
          case 65533:
            goto LABEL_545;
          default:
LABEL_188:
            if (a2)
            {
              if (a2 != 1) {
                goto LABEL_435;
              }
LABEL_293:
              long long v4 = @"CurrentMode";
            }
            else
            {
              long long v4 = @"SupportedModes";
            }
            break;
        }
        goto LABEL_687;
      case 95:
        long long v4 = @"CookTime";
        switch((int)a2)
        {
          case 0:
            goto LABEL_687;
          case 1:
            long long v4 = @"MaxCookTime";
            break;
          case 2:
            long long v4 = @"PowerSetting";
            break;
          case 3:
            long long v4 = @"MinPower";
            break;
          case 4:
            long long v4 = @"MaxPower";
            break;
          case 5:
            long long v4 = @"PowerStep";
            break;
          case 6:
            long long v4 = @"SupportedWatts";
            break;
          case 7:
            long long v4 = @"SelectedWattIndex";
            break;
          case 8:
            long long v4 = @"WattRating";
            break;
          default:
            switch((int)a2)
            {
              case 65528:
                goto LABEL_540;
              case 65529:
                goto LABEL_541;
              case 65530:
                goto LABEL_542;
              case 65531:
                goto LABEL_543;
              case 65532:
                goto LABEL_544;
              case 65533:
                goto LABEL_545;
              default:
                goto LABEL_435;
            }
        }
        goto LABEL_687;
      case 96:
        if (a1 <= 0x100)
        {
          long long v4 = @"PhaseList";
          switch((int)a2)
          {
            case 0:
              goto LABEL_687;
            case 1:
              goto LABEL_269;
            case 2:
              goto LABEL_461;
            case 3:
              goto LABEL_462;
            case 4:
              goto LABEL_463;
            case 5:
              goto LABEL_464;
            default:
              goto LABEL_1274;
          }
        }
        switch((int)a2)
        {
          case 65528:
            goto LABEL_540;
          case 65529:
            goto LABEL_541;
          case 65530:
            goto LABEL_542;
          case 65531:
            goto LABEL_543;
          case 65532:
            goto LABEL_544;
          case 65533:
            goto LABEL_545;
          default:
            goto LABEL_435;
        }
      case 97:
        if (a1 <= 0x100)
        {
          long long v4 = @"PhaseList";
          switch((int)a2)
          {
            case 0:
              goto LABEL_687;
            case 1:
LABEL_269:
              long long v4 = @"CurrentPhase";
              goto LABEL_687;
            case 2:
LABEL_461:
              long long v4 = @"CountdownTime";
              goto LABEL_687;
            case 3:
LABEL_462:
              long long v4 = @"OperationalStateList";
              goto LABEL_687;
            case 4:
LABEL_463:
              long long v4 = @"OperationalState";
              goto LABEL_687;
            case 5:
LABEL_464:
              long long v4 = @"OperationalError";
              goto LABEL_687;
            default:
              goto LABEL_1274;
          }
        }
        switch((int)a2)
        {
          case 65528:
            goto LABEL_540;
          case 65529:
            goto LABEL_541;
          case 65530:
            goto LABEL_542;
          case 65531:
            goto LABEL_543;
          case 65532:
            goto LABEL_544;
          case 65533:
            goto LABEL_545;
          default:
            goto LABEL_435;
        }
      case 98:
        if ((int)a2 > 65527)
        {
          switch((int)a2)
          {
            case 65528:
              goto LABEL_540;
            case 65529:
              goto LABEL_541;
            case 65530:
              goto LABEL_542;
            case 65531:
              goto LABEL_543;
            case 65532:
              goto LABEL_544;
            case 65533:
              goto LABEL_545;
            default:
              goto LABEL_435;
          }
        }
        if (a2)
        {
          if (a2 == 1)
          {
            long long v4 = @"SceneTableSize";
          }
          else
          {
            if (a2 != 2) {
              goto LABEL_435;
            }
            long long v4 = @"FabricSceneInfo";
          }
        }
        else
        {
          long long v4 = @"LastConfiguredBy";
        }
        goto LABEL_687;
      case 113:
        if (a1 <= 0x100)
        {
          long long v4 = @"Condition";
          switch((int)a2)
          {
            case 0:
              goto LABEL_687;
            case 1:
              goto LABEL_272;
            case 2:
              goto LABEL_490;
            case 3:
              goto LABEL_491;
            case 4:
              goto LABEL_492;
            case 5:
              goto LABEL_493;
            default:
              goto LABEL_1274;
          }
        }
        switch((int)a2)
        {
          case 65528:
            goto LABEL_540;
          case 65529:
            goto LABEL_541;
          case 65530:
            goto LABEL_542;
          case 65531:
            goto LABEL_543;
          case 65532:
            goto LABEL_544;
          case 65533:
            goto LABEL_545;
          default:
            goto LABEL_435;
        }
      case 114:
        if (a1 <= 0x100)
        {
          long long v4 = @"Condition";
          switch((int)a2)
          {
            case 0:
              goto LABEL_687;
            case 1:
LABEL_272:
              long long v4 = @"DegradationDirection";
              goto LABEL_687;
            case 2:
LABEL_490:
              long long v4 = @"ChangeIndication";
              goto LABEL_687;
            case 3:
LABEL_491:
              long long v4 = @"InPlaceIndicator";
              goto LABEL_687;
            case 4:
LABEL_492:
              long long v4 = @"LastChangedTime";
              goto LABEL_687;
            case 5:
LABEL_493:
              long long v4 = @"ReplacementProductList";
              goto LABEL_687;
            default:
              goto LABEL_1274;
          }
        }
        switch((int)a2)
        {
          case 65528:
            goto LABEL_540;
          case 65529:
            goto LABEL_541;
          case 65530:
            goto LABEL_542;
          case 65531:
            goto LABEL_543;
          case 65532:
            goto LABEL_544;
          case 65533:
            goto LABEL_545;
          default:
            goto LABEL_435;
        }
      case 128:
        long long v4 = @"CurrentSensitivityLevel";
        switch((int)a2)
        {
          case 0:
            goto LABEL_687;
          case 1:
            long long v4 = @"SupportedSensitivityLevels";
            break;
          case 2:
            long long v4 = @"DefaultSensitivityLevel";
            break;
          case 3:
            long long v4 = @"AlarmsActive";
            break;
          case 4:
            long long v4 = @"AlarmsSuppressed";
            break;
          case 5:
            long long v4 = @"AlarmsEnabled";
            break;
          case 6:
            long long v4 = @"AlarmsSupported";
            break;
          case 7:
            long long v4 = @"SensorFault";
            break;
          default:
            switch((int)a2)
            {
              case 65528:
                goto LABEL_540;
              case 65529:
                goto LABEL_541;
              case 65530:
                goto LABEL_542;
              case 65531:
                goto LABEL_543;
              case 65532:
                goto LABEL_544;
              case 65533:
                goto LABEL_545;
              default:
                goto LABEL_435;
            }
        }
        goto LABEL_687;
      case 129:
        long long v4 = @"OpenDuration";
        switch((int)a2)
        {
          case 0:
            goto LABEL_687;
          case 1:
            long long v4 = @"DefaultOpenDuration";
            break;
          case 2:
            long long v4 = @"AutoCloseTime";
            break;
          case 3:
            long long v4 = @"RemainingDuration";
            break;
          case 4:
            long long v4 = @"CurrentState";
            break;
          case 5:
            long long v4 = @"TargetState";
            break;
          case 6:
            long long v4 = @"CurrentLevel";
            break;
          case 7:
            long long v4 = @"TargetLevel";
            break;
          case 8:
            long long v4 = @"DefaultOpenLevel";
            break;
          case 9:
            long long v4 = @"ValveFault";
            break;
          case 10:
            long long v4 = @"LevelStep";
            break;
          default:
            switch((int)a2)
            {
              case 65528:
LABEL_540:
                long long v4 = @"GeneratedCommandList";
                break;
              case 65529:
LABEL_541:
                long long v4 = @"AcceptedCommandList";
                break;
              case 65530:
LABEL_542:
                long long v4 = @"EventList";
                break;
              case 65531:
LABEL_543:
                long long v4 = @"AttributeList";
                break;
              case 65532:
LABEL_544:
                long long v4 = @"FeatureMap";
                break;
              case 65533:
LABEL_545:
                long long v4 = @"ClusterRevision";
                break;
              default:
                goto LABEL_435;
            }
            break;
        }
        goto LABEL_687;
      case 144:
        long long v4 = @"PowerMode";
        switch((int)a2)
        {
          case 0:
            goto LABEL_687;
          case 1:
            long long v4 = @"NumberOfMeasurementTypes";
            break;
          case 2:
            long long v4 = @"Accuracy";
            break;
          case 3:
            long long v4 = @"Ranges";
            break;
          case 4:
            long long v4 = @"Voltage";
            break;
          case 5:
            long long v4 = @"ActiveCurrent";
            break;
          case 6:
            long long v4 = @"ReactiveCurrent";
            break;
          case 7:
            long long v4 = @"ApparentCurrent";
            break;
          case 8:
            long long v4 = @"ActivePower";
            break;
          case 9:
            long long v4 = @"ReactivePower";
            break;
          case 10:
            long long v4 = @"ApparentPower";
            break;
          case 11:
            long long v4 = @"RMSVoltage";
            break;
          case 12:
            long long v4 = @"RMSCurrent";
            break;
          case 13:
            long long v4 = @"RMSPower";
            break;
          case 14:
            long long v4 = @"Frequency";
            break;
          case 15:
            long long v4 = @"HarmonicCurrents";
            break;
          case 16:
            long long v4 = @"HarmonicPhases";
            break;
          case 17:
            long long v4 = @"PowerFactor";
            break;
          case 18:
            long long v4 = @"NeutralCurrent";
            break;
          default:
            switch((int)a2)
            {
              case 65528:
                goto LABEL_504;
              case 65529:
                goto LABEL_505;
              case 65530:
                goto LABEL_506;
              case 65531:
                goto LABEL_507;
              case 65532:
                goto LABEL_508;
              case 65533:
                goto LABEL_432;
              default:
                goto LABEL_435;
            }
        }
        goto LABEL_687;
      case 145:
        if (a1 <= 0x100)
        {
          long long v4 = @"Accuracy";
          switch((int)a2)
          {
            case 0:
              goto LABEL_687;
            case 1:
              long long v4 = @"CumulativeEnergyImported";
              goto LABEL_687;
            case 2:
              long long v4 = @"CumulativeEnergyExported";
              goto LABEL_687;
            case 3:
              long long v4 = @"PeriodicEnergyImported";
              goto LABEL_687;
            case 4:
              long long v4 = @"PeriodicEnergyExported";
              goto LABEL_687;
            case 5:
              long long v4 = @"CumulativeEnergyReset";
              goto LABEL_687;
            default:
              goto LABEL_1274;
          }
        }
        switch((int)a2)
        {
          case 65528:
            goto LABEL_504;
          case 65529:
            goto LABEL_505;
          case 65530:
            goto LABEL_506;
          case 65531:
            goto LABEL_507;
          case 65532:
            goto LABEL_508;
          case 65533:
            goto LABEL_432;
          default:
            goto LABEL_435;
        }
      case 148:
        if (a1 <= 0x100)
        {
          long long v4 = @"HeaterTypes";
          switch((int)a2)
          {
            case 0:
              goto LABEL_687;
            case 1:
              long long v4 = @"HeatDemand";
              goto LABEL_687;
            case 2:
              long long v4 = @"TankVolume";
              goto LABEL_687;
            case 3:
              long long v4 = @"EstimatedHeatRequired";
              goto LABEL_687;
            case 4:
              long long v4 = @"TankPercentage";
              goto LABEL_687;
            case 5:
              long long v4 = @"BoostState";
              goto LABEL_687;
            default:
              goto LABEL_1274;
          }
        }
        switch((int)a2)
        {
          case 65528:
            goto LABEL_504;
          case 65529:
            goto LABEL_505;
          case 65530:
            goto LABEL_506;
          case 65531:
            goto LABEL_507;
          case 65532:
            goto LABEL_508;
          case 65533:
            goto LABEL_432;
          default:
            goto LABEL_435;
        }
      case 150:
        long long v4 = @"LoadControlPrograms";
        switch((int)a2)
        {
          case 0:
            goto LABEL_687;
          case 1:
            long long v4 = @"NumberOfLoadControlPrograms";
            break;
          case 2:
            long long v4 = @"Events";
            break;
          case 3:
            long long v4 = @"ActiveEvents";
            break;
          case 4:
            long long v4 = @"NumberOfEventsPerProgram";
            break;
          case 5:
            long long v4 = @"NumberOfTransitions";
            break;
          case 6:
            long long v4 = @"DefaultRandomStart";
            break;
          case 7:
            long long v4 = @"DefaultRandomDuration";
            break;
          default:
            switch((int)a2)
            {
              case 65528:
                goto LABEL_504;
              case 65529:
                goto LABEL_505;
              case 65530:
                goto LABEL_506;
              case 65531:
                goto LABEL_507;
              case 65532:
                goto LABEL_508;
              case 65533:
                goto LABEL_432;
              default:
                goto LABEL_435;
            }
        }
        goto LABEL_687;
      case 151:
        switch((int)a2)
        {
          case 65528:
            goto LABEL_504;
          case 65529:
            goto LABEL_505;
          case 65530:
            goto LABEL_506;
          case 65531:
            goto LABEL_507;
          case 65532:
            goto LABEL_508;
          case 65533:
            goto LABEL_432;
          default:
            if (a2)
            {
              if (a2 != 1) {
                goto LABEL_435;
              }
              long long v4 = @"ActiveMessageIDs";
            }
            else
            {
              long long v4 = @"Messages";
            }
            break;
        }
        goto LABEL_687;
      case 152:
        long long v4 = @"ESAType";
        switch((int)a2)
        {
          case 0:
            goto LABEL_687;
          case 1:
            long long v4 = @"ESACanGenerate";
            break;
          case 2:
            long long v4 = @"ESAState";
            break;
          case 3:
            long long v4 = @"AbsMinPower";
            break;
          case 4:
            long long v4 = @"AbsMaxPower";
            break;
          case 5:
            long long v4 = @"PowerAdjustmentCapability";
            break;
          case 6:
            long long v4 = @"Forecast";
            break;
          case 7:
            long long v4 = @"OptOutState";
            break;
          default:
            switch((int)a2)
            {
              case 65528:
                goto LABEL_504;
              case 65529:
                goto LABEL_505;
              case 65530:
                goto LABEL_506;
              case 65531:
                goto LABEL_507;
              case 65532:
                goto LABEL_508;
              case 65533:
                goto LABEL_432;
              default:
                goto LABEL_435;
            }
        }
        goto LABEL_687;
      case 153:
        if ((int)a2 <= 34)
        {
          long long v4 = @"State";
          switch((int)a2)
          {
            case 0:
              goto LABEL_687;
            case 1:
              long long v4 = @"SupplyState";
              break;
            case 2:
              long long v4 = @"FaultState";
              break;
            case 3:
              long long v4 = @"ChargingEnabledUntil";
              break;
            case 4:
              long long v4 = @"DischargingEnabledUntil";
              break;
            case 5:
              long long v4 = @"CircuitCapacity";
              break;
            case 6:
              long long v4 = @"MinimumChargeCurrent";
              break;
            case 7:
              long long v4 = @"MaximumChargeCurrent";
              break;
            case 8:
              long long v4 = @"MaximumDischargeCurrent";
              break;
            case 9:
              long long v4 = @"UserMaximumChargeCurrent";
              break;
            case 10:
              long long v4 = @"RandomizationDelayWindow";
              break;
            default:
              goto LABEL_435;
          }
        }
        else
        {
          switch((int)a2)
          {
            case 65528:
              goto LABEL_504;
            case 65529:
              goto LABEL_505;
            case 65530:
              goto LABEL_506;
            case 65531:
              goto LABEL_507;
            case 65532:
              goto LABEL_508;
            case 65533:
              goto LABEL_432;
            default:
              switch((int)a2)
              {
                case '@':
                  long long v4 = @"SessionID";
                  break;
                case 'A':
                  long long v4 = @"SessionDuration";
                  break;
                case 'B':
                  long long v4 = @"SessionEnergyCharged";
                  break;
                case 'C':
                  long long v4 = @"SessionEnergyDischarged";
                  break;
                default:
                  goto LABEL_435;
              }
              break;
          }
        }
        goto LABEL_687;
      case 155:
        switch((int)a2)
        {
          case 65528:
            goto LABEL_504;
          case 65529:
            goto LABEL_505;
          case 65530:
            goto LABEL_506;
          case 65531:
            goto LABEL_507;
          case 65532:
            goto LABEL_508;
          case 65533:
            goto LABEL_432;
          default:
            long long v4 = @"EnergyBalances";
            switch((int)a2)
            {
              case 0:
                goto LABEL_687;
              case 1:
                long long v4 = @"CurrentEnergyBalance";
                break;
              case 2:
                long long v4 = @"EnergyPriorities";
                break;
              case 3:
                long long v4 = @"LowPowerModeSensitivities";
                break;
              case 4:
                long long v4 = @"CurrentLowPowerModeSensitivity";
                break;
              default:
                goto LABEL_435;
            }
            break;
        }
        goto LABEL_687;
      case 156:
        switch((int)a2)
        {
          case 65528:
            goto LABEL_504;
          case 65529:
            goto LABEL_505;
          case 65530:
            goto LABEL_506;
          case 65531:
            goto LABEL_507;
          case 65532:
            goto LABEL_508;
          case 65533:
            goto LABEL_432;
          default:
            if (a2)
            {
              if (a2 != 1) {
                goto LABEL_435;
              }
              long long v4 = @"ActiveEndpoints";
            }
            else
            {
              long long v4 = @"AvailableEndpoints";
            }
            break;
        }
        goto LABEL_687;
      case 157:
        switch((int)a2)
        {
          case 65528:
            goto LABEL_504;
          case 65529:
            goto LABEL_505;
          case 65530:
            goto LABEL_506;
          case 65531:
            goto LABEL_507;
          case 65532:
            goto LABEL_508;
          case 65533:
            goto LABEL_432;
          default:
            long long v4 = @"SupportedModes";
            switch((int)a2)
            {
              case 0:
                goto LABEL_687;
              case 1:
                goto LABEL_299;
              case 2:
                goto LABEL_428;
              case 3:
                goto LABEL_429;
              default:
                goto LABEL_435;
            }
        }
        goto LABEL_687;
      case 158:
        switch((int)a2)
        {
          case 65528:
            goto LABEL_504;
          case 65529:
            goto LABEL_505;
          case 65530:
            goto LABEL_506;
          case 65531:
            goto LABEL_507;
          case 65532:
            goto LABEL_508;
          case 65533:
            goto LABEL_432;
          default:
            long long v4 = @"SupportedModes";
            switch((int)a2)
            {
              case 0:
                goto LABEL_687;
              case 1:
                goto LABEL_299;
              case 2:
                goto LABEL_428;
              case 3:
                goto LABEL_429;
              default:
                goto LABEL_435;
            }
        }
        goto LABEL_687;
      case 159:
        switch((int)a2)
        {
          case 65528:
            goto LABEL_504;
          case 65529:
            goto LABEL_505;
          case 65530:
            goto LABEL_506;
          case 65531:
            goto LABEL_507;
          case 65532:
            goto LABEL_508;
          case 65533:
LABEL_432:
            long long v4 = @"ClusterRevision";
            break;
          default:
            long long v4 = @"SupportedModes";
            switch((int)a2)
            {
              case 0:
                goto LABEL_687;
              case 1:
LABEL_299:
                long long v4 = @"CurrentMode";
                break;
              case 2:
LABEL_428:
                long long v4 = @"StartUpMode";
                break;
              case 3:
LABEL_429:
                long long v4 = @"OnMode";
                break;
              default:
                goto LABEL_435;
            }
            break;
        }
        goto LABEL_687;
      default:
        if (a1 == -918523)
        {
          if ((int)a2 >= 12288)
          {
            if ((int)a2 > 65527)
            {
              switch((int)a2)
              {
                case 65528:
                  goto LABEL_210;
                case 65529:
                  goto LABEL_683;
                case 65530:
                  goto LABEL_206;
                case 65531:
                  goto LABEL_684;
                case 65532:
                  goto LABEL_685;
                case 65533:
                  goto LABEL_686;
                default:
LABEL_1189:
                  id v3 = NSString;
                  goto LABEL_5;
              }
            }
            switch((int)a2)
            {
              case 16384:
                long long v4 = @"NullableBoolean";
                goto LABEL_687;
              case 16385:
                long long v4 = @"NullableBitmap8";
                goto LABEL_687;
              case 16386:
                long long v4 = @"NullableBitmap16";
                goto LABEL_687;
              case 16387:
                long long v4 = @"NullableBitmap32";
                goto LABEL_687;
              case 16388:
                long long v4 = @"NullableBitmap64";
                goto LABEL_687;
              case 16389:
                long long v4 = @"NullableInt8u";
                goto LABEL_687;
              case 16390:
                long long v4 = @"NullableInt16u";
                goto LABEL_687;
              case 16391:
                long long v4 = @"NullableInt24u";
                goto LABEL_687;
              case 16392:
                long long v4 = @"NullableInt32u";
                goto LABEL_687;
              case 16393:
                long long v4 = @"NullableInt40u";
                goto LABEL_687;
              case 16394:
                long long v4 = @"NullableInt48u";
                goto LABEL_687;
              case 16395:
                long long v4 = @"NullableInt56u";
                goto LABEL_687;
              case 16396:
                long long v4 = @"NullableInt64u";
                goto LABEL_687;
              case 16397:
                long long v4 = @"NullableInt8s";
                goto LABEL_687;
              case 16398:
                long long v4 = @"NullableInt16s";
                goto LABEL_687;
              case 16399:
                long long v4 = @"NullableInt24s";
                goto LABEL_687;
              case 16400:
                long long v4 = @"NullableInt32s";
                goto LABEL_687;
              case 16401:
                long long v4 = @"NullableInt40s";
                goto LABEL_687;
              case 16402:
                long long v4 = @"NullableInt48s";
                goto LABEL_687;
              case 16403:
                long long v4 = @"NullableInt56s";
                goto LABEL_687;
              case 16404:
                long long v4 = @"NullableInt64s";
                goto LABEL_687;
              case 16405:
                long long v4 = @"NullableEnum8";
                goto LABEL_687;
              case 16406:
                long long v4 = @"NullableEnum16";
                goto LABEL_687;
              case 16407:
                long long v4 = @"NullableFloatSingle";
                goto LABEL_687;
              case 16408:
                long long v4 = @"NullableFloatDouble";
                goto LABEL_687;
              case 16409:
                long long v4 = @"NullableOctetString";
                goto LABEL_687;
              case 16410:
              case 16411:
              case 16412:
              case 16413:
              case 16415:
              case 16416:
              case 16417:
              case 16418:
              case 16419:
              case 16427:
              case 16428:
              case 16429:
              case 16430:
              case 16431:
              case 16432:
              case 16433:
              case 16434:
                goto LABEL_1189;
              case 16414:
                long long v4 = @"NullableCharString";
                goto LABEL_687;
              case 16420:
                long long v4 = @"NullableEnumAttr";
                goto LABEL_687;
              case 16421:
                long long v4 = @"NullableStruct";
                goto LABEL_687;
              case 16422:
                long long v4 = @"NullableRangeRestrictedInt8u";
                goto LABEL_687;
              case 16423:
                long long v4 = @"NullableRangeRestrictedInt8s";
                goto LABEL_687;
              case 16424:
                long long v4 = @"NullableRangeRestrictedInt16u";
                goto LABEL_687;
              case 16425:
                long long v4 = @"NullableRangeRestrictedInt16s";
                goto LABEL_687;
              case 16426:
                long long v4 = @"WriteOnlyInt8u";
                goto LABEL_687;
              case 16435:
                long long v4 = @"NullableGlobalEnum";
                goto LABEL_687;
              case 16436:
                long long v4 = @"NullableGlobalStruct";
                goto LABEL_687;
              default:
                if (a2 == 12288)
                {
                  long long v4 = @"ReadFailureCode";
                }
                else
                {
                  if (a2 != 12289) {
                    goto LABEL_1189;
                  }
                  long long v4 = @"FailureInt32U";
                }
                break;
            }
          }
          else
          {
            long long v4 = @"Boolean";
            switch((int)a2)
            {
              case 0:
                goto LABEL_687;
              case 1:
                long long v4 = @"Bitmap8";
                goto LABEL_687;
              case 2:
                long long v4 = @"Bitmap16";
                goto LABEL_687;
              case 3:
                long long v4 = @"Bitmap32";
                goto LABEL_687;
              case 4:
                long long v4 = @"Bitmap64";
                goto LABEL_687;
              case 5:
                long long v4 = @"Int8u";
                goto LABEL_687;
              case 6:
                long long v4 = @"Int16u";
                goto LABEL_687;
              case 7:
                long long v4 = @"Int24u";
                goto LABEL_687;
              case 8:
                long long v4 = @"Int32u";
                goto LABEL_687;
              case 9:
                long long v4 = @"Int40u";
                goto LABEL_687;
              case 10:
                long long v4 = @"Int48u";
                goto LABEL_687;
              case 11:
                long long v4 = @"Int56u";
                goto LABEL_687;
              case 12:
                long long v4 = @"Int64u";
                goto LABEL_687;
              case 13:
                long long v4 = @"Int8s";
                goto LABEL_687;
              case 14:
                long long v4 = @"Int16s";
                goto LABEL_687;
              case 15:
                long long v4 = @"Int24s";
                goto LABEL_687;
              case 16:
                long long v4 = @"Int32s";
                goto LABEL_687;
              case 17:
                long long v4 = @"Int40s";
                goto LABEL_687;
              case 18:
                long long v4 = @"Int48s";
                goto LABEL_687;
              case 19:
                long long v4 = @"Int56s";
                goto LABEL_687;
              case 20:
                long long v4 = @"Int64s";
                goto LABEL_687;
              case 21:
                long long v4 = @"Enum8";
                goto LABEL_687;
              case 22:
                long long v4 = @"Enum16";
                goto LABEL_687;
              case 23:
                long long v4 = @"FloatSingle";
                goto LABEL_687;
              case 24:
                long long v4 = @"FloatDouble";
                goto LABEL_687;
              case 25:
                long long v4 = @"OctetString";
                goto LABEL_687;
              case 26:
                long long v4 = @"ListInt8u";
                goto LABEL_687;
              case 27:
                long long v4 = @"ListOctetString";
                goto LABEL_687;
              case 28:
                long long v4 = @"ListStructOctetString";
                goto LABEL_687;
              case 29:
                long long v4 = @"LongOctetString";
                goto LABEL_687;
              case 30:
                long long v4 = @"CharString";
                goto LABEL_687;
              case 31:
                long long v4 = @"LongCharString";
                goto LABEL_687;
              case 32:
                long long v4 = @"EpochUs";
                goto LABEL_687;
              case 33:
                long long v4 = @"EpochS";
                goto LABEL_687;
              case 34:
                long long v4 = @"VendorId";
                goto LABEL_687;
              case 35:
                long long v4 = @"ListNullablesAndOptionalsStruct";
                goto LABEL_687;
              case 36:
                long long v4 = @"EnumAttr";
                goto LABEL_687;
              case 37:
                long long v4 = @"StructAttr";
                goto LABEL_687;
              case 38:
                long long v4 = @"RangeRestrictedInt8u";
                goto LABEL_687;
              case 39:
                long long v4 = @"RangeRestrictedInt8s";
                goto LABEL_687;
              case 40:
                long long v4 = @"RangeRestrictedInt16u";
                goto LABEL_687;
              case 41:
                long long v4 = @"RangeRestrictedInt16s";
                goto LABEL_687;
              case 42:
                long long v4 = @"ListLongOctetString";
                goto LABEL_687;
              case 43:
                long long v4 = @"ListFabricScoped";
                goto LABEL_687;
              case 44:
              case 45:
              case 46:
              case 47:
                goto LABEL_1189;
              case 48:
                long long v4 = @"TimedWriteBoolean";
                goto LABEL_687;
              case 49:
                long long v4 = @"GeneralErrorBoolean";
                goto LABEL_687;
              case 50:
                long long v4 = @"ClusterErrorBoolean";
                goto LABEL_687;
              case 51:
                long long v4 = @"GlobalEnum";
                goto LABEL_687;
              case 52:
                long long v4 = @"GlobalStruct";
                goto LABEL_687;
              default:
                if (a2 == -897279)
                {
                  long long v4 = @"MeiInt8u";
                }
                else
                {
                  if (a2 != 255) {
                    goto LABEL_1189;
                  }
                  long long v4 = @"Unsupported";
                }
                break;
            }
          }
        }
        else
        {
          if (a1 != -918496) {
            goto LABEL_60;
          }
          switch((int)a2)
          {
            case 65528:
              goto LABEL_210;
            case 65529:
              goto LABEL_683;
            case 65530:
              goto LABEL_206;
            case 65531:
              goto LABEL_684;
            case 65532:
              goto LABEL_685;
            case 65533:
              goto LABEL_686;
            default:
              if (a2) {
                goto LABEL_4;
              }
              long long v4 = @"FlipFlop";
              break;
          }
        }
        break;
    }
    goto LABEL_687;
  }
  if ((int)a1 > 1104)
  {
    if ((int)a1 > 1359)
    {
      if ((int)a1 <= 1871)
      {
        switch((int)a1)
        {
          case 1360:
            switch((int)a2)
            {
              case 65528:
                goto LABEL_497;
              case 65529:
                goto LABEL_498;
              case 65530:
                goto LABEL_499;
              case 65531:
                goto LABEL_500;
              case 65532:
                goto LABEL_501;
              case 65533:
                goto LABEL_502;
              default:
                long long v4 = @"SupportedZoneSources";
                switch((int)a2)
                {
                  case 0:
                    goto LABEL_687;
                  case 1:
                    long long v4 = @"Zones";
                    break;
                  case 2:
                    long long v4 = @"TimeControl";
                    break;
                  case 3:
                    long long v4 = @"Sensitivity";
                    break;
                  default:
                    goto LABEL_435;
                }
                break;
            }
            goto LABEL_687;
          case 1361:
            long long v4 = @"MaxConcurrentVideoEncoders";
            switch((int)a2)
            {
              case 0:
                goto LABEL_687;
              case 1:
                long long v4 = @"MaxEncodedPixelRate";
                break;
              case 2:
                long long v4 = @"VideoSensorParams";
                break;
              case 3:
                long long v4 = @"NightVisionCapable";
                break;
              case 4:
                long long v4 = @"MinViewport";
                break;
              case 5:
                long long v4 = @"RateDistortionTradeOffPoints";
                break;
              case 6:
                long long v4 = @"MaxPreRollBufferSize";
                break;
              case 7:
                long long v4 = @"MicrophoneCapabilities";
                break;
              case 8:
                long long v4 = @"SpeakerCapabilities";
                break;
              case 9:
                long long v4 = @"TwoWayTalkSupport";
                break;
              case 10:
                long long v4 = @"SupportedSnapshotParams";
                break;
              case 11:
                long long v4 = @"MaxNetworkBandwidth";
                break;
              case 12:
                long long v4 = @"CurrentFrameRate";
                break;
              case 13:
                long long v4 = @"HDRModeEnabled";
                break;
              case 14:
                long long v4 = @"CurrentVideoCodecs";
                break;
              case 15:
                long long v4 = @"CurrentSnapshotConfig";
                break;
              case 16:
                long long v4 = @"FabricsUsingCamera";
                break;
              case 17:
                long long v4 = @"AllocatedVideoStreams";
                break;
              case 18:
                long long v4 = @"AllocatedAudioStreams";
                break;
              case 19:
                long long v4 = @"AllocatedSnapshotStreams";
                break;
              case 20:
                long long v4 = @"RankedVideoStreamPrioritiesList";
                break;
              case 21:
                long long v4 = @"SoftRecordingPrivacyModeEnabled";
                break;
              case 22:
                long long v4 = @"SoftLivestreamPrivacyModeEnabled";
                break;
              case 23:
                long long v4 = @"HardPrivacyModeOn";
                break;
              case 24:
                long long v4 = @"NightVision";
                break;
              case 25:
                long long v4 = @"NightVisionIllum";
                break;
              case 26:
                long long v4 = @"AWBEnabled";
                break;
              case 27:
                long long v4 = @"AutoShutterSpeedEnabled";
                break;
              case 28:
                long long v4 = @"AutoISOEnabled";
                break;
              case 29:
                long long v4 = @"Viewport";
                break;
              case 30:
                long long v4 = @"SpeakerMuted";
                break;
              case 31:
                long long v4 = @"SpeakerVolumeLevel";
                break;
              case 32:
                long long v4 = @"SpeakerMaxLevel";
                break;
              case 33:
                long long v4 = @"SpeakerMinLevel";
                break;
              case 34:
                long long v4 = @"MicrophoneMuted";
                break;
              case 35:
                long long v4 = @"MicrophoneVolumeLevel";
                break;
              case 36:
                long long v4 = @"MicrophoneMaxLevel";
                break;
              case 37:
                long long v4 = @"MicrophoneMinLevel";
                break;
              case 38:
                long long v4 = @"MicrophoneAGCEnabled";
                break;
              case 39:
                long long v4 = @"ImageRotation";
                break;
              case 40:
                long long v4 = @"ImageFlipHorizontal";
                break;
              case 41:
                long long v4 = @"ImageFlipVertical";
                break;
              case 42:
                long long v4 = @"LocalVideoRecordingEnabled";
                break;
              case 43:
                long long v4 = @"LocalSnapshotRecordingEnabled";
                break;
              case 44:
                long long v4 = @"StatusLightEnabled";
                break;
              case 45:
                long long v4 = @"StatusLightBrightness";
                break;
              case 46:
                long long v4 = @"DepthSensorStatus";
                break;
              default:
                switch((int)a2)
                {
                  case 65528:
                    goto LABEL_497;
                  case 65529:
                    goto LABEL_498;
                  case 65530:
                    goto LABEL_499;
                  case 65531:
                    goto LABEL_500;
                  case 65532:
                    goto LABEL_501;
                  case 65533:
                    goto LABEL_502;
                  default:
                    goto LABEL_435;
                }
            }
            goto LABEL_687;
          case 1363:
            switch((int)a2)
            {
              case 65528:
                goto LABEL_497;
              case 65529:
                goto LABEL_683;
              case 65530:
                goto LABEL_206;
              case 65531:
                goto LABEL_684;
              case 65532:
                goto LABEL_685;
              case 65533:
                goto LABEL_686;
              default:
                if (a2) {
                  goto LABEL_435;
                }
                goto LABEL_437;
            }
          case 1364:
            switch((int)a2)
            {
              case 65528:
                goto LABEL_210;
              case 65529:
                goto LABEL_683;
              case 65530:
                goto LABEL_206;
              case 65531:
                goto LABEL_684;
              case 65532:
                goto LABEL_685;
              case 65533:
                goto LABEL_686;
              default:
                if (a2) {
                  goto LABEL_4;
                }
LABEL_437:
                long long v4 = @"CurrentSessions";
                break;
            }
            goto LABEL_687;
          case 1366:
            if ((int)a2 > 65527)
            {
              switch((int)a2)
              {
                case 65528:
                  goto LABEL_210;
                case 65529:
                  goto LABEL_683;
                case 65530:
                  goto LABEL_206;
                case 65531:
                  goto LABEL_684;
                case 65532:
                  goto LABEL_685;
                case 65533:
                  goto LABEL_686;
                default:
                  goto LABEL_4;
              }
            }
            if (a2)
            {
              if (a2 == 1)
              {
                long long v4 = @"ActiveChimeID";
              }
              else
              {
                if (a2 != 2) {
                  goto LABEL_4;
                }
                long long v4 = @"Enabled";
              }
            }
            else
            {
              long long v4 = @"InstalledChimeSounds";
            }
            break;
          default:
            goto LABEL_60;
        }
        goto LABEL_687;
      }
      if ((int)a1 > 323615743)
      {
        if (a1 == 323615744)
        {
          switch((int)a2)
          {
            case 65528:
LABEL_210:
              long long v4 = @"GeneratedCommandList";
              break;
            case 65529:
LABEL_683:
              long long v4 = @"AcceptedCommandList";
              break;
            case 65530:
              goto LABEL_471;
            case 65531:
LABEL_684:
              long long v4 = @"AttributeList";
              break;
            case 65532:
LABEL_685:
              long long v4 = @"FeatureMap";
              break;
            case 65533:
LABEL_686:
              long long v4 = @"ClusterRevision";
              break;
            default:
              if (a2)
              {
LABEL_471:
                objc_msgSend_stringWithFormat_(NSString, a2, @"<Unknown attributeID %d>", a2);
                long long v4 = (__CFString *)objc_claimAutoreleasedReturnValue();
              }
              else
              {
                long long v4 = @"SupportsTapToUnlock";
              }
              break;
          }
          goto LABEL_687;
        }
        if (a1 == 323615747)
        {
          switch((int)a2)
          {
            case 65528:
              goto LABEL_210;
            case 65529:
              goto LABEL_683;
            case 65530:
              goto LABEL_471;
            case 65531:
              goto LABEL_684;
            case 65532:
              goto LABEL_685;
            case 65533:
              goto LABEL_686;
            default:
              if (a2) {
                goto LABEL_471;
              }
              long long v4 = @"IntentDetection";
              break;
          }
          goto LABEL_687;
        }
      }
      else
      {
        if (a1 == 1872)
        {
          switch((int)a2)
          {
            case 65528:
              goto LABEL_210;
            case 65529:
              goto LABEL_683;
            case 65530:
LABEL_206:
              long long v4 = @"EventList";
              goto LABEL_687;
            case 65531:
              goto LABEL_684;
            case 65532:
              goto LABEL_685;
            case 65533:
              goto LABEL_686;
            default:
              if (!a2)
              {
                long long v4 = @"DeviceDirectory";
                goto LABEL_687;
              }
              if (a2 == 1)
              {
                long long v4 = @"LocationDirectory";
                goto LABEL_687;
              }
LABEL_4:
              id v3 = NSString;
LABEL_5:
              objc_msgSend_stringWithFormat_(v3, a2, @"<Unknown attributeID %u>", a2);
              break;
          }
          goto LABEL_61;
        }
        if (a1 == 1873)
        {
          switch((int)a2)
          {
            case 65528:
              goto LABEL_210;
            case 65529:
              goto LABEL_683;
            case 65530:
              goto LABEL_206;
            case 65531:
              goto LABEL_684;
            case 65532:
              goto LABEL_685;
            case 65533:
              goto LABEL_686;
            default:
              if (a2) {
                goto LABEL_4;
              }
              long long v4 = @"SupportedDeviceCategories";
              break;
          }
          goto LABEL_687;
        }
      }
    }
    else
    {
      if ((int)a1 > 1282)
      {
        switch((int)a1)
        {
          case 1283:
            switch((int)a2)
            {
              case 65528:
                goto LABEL_497;
              case 65529:
                goto LABEL_498;
              case 65530:
                goto LABEL_499;
              case 65531:
                goto LABEL_500;
              case 65532:
                goto LABEL_501;
              case 65533:
                goto LABEL_502;
              default:
                if (a2)
                {
                  if (a2 != 1) {
                    goto LABEL_435;
                  }
                  long long v4 = @"LinkLocalAddress";
                }
                else
                {
                  long long v4 = @"MACAddress";
                }
                break;
            }
            goto LABEL_687;
          case 1284:
            if ((int)a2 > 65527)
            {
              switch((int)a2)
              {
                case 65528:
                  goto LABEL_497;
                case 65529:
                  goto LABEL_498;
                case 65530:
                  goto LABEL_499;
                case 65531:
                  goto LABEL_500;
                case 65532:
                  goto LABEL_501;
                case 65533:
                  goto LABEL_502;
                default:
                  goto LABEL_435;
              }
            }
            if (a2)
            {
              if (a2 == 1)
              {
                long long v4 = @"Lineup";
              }
              else
              {
                if (a2 != 2) {
                  goto LABEL_435;
                }
                long long v4 = @"CurrentChannel";
              }
            }
            else
            {
              long long v4 = @"ChannelList";
            }
            break;
          case 1285:
            switch((int)a2)
            {
              case 65528:
                goto LABEL_497;
              case 65529:
                goto LABEL_498;
              case 65530:
                goto LABEL_499;
              case 65531:
                goto LABEL_500;
              case 65532:
                goto LABEL_501;
              case 65533:
                goto LABEL_502;
              default:
                if (a2)
                {
                  if (a2 != 1) {
                    goto LABEL_435;
                  }
                  long long v4 = @"CurrentTarget";
                }
                else
                {
                  long long v4 = @"TargetList";
                }
                break;
            }
            goto LABEL_687;
          case 1286:
            long long v4 = @"CurrentState";
            switch((int)a2)
            {
              case 0:
                goto LABEL_687;
              case 1:
                long long v4 = @"StartTime";
                break;
              case 2:
                long long v4 = @"Duration";
                break;
              case 3:
                long long v4 = @"SampledPosition";
                break;
              case 4:
                long long v4 = @"PlaybackSpeed";
                break;
              case 5:
                long long v4 = @"SeekRangeEnd";
                break;
              case 6:
                long long v4 = @"SeekRangeStart";
                break;
              case 7:
                long long v4 = @"ActiveAudioTrack";
                break;
              case 8:
                long long v4 = @"AvailableAudioTracks";
                break;
              case 9:
                long long v4 = @"ActiveTextTrack";
                break;
              case 10:
                long long v4 = @"AvailableTextTracks";
                break;
              default:
                switch((int)a2)
                {
                  case 65528:
                    goto LABEL_497;
                  case 65529:
                    goto LABEL_498;
                  case 65530:
                    goto LABEL_499;
                  case 65531:
                    goto LABEL_500;
                  case 65532:
                    goto LABEL_501;
                  case 65533:
                    goto LABEL_502;
                  default:
                    goto LABEL_435;
                }
            }
            goto LABEL_687;
          case 1287:
            switch((int)a2)
            {
              case 65528:
                goto LABEL_497;
              case 65529:
                goto LABEL_498;
              case 65530:
                goto LABEL_499;
              case 65531:
                goto LABEL_500;
              case 65532:
                goto LABEL_501;
              case 65533:
                goto LABEL_502;
              default:
                if (a2)
                {
                  if (a2 != 1) {
                    goto LABEL_435;
                  }
                  long long v4 = @"CurrentInput";
                }
                else
                {
                  long long v4 = @"InputList";
                }
                break;
            }
            goto LABEL_687;
          case 1288:
          case 1289:
          case 1294:
          case 1296:
            if ((a2 - 65528) >= 6) {
              goto LABEL_435;
            }
            long long v4 = off_265193458[(int)a2 - 65528];
            goto LABEL_687;
          case 1290:
            switch((int)a2)
            {
              case 65528:
                goto LABEL_497;
              case 65529:
                goto LABEL_498;
              case 65530:
                goto LABEL_499;
              case 65531:
                goto LABEL_500;
              case 65532:
                goto LABEL_501;
              case 65533:
                goto LABEL_502;
              default:
                if (a2)
                {
                  if (a2 != 1) {
                    goto LABEL_435;
                  }
                  long long v4 = @"SupportedStreamingProtocols";
                }
                else
                {
                  long long v4 = @"AcceptHeader";
                }
                break;
            }
            goto LABEL_687;
          case 1291:
            switch((int)a2)
            {
              case 65528:
                goto LABEL_497;
              case 65529:
                goto LABEL_498;
              case 65530:
                goto LABEL_499;
              case 65531:
                goto LABEL_500;
              case 65532:
                goto LABEL_501;
              case 65533:
                goto LABEL_502;
              default:
                if (a2)
                {
                  if (a2 != 1) {
                    goto LABEL_435;
                  }
                  long long v4 = @"CurrentOutput";
                }
                else
                {
                  long long v4 = @"OutputList";
                }
                break;
            }
            goto LABEL_687;
          case 1292:
            switch((int)a2)
            {
              case 65528:
                goto LABEL_497;
              case 65529:
                goto LABEL_498;
              case 65530:
                goto LABEL_499;
              case 65531:
                goto LABEL_500;
              case 65532:
                goto LABEL_501;
              case 65533:
                goto LABEL_502;
              default:
                if (a2)
                {
                  if (a2 != 1) {
                    goto LABEL_435;
                  }
                  long long v4 = @"CurrentApp";
                }
                else
                {
                  long long v4 = @"CatalogList";
                }
                break;
            }
            goto LABEL_687;
          case 1293:
            long long v4 = @"VendorName";
            switch((int)a2)
            {
              case 0:
                goto LABEL_687;
              case 1:
                long long v4 = @"VendorID";
                break;
              case 2:
                long long v4 = @"ApplicationName";
                break;
              case 3:
                long long v4 = @"ProductID";
                break;
              case 4:
                long long v4 = @"Application";
                break;
              case 5:
                long long v4 = @"Status";
                break;
              case 6:
                long long v4 = @"ApplicationVersion";
                break;
              case 7:
                long long v4 = @"AllowedVendorList";
                break;
              default:
                switch((int)a2)
                {
                  case 65528:
                    goto LABEL_497;
                  case 65529:
                    goto LABEL_498;
                  case 65530:
                    goto LABEL_499;
                  case 65531:
                    goto LABEL_500;
                  case 65532:
                    goto LABEL_501;
                  case 65533:
                    goto LABEL_502;
                  default:
                    goto LABEL_435;
                }
            }
            goto LABEL_687;
          case 1295:
            long long v4 = @"Enabled";
            switch((int)a2)
            {
              case 0:
                goto LABEL_687;
              case 1:
                long long v4 = @"OnDemandRatings";
                break;
              case 2:
                long long v4 = @"OnDemandRatingThreshold";
                break;
              case 3:
                long long v4 = @"ScheduledContentRatings";
                break;
              case 4:
                long long v4 = @"ScheduledContentRatingThreshold";
                break;
              case 5:
                long long v4 = @"ScreenDailyTime";
                break;
              case 6:
                long long v4 = @"RemainingScreenTime";
                break;
              case 7:
                long long v4 = @"BlockUnrated";
                break;
              default:
                switch((int)a2)
                {
                  case 65528:
                    goto LABEL_497;
                  case 65529:
                    goto LABEL_498;
                  case 65530:
                    goto LABEL_499;
                  case 65531:
                    goto LABEL_500;
                  case 65532:
                    goto LABEL_501;
                  case 65533:
                    goto LABEL_502;
                  default:
                    goto LABEL_435;
                }
            }
            goto LABEL_687;
          default:
            goto LABEL_60;
        }
        goto LABEL_687;
      }
      switch(a1)
      {
        case 0x451:
          switch((int)a2)
          {
            case 65528:
              goto LABEL_497;
            case 65529:
              goto LABEL_498;
            case 65530:
              goto LABEL_499;
            case 65531:
              goto LABEL_500;
            case 65532:
              goto LABEL_501;
            case 65533:
              goto LABEL_502;
            default:
              if (a2)
              {
                if (a2 != 1) {
                  goto LABEL_435;
                }
                long long v4 = @"PassphraseSurrogate";
              }
              else
              {
                long long v4 = @"SSID";
              }
              break;
          }
          goto LABEL_687;
        case 0x452:
          long long v4 = @"BorderRouterName";
          switch((int)a2)
          {
            case 0:
              goto LABEL_687;
            case 1:
              long long v4 = @"BorderAgentID";
              goto LABEL_687;
            case 2:
              long long v4 = @"ThreadVersion";
              goto LABEL_687;
            case 3:
              long long v4 = @"InterfaceEnabled";
              goto LABEL_687;
            case 4:
              long long v4 = @"ActiveDatasetTimestamp";
              goto LABEL_687;
            case 5:
              long long v4 = @"PendingDatasetTimestamp";
              goto LABEL_687;
            default:
              goto LABEL_1274;
          }
        case 0x453:
          if ((int)a2 > 65527)
          {
            switch((int)a2)
            {
              case 65528:
                goto LABEL_497;
              case 65529:
                goto LABEL_498;
              case 65530:
                goto LABEL_499;
              case 65531:
                goto LABEL_500;
              case 65532:
                goto LABEL_501;
              case 65533:
                goto LABEL_502;
              default:
                goto LABEL_435;
            }
          }
          if (a2)
          {
            if (a2 == 1)
            {
              long long v4 = @"ThreadNetworks";
            }
            else if (a2 == 2)
            {
              long long v4 = @"ThreadNetworkTableSize";
            }
            else
            {
LABEL_435:
              objc_msgSend_stringWithFormat_(NSString, a2, @"<Unknown attributeID %u>", a2);
              long long v4 = (__CFString *)objc_claimAutoreleasedReturnValue();
            }
          }
          else
          {
            long long v4 = @"PreferredExtendedPanID";
          }
          goto LABEL_687;
      }
    }
LABEL_60:
    objc_msgSend_stringWithFormat_(NSString, a2, @"<Unknown clusterID %u>", a1);
LABEL_61:
    long long v4 = (__CFString *)objc_claimAutoreleasedReturnValue();
    goto LABEL_687;
  }
  if ((int)a1 > 768)
  {
    switch((int)a1)
    {
      case 1024:
        switch((int)a2)
        {
          case 65528:
            goto LABEL_497;
          case 65529:
            goto LABEL_498;
          case 65530:
            goto LABEL_499;
          case 65531:
            goto LABEL_500;
          case 65532:
            goto LABEL_501;
          case 65533:
            goto LABEL_502;
          default:
            long long v4 = @"MeasuredValue";
            switch((int)a2)
            {
              case 0:
                goto LABEL_687;
              case 1:
                goto LABEL_310;
              case 2:
                goto LABEL_311;
              case 3:
                goto LABEL_318;
              case 4:
                long long v4 = @"LightSensorType";
                break;
              default:
                goto LABEL_435;
            }
            break;
        }
        goto LABEL_687;
      case 1025:
      case 1031:
      case 1032:
      case 1033:
      case 1034:
      case 1035:
      case 1038:
      case 1039:
      case 1040:
      case 1041:
      case 1042:
      case 1044:
        goto LABEL_60;
      case 1026:
        switch((int)a2)
        {
          case 65528:
            goto LABEL_497;
          case 65529:
            goto LABEL_498;
          case 65530:
            goto LABEL_499;
          case 65531:
            goto LABEL_500;
          case 65532:
            goto LABEL_501;
          case 65533:
            goto LABEL_502;
          default:
            long long v4 = @"MeasuredValue";
            switch((int)a2)
            {
              case 0:
                goto LABEL_687;
              case 1:
                goto LABEL_310;
              case 2:
                goto LABEL_311;
              case 3:
                goto LABEL_318;
              default:
                goto LABEL_435;
            }
        }
        goto LABEL_687;
      case 1027:
        long long v4 = @"MeasuredValue";
        switch((int)a2)
        {
          case 0:
            goto LABEL_687;
          case 1:
            goto LABEL_310;
          case 2:
            goto LABEL_311;
          case 3:
            goto LABEL_318;
          case 4:
          case 5:
          case 6:
          case 7:
          case 8:
          case 9:
          case 10:
          case 11:
          case 12:
          case 13:
          case 14:
          case 15:
            goto LABEL_435;
          case 16:
            long long v4 = @"ScaledValue";
            goto LABEL_687;
          case 17:
            long long v4 = @"MinScaledValue";
            goto LABEL_687;
          case 18:
            long long v4 = @"MaxScaledValue";
            goto LABEL_687;
          case 19:
            long long v4 = @"ScaledTolerance";
            goto LABEL_687;
          case 20:
            long long v4 = @"Scale";
            goto LABEL_687;
          default:
            switch((int)a2)
            {
              case 65528:
                goto LABEL_497;
              case 65529:
                goto LABEL_498;
              case 65530:
                goto LABEL_499;
              case 65531:
                goto LABEL_500;
              case 65532:
                goto LABEL_501;
              case 65533:
                goto LABEL_502;
              default:
                goto LABEL_435;
            }
        }
      case 1028:
        switch((int)a2)
        {
          case 65528:
            goto LABEL_497;
          case 65529:
            goto LABEL_498;
          case 65530:
            goto LABEL_499;
          case 65531:
            goto LABEL_500;
          case 65532:
            goto LABEL_501;
          case 65533:
            goto LABEL_502;
          default:
            long long v4 = @"MeasuredValue";
            switch((int)a2)
            {
              case 0:
                goto LABEL_687;
              case 1:
                goto LABEL_310;
              case 2:
                goto LABEL_311;
              case 3:
                goto LABEL_318;
              default:
                goto LABEL_435;
            }
        }
        goto LABEL_687;
      case 1029:
        switch((int)a2)
        {
          case 65528:
            goto LABEL_497;
          case 65529:
            goto LABEL_498;
          case 65530:
            goto LABEL_499;
          case 65531:
            goto LABEL_500;
          case 65532:
            goto LABEL_501;
          case 65533:
            goto LABEL_502;
          default:
            long long v4 = @"MeasuredValue";
            switch((int)a2)
            {
              case 0:
                goto LABEL_687;
              case 1:
                goto LABEL_310;
              case 2:
                goto LABEL_311;
              case 3:
LABEL_318:
                long long v4 = @"Tolerance";
                break;
              default:
                goto LABEL_435;
            }
            break;
        }
        goto LABEL_687;
      case 1030:
        if ((int)a2 > 33)
        {
          if ((int)a2 <= 49)
          {
            switch(a2)
            {
              case '""':
                long long v4 = @"UltrasonicUnoccupiedToOccupiedThreshold";
                break;
              case '0':
                long long v4 = @"PhysicalContactOccupiedToUnoccupiedDelay";
                break;
              case '1':
                long long v4 = @"PhysicalContactUnoccupiedToOccupiedDelay";
                break;
              default:
                goto LABEL_435;
            }
          }
          else
          {
            switch((int)a2)
            {
              case 65528:
                goto LABEL_497;
              case 65529:
                goto LABEL_498;
              case 65530:
                goto LABEL_499;
              case 65531:
                goto LABEL_500;
              case 65532:
                goto LABEL_501;
              case 65533:
                goto LABEL_502;
              default:
                if (a2 != 50) {
                  goto LABEL_435;
                }
                long long v4 = @"PhysicalContactUnoccupiedToOccupiedThreshold";
                break;
            }
          }
        }
        else
        {
          long long v4 = @"Occupancy";
          switch((int)a2)
          {
            case 0:
              goto LABEL_687;
            case 1:
              long long v4 = @"OccupancySensorType";
              goto LABEL_687;
            case 2:
              long long v4 = @"OccupancySensorTypeBitmap";
              goto LABEL_687;
            case 3:
              long long v4 = @"HoldTime";
              goto LABEL_687;
            case 4:
              long long v4 = @"HoldTimeLimits";
              goto LABEL_687;
            case 5:
            case 6:
            case 7:
            case 8:
            case 9:
            case 10:
            case 11:
            case 12:
            case 13:
            case 14:
            case 15:
              goto LABEL_435;
            case 16:
              long long v4 = @"PIROccupiedToUnoccupiedDelay";
              goto LABEL_687;
            case 17:
              long long v4 = @"PIRUnoccupiedToOccupiedDelay";
              goto LABEL_687;
            case 18:
              long long v4 = @"PIRUnoccupiedToOccupiedThreshold";
              goto LABEL_687;
            default:
              if (a2 == 32)
              {
                long long v4 = @"UltrasonicOccupiedToUnoccupiedDelay";
              }
              else
              {
                if (a2 != 33) {
                  goto LABEL_435;
                }
                long long v4 = @"UltrasonicUnoccupiedToOccupiedDelay";
              }
              break;
          }
        }
        break;
      case 1036:
        long long v4 = @"MeasuredValue";
        switch((int)a2)
        {
          case 0:
            goto LABEL_687;
          case 1:
            goto LABEL_310;
          case 2:
            goto LABEL_311;
          case 3:
            goto LABEL_228;
          case 4:
            goto LABEL_232;
          case 5:
            goto LABEL_233;
          case 6:
            goto LABEL_234;
          case 7:
            goto LABEL_235;
          case 8:
            goto LABEL_236;
          case 9:
            goto LABEL_237;
          case 10:
            goto LABEL_238;
          default:
            switch((int)a2)
            {
              case 65528:
                goto LABEL_497;
              case 65529:
                goto LABEL_498;
              case 65530:
                goto LABEL_499;
              case 65531:
                goto LABEL_500;
              case 65532:
                goto LABEL_501;
              case 65533:
                goto LABEL_502;
              default:
                goto LABEL_435;
            }
        }
      case 1037:
        long long v4 = @"MeasuredValue";
        switch((int)a2)
        {
          case 0:
            goto LABEL_687;
          case 1:
            goto LABEL_310;
          case 2:
            goto LABEL_311;
          case 3:
            goto LABEL_228;
          case 4:
            goto LABEL_232;
          case 5:
            goto LABEL_233;
          case 6:
            goto LABEL_234;
          case 7:
            goto LABEL_235;
          case 8:
            goto LABEL_236;
          case 9:
            goto LABEL_237;
          case 10:
            goto LABEL_238;
          default:
            switch((int)a2)
            {
              case 65528:
                goto LABEL_497;
              case 65529:
                goto LABEL_498;
              case 65530:
                goto LABEL_499;
              case 65531:
                goto LABEL_500;
              case 65532:
                goto LABEL_501;
              case 65533:
                goto LABEL_502;
              default:
                goto LABEL_435;
            }
        }
      case 1043:
        long long v4 = @"MeasuredValue";
        switch((int)a2)
        {
          case 0:
            goto LABEL_687;
          case 1:
            goto LABEL_310;
          case 2:
            goto LABEL_311;
          case 3:
            goto LABEL_228;
          case 4:
            goto LABEL_232;
          case 5:
            goto LABEL_233;
          case 6:
            goto LABEL_234;
          case 7:
            goto LABEL_235;
          case 8:
            goto LABEL_236;
          case 9:
            goto LABEL_237;
          case 10:
            goto LABEL_238;
          default:
            switch((int)a2)
            {
              case 65528:
                goto LABEL_497;
              case 65529:
                goto LABEL_498;
              case 65530:
                goto LABEL_499;
              case 65531:
                goto LABEL_500;
              case 65532:
                goto LABEL_501;
              case 65533:
                goto LABEL_502;
              default:
                goto LABEL_435;
            }
        }
      case 1045:
        long long v4 = @"MeasuredValue";
        switch((int)a2)
        {
          case 0:
            goto LABEL_687;
          case 1:
            goto LABEL_310;
          case 2:
            goto LABEL_311;
          case 3:
            goto LABEL_228;
          case 4:
            goto LABEL_232;
          case 5:
            goto LABEL_233;
          case 6:
            goto LABEL_234;
          case 7:
            goto LABEL_235;
          case 8:
            goto LABEL_236;
          case 9:
            goto LABEL_237;
          case 10:
            goto LABEL_238;
          default:
            switch((int)a2)
            {
              case 65528:
                goto LABEL_497;
              case 65529:
                goto LABEL_498;
              case 65530:
                goto LABEL_499;
              case 65531:
                goto LABEL_500;
              case 65532:
                goto LABEL_501;
              case 65533:
                goto LABEL_502;
              default:
                goto LABEL_435;
            }
        }
      default:
        switch((int)a1)
        {
          case 1066:
            long long v4 = @"MeasuredValue";
            switch((int)a2)
            {
              case 0:
                goto LABEL_687;
              case 1:
                goto LABEL_310;
              case 2:
                goto LABEL_311;
              case 3:
                goto LABEL_228;
              case 4:
                goto LABEL_232;
              case 5:
                goto LABEL_233;
              case 6:
                goto LABEL_234;
              case 7:
                goto LABEL_235;
              case 8:
                goto LABEL_236;
              case 9:
                goto LABEL_237;
              case 10:
                goto LABEL_238;
              default:
                switch((int)a2)
                {
                  case 65528:
                    goto LABEL_497;
                  case 65529:
                    goto LABEL_498;
                  case 65530:
                    goto LABEL_499;
                  case 65531:
                    goto LABEL_500;
                  case 65532:
                    goto LABEL_501;
                  case 65533:
                    goto LABEL_502;
                  default:
                    goto LABEL_435;
                }
            }
          case 1067:
            long long v4 = @"MeasuredValue";
            switch((int)a2)
            {
              case 0:
                goto LABEL_687;
              case 1:
                goto LABEL_310;
              case 2:
                goto LABEL_311;
              case 3:
                goto LABEL_228;
              case 4:
                goto LABEL_232;
              case 5:
                goto LABEL_233;
              case 6:
                goto LABEL_234;
              case 7:
                goto LABEL_235;
              case 8:
                goto LABEL_236;
              case 9:
                goto LABEL_237;
              case 10:
                goto LABEL_238;
              default:
                switch((int)a2)
                {
                  case 65528:
                    goto LABEL_497;
                  case 65529:
                    goto LABEL_498;
                  case 65530:
                    goto LABEL_499;
                  case 65531:
                    goto LABEL_500;
                  case 65532:
                    goto LABEL_501;
                  case 65533:
                    goto LABEL_502;
                  default:
                    goto LABEL_435;
                }
            }
          case 1068:
            long long v4 = @"MeasuredValue";
            switch((int)a2)
            {
              case 0:
                goto LABEL_687;
              case 1:
                goto LABEL_310;
              case 2:
                goto LABEL_311;
              case 3:
                goto LABEL_228;
              case 4:
                goto LABEL_232;
              case 5:
                goto LABEL_233;
              case 6:
                goto LABEL_234;
              case 7:
                goto LABEL_235;
              case 8:
                goto LABEL_236;
              case 9:
                goto LABEL_237;
              case 10:
                goto LABEL_238;
              default:
                switch((int)a2)
                {
                  case 65528:
                    goto LABEL_497;
                  case 65529:
                    goto LABEL_498;
                  case 65530:
                    goto LABEL_499;
                  case 65531:
                    goto LABEL_500;
                  case 65532:
                    goto LABEL_501;
                  case 65533:
                    goto LABEL_502;
                  default:
                    goto LABEL_435;
                }
            }
          case 1069:
            long long v4 = @"MeasuredValue";
            switch((int)a2)
            {
              case 0:
                goto LABEL_687;
              case 1:
                goto LABEL_310;
              case 2:
                goto LABEL_311;
              case 3:
                goto LABEL_228;
              case 4:
                goto LABEL_232;
              case 5:
                goto LABEL_233;
              case 6:
                goto LABEL_234;
              case 7:
                goto LABEL_235;
              case 8:
                goto LABEL_236;
              case 9:
                goto LABEL_237;
              case 10:
                goto LABEL_238;
              default:
                switch((int)a2)
                {
                  case 65528:
                    goto LABEL_497;
                  case 65529:
                    goto LABEL_498;
                  case 65530:
                    goto LABEL_499;
                  case 65531:
                    goto LABEL_500;
                  case 65532:
                    goto LABEL_501;
                  case 65533:
                    goto LABEL_502;
                  default:
                    goto LABEL_435;
                }
            }
          case 1070:
            long long v4 = @"MeasuredValue";
            switch((int)a2)
            {
              case 0:
                goto LABEL_687;
              case 1:
                goto LABEL_310;
              case 2:
                goto LABEL_311;
              case 3:
                goto LABEL_228;
              case 4:
                goto LABEL_232;
              case 5:
                goto LABEL_233;
              case 6:
                goto LABEL_234;
              case 7:
                goto LABEL_235;
              case 8:
                goto LABEL_236;
              case 9:
                goto LABEL_237;
              case 10:
                goto LABEL_238;
              default:
                switch((int)a2)
                {
                  case 65528:
                    goto LABEL_497;
                  case 65529:
                    goto LABEL_498;
                  case 65530:
                    goto LABEL_499;
                  case 65531:
                    goto LABEL_500;
                  case 65532:
                    goto LABEL_501;
                  case 65533:
                    goto LABEL_502;
                  default:
                    goto LABEL_435;
                }
            }
          case 1071:
            long long v4 = @"MeasuredValue";
            switch((int)a2)
            {
              case 0:
                goto LABEL_687;
              case 1:
LABEL_310:
                long long v4 = @"MinMeasuredValue";
                break;
              case 2:
LABEL_311:
                long long v4 = @"MaxMeasuredValue";
                break;
              case 3:
LABEL_228:
                long long v4 = @"PeakMeasuredValue";
                break;
              case 4:
LABEL_232:
                long long v4 = @"PeakMeasuredValueWindow";
                break;
              case 5:
LABEL_233:
                long long v4 = @"AverageMeasuredValue";
                break;
              case 6:
LABEL_234:
                long long v4 = @"AverageMeasuredValueWindow";
                break;
              case 7:
LABEL_235:
                long long v4 = @"Uncertainty";
                break;
              case 8:
LABEL_236:
                long long v4 = @"MeasurementUnit";
                break;
              case 9:
LABEL_237:
                long long v4 = @"MeasurementMedium";
                break;
              case 10:
LABEL_238:
                long long v4 = @"LevelValue";
                break;
              default:
                switch((int)a2)
                {
                  case 65528:
LABEL_497:
                    long long v4 = @"GeneratedCommandList";
                    break;
                  case 65529:
LABEL_498:
                    long long v4 = @"AcceptedCommandList";
                    break;
                  case 65530:
LABEL_499:
                    long long v4 = @"EventList";
                    break;
                  case 65531:
LABEL_500:
                    long long v4 = @"AttributeList";
                    break;
                  case 65532:
LABEL_501:
                    long long v4 = @"FeatureMap";
                    break;
                  case 65533:
LABEL_502:
                    long long v4 = @"ClusterRevision";
                    break;
                  default:
                    goto LABEL_435;
                }
                break;
            }
            goto LABEL_687;
          default:
            if (a1 != 769) {
              goto LABEL_60;
            }
            if ((int)a2 <= 31)
            {
              if ((int)a2 <= 15)
              {
                if (a2)
                {
                  if (a2 == 1)
                  {
                    long long v4 = @"PhysicalMaxLevel";
                  }
                  else
                  {
                    if (a2 != 2) {
                      goto LABEL_435;
                    }
                    long long v4 = @"BallastStatus";
                  }
                }
                else
                {
                  long long v4 = @"PhysicalMinLevel";
                }
              }
              else
              {
                switch((int)a2)
                {
                  case 16:
                    long long v4 = @"MinLevel";
                    break;
                  case 17:
                    long long v4 = @"MaxLevel";
                    break;
                  case 20:
                    long long v4 = @"IntrinsicBallastFactor";
                    break;
                  case 21:
                    long long v4 = @"BallastFactorAdjustment";
                    break;
                  default:
                    goto LABEL_435;
                }
              }
            }
            else
            {
              switch((int)a2)
              {
                case 65528:
                  goto LABEL_527;
                case 65529:
                  goto LABEL_530;
                case 65530:
                  goto LABEL_531;
                case 65531:
                  goto LABEL_532;
                case 65532:
                  goto LABEL_533;
                case 65533:
                  goto LABEL_529;
                default:
                  if (a2 != 32) {
                    goto LABEL_435;
                  }
                  long long v4 = @"LampQuantity";
                  break;
              }
            }
            break;
        }
        goto LABEL_687;
    }
    goto LABEL_687;
  }
  if ((int)a1 > 511)
  {
    switch((int)a1)
    {
      case 512:
        long long v4 = @"MaxPressure";
        switch((int)a2)
        {
          case 0:
            goto LABEL_687;
          case 1:
            long long v4 = @"MaxSpeed";
            goto LABEL_687;
          case 2:
            long long v4 = @"MaxFlow";
            goto LABEL_687;
          case 3:
            long long v4 = @"MinConstPressure";
            goto LABEL_687;
          case 4:
            long long v4 = @"MaxConstPressure";
            goto LABEL_687;
          case 5:
            long long v4 = @"MinCompPressure";
            goto LABEL_687;
          case 6:
            long long v4 = @"MaxCompPressure";
            goto LABEL_687;
          case 7:
            long long v4 = @"MinConstSpeed";
            goto LABEL_687;
          case 8:
            long long v4 = @"MaxConstSpeed";
            goto LABEL_687;
          case 9:
            long long v4 = @"MinConstFlow";
            goto LABEL_687;
          case 10:
            long long v4 = @"MaxConstFlow";
            goto LABEL_687;
          case 11:
            long long v4 = @"MinConstTemp";
            goto LABEL_687;
          case 12:
            long long v4 = @"MaxConstTemp";
            goto LABEL_687;
          case 13:
          case 14:
          case 15:
          case 24:
          case 25:
          case 26:
          case 27:
          case 28:
          case 29:
          case 30:
          case 31:
            goto LABEL_435;
          case 16:
            long long v4 = @"PumpStatus";
            goto LABEL_687;
          case 17:
            long long v4 = @"EffectiveOperationMode";
            goto LABEL_687;
          case 18:
            long long v4 = @"EffectiveControlMode";
            goto LABEL_687;
          case 19:
            long long v4 = @"Capacity";
            goto LABEL_687;
          case 20:
            long long v4 = @"Speed";
            goto LABEL_687;
          case 21:
            long long v4 = @"LifetimeRunningHours";
            goto LABEL_687;
          case 22:
            long long v4 = @"Power";
            goto LABEL_687;
          case 23:
            long long v4 = @"LifetimeEnergyConsumed";
            goto LABEL_687;
          case 32:
            long long v4 = @"OperationMode";
            goto LABEL_687;
          case 33:
            long long v4 = @"ControlMode";
            goto LABEL_687;
          default:
            switch((int)a2)
            {
              case 65528:
                goto LABEL_504;
              case 65529:
                goto LABEL_505;
              case 65530:
                goto LABEL_506;
              case 65531:
                goto LABEL_507;
              case 65532:
                goto LABEL_508;
              case 65533:
                goto LABEL_529;
              default:
                goto LABEL_435;
            }
        }
      case 513:
        long long v4 = @"LocalTemperature";
        switch((int)a2)
        {
          case 0:
            goto LABEL_687;
          case 1:
            long long v4 = @"OutdoorTemperature";
            goto LABEL_687;
          case 2:
            long long v4 = @"Occupancy";
            goto LABEL_687;
          case 3:
            long long v4 = @"AbsMinHeatSetpointLimit";
            goto LABEL_687;
          case 4:
            long long v4 = @"AbsMaxHeatSetpointLimit";
            goto LABEL_687;
          case 5:
            long long v4 = @"AbsMinCoolSetpointLimit";
            goto LABEL_687;
          case 6:
            long long v4 = @"AbsMaxCoolSetpointLimit";
            goto LABEL_687;
          case 7:
            long long v4 = @"PICoolingDemand";
            goto LABEL_687;
          case 8:
            long long v4 = @"PIHeatingDemand";
            goto LABEL_687;
          case 9:
            long long v4 = @"HVACSystemTypeConfiguration";
            goto LABEL_687;
          case 10:
          case 11:
          case 12:
          case 13:
          case 14:
          case 15:
          case 29:
          case 31:
          case 38:
          case 39:
          case 40:
          case 42:
          case 43:
          case 44:
          case 45:
          case 46:
          case 47:
          case 51:
          case 59:
          case 60:
          case 61:
          case 62:
          case 63:
            goto LABEL_435;
          case 16:
            long long v4 = @"LocalTemperatureCalibration";
            goto LABEL_687;
          case 17:
            long long v4 = @"OccupiedCoolingSetpoint";
            goto LABEL_687;
          case 18:
            long long v4 = @"OccupiedHeatingSetpoint";
            goto LABEL_687;
          case 19:
            long long v4 = @"UnoccupiedCoolingSetpoint";
            goto LABEL_687;
          case 20:
            long long v4 = @"UnoccupiedHeatingSetpoint";
            goto LABEL_687;
          case 21:
            long long v4 = @"MinHeatSetpointLimit";
            goto LABEL_687;
          case 22:
            long long v4 = @"MaxHeatSetpointLimit";
            goto LABEL_687;
          case 23:
            long long v4 = @"MinCoolSetpointLimit";
            goto LABEL_687;
          case 24:
            long long v4 = @"MaxCoolSetpointLimit";
            goto LABEL_687;
          case 25:
            long long v4 = @"MinSetpointDeadBand";
            goto LABEL_687;
          case 26:
            long long v4 = @"RemoteSensing";
            goto LABEL_687;
          case 27:
            long long v4 = @"ControlSequenceOfOperation";
            goto LABEL_687;
          case 28:
            long long v4 = @"SystemMode";
            goto LABEL_687;
          case 30:
            long long v4 = @"ThermostatRunningMode";
            goto LABEL_687;
          case 32:
            long long v4 = @"StartOfWeek";
            goto LABEL_687;
          case 33:
            long long v4 = @"NumberOfWeeklyTransitions";
            goto LABEL_687;
          case 34:
            long long v4 = @"NumberOfDailyTransitions";
            goto LABEL_687;
          case 35:
            long long v4 = @"TemperatureSetpointHold";
            goto LABEL_687;
          case 36:
            long long v4 = @"TemperatureSetpointHoldDuration";
            goto LABEL_687;
          case 37:
            long long v4 = @"ThermostatProgrammingOperationMode";
            goto LABEL_687;
          case 41:
            long long v4 = @"ThermostatRunningState";
            goto LABEL_687;
          case 48:
            long long v4 = @"SetpointChangeSource";
            goto LABEL_687;
          case 49:
            long long v4 = @"SetpointChangeAmount";
            goto LABEL_687;
          case 50:
            long long v4 = @"SetpointChangeSourceTimestamp";
            goto LABEL_687;
          case 52:
            long long v4 = @"OccupiedSetback";
            goto LABEL_687;
          case 53:
            long long v4 = @"OccupiedSetbackMin";
            goto LABEL_687;
          case 54:
            long long v4 = @"OccupiedSetbackMax";
            goto LABEL_687;
          case 55:
            long long v4 = @"UnoccupiedSetback";
            goto LABEL_687;
          case 56:
            long long v4 = @"UnoccupiedSetbackMin";
            goto LABEL_687;
          case 57:
            long long v4 = @"UnoccupiedSetbackMax";
            goto LABEL_687;
          case 58:
            long long v4 = @"EmergencyHeatDelta";
            goto LABEL_687;
          case 64:
            long long v4 = @"ACType";
            goto LABEL_687;
          case 65:
            long long v4 = @"ACCapacity";
            goto LABEL_687;
          case 66:
            long long v4 = @"ACRefrigerantType";
            goto LABEL_687;
          case 67:
            long long v4 = @"ACCompressorType";
            goto LABEL_687;
          case 68:
            long long v4 = @"ACErrorCode";
            goto LABEL_687;
          case 69:
            long long v4 = @"ACLouverPosition";
            goto LABEL_687;
          case 70:
            long long v4 = @"ACCoilTemperature";
            goto LABEL_687;
          case 71:
            long long v4 = @"ACCapacityformat";
            goto LABEL_687;
          case 72:
            long long v4 = @"PresetTypes";
            goto LABEL_687;
          case 73:
            long long v4 = @"ScheduleTypes";
            goto LABEL_687;
          case 74:
            long long v4 = @"NumberOfPresets";
            goto LABEL_687;
          case 75:
            long long v4 = @"NumberOfSchedules";
            goto LABEL_687;
          case 76:
            long long v4 = @"NumberOfScheduleTransitions";
            goto LABEL_687;
          case 77:
            long long v4 = @"NumberOfScheduleTransitionPerDay";
            goto LABEL_687;
          case 78:
            long long v4 = @"ActivePresetHandle";
            goto LABEL_687;
          case 79:
            long long v4 = @"ActiveScheduleHandle";
            goto LABEL_687;
          case 80:
            long long v4 = @"Presets";
            goto LABEL_687;
          case 81:
            long long v4 = @"Schedules";
            goto LABEL_687;
          case 82:
            long long v4 = @"SetpointHoldExpiryTimestamp";
            goto LABEL_687;
          default:
            switch((int)a2)
            {
              case 65528:
                goto LABEL_527;
              case 65529:
                goto LABEL_530;
              case 65530:
                goto LABEL_531;
              case 65531:
                goto LABEL_532;
              case 65532:
                goto LABEL_533;
              case 65533:
                goto LABEL_529;
              default:
                goto LABEL_435;
            }
        }
      case 514:
        long long v4 = @"FanMode";
        switch((int)a2)
        {
          case 0:
            goto LABEL_687;
          case 1:
            long long v4 = @"FanModeSequence";
            break;
          case 2:
            long long v4 = @"PercentSetting";
            break;
          case 3:
            long long v4 = @"PercentCurrent";
            break;
          case 4:
            long long v4 = @"SpeedMax";
            break;
          case 5:
            long long v4 = @"SpeedSetting";
            break;
          case 6:
            long long v4 = @"SpeedCurrent";
            break;
          case 7:
            long long v4 = @"RockSupport";
            break;
          case 8:
            long long v4 = @"RockSetting";
            break;
          case 9:
            long long v4 = @"WindSupport";
            break;
          case 10:
            long long v4 = @"WindSetting";
            break;
          case 11:
            long long v4 = @"AirflowDirection";
            break;
          default:
            switch((int)a2)
            {
              case 65528:
                goto LABEL_527;
              case 65529:
                goto LABEL_530;
              case 65530:
                goto LABEL_531;
              case 65531:
                goto LABEL_532;
              case 65532:
                goto LABEL_533;
              case 65533:
                goto LABEL_529;
              default:
                goto LABEL_435;
            }
        }
        goto LABEL_687;
      case 515:
        goto LABEL_60;
      case 516:
        if ((int)a2 > 65527)
        {
          switch((int)a2)
          {
            case 65528:
              goto LABEL_527;
            case 65529:
              goto LABEL_530;
            case 65530:
              goto LABEL_531;
            case 65531:
              goto LABEL_532;
            case 65532:
              goto LABEL_533;
            case 65533:
              goto LABEL_529;
            default:
              goto LABEL_435;
          }
        }
        if (a2)
        {
          if (a2 == 1)
          {
            long long v4 = @"KeypadLockout";
          }
          else
          {
            if (a2 != 2) {
              goto LABEL_435;
            }
            long long v4 = @"ScheduleProgrammingVisibility";
          }
        }
        else
        {
          long long v4 = @"TemperatureDisplayMode";
        }
        break;
      default:
        if (a1 != 768) {
          goto LABEL_60;
        }
        long long v4 = @"CurrentHue";
        switch((int)a2)
        {
          case 0:
            goto LABEL_687;
          case 1:
            long long v4 = @"CurrentSaturation";
            break;
          case 2:
            long long v4 = @"RemainingTime";
            break;
          case 3:
            long long v4 = @"CurrentX";
            break;
          case 4:
            long long v4 = @"CurrentY";
            break;
          case 5:
            long long v4 = @"DriftCompensation";
            break;
          case 6:
            long long v4 = @"CompensationText";
            break;
          case 7:
            long long v4 = @"ColorTemperatureMireds";
            break;
          case 8:
            long long v4 = @"ColorMode";
            break;
          case 9:
          case 10:
          case 11:
          case 12:
          case 13:
          case 14:
          case 20:
          case 24:
          case 28:
          case 29:
          case 30:
          case 31:
          case 35:
          case 39:
          case 43:
          case 44:
          case 45:
          case 46:
          case 47:
          case 53:
          case 57:
            goto LABEL_435;
          case 15:
            long long v4 = @"Options";
            break;
          case 16:
            long long v4 = @"NumberOfPrimaries";
            break;
          case 17:
            long long v4 = @"Primary1X";
            break;
          case 18:
            long long v4 = @"Primary1Y";
            break;
          case 19:
            long long v4 = @"Primary1Intensity";
            break;
          case 21:
            long long v4 = @"Primary2X";
            break;
          case 22:
            long long v4 = @"Primary2Y";
            break;
          case 23:
            long long v4 = @"Primary2Intensity";
            break;
          case 25:
            long long v4 = @"Primary3X";
            break;
          case 26:
            long long v4 = @"Primary3Y";
            break;
          case 27:
            long long v4 = @"Primary3Intensity";
            break;
          case 32:
            long long v4 = @"Primary4X";
            break;
          case 33:
            long long v4 = @"Primary4Y";
            break;
          case 34:
            long long v4 = @"Primary4Intensity";
            break;
          case 36:
            long long v4 = @"Primary5X";
            break;
          case 37:
            long long v4 = @"Primary5Y";
            break;
          case 38:
            long long v4 = @"Primary5Intensity";
            break;
          case 40:
            long long v4 = @"Primary6X";
            break;
          case 41:
            long long v4 = @"Primary6Y";
            break;
          case 42:
            long long v4 = @"Primary6Intensity";
            break;
          case 48:
            long long v4 = @"WhitePointX";
            break;
          case 49:
            long long v4 = @"WhitePointY";
            break;
          case 50:
            long long v4 = @"ColorPointRX";
            break;
          case 51:
            long long v4 = @"ColorPointRY";
            break;
          case 52:
            long long v4 = @"ColorPointRIntensity";
            break;
          case 54:
            long long v4 = @"ColorPointGX";
            break;
          case 55:
            long long v4 = @"ColorPointGY";
            break;
          case 56:
            long long v4 = @"ColorPointGIntensity";
            break;
          case 58:
            long long v4 = @"ColorPointBX";
            break;
          case 59:
            long long v4 = @"ColorPointBY";
            break;
          case 60:
            long long v4 = @"ColorPointBIntensity";
            break;
          default:
            switch((int)a2)
            {
              case 16384:
                long long v4 = @"EnhancedCurrentHue";
                break;
              case 16385:
                long long v4 = @"EnhancedColorMode";
                break;
              case 16386:
                long long v4 = @"ColorLoopActive";
                break;
              case 16387:
                long long v4 = @"ColorLoopDirection";
                break;
              case 16388:
                long long v4 = @"ColorLoopTime";
                break;
              case 16389:
                long long v4 = @"ColorLoopStartEnhancedHue";
                break;
              case 16390:
                long long v4 = @"ColorLoopStoredEnhancedHue";
                break;
              case 16391:
              case 16392:
              case 16393:
              case 16398:
              case 16399:
                goto LABEL_435;
              case 16394:
                long long v4 = @"ColorCapabilities";
                break;
              case 16395:
                long long v4 = @"ColorTempPhysicalMinMireds";
                break;
              case 16396:
                long long v4 = @"ColorTempPhysicalMaxMireds";
                break;
              case 16397:
                long long v4 = @"CoupleColorTempToLevelMinMireds";
                break;
              case 16400:
                long long v4 = @"StartUpColorTemperatureMireds";
                break;
              default:
                switch((int)a2)
                {
                  case 65528:
LABEL_527:
                    long long v4 = @"GeneratedCommandList";
                    break;
                  case 65529:
LABEL_530:
                    long long v4 = @"AcceptedCommandList";
                    break;
                  case 65530:
LABEL_531:
                    long long v4 = @"EventList";
                    break;
                  case 65531:
LABEL_532:
                    long long v4 = @"AttributeList";
                    break;
                  case 65532:
LABEL_533:
                    long long v4 = @"FeatureMap";
                    break;
                  case 65533:
                    goto LABEL_529;
                  default:
                    goto LABEL_435;
                }
                break;
            }
            break;
        }
        goto LABEL_687;
    }
    goto LABEL_687;
  }
  if (a1 != 257)
  {
    if (a1 == 258)
    {
      long long v4 = @"Type";
      switch((int)a2)
      {
        case 0:
          goto LABEL_687;
        case 1:
          long long v4 = @"PhysicalClosedLimitLift";
          goto LABEL_687;
        case 2:
          long long v4 = @"PhysicalClosedLimitTilt";
          goto LABEL_687;
        case 3:
          long long v4 = @"CurrentPositionLift";
          goto LABEL_687;
        case 4:
          long long v4 = @"CurrentPositionTilt";
          goto LABEL_687;
        case 5:
          long long v4 = @"NumberOfActuationsLift";
          goto LABEL_687;
        case 6:
          long long v4 = @"NumberOfActuationsTilt";
          goto LABEL_687;
        case 7:
          long long v4 = @"ConfigStatus";
          goto LABEL_687;
        case 8:
          long long v4 = @"CurrentPositionLiftPercentage";
          goto LABEL_687;
        case 9:
          long long v4 = @"CurrentPositionTiltPercentage";
          goto LABEL_687;
        case 10:
          long long v4 = @"OperationalStatus";
          goto LABEL_687;
        case 11:
          long long v4 = @"TargetPositionLiftPercent100ths";
          goto LABEL_687;
        case 12:
          long long v4 = @"TargetPositionTiltPercent100ths";
          goto LABEL_687;
        case 13:
          long long v4 = @"EndProductType";
          goto LABEL_687;
        case 14:
          long long v4 = @"CurrentPositionLiftPercent100ths";
          goto LABEL_687;
        case 15:
          long long v4 = @"CurrentPositionTiltPercent100ths";
          goto LABEL_687;
        case 16:
          long long v4 = @"InstalledOpenLimitLift";
          goto LABEL_687;
        case 17:
          long long v4 = @"InstalledClosedLimitLift";
          goto LABEL_687;
        case 18:
          long long v4 = @"InstalledOpenLimitTilt";
          goto LABEL_687;
        case 19:
          long long v4 = @"InstalledClosedLimitTilt";
          goto LABEL_687;
        case 20:
        case 21:
        case 22:
        case 24:
        case 25:
          goto LABEL_435;
        case 23:
          long long v4 = @"Mode";
          goto LABEL_687;
        case 26:
          long long v4 = @"SafetyStatus";
          goto LABEL_687;
        default:
          switch((int)a2)
          {
            case 65528:
              goto LABEL_504;
            case 65529:
              goto LABEL_505;
            case 65530:
              goto LABEL_506;
            case 65531:
              goto LABEL_507;
            case 65532:
              goto LABEL_508;
            case 65533:
              goto LABEL_529;
            default:
              goto LABEL_435;
          }
      }
    }
    if (a1 == 336)
    {
      long long v4 = @"SupportedAreas";
      switch((int)a2)
      {
        case 0:
          goto LABEL_687;
        case 1:
          long long v4 = @"SupportedMaps";
          break;
        case 2:
          long long v4 = @"SelectedAreas";
          break;
        case 3:
          long long v4 = @"CurrentArea";
          break;
        case 4:
          long long v4 = @"EstimatedEndTime";
          break;
        case 5:
          long long v4 = @"Progress";
          break;
        default:
LABEL_1274:
          JUMPOUT(0);
      }
      goto LABEL_687;
    }
    goto LABEL_60;
  }
  if ((int)a2 > 127)
  {
    switch((int)a2)
    {
      case 323551232:
        long long v4 = @"AppleAliroReaderVerificationKey";
        break;
      case 323551233:
        long long v4 = @"AppleAliroReaderGroupIdentifier";
        break;
      case 323551234:
        long long v4 = @"AppleAliroReaderGroupSubIdentifier";
        break;
      case 323551235:
        long long v4 = @"AppleAliroExpeditedTransactionSupportedProtocolVersions";
        break;
      case 323551236:
        long long v4 = @"AppleAliroGroupResolvingKey";
        break;
      case 323551237:
        long long v4 = @"AppleAliroSupportedBLEUWBProtocolVersions";
        break;
      case 323551238:
        long long v4 = @"AppleAliroBLEAdvertisingVersion";
        break;
      case 323551239:
        long long v4 = @"AppleNumberOfAliroCredentialIssuerKeysSupported";
        break;
      case 323551240:
        long long v4 = @"AppleNumberOfAliroEndpointKeysSupported";
        break;
      default:
        switch((int)a2)
        {
          case 65528:
LABEL_504:
            long long v4 = @"GeneratedCommandList";
            break;
          case 65529:
LABEL_505:
            long long v4 = @"AcceptedCommandList";
            break;
          case 65530:
LABEL_506:
            long long v4 = @"EventList";
            break;
          case 65531:
LABEL_507:
            long long v4 = @"AttributeList";
            break;
          case 65532:
LABEL_508:
            long long v4 = @"FeatureMap";
            break;
          case 65533:
LABEL_529:
            long long v4 = @"ClusterRevision";
            break;
          default:
            goto LABEL_435;
        }
        break;
    }
  }
  else
  {
    long long v4 = @"LockState";
    switch((int)a2)
    {
      case 0:
        break;
      case 1:
        long long v4 = @"LockType";
        break;
      case 2:
        long long v4 = @"ActuatorEnabled";
        break;
      case 3:
        long long v4 = @"DoorState";
        break;
      case 4:
        long long v4 = @"DoorOpenEvents";
        break;
      case 5:
        long long v4 = @"DoorClosedEvents";
        break;
      case 6:
        long long v4 = @"OpenPeriod";
        break;
      case 17:
        long long v4 = @"NumberOfTotalUsersSupported";
        break;
      case 18:
        long long v4 = @"NumberOfPINUsersSupported";
        break;
      case 19:
        long long v4 = @"NumberOfRFIDUsersSupported";
        break;
      case 20:
        long long v4 = @"NumberOfWeekDaySchedulesSupportedPerUser";
        break;
      case 21:
        long long v4 = @"NumberOfYearDaySchedulesSupportedPerUser";
        break;
      case 22:
        long long v4 = @"NumberOfHolidaySchedulesSupported";
        break;
      case 23:
        long long v4 = @"MaxPINCodeLength";
        break;
      case 24:
        long long v4 = @"MinPINCodeLength";
        break;
      case 25:
        long long v4 = @"MaxRFIDCodeLength";
        break;
      case 26:
        long long v4 = @"MinRFIDCodeLength";
        break;
      case 27:
        long long v4 = @"CredentialRulesSupport";
        break;
      case 28:
        long long v4 = @"NumberOfCredentialsSupportedPerUser";
        break;
      case 33:
        long long v4 = @"Language";
        break;
      case 34:
        long long v4 = @"LEDSettings";
        break;
      case 35:
        long long v4 = @"AutoRelockTime";
        break;
      case 36:
        long long v4 = @"SoundVolume";
        break;
      case 37:
        long long v4 = @"OperatingMode";
        break;
      case 38:
        long long v4 = @"SupportedOperatingModes";
        break;
      case 39:
        long long v4 = @"DefaultConfigurationRegister";
        break;
      case 40:
        long long v4 = @"EnableLocalProgramming";
        break;
      case 41:
        long long v4 = @"EnableOneTouchLocking";
        break;
      case 42:
        long long v4 = @"EnableInsideStatusLED";
        break;
      case 43:
        long long v4 = @"EnablePrivacyModeButton";
        break;
      case 44:
        long long v4 = @"LocalProgrammingFeatures";
        break;
      case 48:
        long long v4 = @"WrongCodeEntryLimit";
        break;
      case 49:
        long long v4 = @"UserCodeTemporaryDisableTime";
        break;
      case 50:
        long long v4 = @"SendPINOverTheAir";
        break;
      case 51:
        long long v4 = @"RequirePINforRemoteOperation";
        break;
      case 53:
        long long v4 = @"ExpiringUserTimeout";
        break;
      default:
        goto LABEL_435;
    }
  }
LABEL_687:

  return v4;
}

__CFString *MTRRequestCommandNameForID(uint64_t a1, const char *a2)
{
  if ((int)a1 <= 256)
  {
    switch((int)a1)
    {
      case 3:
        if (a2)
        {
          if (a2 != 64) {
            goto LABEL_3;
          }
          long long v4 = @"TriggerEffect";
        }
        else
        {
          long long v4 = @"Identify";
        }
        goto LABEL_254;
      case 4:
        if (a2 >= 6) {
          goto LABEL_3;
        }
        id v3 = off_265193488;
        goto LABEL_199;
      case 5:
      case 7:
      case 9:
      case 10:
      case 11:
      case 12:
      case 13:
      case 14:
      case 15:
      case 16:
      case 17:
      case 18:
      case 19:
      case 20:
      case 21:
      case 22:
      case 23:
      case 24:
      case 25:
      case 26:
      case 27:
      case 32:
      case 33:
      case 34:
      case 35:
      case 36:
      case 38:
      case 39:
      case 58:
      case 61:
      case 66:
      case 67:
      case 68:
      case 75:
      case 76:
      case 77:
      case 78:
      case 79:
      case 88:
      case 90:
      case 99:
      case 100:
      case 101:
      case 102:
      case 103:
      case 104:
      case 105:
      case 106:
      case 107:
      case 108:
      case 109:
      case 110:
      case 111:
      case 112:
      case 115:
      case 116:
      case 117:
      case 118:
      case 119:
      case 120:
      case 121:
      case 122:
      case 123:
      case 124:
      case 125:
      case 126:
      case 127:
      case 130:
      case 131:
      case 132:
      case 133:
      case 134:
      case 135:
      case 136:
      case 137:
      case 138:
      case 139:
      case 140:
      case 141:
      case 142:
      case 143:
      case 146:
      case 147:
      case 149:
      case 154:
        goto LABEL_65;
      case 6:
        if ((int)a2 > 63)
        {
          switch(a2)
          {
            case '@':
              long long v4 = @"OffWithEffect";
              goto LABEL_254;
            case 'A':
              long long v4 = @"OnWithRecallGlobalScene";
              goto LABEL_254;
            case 'B':
              long long v4 = @"OnWithTimedOff";
              goto LABEL_254;
          }
        }
        else
        {
          switch(a2)
          {
            case 0:
              long long v4 = @"Off";
              goto LABEL_254;
            case 1:
              long long v4 = @"On";
              goto LABEL_254;
            case 2:
              long long v4 = @"Toggle";
              goto LABEL_254;
          }
        }
        int v2 = NSString;
        goto LABEL_4;
      case 8:
        if (a2 >= 9) {
          goto LABEL_3;
        }
        id v3 = off_2651934B8;
        goto LABEL_199;
      case 28:
      case 29:
      case 30:
      case 40:
      case 43:
      case 44:
      case 45:
      case 46:
      case 47:
      case 59:
      case 64:
      case 65:
      case 69:
      case 74:
      case 83:
      case 87:
      case 91:
      case 94:
      case 144:
      case 145:
        goto LABEL_3;
      case 31:
        if (a2) {
          goto LABEL_3;
        }
        long long v4 = @"ReviewFabricRestrictions";
        goto LABEL_254;
      case 37:
        if (a2 >= 0xC) {
          goto LABEL_3;
        }
        id v3 = off_265193500;
        goto LABEL_199;
      case 41:
        if (a2)
        {
          if (a2 == 4)
          {
            long long v4 = @"NotifyUpdateApplied";
          }
          else
          {
            if (a2 != 2) {
              goto LABEL_3;
            }
            long long v4 = @"ApplyUpdateRequest";
          }
        }
        else
        {
          long long v4 = @"QueryImage";
        }
        goto LABEL_254;
      case 42:
        if (a2) {
          goto LABEL_3;
        }
        long long v4 = @"AnnounceOTAProvider";
        goto LABEL_254;
      case 48:
        if (a2 >= 7 || ((0x55u >> (char)a2) & 1) == 0) {
          goto LABEL_3;
        }
        id v3 = off_265193560;
        goto LABEL_199;
      case 49:
        if (a2 >= 0xA || ((0x35Du >> (char)a2) & 1) == 0) {
          goto LABEL_3;
        }
        id v3 = off_265193598;
        goto LABEL_199;
      case 50:
        if (a2) {
          goto LABEL_3;
        }
        long long v4 = @"RetrieveLogsRequest";
        goto LABEL_254;
      case 51:
        if (a2)
        {
          if (a2 == 3)
          {
            long long v4 = @"PayloadTestRequest";
          }
          else
          {
            if (a2 != 1) {
              goto LABEL_3;
            }
            long long v4 = @"TimeSnapshot";
          }
        }
        else
        {
          long long v4 = @"TestEventTrigger";
        }
        goto LABEL_254;
      case 52:
        if (a2) {
          goto LABEL_3;
        }
        long long v4 = @"ResetWatermarks";
        goto LABEL_254;
      case 53:
      case 54:
      case 55:
        if (a2) {
          goto LABEL_3;
        }
        long long v4 = @"ResetCounts";
        goto LABEL_254;
      case 56:
        if (a2 >= 6 || ((0x37u >> (char)a2) & 1) == 0) {
          goto LABEL_3;
        }
        id v3 = off_2651935E8;
        goto LABEL_199;
      case 57:
        if (a2 != 128) {
          goto LABEL_3;
        }
        long long v4 = @"KeepActive";
        goto LABEL_254;
      case 60:
        if (a2 >= 3) {
          goto LABEL_3;
        }
        id v3 = off_265193618;
        goto LABEL_199;
      case 62:
        if (a2 >= 0xC || ((0xED5u >> (char)a2) & 1) == 0) {
          goto LABEL_3;
        }
        id v3 = off_265193630;
        goto LABEL_199;
      case 63:
        if (a2 >= 5 || ((0x1Bu >> (char)a2) & 1) == 0) {
          goto LABEL_3;
        }
        id v3 = off_265193690;
        goto LABEL_199;
      case 70:
        if (a2)
        {
          if (a2 == 3)
          {
            long long v4 = @"StayActiveRequest";
          }
          else
          {
            if (a2 != 2) {
              goto LABEL_3;
            }
            long long v4 = @"UnregisterClient";
          }
        }
        else
        {
          long long v4 = @"RegisterClient";
        }
        goto LABEL_254;
      case 71:
        if (a2 >= 4) {
          goto LABEL_3;
        }
        id v3 = off_2651936B8;
        goto LABEL_199;
      case 72:
      case 96:
        if (a2 >= 4) {
          goto LABEL_3;
        }
        id v3 = off_2651936D8;
        goto LABEL_199;
      case 73:
      case 80:
      case 81:
      case 82:
      case 84:
      case 85:
      case 89:
        if (!a2) {
          goto LABEL_39;
        }
        goto LABEL_3;
      case 86:
        if (a2) {
          goto LABEL_3;
        }
        long long v4 = @"SetTemperature";
        goto LABEL_254;
      case 92:
        if (a2) {
          goto LABEL_3;
        }
        long long v4 = @"SelfTestRequest";
        goto LABEL_254;
      case 93:
        if (a2)
        {
          if (a2 != 1) {
            goto LABEL_3;
          }
          long long v4 = @"ModifyEnabledAlarms";
        }
        else
        {
          long long v4 = @"Reset";
        }
        goto LABEL_254;
      case 95:
        if (a2)
        {
          if (a2 != 1) {
            goto LABEL_3;
          }
          long long v4 = @"AddMoreTime";
        }
        else
        {
          long long v4 = @"SetCookingParameters";
        }
        goto LABEL_254;
      case 97:
        if (a2)
        {
          if (a2 == 128)
          {
            long long v4 = @"GoHome";
          }
          else
          {
            if (a2 != 3) {
              goto LABEL_3;
            }
            long long v4 = @"Resume";
          }
        }
        else
        {
          long long v4 = @"Pause";
        }
        goto LABEL_254;
      case 98:
        long long v4 = @"AddScene";
        switch((int)a2)
        {
          case 0:
            goto LABEL_254;
          case 1:
            long long v4 = @"ViewScene";
            break;
          case 2:
            long long v4 = @"RemoveScene";
            break;
          case 3:
            long long v4 = @"RemoveAllScenes";
            break;
          case 4:
            long long v4 = @"StoreScene";
            break;
          case 5:
            long long v4 = @"RecallScene";
            break;
          case 6:
            long long v4 = @"GetSceneMembership";
            break;
          default:
            if (a2 != 64) {
              goto LABEL_3;
            }
            long long v4 = @"CopyScene";
            break;
        }
        goto LABEL_254;
      case 113:
      case 114:
        if (a2) {
          goto LABEL_3;
        }
        long long v4 = @"ResetCondition";
        goto LABEL_254;
      case 128:
        if (a2)
        {
          if (a2 != 1) {
            goto LABEL_3;
          }
          long long v4 = @"EnableDisableAlarm";
        }
        else
        {
          long long v4 = @"SuppressAlarm";
        }
        goto LABEL_254;
      case 129:
        if (a2)
        {
          if (a2 != 1) {
            goto LABEL_3;
          }
          long long v4 = @"Close";
        }
        else
        {
          long long v4 = @"Open";
        }
        goto LABEL_254;
      case 148:
        if (a2)
        {
          if (a2 != 1) {
            goto LABEL_3;
          }
          long long v4 = @"CancelBoost";
        }
        else
        {
          long long v4 = @"Boost";
        }
        goto LABEL_254;
      case 150:
        if (a2 >= 5) {
          goto LABEL_3;
        }
        id v3 = off_2651936F8;
        goto LABEL_199;
      case 151:
        if (!a2)
        {
          long long v4 = @"PresentMessagesRequest";
          goto LABEL_254;
        }
        if (a2 == 1)
        {
          long long v4 = @"CancelMessagesRequest";
          goto LABEL_254;
        }
LABEL_3:
        int v2 = NSString;
LABEL_4:
        objc_msgSend_stringWithFormat_(v2, a2, @"<Unknown commandID %u>", a2);
        goto LABEL_253;
      case 152:
        if (a2 >= 8) {
          goto LABEL_3;
        }
        id v3 = off_265193720;
        goto LABEL_199;
      case 153:
        int v6 = a2 - 1;
        if ((a2 - 1) >= 7) {
          goto LABEL_3;
        }
        uint64_t v7 = off_265193760;
        goto LABEL_165;
      case 155:
      case 156:
        goto LABEL_252;
      case 157:
      case 158:
      case 159:
        if (a2) {
          goto LABEL_252;
        }
LABEL_39:
        long long v4 = @"ChangeToMode";
        goto LABEL_254;
      default:
        if (a1 == -918523)
        {
          long long v4 = @"Test";
          switch((int)a2)
          {
            case 0:
              goto LABEL_254;
            case 1:
              long long v4 = @"TestNotHandled";
              break;
            case 2:
              long long v4 = @"TestSpecific";
              break;
            case 3:
              long long v4 = @"TestUnknownCommand";
              break;
            case 4:
              long long v4 = @"TestAddArguments";
              break;
            case 5:
              long long v4 = @"TestSimpleArgumentRequest";
              break;
            case 6:
              long long v4 = @"TestStructArrayArgumentRequest";
              break;
            case 7:
              long long v4 = @"TestStructArgumentRequest";
              break;
            case 8:
              long long v4 = @"TestNestedStructArgumentRequest";
              break;
            case 9:
              long long v4 = @"TestListStructArgumentRequest";
              break;
            case 10:
              long long v4 = @"TestListInt8UArgumentRequest";
              break;
            case 11:
              long long v4 = @"TestNestedStructListArgumentRequest";
              break;
            case 12:
              long long v4 = @"TestListNestedStructListArgumentRequest";
              break;
            case 13:
              long long v4 = @"TestListInt8UReverseRequest";
              break;
            case 14:
              long long v4 = @"TestEnumsRequest";
              break;
            case 15:
              long long v4 = @"TestNullableOptionalRequest";
              break;
            case 16:
              long long v4 = @"TestComplexNullableOptionalRequest";
              break;
            case 17:
              long long v4 = @"SimpleStructEchoRequest";
              break;
            case 18:
              long long v4 = @"TimedInvokeRequest";
              break;
            case 19:
              long long v4 = @"TestSimpleOptionalArgumentRequest";
              break;
            case 20:
              long long v4 = @"TestEmitTestEventRequest";
              break;
            case 21:
              long long v4 = @"TestEmitTestFabricScopedEventRequest";
              break;
            case 22:
              long long v4 = @"TestBatchHelperRequest";
              break;
            case 23:
              long long v4 = @"TestSecondBatchHelperRequest";
              break;
            case 24:
              long long v4 = @"StringEchoRequest";
              break;
            case 25:
              long long v4 = @"GlobalEchoRequest";
              break;
            default:
              if (a2 != -917334) {
                goto LABEL_252;
              }
              long long v4 = @"TestDifferentVendorMeiRequest";
              break;
          }
        }
        else
        {
          if (a1 != -918496) {
            goto LABEL_65;
          }
          if (a2)
          {
            if (a2 != 2) {
              goto LABEL_252;
            }
            long long v4 = @"AddArguments";
          }
          else
          {
            long long v4 = @"Ping";
          }
        }
        break;
    }
    goto LABEL_254;
  }
  if ((int)a1 > 1104)
  {
    if ((int)a1 > 1359)
    {
      switch((int)a1)
      {
        case 1360:
          if (a2 >= 6 || ((0x2Du >> (char)a2) & 1) == 0) {
            goto LABEL_252;
          }
          id v3 = off_265193968;
          goto LABEL_199;
        case 1361:
          if (a2 >= 0x11 || ((0x1EEEDu >> (char)a2) & 1) == 0) {
            goto LABEL_252;
          }
          id v3 = off_265193998;
          goto LABEL_199;
        case 1362:
        case 1365:
          goto LABEL_65;
        case 1363:
          int v5 = a2 - 1;
          if ((a2 - 1) >= 7 || ((0x75u >> v5) & 1) == 0) {
            goto LABEL_252;
          }
          long long v4 = off_265193A20[v5];
          break;
        case 1364:
          int v6 = a2 - 1;
          if ((a2 - 1) >= 4) {
            goto LABEL_252;
          }
          uint64_t v7 = off_265193A58;
LABEL_165:
          long long v4 = v7[v6];
          break;
        case 1366:
          if (a2) {
            goto LABEL_252;
          }
          long long v4 = @"PlayChimeSound";
          break;
        default:
          if (a1 == 1872) {
            goto LABEL_252;
          }
          if (a1 != 1873) {
            goto LABEL_65;
          }
          if (a2)
          {
            if (a2 != 1) {
              goto LABEL_252;
            }
            long long v4 = @"CommissionNode";
          }
          else
          {
            long long v4 = @"RequestCommissioningApproval";
          }
          break;
      }
    }
    else
    {
      if ((int)a1 <= 1282)
      {
        switch(a1)
        {
          case 0x451:
            if (!a2)
            {
              long long v4 = @"NetworkPassphraseRequest";
              goto LABEL_254;
            }
            break;
          case 0x452:
            if a2 < 5 && ((0x1Bu >> (char)a2))
            {
              id v3 = off_2651937E0;
              goto LABEL_199;
            }
            break;
          case 0x453:
            if (a2 < 3)
            {
              id v3 = off_265193808;
LABEL_199:
              long long v4 = v3[(int)a2];
              goto LABEL_254;
            }
            break;
          default:
            goto LABEL_65;
        }
LABEL_252:
        objc_msgSend_stringWithFormat_(NSString, a2, @"<Unknown commandID %u>", a2);
        goto LABEL_253;
      }
      switch((int)a1)
      {
        case 1283:
        case 1293:
          goto LABEL_252;
        case 1284:
          if (a2 >= 8 || ((0xDDu >> (char)a2) & 1) == 0) {
            goto LABEL_252;
          }
          id v3 = off_265193820;
          goto LABEL_199;
        case 1285:
          if (a2) {
            goto LABEL_252;
          }
          long long v4 = @"NavigateTarget";
          break;
        case 1286:
          if (a2 >= 0xF || ((0x7BFFu >> (char)a2) & 1) == 0) {
            goto LABEL_252;
          }
          id v3 = off_265193860;
          goto LABEL_199;
        case 1287:
          if (a2 >= 4) {
            goto LABEL_252;
          }
          id v3 = off_2651938D8;
          goto LABEL_199;
        case 1288:
          if (a2) {
            goto LABEL_252;
          }
          long long v4 = @"Sleep";
          break;
        case 1289:
          if (a2) {
            goto LABEL_252;
          }
          long long v4 = @"SendKey";
          break;
        case 1290:
          if (a2)
          {
            if (a2 != 1) {
              goto LABEL_252;
            }
            long long v4 = @"LaunchURL";
          }
          else
          {
            long long v4 = @"LaunchContent";
          }
          break;
        case 1291:
          if (a2)
          {
            if (a2 != 1) {
              goto LABEL_252;
            }
            long long v4 = @"RenameOutput";
          }
          else
          {
            long long v4 = @"SelectOutput";
          }
          break;
        case 1292:
          if (a2 >= 3) {
            goto LABEL_252;
          }
          id v3 = off_2651938F8;
          goto LABEL_199;
        case 1294:
          if (a2)
          {
            if (a2 == 3)
            {
              long long v4 = @"Logout";
            }
            else
            {
              if (a2 != 2) {
                goto LABEL_252;
              }
              long long v4 = @"Login";
            }
          }
          else
          {
            long long v4 = @"GetSetupPIN";
          }
          break;
        case 1295:
          if (a2 >= 0xB || ((0x7FBu >> (char)a2) & 1) == 0) {
            goto LABEL_252;
          }
          id v3 = off_265193910;
          goto LABEL_199;
        case 1296:
          if (a2) {
            goto LABEL_252;
          }
          long long v4 = @"ContentAppMessage";
          break;
        default:
          goto LABEL_65;
      }
    }
  }
  else
  {
    if ((int)a1 > 768)
    {
      switch((int)a1)
      {
        case 1024:
        case 1026:
        case 1027:
        case 1028:
        case 1029:
        case 1030:
        case 1036:
        case 1037:
        case 1043:
        case 1045:
          goto LABEL_252;
        case 1025:
        case 1031:
        case 1032:
        case 1033:
        case 1034:
        case 1035:
        case 1038:
        case 1039:
        case 1040:
        case 1041:
        case 1042:
        case 1044:
          goto LABEL_65;
        default:
          switch((int)a1)
          {
            case 1066:
            case 1067:
            case 1068:
            case 1069:
            case 1070:
            case 1071:
              goto LABEL_252;
            default:
              if (a1 != 769) {
                goto LABEL_65;
              }
              goto LABEL_252;
          }
      }
    }
    if ((int)a1 > 511)
    {
      switch((int)a1)
      {
        case 512:
        case 516:
          goto LABEL_252;
        case 513:
          long long v4 = @"SetpointRaiseLower";
          switch((int)a2)
          {
            case 0:
              goto LABEL_254;
            case 1:
              long long v4 = @"SetWeeklySchedule";
              break;
            case 2:
              long long v4 = @"GetWeeklySchedule";
              break;
            case 3:
              long long v4 = @"ClearWeeklySchedule";
              break;
            case 4:
              goto LABEL_252;
            case 5:
              long long v4 = @"SetActiveScheduleRequest";
              break;
            case 6:
              long long v4 = @"SetActivePresetRequest";
              break;
            default:
              if (a2 != 254) {
                goto LABEL_252;
              }
              long long v4 = @"AtomicRequest";
              break;
          }
          break;
        case 514:
          if (a2) {
            goto LABEL_252;
          }
          long long v4 = @"Step";
          break;
        case 515:
          goto LABEL_65;
        default:
          if (a1 != 768) {
            goto LABEL_65;
          }
          long long v4 = @"MoveToHue";
          switch((int)a2)
          {
            case 0:
              goto LABEL_254;
            case 1:
              long long v4 = @"MoveHue";
              break;
            case 2:
              long long v4 = @"StepHue";
              break;
            case 3:
              long long v4 = @"MoveToSaturation";
              break;
            case 4:
              long long v4 = @"MoveSaturation";
              break;
            case 5:
              long long v4 = @"StepSaturation";
              break;
            case 6:
              long long v4 = @"MoveToHueAndSaturation";
              break;
            case 7:
              long long v4 = @"MoveToColor";
              break;
            case 8:
              long long v4 = @"MoveColor";
              break;
            case 9:
              long long v4 = @"StepColor";
              break;
            case 10:
              long long v4 = @"MoveToColorTemperature";
              break;
            default:
              switch((int)a2)
              {
                case '@':
                  long long v4 = @"EnhancedMoveToHue";
                  break;
                case 'A':
                  long long v4 = @"EnhancedMoveHue";
                  break;
                case 'B':
                  long long v4 = @"EnhancedStepHue";
                  break;
                case 'C':
                  long long v4 = @"EnhancedMoveToHueAndSaturation";
                  break;
                case 'D':
                  long long v4 = @"ColorLoopSet";
                  break;
                case 'G':
                  long long v4 = @"StopMoveStep";
                  break;
                case 'K':
                  long long v4 = @"MoveColorTemperature";
                  break;
                case 'L':
                  long long v4 = @"StepColorTemperature";
                  break;
                default:
                  goto LABEL_252;
              }
              break;
          }
          break;
      }
      goto LABEL_254;
    }
    if (a1 != 257)
    {
      if (a1 != 258)
      {
        if (a1 == 336)
        {
          if (!a2)
          {
            long long v4 = @"SelectAreas";
            goto LABEL_254;
          }
          if (a2 == 2)
          {
            long long v4 = @"SkipArea";
            goto LABEL_254;
          }
          goto LABEL_252;
        }
LABEL_65:
        objc_msgSend_stringWithFormat_(NSString, a2, @"<Unknown clusterID %u>", a1);
LABEL_253:
        long long v4 = (__CFString *)objc_claimAutoreleasedReturnValue();
        goto LABEL_254;
      }
      if a2 < 9 && ((0x1B7u >> (char)a2))
      {
        id v3 = off_265193798;
        goto LABEL_199;
      }
      goto LABEL_252;
    }
    long long v4 = @"LockDoor";
    switch((int)a2)
    {
      case 0:
        break;
      case 1:
        long long v4 = @"UnlockDoor";
        break;
      case 2:
      case 4:
      case 5:
      case 6:
      case 7:
      case 8:
      case 9:
      case 10:
      case 20:
      case 21:
      case 22:
      case 23:
      case 24:
      case 25:
      case 28:
      case 30:
      case 31:
      case 32:
      case 33:
      case 35:
      case 37:
        goto LABEL_252;
      case 3:
        long long v4 = @"UnlockWithTimeout";
        break;
      case 11:
        long long v4 = @"SetWeekDaySchedule";
        break;
      case 12:
        long long v4 = @"GetWeekDaySchedule";
        break;
      case 13:
        long long v4 = @"ClearWeekDaySchedule";
        break;
      case 14:
        long long v4 = @"SetYearDaySchedule";
        break;
      case 15:
        long long v4 = @"GetYearDaySchedule";
        break;
      case 16:
        long long v4 = @"ClearYearDaySchedule";
        break;
      case 17:
        long long v4 = @"SetHolidaySchedule";
        break;
      case 18:
        long long v4 = @"GetHolidaySchedule";
        break;
      case 19:
        long long v4 = @"ClearHolidaySchedule";
        break;
      case 26:
        long long v4 = @"SetUser";
        break;
      case 27:
        long long v4 = @"GetUser";
        break;
      case 29:
        long long v4 = @"ClearUser";
        break;
      case 34:
        long long v4 = @"SetCredential";
        break;
      case 36:
        long long v4 = @"GetCredentialStatus";
        break;
      case 38:
        long long v4 = @"ClearCredential";
        break;
      case 39:
        long long v4 = @"UnboltDoor";
        break;
      case 40:
        long long v4 = @"SetAliroReaderConfig";
        break;
      case 41:
        long long v4 = @"ClearAliroReaderConfig";
        break;
      default:
        switch((int)a2)
        {
          case 323551232:
            long long v4 = @"AppleSetAliroCredential";
            break;
          case 323551233:
            long long v4 = @"AppleGetAliroCredentialStatus";
            break;
          case 323551234:
            long long v4 = @"AppleClearAliroCredential";
            break;
          case 323551235:
            long long v4 = @"AppleSetAliroReaderConfig";
            break;
          case 323551236:
            long long v4 = @"AppleClearAliroReaderConfig";
            break;
          default:
            goto LABEL_252;
        }
        break;
    }
  }
LABEL_254:

  return v4;
}

__CFString *MTRResponseCommandNameForID(uint64_t a1, const char *a2)
{
  if ((int)a1 <= 256)
  {
    switch((int)a1)
    {
      case 3:
      case 6:
      case 8:
      case 28:
      case 29:
      case 30:
      case 37:
      case 40:
      case 42:
      case 43:
      case 44:
      case 45:
      case 46:
      case 47:
      case 52:
      case 53:
      case 54:
      case 55:
      case 57:
      case 59:
      case 60:
      case 64:
      case 65:
      case 69:
      case 71:
      case 74:
      case 80:
      case 83:
      case 86:
      case 87:
      case 91:
      case 92:
      case 93:
      case 94:
      case 95:
      case 113:
      case 114:
      case 128:
      case 129:
      case 144:
      case 145:
      case 148:
      case 150:
      case 151:
      case 152:
      case 155:
      case 156:
        goto LABEL_3;
      case 4:
        if (a2 >= 4) {
          goto LABEL_3;
        }
        int v2 = off_265193A78[(int)a2];
        goto LABEL_5;
      case 5:
      case 7:
      case 9:
      case 10:
      case 11:
      case 12:
      case 13:
      case 14:
      case 15:
      case 16:
      case 17:
      case 18:
      case 19:
      case 20:
      case 21:
      case 22:
      case 23:
      case 24:
      case 25:
      case 26:
      case 27:
      case 32:
      case 33:
      case 34:
      case 35:
      case 36:
      case 38:
      case 39:
      case 58:
      case 61:
      case 66:
      case 67:
      case 68:
      case 75:
      case 76:
      case 77:
      case 78:
      case 79:
      case 88:
      case 90:
      case 99:
      case 100:
      case 101:
      case 102:
      case 103:
      case 104:
      case 105:
      case 106:
      case 107:
      case 108:
      case 109:
      case 110:
      case 111:
      case 112:
      case 115:
      case 116:
      case 117:
      case 118:
      case 119:
      case 120:
      case 121:
      case 122:
      case 123:
      case 124:
      case 125:
      case 126:
      case 127:
      case 130:
      case 131:
      case 132:
      case 133:
      case 134:
      case 135:
      case 136:
      case 137:
      case 138:
      case 139:
      case 140:
      case 141:
      case 142:
      case 143:
      case 146:
      case 147:
      case 149:
      case 154:
        goto LABEL_58;
      case 31:
        if (a2 != 1) {
          goto LABEL_3;
        }
        int v2 = @"ReviewFabricRestrictionsResponse";
        goto LABEL_5;
      case 41:
        if (a2 == 1)
        {
          int v2 = @"QueryImageResponse";
        }
        else
        {
          if (a2 != 3) {
            goto LABEL_3;
          }
          int v2 = @"ApplyUpdateResponse";
        }
        goto LABEL_5;
      case 48:
        int v4 = a2 - 1;
        if ((a2 - 1) >= 7 || ((0x55u >> v4) & 1) == 0) {
          goto LABEL_3;
        }
        int v5 = off_265193A98;
        goto LABEL_138;
      case 49:
        int v4 = a2 - 1;
        if ((a2 - 1) >= 0xA || ((0x251u >> v4) & 1) == 0) {
          goto LABEL_3;
        }
        int v5 = off_265193AD0;
        goto LABEL_138;
      case 50:
        if (a2 != 1) {
          goto LABEL_3;
        }
        int v2 = @"RetrieveLogsResponse";
        goto LABEL_5;
      case 51:
        if (a2 == 2)
        {
          int v2 = @"TimeSnapshotResponse";
        }
        else
        {
          if (a2 != 4) {
            goto LABEL_3;
          }
          int v2 = @"PayloadTestResponse";
        }
        goto LABEL_5;
      case 56:
        if (a2 != 3) {
          goto LABEL_3;
        }
        int v2 = @"SetTimeZoneResponse";
        goto LABEL_5;
      case 62:
        int v4 = a2 - 1;
        if ((a2 - 1) >= 8 || ((0x95u >> v4) & 1) == 0) {
          goto LABEL_3;
        }
        int v5 = off_265193B20;
LABEL_138:
        int v2 = v5[v4];
        goto LABEL_5;
      case 63:
        if (a2 == 2)
        {
          int v2 = @"KeySetReadResponse";
        }
        else
        {
          if (a2 != 5) {
            goto LABEL_3;
          }
          int v2 = @"KeySetReadAllIndicesResponse";
        }
        goto LABEL_5;
      case 70:
        if (a2 == 1)
        {
          int v2 = @"RegisterClientResponse";
        }
        else
        {
          if (a2 != 4) {
            goto LABEL_3;
          }
          int v2 = @"StayActiveResponse";
        }
        goto LABEL_5;
      case 72:
      case 96:
      case 97:
        if (a2 != 4) {
          goto LABEL_3;
        }
        int v2 = @"OperationalCommandResponse";
        goto LABEL_5;
      case 73:
      case 81:
      case 82:
      case 84:
      case 85:
      case 89:
      case 157:
      case 158:
      case 159:
        if (a2 != 1) {
          goto LABEL_3;
        }
        int v2 = @"ChangeToModeResponse";
        goto LABEL_5;
      case 98:
        int v2 = @"AddSceneResponse";
        switch((int)a2)
        {
          case 0:
            goto LABEL_5;
          case 1:
            int v2 = @"ViewSceneResponse";
            break;
          case 2:
            int v2 = @"RemoveSceneResponse";
            break;
          case 3:
            int v2 = @"RemoveAllScenesResponse";
            break;
          case 4:
            int v2 = @"StoreSceneResponse";
            break;
          case 5:
            goto LABEL_3;
          case 6:
            int v2 = @"GetSceneMembershipResponse";
            break;
          default:
            if (a2 != 64) {
              goto LABEL_3;
            }
            int v2 = @"CopySceneResponse";
            break;
        }
        goto LABEL_5;
      case 153:
        if (a2) {
          goto LABEL_3;
        }
        int v2 = @"GetTargetsResponse";
        goto LABEL_5;
      default:
        if (a1 == -918523)
        {
          int v2 = @"TestSpecificResponse";
          switch((int)a2)
          {
            case 0:
              goto LABEL_5;
            case 1:
              int v2 = @"TestAddArgumentsResponse";
              break;
            case 2:
              int v2 = @"TestSimpleArgumentResponse";
              break;
            case 3:
              int v2 = @"TestStructArrayArgumentResponse";
              break;
            case 4:
              int v2 = @"TestListInt8UReverseResponse";
              break;
            case 5:
              int v2 = @"TestEnumsResponse";
              break;
            case 6:
              int v2 = @"TestNullableOptionalResponse";
              break;
            case 7:
              int v2 = @"TestComplexNullableOptionalResponse";
              break;
            case 8:
              int v2 = @"BooleanResponse";
              break;
            case 9:
              int v2 = @"SimpleStructResponse";
              break;
            case 10:
              int v2 = @"TestEmitTestEventResponse";
              break;
            case 11:
              int v2 = @"TestEmitTestFabricScopedEventResponse";
              break;
            case 12:
              int v2 = @"TestBatchHelperResponse";
              break;
            case 13:
              int v2 = @"StringEchoResponse";
              break;
            case 14:
              int v2 = @"GlobalEchoResponse";
              break;
            default:
              if (a2 != -917317) {
                goto LABEL_3;
              }
              int v2 = @"TestDifferentVendorMeiResponse";
              break;
          }
          goto LABEL_5;
        }
        if (a1 != -918496) {
          goto LABEL_58;
        }
        if (a2 == 1)
        {
          int v2 = @"AddArgumentsResponse";
          goto LABEL_5;
        }
        break;
    }
    goto LABEL_3;
  }
  if ((int)a1 <= 1104)
  {
    if ((int)a1 > 768)
    {
      switch((int)a1)
      {
        case 1024:
        case 1026:
        case 1027:
        case 1028:
        case 1029:
        case 1030:
        case 1036:
        case 1037:
        case 1043:
        case 1045:
          goto LABEL_3;
        case 1025:
        case 1031:
        case 1032:
        case 1033:
        case 1034:
        case 1035:
        case 1038:
        case 1039:
        case 1040:
        case 1041:
        case 1042:
        case 1044:
          goto LABEL_58;
        default:
          switch((int)a1)
          {
            case 1066:
            case 1067:
            case 1068:
            case 1069:
            case 1070:
            case 1071:
              goto LABEL_3;
            default:
              if (a1 != 769) {
                goto LABEL_58;
              }
              goto LABEL_3;
          }
      }
    }
    if ((int)a1 > 511)
    {
      switch((int)a1)
      {
        case 512:
        case 514:
        case 516:
          goto LABEL_3;
        case 513:
          if (a2)
          {
            if (a2 != 253) {
              goto LABEL_3;
            }
            int v2 = @"AtomicResponse";
          }
          else
          {
            int v2 = @"GetWeeklyScheduleResponse";
          }
          break;
        case 515:
          goto LABEL_58;
        default:
          if (a1 != 768) {
            goto LABEL_58;
          }
          goto LABEL_3;
      }
      goto LABEL_5;
    }
    switch(a1)
    {
      case 0x101:
        if ((int)a2 > 27)
        {
          switch(a2)
          {
            case 0x1C:
              int v2 = @"GetUserResponse";
              goto LABEL_5;
            case 0x23:
              int v2 = @"SetCredentialResponse";
              goto LABEL_5;
            case 0x25:
              int v2 = @"GetCredentialStatusResponse";
              goto LABEL_5;
          }
        }
        else
        {
          switch(a2)
          {
            case 0xC:
              int v2 = @"GetWeekDayScheduleResponse";
              goto LABEL_5;
            case 0xF:
              int v2 = @"GetYearDayScheduleResponse";
              goto LABEL_5;
            case 0x12:
              int v2 = @"GetHolidayScheduleResponse";
              goto LABEL_5;
          }
        }
LABEL_3:
        objc_msgSend_stringWithFormat_(NSString, a2, @"<Unknown commandID %u>", a2);
LABEL_4:
        int v2 = (__CFString *)objc_claimAutoreleasedReturnValue();
        goto LABEL_5;
      case 0x102:
        goto LABEL_3;
      case 0x150:
        if (a2 == 1)
        {
          int v2 = @"SelectAreasResponse";
          goto LABEL_5;
        }
        if (a2 == 3)
        {
          int v2 = @"SkipAreaResponse";
          goto LABEL_5;
        }
        goto LABEL_3;
    }
LABEL_58:
    objc_msgSend_stringWithFormat_(NSString, a2, @"<Unknown clusterID %u>", a1);
    goto LABEL_4;
  }
  if ((int)a1 > 1359)
  {
    switch((int)a1)
    {
      case 1360:
        if (a2 == 1)
        {
          int v2 = @"CreateTwoDCartesianZoneResponse";
        }
        else
        {
          if (a2 != 4) {
            goto LABEL_3;
          }
          int v2 = @"GetTwoDCartesianZoneResponse";
        }
        break;
      case 1361:
        if ((int)a2 > 7)
        {
          if (a2 == 8)
          {
            int v2 = @"SnapshotStreamAllocateResponse";
          }
          else
          {
            if (a2 != 12) {
              goto LABEL_3;
            }
            int v2 = @"CaptureSnapshotResponse";
          }
        }
        else if (a2 == 1)
        {
          int v2 = @"AudioStreamAllocateResponse";
        }
        else
        {
          if (a2 != 4) {
            goto LABEL_3;
          }
          int v2 = @"VideoStreamAllocateResponse";
        }
        break;
      case 1362:
      case 1365:
        goto LABEL_58;
      case 1363:
        if (a2 == 2)
        {
          int v2 = @"SolicitOfferResponse";
        }
        else
        {
          if (a2 != 4) {
            goto LABEL_3;
          }
          int v2 = @"ProvideOfferResponse";
        }
        break;
      case 1364:
      case 1366:
        goto LABEL_3;
      default:
        if (a1 == 1872) {
          goto LABEL_3;
        }
        if (a1 != 1873) {
          goto LABEL_58;
        }
        if (a2 != 2) {
          goto LABEL_3;
        }
        int v2 = @"ReverseOpenCommissioningWindow";
        break;
    }
  }
  else
  {
    if ((int)a1 <= 1282)
    {
      switch(a1)
      {
        case 0x451:
          if (a2 == 1)
          {
            int v2 = @"NetworkPassphraseResponse";
            goto LABEL_5;
          }
          goto LABEL_3;
        case 0x452:
          if (a2 == 2)
          {
            int v2 = @"DatasetResponse";
            goto LABEL_5;
          }
          goto LABEL_3;
        case 0x453:
          if (a2 == 3)
          {
            int v2 = @"OperationalDatasetResponse";
            goto LABEL_5;
          }
          goto LABEL_3;
      }
      goto LABEL_58;
    }
    switch((int)a1)
    {
      case 1283:
      case 1287:
      case 1288:
      case 1291:
      case 1293:
        goto LABEL_3;
      case 1284:
        if (a2 == 1)
        {
          int v2 = @"ChangeChannelResponse";
        }
        else
        {
          if (a2 != 5) {
            goto LABEL_3;
          }
          int v2 = @"ProgramGuideResponse";
        }
        break;
      case 1285:
        if (a2 != 1) {
          goto LABEL_3;
        }
        int v2 = @"NavigateTargetResponse";
        break;
      case 1286:
        if (a2 != 10) {
          goto LABEL_3;
        }
        int v2 = @"PlaybackResponse";
        break;
      case 1289:
        if (a2 != 1) {
          goto LABEL_3;
        }
        int v2 = @"SendKeyResponse";
        break;
      case 1290:
        if (a2 != 2) {
          goto LABEL_3;
        }
        goto LABEL_108;
      case 1292:
        if (a2 != 3) {
          goto LABEL_3;
        }
LABEL_108:
        int v2 = @"LauncherResponse";
        break;
      case 1294:
        if (a2 != 1) {
          goto LABEL_3;
        }
        int v2 = @"GetSetupPINResponse";
        break;
      case 1295:
        if (a2 != 2) {
          goto LABEL_3;
        }
        int v2 = @"ResetPINResponse";
        break;
      case 1296:
        if (a2 != 1) {
          goto LABEL_3;
        }
        int v2 = @"ContentAppMessageResponse";
        break;
      default:
        goto LABEL_58;
    }
  }
LABEL_5:

  return v2;
}

__CFString *MTREventNameForID(uint64_t a1, const char *a2)
{
  if ((int)a1 <= 256)
  {
    switch((int)a1)
    {
      case 3:
      case 4:
      case 6:
      case 8:
      case 28:
      case 29:
      case 30:
      case 41:
      case 43:
      case 44:
      case 45:
      case 46:
      case 48:
      case 49:
      case 50:
      case 55:
      case 60:
      case 62:
      case 63:
      case 64:
      case 65:
      case 70:
      case 71:
      case 73:
      case 74:
      case 80:
      case 81:
      case 82:
      case 83:
      case 84:
      case 85:
      case 86:
      case 89:
      case 91:
      case 94:
      case 95:
      case 98:
      case 113:
      case 114:
      case 155:
      case 156:
      case 157:
      case 158:
      case 159:
        goto LABEL_3;
      case 5:
      case 7:
      case 9:
      case 10:
      case 11:
      case 12:
      case 13:
      case 14:
      case 15:
      case 16:
      case 17:
      case 18:
      case 19:
      case 20:
      case 21:
      case 22:
      case 23:
      case 24:
      case 25:
      case 26:
      case 27:
      case 32:
      case 33:
      case 34:
      case 35:
      case 36:
      case 38:
      case 39:
      case 58:
      case 61:
      case 66:
      case 67:
      case 68:
      case 75:
      case 76:
      case 77:
      case 78:
      case 79:
      case 88:
      case 90:
      case 99:
      case 100:
      case 101:
      case 102:
      case 103:
      case 104:
      case 105:
      case 106:
      case 107:
      case 108:
      case 109:
      case 110:
      case 111:
      case 112:
      case 115:
      case 116:
      case 117:
      case 118:
      case 119:
      case 120:
      case 121:
      case 122:
      case 123:
      case 124:
      case 125:
      case 126:
      case 127:
      case 130:
      case 131:
      case 132:
      case 133:
      case 134:
      case 135:
      case 136:
      case 137:
      case 138:
      case 139:
      case 140:
      case 141:
      case 142:
      case 143:
      case 146:
      case 147:
      case 149:
      case 154:
        goto LABEL_59;
      case 31:
        if (a2 >= 3) {
          goto LABEL_3;
        }
        int v4 = off_265193B60;
        goto LABEL_120;
      case 37:
        if (!a2) {
          goto LABEL_113;
        }
        if (a2 != 1) {
          goto LABEL_3;
        }
        int v2 = @"ActionFailed";
        goto LABEL_5;
      case 40:
        if (a2 >= 4) {
          goto LABEL_3;
        }
        int v4 = off_265193B78;
        goto LABEL_120;
      case 42:
        if (a2 >= 3) {
          goto LABEL_3;
        }
        int v4 = off_265193B98;
        goto LABEL_120;
      case 47:
        if (a2 >= 3) {
          goto LABEL_3;
        }
        int v4 = off_265193BB0;
        goto LABEL_120;
      case 51:
        if (a2 >= 4) {
          goto LABEL_3;
        }
        int v4 = off_265193BC8;
        goto LABEL_120;
      case 52:
        if (a2) {
          goto LABEL_3;
        }
        int v2 = @"SoftwareFault";
        goto LABEL_5;
      case 53:
        if (a2)
        {
          if (a2 != 1) {
            goto LABEL_3;
          }
          int v2 = @"NetworkFaultChange";
        }
        else
        {
          int v2 = @"ConnectionStatus";
        }
        goto LABEL_5;
      case 54:
        if (a2 >= 3) {
          goto LABEL_3;
        }
        int v4 = off_265193BE8;
        goto LABEL_120;
      case 56:
        if (a2 >= 5) {
          goto LABEL_3;
        }
        int v4 = off_265193C00;
        goto LABEL_120;
      case 57:
        int v2 = @"StartUp";
        switch((int)a2)
        {
          case 0:
            goto LABEL_5;
          case 1:
            int v2 = @"ShutDown";
            break;
          case 2:
            int v2 = @"Leave";
            break;
          case 3:
            int v2 = @"ReachableChanged";
            break;
          default:
            if (a2 != 128) {
              goto LABEL_3;
            }
            int v2 = @"ActiveChanged";
            break;
        }
        goto LABEL_5;
      case 59:
        if (a2 >= 7) {
          goto LABEL_3;
        }
        int v4 = off_265193C28;
        goto LABEL_120;
      case 69:
        if (a2) {
          goto LABEL_3;
        }
        int v2 = @"StateChange";
        goto LABEL_5;
      case 72:
      case 96:
      case 97:
        if (a2)
        {
          if (a2 != 1) {
            goto LABEL_3;
          }
          int v2 = @"OperationCompletion";
        }
        else
        {
          int v2 = @"OperationalError";
        }
        goto LABEL_5;
      case 87:
      case 93:
        if (a2) {
          goto LABEL_3;
        }
        int v2 = @"Notify";
        goto LABEL_5;
      case 92:
        if (a2 >= 0xB) {
          goto LABEL_3;
        }
        int v4 = off_265193C60;
        goto LABEL_120;
      case 128:
        if (a2)
        {
          if (a2 != 1) {
            goto LABEL_3;
          }
          int v2 = @"SensorFault";
        }
        else
        {
          int v2 = @"AlarmsStateChanged";
        }
        goto LABEL_5;
      case 129:
        if (a2)
        {
          if (a2 != 1) {
            goto LABEL_3;
          }
          int v2 = @"ValveFault";
        }
        else
        {
          int v2 = @"ValveStateChanged";
        }
        goto LABEL_5;
      case 144:
        if (a2) {
          goto LABEL_3;
        }
        int v2 = @"MeasurementPeriodRanges";
        goto LABEL_5;
      case 145:
        if (a2)
        {
          if (a2 != 1) {
            goto LABEL_3;
          }
          int v2 = @"PeriodicEnergyMeasured";
        }
        else
        {
          int v2 = @"CumulativeEnergyMeasured";
        }
        goto LABEL_5;
      case 148:
        if (a2)
        {
          if (a2 != 1) {
            goto LABEL_3;
          }
          int v2 = @"BoostEnded";
        }
        else
        {
          int v2 = @"BoostStarted";
        }
        goto LABEL_5;
      case 150:
        if (a2) {
          goto LABEL_3;
        }
        int v2 = @"LoadControlEventStatusChange";
        goto LABEL_5;
      case 151:
        if (a2 >= 3) {
          goto LABEL_3;
        }
        int v4 = off_265193CB8;
        goto LABEL_120;
      case 152:
        if (a2 >= 4) {
          goto LABEL_3;
        }
        int v4 = off_265193CD0;
        goto LABEL_120;
      case 153:
        if (a2 >= 6) {
          goto LABEL_3;
        }
        int v4 = off_265193CF0;
        goto LABEL_120;
      default:
        if (a1 != -918523)
        {
          if (a1 != -918496) {
            goto LABEL_59;
          }
          if (!a2)
          {
            int v2 = @"PingCountEvent";
            goto LABEL_5;
          }
          goto LABEL_3;
        }
        switch(a2)
        {
          case 0xFFF200EE:
            int v2 = @"TestDifferentVendorMeiEvent";
            break;
          case 1:
            int v2 = @"TestEvent";
            break;
          case 2:
            int v2 = @"TestFabricScopedEvent";
            break;
          default:
            goto LABEL_3;
        }
        break;
    }
    goto LABEL_5;
  }
  if ((int)a1 > 1104)
  {
    if ((int)a1 <= 1359)
    {
      if ((int)a1 > 1282)
      {
        switch((int)a1)
        {
          case 1283:
          case 1284:
          case 1287:
          case 1288:
          case 1289:
          case 1290:
          case 1291:
          case 1292:
          case 1293:
          case 1296:
            goto LABEL_3;
          case 1285:
            if (a2) {
              goto LABEL_3;
            }
            int v2 = @"TargetUpdated";
            break;
          case 1286:
            if (a2) {
              goto LABEL_3;
            }
LABEL_113:
            int v2 = @"StateChanged";
            break;
          case 1294:
            if (a2) {
              goto LABEL_3;
            }
            int v2 = @"LoggedOut";
            break;
          case 1295:
            if (a2) {
              goto LABEL_3;
            }
            int v2 = @"RemainingScreenTimeExpired";
            break;
          default:
            goto LABEL_59;
        }
        goto LABEL_5;
      }
      if (a1 != 1105 && a1 != 1106 && a1 != 1107) {
        goto LABEL_59;
      }
      goto LABEL_3;
    }
    if ((int)a1 <= 1871)
    {
      switch((int)a1)
      {
        case 1360:
          if (a2)
          {
            if (a2 != 1) {
              goto LABEL_3;
            }
            int v2 = @"ZoneStopped";
          }
          else
          {
            int v2 = @"ZoneTriggered";
          }
          break;
        case 1361:
          if (a2 >= 3) {
            goto LABEL_3;
          }
          int v4 = off_265193DA8;
          goto LABEL_120;
        case 1363:
        case 1364:
        case 1366:
          goto LABEL_3;
        default:
          goto LABEL_59;
      }
      goto LABEL_5;
    }
    if ((int)a1 > 323615743)
    {
      if (a1 == 323615744 || a1 == 323615747)
      {
        objc_msgSend_stringWithFormat_(NSString, a2, @"<Unknown eventID %d>", a2);
        goto LABEL_4;
      }
      goto LABEL_59;
    }
    if (a1 != 1872)
    {
      if (a1 == 1873)
      {
        if (!a2)
        {
          int v2 = @"CommissioningRequestResult";
          goto LABEL_5;
        }
        goto LABEL_3;
      }
LABEL_59:
      objc_msgSend_stringWithFormat_(NSString, a2, @"<Unknown clusterID %u>", a1);
      goto LABEL_4;
    }
LABEL_3:
    objc_msgSend_stringWithFormat_(NSString, a2, @"<Unknown eventID %u>", a2);
LABEL_4:
    int v2 = (__CFString *)objc_claimAutoreleasedReturnValue();
    goto LABEL_5;
  }
  if ((int)a1 <= 768)
  {
    if ((int)a1 <= 511)
    {
      if (a1 != 257)
      {
        if (a1 != 258 && a1 != 336) {
          goto LABEL_59;
        }
        goto LABEL_3;
      }
      if ((int)a2 > 323551231)
      {
        switch(a2)
        {
          case 0x13490000:
            int v2 = @"AppleAliroLockOperation";
            goto LABEL_5;
          case 0x13490001:
            int v2 = @"AppleAliroLockOperationError";
            goto LABEL_5;
          case 0x13490002:
            int v2 = @"AppleAliroLockUserChange";
            goto LABEL_5;
        }
        goto LABEL_3;
      }
      int v2 = @"DoorLockAlarm";
      switch((int)a2)
      {
        case 0:
          break;
        case 1:
          int v2 = @"DoorStateChange";
          break;
        case 2:
          int v2 = @"LockOperation";
          break;
        case 3:
          int v2 = @"LockOperationError";
          break;
        case 4:
          int v2 = @"LockUserChange";
          break;
        default:
          goto LABEL_3;
      }
    }
    else
    {
      switch((int)a1)
      {
        case 512:
          if (a2 >= 0x11) {
            goto LABEL_3;
          }
          int v4 = off_265193D20;
LABEL_120:
          int v2 = v4[(int)a2];
          break;
        case 513:
        case 514:
        case 516:
          goto LABEL_3;
        case 515:
          goto LABEL_59;
        default:
          if (a1 != 768) {
            goto LABEL_59;
          }
          goto LABEL_3;
      }
    }
  }
  else
  {
    switch((int)a1)
    {
      case 1024:
      case 1026:
      case 1027:
      case 1028:
      case 1029:
      case 1036:
      case 1037:
      case 1043:
      case 1045:
        goto LABEL_3;
      case 1025:
      case 1031:
      case 1032:
      case 1033:
      case 1034:
      case 1035:
      case 1038:
      case 1039:
      case 1040:
      case 1041:
      case 1042:
      case 1044:
        goto LABEL_59;
      case 1030:
        if (a2) {
          goto LABEL_3;
        }
        int v2 = @"OccupancyChanged";
        break;
      default:
        switch((int)a1)
        {
          case 1066:
          case 1067:
          case 1068:
          case 1069:
          case 1070:
          case 1071:
            goto LABEL_3;
          default:
            if (a1 != 769) {
              goto LABEL_59;
            }
            goto LABEL_3;
        }
    }
  }
LABEL_5:

  return v2;
}

void sub_2446CC8D8(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  id v6 = a2;
  if (objc_opt_respondsToSelector() & 1) != 0 || (objc_opt_respondsToSelector())
  {
    objc_storeStrong((id *)(a1 + 608), a2);
    uint64_t v9 = (__SecKey *)objc_msgSend_publicKey(*(void **)(a1 + 608), v7, v8);
    sub_2446CD1AC(v9, a1 + 616, a3);
  }
  else
  {
    uint64_t v10 = sub_244CC8484(0, "NotSpecified");
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)id v11 = 0;
      _os_log_impl(&dword_2446BD000, v10, OS_LOG_TYPE_ERROR, "Keypair does not support message signing", v11, 2u);
    }

    if (sub_244CC4E58(1u)) {
      sub_244CC4DE0(0, 1);
    }
    *(_DWORD *)a3 = 47;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "MTRP256KeypairBridge.mm";
    *(_DWORD *)(a3 + 16) = 35;
  }
}

void sub_2446CC9F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446CCA04(uint64_t a1@<X0>, const char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  id v6 = (__SecKey *)objc_msgSend_publicKey(*(void **)(a1 + 608), a2, a3);

  sub_2446CD1AC(v6, a1 + 616, a4);
}

uint64_t sub_2446CCA48@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  if (*(void *)(result + 608)) {
    int v2 = 0;
  }
  else {
    int v2 = 3;
  }
  if (*(void *)(result + 608)) {
    int v3 = 49;
  }
  else {
    int v3 = 45;
  }
  *(_DWORD *)a2 = v2;
  *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MT"
                        "RP256KeypairBridge.mm";
  *(_DWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_2446CCA7C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  if (*(void *)(result + 608)) {
    int v2 = 108;
  }
  else {
    int v2 = 3;
  }
  if (*(void *)(result + 608)) {
    int v3 = 58;
  }
  else {
    int v3 = 55;
  }
  *(_DWORD *)a2 = v2;
  *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MT"
                        "RP256KeypairBridge.mm";
  *(_DWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_2446CCAB4@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  if (*(void *)(result + 608)) {
    int v2 = 108;
  }
  else {
    int v2 = 3;
  }
  if (*(void *)(result + 608)) {
    int v3 = 67;
  }
  else {
    int v3 = 64;
  }
  *(_DWORD *)a2 = v2;
  *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MT"
                        "RP256KeypairBridge.mm";
  *(_DWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_2446CCAEC@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  if (*(void *)(result + 608)) {
    int v2 = 108;
  }
  else {
    int v2 = 3;
  }
  if (*(void *)(result + 608)) {
    int v3 = 76;
  }
  else {
    int v3 = 73;
  }
  *(_DWORD *)a2 = v2;
  *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MT"
                        "RP256KeypairBridge.mm";
  *(_DWORD *)(a2 + 16) = v3;
  return result;
}

void sub_2446CCB24(uint64_t a1@<X0>, const char *a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v62 = *MEMORY[0x263EF8340];
  if (*(void *)(a1 + 608))
  {
    uint64_t v8 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], a2, (uint64_t)a2, a3);
    char v10 = objc_opt_respondsToSelector();
    id v11 = *(void **)(a1 + 608);
    if (v10)
    {
      id v12 = objc_msgSend_signMessageECDSA_DER_(v11, v9, (uint64_t)v8);
      if (!v12)
      {
        v42 = sub_244CC8484(0, "NotSpecified");
        if (os_log_type_enabled(v42, OS_LOG_TYPE_ERROR))
        {
          *(_WORD *)v57 = 0;
          _os_log_impl(&dword_2446BD000, v42, OS_LOG_TYPE_ERROR, "ECDSA sign msg failure: no signature returned", v57, 2u);
        }

        if (sub_244CC4E58(1u)) {
          sub_244CC4DE0(0, 1);
        }
        *(_DWORD *)a5 = 172;
        *(void *)(a5 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/MTRP256KeypairBridge.mm";
        int v43 = 91;
        goto LABEL_35;
      }
      v55 = v57;
      uint64_t v56 = 64;
      __n128 v53 = 0uLL;
      uint64_t v54 = 0;
      id v13 = v12;
      uint64_t v16 = objc_msgSend_bytes(v13, v14, v15);
      uint64_t v19 = objc_msgSend_length(v13, v17, v18);
      sub_2446C1098(buf, v16, v19);

      long long v52 = *(_OWORD *)buf;
      sub_244CE6DB4(32, &v52, (uint64_t *)&v55, &v53);
      if (v53.n128_u32[0])
      {
        int v20 = sub_244CC8484(0, "NotSpecified");
        if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
        {
          __n128 v50 = v53;
          uint64_t v51 = v54;
          int v21 = sub_244CB7B34((const char **)&v50, 1);
          *(_DWORD *)buf = 136315138;
          *(void *)&uint8_t buf[4] = v21;
          _os_log_impl(&dword_2446BD000, v20, OS_LOG_TYPE_ERROR, "Converting ASN.1 DER signature to raw form failed: %s", buf, 0xCu);
        }

        if (sub_244CC4E58(1u))
        {
          __n128 v48 = v53;
          uint64_t v49 = v54;
          sub_244CB7B34((const char **)&v48, 1);
          sub_244CC4DE0(0, 1);
        }
        *(__n128 *)a5 = v53;
        *(void *)(a5 + 16) = v54;

        goto LABEL_36;
      }
      sub_2446C1098(v47, (uint64_t)v55, v56);
      uint64_t v25 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v45, v47[0], v47[1]);

      if (!v25)
      {
        v46 = sub_244CC8484(0, "NotSpecified");
        if (os_log_type_enabled(v46, OS_LOG_TYPE_ERROR))
        {
          *(_WORD *)buf = 0;
          _os_log_impl(&dword_2446BD000, v46, OS_LOG_TYPE_ERROR, "Failed to create NSData for raw signature", buf, 2u);
        }

        if (sub_244CC4E58(1u)) {
          sub_244CC4DE0(0, 1);
        }
        *(_DWORD *)a5 = 172;
        *(void *)(a5 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/MTRP256KeypairBridge.mm";
        int v43 = 106;
LABEL_35:
        *(_DWORD *)(a5 + 16) = v43;
LABEL_36:

        return;
      }
    }
    else
    {
      uint64_t v25 = objc_msgSend_signMessageECDSA_RAW_(v11, v9, (uint64_t)v8);
      if (!v25)
      {
        v44 = sub_244CC8484(0, "NotSpecified");
        if (os_log_type_enabled(v44, OS_LOG_TYPE_ERROR))
        {
          *(_WORD *)v57 = 0;
          _os_log_impl(&dword_2446BD000, v44, OS_LOG_TYPE_ERROR, "ECDSA sign msg failure: no signature returned", v57, 2u);
        }

        if (sub_244CC4E58(1u)) {
          sub_244CC4DE0(0, 1);
        }
        *(_DWORD *)a5 = 172;
        *(void *)(a5 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/MTRP256KeypairBridge.mm";
        int v43 = 112;
        goto LABEL_35;
      }
    }
    if ((unint64_t)objc_msgSend_length(v25, v23, v24) < 0x41)
    {
      unint64_t v34 = objc_msgSend_length(v25, v26, v27);
      if (v34 <= 0x40) {
        a4[8] = v34;
      }
      id v35 = v25;
      v38 = (const void *)objc_msgSend_bytes(v35, v36, v37);
      size_t v41 = objc_msgSend_length(v35, v39, v40);
      memcpy(a4, v38, v41);
      *(_DWORD *)a5 = 0;
      *(void *)(a5 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/MTRP256KeypairBridge.mm";
      *(_DWORD *)(a5 + 16) = 122;
    }
    else
    {
      int v28 = sub_244CC8484(0, "NotSpecified");
      if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR))
      {
        uint64_t v31 = objc_msgSend_length(v25, v29, v30);
        *(_DWORD *)v57 = 134218240;
        uint64_t v58 = v31;
        __int16 v59 = 2048;
        uint64_t v60 = 64;
        _os_log_impl(&dword_2446BD000, v28, OS_LOG_TYPE_ERROR, "ECDSA sign msg failure: unexpected signature size %llu vs %llu", v57, 0x16u);
      }

      if (sub_244CC4E58(1u))
      {
        objc_msgSend_length(v25, v32, v33);
        sub_244CC4DE0(0, 1);
      }
      *(_DWORD *)a5 = 11;
      *(void *)(a5 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/MTRP256KeypairBridge.mm";
      *(_DWORD *)(a5 + 16) = 118;
    }
    goto LABEL_36;
  }
  unint64_t v22 = sub_244CC8484(0, "NotSpecified");
  if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)v57 = 0;
    _os_log_impl(&dword_2446BD000, v22, OS_LOG_TYPE_ERROR, "ECDSA sign msg failure: no keypair to sign with.", v57, 2u);
  }

  if (sub_244CC4E58(1u)) {
    sub_244CC4DE0(0, 1);
  }
  *(_DWORD *)a5 = 3;
  *(void *)(a5 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MT"
                        "RP256KeypairBridge.mm";
  *(_DWORD *)(a5 + 16) = 83;
}

void sub_2446CD0EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2446CD174@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  if (*(void *)(result + 608)) {
    int v2 = 108;
  }
  else {
    int v2 = 3;
  }
  if (*(void *)(result + 608)) {
    int v3 = 132;
  }
  else {
    int v3 = 129;
  }
  *(_DWORD *)a2 = v2;
  *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MT"
                        "RP256KeypairBridge.mm";
  *(_DWORD *)(a2 + 16) = v3;
  return result;
}

void sub_2446CD1AC(__SecKey *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (a1)
  {
    CFDataRef v5 = SecKeyCopyExternalRepresentation(a1, 0);
    CFDataRef v8 = v5;
    if (v5)
    {
      if (objc_msgSend_length(v5, v6, v7) == 65)
      {
        CFDataRef v9 = v8;
        uint64_t v12 = objc_msgSend_bytes(v9, v10, v11);
        sub_2446CD4B0(&v21, v12);
        id v13 = v21;
        *(_OWORD *)(a2 + 8) = *v21;
        long long v15 = v13[2];
        long long v14 = v13[3];
        char v16 = *((unsigned char *)v13 + 64);
        *(_OWORD *)(a2 + 24) = v13[1];
        *(unsigned char *)(a2 + 72) = v16;
        *(_OWORD *)(a2 + 56) = v14;
        *(_OWORD *)(a2 + 40) = v15;
        *(_DWORD *)a3 = 0;
        *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/MTRP256KeypairBridge.mm";
        int v17 = 156;
      }
      else
      {
        int v20 = sub_244CC8484(0, "NotSpecified");
        if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
        {
          *(_WORD *)unint64_t v22 = 0;
          _os_log_impl(&dword_2446BD000, v20, OS_LOG_TYPE_ERROR, "Unexpected publicKey length, cannot initialize publicKey", v22, 2u);
        }

        if (sub_244CC4E58(1u)) {
          sub_244CC4DE0(0, 1);
        }
        *(_DWORD *)a3 = 172;
        *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/MTRP256KeypairBridge.mm";
        int v17 = 151;
      }
    }
    else
    {
      uint64_t v19 = sub_244CC8484(0, "NotSpecified");
      if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)id v23 = 0;
        _os_log_impl(&dword_2446BD000, v19, OS_LOG_TYPE_ERROR, "Unable to copy external representation for publicKey ref, cannot initialize publicKey", v23, 2u);
      }

      if (sub_244CC4E58(1u)) {
        sub_244CC4DE0(0, 1);
      }
      *(_DWORD *)a3 = 172;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/MTRP256KeypairBridge.mm";
      int v17 = 147;
    }
    *(_DWORD *)(a3 + 16) = v17;
  }
  else
  {
    uint64_t v18 = sub_244CC8484(0, "NotSpecified");
    if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_2446BD000, v18, OS_LOG_TYPE_ERROR, "Unable to initialize Pubkey", buf, 2u);
    }

    if (sub_244CC4E58(1u)) {
      sub_244CC4DE0(0, 1);
    }
    *(_DWORD *)a3 = 172;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "MTRP256KeypairBridge.mm";
    *(_DWORD *)(a3 + 16) = 141;
  }
}

void sub_2446CD400(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2446CD41C(uint64_t a1)
{
  return sub_244CEDE1C(a1);
}

void sub_2446CD458(uint64_t a1)
{
  sub_244CEDE1C(a1);

  JUMPOUT(0x245695FA0);
}

uint64_t sub_2446CD4A8(uint64_t a1)
{
  return a1 + 616;
}

void *sub_2446CD4B0(void *result, uint64_t a2)
{
  *uint64_t result = a2;
  if (!a2) {
    sub_244E1E714();
  }
  return result;
}

BOOL sub_2446CD4D0()
{
  return sub_244D6A434("/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/ServerEndpoint/MTRIMDispatch.mm", 37);
}

uint64_t sub_2446CD4E0()
{
  return 134;
}

uint64_t sub_2446CD508(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v6 = *(_DWORD *)(a1 + 8);
  if (v6 == 4)
  {
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    int v13 = 0;
    sub_2447FA084((uint64_t)&v11, a2, (uint64_t)v10);
    uint64_t result = 0;
    int v9 = v10[0];
    if (!v10[0])
    {
      uint64_t result = sub_2446D0C3C(a3, (unsigned __int16 *)a1, (uint64_t)&v11);
      goto LABEL_10;
    }
  }
  else if (v6 == 2)
  {
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    int v13 = 0;
    sub_2447F9D38((uint64_t)&v11, a2, (uint64_t)v10);
    uint64_t result = 0;
    int v9 = v10[0];
    if (!v10[0])
    {
      uint64_t result = sub_2446D07B8(a3, (unsigned __int16 *)a1, (uint64_t)&v11);
LABEL_10:
      if (result) {
        return result;
      }
      goto LABEL_11;
    }
  }
  else
  {
    if (v6) {
      goto LABEL_11;
    }
    uint64_t v11 = 0;
    sub_244CB3988((uint64_t)&v12);
    char v14 = 0;
    sub_244CB39B8(v7, 0, 0);
    char v15 = 0;
    char v16 = 0;
    char v17 = 0;
    char v18 = 0;
    sub_2447F955C((uint64_t)&v11, a2, (uint64_t)v10);
    uint64_t result = 0;
    int v9 = v10[0];
    if (!v10[0])
    {
      uint64_t result = sub_2446D0F6C(a3, (unsigned __int16 *)a1, (unsigned __int16 *)&v11);
      goto LABEL_10;
    }
  }
  if (!v9) {
    goto LABEL_10;
  }
LABEL_11:
  LOWORD(v11) = 133;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t *, void))(*(void *)a3 + 24))(a3, a1, &v11, 0);
}

void sub_2446CD9A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_2446CDA04(id a1, void *a2, void *a3, void *a4, void *a5)
{
  uint64_t v54 = *MEMORY[0x263EF8340];
  id v9 = a2;
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  if (a1)
  {
    v51.receiver = a1;
    v51.super_class = (Class)MTRServerCluster;
    int v13 = objc_msgSendSuper2(&v51, sel_init);
    a1 = v13;
    if (v13)
    {
      v13[28] = 0;
      uint64_t v16 = objc_msgSend_copy(v9, v14, v15);
      char v17 = (void *)*((void *)a1 + 15);
      *((void *)a1 + 15) = v16;

      uint64_t v20 = objc_msgSend_copy(v10, v18, v19);
      int v21 = (void *)*((void *)a1 + 16);
      *((void *)a1 + 16) = v20;

      id v22 = objc_alloc_init(MEMORY[0x263EFF9C0]);
      id v23 = (void *)*((void *)a1 + 1);
      *((void *)a1 + 1) = v22;

      id v24 = objc_alloc_init(MEMORY[0x263EFF980]);
      uint64_t v25 = (void *)*((void *)a1 + 2);
      *((void *)a1 + 2) = v24;

      uint64_t v28 = objc_msgSend_set(MEMORY[0x263EFFA08], v26, v27);
      uint64_t v29 = (void *)*((void *)a1 + 10);
      *((void *)a1 + 10) = v28;

      *((_WORD *)a1 + 44) = -1;
      long long v47 = 0u;
      long long v48 = 0u;
      long long v49 = 0u;
      long long v50 = 0u;
      id v30 = v11;
      uint64_t v33 = objc_msgSend_countByEnumeratingWithState_objects_count_(v30, v31, (uint64_t)&v47, v53, 16);
      if (v33)
      {
        uint64_t v34 = *(void *)v48;
        do
        {
          uint64_t v35 = 0;
          do
          {
            if (*(void *)v48 != v34) {
              objc_enumerationMutation(v30);
            }
            objc_msgSend_addAccessGrant_(a1, v32, *(void *)(*((void *)&v47 + 1) + 8 * v35++));
          }
          while (v33 != v35);
          uint64_t v33 = objc_msgSend_countByEnumeratingWithState_objects_count_(v30, v32, (uint64_t)&v47, v53, 16);
        }
        while (v33);
      }

      long long v45 = 0u;
      long long v46 = 0u;
      long long v43 = 0u;
      long long v44 = 0u;
      id v36 = v12;
      uint64_t v39 = objc_msgSend_countByEnumeratingWithState_objects_count_(v36, v37, (uint64_t)&v43, v52, 16);
      if (v39)
      {
        uint64_t v40 = *(void *)v44;
        do
        {
          uint64_t v41 = 0;
          do
          {
            if (*(void *)v44 != v40) {
              objc_enumerationMutation(v36);
            }
            objc_msgSend_addAttribute_(a1, v38, *(void *)(*((void *)&v43 + 1) + 8 * v41++), (void)v43);
          }
          while (v39 != v41);
          uint64_t v39 = objc_msgSend_countByEnumeratingWithState_objects_count_(v36, v38, (uint64_t)&v43, v52, 16);
        }
        while (v39);
      }
    }
  }

  return a1;
}

void sub_2446CDC90(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446CDD54(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446CDD64(uint64_t a1)
{
  if (a1)
  {
    os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 112));
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 24));
    if (WeakRetained)
    {
      CFDataRef v5 = objc_msgSend_copy(*(void **)(a1 + 8), v2, v3);
      v8[0] = MEMORY[0x263EF8330];
      v8[1] = 3221225472;
      v8[2] = sub_2446CDE4C;
      v8[3] = &unk_265193DC8;
      v8[4] = a1;
      id v9 = v5;
      id v6 = v5;
      objc_msgSend_asyncDispatchToMatterQueue_errorHandler_(WeakRetained, v7, (uint64_t)v8, 0);
    }
  }
}

void sub_2446CDE28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_2446CDE4C(uint64_t a1)
{
  int v2 = (os_unfair_lock_s *)(*(void *)(a1 + 32) + 112);
  os_unfair_lock_lock(v2);
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 80), *(id *)(a1 + 40));

  os_unfair_lock_unlock(v2);
}

void sub_2446CDF08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  os_unfair_lock_unlock(v10);

  _Unwind_Resume(a1);
}

void sub_2446CDF90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  os_unfair_lock_unlock(v10);

  _Unwind_Resume(a1);
}

void sub_2446CE004(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2446CE47C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  os_unfair_lock_unlock(v13);
  _Unwind_Resume(a1);
}

void sub_2446CEF1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, os_unfair_lock_t lock, void *a18)
{
  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

void sub_2446CF024(void *a1@<X1>, void *a2@<X8>)
{
  id v7 = a1;
  self;
  if (objc_msgSend_count(v7, v3, v4))
  {
    objc_msgSend_count(v7, v5, v6);
    operator new[]();
  }
  *a2 = 0;
}

void sub_2446CF120(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  *id v10 = 0;
  MEMORY[0x245695F80](v11, 0x1000C8052888210);

  _Unwind_Resume(a1);
}

os_unfair_lock *sub_2446CF168(os_unfair_lock *a1)
{
  if (a1)
  {
    int v2 = a1;
    os_unfair_lock_assert_owner(a1 + 28);
    uint64_t v3 = NSString;
    uint64_t os_unfair_lock_opaque_low = LOWORD(v2[22]._os_unfair_lock_opaque);
    uint64_t v7 = objc_msgSend_unsignedLongLongValue(*(void **)&v2[30]._os_unfair_lock_opaque, v5, v6) >> 16;
    unsigned __int16 v10 = objc_msgSend_unsignedLongLongValue(*(void **)&v2[30]._os_unfair_lock_opaque, v8, v9);
    objc_msgSend_stringWithFormat_(v3, v11, @"<MTRServerCluster endpoint %u, id 0x%04X_%04X>", os_unfair_lock_opaque_low, v7, v10);
    a1 = (os_unfair_lock *)objc_claimAutoreleasedReturnValue();
    uint64_t v1 = vars8;
  }
  return a1;
}

void sub_2446CF39C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2446CF500(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2446CF590(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2446CF5FC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2446CF664(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2446CF8B4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2446CF988(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2446CFA08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  os_unfair_lock_unlock(v10);

  _Unwind_Resume(a1);
}

void sub_2446CFA78(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2446CFAF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  os_unfair_lock_unlock(v10);

  _Unwind_Resume(a1);
}

void sub_2446CFB68(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2446CFC4C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2446CFD90(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, __n128 *a4@<X8>)
{
  uint64_t v67 = *MEMORY[0x263EF8340];
  long long v52 = 0u;
  long long v53 = 0u;
  long long v54 = 0u;
  long long v55 = 0u;
  id v5 = *(id *)(a1 + 24);
  uint64_t v9 = objc_msgSend_countByEnumeratingWithState_objects_count_(v5, v6, (uint64_t)&v52, v65, 16);
  if (v9)
  {
    uint64_t v10 = *(void *)v53;
LABEL_3:
    uint64_t v11 = 0;
    while (1)
    {
      if (*(void *)v53 != v10) {
        objc_enumerationMutation(v5);
      }
      id v12 = *(void **)(*((void *)&v52 + 1) + 8 * v11);
      int v13 = objc_msgSend_attributeID(v12, v7, v8);
      uint64_t v15 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v14, *(unsigned int *)(a2 + 8));
      char isEqual = objc_msgSend_isEqual_(v13, v16, (uint64_t)v15);

      if (isEqual) {
        break;
      }
      if (v9 == ++v11)
      {
        uint64_t v9 = objc_msgSend_countByEnumeratingWithState_objects_count_(v5, v7, (uint64_t)&v52, v65, 16);
        if (v9) {
          goto LABEL_3;
        }
        goto LABEL_9;
      }
    }
    id v20 = v12;

    if (!v20) {
      goto LABEL_22;
    }
    int v21 = objc_msgSend_serializedValue(v20, v18, v19);
    objc_opt_class();
    char isKindOfClass = objc_opt_isKindOfClass();
    id v23 = v21;
    id v24 = v23;
    if (isKindOfClass)
    {
      id v49 = v23;
      *(unsigned char *)(a3 + 68) = 1;
      a4->n128_u64[1] = 0;
      a4[1].n128_u64[0] = 0;
      a4->n128_u64[0] = 0;
      sub_244CB2A1C(a3, a4);
      if (!a4->n128_u32[0])
      {
        a4->n128_u64[0] = 0;
        a4->n128_u64[1] = 0;
        a4[1].n128_u64[0] = 0;
        __n128 v60 = 0u;
        long long v61 = 0u;
        long long v62 = 0u;
        long long v63 = 0u;
        id v25 = v49;
        uint64_t v27 = objc_msgSend_countByEnumeratingWithState_objects_count_(v25, v26, (uint64_t)&v60, v66, 16);
        if (v27)
        {
          uint64_t v28 = *(void *)v61;
          while (2)
          {
            for (uint64_t i = 0; i != v27; ++i)
            {
              if (*(void *)v61 != v28) {
                objc_enumerationMutation(v25);
              }
              id v30 = *(id *)(v60.n128_u64[1] + 8 * i);
              __n128 v58 = 0uLL;
              unint64_t v59 = 0;
              id v31 = v30;
              uint64_t v34 = objc_msgSend_bytes(v31, v32, v33);
              uint64_t v37 = objc_msgSend_length(v31, v35, v36);
              sub_2446C1098(&v64, v34, v37);

              __n128 v56 = v64;
              sub_244CBEBE8(&v57, &v56);
              sub_2446D0508((unsigned __int16 *)a3, (uint64_t)&v57, (uint64_t)&v58);
              if (v58.n128_u32[0])
              {
                *a4 = v58;
                a4[1].n128_u64[0] = v59;

                uint64_t v39 = a4;
                goto LABEL_29;
              }
            }
            uint64_t v27 = objc_msgSend_countByEnumeratingWithState_objects_count_(v25, v38, (uint64_t)&v60, v66, 16);
            if (v27) {
              continue;
            }
            break;
          }
        }

        uint64_t v39 = a4;
        a4->n128_u32[0] = 0;
        a4->n128_u64[1] = (unint64_t)"/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darw"
                                            "in/Framework/CHIP/ServerEndpoint/MTRServerCluster.mm";
        a4[1].n128_u32[0] = 541;
LABEL_29:
        sub_244CB2B40(a3);
        if (!v39->n128_u32[0])
        {
          *(_WORD *)(a3 + 74) = -1;
          *(unsigned char *)(a3 + 76) = 0;
        }
      }
    }
    else
    {
      id v41 = v23;
      uint64_t v44 = objc_msgSend_bytes(v41, v42, v43);
      uint64_t v47 = objc_msgSend_length(v41, v45, v46);
      sub_2446C1098(v66, v44, v47);

      __n128 v58 = (__n128)v66[0];
      sub_244CBEBE8(&v60, &v58);
      *(unsigned char *)(a3 + 68) = 1;
      sub_2446D0474((uint64_t *)a3, (uint64_t)&v60, a4);
    }
  }
  else
  {
LABEL_9:

LABEL_22:
    int v40 = *(_DWORD *)(a2 + 8);
    if (v40 == 65533)
    {
      *(void *)&v66[0] = objc_msgSend_unsignedLongLongValue(*(void **)(a1 + 32), v18, v19);
      *(unsigned char *)(a3 + 68) = 1;
      sub_2446D06FC((uint64_t *)a3, a4);
    }
    else if (v40 == 65532)
    {
      LODWORD(v66[0]) = 0;
      *(unsigned char *)(a3 + 68) = 1;
      sub_2446D0668((uint64_t *)a3, a4);
    }
    else
    {
      a4->n128_u32[0] = 1414;
      a4->n128_u64[1] = (unint64_t)"/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin"
                                          "/Framework/CHIP/ServerEndpoint/MTRServerCluster.mm";
      a4[1].n128_u32[0] = 558;
    }
  }
}

void sub_2446D01AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2446D0258(uint64_t a1)
{
  *(void *)a1 = &unk_26F944050;
  return a1;
}

void sub_2446D02A8(uint64_t a1)
{
  *(void *)a1 = &unk_26F944050;

  JUMPOUT(0x245695FA0);
}

void sub_2446D0318(uint64_t a1@<X8>)
{
  *(_DWORD *)a1 = 0;
  *(void *)(a1 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/AttributeAccessInterface.h";
  *(_DWORD *)(a1 + 16) = 89;
}

void sub_2446D033C()
{
}

void sub_2446D0354(const char *a1)
{
  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  sub_2446D03B0(exception, a1);
  __cxa_throw(exception, (struct type_info *)off_2651931F8, MEMORY[0x263F8C060]);
}

void sub_2446D039C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *sub_2446D03B0(std::logic_error *a1, const char *a2)
{
  uint64_t result = std::logic_error::logic_error(a1, a2);
  result->__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C388] + 16);
  return result;
}

void *sub_2446D03E4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60) {
    sub_2446D041C();
  }
  return operator new(16 * a2);
}

void sub_2446D041C()
{
  exception = (std::bad_array_new_length *)__cxa_allocate_exception(8uLL);
  uint64_t v1 = std::bad_array_new_length::bad_array_new_length(exception);
  __cxa_throw(v1, MEMORY[0x263F8C208], MEMORY[0x263F8C090]);
}

void *sub_2446D0450(void *result, uint64_t a2, uint64_t a3)
{
  *uint64_t result = a2;
  result[1] = a3;
  if (!a2)
  {
    if (a3) {
      sub_244E1E7EC();
    }
  }
  return result;
}

double sub_2446D0474@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, __n128 *a3@<X8>)
{
  a3->n128_u64[0] = 0;
  a3->n128_u64[1] = 0;
  a3[1].n128_u64[0] = 0;
  *(void *)&double result = sub_244CB28A8((__n128 *)*a1, (uint64_t)(a1 + 5), a3).n128_u64[0];
  if (!a3->n128_u32[0])
  {
    a3->n128_u64[0] = 0;
    a3->n128_u64[1] = 0;
    a3[1].n128_u64[0] = 0;
    sub_244D6A574(a2, *(char **)(*a1 + 224), 2, a3);
    if (!a3->n128_u32[0]) {
      return sub_244CB29BC(*a1, a3);
    }
  }
  return result;
}

void sub_2446D0508(unsigned __int16 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v28 = *MEMORY[0x263EF8340];
  unsigned int v5 = a1[36];
  if (v5 >= a1[37])
  {
    sub_244CB62B8((uint64_t)&v22);
    uint64_t v7 = *(void *)a1;
    uint64_t v8 = *(long long **)(*(void *)a1 + 24);
    long long v9 = v8[3];
    long long v11 = *v8;
    long long v10 = v8[1];
    long long v24 = v8[2];
    long long v25 = v9;
    long long v22 = v11;
    long long v23 = v10;
    if (*((unsigned char *)a1 + 70)) {
      sub_244D6A574(a2, *(char **)(v7 + 224), 256, &v19);
    }
    else {
      sub_2446D0474((uint64_t *)a1, a2, (__n128 *)&v19);
    }
    int v12 = v19;
    long long v26 = v20;
    int v27 = v21;
    if (v19)
    {
      uint64_t v13 = *(void *)a1;
      char v14 = *(_OWORD **)(*(void *)a1 + 24);
      long long v15 = v22;
      long long v16 = v23;
      long long v17 = v25;
      v14[2] = v24;
      v14[3] = v17;
      *char v14 = v15;
      v14[1] = v16;
      sub_244CCCE18(v13);
      *(_OWORD *)(a3 + 4) = v26;
      *(_DWORD *)(a3 + 20) = v27;
    }
    else
    {
      unsigned __int16 v18 = a1[36] + 1;
      a1[36] = v18;
      a1[37] = v18;
      *((unsigned char *)a1 + 71) = 1;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/AttributeValueEncoder.h";
      *(_DWORD *)(a3 + 16) = 205;
    }
    *(_DWORD *)a3 = v12;
  }
  else
  {
    a1[36] = v5 + 1;
    *(_DWORD *)a3 = 0;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/AttributeValueEncoder.h";
    *(_DWORD *)(a3 + 16) = 176;
  }
}

double sub_2446D0668@<D0>(uint64_t *a1@<X0>, __n128 *a2@<X8>)
{
  a2->n128_u64[0] = 0;
  a2->n128_u64[1] = 0;
  a2[1].n128_u64[0] = 0;
  *(void *)&double result = sub_244CB28A8((__n128 *)*a1, (uint64_t)(a1 + 5), a2).n128_u64[0];
  if (!a2->n128_u32[0])
  {
    a2->n128_u64[0] = 0;
    a2->n128_u64[1] = 0;
    a2[1].n128_u64[0] = 0;
    sub_244CB694C();
    if (!a2->n128_u32[0]) {
      return sub_244CB29BC(*a1, a2);
    }
  }
  return result;
}

double sub_2446D06FC@<D0>(uint64_t *a1@<X0>, __n128 *a2@<X8>)
{
  a2->n128_u64[0] = 0;
  a2->n128_u64[1] = 0;
  a2[1].n128_u64[0] = 0;
  *(void *)&double result = sub_244CB28A8((__n128 *)*a1, (uint64_t)(a1 + 5), a2).n128_u64[0];
  if (!a2->n128_u32[0])
  {
    a2->n128_u64[0] = 0;
    a2->n128_u64[1] = 0;
    a2[1].n128_u64[0] = 0;
    sub_244CB68CC();
    if (!a2->n128_u32[0]) {
      return sub_244CB29BC(*a1, a2);
    }
  }
  return result;
}

uint64_t sub_2446D07B8(uint64_t a1, unsigned __int16 *a2, uint64_t a3)
{
  uint64_t v20 = *MEMORY[0x263EF8340];
  unsigned int v6 = sub_24485668C(*a2, 41, 0);
  if (v6 <= 0xFD) {
    uint64_t v7 = qword_268EBE0F8[v6];
  }
  else {
    uint64_t v7 = 0;
  }
  uint64_t v8 = sub_244CC8484(0x1Du, "Zcl");
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl(&dword_2446BD000, v8, OS_LOG_TYPE_DEFAULT, "OTA Provider received ApplyUpdateRequest", buf, 2u);
  }
  if (sub_244CC4E58(2u)) {
    sub_244CC4DE0(0x1Du, 2);
  }
  long long v9 = sub_244CC8484(0x1Du, "Zcl");
  if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
  {
    uint64_t v10 = *(void *)(a3 + 8);
    *(_DWORD *)buf = 67109120;
    int v17 = v10;
    _os_log_impl(&dword_2446BD000, v9, OS_LOG_TYPE_INFO, "  Update Token: %u", buf, 8u);
  }
  if (sub_244CC4E58(3u)) {
    sub_244CC4DE0(0x1Du, 3);
  }
  long long v11 = sub_244CC8484(0x1Du, "Zcl");
  if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
  {
    int v12 = *(_DWORD *)(a3 + 16);
    *(_DWORD *)buf = 67109120;
    int v17 = v12;
    _os_log_impl(&dword_2446BD000, v11, OS_LOG_TYPE_INFO, "  New Version: %u", buf, 8u);
  }
  if (sub_244CC4E58(3u)) {
    sub_244CC4DE0(0x1Du, 3);
  }
  if ((sub_2446D0AE8(a1, a2) & 1) == 0)
  {
    if ((unint64_t)(*(void *)(a3 + 8) - 33) > 0xFFFFFFFFFFFFFFE6)
    {
      (*(void (**)(uint64_t, uint64_t, unsigned __int16 *, uint64_t))(*(void *)v7 + 8))(v7, a1, a2, a3);
    }
    else
    {
      uint64_t v13 = sub_244CC8484(0x1Du, "Zcl");
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
      {
        uint64_t v14 = *(void *)(a3 + 8);
        *(_DWORD *)buf = 67109376;
        int v17 = 32;
        __int16 v18 = 1024;
        int v19 = v14;
        _os_log_impl(&dword_2446BD000, v13, OS_LOG_TYPE_ERROR, "expected size %u for UpdateToken, got %u", buf, 0xEu);
      }
      if (sub_244CC4E58(1u)) {
        sub_244CC4DE0(0x1Du, 1);
      }
      *(_WORD *)buf = 133;
      (*(void (**)(uint64_t, unsigned __int16 *, uint8_t *, void))(*(void *)a1 + 24))(a1, a2, buf, 0);
    }
  }
  return 1;
}

uint64_t sub_2446D0AE8(uint64_t a1, unsigned __int16 *a2)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  unsigned int v4 = sub_24485668C(*a2, 41, 0);
  if (v4 <= 0xFD && qword_268EBE0F8[v4]) {
    return 0;
  }
  unsigned int v6 = sub_244CC8484(0x1Du, "Zcl");
  if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
  {
    int v7 = *a2;
    *(_DWORD *)buf = 67109120;
    int v9 = v7;
    _os_log_impl(&dword_2446BD000, v6, OS_LOG_TYPE_ERROR, "No OTAProviderDelegate set for ep:%u", buf, 8u);
  }
  if (sub_244CC4E58(1u)) {
    sub_244CC4DE0(0x1Du, 1);
  }
  *(_WORD *)buf = 129;
  (*(void (**)(uint64_t, unsigned __int16 *, uint8_t *, void))(*(void *)a1 + 24))(a1, a2, buf, 0);
  return 1;
}

uint64_t sub_2446D0C3C(uint64_t a1, unsigned __int16 *a2, uint64_t a3)
{
  uint64_t v20 = *MEMORY[0x263EF8340];
  unsigned int v6 = sub_24485668C(*a2, 41, 0);
  if (v6 <= 0xFD) {
    uint64_t v7 = qword_268EBE0F8[v6];
  }
  else {
    uint64_t v7 = 0;
  }
  uint64_t v8 = sub_244CC8484(0x1Du, "Zcl");
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl(&dword_2446BD000, v8, OS_LOG_TYPE_DEFAULT, "OTA Provider received NotifyUpdateApplied", buf, 2u);
  }
  if (sub_244CC4E58(2u)) {
    sub_244CC4DE0(0x1Du, 2);
  }
  int v9 = sub_244CC8484(0x1Du, "Zcl");
  if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
  {
    uint64_t v10 = *(void *)(a3 + 8);
    *(_DWORD *)buf = 67109120;
    int v17 = v10;
    _os_log_impl(&dword_2446BD000, v9, OS_LOG_TYPE_INFO, "  Update Token: %u", buf, 8u);
  }
  if (sub_244CC4E58(3u)) {
    sub_244CC4DE0(0x1Du, 3);
  }
  long long v11 = sub_244CC8484(0x1Du, "Zcl");
  if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
  {
    int v12 = *(_DWORD *)(a3 + 16);
    *(_DWORD *)buf = 67109120;
    int v17 = v12;
    _os_log_impl(&dword_2446BD000, v11, OS_LOG_TYPE_INFO, "  Software Version: %u", buf, 8u);
  }
  if (sub_244CC4E58(3u)) {
    sub_244CC4DE0(0x1Du, 3);
  }
  if ((sub_2446D0AE8(a1, a2) & 1) == 0)
  {
    if ((unint64_t)(*(void *)(a3 + 8) - 33) > 0xFFFFFFFFFFFFFFE6)
    {
      (*(void (**)(uint64_t, uint64_t, unsigned __int16 *, uint64_t))(*(void *)v7 + 16))(v7, a1, a2, a3);
    }
    else
    {
      uint64_t v13 = sub_244CC8484(0x1Du, "Zcl");
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
      {
        uint64_t v14 = *(void *)(a3 + 8);
        *(_DWORD *)buf = 67109376;
        int v17 = 32;
        __int16 v18 = 1024;
        int v19 = v14;
        _os_log_impl(&dword_2446BD000, v13, OS_LOG_TYPE_ERROR, "expected size %u for UpdateToken, got %u", buf, 0xEu);
      }
      if (sub_244CC4E58(1u)) {
        sub_244CC4DE0(0x1Du, 1);
      }
      *(_WORD *)buf = 133;
      (*(void (**)(uint64_t, unsigned __int16 *, uint8_t *, void))(*(void *)a1 + 24))(a1, a2, buf, 0);
    }
  }
  return 1;
}

uint64_t sub_2446D0F6C(uint64_t a1, unsigned __int16 *a2, unsigned __int16 *a3)
{
  uint64_t v40 = *MEMORY[0x263EF8340];
  unsigned int v6 = sub_24485668C(*a2, 41, 0);
  if (v6 <= 0xFD) {
    uint64_t v7 = (void (***)(void, uint64_t, unsigned __int16 *, unsigned __int16 *))qword_268EBE0F8[v6];
  }
  else {
    uint64_t v7 = 0;
  }
  if ((sub_2446D0AE8(a1, a2) & 1) == 0)
  {
    uint64_t v8 = sub_244CC8484(0x1Du, "Zcl");
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_2446BD000, v8, OS_LOG_TYPE_DEFAULT, "OTA Provider received QueryImage", buf, 2u);
    }
    if (sub_244CC4E58(2u)) {
      sub_244CC4DE0(0x1Du, 2);
    }
    int v9 = sub_244CC8484(0x1Du, "Zcl");
    if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
    {
      int v10 = *a3;
      *(_DWORD *)buf = 67109120;
      int v39 = v10;
      _os_log_impl(&dword_2446BD000, v9, OS_LOG_TYPE_INFO, "  VendorID: 0x%x", buf, 8u);
    }
    if (sub_244CC4E58(3u)) {
      sub_244CC4DE0(0x1Du, 3);
    }
    long long v11 = sub_244CC8484(0x1Du, "Zcl");
    if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      int v12 = a3[1];
      *(_DWORD *)buf = 67109120;
      int v39 = v12;
      _os_log_impl(&dword_2446BD000, v11, OS_LOG_TYPE_INFO, "  ProductID: %u", buf, 8u);
    }
    if (sub_244CC4E58(3u)) {
      sub_244CC4DE0(0x1Du, 3);
    }
    uint64_t v13 = sub_244CC8484(0x1Du, "Zcl");
    if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
    {
      int v14 = *((_DWORD *)a3 + 1);
      *(_DWORD *)buf = 67109120;
      int v39 = v14;
      _os_log_impl(&dword_2446BD000, v13, OS_LOG_TYPE_INFO, "  SoftwareVersion: %u", buf, 8u);
    }
    if (sub_244CC4E58(3u)) {
      sub_244CC4DE0(0x1Du, 3);
    }
    long long v15 = sub_244CC8484(0x1Du, "Zcl");
    if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_2446BD000, v15, OS_LOG_TYPE_INFO, "  ProtocolsSupported: [", buf, 2u);
    }
    if (sub_244CC4E58(3u)) {
      sub_244CC4DE0(0x1Du, 3);
    }
    v34[0] = *((unsigned char *)a3 + 80);
    if (v34[0]) {
      v34[1] = *((unsigned char *)a3 + 81);
    }
    sub_2446D1930((uint64_t)buf, (uint64_t)(a3 + 4), v34);
    while (sub_2446D19A0((uint64_t)buf))
    {
      long long v16 = sub_244CC8484(0x1Du, "Zcl");
      if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)uint64_t v34 = 67109120;
        int v35 = buf[0];
        _os_log_impl(&dword_2446BD000, v16, OS_LOG_TYPE_INFO, "    %u", v34, 8u);
      }
      if (sub_244CC4E58(3u)) {
        sub_244CC4DE0(0x1Du, 3);
      }
    }
    int v17 = sub_244CC8484(0x1Du, "Zcl");
    if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)uint64_t v34 = 0;
      _os_log_impl(&dword_2446BD000, v17, OS_LOG_TYPE_INFO, "  ]", v34, 2u);
    }
    if (sub_244CC4E58(3u)) {
      sub_244CC4DE0(0x1Du, 3);
    }
    if (*((unsigned char *)a3 + 88))
    {
      __int16 v18 = sub_244CC8484(0x1Du, "Zcl");
      if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
      {
        int v19 = *(unsigned __int16 *)sub_2446D1880((unsigned char *)a3 + 88);
        *(_DWORD *)uint64_t v34 = 67109120;
        int v35 = v19;
        _os_log_impl(&dword_2446BD000, v18, OS_LOG_TYPE_INFO, "  HardwareVersion: %u", v34, 8u);
      }
      if (sub_244CC4E58(3u))
      {
        sub_2446D1880((unsigned char *)a3 + 88);
        sub_244CC4DE0(0x1Du, 3);
      }
    }
    uint64_t v20 = a3 + 48;
    if (*((unsigned char *)a3 + 96))
    {
      int v21 = sub_244CC8484(0x1Du, "Zcl");
      if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
      {
        uint64_t v22 = *((void *)sub_2446D18A4((unsigned char *)a3 + 96) + 1);
        uint64_t v23 = *(void *)sub_2446D18A4((unsigned char *)a3 + 96);
        *(_DWORD *)uint64_t v34 = 68157954;
        int v35 = v22;
        __int16 v36 = 2080;
        uint64_t v37 = v23;
        _os_log_impl(&dword_2446BD000, v21, OS_LOG_TYPE_INFO, "  Location: %.*s", v34, 0x12u);
      }
      if (sub_244CC4E58(3u))
      {
        sub_2446D18A4((unsigned char *)a3 + 96);
        sub_2446D18A4((unsigned char *)a3 + 96);
        sub_244CC4DE0(0x1Du, 3);
      }
    }
    if (*((unsigned char *)a3 + 120))
    {
      long long v24 = sub_244CC8484(0x1Du, "Zcl");
      if (os_log_type_enabled(v24, OS_LOG_TYPE_INFO))
      {
        int v25 = *sub_2446D18C8((unsigned char *)a3 + 120);
        *(_DWORD *)uint64_t v34 = 67109120;
        int v35 = v25;
        _os_log_impl(&dword_2446BD000, v24, OS_LOG_TYPE_INFO, "  RequestorCanConsent: %u", v34, 8u);
      }
      if (sub_244CC4E58(3u))
      {
        sub_2446D18C8((unsigned char *)a3 + 120);
        sub_244CC4DE0(0x1Du, 3);
      }
    }
    long long v26 = a3 + 64;
    if (*((unsigned char *)a3 + 128))
    {
      int v27 = sub_244CC8484(0x1Du, "Zcl");
      if (os_log_type_enabled(v27, OS_LOG_TYPE_INFO))
      {
        uint64_t v28 = *((void *)sub_2446D18A4((unsigned char *)a3 + 128) + 1);
        *(_DWORD *)uint64_t v34 = 67109120;
        int v35 = v28;
        _os_log_impl(&dword_2446BD000, v27, OS_LOG_TYPE_INFO, "  MetadataForProvider: %u", v34, 8u);
      }
      if (sub_244CC4E58(3u))
      {
        sub_2446D18A4((unsigned char *)a3 + 128);
        sub_244CC4DE0(0x1Du, 3);
      }
    }
    if (*v20 && *((void *)sub_2446D18A4((unsigned char *)a3 + 96) + 1) != 2)
    {
      id v31 = sub_244CC8484(0x1Du, "Zcl");
      if (os_log_type_enabled(v31, OS_LOG_TYPE_ERROR))
      {
        uint64_t v32 = *((void *)sub_2446D18A4(v20) + 1);
        *(_DWORD *)uint64_t v34 = 67109376;
        int v35 = v32;
        __int16 v36 = 1024;
        LODWORD(v37) = 2;
        _os_log_impl(&dword_2446BD000, v31, OS_LOG_TYPE_ERROR, "location param length %u != expected length %u", v34, 0xEu);
      }
      if (sub_244CC4E58(1u))
      {
        sub_2446D18A4(v20);
        sub_244CC4DE0(0x1Du, 1);
      }
      goto LABEL_71;
    }
    if (*v26 && *((void *)sub_2446D18A4((unsigned char *)a3 + 128) + 1) >= 0x201uLL)
    {
      uint64_t v29 = sub_244CC8484(0x1Du, "Zcl");
      if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR))
      {
        uint64_t v30 = *((void *)sub_2446D18A4(v26) + 1);
        *(_DWORD *)uint64_t v34 = 67109376;
        int v35 = v30;
        __int16 v36 = 1024;
        LODWORD(v37) = 512;
        _os_log_impl(&dword_2446BD000, v29, OS_LOG_TYPE_ERROR, "metadata size %u exceeds max %u", v34, 0xEu);
      }
      if (sub_244CC4E58(1u))
      {
        sub_2446D18A4(v26);
        sub_244CC4DE0(0x1Du, 1);
      }
LABEL_71:
      *(_WORD *)uint64_t v34 = 133;
      (*(void (**)(uint64_t, unsigned __int16 *, uint8_t *, void))(*(void *)a1 + 24))(a1, a2, v34, 0);
      return 1;
    }
    (**v7)(v7, a1, a2, a3);
  }
  return 1;
}

unsigned char *sub_2446D1880(unsigned char *a1)
{
  if (!*a1) {
    sub_244E1E8A4();
  }
  return a1 + 2;
}

unsigned char *sub_2446D18A4(unsigned char *a1)
{
  if (!*a1) {
    sub_244E1E8A4();
  }
  return a1 + 8;
}

unsigned char *sub_2446D18C8(unsigned char *a1)
{
  if (!*a1) {
    sub_244E1E8A4();
  }
  return a1 + 1;
}

uint64_t sub_2446D18EC(int a1, uint64_t a2)
{
  uint64_t result = sub_24485668C(a1, 41, 0);
  if (result <= 0xFD) {
    qword_268EBE0F8[result] = a2;
  }
  return result;
}

uint64_t sub_2446D1930(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  sub_244CB3988(a1 + 32);
  int v7 = *a3;
  *(unsigned char *)(a1 + 104) = v7;
  if (v7) {
    *(unsigned char *)(a1 + 105) = a3[1];
  }
  *(_DWORD *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 24) = 93;
  sub_244CB3B04(v6, a2);
  return a1;
}

BOOL sub_2446D19A0(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 96) == -1) {
    return 0;
  }
  uint64_t v3 = (int *)(a1 + 8);
  int v2 = *(_DWORD *)(a1 + 8);
  if (!v2)
  {
    sub_244CB4E58(a1 + 32, &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *((void *)v3 + 2) = v6;
    int v2 = *v3;
    if (!*v3)
    {
      *(unsigned char *)a1 = 0;
      sub_2446D1A48(a1 + 32, (unsigned char *)a1, &v5);
      *(_OWORD *)uint64_t v3 = v5;
      *((void *)v3 + 2) = v6;
      int v2 = *(_DWORD *)(a1 + 8);
    }
  }
  return v2 == 0;
}

uint64_t sub_2446D1A48@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  uint64_t result = sub_2446D1AAC(a1, a2, a3);
  if (!*(_DWORD *)a3)
  {
    unsigned int v6 = *a2;
    if (v6 >= 4) {
      LOBYTE(v6) = 4;
    }
    *a2 = v6;
    *(_DWORD *)a3 = 0;
    a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
    *((_DWORD *)a3 + 4) = 61;
  }
  return result;
}

uint64_t sub_2446D1AAC@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  char v6 = 0;
  a3[1] = 0;
  a3[2] = 0;
  *a3 = 0;
  uint64_t result = sub_244CB3E8C(a1, &v6, (uint64_t)a3);
  if (!*(_DWORD *)a3)
  {
    *a2 = v6;
    *(_DWORD *)a3 = 0;
    a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/lib/core/TLVReader.h";
    *((_DWORD *)a3 + 4) = 519;
  }
  return result;
}

uint64_t sub_2446D1B3C()
{
  return sub_244CC4DE0(0x1Bu, 1);
}

BOOL sub_2446D1B54(NSObject *a1)
{
  return os_log_type_enabled(a1, OS_LOG_TYPE_ERROR);
}

void sub_2446D1BC4()
{
  uint64_t v0 = objc_alloc_init(MTRDeviceControllerFactory);
  uint64_t v1 = (void *)qword_268EBE8E8;
  qword_268EBE8E8 = (uint64_t)v0;
}

void sub_2446D1E94(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *sub_2446D1EF0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_268EB83F0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_268EB83F0))
  {
    byte_268EB83E8 = 0;
    xmmword_268EB83C8 = 0u;
    unk_268EB83D8 = 0u;
    xmmword_268EB83B8 = 0u;
    __cxa_guard_release(&qword_268EB83F0);
  }
  return &unk_268EB83B0;
}

void sub_2446D1FC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  a9.super_class = (Class)MTRDeviceControllerFactory;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_2446D1FF0(void *a1)
{
}

BOOL sub_2446D2004(BOOL result)
{
  if (result)
  {
    if (qword_26B0D43B0 != -1) {
      dispatch_once_f(&qword_26B0D43B0, &byte_26B0D4370, (dispatch_function_t)sub_2446D7DB8);
    }
    uint64_t result = sub_244D77BF4(&byte_26B0D4370);
    if (result) {
      sub_244E1E944();
    }
  }
  return result;
}

void sub_2446D2060(void *a1)
{
  if (a1)
  {
    sub_244D6A434("/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTRDeviceControllerFactory.mm", 237);
    int v2 = sub_244CC8484(0, "NotSpecified");
    if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long v16 = 0;
      _os_log_impl(&dword_2446BD000, v2, OS_LOG_TYPE_DEFAULT, "Cleaning startup objects in controller factory", v16, 2u);
    }

    if (sub_244CC4E58(2u)) {
      sub_244CC4DE0(0, 2);
    }
    uint64_t v3 = (void *)a1[67];
    a1[67] = 0;

    unsigned int v4 = (void *)a1[66];
    a1[66] = 0;

    uint64_t v5 = a1[64];
    if (v5)
    {
      if (!*(void *)(v5 + 8) || (sub_2446D7DBC(a1[64]), *(void *)(v5 + 8) = 0, (uint64_t v5 = a1[64]) != 0))
      {
        uint64_t v6 = sub_2446D7E60(v5);
        MEMORY[0x245695FA0](v6, 0x10A1C40EEFDC2EFLL);
      }
      a1[64] = 0;
    }
    int v7 = (void *)a1[63];
    if (v7)
    {
      if (!v7[1] || (sub_2446D7EF8(a1[63]), v7[1] = 0, (int v7 = (void *)a1[63]) != 0)) {
        (*(void (**)(void *))(*v7 + 8))(v7);
      }
      a1[63] = 0;
    }
    uint64_t v8 = (void *)a1[74];
    a1[74] = 0;

    int v9 = (void *)a1[73];
    a1[73] = 0;

    uint64_t v10 = a1[62];
    if (v10)
    {
      (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
      a1[62] = 0;
    }
    uint64_t v11 = a1[61];
    if (v11)
    {
      (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
      a1[61] = 0;
    }
    int v12 = (void *)a1[77];
    a1[77] = 0;

    sub_244C9947C(v13, v14, v15);
  }
}

void sub_2446D2244(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if (a1)
  {
    uint64_t v3 = *(void *)(a1 + 488);
    long long v4 = *(_OWORD *)(a1 + 504);
    sub_244DA1038(a2, &v3, (uint64_t)a3);
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
  }
}

uint64_t sub_2446D23D4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_2446D23E4(uint64_t a1)
{
}

uint64_t sub_2446D23EC(uint64_t *a1)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  sub_2446D7F64((uint64_t)v22);
  long long v18 = 0uLL;
  uint64_t v19 = 0;
  sub_2446D2244(a1[4], (uint64_t)v22, &v18);
  if (v18)
  {
    uint64_t v3 = sub_244CC8484(0, "NotSpecified");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      long long v15 = v18;
      uint64_t v16 = v19;
      long long v4 = sub_244CB7B34((const char **)&v15, 1);
      *(_DWORD *)buf = 136315138;
      int v21 = v4;
      _os_log_impl(&dword_2446BD000, v3, OS_LOG_TYPE_ERROR, "Can't initialize fabric table when getting known fabrics: %s", buf, 0xCu);
    }

    if (sub_244CC4E58(1u))
    {
      long long v15 = v18;
      uint64_t v16 = v19;
      sub_244CB7B34((const char **)&v15, 1);
      sub_244CC4DE0(0, 1);
    }
  }
  else
  {
    uint64_t v5 = objc_msgSend_arrayWithCapacity_(MEMORY[0x263EFF980], v2, v23);
    uint64_t v6 = *(void *)(a1[5] + 8);
    int v7 = *(void **)(v6 + 40);
    *(void *)(v6 + 40) = v5;

    sub_2446D8144(v22, (uint64_t)&v15);
    if (v16 != v17 && (v17 != 16 || v16 != 16 || (void *)v15 != v22))
    {
LABEL_21:
      uint64_t v10 = sub_2446D26A0((uint64_t *)&v15);
      uint64_t v11 = [MTRFabricInfo alloc];
      int v14 = objc_msgSend_initWithFabricTable_fabricInfo_(v11, v12, (uint64_t)v22, v10);
      if (!v14) {
        return sub_2446D8254((uint64_t)v22);
      }
      objc_msgSend_addObject_(*(void **)(*(void *)(a1[5] + 8) + 40), v13, (uint64_t)v14);

      unint64_t v9 = v16;
      while (1)
      {
        if (v9 < v17) {
          uint64_t v16 = ++v9;
        }
        if (v9 == v17) {
          break;
        }
        if (*(unsigned char *)(v15 + 152 * v9 + 137)
          && (unint64_t)(*(void *)(v15 + 152 * v9) - 1) < 0xFFFFFFEFFFFFFFFFLL)
        {
          if (v17 == 16 && v9 == 16 && (void *)v15 == v22) {
            break;
          }
          goto LABEL_21;
        }
      }
    }
    *(unsigned char *)(*(void *)(a1[6] + 8) + 24) = 1;
  }
  return sub_2446D8254((uint64_t)v22);
}

void sub_2446D2658(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  sub_2446D8254((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2446D26A0(uint64_t *a1)
{
  if (a1[2] == a1[3]) {
    sub_244E1EA04();
  }

  return sub_2446D8208(a1);
}

uint64_t sub_2446D26E0(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v29 = *MEMORY[0x263EF8340];
  id v6 = a2;
  if (a1)
  {
    sub_2446D2004(a1);
    uint64_t v17 = 0;
    long long v18 = &v17;
    uint64_t v19 = 0x4812000000;
    uint64_t v20 = sub_2446D2988;
    int v21 = nullsub_14;
    uint64_t v22 = "";
    long long v23 = xmmword_265193E10;
    uint64_t v24 = 331;
    int v7 = *(NSObject **)(a1 + 8);
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = sub_2446D29A0;
    block[3] = &unk_265193E30;
    void block[4] = a1;
    uint64_t v16 = &v17;
    id v15 = v6;
    dispatch_sync(v7, block);
    int v8 = *((_DWORD *)v18 + 12);
    a1 = v8 == 0;
    if (v8)
    {
      unint64_t v9 = sub_244CC8484(0, "NotSpecified");
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      {
        long long v25 = *((_OWORD *)v18 + 3);
        uint64_t v26 = v18[8];
        uint64_t v10 = sub_244CB7B34((const char **)&v25, 1);
        *(_DWORD *)buf = 136315138;
        uint64_t v28 = v10;
        _os_log_impl(&dword_2446BD000, v9, OS_LOG_TYPE_ERROR, "Failed to start Matter controller factory: %s", buf, 0xCu);
      }

      if (sub_244CC4E58(1u))
      {
        long long v25 = *((_OWORD *)v18 + 3);
        uint64_t v26 = v18[8];
        sub_244CB7B34((const char **)&v25, 1);
        sub_244CC4DE0(0, 1);
      }
      if (a4)
      {
        long long v12 = *((_OWORD *)v18 + 3);
        uint64_t v13 = v18[8];
        sub_244B26908((uint64_t)MTRError, &v12);
        *a4 = (id)objc_claimAutoreleasedReturnValue();
      }
    }

    _Block_object_dispose(&v17, 8);
  }

  return a1;
}

void sub_2446D2944(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, ...)
{
  va_start(va, a14);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

__n128 sub_2446D2988(__n128 *a1, __n128 *a2)
{
  __n128 result = a2[3];
  a1[4].n128_u64[0] = a2[4].n128_u64[0];
  a1[3] = result;
  return result;
}

void sub_2446D29A0(uint64_t a1, const char *a2, uint64_t a3)
{
  if (!*(unsigned char *)(*(void *)(a1 + 32) + 648))
  {
    sub_244C993A4(a1, a2, a3);
    sub_244BCAE70();
    objc_msgSend_hasStorage(*(void **)(a1 + 40), v5, v6);
    operator new();
  }
  long long v4 = sub_244CC8484(0, "NotSpecified");
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)buf = 0;
    _os_log_impl(&dword_2446BD000, v4, OS_LOG_TYPE_INFO, "Ignoring duplicate call to startup, Matter controller factory already started...", buf, 2u);
  }

  if (sub_244CC4E58(3u)) {
    sub_244CC4DE0(0, 3);
  }
  uint64_t v7 = *(void *)(*(void *)(a1 + 48) + 8);
  *(_DWORD *)(v7 + 48) = 0;
  *(void *)(v7 + 56) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRDeviceControllerFactory.mm";
  *(_DWORD *)(v7 + 64) = 336;
  if (*(_DWORD *)(*(void *)(*(void *)(a1 + 48) + 8) + 48)) {
    sub_2446D2060(*(void **)(a1 + 32));
  }
}

void sub_2446D2E34(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446D2FE0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446D3000(uint64_t a1)
{
  if (*(unsigned char *)(*(void *)(a1 + 32) + 648))
  {
    int v2 = sub_244CC8484(0, "NotSpecified");
    if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t v3 = 0;
      _os_log_impl(&dword_2446BD000, v2, OS_LOG_TYPE_DEFAULT, "Shutting down the Matter controller factory", v3, 2u);
    }

    if (sub_244CC4E58(2u)) {
      sub_244CC4DE0(0, 2);
    }
    sub_244DE6818(*(void *)(*(void *)(a1 + 32) + 16));
    sub_2446D2060(*(void **)(a1 + 32));
    *(unsigned char *)(*(void *)(a1 + 32) + 648) = 0;
    *(unsigned char *)(*(void *)(a1 + 32) + 544) = 0;
  }
}

id sub_2446D30C8(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  uint64_t v113 = *MEMORY[0x263EF8340];
  id v8 = a2;
  id v9 = a3;
  id v67 = a4;
  v68 = v9;
  if (a1)
  {
    uint64_t v69 = a1;
    sub_2446D2004(a1);
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      id v72 = v9;
      v74 = objc_msgSend_storageDelegate(v72, v10, v11);
      uint64_t v71 = objc_msgSend_storageDelegateQueue(v72, v12, v13);
      uint64_t v16 = objc_msgSend_uniqueIdentifier(v72, v14, v15);
      uint64_t v19 = objc_msgSend_otaProviderDelegate(v72, v17, v18);
      uint64_t v22 = objc_msgSend_otaProviderDelegateQueue(v72, v20, v21);
      uint64_t v66 = objc_msgSend_concurrentSubscriptionEstablishmentsAllowedOnThread(v72, v23, v24);
      uint64_t v27 = objc_msgSend_storageBehaviorConfiguration(v72, v25, v26);
      char started = objc_msgSend_startSuspended(v72, v28, v29);
      uint64_t v30 = (void *)v27;
      id v31 = (void *)v22;
      uint64_t v32 = (void *)v71;

      if (*(unsigned char *)(v69 + 648))
      {
        uint64_t v33 = (void *)v16;
        uint64_t v34 = (void *)v71;
        id v35 = v19;
        __int16 v36 = v74;
        a1 = v69;
LABEL_8:
        BOOL v39 = *(unsigned char *)(a1 + 480) != 0;
        BOOL v40 = v36 == 0;
        if (*(unsigned char *)(a1 + 480) && !v36)
        {
          id v41 = sub_244CC8484(0, "NotSpecified");
          uint64_t v19 = v35;
          uint64_t v32 = v34;
          if (os_log_type_enabled(v41, OS_LOG_TYPE_ERROR))
          {
            *(_WORD *)buf = 0;
            _os_log_impl(&dword_2446BD000, v41, OS_LOG_TYPE_ERROR, "Must have a controller storage delegate when we do not have storage for the controller factory", buf, 2u);
          }

          if (sub_244CC4E58(1u)) {
            sub_244CC4DE0(0, 1);
          }
          if (a5)
          {
            LODWORD(v105) = 47;
            *((void *)&v105 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Fram"
                                     "ework/CHIP/MTRDeviceControllerFactory.mm";
            int v106 = 507;
            sub_244B26908((uint64_t)MTRError, &v105);
            id v42 = (id)objc_claimAutoreleasedReturnValue();
LABEL_46:
            v74 = 0;
            goto LABEL_47;
          }
          goto LABEL_49;
        }
LABEL_29:
        v74 = v36;
        if (!v39 && !v40)
        {
          uint64_t v19 = v35;
          long long v48 = sub_244CC8484(0, "NotSpecified");
          uint64_t v32 = v34;
          if (os_log_type_enabled(v48, OS_LOG_TYPE_ERROR))
          {
            *(_WORD *)buf = 0;
            _os_log_impl(&dword_2446BD000, v48, OS_LOG_TYPE_ERROR, "Must not have a controller storage delegate when we have storage for the controller factory", buf, 2u);
          }

          if (sub_244CC4E58(1u)) {
            sub_244CC4DE0(0, 1);
          }
          if (a5)
          {
            LODWORD(v103) = 47;
            *((void *)&v103 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Fram"
                                     "ework/CHIP/MTRDeviceControllerFactory.mm";
            int v104 = 515;
            sub_244B26908((uint64_t)MTRError, &v103);
            id v42 = (id)objc_claimAutoreleasedReturnValue();
LABEL_47:
            objc_super v51 = 0;
            *a5 = v42;
LABEL_51:

            goto LABEL_52;
          }
LABEL_50:
          objc_super v51 = 0;
          goto LABEL_51;
        }
        if (v35)
        {
          id v49 = v31;
        }
        else
        {
          id v35 = *(id *)(a1 + 584);
          id v49 = *(id *)(a1 + 592);

          a1 = v69;
        }
        id v53 = v8;
        uint64_t v54 = *(void *)(a1 + 8);
        uint64_t v55 = a1;
        uint64_t v32 = v34;
        id v31 = v49;
        v73 = objc_msgSend_initWithFactory_queue_storageDelegate_storageDelegateQueue_otaProviderDelegate_otaProviderDelegateQueue_uniqueIdentifier_concurrentSubscriptionPoolSize_storageBehaviorConfiguration_startSuspended_(v53, v56, v55, v54, v36, v34, v35, v49, v33, v66, v30, started);
        uint64_t v19 = v35;

        if (!v73)
        {
          if (a5)
          {
            LODWORD(v101) = 47;
            *((void *)&v101 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Fram"
                                     "ework/CHIP/MTRDeviceControllerFactory.mm";
            int v102 = 539;
            sub_244B26908((uint64_t)MTRError, &v101);
            id v42 = (id)objc_claimAutoreleasedReturnValue();
            id v8 = 0;
            goto LABEL_47;
          }
          id v8 = 0;
          goto LABEL_50;
        }
        __n128 v57 = (os_unfair_lock_s *)(v69 + 548);
        os_unfair_lock_lock((os_unfair_lock_t)(v69 + 548));
        objc_msgSend_addObject_(*(void **)(v69 + 552), v58, (uint64_t)v73);
        os_unfair_lock_unlock((os_unfair_lock_t)(v69 + 548));
        uint64_t v95 = 0;
        v96 = &v95;
        uint64_t v97 = 0x3032000000;
        v98 = sub_2446D23D4;
        v99 = sub_2446D23E4;
        id v100 = 0;
        uint64_t v87 = 0;
        v88 = &v87;
        uint64_t v89 = 0x4812000000;
        v90 = sub_2446D2988;
        v91 = nullsub_14;
        v92 = "";
        long long v93 = xmmword_265193E78;
        uint64_t v94 = 551;
        sub_2446D7F64((uint64_t)buf);
        unint64_t v59 = *(NSObject **)(v69 + 8);
        block[0] = MEMORY[0x263EF8330];
        block[1] = 3221225472;
        block[2] = sub_2446D3F08;
        block[3] = &unk_265193E98;
        v84 = &v87;
        v85 = &v95;
        void block[4] = v69;
        v86 = buf;
        id v83 = v67;
        id v8 = v73;
        id v82 = v8;
        dispatch_sync(v59, block);
        if (v96[5])
        {
          os_unfair_lock_lock(v57);
          objc_storeStrong((id *)(v69 + 560), v73);
          os_unfair_lock_unlock(v57);
          char v61 = objc_msgSend_startup_(v8, v60, v96[5]);
          os_unfair_lock_lock(v57);
          long long v62 = *(void **)(v69 + 560);
          *(void *)(v69 + 560) = 0;

          os_unfair_lock_unlock(v57);
          if (v61)
          {
            long long v63 = sub_2446D45B8((id)v69, v8);

            if (a5 && !v63)
            {
              LODWORD(v75) = 172;
              *((void *)&v75 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Fra"
                                      "mework/CHIP/MTRDeviceControllerFactory.mm";
              int v76 = 624;
              sub_244B26908((uint64_t)MTRError, &v75);
              *a5 = (id)objc_claimAutoreleasedReturnValue();
            }
            id v8 = v63;
            objc_super v51 = v8;
            goto LABEL_71;
          }
          if (a5)
          {
            LODWORD(v77) = 172;
            *((void *)&v77 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Frame"
                                    "work/CHIP/MTRDeviceControllerFactory.mm";
            int v78 = 616;
            sub_244B26908((uint64_t)MTRError, &v77);
            id v64 = (id)objc_claimAutoreleasedReturnValue();
            goto LABEL_69;
          }
        }
        else
        {
          sub_2446D4428(v69, v8);
          if (a5)
          {
            long long v79 = *((_OWORD *)v88 + 3);
            uint64_t v80 = v88[8];
            sub_244B26908((uint64_t)MTRError, &v79);
            id v64 = (id)objc_claimAutoreleasedReturnValue();
LABEL_69:
            objc_super v51 = 0;
            *a5 = v64;
LABEL_71:

            sub_2446D8254((uint64_t)buf);
            _Block_object_dispose(&v87, 8);
            _Block_object_dispose(&v95, 8);

            goto LABEL_51;
          }
        }
        objc_super v51 = 0;
        goto LABEL_71;
      }
      uint64_t v33 = (void *)v16;
      uint64_t v44 = (void *)v71;
      if (v74)
      {
        long long v45 = sub_244CC8484(0, "NotSpecified");
        if (os_log_type_enabled(v45, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_impl(&dword_2446BD000, v45, OS_LOG_TYPE_DEFAULT, "Auto-starting Matter controller factory in per-controller storage mode", buf, 2u);
        }

        if (sub_244CC4E58(2u)) {
          sub_244CC4DE0(0, 2);
        }
        uint64_t v46 = sub_2446D3E44([MTRDeviceControllerFactoryParams alloc]);
        int v47 = sub_2446D26E0(v69, v46, 0, a5);

        if (!v47) {
          goto LABEL_50;
        }
        BOOL v40 = 0;
        BOOL v39 = *(unsigned char *)(v69 + 480) != 0;
        uint64_t v34 = (void *)v71;
        a1 = v69;
        id v35 = v19;
        __int16 v36 = v74;
        goto LABEL_29;
      }
    }
    else
    {
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) == 0)
      {
        uint64_t v43 = sub_244CC8484(0, "NotSpecified");
        if (os_log_type_enabled(v43, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)buf = 138412290;
          id v112 = v9;
          _os_log_impl(&dword_2446BD000, v43, OS_LOG_TYPE_ERROR, "Unknown kind of startup params: %@", buf, 0xCu);
        }

        if (sub_244CC4E58(1u)) {
          sub_244CC4DE0(0, 1);
        }
        if (a5)
        {
          LODWORD(v109) = 47;
          *((void *)&v109 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framew"
                                   "ork/CHIP/MTRDeviceControllerFactory.mm";
          int v110 = 483;
          sub_244B26908((uint64_t)MTRError, &v109);
          id v42 = (id)objc_claimAutoreleasedReturnValue();
          id v31 = 0;
          uint64_t v30 = 0;
          uint64_t v19 = 0;
          uint64_t v33 = 0;
          uint64_t v32 = 0;
          goto LABEL_46;
        }
        id v31 = 0;
        uint64_t v30 = 0;
        uint64_t v19 = 0;
        uint64_t v33 = 0;
        uint64_t v32 = 0;
        goto LABEL_49;
      }
      uint64_t v33 = objc_msgSend_uniqueIdentifier(v9, v37, v38);
      if (*(unsigned char *)(a1 + 648))
      {
        __int16 v36 = 0;
        uint64_t v34 = 0;
        id v35 = 0;
        char started = 0;
        uint64_t v30 = 0;
        uint64_t v66 = 0;
        id v31 = 0;
        goto LABEL_8;
      }
      id v31 = 0;
      uint64_t v30 = 0;
      uint64_t v19 = 0;
      uint64_t v44 = 0;
    }
    long long v50 = sub_244CC8484(0, "NotSpecified");
    uint64_t v32 = v44;
    if (os_log_type_enabled(v50, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_2446BD000, v50, OS_LOG_TYPE_ERROR, "Trying to start controller while Matter controller factory is not running", buf, 2u);
    }

    if (sub_244CC4E58(1u)) {
      sub_244CC4DE0(0, 1);
    }
    if (a5)
    {
      LODWORD(v107) = 3;
      *((void *)&v107 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/"
                               "CHIP/MTRDeviceControllerFactory.mm";
      int v108 = 498;
      sub_244B26908((uint64_t)MTRError, &v107);
      id v42 = (id)objc_claimAutoreleasedReturnValue();
      goto LABEL_46;
    }
LABEL_49:
    v74 = 0;
    goto LABEL_50;
  }
  objc_super v51 = 0;
LABEL_52:

  return v51;
}

void sub_2446D3C80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, void *a17, uint64_t a18, _Unwind_Exception *exception_objecta, void *a20,uint64_t a21,void *a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,void *a38,void *a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,char a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  sub_2446D8254((uint64_t)&STACK[0x200]);
  _Block_object_dispose(&a43, 8);
  _Block_object_dispose(&a52, 8);

  _Unwind_Resume(a1);
}

void *sub_2446D3E44(void *a1)
{
  if (!a1) {
    return 0;
  }
  v9.receiver = a1;
  v9.super_class = (Class)MTRDeviceControllerFactoryParams;
  uint64_t v1 = objc_msgSendSuper2(&v9, sel_init);
  if (v1)
  {
    int v2 = objc_alloc_init(MTRDummyStorage);
    uint64_t v3 = (void *)v1[2];
    v1[2] = v2;

    *((unsigned char *)v1 + 9) = 0;
    long long v4 = (void *)v1[3];
    void v1[3] = 0;

    uint64_t v5 = (void *)v1[4];
    v1[4] = 0;

    uint64_t v6 = (void *)v1[5];
    v1[5] = 0;

    uint64_t v7 = (void *)v1[6];
    v1[6] = 0;

    *((unsigned char *)v1 + 8) = 1;
  }
  return v1;
}

void sub_2446D3EF8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446D3F08(uint64_t *a1)
{
  uint64_t v46 = *MEMORY[0x263EF8340];
  sub_2446D2244(a1[4], a1[9], v44);
  uint64_t v2 = *(void *)(a1[7] + 8);
  *(_OWORD *)(v2 + 48) = *(_OWORD *)v44;
  *(void *)(v2 + 64) = v45;
  if (*(_DWORD *)(*(void *)(a1[7] + 8) + 48))
  {
    uint64_t v3 = sub_244CC8484(0, "NotSpecified");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      uint64_t v4 = *(void *)(a1[7] + 8);
      *(_OWORD *)uint64_t v44 = *(_OWORD *)(v4 + 48);
      uint64_t v45 = *(void *)(v4 + 64);
      *(_DWORD *)buf = 136315138;
      uint64_t v43 = sub_244CB7B34((const char **)v44, 1);
      _os_log_impl(&dword_2446BD000, v3, OS_LOG_TYPE_ERROR, "Can't initialize fabric table: %s", buf, 0xCu);
    }

    if (sub_244CC4E58(1u))
    {
      uint64_t v5 = *(void *)(a1[7] + 8);
      *(_OWORD *)uint64_t v44 = *(_OWORD *)(v5 + 48);
      uint64_t v45 = *(void *)(v5 + 64);
      sub_244CB7B34((const char **)v44, 1);
      sub_244CC4DE0(0, 1);
    }
  }
  else
  {
    uint64_t v6 = (*(void (**)(void))(a1[6] + 16))();
    uint64_t v7 = *(void *)(a1[8] + 8);
    id v8 = *(void **)(v7 + 40);
    *(void *)(v7 + 40) = v6;

    if (*(void *)(*(void *)(a1[8] + 8) + 40))
    {
      sub_2446D43BC((os_unfair_lock_s *)a1[4]);
      long long v39 = 0u;
      long long v40 = 0u;
      long long v37 = 0u;
      long long v38 = 0u;
      id v9 = (id)objc_claimAutoreleasedReturnValue();
      uint64_t v13 = objc_msgSend_countByEnumeratingWithState_objects_count_(v9, v10, (uint64_t)&v37, v41, 16);
      if (v13)
      {
        uint64_t v14 = *(void *)v38;
        while (2)
        {
          uint64_t v15 = 0;
          do
          {
            if (*(void *)v38 != v14) {
              objc_enumerationMutation(v9);
            }
            uint64_t v16 = *(void **)(*((void *)&v37 + 1) + 8 * v15);
            if (v16 != (void *)a1[5])
            {
              uint64_t v17 = objc_msgSend_uniqueIdentifier(*(void **)(*((void *)&v37 + 1) + 8 * v15), v11, v12);
              uint64_t v20 = objc_msgSend_uniqueIdentifier(*(void **)(*(void *)(a1[8] + 8) + 40), v18, v19);
              int isEqual = objc_msgSend_isEqual_(v17, v21, (uint64_t)v20);

              if (isEqual)
              {
                uint64_t v27 = sub_244CC8484(0, "NotSpecified");
                if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR))
                {
                  uint64_t v30 = objc_msgSend_uniqueIdentifier(v16, v28, v29);
                  *(_DWORD *)uint64_t v44 = 138412290;
                  *(void *)&v44[4] = v30;
                  _os_log_impl(&dword_2446BD000, v27, OS_LOG_TYPE_ERROR, "Already have running controller with uniqueIdentifier %@", v44, 0xCu);
                }
                if (sub_244CC4E58(1u))
                {
                  __int16 v36 = objc_msgSend_uniqueIdentifier(v16, v31, v32);
                  sub_244CC4DE0(0, 1);
                }
                uint64_t v33 = *(void *)(a1[7] + 8);
                *(_DWORD *)(v33 + 48) = 47;
                *(void *)(v33 + 56) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/F"
                                        "ramework/CHIP/MTRDeviceControllerFactory.mm";
                *(_DWORD *)(v33 + 64) = 578;
                uint64_t v34 = *(void *)(a1[8] + 8);
                id v35 = *(void **)(v34 + 40);
                *(void *)(v34 + 40) = 0;

                uint64_t v26 = v9;
                goto LABEL_27;
              }
            }
            ++v15;
          }
          while (v13 != v15);
          uint64_t v13 = objc_msgSend_countByEnumeratingWithState_objects_count_(v9, v11, (uint64_t)&v37, v41, 16);
          if (v13) {
            continue;
          }
          break;
        }
      }

      sub_244DA4478((unsigned __int8 *)a1[9], (unsigned char *)(a1[4] + 576), (uint64_t)v44);
      uint64_t v23 = *(void *)(a1[7] + 8);
      *(_OWORD *)(v23 + 48) = *(_OWORD *)v44;
      *(void *)(v23 + 64) = v45;
      if (*(_DWORD *)(*(void *)(a1[7] + 8) + 48))
      {
        uint64_t v24 = sub_244CC8484(0, "NotSpecified");
        if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
        {
          *(_WORD *)uint64_t v44 = 0;
          _os_log_impl(&dword_2446BD000, v24, OS_LOG_TYPE_ERROR, "Out of space in the fabric table", v44, 2u);
        }

        if (sub_244CC4E58(1u)) {
          sub_244CC4DE0(0, 1);
        }
        uint64_t v25 = *(void *)(a1[8] + 8);
        uint64_t v26 = *(void **)(v25 + 40);
        *(void *)(v25 + 40) = 0;
LABEL_27:
      }
    }
  }
}

void sub_2446D4350(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void **sub_2446D43BC(os_unfair_lock_s *a1)
{
  uint64_t v1 = (void **)a1;
  if (a1)
  {
    uint64_t v2 = a1 + 137;
    os_unfair_lock_lock(a1 + 137);
    uint64_t v1 = (void **)objc_msgSend_copy(v1[69], v3, v4);
    os_unfair_lock_unlock(v2);
  }

  return v1;
}

void sub_2446D4414(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2446D4428(uint64_t a1, void *a2)
{
  id v4 = a2;
  if (a1)
  {
    sub_2446D2004(a1);
    if (objc_msgSend_containsObject_(*(void **)(a1 + 552), v5, (uint64_t)v4))
    {
      os_unfair_lock_lock((os_unfair_lock_t)(a1 + 548));
      objc_storeStrong((id *)(a1 + 568), a2);
      objc_msgSend_removeObject_(*(void **)(a1 + 552), v6, (uint64_t)v4);
      os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 548));
      uint64_t v7 = *(NSObject **)(a1 + 8);
      uint64_t v12 = MEMORY[0x263EF8330];
      uint64_t v13 = 3221225472;
      uint64_t v14 = sub_2446D63D8;
      uint64_t v15 = &unk_265193DC8;
      id v8 = v4;
      id v16 = v8;
      uint64_t v17 = a1;
      dispatch_sync(v7, &v12);
      objc_msgSend_deinitFromFactory(v8, v9, v10, v12, v13, v14, v15);
    }
    else
    {
      uint64_t v11 = sub_244CC8484(0, "NotSpecified");
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_2446BD000, v11, OS_LOG_TYPE_ERROR, "Controller we don't know about shutting down", buf, 2u);
      }

      if (sub_244CC4E58(1u)) {
        sub_244CC4DE0(0, 1);
      }
    }
  }
}

void sub_2446D4594(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_2446D45B8(id a1, void *a2)
{
  uint64_t v41 = *MEMORY[0x263EF8340];
  id v3 = a2;
  if (a1)
  {
    sub_2446D2004((BOOL)a1);
    if (objc_msgSend_count(*((void **)a1 + 69), v4, v5) == 1)
    {
      uint64_t v8 = objc_msgSend_rootNodeEndpoint(MTRServerEndpoint, v6, v7);
      id v9 = (void *)*((void *)a1 + 75);
      *((void *)a1 + 75) = v8;

      uint64_t v10 = [MTRServerCluster alloc];
      uint64_t v12 = objc_msgSend_initWithClusterID_revision_(v10, v11, (uint64_t)&unk_26F9C8488, &unk_26F9C84A0);
      objc_msgSend_setAcceptedCommands_(v12, v13, (uint64_t)&unk_26F9CD7F8);
      objc_msgSend_setGeneratedCommands_(v12, v14, (uint64_t)&unk_26F9CD810);
      id v16 = objc_msgSend_accessGrantForAllNodesWithPrivilege_(MTRAccessGrant, v15, 3);
      objc_msgSend_addAccessGrant_(v12, v17, (uint64_t)v16);

      objc_msgSend_addServerCluster_(*((void **)a1 + 75), v18, (uint64_t)v12);
      if (sub_2446D5E3C((uint64_t)a1, *((void **)a1 + 75)))
      {
        objc_msgSend_associateWithController_(*((void **)a1 + 75), v19, 0);
        *(void *)id v31 = 0;
        uint64_t v32 = v31;
        uint64_t v33 = 0x4812000000;
        uint64_t v34 = sub_2446D2988;
        id v35 = nullsub_14;
        __int16 v36 = "";
        uint64_t v20 = *((void *)a1 + 1);
        block[0] = MEMORY[0x263EF8330];
        block[1] = 3221225472;
        block[2] = sub_2446D61F8;
        block[3] = &unk_265193EE8;
        void block[4] = a1;
        void block[5] = v31;
        dispatch_sync(v20, block);
        if (*((_DWORD *)v32 + 12))
        {
          uint64_t v21 = sub_244CC8484(0, "NotSpecified");
          if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
          {
            long long v37 = *((_OWORD *)v32 + 3);
            uint64_t v38 = *((void *)v32 + 8);
            uint64_t v22 = sub_244CB7B34((const char **)&v37, 1);
            *(_DWORD *)buf = 136315138;
            long long v40 = v22;
            _os_log_impl(&dword_2446BD000, v21, OS_LOG_TYPE_ERROR, "Failed to init provider delegate bridge: %s", buf, 0xCu);
          }

          if (sub_244CC4E58(1u))
          {
            long long v37 = *((_OWORD *)v32 + 3);
            uint64_t v38 = *((void *)v32 + 8);
            uint64_t v29 = sub_244CB7B34((const char **)&v37, 1);
            sub_244CC4DE0(0, 1);
          }
          objc_msgSend_shutdown(v3, v23, v24, v29);
          a1 = 0;
        }
        else
        {
          a1 = v3;
        }
        _Block_object_dispose(v31, 8);
      }
      else
      {
        uint64_t v25 = sub_244CC8484(0, "NotSpecified");
        if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR))
        {
          *(_WORD *)id v31 = 0;
          _os_log_impl(&dword_2446BD000, v25, OS_LOG_TYPE_ERROR, "Failed to add OTA endpoint on factory.  Why?", v31, 2u);
        }

        if (sub_244CC4E58(1u)) {
          sub_244CC4DE0(0, 1);
        }
        objc_msgSend_shutdown(v3, v26, v27);
        a1 = 0;
      }
    }
    else
    {
      a1 = v3;
    }
  }

  return a1;
}

void sub_2446D4914(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  uint64_t v12 = v11;

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2446D4B7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

char *sub_2446D4BC0(char *a1, void *a2, void *a3)
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  id v5 = a2;
  id v6 = a3;
  if (a1)
  {
    uint64_t v7 = (os_unfair_lock_s *)(a1 + 548);
    os_unfair_lock_lock((os_unfair_lock_t)a1 + 137);
    long long v23 = 0u;
    long long v24 = 0u;
    long long v21 = 0u;
    long long v22 = 0u;
    id v8 = *((id *)a1 + 69);
    uint64_t v11 = objc_msgSend_countByEnumeratingWithState_objects_count_(v8, v9, (uint64_t)&v21, v29, 16);
    if (v11)
    {
      uint64_t v12 = *(void *)v22;
      while (2)
      {
        for (uint64_t i = 0; i != v11; ++i)
        {
          if (*(void *)v22 != v12) {
            objc_enumerationMutation(v8);
          }
          uint64_t v14 = *(void **)(*((void *)&v21 + 1) + 8 * i);
          if (objc_msgSend_matchesPendingShutdownControllerWithOperationalCertificate_andRootCertificate_(v14, v10, (uint64_t)v5, v6))
          {
            uint64_t v15 = sub_244CC8484(0, "NotSpecified");
            if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)buf = 138412546;
              uint64_t v26 = a1;
              __int16 v27 = 2112;
              uint64_t v28 = v14;
              _os_log_impl(&dword_2446BD000, v15, OS_LOG_TYPE_DEFAULT, "%@ Found existing controller %@ that is pending shutdown and matching parameters, re-using it", buf, 0x16u);
            }

            if (sub_244CC4E58(2u))
            {
              uint64_t v19 = a1;
              uint64_t v20 = v14;
              sub_244CC4DE0(0, 2);
            }
            objc_msgSend_clearPendingShutdown(v14, v16, v17, v19, v20, (void)v21);
            a1 = v14;
            goto LABEL_16;
          }
        }
        uint64_t v11 = objc_msgSend_countByEnumeratingWithState_objects_count_(v8, v10, (uint64_t)&v21, v29, 16);
        if (v11) {
          continue;
        }
        break;
      }
    }
    a1 = 0;
LABEL_16:

    os_unfair_lock_unlock(v7);
  }

  return a1;
}

void sub_2446D4DBC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v3);
  _Unwind_Resume(a1);
}

id sub_2446D4DF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v36 = *MEMORY[0x263EF8340];
  uint64_t v34 = 0;
  if ((sub_2446D5228(*(void *)(a1 + 32), a2, *(void **)(a1 + 40), &v34) & 1) == 0)
  {
    uint64_t v20 = sub_244CC8484(0, "NotSpecified");
    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)uint64_t v28 = 0;
      _os_log_impl(&dword_2446BD000, v20, OS_LOG_TYPE_ERROR, "Can't start on existing fabric: fabric matching failed", v28, 2u);
    }

    if (sub_244CC4E58(1u)) {
      sub_244CC4DE0(0, 1);
    }
    uint64_t v17 = 0;
    *(_DWORD *)a4 = 172;
    *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "MTRDeviceControllerFactory.mm";
    int v21 = 659;
    goto LABEL_24;
  }
  uint64_t v7 = v34;
  if (!v34)
  {
    long long v22 = sub_244CC8484(0, "NotSpecified");
    if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)uint64_t v28 = 0;
      _os_log_impl(&dword_2446BD000, v22, OS_LOG_TYPE_ERROR, "Can't start on existing fabric: fabric not found", v28, 2u);
    }

    if (sub_244CC4E58(1u)) {
      sub_244CC4DE0(0, 1);
    }
    uint64_t v17 = 0;
    *(_DWORD *)a4 = 216;
    *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "MTRDeviceControllerFactory.mm";
    int v21 = 665;
LABEL_24:
    *(_DWORD *)(a4 + 16) = v21;
    goto LABEL_37;
  }
  sub_2446D43BC(*(os_unfair_lock_s **)(a1 + 32));
  long long v32 = 0u;
  long long v33 = 0u;
  long long v30 = 0u;
  long long v31 = 0u;
  id v8 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v11 = objc_msgSend_countByEnumeratingWithState_objects_count_(v8, v9, (uint64_t)&v30, v35, 16);
  if (v11)
  {
    uint64_t v12 = *(void *)v31;
LABEL_5:
    uint64_t v13 = 0;
    while (1)
    {
      if (*(void *)v31 != v12) {
        objc_enumerationMutation(v8);
      }
      uint64_t v14 = *(void **)(*((void *)&v30 + 1) + 8 * v13);
      char v29 = 1;
      if (!v14) {
        break;
      }
      objc_msgSend_isRunningOnFabric_fabricIndex_isRunning_(v14, v10, a2, *((unsigned __int8 *)v7 + 137), &v29);
      if (*(_DWORD *)v28)
      {
        uint64_t v26 = sub_244CC8484(0, "NotSpecified");
        if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR))
        {
          *(_WORD *)uint64_t v28 = 0;
          _os_log_impl(&dword_2446BD000, v26, OS_LOG_TYPE_ERROR, "Can't tell what fabric a controller is running on.  Not safe to start.", v28, 2u);
        }

        if (sub_244CC4E58(1u)) {
          sub_244CC4DE0(0, 1);
        }
        int v24 = 678;
        int v25 = 172;
        goto LABEL_35;
      }
      if (v29) {
        break;
      }
      if (v11 == ++v13)
      {
        uint64_t v11 = objc_msgSend_countByEnumeratingWithState_objects_count_(v8, v10, (uint64_t)&v30, v35, 16);
        if (v11) {
          goto LABEL_5;
        }
        goto LABEL_13;
      }
    }
    long long v23 = sub_244CC8484(0, "NotSpecified");
    if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)uint64_t v28 = 0;
      _os_log_impl(&dword_2446BD000, v23, OS_LOG_TYPE_ERROR, "Can't start on existing fabric: another controller is running on it", v28, 2u);
    }

    if (sub_244CC4E58(1u)) {
      sub_244CC4DE0(0, 1);
    }
    int v24 = 684;
    int v25 = 3;
LABEL_35:
    *(_DWORD *)a4 = v25;
    *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "MTRDeviceControllerFactory.mm";
    *(_DWORD *)(a4 + 16) = v24;

    uint64_t v17 = 0;
    goto LABEL_36;
  }
LABEL_13:

  uint64_t v15 = [MTRDeviceControllerStartupParamsInternal alloc];
  uint64_t v17 = objc_msgSend_initForExistingFabric_fabricIndex_keystore_advertiseOperational_params_(v15, v16, a2, *((unsigned __int8 *)v7 + 137), *(void *)(*(void *)(a1 + 32) + 504), *(unsigned __int8 *)(*(void *)(a1 + 32) + 544), *(void *)(a1 + 40));
  objc_msgSend_setProductAttestationAuthorityCertificates_(v17, v18, *(void *)(*(void *)(a1 + 32) + 528));
  objc_msgSend_setCertificationDeclarationCertificates_(v17, v19, *(void *)(*(void *)(a1 + 32) + 536));
LABEL_36:

LABEL_37:

  return v17;
}

void sub_2446D51E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2446D5228(uint64_t a1, uint64_t a2, void *a3, uint64_t **a4)
{
  uint64_t v50 = *MEMORY[0x263EF8340];
  id v7 = a3;
  if (a1)
  {
    sub_244D6A434("/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTRDeviceControllerFactory.mm", 791);
    v48[0] = &unk_26F954540;
    uint64_t v10 = objc_msgSend_rootCertificate(v7, v8, v9);
    BOOL v11 = v10 == 0;

    if (v11)
    {
      long long v46 = 0uLL;
      uint64_t v47 = 0;
      int v25 = objc_msgSend_nocSigner(v7, v12, v13);
      uint64_t v28 = (__SecKey *)objc_msgSend_publicKey(v25, v26, v27);
      sub_2446CD1AC(v28, (uint64_t)v48, (uint64_t)&v46);

      if (v46)
      {
        char v29 = sub_244CC8484(0, "NotSpecified");
        if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR))
        {
          long long v39 = v46;
          uint64_t v40 = v47;
          long long v30 = sub_244CB7B34((const char **)&v39, 1);
          *(_DWORD *)buf = 136315138;
          *(void *)&uint8_t buf[4] = v30;
          _os_log_impl(&dword_2446BD000, v29, OS_LOG_TYPE_ERROR, "Can't extract public key from MTRKeypair: %s", buf, 0xCu);
        }

        if (sub_244CC4E58(1u))
        {
          long long v37 = v46;
          uint64_t v38 = v47;
          sub_244CB7B34((const char **)&v37, 1);
          sub_244CC4DE0(0, 1);
        }
        goto LABEL_13;
      }
    }
    else
    {
      long long v46 = 0uLL;
      uint64_t v47 = 0;
      objc_msgSend_rootCertificate(v7, v12, v13);
      id v14 = objc_claimAutoreleasedReturnValue();
      uint64_t v17 = objc_msgSend_bytes(v14, v15, v16);
      uint64_t v20 = objc_msgSend_length(v14, v18, v19);
      sub_2446C1098(buf, v17, v20);

      *(_OWORD *)uint64_t v45 = *(_OWORD *)buf;
      sub_244CEF4D0(v45, (uint64_t)v48, (uint64_t)&v46);

      if (v46)
      {
        long long v23 = sub_244CC8484(0, "NotSpecified");
        if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
        {
          long long v43 = v46;
          uint64_t v44 = v47;
          int v24 = sub_244CB7B34((const char **)&v43, 1);
          *(_DWORD *)buf = 136315138;
          *(void *)&uint8_t buf[4] = v24;
          _os_log_impl(&dword_2446BD000, v23, OS_LOG_TYPE_ERROR, "Can't extract public key from root certificate: %s", buf, 0xCu);
        }

        if (sub_244CC4E58(1u))
        {
          long long v41 = v46;
          uint64_t v42 = v47;
          sub_244CB7B34((const char **)&v41, 1);
          sub_244CC4DE0(0, 1);
        }
        goto LABEL_13;
      }
    }
    long long v32 = objc_msgSend_fabricID(v7, v21, v22);
    uint64_t v35 = objc_msgSend_unsignedLongLongValue(v32, v33, v34);
    *a4 = sub_244D9E84C(a2, (uint64_t)v48, v35);

    uint64_t v31 = 1;
    goto LABEL_15;
  }
LABEL_13:
  uint64_t v31 = 0;
LABEL_15:

  return v31;
}

void sub_2446D5548(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446D585C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_2446D5890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v19 = 0;
  if ((sub_2446D5228(*(void *)(a1 + 32), a2, *(void **)(a1 + 40), &v19) & 1) == 0)
  {
    uint64_t v10 = sub_244CC8484(0, "NotSpecified");
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_2446BD000, v10, OS_LOG_TYPE_ERROR, "Can't start on new fabric: fabric matching failed", buf, 2u);
    }

    int v8 = 731;
    int v9 = 172;
    if (!sub_244CC4E58(1u)) {
      goto LABEL_11;
    }
LABEL_10:
    sub_244CC4DE0(0, 1);
LABEL_11:
    BOOL v11 = 0;
    *(_DWORD *)a4 = v9;
    *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "MTRDeviceControllerFactory.mm";
    *(_DWORD *)(a4 + 16) = v8;
    goto LABEL_12;
  }
  if (v19)
  {
    id v7 = sub_244CC8484(0, "NotSpecified");
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)uint64_t v17 = 0;
      _os_log_impl(&dword_2446BD000, v7, OS_LOG_TYPE_ERROR, "Can't start on new fabric that matches existing fabric", v17, 2u);
    }

    int v8 = 737;
    int v9 = 3;
    if (!sub_244CC4E58(1u)) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  uint64_t v13 = [MTRDeviceControllerStartupParamsInternal alloc];
  BOOL v11 = objc_msgSend_initForNewFabric_keystore_advertiseOperational_params_(v13, v14, a2, *(void *)(*(void *)(a1 + 32) + 504), *(unsigned __int8 *)(*(void *)(a1 + 32) + 544), *(void *)(a1 + 40));
  objc_msgSend_setProductAttestationAuthorityCertificates_(v11, v15, *(void *)(*(void *)(a1 + 32) + 528));
  objc_msgSend_setCertificationDeclarationCertificates_(v11, v16, *(void *)(*(void *)(a1 + 32) + 536));
LABEL_12:

  return v11;
}

void sub_2446D5A40(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2446D5AC4(uint64_t a1)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  BOOL v2 = *(unsigned char *)(*(void *)(a1 + 32) + 648) == 0;
  id v3 = sub_244CC8484(0, "NotSpecified");
  id v4 = v3;
  if (v2)
  {
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_2446BD000, v4, OS_LOG_TYPE_ERROR, "Can't pre-warm, Matter controller factory is not running", buf, 2u);
    }

    if (sub_244CC4E58(1u)) {
      sub_244CC4DE0(0, 1);
    }
    int v5 = 3;
  }
  else
  {
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_2446BD000, v4, OS_LOG_TYPE_DEFAULT, "Pre-warming commissioning session", buf, 2u);
    }

    if (sub_244CC4E58(2u)) {
      sub_244CC4DE0(0, 2);
    }
    sub_244DE6798(*(void *)(*(void *)(a1 + 32) + 16), buf);
    if (qword_26B0D43B0 != -1) {
      dispatch_once_f(&qword_26B0D43B0, &byte_26B0D4370, (dispatch_function_t)sub_2446D7DB8);
    }
    sub_244D77E00(*(void *)(a1 + 32) + 640, 1, buf);
    int v5 = *(_DWORD *)buf;
    long long v14 = v10;
    int v15 = v11;
    if (*(_DWORD *)buf)
    {
      id v6 = sub_244CC8484(0, "NotSpecified");
      if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = v5;
        long long v10 = v14;
        int v11 = v15;
        id v7 = sub_244CB7B34((const char **)buf, 1);
        *(_DWORD *)uint64_t v12 = 136315138;
        uint64_t v13 = v7;
        _os_log_impl(&dword_2446BD000, v6, OS_LOG_TYPE_ERROR, "Pre-warming failed: %s", v12, 0xCu);
      }

      if (sub_244CC4E58(1u))
      {
        *(_DWORD *)buf = v5;
        long long v10 = v14;
        int v11 = v15;
        sub_244CB7B34((const char **)buf, 1);
        sub_244CC4DE0(0, 1);
      }
      sub_244DE674C(*(void *)(*(void *)(a1 + 32) + 16));
    }
  }
  *(_DWORD *)buf = 2;
  *(void *)((char *)&v10 + 4) = "dwnfw_prewarm_commissioning";
  HIDWORD(v10) = v5;
  LOBYTE(v11) = 3;
  return sub_244D7E78C((uint64_t)buf);
}

void sub_2446D5D6C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL sub_2446D5D84(BOOL result)
{
  if (result)
  {
    uint64_t v1 = result;
    sub_244D6A434("/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTRDeviceControllerFactory.mm", 774);
    BOOL v2 = sub_244CC8484(0, "NotSpecified");
    if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v3 = 0;
      _os_log_impl(&dword_2446BD000, v2, OS_LOG_TYPE_DEFAULT, "Pre-warming done", v3, 2u);
    }

    if (sub_244CC4E58(2u)) {
      sub_244CC4DE0(0, 2);
    }
    return sub_244DE674C(*(void *)(v1 + 16));
  }
  return result;
}

uint64_t sub_2446D5E3C(uint64_t a1, void *a2)
{
  uint64_t v55 = *MEMORY[0x263EF8340];
  id v3 = a2;
  if (!a1)
  {
LABEL_20:
    uint64_t v32 = 0;
    goto LABEL_21;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 632));
  if (objc_msgSend_count(*(void **)(a1 + 624), v4, v5) == 254)
  {
    os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 632));
    id v6 = sub_244CC8484(0, "NotSpecified");
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      int v9 = objc_msgSend_endpointID(v3, v7, v8);
      *(_DWORD *)buf = 67109376;
      LOWORD(v52) = objc_msgSend_unsignedLongLongValue(v9, v10, v11);
      int v52 = (unsigned __int16)v52;
      __int16 v53 = 1024;
      int v54 = 254;
      _os_log_impl(&dword_2446BD000, v6, OS_LOG_TYPE_ERROR, "Can't add a server endpoint with endpoint ID %u, because we already have %u endpoints defined", buf, 0xEu);
    }
    if (sub_244CC4E58(1u))
    {
      long long v14 = objc_msgSend_endpointID(v3, v12, v13);
      objc_msgSend_unsignedLongLongValue(v14, v15, v16);
      sub_244CC4DE0(0, 1);
    }
    goto LABEL_20;
  }
  long long v48 = 0u;
  long long v49 = 0u;
  long long v46 = 0u;
  long long v47 = 0u;
  id v17 = *(id *)(a1 + 624);
  uint64_t v21 = objc_msgSend_countByEnumeratingWithState_objects_count_(v17, v18, (uint64_t)&v46, v50, 16);
  if (v21)
  {
    uint64_t v22 = *(void *)v47;
    while (2)
    {
      for (uint64_t i = 0; i != v21; ++i)
      {
        if (*(void *)v47 != v22) {
          objc_enumerationMutation(v17);
        }
        int v24 = *(void **)(*((void *)&v46 + 1) + 8 * i);
        int v25 = objc_msgSend_endpointID(v3, v19, v20);
        uint64_t v28 = objc_msgSend_endpointID(v24, v26, v27);
        char isEqual = objc_msgSend_isEqual_(v25, v29, (uint64_t)v28);

        if (isEqual)
        {

          os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 632));
          long long v33 = sub_244CC8484(0, "NotSpecified");
          if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR))
          {
            uint64_t v36 = objc_msgSend_endpointID(v3, v34, v35);
            unsigned __int16 v39 = objc_msgSend_unsignedLongLongValue(v36, v37, v38);
            *(_DWORD *)buf = 67109120;
            int v52 = v39;
            _os_log_impl(&dword_2446BD000, v33, OS_LOG_TYPE_ERROR, "Trying to add a server endpoint with endpoint ID %u, which already exists", buf, 8u);
          }
          if (sub_244CC4E58(1u))
          {
            uint64_t v42 = objc_msgSend_endpointID(v3, v40, v41);
            objc_msgSend_unsignedLongLongValue(v42, v43, v44);
            sub_244CC4DE0(0, 1);
          }
          goto LABEL_20;
        }
      }
      uint64_t v21 = objc_msgSend_countByEnumeratingWithState_objects_count_(v17, v19, (uint64_t)&v46, v50, 16);
      if (v21) {
        continue;
      }
      break;
    }
  }

  objc_msgSend_addObject_(*(void **)(a1 + 624), v31, (uint64_t)v3);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 632));
  uint64_t v32 = 1;
LABEL_21:

  return v32;
}

void sub_2446D6160(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446D61F8(uint64_t a1, const char *a2, uint64_t a3)
{
}

void sub_2446D62B8(_Unwind_Exception *a1)
{
  MEMORY[0x245695FA0](v1, 0x81C40B8603338);
  _Unwind_Resume(a1);
}

uint64_t sub_2446D62DC(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    __n128 result = sub_244D6A434("/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTRDeviceControllerFactory.mm", 875);
    if (*(unsigned char *)(v1 + 544))
    {
      uint64_t v2 = *(void *)(*(void *)(v1 + 16) + 8);
      if (v2)
      {
        if (!*(unsigned char *)(v2 + 188))
        {
          id v3 = sub_2446D634C();
          return sub_244E1C208((uint64_t)v3);
        }
      }
    }
  }
  return result;
}

uint64_t *sub_2446D634C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_268EB8428, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_268EB8428))
  {
    qword_268EB83F8 = (uint64_t)&unk_26F95DE10;
    dword_268EB8400 = 0;
    word_268EB8404 = 0;
    qword_268EB8408 = 0;
    unk_268EB8410 = 0;
    qword_268EB8418 = 363730340;
    byte_268EB8420 = 0;
    __cxa_guard_release(&qword_268EB8428);
  }
  return &qword_268EB83F8;
}

void sub_2446D63D8(uint64_t a1, const char *a2, uint64_t a3)
{
  if (objc_msgSend_fabricIndex(*(void **)(a1 + 32), a2, a3)) {
    (*(void (**)(void *__return_ptr))(*(void *)(*(void *)(a1 + 40) + 104) + 152))(v22);
  }
  uint64_t v8 = objc_msgSend_count(*(void **)(*(void *)(a1 + 40) + 552), v4, v5);
  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 608);
  if (v8)
  {
    if (v9) {
      sub_24479ACEC(v9, *(void **)(a1 + 32));
    }
  }
  else
  {
    if (v9)
    {
      sub_24479ABEC();
      uint64_t v10 = *(void *)(a1 + 40);
      uint64_t v11 = *(void *)(v10 + 608);
      *(void *)(v10 + 608) = 0;
      if (v11) {
        (*(void (**)(uint64_t))(*(void *)v11 + 32))(v11);
      }
    }
    uint64_t v12 = *(void **)(*(void *)(a1 + 40) + 600);
    if (v12)
    {
      objc_msgSend_unregisterMatterEndpoint(v12, v6, v7);
      objc_msgSend_invalidate(*(void **)(*(void *)(a1 + 40) + 600), v13, v14);
      sub_2446D6520(*(void *)(a1 + 40), *(void **)(*(void *)(a1 + 40) + 600));
      uint64_t v15 = *(void *)(a1 + 40);
      uint64_t v16 = *(void **)(v15 + 600);
      *(void *)(v15 + 600) = 0;
    }
  }
  id v17 = *(void **)(*(void *)(a1 + 40) + 616);
  if (v17) {
    objc_msgSend_abortDownloadsForController_(v17, v6, *(void *)(a1 + 32));
  }
  objc_msgSend_shutDownCppController(*(void **)(a1 + 32), v6, v7);
  uint64_t v18 = *(void *)(a1 + 40);
  uint64_t v19 = *(void **)(v18 + 568);
  *(void *)(v18 + 568) = 0;

  uint64_t v20 = *(void *)(a1 + 40);
  uint64_t v21 = *(void **)(v20 + 560);
  if (v21 == *(void **)(a1 + 32))
  {
    *(void *)(v20 + 560) = 0;
  }
}

void sub_2446D6520(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    id v5 = v3;
    os_unfair_lock_lock((os_unfair_lock_t)(a1 + 632));
    objc_msgSend_removeObject_(*(void **)(a1 + 624), v4, (uint64_t)v5);
    os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 632));
    id v3 = v5;
  }
}

void sub_2446D6588(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  os_unfair_lock_unlock(v10);

  _Unwind_Resume(a1);
}

unsigned __int8 *sub_2446D65A4(unsigned __int8 *a1, int a2, int a3, int a4)
{
  id v4 = a1;
  uint64_t v28 = *MEMORY[0x263EF8340];
  if (a1)
  {
    sub_244D6A434("/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTRDeviceControllerFactory.mm", 964);
    uint64_t v7 = sub_2446D43BC((os_unfair_lock_s *)v4);
    os_unfair_lock_lock((os_unfair_lock_t)v4 + 137);
    id v8 = *((id *)v4 + 70);
    id v9 = *((id *)v4 + 71);
    os_unfair_lock_unlock((os_unfair_lock_t)v4 + 137);
    long long v25 = 0u;
    long long v26 = 0u;
    long long v23 = 0u;
    long long v24 = 0u;
    id v10 = v7;
    uint64_t v14 = objc_msgSend_countByEnumeratingWithState_objects_count_(v10, v11, (uint64_t)&v23, v27, 16);
    if (v14)
    {
      uint64_t v15 = *(void *)v24;
      while (2)
      {
        for (uint64_t i = 0; i != v14; ++i)
        {
          if (*(void *)v24 != v15) {
            objc_enumerationMutation(v10);
          }
          id v17 = *(void **)(*((void *)&v23 + 1) + 8 * i);
          if (objc_msgSend_fabricIndex(v17, v12, v13) == a2)
          {
            id v4 = v17;

            goto LABEL_21;
          }
        }
        uint64_t v14 = objc_msgSend_countByEnumeratingWithState_objects_count_(v10, v12, (uint64_t)&v23, v27, 16);
        if (v14) {
          continue;
        }
        break;
      }
    }

    if (a3 && v8 && v4[576] == a2)
    {
      uint64_t v20 = (unsigned __int8 *)v8;
    }
    else
    {
      id v4 = 0;
      if (!a4 || !v9) {
        goto LABEL_21;
      }
      if (objc_msgSend_fabricIndex(v9, v18, v19) != a2)
      {
        id v4 = 0;
        goto LABEL_21;
      }
      uint64_t v20 = (unsigned __int8 *)v9;
    }
    id v4 = v20;
LABEL_21:
  }

  return v4;
}

void sub_2446D6784(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

unsigned __int8 *sub_2446D67B8(unsigned __int8 *a1, int a2)
{
  if (a1)
  {
    sub_2446D65A4(a1, a2, 1, 1);
    a1 = (unsigned __int8 *)objc_claimAutoreleasedReturnValue();
    uint64_t v2 = vars8;
  }
  return a1;
}

void sub_2446D68FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446D6C34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  _Unwind_Resume(a1);
}

void sub_2446D6CC0(uint64_t a1, void *a2, void *a3, uint64_t a4, void *a5, void *a6, double a7)
{
  id v23 = a2;
  id v13 = a3;
  id v14 = a5;
  id v15 = a6;
  if (a1)
  {
    sub_244D6A434("/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTRDeviceControllerFactory.mm", 1090);
    id v17 = *(void **)(a1 + 616);
    if (!v17)
    {
      uint64_t v18 = objc_alloc_init(MTRDiagnosticLogsDownloader);
      uint64_t v19 = *(void **)(a1 + 616);
      *(void *)(a1 + 616) = v18;

      uint64_t v20 = *(void *)(*(void *)(*(void *)(a1 + 16) + 8) + 80);
      *(void *)(v20 + 24) = objc_msgSend_getBridge(*(void **)(a1 + 616), v21, v22);
      id v17 = *(void **)(a1 + 616);
    }
    objc_msgSend_downloadLogFromNodeWithID_controller_type_timeout_queue_completion_(v17, v16, (uint64_t)v23, v13, a4, v14, v15, a7);
  }
}

void sub_2446D6DC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2446D6DE4(os_unfair_lock_s *a1, uint64_t *a2)
{
  uint64_t v41 = *MEMORY[0x263EF8340];
  if (a1)
  {
    sub_244D6A434("/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTRDeviceControllerFactory.mm", 1108);
    sub_2446D43BC(a1);
    long long v32 = 0u;
    long long v33 = 0u;
    long long v30 = 0u;
    long long v31 = 0u;
    id v4 = (id)objc_claimAutoreleasedReturnValue();
    uint64_t v8 = objc_msgSend_countByEnumeratingWithState_objects_count_(v4, v5, (uint64_t)&v30, v40, 16);
    if (v8)
    {
      uint64_t v9 = *(void *)v31;
      do
      {
        for (uint64_t i = 0; i != v8; ++i)
        {
          if (*(void *)v31 != v9) {
            objc_enumerationMutation(v4);
          }
          uint64_t v11 = *(void **)(*((void *)&v30 + 1) + 8 * i);
          uint64_t v12 = objc_msgSend_compressedFabricID(v11, v6, v7);
          id v15 = v12;
          if (v12 && objc_msgSend_unsignedLongLongValue(v12, v13, v14) == a2[1])
          {
            uint64_t v16 = sub_244CC8484(9u, "Controller");
            if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
            {
              int v19 = objc_msgSend_fabricIndex(v11, v17, v18);
              uint64_t v20 = *a2;
              unint64_t v21 = HIDWORD(*a2);
              *(_DWORD *)buf = 67109632;
              int v35 = v19;
              __int16 v36 = 1024;
              int v37 = v21;
              __int16 v38 = 1024;
              int v39 = v20;
              _os_log_impl(&dword_2446BD000, v16, OS_LOG_TYPE_DEFAULT, "Notifying controller at fabric index %u about new operational node 0x%08X%08X", buf, 0x14u);
            }

            if (sub_244CC4E58(2u))
            {
              unsigned int v24 = objc_msgSend_fabricIndex(v11, v22, v23);
              unint64_t v28 = HIDWORD(*a2);
              uint64_t v29 = *a2;
              uint64_t v27 = v24;
              sub_244CC4DE0(9u, 2);
            }
            long long v25 = objc_msgSend_numberWithUnsignedLongLong_(NSNumber, v22, *a2, v27, v28, v29);
            objc_msgSend_operationalInstanceAdded_(v11, v26, (uint64_t)v25);
          }
        }
        uint64_t v8 = objc_msgSend_countByEnumeratingWithState_objects_count_(v4, v6, (uint64_t)&v30, v40, 16);
      }
      while (v8);
    }
  }
}

void sub_2446D701C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_2446D706C(char *a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  if (a1)
  {
    sub_2446D2004((BOOL)a1);
    uint64_t v11 = objc_msgSend_operationalCertificate(v8, v9, v10);
    uint64_t v14 = objc_msgSend_rootCertificate(v8, v12, v13);
    id v15 = sub_2446D4BC0(a1, v11, v14);

    if (v15)
    {
      id v16 = v15;
    }
    else
    {
      v18[0] = MEMORY[0x263EF8330];
      v18[1] = 3221225472;
      v18[2] = sub_2446D7200;
      v18[3] = &unk_265193EC0;
      v18[4] = a1;
      id v19 = v8;
      sub_2446D30C8((uint64_t)a1, v7, v19, v18, a4);
      id v16 = (id)objc_claimAutoreleasedReturnValue();
    }
  }
  else
  {
    id v16 = 0;
  }

  return v16;
}

void sub_2446D71C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

id sub_2446D7200(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v9 = a3;
  if (*(unsigned char *)(*(void *)(a1 + 32) + 544)) {
    uint64_t shouldAdvertiseOperational = objc_msgSend_shouldAdvertiseOperational(*(void **)(a1 + 40), v7, v8);
  }
  else {
    uint64_t shouldAdvertiseOperational = 0;
  }
  uint64_t v11 = [MTRDeviceControllerStartupParamsInternal alloc];
  uint64_t v13 = objc_msgSend_initForNewController_fabricTable_keystore_advertiseOperational_params_error_(v11, v12, (uint64_t)v9, a2, *(void *)(*(void *)(a1 + 32) + 504), shouldAdvertiseOperational, *(void *)(a1 + 40), a4);
  id v16 = v13;
  if (v13)
  {
    id v17 = objc_msgSend_productAttestationAuthorityCertificates(v13, v14, v15);

    if (!v17) {
      objc_msgSend_setProductAttestationAuthorityCertificates_(v16, v18, *(void *)(*(void *)(a1 + 32) + 528));
    }
    uint64_t v20 = objc_msgSend_certificationDeclarationCertificates(v16, v18, v19);

    if (!v20) {
      objc_msgSend_setCertificationDeclarationCertificates_(v16, v21, *(void *)(*(void *)(a1 + 32) + 536));
    }
  }

  return v16;
}

void sub_2446D72F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446D7318(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a2;
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  if (a1)
  {
    sub_2446D2004(a1);
    uint64_t v13 = *(NSObject **)(a1 + 8);
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = sub_2446D7448;
    block[3] = &unk_265193F10;
    id v15 = v9;
    id v16 = v10;
    id v17 = v11;
    id v18 = v12;
    uint64_t v19 = a1;
    dispatch_async(v13, block);
  }
}

void sub_2446D742C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2446D7448(void *a1, const char *a2, uint64_t a3)
{
  if (!a1[4] && !a1[5] && !a1[6] && !a1[7])
  {
    v17[0] = 0;
    sub_244D69744(v17);
    v17[0] = 0;
    uint64_t result = sub_244D69F90((uint64_t)v17);
    if ((result & 1) == 0) {
      return result;
    }
    return sub_2446D62DC(a1[8]);
  }
  id v4 = (void *)a1[7];
  if (v4)
  {
    v17[0] = 1;
    int v18 = objc_msgSend_unsignedLongValue(v4, a2, a3);
    sub_244D69744(v17);
  }
  sub_244D6A044((uint64_t)v17);
  unint64_t v5 = sub_244D6A0B8();
  if (v17[0])
  {
    uint64_t v8 = sub_2446DC5A0(v17);
    LOWORD(v9) = *((_WORD *)v8 + 5);
    __int16 v10 = *((_WORD *)v8 + 4);
    int v11 = *(_DWORD *)v8;
    LODWORD(v12) = *((_DWORD *)v8 + 1);
  }
  else
  {
    int v11 = v5;
    __int16 v10 = (__int16)v6;
    unint64_t v12 = HIDWORD(v5);
    unint64_t v9 = (unint64_t)v6 >> 16;
  }
  uint64_t v13 = (void *)a1[4];
  if (v13) {
    int v11 = objc_msgSend_unsignedLongValue(v13, v6, v7);
  }
  uint64_t v14 = (void *)a1[5];
  if (v14) {
    LODWORD(v12) = objc_msgSend_unsignedLongValue(v14, v6, v7);
  }
  id v15 = (void *)a1[6];
  if (v15) {
    __int16 v10 = objc_msgSend_unsignedLongValue(v15, v6, v7);
  }
  v17[0] = 1;
  int v18 = v11;
  int v19 = v12;
  __int16 v20 = v10;
  __int16 v21 = v9;
  uint64_t result = sub_244D69F90((uint64_t)v17);
  if (result) {
    return sub_2446D62DC(a1[8]);
  }
  return result;
}

uint64_t sub_2446D7574(uint64_t result)
{
  if (result) {
    return *(void *)(result + 488);
  }
  return result;
}

uint64_t sub_2446D7580(uint64_t a1)
{
  if (a1) {
    return a1 + 104;
  }
  else {
    return 0;
  }
}

uint64_t sub_2446D7590(uint64_t result)
{
  if (result) {
    return *(void *)(result + 520);
  }
  return result;
}

uint64_t sub_2446D759C(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    sub_244D6A434("/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTRDeviceControllerFactory.mm", 1234);
    uint64_t v2 = *(void *)(v1 + 16);
    if (v2 && (uint64_t v3 = *(void *)(v2 + 8)) != 0) {
      return *(void *)(v3 + 72);
    }
    else {
      return 0;
    }
  }
  return result;
}

uint64_t sub_2446D7728(uint64_t a1)
{
  *(void *)a1 = &unk_26F9440D0;
  sub_2446D9D94(a1 + 32, *(char **)(a1 + 40));
  sub_2446D9DF8(a1 + 8, *(void **)(a1 + 16));
  return a1;
}

void sub_2446D7924(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446D7A48(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446D7AAC()
{
  uint64_t v0 = objc_alloc_init(MTRControllerFactory);
  uint64_t v1 = (void *)qword_268EBE8F8;
  qword_268EBE8F8 = (uint64_t)v0;
}

void sub_2446D7B44(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446D7BB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2446D7C34(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446D7CC0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void MTRSetMessageReliabilityParameters(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v11 = a1;
  id v6 = a3;
  id v7 = a4;
  __int16 v10 = objc_msgSend_sharedInstance(MTRDeviceControllerFactory, v8, v9);
  sub_2446D7318((uint64_t)v10, v11, v6, v6, v7);
}

void sub_2446D7D8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v13 = v12;

  _Unwind_Resume(a1);
}

void sub_2446D7DBC(uint64_t a1)
{
  sub_2446D7DFC(a1);
  *(void *)(a1 + 32) = 0;
  uint64_t v2 = *(void **)(a1 + 24);
  if (v2)
  {
    j__free(v2);
    *(void *)(a1 + 24) = 0;
  }
  *(unsigned char *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 72) = 0;
}

void sub_2446D7DFC(uint64_t a1)
{
  *(void *)(a1 + 48) = 0;
  uint64_t v2 = *(void **)(a1 + 40);
  if (v2)
  {
    j__free(v2);
    *(void *)(a1 + 40) = 0;
  }
  *(void *)(a1 + 64) = 0;
  uint64_t v3 = *(void **)(a1 + 56);
  if (v3)
  {
    j__free(v3);
    *(void *)(a1 + 56) = 0;
  }
  if (!*(void *)(a1 + 24)) {
    *(unsigned char *)(a1 + 16) = 0;
  }
  *(unsigned char *)(a1 + 72) &= 0xFAu;
}

uint64_t sub_2446D7E60(uint64_t a1)
{
  if (*(void *)(a1 + 8))
  {
    sub_2446D7DBC(a1);
    *(void *)(a1 + 8) = 0;
  }
  *(void *)(a1 + 64) = 0;
  sub_2446D7EC0((void **)(a1 + 56));
  *(void *)(a1 + 48) = 0;
  sub_2446D7EC0((void **)(a1 + 40));
  *(void *)(a1 + 32) = 0;
  sub_2446D7EC0((void **)(a1 + 24));
  return a1;
}

void **sub_2446D7EC0(void **a1)
{
  uint64_t v2 = *a1;
  if (v2)
  {
    j__free(v2);
    *a1 = 0;
  }
  return a1;
}

void sub_2446D7EF8(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 33))
  {
    uint64_t v2 = *(void (****)(void))(a1 + 24);
    if (v2)
    {
      (**v2)(*(void *)(a1 + 24));
      j__free(v2);
    }
  }
  *(void *)(a1 + 24) = 0;
  *(_WORD *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 16) = 0;
}

uint64_t sub_2446D7F64(uint64_t a1)
{
  uint64_t v2 = 0;
  uint64_t v3 = (void *)(a1 + 2432);
  do
  {
    uint64_t v4 = a1 + v2;
    *(void *)uint64_t v4 = 0;
    *(void *)(v4 + 8) = 0;
    *(void *)(v4 + 16) = 0;
    *(void *)(v4 + 24) = &unk_26F954540;
    *(_OWORD *)(v4 + 104) = 0u;
    *(_OWORD *)(v4 + 120) = 0u;
    *(_WORD *)(v4 + 136) = 0;
    *(_DWORD *)(v4 + 138) = 16842751;
    *(void *)(v4 + 144) = 0;
    sub_2446D80B8(a1 + v2);
    v2 += 152;
  }
  while (v2 != 2432);
  *uint64_t v3 = 0;
  v3[1] = 0;
  v3[2] = 0;
  *(void *)(a1 + 2456) = &unk_26F954540;
  *(_WORD *)(a1 + 2568) = 0;
  *(_OWORD *)(a1 + 2536) = 0u;
  *(_OWORD *)(a1 + 2552) = 0u;
  *(_DWORD *)(a1 + 2570) = 16842751;
  *(void *)(a1 + 2576) = 0;
  sub_2446D80B8((uint64_t)v3);
  *(void *)(a1 + 2624) = 0;
  *(unsigned char *)(a1 + 2632) = 0;
  *(unsigned char *)(a1 + 2640) = 0;
  *(unsigned char *)(a1 + 2642) = 0;
  *(_WORD *)(a1 + 2644) = 0;
  *(_WORD *)(a1 + 2616) = 0;
  *(_OWORD *)(a1 + 2584) = 0u;
  *(_OWORD *)(a1 + 2600) = 0u;
  return a1;
}

void sub_2446D806C(_Unwind_Exception *a1)
{
  for (uint64_t i = 2280; i != -152; i -= 152)
    sub_2446D80B8(v1 + i);
  _Unwind_Resume(a1);
}

void sub_2446D80B8(uint64_t a1)
{
  *(unsigned char *)(a1 + 137) = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = 0;
  *(_WORD *)(a1 + 138) = -1;
  *(unsigned char *)(a1 + 104) = 0;
  if (!*(unsigned char *)(a1 + 140))
  {
    uint64_t v2 = *(void (****)(void))(a1 + 144);
    if (v2)
    {
      (**v2)(*(void *)(a1 + 144));
      j__free(v2);
    }
  }
  *(void *)(a1 + 144) = 0;
  *(_WORD *)(a1 + 140) = 256;
  *(unsigned char *)(a1 + 137) = 0;
  *(void *)a1 = 0;
}

void *sub_2446D8144@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  if (*((unsigned char *)result + 2569) && (unint64_t)(result[304] - 1) <= 0xFFFFFFEFFFFFFFFELL)
  {
    uint64_t v2 = result + 304;
    if ((~*((unsigned __int16 *)result + 1322) & 5) != 0) {
      uint64_t v2 = 0;
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v2;
  *(_OWORD *)(a2 + 16) = xmmword_244E79D60;
  if (!*((unsigned char *)result + 137) || (unint64_t)(*result - 1) >= 0xFFFFFFEFFFFFFFFFLL) {
    return sub_2446D81B8((void *)a2);
  }
  return result;
}

void *sub_2446D81B8(void *result)
{
  unint64_t v2 = result[2];
  unint64_t v1 = result[3];
  do
  {
    if (v2 < v1) {
      result[2] = ++v2;
    }
  }
  while (v2 != v1
       && (!*(unsigned char *)(*result + 152 * v2 + 137)
        || (unint64_t)(*(void *)(*result + 152 * v2) - 1) > 0xFFFFFFEFFFFFFFFELL));
  return result;
}

uint64_t sub_2446D8208(uint64_t *a1)
{
  uint64_t v2 = a1[1];
  uint64_t v1 = a1[2];
  uint64_t v3 = *a1;
  uint64_t result = *a1 + 152 * v1;
  if (v2
    && *(unsigned char *)(v2 + 137)
    && (unint64_t)(*(void *)v2 - 1) <= 0xFFFFFFEFFFFFFFFELL
    && *(unsigned __int8 *)(v3 + 152 * v1 + 137) == *(unsigned __int8 *)(v2 + 137))
  {
    return v2;
  }
  return result;
}

uint64_t sub_2446D8254(uint64_t a1)
{
  sub_2446D80B8(a1 + 2432);
  for (uint64_t i = 2280; i != -152; i -= 152)
    sub_2446D80B8(a1 + i);
  return a1;
}

uint64_t *sub_2446D82A0(uint64_t *a1)
{
  *a1 = (uint64_t)&unk_26F957618;
  uint64_t v2 = a1 + 5;
  sub_2446D8314(a1 + 40);
  sub_2446D8538(a1 + 33);
  sub_2446D8680(a1 + 26);
  sub_2446D87C8(a1 + 19);
  sub_2446D8910(a1 + 12);
  sub_2446D8A58(v2);
  return a1;
}

uint64_t *sub_2446D8314(uint64_t *result)
{
  uint64_t v8 = *MEMORY[0x263EF8340];
  if (!byte_268EC3510 && *result)
  {
    sub_2446D845C(result);
    uint64_t v1 = sub_244CC8484(0x1Bu, "Support");
    if (os_log_type_enabled(v1, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136315650;
      uint64_t v3 = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/lib/support/Pool.h";
      __int16 v4 = 1024;
      int v5 = 405;
      __int16 v6 = 2080;
      id v7 = "Allocated() == 0";
      _os_log_impl(&dword_2446BD000, v1, OS_LOG_TYPE_ERROR, "VerifyOrDie failure at %s:%d: %s", buf, 0x1Cu);
    }

    if (sub_244CC4E58(1u)) {
      sub_244CC4DE0(0x1Bu, 1);
    }
    abort();
  }
  return result;
}

void sub_2446D8450(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_2446D1FF0(a1);
}

uint64_t sub_2446D845C(uint64_t *a1)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  uint64_t v2 = sub_244CC8484(0x1Bu, "Support");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
  {
    uint64_t v3 = *a1;
    *(_DWORD *)buf = 134217984;
    uint64_t v6 = v3;
    _os_log_impl(&dword_2446BD000, v2, OS_LOG_TYPE_ERROR, "HeapObjectPool: %lu allocated", buf, 0xCu);
  }

  uint64_t result = sub_244CC4E58(1u);
  if (result) {
    return sub_244CC4DE0(0x1Bu, 1);
  }
  return result;
}

uint64_t *sub_2446D8538(uint64_t *result)
{
  uint64_t v8 = *MEMORY[0x263EF8340];
  if (!byte_268EC3510 && *result)
  {
    sub_2446D845C(result);
    uint64_t v1 = sub_244CC8484(0x1Bu, "Support");
    if (os_log_type_enabled(v1, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136315650;
      uint64_t v3 = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/lib/support/Pool.h";
      __int16 v4 = 1024;
      int v5 = 405;
      __int16 v6 = 2080;
      uint64_t v7 = "Allocated() == 0";
      _os_log_impl(&dword_2446BD000, v1, OS_LOG_TYPE_ERROR, "VerifyOrDie failure at %s:%d: %s", buf, 0x1Cu);
    }

    if (sub_244CC4E58(1u)) {
      sub_244CC4DE0(0x1Bu, 1);
    }
    abort();
  }
  return result;
}

void sub_2446D8674(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_2446D1FF0(a1);
}

uint64_t *sub_2446D8680(uint64_t *result)
{
  uint64_t v8 = *MEMORY[0x263EF8340];
  if (!byte_268EC3510 && *result)
  {
    sub_2446D845C(result);
    uint64_t v1 = sub_244CC8484(0x1Bu, "Support");
    if (os_log_type_enabled(v1, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136315650;
      uint64_t v3 = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/lib/support/Pool.h";
      __int16 v4 = 1024;
      int v5 = 405;
      __int16 v6 = 2080;
      uint64_t v7 = "Allocated() == 0";
      _os_log_impl(&dword_2446BD000, v1, OS_LOG_TYPE_ERROR, "VerifyOrDie failure at %s:%d: %s", buf, 0x1Cu);
    }

    if (sub_244CC4E58(1u)) {
      sub_244CC4DE0(0x1Bu, 1);
    }
    abort();
  }
  return result;
}

void sub_2446D87BC(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_2446D1FF0(a1);
}

uint64_t *sub_2446D87C8(uint64_t *result)
{
  uint64_t v8 = *MEMORY[0x263EF8340];
  if (!byte_268EC3510 && *result)
  {
    sub_2446D845C(result);
    uint64_t v1 = sub_244CC8484(0x1Bu, "Support");
    if (os_log_type_enabled(v1, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136315650;
      uint64_t v3 = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/lib/support/Pool.h";
      __int16 v4 = 1024;
      int v5 = 405;
      __int16 v6 = 2080;
      uint64_t v7 = "Allocated() == 0";
      _os_log_impl(&dword_2446BD000, v1, OS_LOG_TYPE_ERROR, "VerifyOrDie failure at %s:%d: %s", buf, 0x1Cu);
    }

    if (sub_244CC4E58(1u)) {
      sub_244CC4DE0(0x1Bu, 1);
    }
    abort();
  }
  return result;
}

void sub_2446D8904(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_2446D1FF0(a1);
}

uint64_t *sub_2446D8910(uint64_t *result)
{
  uint64_t v8 = *MEMORY[0x263EF8340];
  if (!byte_268EC3510 && *result)
  {
    sub_2446D845C(result);
    uint64_t v1 = sub_244CC8484(0x1Bu, "Support");
    if (os_log_type_enabled(v1, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136315650;
      uint64_t v3 = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/lib/support/Pool.h";
      __int16 v4 = 1024;
      int v5 = 405;
      __int16 v6 = 2080;
      uint64_t v7 = "Allocated() == 0";
      _os_log_impl(&dword_2446BD000, v1, OS_LOG_TYPE_ERROR, "VerifyOrDie failure at %s:%d: %s", buf, 0x1Cu);
    }

    if (sub_244CC4E58(1u)) {
      sub_244CC4DE0(0x1Bu, 1);
    }
    abort();
  }
  return result;
}

void sub_2446D8A4C(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_2446D1FF0(a1);
}

uint64_t *sub_2446D8A58(uint64_t *result)
{
  uint64_t v8 = *MEMORY[0x263EF8340];
  if (!byte_268EC3510 && *result)
  {
    sub_2446D845C(result);
    uint64_t v1 = sub_244CC8484(0x1Bu, "Support");
    if (os_log_type_enabled(v1, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136315650;
      uint64_t v3 = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/lib/support/Pool.h";
      __int16 v4 = 1024;
      int v5 = 405;
      __int16 v6 = 2080;
      uint64_t v7 = "Allocated() == 0";
      _os_log_impl(&dword_2446BD000, v1, OS_LOG_TYPE_ERROR, "VerifyOrDie failure at %s:%d: %s", buf, 0x1Cu);
    }

    if (sub_244CC4E58(1u)) {
      sub_244CC4DE0(0x1Bu, 1);
    }
    abort();
  }
  return result;
}

void sub_2446D8B94(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_2446D1FF0(a1);
}

void sub_2446D8BA0(uint64_t a1)
{
  *(void *)a1 = &unk_26F9440D0;
  sub_2446D9D94(a1 + 32, *(char **)(a1 + 40));
  sub_2446D9DF8(a1 + 8, *(void **)(a1 + 16));

  JUMPOUT(0x245695FA0);
}

uint64_t sub_2446D8C14@<X0>(_DWORD *a1@<X0>, const char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  if (a1[15] >= 2u)
  {
    __int16 v10 = sub_244CC8484(0x24u, "Test");
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      id v11 = "(null)";
      if (a2) {
        id v11 = a2;
      }
      *(_DWORD *)buf = 136315138;
      int v18 = v11;
      _os_log_impl(&dword_2446BD000, v10, OS_LOG_TYPE_INFO, "TestPersistentStorageDelegate::SyncGetKeyValue: Get key '%s'", buf, 0xCu);
    }

    if (sub_244CC4E58(3u)) {
      sub_244CC4DE0(0x24u, 3);
    }
  }
  *a5 = 0;
  a5[1] = 0;
  a5[2] = 0;
  uint64_t result = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a1 + 120))(a1, a2, a3, a4);
  if (a1[15] >= 2u)
  {
    if (*(_DWORD *)a5 == 159)
    {
      id v15 = sub_244CC8484(0x24u, "Test");
      if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
      {
        id v16 = "(null)";
        if (a2) {
          id v16 = a2;
        }
        *(_DWORD *)buf = 136315138;
        int v18 = v16;
        _os_log_impl(&dword_2446BD000, v15, OS_LOG_TYPE_INFO, "--> TestPersistentStorageDelegate::SyncGetKeyValue: Key '%s' is a poison key", buf, 0xCu);
      }

      uint64_t result = sub_244CC4E58(3u);
      if (result) {
        return sub_244CC4DE0(0x24u, 3);
      }
    }
    else if (*(_DWORD *)a5 == 160)
    {
      uint64_t v13 = sub_244CC8484(0x24u, "Test");
      if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
      {
        uint64_t v14 = "(null)";
        if (a2) {
          uint64_t v14 = a2;
        }
        *(_DWORD *)buf = 136315138;
        int v18 = v14;
        _os_log_impl(&dword_2446BD000, v13, OS_LOG_TYPE_INFO, "--> TestPersistentStorageDelegate::SyncGetKeyValue: Key '%s' not found", buf, 0xCu);
      }

      uint64_t result = sub_244CC4E58(3u);
      if (result) {
        return sub_244CC4DE0(0x24u, 3);
      }
    }
  }
  return result;
}

uint64_t sub_2446D8EBC@<X0>(_DWORD *a1@<X0>, const char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v18 = *MEMORY[0x263EF8340];
  if (a1[15])
  {
    __int16 v10 = sub_244CC8484(0x24u, "Test");
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 136315394;
      id v15 = a2;
      __int16 v16 = 1024;
      int v17 = a4;
      _os_log_impl(&dword_2446BD000, v10, OS_LOG_TYPE_INFO, "TestPersistentStorageDelegate::SyncSetKeyValue, Set key '%s' with data size %u", buf, 0x12u);
    }

    if (sub_244CC4E58(3u)) {
      sub_244CC4DE0(0x24u, 3);
    }
  }
  *a5 = 0;
  a5[1] = 0;
  a5[2] = 0;
  uint64_t result = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a1 + 128))(a1, a2, a3, a4);
  if (a1[15] >= 2u && *(_DWORD *)a5 == 159)
  {
    unint64_t v12 = sub_244CC8484(0x24u, "Test");
    if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
    {
      uint64_t v13 = "(null)";
      if (a2) {
        uint64_t v13 = a2;
      }
      *(_DWORD *)buf = 136315138;
      id v15 = v13;
      _os_log_impl(&dword_2446BD000, v12, OS_LOG_TYPE_INFO, "--> TestPersistentStorageDelegate::SyncSetKeyValue: Key '%s' is a poison key", buf, 0xCu);
    }

    uint64_t result = sub_244CC4E58(3u);
    if (result) {
      return sub_244CC4DE0(0x24u, 3);
    }
  }
  return result;
}

uint64_t sub_2446D90C4@<X0>(_DWORD *a1@<X0>, const char *a2@<X1>, void *a3@<X8>)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  if (a1[15])
  {
    __int16 v6 = sub_244CC8484(0x24u, "Test");
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      uint64_t v7 = "(null)";
      if (a2) {
        uint64_t v7 = a2;
      }
      *(_DWORD *)buf = 136315138;
      uint64_t v14 = v7;
      _os_log_impl(&dword_2446BD000, v6, OS_LOG_TYPE_INFO, "TestPersistentStorageDelegate::SyncDeleteKeyValue, Delete key '%s'", buf, 0xCu);
    }

    if (sub_244CC4E58(3u)) {
      sub_244CC4DE0(0x24u, 3);
    }
  }
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  uint64_t result = (*(uint64_t (**)(_DWORD *, const char *))(*(void *)a1 + 136))(a1, a2);
  if (a1[15])
  {
    if (*(_DWORD *)a3 == 159)
    {
      id v11 = sub_244CC8484(0x24u, "Test");
      if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
      {
        unint64_t v12 = "(null)";
        if (a2) {
          unint64_t v12 = a2;
        }
        *(_DWORD *)buf = 136315138;
        uint64_t v14 = v12;
        _os_log_impl(&dword_2446BD000, v11, OS_LOG_TYPE_INFO, "--> TestPersistentStorageDelegate::SyncDeleteKeyValue: Key '%s' is a poison key", buf, 0xCu);
      }

      uint64_t result = sub_244CC4E58(3u);
      if (result) {
        return sub_244CC4DE0(0x24u, 3);
      }
    }
    else if (*(_DWORD *)a3 == 160)
    {
      uint64_t v9 = sub_244CC8484(0x24u, "Test");
      if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
      {
        __int16 v10 = "(null)";
        if (a2) {
          __int16 v10 = a2;
        }
        *(_DWORD *)buf = 136315138;
        uint64_t v14 = v10;
        _os_log_impl(&dword_2446BD000, v9, OS_LOG_TYPE_INFO, "--> TestPersistentStorageDelegate::SyncDeleteKeyValue: Key '%s' not found", buf, 0xCu);
      }

      uint64_t result = sub_244CC4E58(3u);
      if (result) {
        return sub_244CC4DE0(0x24u, 3);
      }
    }
  }
  return result;
}

uint64_t *sub_2446D934C(uint64_t a1, const void **a2)
{
  return sub_2446D9EAC((uint64_t **)(a1 + 32), a2, (uint64_t)a2);
}

uint64_t sub_2446D9358(uint64_t result, char a2)
{
  *(unsigned char *)(result + 56) = a2;
  return result;
}

void sub_2446D9360(uint64_t a1)
{
  uint64_t v1 = (void *)(a1 + 40);
  sub_2446D9D94(a1 + 32, *(char **)(a1 + 40));
  *(v1 - 1) = v1;
  void *v1 = 0;
  v1[1] = 0;
}

void sub_2446D9394(uint64_t a1)
{
  uint64_t v1 = (void *)(a1 + 16);
  sub_2446D9DF8(a1 + 8, *(void **)(a1 + 16));
  *(v1 - 1) = v1;
  void *v1 = 0;
  v1[1] = 0;
}

uint64_t sub_2446D93C8(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

uint64_t *sub_2446D93D0@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a2 + 16) = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)a2 = a2 + 8;
  uint64_t v3 = (const void **)result[1];
  __int16 v4 = result + 2;
  if (v3 != (const void **)(result + 2))
  {
    do
    {
      uint64_t result = sub_2446D9EAC((uint64_t **)a2, v3 + 4, (uint64_t)(v3 + 4));
      int v5 = (uint64_t *)v3[1];
      if (v5)
      {
        do
        {
          __int16 v6 = v5;
          int v5 = (uint64_t *)*v5;
        }
        while (v5);
      }
      else
      {
        do
        {
          __int16 v6 = (uint64_t *)v3[2];
          BOOL v7 = *v6 == (void)v3;
          uint64_t v3 = (const void **)v6;
        }
        while (!v7);
      }
      uint64_t v3 = (const void **)v6;
    }
    while (v6 != v4);
  }
  return result;
}

void sub_2446D945C(_Unwind_Exception *a1)
{
  sub_2446D9D94(v1, *(char **)(v1 + 8));
  _Unwind_Resume(a1);
}

BOOL sub_2446D9474(uint64_t a1, const void **a2)
{
  return a1 + 16 != sub_2446DA3E0(a1 + 8, a2);
}

uint64_t sub_2446D94A8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 60) = a2;
  return result;
}

void sub_2446D94B0(uint64_t a1)
{
  v15[2] = *(char **)MEMORY[0x263EF8340];
  uint64_t v2 = sub_244CC8484(0x24u, "Test");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
  {
    int v3 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 80))(a1);
    *(_DWORD *)buf = 67109120;
    *(_DWORD *)&uint8_t buf[4] = v3;
    _os_log_impl(&dword_2446BD000, v2, OS_LOG_TYPE_ERROR, "TestPersistentStorageDelegate::DumpKeys: %u keys", buf, 8u);
  }

  if (sub_244CC4E58(1u))
  {
    (*(void (**)(uint64_t))(*(void *)a1 + 80))(a1);
    sub_244CC4DE0(0x24u, 1);
  }
  (*(void (**)(uint8_t *__return_ptr, uint64_t))(*(void *)a1 + 88))(buf, a1);
  sub_2446DA470(&v10, *(void **)buf, v15);
  unint64_t v4 = 126 - 2 * __clz(0xAAAAAAAAAAAAAAABLL * (((char *)v11 - (char *)v10) >> 3));
  if (v11 == v10) {
    uint64_t v5 = 0;
  }
  else {
    uint64_t v5 = v4;
  }
  sub_2446DA830((uint64_t)v10, v11, (uint64_t)&v12, v5, 1);
  __int16 v6 = v10;
  for (i = v11; v6 != i; __int16 v6 = (long long *)((char *)v6 + 24))
  {
    uint64_t v8 = sub_244CC8484(0x24u, "Test");
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      uint64_t v9 = v6;
      if (*((char *)v6 + 23) < 0) {
        uint64_t v9 = *(long long **)v6;
      }
      *(_DWORD *)uint64_t v13 = 136315138;
      *(void *)&void v13[4] = v9;
      _os_log_impl(&dword_2446BD000, v8, OS_LOG_TYPE_ERROR, "  -> %s", v13, 0xCu);
    }

    if (sub_244CC4E58(1u)) {
      sub_244CC4DE0(0x24u, 1);
    }
  }
  *(void *)uint64_t v13 = &v10;
  sub_2446DA78C((void ***)v13);
  sub_2446D9D94((uint64_t)buf, v15[0]);
}

void sub_2446D9750(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446D979C(char *__s@<X1>, uint64_t **a2@<X0>, void *a3@<X2>, _WORD *a4@<X3>, uint64_t a5@<X8>)
{
  if (!a3 && *a4)
  {
    *(_DWORD *)a5 = 47;
    *(void *)(a5 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/lib/support/TestPersis"
                          "tentStorageDelegate.h";
    int v10 = 210;
    goto LABEL_28;
  }
  sub_2446DBD28(__p, __s);
  uint64_t v11 = sub_2446DA3E0((uint64_t)(a2 + 4), (const void **)__p);
  if (v20 < 0) {
    operator delete(__p[0]);
  }
  if (a2 + 5 != (uint64_t **)v11)
  {
    *(_DWORD *)a5 = 159;
    *(void *)(a5 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/lib/support/TestPersis"
                          "tentStorageDelegate.h";
    int v10 = 215;
    goto LABEL_28;
  }
  sub_2446DBD28(__p, __s);
  char v12 = ((uint64_t (*)(uint64_t **, void **))(*a2)[12])(a2, __p);
  char v13 = v12;
  if (v20 < 0)
  {
    operator delete(__p[0]);
    if (v13) {
      goto LABEL_10;
    }
LABEL_17:
    *(_DWORD *)a5 = 160;
    *(void *)(a5 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/lib/support/TestPersis"
                          "tentStorageDelegate.h";
    int v10 = 219;
    goto LABEL_28;
  }
  if ((v12 & 1) == 0) {
    goto LABEL_17;
  }
LABEL_10:
  sub_2446DBD28(__p, __s);
  __int16 v21 = __p;
  uint64_t v14 = sub_2446DBDDC(a2 + 1, (const void **)__p, (uint64_t)&unk_244E79D97, (_OWORD **)&v21);
  if (v20 < 0) {
    operator delete(__p[0]);
  }
  uint64_t v15 = (unsigned char *)*((void *)v14 + 7);
  __int16 v16 = (unsigned char *)*((void *)v14 + 8);
  unsigned __int16 v17 = (_WORD)v16 - (_WORD)v15;
  if ((unint64_t)(v16 - v15) >= 0x10000)
  {
    *(_DWORD *)a5 = 159;
    *(void *)(a5 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/lib/support/TestPersis"
                          "tentStorageDelegate.h";
    int v10 = 225;
  }
  else if (v16 != v15 || *a4)
  {
    if (a3)
    {
      if ((unsigned __int16)*a4 >= v17) {
        size_t v18 = (unsigned __int16)((_WORD)v16 - (_WORD)v15);
      }
      else {
        size_t v18 = (unsigned __int16)*a4;
      }
      *a4 = v18;
      memcpy(a3, v15, v18);
      if ((unsigned __int16)*a4 >= v17) {
        *(_DWORD *)a5 = 0;
      }
      else {
        *(_DWORD *)a5 = 25;
      }
      *(void *)(a5 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/lib/support/TestPers"
                            "istentStorageDelegate.h";
      int v10 = 236;
    }
    else
    {
      *(_DWORD *)a5 = 25;
      *(void *)(a5 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/lib/support/TestPers"
                            "istentStorageDelegate.h";
      int v10 = 230;
    }
  }
  else
  {
    *(_DWORD *)a5 = 0;
    *(void *)(a5 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/lib/support/TestPersis"
                          "tentStorageDelegate.h";
    int v10 = 229;
  }
LABEL_28:
  *(_DWORD *)(a5 + 16) = v10;
}

void sub_2446D99E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_2446D9A04(uint64_t a1@<X0>, char *a2@<X1>, const void *a3@<X2>, unsigned int a4@<W3>, uint64_t a5@<X8>)
{
  if (*(unsigned char *)(a1 + 56)) {
    goto LABEL_5;
  }
  uint64_t v10 = a1 + 32;
  sub_2446DBD28(__p, a2);
  uint64_t v11 = sub_2446DA3E0(v10, (const void **)__p);
  if (SHIBYTE(v22) < 0) {
    operator delete(__p[0]);
  }
  if (a1 + 40 == v11)
  {
    if (a3)
    {
      __p[0] = 0;
      __p[1] = 0;
      uint64_t v22 = 0;
      sub_2446DBEFC(__p, a3, (uint64_t)a3 + a4, a4);
      sub_2446DBD28(v19, a2);
      uint64_t v23 = v19;
      uint64_t v14 = sub_2446DBDDC((uint64_t **)(a1 + 8), (const void **)v19, (uint64_t)&unk_244E79D97, (_OWORD **)&v23);
      uint64_t v15 = (void *)v14[7];
      if (v15)
      {
        v14[8] = v15;
        operator delete(v15);
        v14[7] = 0;
        v14[8] = 0;
        v14[9] = 0;
      }
      *(_OWORD *)(v14 + 7) = *(_OWORD *)__p;
      v14[9] = v22;
      __p[1] = 0;
      uint64_t v22 = 0;
      __p[0] = 0;
      if (v20 < 0)
      {
        operator delete(v19[0]);
        if (__p[0])
        {
          __p[1] = __p[0];
          operator delete(__p[0]);
        }
      }
      int v13 = 0;
      int v12 = 262;
    }
    else if (a4)
    {
      int v12 = 256;
      int v13 = 47;
    }
    else
    {
      sub_2446DBD28(__p, a2);
      v19[0] = __p;
      __int16 v16 = sub_2446DBDDC((uint64_t **)(a1 + 8), (const void **)__p, (uint64_t)&unk_244E79D97, (_OWORD **)v19);
      size_t v18 = (void *)v16 + 7;
      unsigned __int16 v17 = (void *)*((void *)v16 + 7);
      if (v17)
      {
        *((void *)v16 + 8) = v17;
        operator delete(v17);
        *size_t v18 = 0;
        v18[1] = 0;
        v18[2] = 0;
      }
      *size_t v18 = 0;
      v18[1] = 0;
      v18[2] = 0;
      if (SHIBYTE(v22) < 0) {
        operator delete(__p[0]);
      }
      int v13 = 0;
      int v12 = 253;
    }
  }
  else
  {
LABEL_5:
    int v12 = 244;
    int v13 = 159;
  }
  *(_DWORD *)a5 = v13;
  *(void *)(a5 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/lib/support/TestPersiste"
                        "ntStorageDelegate.h";
  *(_DWORD *)(a5 + 16) = v12;
}

void sub_2446D9BE8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_2446D9C3C(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  if (*(unsigned char *)(a1 + 56)) {
    goto LABEL_5;
  }
  uint64_t v6 = a1 + 32;
  sub_2446DBD28(__p, a2);
  uint64_t v7 = sub_2446DA3E0(v6, (const void **)__p);
  if (v13 < 0) {
    operator delete(__p[0]);
  }
  if (a1 + 40 != v7)
  {
LABEL_5:
    int v8 = 270;
    int v9 = 159;
    goto LABEL_6;
  }
  sub_2446DBD28(__p, a2);
  char v10 = (*(uint64_t (**)(uint64_t, void **))(*(void *)a1 + 96))(a1, __p);
  char v11 = v10;
  if (v13 < 0)
  {
    operator delete(__p[0]);
    if (v11) {
      goto LABEL_9;
    }
LABEL_13:
    int v8 = 274;
    int v9 = 160;
    goto LABEL_6;
  }
  if ((v10 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_9:
  sub_2446DBD28(__p, a2);
  sub_2446DBFBC((uint64_t **)(a1 + 8), (const void **)__p);
  if (v13 < 0) {
    operator delete(__p[0]);
  }
  int v9 = 0;
  int v8 = 276;
LABEL_6:
  *(_DWORD *)a3 = v9;
  *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/lib/support/TestPersiste"
                        "ntStorageDelegate.h";
  *(_DWORD *)(a3 + 16) = v8;
}

void sub_2446D9D70(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_2446D9D94(uint64_t a1, char *a2)
{
  if (a2)
  {
    sub_2446D9D94(a1, *(void *)a2);
    sub_2446D9D94(a1, *((void *)a2 + 1));
    if (a2[55] < 0) {
      operator delete(*((void **)a2 + 4));
    }
    operator delete(a2);
  }
}

void sub_2446D9DF8(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_2446D9DF8(a1, *a2);
    sub_2446D9DF8(a1, a2[1]);
    sub_2446D9E54((uint64_t)(a2 + 4));
    operator delete(a2);
  }
}

void sub_2446D9E54(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 24);
  if (v2)
  {
    *(void *)(a1 + 32) = v2;
    operator delete(v2);
  }
  if (*(char *)(a1 + 23) < 0)
  {
    int v3 = *(void **)a1;
    operator delete(v3);
  }
}

uint64_t *sub_2446D9EAC(uint64_t **a1, const void **a2, uint64_t a3)
{
  uint64_t v5 = (uint64_t **)sub_2446D9F2C((uint64_t)a1, &v8, a2);
  uint64_t result = *v5;
  if (!*v5)
  {
    sub_2446D9FCC((uint64_t)a1, a3, (uint64_t)&v7);
    sub_2446DA06C(a1, v8, v5, v7);
    return v7;
  }
  return result;
}

void *sub_2446D9F2C(uint64_t a1, void *a2, const void **a3)
{
  uint64_t v5 = (void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    uint64_t v7 = a1 + 16;
    do
    {
      while (1)
      {
        uint64_t v8 = (void *)v4;
        int v9 = (const void **)(v4 + 32);
        if (!sub_2446DA0C4(v7, a3, (const void **)(v4 + 32))) {
          break;
        }
        uint64_t v4 = *v8;
        uint64_t v5 = v8;
        if (!*v8) {
          goto LABEL_10;
        }
      }
      if (!sub_2446DA0C4(v7, v9, a3)) {
        break;
      }
      uint64_t v5 = v8 + 1;
      uint64_t v4 = v8[1];
    }
    while (v4);
  }
  else
  {
    uint64_t v8 = (void *)(a1 + 8);
  }
LABEL_10:
  *a2 = v8;
  return v5;
}

void *sub_2446D9FCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t v6 = (char *)operator new(0x38uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  uint64_t result = v6 + 32;
  if (*(char *)(a2 + 23) < 0)
  {
    uint64_t result = sub_2446DA130(result, *(void **)a2, *(void *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)uint64_t result = *(_OWORD *)a2;
    result[2] = *(void *)(a2 + 16);
  }
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_2446DA050(_Unwind_Exception *a1)
{
  void *v1 = 0;
  sub_2446DA380(v3, v2);
  _Unwind_Resume(a1);
}

uint64_t *sub_2446DA06C(uint64_t **a1, uint64_t a2, uint64_t **a3, uint64_t *a4)
{
  *a4 = 0;
  a4[1] = 0;
  a4[2] = a2;
  *a3 = a4;
  uint64_t v5 = (uint64_t *)**a1;
  if (v5)
  {
    *a1 = v5;
    a4 = *a3;
  }
  uint64_t result = sub_2446DA1E8(a1[1], a4);
  a1[2] = (uint64_t *)((char *)a1[2] + 1);
  return result;
}

BOOL sub_2446DA0C4(uint64_t a1, const void **a2, const void **a3)
{
  int v3 = *((char *)a3 + 23);
  int v4 = *((char *)a2 + 23);
  if (v4 >= 0) {
    size_t v5 = *((unsigned __int8 *)a2 + 23);
  }
  else {
    size_t v5 = (size_t)a2[1];
  }
  if (v4 >= 0) {
    uint64_t v6 = a2;
  }
  else {
    uint64_t v6 = *a2;
  }
  if (v3 >= 0) {
    size_t v7 = *((unsigned __int8 *)a3 + 23);
  }
  else {
    size_t v7 = (size_t)a3[1];
  }
  if (v3 >= 0) {
    uint64_t v8 = a3;
  }
  else {
    uint64_t v8 = *a3;
  }
  if (v7 >= v5) {
    size_t v9 = v5;
  }
  else {
    size_t v9 = v7;
  }
  int v10 = memcmp(v6, v8, v9);
  if (v10) {
    return v10 < 0;
  }
  else {
    return v5 < v7;
  }
}

void *sub_2446DA130(unsigned char *__dst, void *__src, unint64_t a3)
{
  size_t v5 = __dst;
  if (a3 > 0x16)
  {
    if (a3 >= 0x7FFFFFFFFFFFFFF8) {
      sub_2446DA1D0();
    }
    uint64_t v6 = (a3 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((a3 | 7) != 0x17) {
      uint64_t v6 = a3 | 7;
    }
    uint64_t v7 = v6 + 1;
    uint64_t v8 = operator new(v6 + 1);
    v5[1] = a3;
    v5[2] = v7 | 0x8000000000000000;
    void *v5 = v8;
    size_t v5 = v8;
  }
  else
  {
    __dst[23] = a3;
  }

  return memmove(v5, __src, a3 + 1);
}

void sub_2446DA1D0()
{
}

uint64_t *sub_2446DA1E8(uint64_t *result, uint64_t *a2)
{
  *((unsigned char *)a2 + 24) = a2 == result;
  if (a2 != result)
  {
    do
    {
      uint64_t v2 = (uint64_t *)a2[2];
      if (*((unsigned char *)v2 + 24)) {
        return result;
      }
      int v3 = (uint64_t *)v2[2];
      int v4 = (uint64_t *)*v3;
      if ((uint64_t *)*v3 == v2)
      {
        uint64_t v7 = v3[1];
        if (!v7 || (v8 = *(unsigned __int8 *)(v7 + 24), size_t v5 = (unsigned char *)(v7 + 24), v8))
        {
          if ((uint64_t *)*v2 == a2)
          {
            size_t v9 = (uint64_t **)a2[2];
          }
          else
          {
            size_t v9 = (uint64_t **)v2[1];
            int v10 = *v9;
            v2[1] = (uint64_t)*v9;
            if (v10)
            {
              v10[2] = (uint64_t)v2;
              int v3 = (uint64_t *)v2[2];
            }
            v9[2] = v3;
            *(void *)(v2[2] + 8 * (*(void *)v2[2] != (void)v2)) = v9;
            long long *v9 = v2;
            v2[2] = (uint64_t)v9;
            int v3 = v9[2];
            uint64_t v2 = (uint64_t *)*v3;
          }
          *((unsigned char *)v9 + 24) = 1;
          *((unsigned char *)v3 + 24) = 0;
          uint64_t v13 = v2[1];
          *int v3 = v13;
          if (v13) {
            *(void *)(v13 + 16) = v3;
          }
          v2[2] = v3[2];
          *(void *)(v3[2] + 8 * (*(void *)v3[2] != (void)v3)) = v2;
          v2[1] = (uint64_t)v3;
          goto LABEL_27;
        }
      }
      else if (!v4 || (v6 = *((unsigned __int8 *)v4 + 24), size_t v5 = v4 + 3, v6))
      {
        if ((uint64_t *)*v2 == a2)
        {
          uint64_t v11 = a2[1];
          uint64_t *v2 = v11;
          if (v11)
          {
            *(void *)(v11 + 16) = v2;
            int v3 = (uint64_t *)v2[2];
          }
          a2[2] = (uint64_t)v3;
          *(void *)(v2[2] + 8 * (*(void *)v2[2] != (void)v2)) = a2;
          a2[1] = (uint64_t)v2;
          v2[2] = (uint64_t)a2;
          int v3 = (uint64_t *)a2[2];
        }
        else
        {
          a2 = (uint64_t *)a2[2];
        }
        *((unsigned char *)a2 + 24) = 1;
        *((unsigned char *)v3 + 24) = 0;
        uint64_t v2 = (uint64_t *)v3[1];
        uint64_t v12 = *v2;
        v3[1] = *v2;
        if (v12) {
          *(void *)(v12 + 16) = v3;
        }
        v2[2] = v3[2];
        *(void *)(v3[2] + 8 * (*(void *)v3[2] != (void)v3)) = v2;
        uint64_t *v2 = (uint64_t)v3;
LABEL_27:
        v3[2] = (uint64_t)v2;
        return result;
      }
      *((unsigned char *)v2 + 24) = 1;
      a2 = v3;
      *((unsigned char *)v3 + 24) = v3 == result;
      unsigned char *v5 = 1;
    }
    while (v3 != result);
  }
  return result;
}

void sub_2446DA380(uint64_t a1, void **__p)
{
  if (*(unsigned char *)(a1 + 8))
  {
    if (*((char *)__p + 55) < 0) {
      operator delete(__p[4]);
    }
  }
  else if (!__p)
  {
    return;
  }

  operator delete(__p);
}

uint64_t sub_2446DA3E0(uint64_t a1, const void **a2)
{
  uint64_t v2 = a1 + 8;
  uint64_t v3 = *(void *)(a1 + 8);
  if (!v3) {
    return v2;
  }
  uint64_t v5 = a1 + 16;
  uint64_t v6 = a1 + 8;
  do
  {
    BOOL v7 = sub_2446DA0C4(v5, (const void **)(v3 + 32), a2);
    int v8 = (uint64_t *)(v3 + 8);
    if (!v7)
    {
      int v8 = (uint64_t *)v3;
      uint64_t v6 = v3;
    }
    uint64_t v3 = *v8;
  }
  while (*v8);
  if (v6 == v2 || sub_2446DA0C4(v5, a2, (const void **)(v6 + 32))) {
    return v2;
  }
  return v6;
}

void *sub_2446DA470(void *a1, void *a2, void *a3)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2 == a3)
  {
    unint64_t v4 = 0;
  }
  else
  {
    unint64_t v4 = 0;
    uint64_t v5 = a2;
    do
    {
      uint64_t v6 = (void *)v5[1];
      if (v6)
      {
        do
        {
          BOOL v7 = v6;
          uint64_t v6 = (void *)*v6;
        }
        while (v6);
      }
      else
      {
        do
        {
          BOOL v7 = (void *)v5[2];
          BOOL v8 = *v7 == (void)v5;
          uint64_t v5 = v7;
        }
        while (!v8);
      }
      ++v4;
      uint64_t v5 = v7;
    }
    while (v7 != a3);
  }
  sub_2446DA4F8(a1, a2, a3, v4);
  return a1;
}

void *sub_2446DA4F8(void *result, void *a2, void *a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    sub_2446DA580(result, a4);
    uint64_t result = sub_2446DA61C((uint64_t)(v6 + 2), a2, a3, (void *)v6[1]);
    v6[1] = result;
  }
  return result;
}

void sub_2446DA560(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + 8) = v10;
  sub_2446DA78C(&a9);
  _Unwind_Resume(a1);
}

char *sub_2446DA580(void *a1, unint64_t a2)
{
  if (a2 >= 0xAAAAAAAAAAAAAABLL) {
    sub_2446D033C();
  }
  uint64_t result = (char *)sub_2446DA5D4((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[24 * v4];
  return result;
}

void *sub_2446DA5D4(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0xAAAAAAAAAAAAAABLL) {
    sub_2446D041C();
  }
  return operator new(24 * a2);
}

void *sub_2446DA61C(uint64_t a1, void *a2, void *a3, void *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v14 = __dst;
  uint64_t v15 = (char *)__dst;
  v12[0] = a1;
  v12[1] = &v14;
  v12[2] = &v15;
  char v13 = 0;
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    do
    {
      if (*((char *)v6 + 55) < 0)
      {
        sub_2446DA130(v4, (void *)v6[4], v6[5]);
      }
      else
      {
        long long v7 = *((_OWORD *)v6 + 2);
        v4[2] = v6[6];
        *(_OWORD *)uint64_t v4 = v7;
      }
      BOOL v8 = (void *)v6[1];
      if (v8)
      {
        do
        {
          uint64_t v9 = v8;
          BOOL v8 = (void *)*v8;
        }
        while (v8);
      }
      else
      {
        do
        {
          uint64_t v9 = (void *)v6[2];
          BOOL v10 = *v9 == (void)v6;
          uint64_t v6 = v9;
        }
        while (!v10);
      }
      uint64_t v4 = v15 + 24;
      v15 += 24;
      uint64_t v6 = v9;
    }
    while (v9 != a3);
  }
  char v13 = 1;
  sub_2446DA70C((uint64_t)v12);
  return v4;
}

void sub_2446DA6F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_2446DA70C(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_2446DA744(a1);
  }
  return a1;
}

void sub_2446DA744(uint64_t a1)
{
  uint64_t v1 = **(void **)(a1 + 16);
  uint64_t v2 = **(void **)(a1 + 8);
  while (v1 != v2)
  {
    if (*(char *)(v1 - 1) < 0) {
      operator delete(*(void **)(v1 - 24));
    }
    v1 -= 24;
  }
}

void sub_2446DA78C(void ***a1)
{
  uint64_t v2 = *a1;
  if (*v2)
  {
    sub_2446DA7E0((uint64_t *)v2);
    uint64_t v3 = **a1;
    operator delete(v3);
  }
}

void sub_2446DA7E0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  for (uint64_t i = a1[1]; i != v2; i -= 24)
  {
    if (*(char *)(i - 1) < 0) {
      operator delete(*(void **)(i - 24));
    }
  }
  a1[1] = v2;
}

void sub_2446DA830(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4, char a5)
{
LABEL_1:
  uint64_t v11 = (long long *)((char *)a2 - 24);
  uint64_t v12 = (const void **)a1;
LABEL_2:
  uint64_t v13 = 1 - a4;
  while (1)
  {
    a1 = (uint64_t)v12;
    uint64_t v14 = v13;
    uint64_t v15 = (char *)a2 - (char *)v12;
    unint64_t v16 = 0xAAAAAAAAAAAAAAABLL * (((char *)a2 - (char *)v12) >> 3);
    if (!(!v6 & v5))
    {
      switch(v16)
      {
        case 0uLL:
        case 1uLL:
          return;
        case 2uLL:
          if (sub_2446DA0C4(a3, (const void **)a2 - 3, v12))
          {
            long long v31 = v12[2];
            long long v29 = *(_OWORD *)v12;
            long long v27 = *v11;
            v12[2] = (const void *)*((void *)a2 - 1);
            *(_OWORD *)uint64_t v12 = v27;
            long long *v11 = v29;
            *((void *)a2 - 1) = v31;
          }
          break;
        case 3uLL:
          sub_2446DAE8C(v12, v12 + 3, (const void **)a2 - 3, a3);
          break;
        case 4uLL:
          sub_2446DB550((uint64_t)v12, v12 + 3, v12 + 6, (long long *)((char *)a2 - 24), a3);
          break;
        case 5uLL:
          sub_2446DB63C((uint64_t)v12, v12 + 3, v12 + 6, (long long *)(v12 + 9), (long long *)((char *)a2 - 24), a3);
          break;
        default:
          JUMPOUT(0);
      }
      return;
    }
    if (v15 <= 575) {
      break;
    }
    if (v14 == 1)
    {
      if (v12 != (const void **)a2)
      {
        sub_2446DB760((uint64_t)v12, a2, a2, a3);
      }
      return;
    }
    unint64_t v17 = v16 >> 1;
    size_t v18 = &v12[3 * (v16 >> 1)];
    if ((unint64_t)v15 >= 0xC01)
    {
      sub_2446DAE8C(v12, &v12[3 * (v16 >> 1)], (const void **)a2 - 3, a3);
      uint64_t v19 = 3 * v17;
      char v20 = &v12[3 * v17 - 3];
      sub_2446DAE8C(v12 + 3, v20, (const void **)a2 - 6, a3);
      __int16 v21 = v12 + 6;
      uint64_t v22 = &v12[v19 + 3];
      sub_2446DAE8C(v21, v22, (const void **)a2 - 9, a3);
      sub_2446DAE8C(v20, v18, v22, a3);
      long long v30 = *(const void **)(a1 + 16);
      long long v28 = *(_OWORD *)a1;
      long long v23 = *(_OWORD *)v18;
      *(void *)(a1 + 16) = v18[2];
      *(_OWORD *)a1 = v23;
      v18[2] = v30;
      *(_OWORD *)size_t v18 = v28;
      if (a5) {
        goto LABEL_13;
      }
    }
    else
    {
      sub_2446DAE8C(&v12[3 * (v16 >> 1)], v12, (const void **)a2 - 3, a3);
      if (a5) {
        goto LABEL_13;
      }
    }
    if (!sub_2446DA0C4(a3, (const void **)(a1 - 24), (const void **)a1))
    {
      uint64_t v12 = sub_2446DAFD8((const void **)a1, (unint64_t)a2, a3);
      goto LABEL_18;
    }
LABEL_13:
    unint64_t v24 = sub_2446DB16C((long long *)a1, (const void **)a2, a3);
    if ((v25 & 1) == 0) {
      goto LABEL_16;
    }
    BOOL v26 = sub_2446DB2FC(a1, v24, a3);
    uint64_t v12 = (const void **)(v24 + 24);
    if (sub_2446DB2FC(v24 + 24, (uint64_t)a2, a3))
    {
      a4 = -v14;
      a2 = (long long *)v24;
      if (v26) {
        return;
      }
      goto LABEL_1;
    }
    uint64_t v13 = v14 + 1;
    if (!v26)
    {
LABEL_16:
      sub_2446DA830(a1, v24, a3, -v14, a5 & 1);
      uint64_t v12 = (const void **)(v24 + 24);
LABEL_18:
      a5 = 0;
      a4 = -v14;
      goto LABEL_2;
    }
  }
  if (a5)
  {
    sub_2446DAC58((uint64_t)v12, (const void **)a2, a3);
  }
  else
  {
    sub_2446DAD80(v12, (const void **)a2, a3);
  }
}

void sub_2446DAC58(uint64_t a1, const void **a2, uint64_t a3)
{
  if ((const void **)a1 != a2)
  {
    uint64_t v19 = v3;
    uint64_t v20 = v4;
    long long v7 = (const void **)(a1 + 24);
    if ((const void **)(a1 + 24) != a2)
    {
      uint64_t v9 = 0;
      BOOL v10 = (const void **)a1;
      do
      {
        uint64_t v11 = v10;
        BOOL v10 = v7;
        if (sub_2446DA0C4(a3, v7, v11))
        {
          long long v17 = *(_OWORD *)v10;
          size_t v18 = v10[2];
          v10[1] = 0;
          v10[2] = 0;
          *BOOL v10 = 0;
          uint64_t v12 = v9;
          do
          {
            uint64_t v13 = a1 + v12;
            uint64_t v14 = (void **)(a1 + v12 + 24);
            if (*(char *)(a1 + v12 + 47) < 0) {
              operator delete(*v14);
            }
            *(_OWORD *)uint64_t v14 = *(_OWORD *)v13;
            *(void *)(a1 + v12 + 40) = *(void *)(v13 + 16);
            *(unsigned char *)(v13 + 23) = 0;
            *(unsigned char *)uint64_t v13 = 0;
            if (!v12)
            {
              uint64_t v16 = a1;
              goto LABEL_13;
            }
            v12 -= 24;
          }
          while (sub_2446DA0C4(a3, (const void **)&v17, (const void **)(v12 + a1)));
          int v15 = *(char *)(a1 + v12 + 47);
          uint64_t v16 = a1 + v12 + 24;
          if (v15 < 0) {
            operator delete(*(void **)v16);
          }
LABEL_13:
          *(_OWORD *)uint64_t v16 = v17;
          *(void *)(v16 + 16) = v18;
        }
        long long v7 = v10 + 3;
        v9 += 24;
      }
      while (v10 + 3 != a2);
    }
  }
}

void sub_2446DAD80(const void **a1, const void **a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v18 = v3;
    uint64_t v19 = v4;
    char v6 = a1;
    long long v7 = a1 + 3;
    if (a1 + 3 != a2)
    {
      uint64_t v9 = a1 - 3;
      do
      {
        BOOL v10 = v6;
        char v6 = v7;
        if (sub_2446DA0C4(a3, v7, v10))
        {
          long long v16 = *(_OWORD *)v6;
          long long v17 = v6[2];
          v6[1] = 0;
          v6[2] = 0;
          void *v6 = 0;
          uint64_t v11 = v9;
          do
          {
            uint64_t v12 = (void **)(v11 + 6);
            if (*((char *)v11 + 71) < 0) {
              operator delete(*v12);
            }
            *(_OWORD *)uint64_t v12 = *(_OWORD *)(v11 + 3);
            v11[8] = v11[5];
            *((unsigned char *)v11 + 47) = 0;
            *((unsigned char *)v11 + 24) = 0;
            BOOL v13 = sub_2446DA0C4(a3, (const void **)&v16, v11);
            v11 -= 3;
          }
          while (v13);
          int v14 = *((char *)v11 + 71);
          int v15 = v11 + 6;
          if (v14 < 0) {
            operator delete((void *)*v15);
          }
          *(_OWORD *)int v15 = v16;
          v15[2] = v17;
        }
        long long v7 = v6 + 3;
        v9 += 3;
      }
      while (v6 + 3 != a2);
    }
  }
}

uint64_t sub_2446DAE8C(const void **a1, const void **a2, const void **a3, uint64_t a4)
{
  BOOL v8 = sub_2446DA0C4(a4, a2, a1);
  uint64_t result = sub_2446DA0C4(a4, a3, a2);
  if (!v8)
  {
    if (!result) {
      return result;
    }
    BOOL v13 = a2[2];
    long long v14 = *(_OWORD *)a2;
    int v15 = a3[2];
    *(_OWORD *)a2 = *(_OWORD *)a3;
    a2[2] = v15;
    *(_OWORD *)a3 = v14;
    a3[2] = v13;
    if (!sub_2446DA0C4(a4, a2, a1)) {
      return 1;
    }
    long long v16 = a1[2];
    long long v17 = *(_OWORD *)a1;
    uint64_t v18 = a2[2];
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = v18;
    *(_OWORD *)a2 = v17;
    a2[2] = v16;
    return 2;
  }
  if (!result)
  {
    uint64_t v19 = a1[2];
    long long v20 = *(_OWORD *)a1;
    __int16 v21 = a2[2];
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = v21;
    *(_OWORD *)a2 = v20;
    a2[2] = v19;
    if (!sub_2446DA0C4(a4, a3, a2)) {
      return 1;
    }
    uint64_t v22 = a2[2];
    long long v23 = *(_OWORD *)a2;
    unint64_t v24 = a3[2];
    *(_OWORD *)a2 = *(_OWORD *)a3;
    a2[2] = v24;
    *(_OWORD *)a3 = v23;
    a3[2] = v22;
    return 2;
  }
  BOOL v10 = a1[2];
  long long v11 = *(_OWORD *)a1;
  uint64_t v12 = a3[2];
  *(_OWORD *)a1 = *(_OWORD *)a3;
  a1[2] = v12;
  *(_OWORD *)a3 = v11;
  a3[2] = v10;
  return 1;
}

const void **sub_2446DAFD8(const void **a1, unint64_t a2, uint64_t a3)
{
  unint64_t v4 = a2;
  long long v16 = *(_OWORD *)a1;
  long long v17 = a1[2];
  a1[1] = 0;
  a1[2] = 0;
  *a1 = 0;
  if (sub_2446DA0C4(a3, (const void **)&v16, (const void **)(a2 - 24)))
  {
    char v6 = a1;
    do
      v6 += 3;
    while (!sub_2446DA0C4(a3, (const void **)&v16, v6));
  }
  else
  {
    long long v7 = a1 + 3;
    do
    {
      char v6 = v7;
      if ((unint64_t)v7 >= v4) {
        break;
      }
      BOOL v8 = sub_2446DA0C4(a3, (const void **)&v16, v7);
      long long v7 = v6 + 3;
    }
    while (!v8);
  }
  if ((unint64_t)v6 < v4)
  {
    do
      v4 -= 24;
    while (sub_2446DA0C4(a3, (const void **)&v16, (const void **)v4));
  }
  while ((unint64_t)v6 < v4)
  {
    long long v9 = *(_OWORD *)v6;
    uint64_t v19 = v6[2];
    long long v18 = v9;
    long long v10 = *(_OWORD *)v4;
    v6[2] = *(const void **)(v4 + 16);
    *(_OWORD *)char v6 = v10;
    long long v11 = v18;
    *(void *)(v4 + 16) = v19;
    *(_OWORD *)unint64_t v4 = v11;
    do
      v6 += 3;
    while (!sub_2446DA0C4(a3, (const void **)&v16, v6));
    do
      v4 -= 24;
    while (sub_2446DA0C4(a3, (const void **)&v16, (const void **)v4));
  }
  uint64_t v12 = (void **)(v6 - 3);
  if (v6 - 3 == a1)
  {
    if (*((char *)v6 - 1) < 0) {
      operator delete(*v12);
    }
  }
  else
  {
    if (*((char *)a1 + 23) < 0) {
      operator delete((void *)*a1);
    }
    long long v13 = *(_OWORD *)v12;
    a1[2] = *(v6 - 1);
    *(_OWORD *)a1 = v13;
    *((unsigned char *)v6 - 1) = 0;
    *((unsigned char *)v6 - 24) = 0;
  }
  long long v14 = v16;
  *(v6 - 1) = v17;
  *(_OWORD *)uint64_t v12 = v14;
  return v6;
}

unint64_t sub_2446DB16C(long long *a1, const void **a2, uint64_t a3)
{
  uint64_t v6 = 0;
  long long v17 = *a1;
  uint64_t v18 = *((void *)a1 + 2);
  *((void *)a1 + 1) = 0;
  *((void *)a1 + 2) = 0;
  *(void *)a1 = 0;
  do
    v6 += 24;
  while (sub_2446DA0C4(a3, (const void **)((char *)a1 + v6), (const void **)&v17));
  unint64_t v7 = (unint64_t)a1 + v6;
  if (v6 == 24)
  {
    do
    {
      if (v7 >= (unint64_t)a2) {
        break;
      }
      a2 -= 3;
    }
    while (!sub_2446DA0C4(a3, a2, (const void **)&v17));
  }
  else
  {
    do
      a2 -= 3;
    while (!sub_2446DA0C4(a3, a2, (const void **)&v17));
  }
  unint64_t v8 = (unint64_t)a1 + v6;
  if (v7 < (unint64_t)a2)
  {
    long long v9 = a2;
    do
    {
      long long v19 = *(_OWORD *)v8;
      long long v10 = v19;
      long long v20 = *(const void **)(v8 + 16);
      long long v11 = v20;
      uint64_t v12 = v9[2];
      *(_OWORD *)unint64_t v8 = *(_OWORD *)v9;
      *(void *)(v8 + 16) = v12;
      v9[2] = v11;
      *(_OWORD *)long long v9 = v10;
      do
        v8 += 24;
      while (sub_2446DA0C4(a3, (const void **)v8, (const void **)&v17));
      do
        v9 -= 3;
      while (!sub_2446DA0C4(a3, v9, (const void **)&v17));
    }
    while (v8 < (unint64_t)v9);
  }
  long long v13 = (void **)(v8 - 24);
  if ((long long *)(v8 - 24) == a1)
  {
    if (*(char *)(v8 - 1) < 0) {
      operator delete(*v13);
    }
  }
  else
  {
    if (*((char *)a1 + 23) < 0) {
      operator delete(*(void **)a1);
    }
    long long v14 = *(_OWORD *)v13;
    *((void *)a1 + 2) = *(void *)(v8 - 8);
    *a1 = v14;
    *(unsigned char *)(v8 - 1) = 0;
    *(unsigned char *)(v8 - 24) = 0;
  }
  long long v15 = v17;
  *(void *)(v8 - 8) = v18;
  *(_OWORD *)long long v13 = v15;
  return v8 - 24;
}

BOOL sub_2446DB2FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (a2 - a1) >> 3;
  BOOL result = 1;
  switch(0xAAAAAAAAAAAAAAABLL * v6)
  {
    case 0uLL:
    case 1uLL:
      return result;
    case 2uLL:
      uint64_t v8 = a2 - 24;
      if (sub_2446DA0C4(a3, (const void **)(a2 - 24), (const void **)a1))
      {
        uint64_t v9 = *(void *)(a1 + 16);
        long long v10 = *(_OWORD *)a1;
        uint64_t v11 = *(void *)(v8 + 16);
        *(_OWORD *)a1 = *(_OWORD *)v8;
        *(void *)(a1 + 16) = v11;
        *(_OWORD *)uint64_t v8 = v10;
        *(void *)(v8 + 16) = v9;
      }
      return 1;
    case 3uLL:
      sub_2446DAE8C((const void **)a1, (const void **)(a1 + 24), (const void **)(a2 - 24), a3);
      return 1;
    case 4uLL:
      sub_2446DB550(a1, (const void **)(a1 + 24), (const void **)(a1 + 48), (long long *)(a2 - 24), a3);
      return 1;
    case 5uLL:
      sub_2446DB63C(a1, (const void **)(a1 + 24), (const void **)(a1 + 48), (long long *)(a1 + 72), (long long *)(a2 - 24), a3);
      return 1;
    default:
      uint64_t v12 = (const void **)(a1 + 48);
      sub_2446DAE8C((const void **)a1, (const void **)(a1 + 24), (const void **)(a1 + 48), a3);
      uint64_t v13 = a1 + 72;
      if (a1 + 72 == a2) {
        return 1;
      }
      uint64_t v14 = 0;
      int v15 = 0;
      break;
  }
  while (1)
  {
    if (sub_2446DA0C4(a3, (const void **)v13, v12))
    {
      long long v22 = *(_OWORD *)v13;
      uint64_t v23 = *(void *)(v13 + 16);
      *(void *)(v13 + 8) = 0;
      *(void *)(v13 + 16) = 0;
      *(void *)uint64_t v13 = 0;
      uint64_t v16 = v14;
      do
      {
        uint64_t v17 = a1 + v16;
        uint64_t v18 = (void **)(a1 + v16 + 72);
        if (*(char *)(a1 + v16 + 95) < 0) {
          operator delete(*v18);
        }
        *(_OWORD *)uint64_t v18 = *(_OWORD *)(v17 + 48);
        *(void *)(a1 + v16 + 88) = *(void *)(v17 + 64);
        *(unsigned char *)(v17 + 71) = 0;
        *(unsigned char *)(v17 + 48) = 0;
        if (v16 == -48)
        {
          uint64_t v21 = a1;
          goto LABEL_15;
        }
        BOOL v19 = sub_2446DA0C4(a3, (const void **)&v22, (const void **)(a1 + v16 + 24));
        v16 -= 24;
      }
      while (v19);
      int v20 = *(char *)(a1 + v16 + 95);
      uint64_t v21 = a1 + v16 + 72;
      if (v20 < 0) {
        operator delete(*(void **)v21);
      }
LABEL_15:
      *(_OWORD *)uint64_t v21 = v22;
      *(void *)(v21 + 16) = v23;
      if (++v15 == 8) {
        return v13 + 24 == a2;
      }
    }
    uint64_t v12 = (const void **)v13;
    v14 += 24;
    v13 += 24;
    if (v13 == a2) {
      return 1;
    }
  }
}

__n128 sub_2446DB550(uint64_t a1, const void **a2, const void **a3, long long *a4, uint64_t a5)
{
  sub_2446DAE8C((const void **)a1, a2, a3, a5);
  if (sub_2446DA0C4(a5, (const void **)a4, a3))
  {
    uint64_t v11 = a3[2];
    long long v12 = *(_OWORD *)a3;
    uint64_t v13 = (const void *)*((void *)a4 + 2);
    *(_OWORD *)a3 = *a4;
    a3[2] = v13;
    *a4 = v12;
    *((void *)a4 + 2) = v11;
    if (sub_2446DA0C4(a5, a3, a2))
    {
      uint64_t v14 = a2[2];
      long long v15 = *(_OWORD *)a2;
      uint64_t v16 = a3[2];
      *(_OWORD *)a2 = *(_OWORD *)a3;
      a2[2] = v16;
      *(_OWORD *)a3 = v15;
      a3[2] = v14;
      if (sub_2446DA0C4(a5, a2, (const void **)a1))
      {
        uint64_t v17 = *(const void **)(a1 + 16);
        __n128 result = *(__n128 *)a1;
        uint64_t v18 = a2[2];
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(void *)(a1 + 16) = v18;
        *(__n128 *)a2 = result;
        a2[2] = v17;
      }
    }
  }
  return result;
}

__n128 sub_2446DB63C(uint64_t a1, const void **a2, const void **a3, long long *a4, long long *a5, uint64_t a6)
{
  sub_2446DB550(a1, a2, a3, a4, a6);
  if (sub_2446DA0C4(a6, (const void **)a5, (const void **)a4))
  {
    uint64_t v13 = *((void *)a4 + 2);
    long long v14 = *a4;
    uint64_t v15 = *((void *)a5 + 2);
    *a4 = *a5;
    *((void *)a4 + 2) = v15;
    *a5 = v14;
    *((void *)a5 + 2) = v13;
    if (sub_2446DA0C4(a6, (const void **)a4, a3))
    {
      uint64_t v16 = a3[2];
      long long v17 = *(_OWORD *)a3;
      uint64_t v18 = (const void *)*((void *)a4 + 2);
      *(_OWORD *)a3 = *a4;
      a3[2] = v18;
      *a4 = v17;
      *((void *)a4 + 2) = v16;
      if (sub_2446DA0C4(a6, a3, a2))
      {
        BOOL v19 = a2[2];
        long long v20 = *(_OWORD *)a2;
        uint64_t v21 = a3[2];
        *(_OWORD *)a2 = *(_OWORD *)a3;
        a2[2] = v21;
        *(_OWORD *)a3 = v20;
        a3[2] = v19;
        if (sub_2446DA0C4(a6, a2, (const void **)a1))
        {
          long long v22 = *(const void **)(a1 + 16);
          __n128 result = *(__n128 *)a1;
          uint64_t v23 = a2[2];
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *(void *)(a1 + 16) = v23;
          *(__n128 *)a2 = result;
          a2[2] = v22;
        }
      }
    }
  }
  return result;
}

long long *sub_2446DB760(uint64_t a1, long long *a2, long long *a3, uint64_t a4)
{
  if ((long long *)a1 != a2)
  {
    uint64_t v8 = (uint64_t)a2 - a1;
    uint64_t v9 = ((uint64_t)a2 - a1) / 24;
    if ((uint64_t)a2 - a1 >= 25)
    {
      unint64_t v10 = (unint64_t)(v9 - 2) >> 1;
      unint64_t v11 = v10 + 1;
      long long v12 = (__n128 *)(a1 + 24 * v10);
      do
      {
        sub_2446DB9AC(a1, a4, v9, v12);
        long long v12 = (__n128 *)((char *)v12 - 24);
        --v11;
      }
      while (v11);
    }
    uint64_t v13 = a2;
    if (a2 != a3)
    {
      long long v14 = a2;
      do
      {
        if (sub_2446DA0C4(a4, (const void **)v14, (const void **)a1))
        {
          uint64_t v15 = *((void *)v14 + 2);
          long long v16 = *v14;
          uint64_t v17 = *(void *)(a1 + 16);
          *long long v14 = *(_OWORD *)a1;
          *((void *)v14 + 2) = v17;
          *(_OWORD *)a1 = v16;
          *(void *)(a1 + 16) = v15;
          sub_2446DB9AC(a1, a4, v9, (__n128 *)a1);
        }
        long long v14 = (long long *)((char *)v14 + 24);
      }
      while (v14 != a3);
      uint64_t v13 = a3;
    }
    if (v8 >= 25)
    {
      int64_t v18 = v8 / 0x18uLL;
      BOOL v19 = (long long *)((char *)a2 - 24);
      do
      {
        uint64_t v20 = *(void *)a1;
        *(void *)long long v28 = *(void *)(a1 + 8);
        *(void *)&v28[7] = *(void *)(a1 + 15);
        char v21 = *(unsigned char *)(a1 + 23);
        *(void *)(a1 + 8) = 0;
        *(void *)(a1 + 16) = 0;
        *(void *)a1 = 0;
        uint64_t v22 = sub_2446DBB48(a1, a4, v18);
        uint64_t v23 = v22;
        int v24 = *(char *)(v22 + 23);
        if (v19 == (long long *)v22)
        {
          if (v24 < 0) {
            operator delete(*(void **)v22);
          }
          *(void *)uint64_t v23 = v20;
          *(void *)(v23 + 8) = *(void *)v28;
          *(void *)(v23 + 15) = *(void *)&v28[7];
          *(unsigned char *)(v23 + 23) = v21;
        }
        else
        {
          if (v24 < 0) {
            operator delete(*(void **)v22);
          }
          long long v25 = *v19;
          *(void *)(v23 + 16) = *((void *)v19 + 2);
          *(_OWORD *)uint64_t v23 = v25;
          *(void *)BOOL v19 = v20;
          *((void *)v19 + 1) = *(void *)v28;
          *(void *)((char *)v19 + 15) = *(void *)&v28[7];
          *((unsigned char *)v19 + 23) = v21;
          sub_2446DBC24(a1, v23 + 24, a4, 0xAAAAAAAAAAAAAAABLL * ((v23 + 24 - a1) >> 3));
        }
        BOOL v19 = (long long *)((char *)v19 - 24);
      }
      while (v18-- > 2);
    }
    return v13;
  }
  return a3;
}

void sub_2446DB994(_Unwind_Exception *exception_object)
{
  if (v2 < 0) {
    operator delete(v1);
  }
  _Unwind_Resume(exception_object);
}

__n128 sub_2446DB9AC(uint64_t a1, uint64_t a2, uint64_t a3, __n128 *a4)
{
  unint64_t v6 = a3 - 2;
  if (a3 >= 2)
  {
    uint64_t v22 = v4;
    uint64_t v23 = v5;
    unint64_t v7 = a4;
    uint64_t v9 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) >= (uint64_t)(0xAAAAAAAAAAAAAAABLL * (((uint64_t)a4 - a1) >> 3)))
    {
      uint64_t v12 = (0x5555555555555556 * (((uint64_t)a4 - a1) >> 3)) | 1;
      uint64_t v13 = a1 + 24 * v12;
      uint64_t v14 = 0x5555555555555556 * (((uint64_t)a4 - a1) >> 3) + 2;
      if (v14 < a3 && sub_2446DA0C4(a2, (const void **)(a1 + 24 * v12), (const void **)(v13 + 24)))
      {
        v13 += 24;
        uint64_t v12 = v14;
      }
      if (!sub_2446DA0C4(a2, (const void **)v13, (const void **)v7))
      {
        __n128 v20 = *v7;
        unint64_t v21 = v7[1].n128_u64[0];
        v7->n128_u64[1] = 0;
        v7[1].n128_u64[0] = 0;
        v7->n128_u64[0] = 0;
        while (1)
        {
          long long v16 = (__n128 *)v13;
          if (v7[1].n128_i8[7] < 0) {
            operator delete((void *)v7->n128_u64[0]);
          }
          __n128 v17 = *(__n128 *)v13;
          v7[1].n128_u64[0] = *(void *)(v13 + 16);
          *unint64_t v7 = v17;
          *(unsigned char *)(v13 + 23) = 0;
          *(unsigned char *)uint64_t v13 = 0;
          if (v9 < v12) {
            break;
          }
          uint64_t v18 = (2 * v12) | 1;
          uint64_t v13 = a1 + 24 * v18;
          uint64_t v19 = 2 * v12 + 2;
          if (v19 < a3 && sub_2446DA0C4(a2, (const void **)(a1 + 24 * v18), (const void **)(v13 + 24)))
          {
            v13 += 24;
            uint64_t v18 = v19;
          }
          unint64_t v7 = v16;
          uint64_t v12 = v18;
          if (sub_2446DA0C4(a2, (const void **)v13, (const void **)&v20))
          {
            if (v16[1].n128_i8[7] < 0) {
              operator delete((void *)v16->n128_u64[0]);
            }
            break;
          }
        }
        __n128 result = v20;
        v16[1].n128_u64[0] = v21;
        *long long v16 = result;
      }
    }
  }
  return result;
}

uint64_t sub_2446DBB48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = 0;
  uint64_t v7 = a3 - 2;
  if (a3 < 2) {
    uint64_t v7 = a3 - 1;
  }
  uint64_t v8 = v7 >> 1;
  do
  {
    uint64_t v9 = a1 + 24 * v6 + 24;
    uint64_t v10 = 2 * v6;
    uint64_t v6 = (2 * v6) | 1;
    uint64_t v11 = v10 + 2;
    if (v10 + 2 < a3 && sub_2446DA0C4(a2, (const void **)v9, (const void **)(v9 + 24)))
    {
      v9 += 24;
      uint64_t v6 = v11;
    }
    if (*(char *)(a1 + 23) < 0) {
      operator delete(*(void **)a1);
    }
    long long v12 = *(_OWORD *)v9;
    *(void *)(a1 + 16) = *(void *)(v9 + 16);
    *(_OWORD *)a1 = v12;
    *(unsigned char *)(v9 + 23) = 0;
    *(unsigned char *)uint64_t v9 = 0;
    a1 = v9;
  }
  while (v6 <= v8);
  return v9;
}

double sub_2446DBC24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4 >= 2)
  {
    uint64_t v16 = v4;
    uint64_t v17 = v5;
    unint64_t v8 = (unint64_t)(a4 - 2) >> 1;
    uint64_t v9 = (long long *)(a1 + 24 * v8);
    uint64_t v10 = (long long *)(a2 - 24);
    if (sub_2446DA0C4(a3, (const void **)v9, (const void **)(a2 - 24)))
    {
      long long v14 = *v10;
      uint64_t v15 = *((void *)v10 + 2);
      *((void *)v10 + 1) = 0;
      *((void *)v10 + 2) = 0;
      *(void *)uint64_t v10 = 0;
      while (1)
      {
        long long v12 = v9;
        if (*((char *)v10 + 23) < 0) {
          operator delete(*(void **)v10);
        }
        long long v13 = *v9;
        *((void *)v10 + 2) = *((void *)v9 + 2);
        *uint64_t v10 = v13;
        *((unsigned char *)v9 + 23) = 0;
        *(unsigned char *)uint64_t v9 = 0;
        if (!v8) {
          break;
        }
        unint64_t v8 = (v8 - 1) >> 1;
        uint64_t v9 = (long long *)(a1 + 24 * v8);
        uint64_t v10 = v12;
        if (!sub_2446DA0C4(a3, (const void **)v9, (const void **)&v14))
        {
          if (*((char *)v12 + 23) < 0) {
            operator delete(*(void **)v12);
          }
          break;
        }
      }
      double result = *(double *)&v14;
      *long long v12 = v14;
      *((void *)v12 + 2) = v15;
    }
  }
  return result;
}

void *sub_2446DBD28(void *a1, char *__s)
{
  size_t v4 = strlen(__s);
  if (v4 >= 0x7FFFFFFFFFFFFFF8) {
    sub_2446DA1D0();
  }
  size_t v5 = v4;
  if (v4 >= 0x17)
  {
    uint64_t v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17) {
      uint64_t v7 = v4 | 7;
    }
    uint64_t v8 = v7 + 1;
    uint64_t v6 = operator new(v7 + 1);
    a1[1] = v5;
    a1[2] = v8 | 0x8000000000000000;
    *a1 = v6;
  }
  else
  {
    *((unsigned char *)a1 + 23) = v4;
    uint64_t v6 = a1;
    if (!v4) {
      goto LABEL_9;
    }
  }
  memmove(v6, __s, v5);
LABEL_9:
  *((unsigned char *)v6 + v5) = 0;
  return a1;
}

_OWORD *sub_2446DBDDC(uint64_t **a1, const void **a2, uint64_t a3, _OWORD **a4)
{
  uint64_t v6 = (void **)sub_2446D9F2C((uint64_t)a1, &v14, a2);
  uint64_t v7 = *v6;
  if (!*v6)
  {
    uint64_t v8 = (uint64_t **)v6;
    uint64_t v7 = operator new(0x50uLL);
    v12[1] = a1 + 1;
    uint64_t v9 = *a4;
    uint64_t v10 = *((void *)*a4 + 2);
    v7[2] = **a4;
    *((void *)v7 + 6) = v10;
    v9[1] = 0;
    v9[2] = 0;
    void *v9 = 0;
    *((void *)v7 + 8) = 0;
    *((void *)v7 + 9) = 0;
    *((void *)v7 + 7) = 0;
    char v13 = 1;
    sub_2446DA06C(a1, v14, v8, (uint64_t *)v7);
    v12[0] = 0;
    sub_2446DBEA4((uint64_t)v12, 0);
  }
  return v7;
}

void sub_2446DBEA4(uint64_t a1, uint64_t a2)
{
  int v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16)) {
      sub_2446D9E54((uint64_t)v2 + 32);
    }
    operator delete(v2);
  }
}

void *sub_2446DBEFC(void *result, const void *a2, uint64_t a3, size_t __sz)
{
  if (__sz)
  {
    uint64_t v6 = result;
    double result = sub_2446DBF78(result, __sz);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      double result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_2446DBF5C(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *sub_2446DBF78(void *a1, size_t __sz)
{
  if ((__sz & 0x8000000000000000) != 0) {
    sub_2446D033C();
  }
  double result = (char *)operator new(__sz);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[__sz];
  return result;
}

uint64_t sub_2446DBFBC(uint64_t **a1, const void **a2)
{
  uint64_t v3 = (uint64_t *)sub_2446DA3E0((uint64_t)a1, a2);
  if (a1 + 1 == (uint64_t **)v3) {
    return 0;
  }
  size_t v4 = v3;
  sub_2446DC018(a1, v3);
  sub_2446D9E54((uint64_t)(v4 + 4));
  operator delete(v4);
  return 1;
}

uint64_t *sub_2446DC018(uint64_t **a1, uint64_t *a2)
{
  int v2 = (uint64_t *)a2[1];
  if (v2)
  {
    do
    {
      uint64_t v3 = v2;
      int v2 = (uint64_t *)*v2;
    }
    while (v2);
  }
  else
  {
    size_t v4 = a2;
    do
    {
      uint64_t v3 = (uint64_t *)v4[2];
      BOOL v5 = *v3 == (void)v4;
      size_t v4 = v3;
    }
    while (!v5);
  }
  if (*a1 == a2) {
    *a1 = v3;
  }
  uint64_t v6 = a1[1];
  a1[2] = (uint64_t *)((char *)a1[2] - 1);
  sub_2446DC08C(v6, a2);
  return v3;
}

uint64_t *sub_2446DC08C(uint64_t *result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  uint64_t v3 = a2;
  if (*a2)
  {
    size_t v4 = (uint64_t *)a2[1];
    if (!v4)
    {
      uint64_t v3 = a2;
      goto LABEL_7;
    }
    do
    {
      uint64_t v3 = v4;
      size_t v4 = (uint64_t *)*v4;
    }
    while (v4);
  }
  uint64_t v2 = v3[1];
  if (v2)
  {
LABEL_7:
    int v5 = 0;
    *(void *)(v2 + 16) = v3[2];
    goto LABEL_8;
  }
  int v5 = 1;
LABEL_8:
  uint64_t v6 = (uint64_t **)v3[2];
  uint64_t v7 = *v6;
  if (*v6 == v3)
  {
    uint64_t *v6 = (uint64_t *)v2;
    if (v3 == result)
    {
      uint64_t v7 = 0;
      double result = (uint64_t *)v2;
    }
    else
    {
      uint64_t v7 = v6[1];
    }
  }
  else
  {
    v6[1] = (uint64_t *)v2;
  }
  int v8 = *((unsigned __int8 *)v3 + 24);
  if (v3 != a2)
  {
    uint64_t v9 = a2[2];
    v3[2] = v9;
    *(void *)(v9 + 8 * (*(void *)a2[2] != (void)a2)) = v3;
    uint64_t v11 = *a2;
    uint64_t v10 = a2[1];
    *(void *)(v11 + 16) = v3;
    *uint64_t v3 = v11;
    v3[1] = v10;
    if (v10) {
      *(void *)(v10 + 16) = v3;
    }
    *((unsigned char *)v3 + 24) = *((unsigned char *)a2 + 24);
    if (result == a2) {
      double result = v3;
    }
  }
  if (!v8 || !result) {
    return result;
  }
  if (!v5)
  {
    *(unsigned char *)(v2 + 24) = 1;
    return result;
  }
  while (1)
  {
    uint64_t v12 = v7[2];
    if (*(uint64_t **)v12 == v7) {
      break;
    }
    if (!*((unsigned char *)v7 + 24))
    {
      *((unsigned char *)v7 + 24) = 1;
      *(unsigned char *)(v12 + 24) = 0;
      char v13 = *(uint64_t **)(v12 + 8);
      uint64_t v14 = *v13;
      *(void *)(v12 + 8) = *v13;
      if (v14) {
        *(void *)(v14 + 16) = v12;
      }
      v13[2] = *(void *)(v12 + 16);
      *(void *)(*(void *)(v12 + 16) + 8 * (**(void **)(v12 + 16) != v12)) = v13;
      *char v13 = v12;
      *(void *)(v12 + 16) = v13;
      if (result == (uint64_t *)*v7) {
        double result = v7;
      }
      uint64_t v7 = *(uint64_t **)(*v7 + 8);
    }
    uint64_t v15 = (void *)*v7;
    if (*v7 && !*((unsigned char *)v15 + 24))
    {
      uint64_t v16 = (uint64_t *)v7[1];
      if (!v16) {
        goto LABEL_56;
      }
LABEL_55:
      if (*((unsigned char *)v16 + 24))
      {
LABEL_56:
        *((unsigned char *)v15 + 24) = 1;
        *((unsigned char *)v7 + 24) = 0;
        uint64_t v22 = v15[1];
        *uint64_t v7 = v22;
        if (v22) {
          *(void *)(v22 + 16) = v7;
        }
        v15[2] = v7[2];
        *(void *)(v7[2] + 8 * (*(void *)v7[2] != (void)v7)) = v15;
        v15[1] = v7;
        v7[2] = (uint64_t)v15;
        uint64_t v16 = v7;
      }
      else
      {
        uint64_t v15 = v7;
      }
      uint64_t v23 = v15[2];
      *((unsigned char *)v15 + 24) = *(unsigned char *)(v23 + 24);
      *(unsigned char *)(v23 + 24) = 1;
      *((unsigned char *)v16 + 24) = 1;
      int v24 = *(uint64_t **)(v23 + 8);
      uint64_t v25 = *v24;
      *(void *)(v23 + 8) = *v24;
      if (v25) {
        *(void *)(v25 + 16) = v23;
      }
      v24[2] = *(void *)(v23 + 16);
      *(void *)(*(void *)(v23 + 16) + 8 * (**(void **)(v23 + 16) != v23)) = v24;
      uint64_t *v24 = v23;
      goto LABEL_72;
    }
    uint64_t v16 = (uint64_t *)v7[1];
    if (v16 && !*((unsigned char *)v16 + 24)) {
      goto LABEL_55;
    }
    *((unsigned char *)v7 + 24) = 0;
    uint64_t v17 = (uint64_t *)v7[2];
    if (v17 == result)
    {
      uint64_t v17 = result;
LABEL_53:
      *((unsigned char *)v17 + 24) = 1;
      return result;
    }
    if (!*((unsigned char *)v17 + 24)) {
      goto LABEL_53;
    }
LABEL_49:
    uint64_t v7 = *(uint64_t **)(v17[2] + 8 * (*(void *)v17[2] == (void)v17));
  }
  if (!*((unsigned char *)v7 + 24))
  {
    *((unsigned char *)v7 + 24) = 1;
    *(unsigned char *)(v12 + 24) = 0;
    uint64_t v18 = v7[1];
    *(void *)uint64_t v12 = v18;
    if (v18) {
      *(void *)(v18 + 16) = v12;
    }
    v7[2] = *(void *)(v12 + 16);
    *(void *)(*(void *)(v12 + 16) + 8 * (**(void **)(v12 + 16) != v12)) = v7;
    v7[1] = v12;
    *(void *)(v12 + 16) = v7;
    if (result == (uint64_t *)v12) {
      double result = v7;
    }
    uint64_t v7 = *(uint64_t **)v12;
  }
  uint64_t v19 = (void *)*v7;
  if (*v7 && !*((unsigned char *)v19 + 24)) {
    goto LABEL_68;
  }
  __n128 v20 = (uint64_t *)v7[1];
  if (!v20 || *((unsigned char *)v20 + 24))
  {
    *((unsigned char *)v7 + 24) = 0;
    uint64_t v17 = (uint64_t *)v7[2];
    if (*((unsigned char *)v17 + 24)) {
      BOOL v21 = v17 == result;
    }
    else {
      BOOL v21 = 1;
    }
    if (v21) {
      goto LABEL_53;
    }
    goto LABEL_49;
  }
  if (v19 && !*((unsigned char *)v19 + 24))
  {
LABEL_68:
    __n128 v20 = v7;
  }
  else
  {
    *((unsigned char *)v20 + 24) = 1;
    *((unsigned char *)v7 + 24) = 0;
    uint64_t v26 = *v20;
    v7[1] = *v20;
    if (v26) {
      *(void *)(v26 + 16) = v7;
    }
    v20[2] = v7[2];
    *(void *)(v7[2] + 8 * (*(void *)v7[2] != (void)v7)) = v20;
    uint64_t *v20 = (uint64_t)v7;
    v7[2] = (uint64_t)v20;
    uint64_t v19 = v7;
  }
  uint64_t v23 = v20[2];
  *((unsigned char *)v20 + 24) = *(unsigned char *)(v23 + 24);
  *(unsigned char *)(v23 + 24) = 1;
  *((unsigned char *)v19 + 24) = 1;
  int v24 = *(uint64_t **)v23;
  uint64_t v27 = *(void *)(*(void *)v23 + 8);
  *(void *)uint64_t v23 = v27;
  if (v27) {
    *(void *)(v27 + 16) = v23;
  }
  v24[2] = *(void *)(v23 + 16);
  *(void *)(*(void *)(v23 + 16) + 8 * (**(void **)(v23 + 16) != v23)) = v24;
  v24[1] = v23;
LABEL_72:
  *(void *)(v23 + 16) = v24;
  return result;
}

void sub_2446DC410()
{
}

void sub_2446DC424(unsigned int a1@<W3>, uint64_t a2@<X8>)
{
  if (a1 >= 6) {
    int v2 = 47;
  }
  else {
    int v2 = 0;
  }
  if (a1 >= 6) {
    int v3 = 92;
  }
  else {
    int v3 = 90;
  }
  *(_DWORD *)a2 = v2;
  *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/credentials/CertificateValidityPolicy.h";
  *(_DWORD *)(a2 + 16) = v3;
}

double sub_2446DC454(uint64_t a1)
{
  *(_DWORD *)(a1 + 8) = 196612;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = &unk_26F957618;
  double result = 0.0;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(unsigned char *)(a1 + 88) = 0;
  *(_OWORD *)(a1 + 56) = 0u;
  *(void *)(a1 + 64) = a1 + 56;
  *(void *)(a1 + 72) = a1 + 56;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(unsigned char *)(a1 + 144) = 0;
  *(void *)(a1 + 120) = a1 + 112;
  *(void *)(a1 + 128) = a1 + 112;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  *(unsigned char *)(a1 + 200) = 0;
  *(_OWORD *)(a1 + 168) = 0u;
  *(void *)(a1 + 176) = a1 + 168;
  *(void *)(a1 + 184) = a1 + 168;
  *(unsigned char *)(a1 + 256) = 0;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(void *)(a1 + 232) = a1 + 224;
  *(void *)(a1 + 240) = a1 + 224;
  *(unsigned char *)(a1 + 312) = 0;
  *(_OWORD *)(a1 + 296) = 0u;
  *(_OWORD *)(a1 + 264) = 0u;
  *(_OWORD *)(a1 + 280) = 0u;
  *(void *)(a1 + 296) = a1 + 280;
  *(void *)(a1 + 288) = a1 + 280;
  *(unsigned char *)(a1 + 368) = 0;
  *(_OWORD *)(a1 + 336) = 0u;
  *(_OWORD *)(a1 + 352) = 0u;
  *(_OWORD *)(a1 + 320) = 0u;
  *(void *)(a1 + 344) = a1 + 336;
  *(void *)(a1 + 352) = a1 + 336;
  return result;
}

void sub_2446DC520()
{
}

void sub_2446DC53C(uint64_t a1, const char *a2, uint64_t a3)
{
  objc_msgSend_sharedInstance(MTRDeviceControllerFactory, a2, a3);
  id v3 = (id)objc_claimAutoreleasedReturnValue();
  sub_2446D5D84((BOOL)v3);
}

void sub_2446DC58C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

unsigned char *sub_2446DC5A0(unsigned char *a1)
{
  if (!*a1) {
    sub_244E1EB84();
  }
  return a1 + 4;
}

uint64_t sub_2446DC5C4(uint64_t *a1, uint64_t a2)
{
  uint64_t result = *a1;
  *a1 = a2;
  if (result)
  {
    sub_244BC6E1C();
    JUMPOUT(0x245695FA0);
  }
  return result;
}

os_unfair_lock_s *sub_2446DC614(os_unfair_lock_s *a1, void *a2, void *a3, int a4, char a5)
{
  uint64_t v32 = *MEMORY[0x263EF8340];
  id v9 = a2;
  id v12 = a3;
  if (!a1) {
    goto LABEL_23;
  }
  unint64_t v13 = objc_msgSend_unsignedLongLongValue(v9, v10, v11);
  unint64_t v16 = v13;
  if (HIDWORD(v13))
  {
    uint64_t v25 = sub_244CC8484(0, "NotSpecified");
    if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 134217984;
      unint64_t v31 = v16;
      _os_log_impl(&dword_2446BD000, v25, OS_LOG_TYPE_ERROR, "MTRServerAttribute provided too-large attribute ID: 0x%llx", buf, 0xCu);
    }

    if (!sub_244CC4E58(1u)) {
      goto LABEL_23;
    }
    goto LABEL_22;
  }
  if (((unsigned __int16)((unsigned __int16)v13 >> 12) > 4u || WORD1(v13) >= 0xFFF5u)
    && (WORD1(v13) || (unsigned __int16)(v13 + 4096) >= 0xFFFu))
  {
    uint64_t v26 = sub_244CC8484(0, "NotSpecified");
    if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 67109120;
      LODWORD(v31) = v16;
      _os_log_impl(&dword_2446BD000, v26, OS_LOG_TYPE_ERROR, "MTRServerAttribute provided invalid attribute ID: 0x%x", buf, 8u);
    }

    if (!sub_244CC4E58(1u)) {
      goto LABEL_23;
    }
    goto LABEL_22;
  }
  if (v13 == 65532)
  {
    if (a4 == 1)
    {
      uint64_t v17 = objc_msgSend_objectForKeyedSubscript_(v12, v14, @"type");
      char isEqual = objc_msgSend_isEqual_(@"UnsignedInteger", v18, (uint64_t)v17);

      if (isEqual) {
        goto LABEL_10;
      }
      long long v29 = sub_244CC8484(0, "NotSpecified");
      if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        unint64_t v31 = (unint64_t)v12;
        _os_log_impl(&dword_2446BD000, v29, OS_LOG_TYPE_ERROR, "MTRServerAttribute for FeatureMap provided with value that is not an unsigned integer: %@", buf, 0xCu);
      }

      if (!sub_244CC4E58(1u))
      {
LABEL_23:
        int v24 = 0;
        goto LABEL_24;
      }
    }
    else
    {
      uint64_t v27 = sub_244CC8484(0, "NotSpecified");
      if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 67109120;
        LODWORD(v31) = a4;
        _os_log_impl(&dword_2446BD000, v27, OS_LOG_TYPE_ERROR, "MTRServerAttribute for FeatureMap provided with invalid read privilege %d", buf, 8u);
      }

      if (!sub_244CC4E58(1u)) {
        goto LABEL_23;
      }
    }
LABEL_22:
    sub_244CC4DE0(0, 1);
    goto LABEL_23;
  }
LABEL_10:
  __n128 v20 = objc_msgSend_copy(v9, v14, v15);
  uint64_t v23 = objc_msgSend_copy(v12, v21, v22);
  a1 = sub_2446DC9E8(a1, v20, v23, a4, a5);

  int v24 = a1;
LABEL_24:

  return v24;
}

void sub_2446DC994(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

os_unfair_lock_s *sub_2446DC9E8(os_unfair_lock_s *a1, void *a2, void *a3, char a4, char a5)
{
  id v10 = a2;
  id v11 = a3;
  if (!a1) {
    goto LABEL_5;
  }
  v15.receiver = a1;
  v15.super_class = (Class)MTRServerAttribute;
  id v12 = (id *)[(os_unfair_lock_s *)&v15 init];
  a1 = (os_unfair_lock_s *)v12;
  if (!v12) {
    goto LABEL_5;
  }
  *((_DWORD *)v12 + 2) = 0;
  objc_storeStrong(v12 + 6, a2);
  LOBYTE(a1[10]._os_unfair_lock_opaque) = a4;
  BYTE1(a1[10]._os_unfair_lock_opaque) = a5;
  *(void *)&a1[8]._os_unfair_lock_opaque = 0xFFFFFFFF0000FFFFLL;
  if (sub_2446DCAFC(a1, v11, 0))
  {
    a1 = a1;
    unint64_t v13 = a1;
  }
  else
  {
LABEL_5:
    unint64_t v13 = 0;
  }

  return v13;
}

void sub_2446DCAD0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2446DCAFC(os_unfair_lock_s *a1, void *a2, int a3)
{
  uint64_t v71 = *MEMORY[0x263EF8340];
  id v5 = a2;
  __n128 v58 = v5;
  if (!a1)
  {
    uint64_t v49 = 0;
    goto LABEL_43;
  }
  objc_msgSend_objectForKeyedSubscript_(v5, v6, @"type");
  v55 = int v53 = a3;
  __n128 v57 = a1;
  if (objc_msgSend_isEqual_(@"Array", v7, (uint64_t)v55))
  {
    int v54 = objc_msgSend_objectForKeyedSubscript_(v58, v8, @"value");
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      int v37 = sub_244CC8484(0, "NotSpecified");
      if (os_log_type_enabled(v37, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        *(void *)uint64_t v69 = v58;
        _os_log_impl(&dword_2446BD000, v37, OS_LOG_TYPE_ERROR, "MTRServerAttribute value claims to be a list but isn't: %@", buf, 0xCu);
      }

      if (sub_244CC4E58(1u)) {
        sub_244CC4DE0(0, 1);
      }
      unsigned __int8 v67 = 0;

      goto LABEL_42;
    }
    id v9 = v54;
    id v10 = (void *)MEMORY[0x263EFF980];
    id v52 = v9;
    uint64_t v13 = objc_msgSend_count(v9, v11, v12);
    objc_super v15 = objc_msgSend_arrayWithCapacity_(v10, v14, v13);
    if (!v15)
    {
      unsigned __int8 v67 = 0;
LABEL_41:

      goto LABEL_42;
    }
    long long v65 = 0u;
    long long v66 = 0u;
    long long v63 = 0u;
    long long v64 = 0u;
    id obj = v52;
    uint64_t v17 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v16, (uint64_t)&v63, v70, 16);
    if (v17)
    {
      uint64_t v18 = *(void *)v64;
      while (2)
      {
        for (uint64_t i = 0; i != v17; ++i)
        {
          if (*(void *)v64 != v18) {
            objc_enumerationMutation(obj);
          }
          __n128 v20 = *(void **)(*((void *)&v63 + 1) + 8 * i);
          objc_opt_class();
          if ((objc_opt_isKindOfClass() & 1) == 0)
          {
            BOOL v21 = sub_244CC8484(0, "NotSpecified");
            if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
            {
              *(_WORD *)buf = 0;
              _os_log_impl(&dword_2446BD000, v21, OS_LOG_TYPE_ERROR, "MTRServerAttribute value array should contain dictionaries", buf, 2u);
            }

            if (sub_244CC4E58(1u)) {
              sub_244CC4DE0(0, 1);
            }
          }
          id v22 = v20;
          int v24 = objc_msgSend_objectForKeyedSubscript_(v22, v23, @"data");
          id v62 = 0;
          uint64_t v25 = sub_2447D6C9C(v24, &v62);
          id v26 = v62;

          if (!v25)
          {
            unsigned __int8 v67 = 0;

            goto LABEL_41;
          }
          objc_msgSend_addObject_(v15, v27, (uint64_t)v25);
        }
        uint64_t v17 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v28, (uint64_t)&v63, v70, 16);
        if (v17) {
          continue;
        }
        break;
      }
    }

    a1 = v57;
    goto LABEL_20;
  }
  uint64_t v61 = 0;
  objc_super v15 = sub_2447D6C9C(v58, &v61);
  if (v15)
  {
LABEL_20:
    os_unfair_lock_lock(a1 + 2);
    uint64_t v31 = objc_msgSend_copy(v58, v29, v30);
    uint64_t v32 = *(void **)&v57[6]._os_unfair_lock_opaque;
    *(void *)&v57[6]._os_unfair_lock_opaque = v31;

    long long v33 = sub_244CC8484(0, "NotSpecified");
    if (os_log_type_enabled(v33, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v34 = sub_2446DD32C(v57);
      *(_DWORD *)buf = 138412290;
      *(void *)uint64_t v69 = v34;
      _os_log_impl(&dword_2446BD000, v33, OS_LOG_TYPE_DEFAULT, "Attribute value updated: %@", buf, 0xCu);
    }
    if (sub_244CC4E58(2u))
    {
      objc_super v51 = sub_2446DD32C(v57);
      sub_244CC4DE0(0, 2);
    }
    id WeakRetained = objc_loadWeakRetained((id *)&v57[4]);
    if (WeakRetained)
    {
      v59[0] = MEMORY[0x263EF8330];
      v59[1] = 3221225472;
      v59[2] = sub_2446DD3D4;
      v59[3] = &unk_265193DC8;
      v59[4] = v57;
      id v60 = v15;
      objc_msgSend_asyncDispatchToMatterQueue_errorHandler_(WeakRetained, v36, (uint64_t)v59, 0);
    }
    else
    {
      if (v53)
      {
        __int16 v38 = sub_244CC8484(0, "NotSpecified");
        if (os_log_type_enabled(v38, OS_LOG_TYPE_DEFAULT))
        {
          unsigned __int16 v41 = objc_msgSend_unsignedLongLongValue(*(void **)&v57[12]._os_unfair_lock_opaque, v39, v40) >> 16;
          unsigned __int16 v44 = objc_msgSend_unsignedLongLongValue(*(void **)&v57[12]._os_unfair_lock_opaque, v42, v43);
          *(_DWORD *)buf = 67109376;
          *(_DWORD *)uint64_t v69 = v41;
          *(_WORD *)&v69[4] = 1024;
          *(_DWORD *)&v69[6] = v44;
          _os_log_impl(&dword_2446BD000, v38, OS_LOG_TYPE_DEFAULT, "Not publishing value for attribute 0x%04X_%04X; not bound to a controller",
            buf,
            0xEu);
        }

        if (sub_244CC4E58(2u))
        {
          objc_msgSend_unsignedLongLongValue(*(void **)&v57[12]._os_unfair_lock_opaque, v45, v46);
          objc_msgSend_unsignedLongLongValue(*(void **)&v57[12]._os_unfair_lock_opaque, v47, v48);
          sub_244CC4DE0(0, 2);
        }
      }
      objc_storeStrong((id *)&v57[14], v15);
    }
    unsigned __int8 v67 = 1;

    os_unfair_lock_unlock(a1 + 2);
    goto LABEL_42;
  }
  unsigned __int8 v67 = 0;
LABEL_42:

  uint64_t v49 = v67;
LABEL_43:

  return v49;
}

void sub_2446DD11C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, void *a18)
{
  os_unfair_lock_unlock(v20);
  _Unwind_Resume(a1);
}

void sub_2446DD308(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

os_unfair_lock *sub_2446DD32C(os_unfair_lock *a1)
{
  if (a1)
  {
    int v2 = a1;
    os_unfair_lock_assert_owner(a1 + 2);
    id v3 = NSString;
    uint64_t os_unfair_lock_opaque_low = LOWORD(v2[8]._os_unfair_lock_opaque);
    uint64_t os_unfair_lock_opaque_high = HIWORD(v2[9]._os_unfair_lock_opaque);
    uint64_t os_unfair_lock_opaque = (unsigned __int16)v2[9]._os_unfair_lock_opaque;
    uint64_t v9 = objc_msgSend_unsignedLongLongValue(*(void **)&v2[12]._os_unfair_lock_opaque, v7, v8) >> 16;
    unsigned __int16 v12 = objc_msgSend_unsignedLongLongValue(*(void **)&v2[12]._os_unfair_lock_opaque, v10, v11);
    objc_msgSend_stringWithFormat_(v3, v13, @"<MTRServerAttribute endpoint %u, cluster 0x%04X_%04X, id 0x%04X_%04X, value '%@'>", os_unfair_lock_opaque_low, os_unfair_lock_opaque_high, os_unfair_lock_opaque, v9, v12, *(void *)&v2[6]._os_unfair_lock_opaque);
    a1 = (os_unfair_lock *)objc_claimAutoreleasedReturnValue();
    uint64_t v1 = vars8;
  }
  return a1;
}

void sub_2446DD3D4(uint64_t a1)
{
  int v2 = (os_unfair_lock_s *)(*(void *)(a1 + 32) + 8);
  os_unfair_lock_lock(v2);
  char isEqual = objc_msgSend_isEqual_(*(void **)(*(void *)(a1 + 32) + 56), v3, *(void *)(a1 + 40));
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 56), *(id *)(a1 + 40));
  if ((isEqual & 1) == 0)
  {
    uint64_t v7 = *(void *)(a1 + 32);
    unsigned int v8 = *(unsigned __int16 *)(v7 + 32);
    unsigned int v9 = *(_DWORD *)(v7 + 36);
    unsigned int v10 = objc_msgSend_unsignedLongLongValue(*(void **)(v7 + 48), v5, v6);
    sub_24484E288(v8, v9, v10);
  }

  os_unfair_lock_unlock(v2);
}

void sub_2446DD464(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2446DD4CC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2446DD718(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v2);
  _Unwind_Resume(a1);
}

void sub_2446DD940(_Unwind_Exception *exception_object)
{
}

void sub_2446DDA48(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2446DDBB4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446DDCC0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446DDD9C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446DE0E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va1, a14);
  va_start(va, a14);
  objc_super v15 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

_WORD **sub_2446DE160@<X0>(uint64_t a1@<X0>, _WORD **a2@<X1>, void *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  sub_244CB6414(a1, (uint64_t)a3);
  id v5 = *(_WORD **)(a1 + 80);
  if (v5) {
    sub_244CC8A0C(v5);
  }
  uint64_t v6 = *(_WORD **)(a1 + 72);
  unsigned int v8 = v6;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  if (*a2)
  {
    sub_244CC8A0C(*a2);
    uint64_t v6 = v8;
  }
  *a2 = v6;
  unsigned int v8 = 0;
  return sub_244794634(&v8);
}

void sub_2446DE1D0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_244794634((_WORD **)va);
  _Unwind_Resume(a1);
}

double sub_2446DE1E4(uint64_t a1, void *a2)
{
  size_t v4 = *(_WORD **)(a1 + 72);
  if (v4) {
    sub_244CC8A0C(v4);
  }
  *(void *)(a1 + 72) = *a2;
  *a2 = 0;
  uint64_t v5 = *(void *)(a1 + 72);
  uint64_t v6 = *(void *)(v5 + 8);
  unint64_t v7 = *(void *)(v5 + 24);

  return sub_244CB39B8(a1, v6, v7);
}

uint64_t sub_2446DE240(uint64_t a1)
{
  *(void *)(a1 + 64) = &unk_26F9536C8;
  sub_244794634((_WORD **)(a1 + 80));
  sub_244794634((_WORD **)(a1 + 72));
  return a1;
}

void sub_2446DE3A4(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2446DE444(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446DE4F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446DE594(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446DE7F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2446DE96C(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2446DEA94(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446DEB38(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446DEDBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2446DEF38(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2446DF028(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446DF134(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446DF250(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446DF628(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2446DF7A8(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2446DF8A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446DF934(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446DFB18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2446DFC5C(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2446DFD8C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446DFE30(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446E004C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2446E01A0(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2446E02FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446E03A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446E0600(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2446E0760(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2446E08C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446E0970(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446E0BFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2446E0D64(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2446E0E9C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446E0F44(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446E1258(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  sub_244794634((_WORD **)va);

  _Unwind_Resume(a1);
}

void sub_2446E13FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446E152C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446E15D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446E17EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2446E1940(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2446E1AAC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446E1B60(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446E1E78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,_WORD *a26)
{
  sub_244794634(&a26);

  _Unwind_Resume(a1);
}

void sub_2446E20A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446E2148(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446E21F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446E2298(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446E2684(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  sub_24479466C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2446E284C(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2446E28F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446E299C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446E2A44(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446E2D70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,_WORD *a26)
{
  sub_244794634(&a26);

  _Unwind_Resume(a1);
}

void sub_2446E2FE4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446E3120(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446E31C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446E33E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2446E3534(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2446E366C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446E3714(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446E3A28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  sub_244794634((_WORD **)va);

  _Unwind_Resume(a1);
}

void sub_2446E3BCC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446E3CC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446E3D58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446E3F3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2446E4080(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2446E41E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446E4290(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446E451C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2446E4684(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2446E4788(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446E4818(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446E49FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2446E4B40(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2446E4C3C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446E4CCC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446E4EB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2446E4FF4(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2446E50F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446E5180(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446E5364(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2446E54A8(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2446E5604(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446E56B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446E5908(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2446E5A68(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2446E5B6C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446E5BFC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446E5DE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2446E5F24(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2446E60AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446E6164(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446E63F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2446E6560(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2446E6714(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446E67D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446E6AC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2446E6C3C(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2446E6DF0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446E6EAC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446E7198(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2446E730C(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2446E74EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446E75B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446E78E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2446E7A5C(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2446E7BB8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446E7C64(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446E7EBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2446E8020(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2446E81D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446E8290(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446E8588(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2446E86FC(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2446E88B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446E896C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446E8C58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2446E8DCC(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2446E8FAC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446E9074(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446E93A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2446E951C(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2446E9678(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446E9724(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446E997C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2446E9AE0(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2446E9C10(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446E9CB4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446E9ED0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2446EA024(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2446EA0C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446EA174(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446EA218(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446EA858(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
}

void sub_2446EAA9C(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2446EAB74(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446EAC10(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446EAF20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  sub_244794634((_WORD **)va);

  _Unwind_Resume(a1);
}

void sub_2446EB030(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446EB180(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446EB22C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446EB4AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va1, a14);
  va_start(va, a14);
  objc_super v15 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2446EB610(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2446EB798(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446EB850(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446EBB0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va1, a14);
  va_start(va, a14);
  objc_super v15 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2446EBC74(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2446EBDD0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446EBE7C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446EC0FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va1, a14);
  va_start(va, a14);
  objc_super v15 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2446EC260(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2446EC3E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446EC4A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446EC75C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va1, a14);
  va_start(va, a14);
  objc_super v15 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2446EC8C4(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2446ECA20(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446ECACC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446ECD4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va1, a14);
  va_start(va, a14);
  objc_super v15 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2446ECEB0(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2446ED00C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446ED0B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446ED338(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va1, a14);
  va_start(va, a14);
  objc_super v15 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2446ED49C(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2446ED624(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446ED6DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446ED998(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va1, a14);
  va_start(va, a14);
  objc_super v15 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2446EDB00(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2446EDC5C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446EDD08(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446EDF88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va1, a14);
  va_start(va, a14);
  objc_super v15 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2446EE0EC(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2446EE248(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446EE2F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446EE574(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va1, a14);
  va_start(va, a14);
  objc_super v15 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2446EE6D8(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2446EE860(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446EE918(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446EEBD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va1, a14);
  va_start(va, a14);
  objc_super v15 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2446EED3C(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2446EEE98(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446EEF44(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446EF1C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va1, a14);
  va_start(va, a14);
  objc_super v15 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2446EF328(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2446EF4B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446EF568(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446EF824(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va1, a14);
  va_start(va, a14);
  objc_super v15 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2446EF98C(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2446EFA88(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446EFB18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446EFC70(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446EFDFC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446EFF04(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446F0574(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  sub_24479466C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2446F0774(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2446F09BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446F0AD4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446F0E18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,_WORD *a26)
{
  sub_244794634(&a26);

  _Unwind_Resume(a1);
}

void sub_2446F12A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

unsigned char *sub_2446F12CC(unsigned char *a1)
{
  if (!*a1) {
    sub_244E1EC44();
  }
  return a1 + 4;
}

void sub_2446F138C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446F1458(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446F151C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446F17B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2446F1918(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2446F1A48(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446F1AF0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446F1E04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  sub_244794634((_WORD **)va);

  _Unwind_Resume(a1);
}

void sub_2446F1FA8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446F2058(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446F2124(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446F21E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446F247C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2446F25E4(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2446F27C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446F28AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446F2C18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va1, a14);
  va_start(va, a14);
  objc_super v15 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2446F2D90(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2446F2EFC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446F2FA8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446F3204(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va1, a14);
  va_start(va, a14);
  objc_super v15 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2446F3364(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2446F349C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446F3544(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446F3858(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,_WORD *a26)
{
  sub_244794634(&a26);

  _Unwind_Resume(a1);
}

void sub_2446F3A38(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446F3BC0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446F3C78(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446F3F40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va1, a14);
  va_start(va, a14);
  objc_super v15 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2446F40B0(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2446F41E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446F4290(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446F45A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,_WORD *a26)
{
  sub_244794634(&a26);

  _Unwind_Resume(a1);
}

void sub_2446F4784(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446F4878(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446F4908(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446F4AEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2446F4C30(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2446F4D68(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446F4E10(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446F5124(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,_WORD *a26)
{
  sub_244794634(&a26);

  _Unwind_Resume(a1);
}

void sub_2446F5304(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446F5458(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446F5504(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446F575C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2446F58BC(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2446F5994(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446F5A30(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446F5D40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  sub_244794634((_WORD **)va);

  _Unwind_Resume(a1);
}

void sub_2446F5E50(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446F5F98(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446F605C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446F6364(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  sub_24479466C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2446F64D4(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2446F665C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446F6714(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446F6A30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,_WORD *a26)
{
  sub_244794634(&a26);

  _Unwind_Resume(a1);
}

void sub_2446F70DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

unsigned char *sub_2446F7170(unsigned char *a1)
{
  if (!*a1) {
    sub_244E1EC44();
  }
  return a1 + 8;
}

void sub_2446F7270(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446F73BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446F7504(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446F7548()
{
}

void sub_2446F7A04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2446F7B98(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2446F7C48(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446F7D14(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446F7DD8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446F8090(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2446F81FC(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2446F82AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446F8378(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446F843C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446F86F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2446F8860(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2446F8A14(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446F8B0C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446F8E44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,_WORD *a26)
{
  sub_244794634(&a26);

  _Unwind_Resume(a1);
}

void sub_2446F9170(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

unsigned char *sub_2446F9190(unsigned char *a1)
{
  if (!*a1) {
    sub_244E1EC44();
  }
  return a1 + 1;
}

void sub_2446F9248(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446F9314(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446F93D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446F9690(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2446F97FC(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2446F9958(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446F9A0C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446F9D28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,_WORD *a26)
{
  sub_244794634(&a26);

  _Unwind_Resume(a1);
}

void sub_2446F9F84(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446FA044(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446FA130(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446FA1F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446FA4EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2446FA660(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2446FA710(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446FA7DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446FA8B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446FABA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2446FAD14(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2446FADAC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446FAE38(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446FAF08(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446FB234(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,_WORD *a26)
{
  sub_244794634(&a26);

  _Unwind_Resume(a1);
}

void sub_2446FB3E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446FB560(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446FB618(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446FB900(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va1, a14);
  va_start(va, a14);
  objc_super v15 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2446FBA6C(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2446FBB30(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446FBC1C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446FBCF0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446FC018(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,_WORD *a26)
{
  sub_244794634(&a26);

  _Unwind_Resume(a1);
}

void sub_2446FC288(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446FC350(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446FC41C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446FC4E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446FC774(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2446FC8DC(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2446FC9D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446FCA68(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446FCC4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2446FCD90(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2446FCE94(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446FCF38(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446FD250(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,_WORD *a26)
{
  sub_244794634(&a26);

  _Unwind_Resume(a1);
}

void sub_2446FD3F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446FD4AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446FD598(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446FD660(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446FD930(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2446FDAA0(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2446FDB2C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446FDB98(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446FDC48(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446FDF60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,_WORD *a26)
{
  sub_244794634(&a26);

  _Unwind_Resume(a1);
}

void sub_2446FE074(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446FE164(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446FE1F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446FE3D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2446FE51C(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2446FE618(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446FE6A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446FE88C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2446FE9D0(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2446FEACC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446FEB5C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446FED40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2446FEE84(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2446FEF80(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446FF010(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446FF1F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2446FF338(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2446FF4C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446FF578(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446FF82C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va1, a14);
  va_start(va, a14);
  objc_super v15 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2446FF994(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2446FFABC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446FFB60(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2446FFDE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2446FFF60(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244700004(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447000B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244700154(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447005C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  sub_24479466C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2447007A4(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24470087C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244700918(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244700C28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  sub_244794634((_WORD **)va);

  _Unwind_Resume(a1);
}

void sub_244700D38(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244700DD0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244700E7C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244700F20(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244701370(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  sub_24479466C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_244701548(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244701670(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244701714(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24470198C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244701AE8(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244701C44(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244701CF0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244701F48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2447020A8(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24470219C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447022C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447023C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244702754(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va1, a14);
  va_start(va, a14);
  objc_super v15 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2447028D4(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244702A0C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244702AB0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244702CCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244702E20(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244702F1C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244702FAC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244703190(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2447032D4(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244703378(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244703424(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447034DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244703730(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244703888(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244703944(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447039F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244703AC4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24470425C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15, void *a16, void *a17, void *a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,_WORD *a44)
{
  sub_244794634(&a44);
  _Unwind_Resume(a1);
}

void sub_244704504(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244704634(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447046D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447048F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244704A48(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244704AE0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244704B6C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244704C20(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244704F38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,_WORD *a26)
{
  sub_244794634(&a26);

  _Unwind_Resume(a1);
}

void sub_244705094(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244705138(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244705204(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447052C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24470557C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2447056E8(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2447057A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244705850(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244705924(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244705C50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,_WORD *a26)
{
  sub_244794634(&a26);

  _Unwind_Resume(a1);
}

void sub_244705DF8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244705EE4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244706010(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24470611C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244706504(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244706684(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244706734(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244706800(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447068D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244706BC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244706D38(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244706E94(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244706F48(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24470725C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,_WORD *a26)
{
  sub_244794634(&a26);

  _Unwind_Resume(a1);
}

void sub_2447074C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447075F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244707694(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447078E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244707A38(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244707B68(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244707C0C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244707E28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244707F7C(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244708020(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447080CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244708184(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447083D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244708530(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2447085D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244708684(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244708728(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244708C94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va1, a14);
  va_start(va, a14);
  objc_super v15 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244708E74(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244708FA4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244709048(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244709264(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2447093B8(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24470944C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447094D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244709578(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447098BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,_WORD *a26)
{
  sub_244794634(&a26);

  _Unwind_Resume(a1);
}

void sub_244709CA0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244709E2C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244709ED0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24470A0EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24470A240(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24470A33C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24470A3CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24470A5CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24470A710(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24470A7A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24470A834(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24470A8D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24470ABF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,_WORD *a26)
{
  sub_244794634(&a26);

  _Unwind_Resume(a1);
}

void sub_24470AE14(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24470AF00(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24470B02C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24470B12C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24470B4CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24470B648(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24470B720(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24470B7BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24470BACC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  sub_244794634((_WORD **)va);

  _Unwind_Resume(a1);
}

void sub_24470BBDC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24470BD2C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24470BDEC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24470C0A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va1, a14);
  va_start(va, a14);
  objc_super v15 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24470C20C(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24470C33C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24470C3E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24470C5FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24470C750(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24470C828(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24470C8C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24470CBD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  sub_244794634((_WORD **)va);

  _Unwind_Resume(a1);
}

void sub_24470CCE4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24470CE08(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24470CEAC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24470D0C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24470D21C(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24470D318(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24470D3A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24470D58C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24470D6D0(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24470D800(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24470D8A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24470DAC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24470DC14(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24470DD44(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24470DDE8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24470E004(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24470E158(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24470E254(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24470E2E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24470E4C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24470E60C(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24470E708(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24470E798(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24470E97C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24470EAC0(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24470EBBC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24470EC4C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24470EE30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24470EF74(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24470F070(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24470F100(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24470F2E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24470F428(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24470F4B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24470F51C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24470F5B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24470F8D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,_WORD *a26)
{
  sub_244794634(&a26);

  _Unwind_Resume(a1);
}

void sub_24470FB70(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24470FCCC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24470FD70(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24470FF8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2447100E0(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2447101E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244710288(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24471059C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,_WORD *a26)
{
  sub_244794634(&a26);

  _Unwind_Resume(a1);
}

void sub_24471077C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447108A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244710948(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244710B64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244710CB8(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244710DE8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244710E8C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447110A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2447111FC(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244711300(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447113A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447116B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,_WORD *a26)
{
  sub_244794634(&a26);

  _Unwind_Resume(a1);
}

void sub_244711898(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447119C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244711A64(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244711C80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244711DD4(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244711ED8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244711F7C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244712290(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,_WORD *a26)
{
  sub_244794634(&a26);

  _Unwind_Resume(a1);
}

void sub_244712470(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244712598(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24471263C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244712858(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2447129AC(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244712AB0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244712B54(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244712E68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,_WORD *a26)
{
  sub_244794634(&a26);

  _Unwind_Resume(a1);
}

void sub_244713048(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244713170(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244713214(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244713430(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244713584(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244713688(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24471372C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244713A40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,_WORD *a26)
{
  sub_244794634(&a26);

  _Unwind_Resume(a1);
}

void sub_244713C20(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244713D6C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244713E18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447140B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244714220(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244714350(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447143F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244714610(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244714764(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244714868(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24471490C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244714C20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,_WORD *a26)
{
  sub_244794634(&a26);

  _Unwind_Resume(a1);
}

void sub_244714E00(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244714EF4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244714F84(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244715168(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2447152AC(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2447153DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244715480(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24471569C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2447157F0(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244715920(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447159C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244715BE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244715D34(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244715F0C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244715FD4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244716388(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244716508(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244716638(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447166DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447168F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244716A4C(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244716B48(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244716BD8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244716DBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244716F00(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244716FFC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24471708C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244717270(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2447173B4(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2447174B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244717540(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244717724(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244717868(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244717964(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447179F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244717BD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244717D1C(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244717DA4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244717E10(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244717EAC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447181C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,_WORD *a26)
{
  sub_244794634(&a26);

  _Unwind_Resume(a1);
}

void sub_244718464(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24471858C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24471861C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244718800(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244718944(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244718A40(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244718AD0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244718CB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244718DF8(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244718E80(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244718EEC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244718F88(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447192A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,_WORD *a26)
{
  sub_244794634(&a26);

  _Unwind_Resume(a1);
}

void sub_244719540(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244719668(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447196F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447198DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244719A20(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244719B04(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244719C30(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244719CF8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24471A600(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
}

void sub_24471A894(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24471A9C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24471AA74(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24471AD8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  sub_244794634((_WORD **)va);

  _Unwind_Resume(a1);
}

void sub_24471AF54(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24471B0AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24471B158(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24471B3B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24471B514(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24471B6C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24471B78C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24471BAB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,_WORD *a26)
{
  sub_244794634(&a26);

  _Unwind_Resume(a1);
}

void sub_24471C250(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

unsigned char *sub_24471C2FC(unsigned char *a1)
{
  if (!*a1) {
    sub_244E1EC44();
  }
  return a1 + 2;
}

void sub_24471C460(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24471C50C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24471C768(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24471C8C8(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24471C9F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24471CAA8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24471CDC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  sub_244794634((_WORD **)va);

  _Unwind_Resume(a1);
}

void sub_24471CF88(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24471D0B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24471D158(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24471D374(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24471D4C8(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24471D5CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24471D670(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24471D984(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  sub_244794634((_WORD **)va);

  _Unwind_Resume(a1);
}

void sub_24471DB0C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24471DC60(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24471DD0C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24471DF68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24471E0C8(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24471E1F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24471E2A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24471E5C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  sub_244794634((_WORD **)va);

  _Unwind_Resume(a1);
}

void sub_24471E788(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24471E90C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24471E9C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24471ECA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);

  sub_24479466C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_24471EE10(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24471EF40(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24471EFE4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24471F200(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24471F354(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24471F4B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24471F564(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24471F880(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,_WORD *a26)
{
  sub_244794634(&a26);

  _Unwind_Resume(a1);
}

void sub_24471FB74(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24471FD68(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24471FE30(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244720140(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va1, a14);
  va_start(va, a14);
  objc_super v15 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2447202B0(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2447203E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244720490(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447207A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  sub_244794634((_WORD **)va);

  _Unwind_Resume(a1);
}

void sub_244720970(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244720A68(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244720AF8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244720CDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244720E20(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244720F1C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244720FAC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244721190(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2447212D4(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244721404(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447214A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447216C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244721818(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244721948(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447219EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244721C08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244721D5C(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244721EB0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244721F5C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244722220(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);

  sub_24479466C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_24472238C(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244722488(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244722518(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447226FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244722840(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2447228E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24472298C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244722A30(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244722E44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va1, a14);
  va_start(va, a14);
  objc_super v15 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244723004(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244723100(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244723190(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244723374(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2447234B8(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244723558(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244723604(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447236A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244723A84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244723C3C(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244723CE0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244723D8C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244723E44(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244724098(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2447241F0(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244724290(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24472433C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447243E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244724ED4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);

  sub_24479466C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2447251D8(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244725290(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24472535C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244725420(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447256B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24472581C(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244725918(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447259A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244725B8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244725CD0(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244725DCC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244725F38(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244726018(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447266E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  sub_24479466C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_244726900(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2447269A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244726A50(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244726AF4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244726ED8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  sub_24479466C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2447270A0(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244727228(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447272E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244727578(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va1, a14);
  va_start(va, a14);
  objc_super v15 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2447276DC(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2447277D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244727868(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244727A4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244727B90(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244727CEC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244727D98(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244727FF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244728154(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2447282B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24472835C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447285B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244728718(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244728814(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447288A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244728A88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244728BCC(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244728C98(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244728D84(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244728E3C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244729300(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  sub_24479466C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2447294E0(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244729598(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244729664(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244729710(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244729C0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  sub_24479466C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_244729DF8(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244729EF4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244729F84(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24472A168(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24472A2AC(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24472A338(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24472A3A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24472A440(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24472A764(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,_WORD *a26)
{
  sub_244794634(&a26);

  _Unwind_Resume(a1);
}

void sub_24472AB08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  _Unwind_Resume(a1);
}

void sub_24472AC54(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24472ACE4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24472AEC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24472B00C(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24472B194(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24472B24C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24472B508(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24472B670(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24472B7CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24472B878(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24472BAFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va1, a14);
  va_start(va, a14);
  objc_super v15 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24472BC60(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24472BD5C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24472BDEC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24472BFD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24472C114(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24472C1B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24472C264(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24472C308(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24472C944(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
}

void sub_24472CB90(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24472CC8C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24472CD1C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24472CF00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24472D044(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24472D140(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24472D1D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24472D3B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24472D4F8(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24472D628(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24472D6CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24472D8E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24472DA3C(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24472DB40(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24472DBE4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24472DEF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,_WORD *a26)
{
  sub_244794634(&a26);

  _Unwind_Resume(a1);
}

void sub_24472E0D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24472E200(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24472E2A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24472E4C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24472E614(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24472E718(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24472E7BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24472EAD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,_WORD *a26)
{
  sub_244794634(&a26);

  _Unwind_Resume(a1);
}

void sub_24472ECB0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24472EDD8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24472EE7C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24472F098(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24472F1EC(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24472F2F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24472F394(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24472F6A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,_WORD *a26)
{
  sub_244794634(&a26);

  _Unwind_Resume(a1);
}

void sub_24472F888(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24472F9A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24472FA60(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24472FCDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24472FE38(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24472FF60(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244730018(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244730294(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2447303F0(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24473054C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24473060C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447308C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va1, a14);
  va_start(va, a14);
  objc_super v15 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244730A2C(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244730C64(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244730D3C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447310B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va1, a14);
  va_start(va, a14);
  objc_super v15 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244731230(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24473138C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244731438(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244731694(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2447317F4(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244731A2C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244731B04(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244731E24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,_WORD *a26)
{
  sub_244794634(&a26);

  _Unwind_Resume(a1);
}

void sub_2447321FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244732368(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244732414(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244732670(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2447327D0(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244732984(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244732A40(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244732D10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va1, a14);
  va_start(va, a14);
  objc_super v15 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244732E78(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244732FD4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244733080(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447332DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24473343C(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2447335F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447336B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447339D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,_WORD *a26)
{
  sub_244794634(&a26);

  _Unwind_Resume(a1);
}

void sub_244733C80(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244733DE0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244733E8C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447340E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244734248(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2447343FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447344B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244734788(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va1, a14);
  va_start(va, a14);
  objc_super v15 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2447348F0(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244734A20(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244734AC4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244734CE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244734E34(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244734FE8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447350AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447353C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,_WORD *a26)
{
  sub_244794634(&a26);

  _Unwind_Resume(a1);
}

void sub_244735698(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447357CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244735870(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244735A8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244735BE0(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244735E18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244735EF0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244736358(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va1, a14);
  va_start(va, a14);
  objc_super v15 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2447364E8(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244736620(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447366C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447368E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244736A34(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244736CC4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244736DAC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447370E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,_WORD *a26)
{
  sub_244794634(&a26);

  _Unwind_Resume(a1);
}

void sub_2447376C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244737844(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447378E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244737B04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244737C58(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244737D50(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244737E9C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244737F88(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447383B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va1, a14);
  va_start(va, a14);
  objc_super v15 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24473854C(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2447386A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24473875C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244738A80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,_WORD *a26)
{
  sub_244794634(&a26);

  _Unwind_Resume(a1);
}

void sub_244738C94(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244738D30(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244738DDC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244738E80(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447390E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244739258(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244739438(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244739524(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244739858(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,_WORD *a26)
{
  sub_244794634(&a26);

  _Unwind_Resume(a1);
}

void sub_244739B9C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244739CCC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244739D70(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244739FF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24473A170(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24473A298(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24473A350(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24473A5CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24473A728(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24473A818(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24473A924(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24473AA40(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24473AE18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24473AF98(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24473B094(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24473B124(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24473B308(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24473B44C(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24473B548(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24473B5D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24473B7BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24473B900(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24473B9FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24473BA8C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24473BC70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24473BDB4(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24473BEB0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24473BF40(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24473C124(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24473C268(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24473C398(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24473C43C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24473C658(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24473C7AC(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24473C8DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24473C980(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24473CB9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24473CCF0(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24473CE20(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24473CEC4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24473D0E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24473D234(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24473D364(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24473D408(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24473D624(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24473D778(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24473D81C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24473D8C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24473D96C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24473DD5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  sub_24479466C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_24473DF24(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24473E030(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24473E0D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24473E3E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,_WORD *a26)
{
  sub_244794634(&a26);

  _Unwind_Resume(a1);
}

void sub_24473E5AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24473E6D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24473E778(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24473E994(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24473EAE8(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24473EBF4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24473EC98(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24473EFAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,_WORD *a26)
{
  sub_244794634(&a26);

  _Unwind_Resume(a1);
}

void sub_24473F170(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24473F2C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24473F370(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24473F5C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24473F728(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24473F7EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24473F8D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24473F990(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24473FCC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,_WORD *a26)
{
  sub_244794634(&a26);

  _Unwind_Resume(a1);
}

void sub_244740038(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244740130(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24474023C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447402F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24474083C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  sub_24479466C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_244740A2C(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244740B88(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244740C34(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244740E8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244740FF0(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2447410EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24474117C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244741360(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2447414A4(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244741548(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447415F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447416AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244741900(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244741A58(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244741B80(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244741C38(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244741EB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244742014(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2447420C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24474216C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24474221C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24474254C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,_WORD *a26)
{
  sub_244794634(&a26);

  _Unwind_Resume(a1);
}

void sub_24474284C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244742934(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244742A20(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244742AD8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244742F6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  sub_24479466C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_244743140(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2447432C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244743380(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244743658(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2447437C4(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2447439A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244743A6C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244743D70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244743EE4(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244744098(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244744154(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24474441C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24474458C(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24474476C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244744834(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244744B38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244744CAC(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244744E60(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244744F1C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447451E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244745358(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24474550C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447455C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244745890(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244745A00(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244745BE0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244745CA8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244745FAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244746120(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244746300(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447463C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447466CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244746840(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244746A20(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244746AE8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244746DE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244746F5C(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244747110(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447471CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244747498(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244747608(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2447477E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447478B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244747BB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244747D24(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244747ED8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244747F94(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244748260(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2447483D0(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2447485B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244748680(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244748988(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244748AFC(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244748CB0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244748D6C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244749038(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2447491A8(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244749388(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244749450(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244749758(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2447498CC(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244749AAC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244749B74(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244749E7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244749FF0(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24474A228(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24474A300(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24474A67C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va1, a14);
  va_start(va, a14);
  objc_super v15 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24474A7FC(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24474A958(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24474AA04(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24474AC5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24474ADC0(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24474AFCC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24474B098(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24474B3D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va1, a14);
  va_start(va, a14);
  objc_super v15 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24474B54C(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24474B784(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24474B85C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24474BBD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va1, a14);
  va_start(va, a14);
  objc_super v15 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24474BD50(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24474BE4C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24474BEDC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24474C0C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24474C204(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24474C290(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24474C2FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24474C3AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24474C6C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,_WORD *a26)
{
  sub_244794634(&a26);

  _Unwind_Resume(a1);
}

void sub_24474C7D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24474C8C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24474C958(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24474CB3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24474CC80(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24474CD7C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24474CE0C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24474CFF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24474D134(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24474D1C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24474D22C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24474D2DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24474D5F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,_WORD *a26)
{
  sub_244794634(&a26);

  _Unwind_Resume(a1);
}

void sub_24474D708(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24474D7AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24474D878(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24474D93C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24474DBF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24474DD60(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24474DE04(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24474DEB0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24474DF68(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24474E1BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24474E314(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24474E3B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24474E464(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24474E51C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24474E770(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24474E8C8(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24474E96C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24474EA18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24474EAD0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24474ED24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24474EE7C(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24474EF20(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24474EFCC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24474F084(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24474F2D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24474F430(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24474F4BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24474F528(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24474F5D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24474F8F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,_WORD *a26)
{
  sub_244794634(&a26);

  _Unwind_Resume(a1);
}

void sub_24474FA04(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24474FB28(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24474FBCC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24474FE18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24474FF70(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2447500A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244750148(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24475045C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,_WORD *a26)
{
  sub_244794634(&a26);

  _Unwind_Resume(a1);
}

void sub_244750658(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447507AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244750858(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244750AB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244750C10(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244750D40(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244750DE4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244751000(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244751154(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244751384(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244751484(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24475210C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  sub_24479466C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2447523D4(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24475247C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244752508(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447525AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447528DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,_WORD *a26)
{
  sub_244794634(&a26);

  _Unwind_Resume(a1);
}

void sub_2447542A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,void *a30)
{
  _Unwind_Resume(a1);
}

void sub_244754614(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244754720(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447547F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244754D7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  sub_24479466C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_244754F78(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244755064(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244755170(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244755248(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447557CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  sub_24479466C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2447559C8(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244755B24(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244755BD0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244755E80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va1, a14);
  va_start(va, a14);
  objc_super v15 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244755FE8(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244756118(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447561C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447564D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,_WORD *a26)
{
  sub_244794634(&a26);

  _Unwind_Resume(a1);
}

void sub_2447566D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447567C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244756854(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244756A38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244756B7C(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244756C78(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244756D08(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244756EEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244757030(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24475712C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447571BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447573A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2447574E4(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2447575E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244757670(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244757854(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244757998(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244757A94(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244757B24(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244757D08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244757E4C(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244757F48(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244757FD8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447581BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244758300(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244758428(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447584CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24475870C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244758864(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24475898C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244758A30(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244758C70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244758DC8(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244758EF8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244758F9C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447591B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24475930C(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24475943C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447594E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447596FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244759850(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244759980(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244759A28(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244759D3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,_WORD *a26)
{
  sub_244794634(&a26);

  _Unwind_Resume(a1);
}

void sub_244759F38(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24475A060(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24475A104(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24475A320(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24475A474(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24475A5D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24475A684(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24475A910(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24475AA78(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24475ABA8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24475AC4C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24475AE98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24475AFF0(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24475B0EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24475B17C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24475B360(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24475B4A4(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24475B5D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24475B678(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24475B894(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24475B9E8(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24475BAE4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24475BB74(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24475BD58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24475BE9C(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24475BF98(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24475C028(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24475C20C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24475C350(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24475C4B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24475C560(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24475C7EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24475C954(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24475CA50(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24475CAE0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24475CCC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24475CE08(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24475CF38(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24475CFDC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24475D1F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24475D34C(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24475D450(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24475D4F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24475D800(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  sub_244794634((_WORD **)va);

  _Unwind_Resume(a1);
}

void sub_24475D958(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24475DA24(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24475DB50(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24475DC18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24475ECE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  sub_24479466C((uint64_t)&a26);
  _Unwind_Resume(a1);
}

void sub_24475F168(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24475F2F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24475F3A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447605B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);

  sub_24479466C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2447609B4(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244760AE4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244760B8C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244760EA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,_WORD *a26)
{
  sub_244794634(&a26);

  _Unwind_Resume(a1);
}

void sub_24476109C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447611C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244761268(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244761484(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2447615D8(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24476173C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447617E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244761A74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244761BDC(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244761D30(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244761DF0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244762144(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2447622D0(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2447623F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24476249C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244762750(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va1, a14);
  va_start(va, a14);
  objc_super v15 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2447628D4(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2447629FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244762AA0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244762D54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va1, a14);
  va_start(va, a14);
  objc_super v15 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244762ED8(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244763008(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447630C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447633E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,_WORD *a26)
{
  sub_244794634(&a26);

  _Unwind_Resume(a1);
}

void sub_2447635A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447636CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244763770(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447639BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244763B14(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244763C18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244763CB8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244763FC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,_WORD *a26)
{
  sub_244794634(&a26);

  _Unwind_Resume(a1);
}

void sub_24476415C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447642D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244764390(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447646AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244764820(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244764948(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447649EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244764C30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va1, a14);
  va_start(va, a14);
  objc_super v15 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244764D88(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244764EE4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244764F90(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24476527C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2447653EC(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2447654E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244765578(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24476575C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2447658A0(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244765978(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244765A14(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244765D20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,_WORD *a26)
{
  sub_244794634(&a26);

  _Unwind_Resume(a1);
}

void sub_244765E70(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244765F60(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244765FF0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447661D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244766318(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244766414(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447664A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244766688(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2447667CC(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244766920(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447669CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244766CA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va1, a14);
  va_start(va, a14);
  objc_super v15 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244766E0C(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244766F3C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244766FE0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447671FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244767350(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24476744C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447674DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447676C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244767804(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244767900(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244767990(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244767B74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244767CB8(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244767DE8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244767E8C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447680D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244768230(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244768360(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244768404(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244768650(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2447687A8(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244768904(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447689B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244768C9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244768E0C(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244768F3C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244768FEC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244769304(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,_WORD *a26)
{
  sub_244794634(&a26);

  _Unwind_Resume(a1);
}

void sub_244769578(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244769614(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447696C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244769764(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244769CEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);

  sub_24479466C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_244769F2C(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24476A004(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24476A0A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24476A3B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  sub_244794634((_WORD **)va);

  _Unwind_Resume(a1);
}

void sub_24476A4C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24476A568(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24476A634(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24476A6E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24476ACAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);

  sub_24479466C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_24476AEF0(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24476B018(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24476B0BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24476B324(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);

  sub_24479466C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_24476B480(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24476B50C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24476B578(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24476B614(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24476B938(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,_WORD *a26)
{
  sub_244794634(&a26);

  _Unwind_Resume(a1);
}

void sub_24476BD54(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24476BED4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24476BF78(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24476C194(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24476C2E8(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24476C4F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24476C5C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24476C904(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va1, a14);
  va_start(va, a14);
  objc_super v15 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24476CA74(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24476CB4C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24476CBE8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24476CEF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  sub_244794634((_WORD **)va);

  _Unwind_Resume(a1);
}

void sub_24476D008(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24476D12C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24476D1D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24476D3EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24476D540(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24476D680(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24476D88C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24476D988(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24476DEDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va1, a14);
  va_start(va, a14);
  objc_super v15 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24476E08C(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24476E164(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24476E200(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24476E510(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  sub_244794634((_WORD **)va);

  _Unwind_Resume(a1);
}

void sub_24476E620(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24476E7C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24476E884(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24476EBF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va1, a14);
  va_start(va, a14);
  objc_super v15 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24476ED80(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24476EEB0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24476EF54(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24476F170(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24476F2C4(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24476F3BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24476F508(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24476F5D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24476F990(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24476FB20(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24476FBF8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24476FC94(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24476FFA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  sub_244794634((_WORD **)va);

  _Unwind_Resume(a1);
}

void sub_2447700B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447701D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24477027C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244770498(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2447705EC(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244770690(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24477073C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447707E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244770BC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  sub_24479466C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_244770D88(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244770E3C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244770F08(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244770FB4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24477124C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2447713C8(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244771484(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244771530(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447715F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244771914(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,_WORD *a26)
{
  sub_244794634(&a26);

  _Unwind_Resume(a1);
}

void sub_244771B48(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244771C04(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244771CB0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244771D54(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244772008(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244772190(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2447722C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244772364(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244772580(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2447726D4(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244772804(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447728A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244772AC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244772C18(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244772D48(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244772DEC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244773008(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24477315C(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244773368(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244773434(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244773D84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
}

void sub_24477400C(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244774168(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24477421C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244774534(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,_WORD *a26)
{
  sub_244794634(&a26);

  _Unwind_Resume(a1);
}

void sub_2447747BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244774A28(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244774B04(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244775530(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
}

void sub_2447757C8(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2447758F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447759A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244775CBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  sub_244794634((_WORD **)va);

  _Unwind_Resume(a1);
}

void sub_244775E84(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244775FE4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244776090(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24477631C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244776484(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2447765E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244776694(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244776920(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244776A88(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244776BE4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244776C90(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244776EEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24477704C(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244777208(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447772C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244777B24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
}

void sub_244777D98(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244777EFC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244777FA8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244778234(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24477839C(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244778500(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447785AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244778838(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2447789A0(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244778AFC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244778BA8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244778E04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244778F64(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244779060(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447790F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447792D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244779418(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2447795CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244779688(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447799AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244779B1C(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244779C78(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244779D24(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244779F80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va1, a14);
  va_start(va, a14);
  objc_super v15 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24477A0E0(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24477A1BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24477A2A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24477A39C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24477A6D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,_WORD *a26)
{
  sub_244794634(&a26);

  _Unwind_Resume(a1);
}

void sub_24477A924(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24477AA24(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24477AAB4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24477AC98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24477ADDC(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24477AEE0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24477AF80(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24477B294(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  sub_244794634((_WORD **)va);

  _Unwind_Resume(a1);
}

void sub_24477B3EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24477B4DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24477B56C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24477B750(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24477B894(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24477B998(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24477BA38(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24477BD4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  sub_244794634((_WORD **)va);

  _Unwind_Resume(a1);
}

void sub_24477BEA4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24477BF94(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24477C024(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24477C208(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24477C34C(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24477C450(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24477C4F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24477C804(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  sub_244794634((_WORD **)va);

  _Unwind_Resume(a1);
}

void sub_24477C95C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24477CA4C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24477CADC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24477CCC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24477CE04(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24477CF18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24477D044(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24477D10C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24477D490(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,_WORD *a26)
{
  sub_244794634(&a26);

  _Unwind_Resume(a1);
}

void sub_24477E3E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24477E6BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24477E768(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24477E9C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24477EB20(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24477EBB8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24477EC44(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24477ECE4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24477F00C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,_WORD *a26)
{
  sub_244794634(&a26);

  _Unwind_Resume(a1);
}

void sub_24477F228(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24477F360(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24477F404(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24477F620(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24477F774(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24477F8A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24477F94C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24477FC64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  sub_244794634((_WORD **)va);

  _Unwind_Resume(a1);
}

void sub_24477FE08(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24477FF20(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24478006C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244780138(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244781838(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  sub_24479466C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_244781D3C(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244781EC4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244781F7C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244782298(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  sub_244794634((_WORD **)va);

  _Unwind_Resume(a1);
}

void sub_244782544(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447825E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244782690(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244782734(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244782B7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va1, a14);
  va_start(va, a14);
  objc_super v15 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244782D48(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2447832F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244783468(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447837D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,_WORD *a26)
{
  sub_244794634(&a26);

  _Unwind_Resume(a1);
}

void sub_244784CB0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244784EF4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244784FA0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244785044(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244785774(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);

  sub_24479466C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2447859DC(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244785AE0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244785B80(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244785E94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  sub_244794634((_WORD **)va);

  _Unwind_Resume(a1);
}

void sub_244785FEC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244786084(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244786130(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447861D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244786744(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  sub_24479466C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_244786948(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2447869DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244786A68(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244786B08(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244786E3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,_WORD *a26)
{
  sub_244794634(&a26);

  _Unwind_Resume(a1);
}

void sub_2447871F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447872F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24478739C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244787440(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244787820(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  sub_24479466C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2447879E8(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244787AEC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244787B8C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244787EA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  sub_244794634((_WORD **)va);

  _Unwind_Resume(a1);
}

void sub_244787FF8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24478808C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244788138(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447881DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447891BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  sub_24479466C((uint64_t)&a26);
  _Unwind_Resume(a1);
}

void sub_2447895C0(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2447896C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244789764(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244789A78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  sub_244794634((_WORD **)va);

  _Unwind_Resume(a1);
}

void sub_244789BD0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244789C68(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244789D14(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244789DB8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24478ACD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  sub_24479466C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_24478B080(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24478B10C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24478B178(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24478B228(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24478B544(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,_WORD *a26)
{
  sub_244794634(&a26);

  _Unwind_Resume(a1);
}

void sub_24478B658(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24478B6F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24478B79C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24478B840(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24478BC20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  sub_24479466C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_24478BDE8(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24478BE74(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24478BEE0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24478BF90(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24478C2AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,_WORD *a26)
{
  sub_244794634(&a26);

  _Unwind_Resume(a1);
}

void sub_24478C3C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24478C510(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24478C5BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24478C818(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24478C978(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24478CA14(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24478CAA0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24478CB44(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24478CE68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,_WORD *a26)
{
  sub_244794634(&a26);

  _Unwind_Resume(a1);
}

void sub_24478D16C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24478D2BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24478D360(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24478D5C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);

  sub_24479466C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_24478D724(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24478DA30(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24478DB2C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24478EEB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  sub_24479466C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_24478F268(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24478F308(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24478F3B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24478F458(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24478F8A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va1, a14);
  va_start(va, a14);
  objc_super v15 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24478FA6C(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24478FB68(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24478FBF8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24478FDDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_24478FF20(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244790048(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447900EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24479032C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244790484(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_24479060C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447906C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244790958(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244790ABC(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244790BEC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244790C90(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244790EAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244791000(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244791188(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244791240(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447914D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244791638(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2447917C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244791878(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244791B0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244791C70(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244791D14(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244791DC0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244791E78(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447920CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244792224(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_2447922D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447923A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244792450(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447927F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);

  sub_24479466C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_244792994(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244792AC4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244792B68(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244792D84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244792ED8(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244792FDC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244793080(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244793398(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,_WORD *a26)
{
  sub_244794634(&a26);

  _Unwind_Resume(a1);
}

void sub_244793520(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244793614(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447936A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244793888(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2447939CC(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

void sub_244793AA4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244793B40(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244793E54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  sub_244794634((_WORD **)va);

  _Unwind_Resume(a1);
}

void sub_244793F64(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447940B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_244794160(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447943B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, _WORD *);
  sub_244794634((_WORD **)va);
  sub_24479466C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_244794518(_Unwind_Exception *a1)
{
  sub_244794634(v1);
  _Unwind_Resume(a1);
}

_WORD **sub_2447945A0(uint64_t a1, void *a2, char a3)
{
  uint64_t v6 = *(_WORD **)(a1 + 8);
  if (v6) {
    sub_244CC8A0C(v6);
  }
  *(void *)(a1 + 8) = *a2;
  *a2 = 0;
  sub_244CC8F2C(*(void *)(a1 + 8));
  unsigned int v8 = *(_WORD **)(a1 + 8);
  unint64_t v7 = *(_WORD **)(a1 + 16);
  unsigned int v10 = v8;
  if (v7)
  {
    sub_244CC8A0C(v7);
    unsigned int v8 = v10;
  }
  *(void *)(a1 + 16) = v8;
  unsigned int v10 = 0;
  uint64_t result = sub_244794634(&v10);
  *(unsigned char *)(a1 + 24) = a3;
  return result;
}

void sub_244794620(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_244794634((_WORD **)va);
  _Unwind_Resume(a1);
}

_WORD **sub_244794634(_WORD **a1)
{
  int v2 = *a1;
  if (v2) {
    sub_244CC8A0C(v2);
  }
  *a1 = 0;
  return a1;
}

uint64_t sub_24479466C(uint64_t a1)
{
  int v2 = (void *)(a1 + 8);
  id v3 = *(void **)a1;
  if (*(void *)a1 != a1 + 8)
  {
    do
    {
      uint64_t v4 = v3[4];
      if (v4) {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
      }
      uint64_t v5 = (void *)v3[1];
      if (v5)
      {
        do
        {
          uint64_t v6 = v5;
          uint64_t v5 = (void *)*v5;
        }
        while (v5);
      }
      else
      {
        do
        {
          uint64_t v6 = (void *)v3[2];
          BOOL v7 = *v6 == (void)v3;
          id v3 = v6;
        }
        while (!v7);
      }
      id v3 = v6;
    }
    while (v6 != v2);
  }
  sub_244794718(a1, *(void **)(a1 + 8));
  return a1;
}

void sub_244794718(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_244794718(a1, *a2);
    sub_244794718(a1, a2[1]);
    operator delete(a2);
  }
}

void *sub_24479476C(void *result, uint64_t a2, uint64_t a3)
{
  *uint64_t result = a2;
  result[1] = a3;
  if (!a2)
  {
    if (a3) {
      sub_244E1ECEC();
    }
  }
  return result;
}

uint64_t *sub_244794790(uint64_t **a1, unint64_t *a2, uint64_t *a3)
{
  uint64_t v6 = a1 + 1;
  uint64_t v5 = a1[1];
  if (v5)
  {
    unint64_t v7 = *a2;
    while (1)
    {
      while (1)
      {
        unsigned int v8 = (uint64_t **)v5;
        unint64_t v9 = v5[4];
        if (v7 >= v9) {
          break;
        }
        uint64_t v5 = *v8;
        uint64_t v6 = v8;
        if (!*v8) {
          goto LABEL_10;
        }
      }
      if (v9 >= v7) {
        break;
      }
      uint64_t v5 = v8[1];
      if (!v5)
      {
        uint64_t v6 = v8 + 1;
        goto LABEL_10;
      }
    }
  }
  else
  {
    unsigned int v8 = a1 + 1;
LABEL_10:
    unsigned int v10 = (uint64_t *)operator new(0x28uLL);
    v10[4] = *a3;
    sub_2446DA06C(a1, (uint64_t)v8, v6, v10);
    return v10;
  }
  return (uint64_t *)v8;
}

void sub_24479484C()
{
  exception = __cxa_allocate_exception(8uLL);
  void *exception = MEMORY[0x263F8C3B0] + 16;
  __cxa_throw(exception, MEMORY[0x263F8C200], MEMORY[0x263F8C088]);
}

void *sub_244794898(void *a1)
{
  *a1 = &unk_26F944238;
  uint64_t v2 = a1[1];
  if (v2) {
    MEMORY[0x245695F80](v2, 0x1000C80BDFB0063);
  }
  return a1;
}

void sub_2447948F4(void *a1)
{
  *a1 = &unk_26F944238;
  uint64_t v1 = a1[1];
  if (v1) {
    MEMORY[0x245695F80](v1, 0x1000C80BDFB0063);
  }

  JUMPOUT(0x245695FA0);
}

BOOL sub_244794970(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 96) == -1) {
    return 0;
  }
  id v3 = (int *)(a1 + 8);
  int v2 = *(_DWORD *)(a1 + 8);
  if (!v2)
  {
    sub_244CB4E58(a1 + 32, &v5);
    *(_OWORD *)id v3 = v5;
    *((void *)v3 + 2) = v6;
    int v2 = *v3;
    if (!*v3)
    {
      *(_WORD *)a1 = 0;
      sub_244CB3F40(a1 + 32, (_WORD *)a1, (uint64_t)&v5);
      *(_OWORD *)id v3 = v5;
      *((void *)v3 + 2) = v6;
      int v2 = *(_DWORD *)(a1 + 8);
    }
  }
  return v2 == 0;
}

void sub_244794A18(void *a1, unint64_t a2)
{
  *a1 = &unk_26F944280;
  is_mul_ok(a2, 0x18uLL);
  operator new[]();
}

void *sub_244794AB8(void *a1)
{
  *a1 = &unk_26F944280;
  uint64_t v2 = a1[1];
  if (v2) {
    MEMORY[0x245695F80](v2, 0x1060C803A25DE4BLL);
  }
  return a1;
}

void sub_244794B14(void *a1)
{
  *a1 = &unk_26F944280;
  uint64_t v1 = a1[1];
  if (v1) {
    MEMORY[0x245695F80](v1, 0x1060C803A25DE4BLL);
  }

  JUMPOUT(0x245695FA0);
}

void sub_244794B90(void *a1, unint64_t a2)
{
  *a1 = &unk_26F9442B8;
  is_mul_ok(a2, 0xCuLL);
  operator new[]();
}

void *sub_244794C2C(void *a1)
{
  *a1 = &unk_26F9442B8;
  uint64_t v2 = a1[1];
  if (v2) {
    MEMORY[0x245695F80](v2, 0x1000C80D7A84E51);
  }
  return a1;
}

void sub_244794C88(void *a1)
{
  *a1 = &unk_26F9442B8;
  uint64_t v1 = a1[1];
  if (v1) {
    MEMORY[0x245695F80](v1, 0x1000C80D7A84E51);
  }

  JUMPOUT(0x245695FA0);
}

void *sub_244794D04(void *a1)
{
  *a1 = &unk_26F9442F0;
  uint64_t v2 = a1[1];
  if (v2) {
    MEMORY[0x245695F80](v2, 0x1000C8077774924);
  }
  return a1;
}

void sub_244794D60(void *a1)
{
  *a1 = &unk_26F9442F0;
  uint64_t v1 = a1[1];
  if (v1) {
    MEMORY[0x245695F80](v1, 0x1000C8077774924);
  }

  JUMPOUT(0x245695FA0);
}

uint64_t sub_244794DDC(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  *(unsigned char *)a1 = 0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_DWORD *)(a1 + 40) = 0;
  sub_244CB3988(a1 + 72);
  int v7 = *a3;
  *(unsigned char *)(a1 + 144) = v7;
  if (v7) {
    *(unsigned char *)(a1 + 145) = a3[1];
  }
  *(_DWORD *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 64) = 93;
  sub_244CB3B04(v6, a2);
  return a1;
}

BOOL sub_244794E60(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 136) == -1) {
    return 0;
  }
  uint64_t v3 = a1 + 48;
  int v2 = *(_DWORD *)(a1 + 48);
  if (!v2)
  {
    sub_244CB4E58(a1 + 72, &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *(void *)(v3 + 16) = v6;
    int v2 = *(_DWORD *)v3;
    if (!*(_DWORD *)v3)
    {
      *(_OWORD *)(a1 + 28) = 0u;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      sub_2447FDFC4(a1, a1 + 72, (uint64_t)&v5);
      *(_OWORD *)uint64_t v3 = v5;
      *(void *)(v3 + 16) = v6;
      int v2 = *(_DWORD *)(a1 + 48);
    }
  }
  return v2 == 0;
}

uint64_t sub_244794F10(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  *(_WORD *)a1 = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 8) = 0;
  *(_DWORD *)(a1 + 31) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(_WORD *)(a1 + 56) = 0;
  sub_244CB3988(a1 + 88);
  int v7 = *a3;
  *(unsigned char *)(a1 + 160) = v7;
  if (v7) {
    *(unsigned char *)(a1 + 161) = a3[1];
  }
  *(_DWORD *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 80) = 93;
  sub_244CB3B04(v6, a2);
  return a1;
}

BOOL sub_244794F98(uint64_t a1)
{
  v7[2] = *MEMORY[0x263EF8340];
  if (*(_DWORD *)(a1 + 152) == -1) {
    return 0;
  }
  uint64_t v3 = a1 + 64;
  int v2 = *(_DWORD *)(a1 + 64);
  if (!v2)
  {
    sub_244CB4E58(a1 + 88, v6);
    *(_OWORD *)uint64_t v3 = *(_OWORD *)v6;
    *(void *)(v3 + 16) = *(void *)&v6[16];
    int v2 = *(_DWORD *)v3;
    if (!*(_DWORD *)v3)
    {
      memset(v6, 0, sizeof(v6));
      *(_OWORD *)(a1 + 2) = 0u;
      v7[0] = 0;
      *(void *)((char *)v7 + 7) = 0;
      *(_WORD *)a1 = 0;
      *(_OWORD *)(a1 + 18) = 0u;
      *(unsigned char *)(a1 + 34) = v6[32];
      *(void *)(a1 + 35) = 0;
      uint64_t v4 = v7[0];
      *(void *)(a1 + 50) = 0;
      *(void *)(a1 + 43) = v4;
      sub_2447FDC04(a1, a1 + 88, (uint64_t)v6);
      *(_OWORD *)uint64_t v3 = *(_OWORD *)v6;
      *(void *)(v3 + 16) = *(void *)&v6[16];
      int v2 = *(_DWORD *)(a1 + 64);
    }
  }
  return v2 == 0;
}

void sub_2447950B4(void *a1, unint64_t a2)
{
  *a1 = &unk_26F944328;
  is_mul_ok(a2, 0x28uLL);
  operator new[]();
}

void *sub_244795170(void *a1)
{
  *a1 = &unk_26F944328;
  uint64_t v2 = a1[1];
  if (v2) {
    MEMORY[0x245695F80](v2 - 16, 0x1050C80A4263F9ELL);
  }
  return a1;
}

void sub_2447951D0(void *a1)
{
  *a1 = &unk_26F944328;
  uint64_t v1 = a1[1];
  if (v1) {
    MEMORY[0x245695F80](v1 - 16, 0x1050C80A4263F9ELL);
  }

  JUMPOUT(0x245695FA0);
}

void sub_244795250(void *a1)
{
  *a1 = &unk_26F944360;
  operator new[]();
}

void *sub_2447952E4(void *a1)
{
  *a1 = &unk_26F944360;
  uint64_t v2 = a1[1];
  if (v2) {
    MEMORY[0x245695F80](v2, 0x1000C8022B81155);
  }
  return a1;
}

void sub_244795340(void *a1)
{
  *a1 = &unk_26F944360;
  uint64_t v1 = a1[1];
  if (v1) {
    MEMORY[0x245695F80](v1, 0x1000C8022B81155);
  }

  JUMPOUT(0x245695FA0);
}

void sub_2447953BC(void *a1, unint64_t a2)
{
  *a1 = &unk_26F944398;
  is_mul_ok(a2, 0x18uLL);
  operator new[]();
}

void *sub_244795454(void *a1)
{
  *a1 = &unk_26F944398;
  uint64_t v2 = a1[1];
  if (v2) {
    MEMORY[0x245695F80](v2, 0x1060C80F76DDFE0);
  }
  return a1;
}

void sub_2447954B0(void *a1)
{
  *a1 = &unk_26F944398;
  uint64_t v1 = a1[1];
  if (v1) {
    MEMORY[0x245695F80](v1, 0x1060C80F76DDFE0);
  }

  JUMPOUT(0x245695FA0);
}

void sub_24479552C(void *a1)
{
  *a1 = &unk_26F9443D0;
  operator new[]();
}

void *sub_2447955E4(void *a1)
{
  *a1 = &unk_26F9443D0;
  uint64_t v2 = a1[1];
  if (v2) {
    MEMORY[0x245695F80](v2 - 16, 0x1000C809292CEA2);
  }
  return a1;
}

void sub_244795644(void *a1)
{
  *a1 = &unk_26F9443D0;
  uint64_t v1 = a1[1];
  if (v1) {
    MEMORY[0x245695F80](v1 - 16, 0x1000C809292CEA2);
  }

  JUMPOUT(0x245695FA0);
}

uint64_t sub_2447956C4(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  *(_DWORD *)a1 = 0;
  sub_244CB3988(a1 + 8);
  *(unsigned char *)(a1 + 80) = 0;
  sub_244CB39B8(v6, 0, 0);
  sub_244CB3988(a1 + 112);
  int v8 = *a3;
  *(unsigned char *)(a1 + 184) = v8;
  if (v8) {
    *(unsigned char *)(a1 + 185) = a3[1];
  }
  *(_DWORD *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 104) = 93;
  sub_244CB3B04(v7, a2);
  return a1;
}

BOOL sub_24479574C(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 176) == -1) {
    return 0;
  }
  uint64_t v3 = (int *)(a1 + 88);
  int v2 = *(_DWORD *)(a1 + 88);
  if (!v2)
  {
    sub_244CB4E58(a1 + 112, v7);
    *(_OWORD *)uint64_t v3 = v7[0];
    *((void *)v3 + 2) = *(void *)&v7[1];
    int v2 = *v3;
    if (!*v3)
    {
      uint64_t v8 = 0;
      memset(v7, 0, sizeof(v7));
      sub_244CB3988((uint64_t)v7 + 8);
      LOBYTE(v8) = 0;
      sub_244CB39B8(v4, 0, 0);
      *(_DWORD *)a1 = v7[0];
      *(_OWORD *)(a1 + 24) = *(_OWORD *)((char *)&v7[1] + 8);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)((char *)&v7[2] + 8);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)((char *)&v7[3] + 8);
      *(void *)(a1 + 71) = *(void *)((char *)&v7[4] + 7);
      *(_OWORD *)(a1 + 8) = *(_OWORD *)((char *)v7 + 8);
      int v5 = v8;
      *(unsigned char *)(a1 + 80) = v8;
      if (v5) {
        *(unsigned char *)(a1 + 81) = BYTE1(v8);
      }
      sub_2448109E8((_DWORD *)a1, a1 + 112, (uint64_t)v7);
      *(_OWORD *)uint64_t v3 = v7[0];
      *((void *)v3 + 2) = *(void *)&v7[1];
      int v2 = *(_DWORD *)(a1 + 88);
    }
  }
  return v2 == 0;
}

uint64_t sub_244795864(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  *(_DWORD *)a1 = 0;
  *(unsigned char *)(a1 + 4) = 0;
  *(unsigned char *)(a1 + 6) = 0;
  *(unsigned char *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 12) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 24) = 0;
  *(unsigned char *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 48) = 0;
  sub_244CB3988(a1 + 88);
  int v7 = *a3;
  *(unsigned char *)(a1 + 160) = v7;
  if (v7) {
    *(unsigned char *)(a1 + 161) = a3[1];
  }
  *(_DWORD *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 80) = 93;
  sub_244CB3B04(v6, a2);
  return a1;
}

BOOL sub_2447958F8(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 152) == -1) {
    return 0;
  }
  uint64_t v3 = a1 + 64;
  int v2 = *(_DWORD *)(a1 + 64);
  if (!v2)
  {
    sub_244CB4E58(a1 + 88, &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *(void *)(v3 + 16) = v6;
    int v2 = *(_DWORD *)v3;
    if (!*(_DWORD *)v3)
    {
      *(_DWORD *)a1 = 0;
      *(unsigned char *)(a1 + 4) = 0;
      *(unsigned char *)(a1 + 6) = 0;
      *(unsigned char *)(a1 + 8) = 0;
      *(unsigned char *)(a1 + 12) = 0;
      *(unsigned char *)(a1 + 16) = 0;
      *(unsigned char *)(a1 + 24) = 0;
      *(unsigned char *)(a1 + 32) = 0;
      *(unsigned char *)(a1 + 48) = 0;
      sub_2448105BC(a1, a1 + 88, (uint64_t)&v5);
      *(_OWORD *)uint64_t v3 = v5;
      *(void *)(v3 + 16) = v6;
      int v2 = *(_DWORD *)(a1 + 64);
    }
  }
  return v2 == 0;
}

BOOL sub_2447959C0(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 96) == -1) {
    return 0;
  }
  uint64_t v3 = (int *)(a1 + 8);
  int v2 = *(_DWORD *)(a1 + 8);
  if (!v2)
  {
    sub_244CB4E58(a1 + 32, &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *((void *)v3 + 2) = v6;
    int v2 = *v3;
    if (!*v3)
    {
      *(unsigned char *)a1 = 0;
      sub_244CB3E8C(a1 + 32, (unsigned char *)a1, (uint64_t)&v5);
      *(_OWORD *)uint64_t v3 = v5;
      *((void *)v3 + 2) = v6;
      int v2 = *(_DWORD *)(a1 + 8);
    }
  }
  return v2 == 0;
}

void sub_244795A68(void *a1, unint64_t a2)
{
  *a1 = &unk_26F944408;
  is_mul_ok(a2, 0x26uLL);
  operator new[]();
}

void *sub_244795B2C(void *a1)
{
  *a1 = &unk_26F944408;
  uint64_t v2 = a1[1];
  if (v2) {
    MEMORY[0x245695F80](v2 - 16, 0x1000C802EF706F4);
  }
  return a1;
}

void sub_244795B8C(void *a1)
{
  *a1 = &unk_26F944408;
  uint64_t v1 = a1[1];
  if (v1) {
    MEMORY[0x245695F80](v1 - 16, 0x1000C802EF706F4);
  }

  JUMPOUT(0x245695FA0);
}

void sub_244795C0C(void *a1)
{
  *a1 = &unk_26F944440;
  operator new[]();
}

void *sub_244795CA8(void *a1)
{
  *a1 = &unk_26F944440;
  uint64_t v2 = a1[1];
  if (v2) {
    MEMORY[0x245695F80](v2 - 16, 0x1050C809F46B219);
  }
  return a1;
}

void sub_244795D08(void *a1)
{
  *a1 = &unk_26F944440;
  uint64_t v1 = a1[1];
  if (v1) {
    MEMORY[0x245695F80](v1 - 16, 0x1050C809F46B219);
  }

  JUMPOUT(0x245695FA0);
}

void sub_244795D88(void *a1)
{
  *a1 = &unk_26F944478;
  operator new[]();
}

void *sub_244795E10(void *a1)
{
  *a1 = &unk_26F944478;
  uint64_t v2 = a1[1];
  if (v2) {
    MEMORY[0x245695F80](v2, 0x1050C80717B85FCLL);
  }
  return a1;
}

void sub_244795E6C(void *a1)
{
  *a1 = &unk_26F944478;
  uint64_t v1 = a1[1];
  if (v1) {
    MEMORY[0x245695F80](v1, 0x1050C80717B85FCLL);
  }

  JUMPOUT(0x245695FA0);
}

void sub_244795EE8(void *a1)
{
  *a1 = &unk_26F9444B0;
  operator new[]();
}

void *sub_244795F88(void *a1)
{
  *a1 = &unk_26F9444B0;
  uint64_t v2 = a1[1];
  if (v2) {
    MEMORY[0x245695F80](v2 - 16, 0x1000C80EC71111DLL);
  }
  return a1;
}

void sub_244795FE8(void *a1)
{
  *a1 = &unk_26F9444B0;
  uint64_t v1 = a1[1];
  if (v1) {
    MEMORY[0x245695F80](v1 - 16, 0x1000C80EC71111DLL);
  }

  JUMPOUT(0x245695FA0);
}

void sub_244796068(void *a1, unint64_t a2)
{
  *a1 = &unk_26F9444E8;
  is_mul_ok(a2, 0x30uLL);
  operator new[]();
}

void *sub_244796120(void *a1)
{
  *a1 = &unk_26F9444E8;
  uint64_t v2 = a1[1];
  if (v2) {
    MEMORY[0x245695F80](v2 - 16, 0x1000C802F250FDELL);
  }
  return a1;
}

void sub_244796180(void *a1)
{
  *a1 = &unk_26F9444E8;
  uint64_t v1 = a1[1];
  if (v1) {
    MEMORY[0x245695F80](v1 - 16, 0x1000C802F250FDELL);
  }

  JUMPOUT(0x245695FA0);
}

uint64_t sub_244796200(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  *(unsigned char *)a1 = 0;
  sub_244CB3988(a1 + 8);
  *(unsigned char *)(a1 + 80) = 0;
  sub_244CB39B8(v6, 0, 0);
  sub_244CB3988(a1 + 112);
  int v8 = *a3;
  *(unsigned char *)(a1 + 184) = v8;
  if (v8) {
    *(unsigned char *)(a1 + 185) = a3[1];
  }
  *(_DWORD *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 104) = 93;
  sub_244CB3B04(v7, a2);
  return a1;
}

BOOL sub_244796288(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 176) == -1) {
    return 0;
  }
  uint64_t v3 = (int *)(a1 + 88);
  int v2 = *(_DWORD *)(a1 + 88);
  if (!v2)
  {
    sub_244CB4E58(a1 + 112, v7);
    *(_OWORD *)uint64_t v3 = v7[0];
    *((void *)v3 + 2) = *(void *)&v7[1];
    int v2 = *v3;
    if (!*v3)
    {
      uint64_t v8 = 0;
      memset(v7, 0, sizeof(v7));
      sub_244CB3988((uint64_t)v7 + 8);
      LOBYTE(v8) = 0;
      sub_244CB39B8(v4, 0, 0);
      *(unsigned char *)a1 = v7[0];
      *(_OWORD *)(a1 + 24) = *(_OWORD *)((char *)&v7[1] + 8);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)((char *)&v7[2] + 8);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)((char *)&v7[3] + 8);
      *(void *)(a1 + 71) = *(void *)((char *)&v7[4] + 7);
      *(_OWORD *)(a1 + 8) = *(_OWORD *)((char *)v7 + 8);
      int v5 = v8;
      *(unsigned char *)(a1 + 80) = v8;
      if (v5) {
        *(unsigned char *)(a1 + 81) = BYTE1(v8);
      }
      sub_24481C52C((unsigned char *)a1, a1 + 112, (uint64_t)v7);
      *(_OWORD *)uint64_t v3 = v7[0];
      *((void *)v3 + 2) = *(void *)&v7[1];
      int v2 = *(_DWORD *)(a1 + 88);
    }
  }
  return v2 == 0;
}

uint64_t sub_2447963A0(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  *(_WORD *)a1 = 0;
  *(unsigned char *)(a1 + 2) = 0;
  *(unsigned char *)(a1 + 8) = 0;
  sub_244CB3988(a1 + 48);
  int v7 = *a3;
  *(unsigned char *)(a1 + 120) = v7;
  if (v7) {
    *(unsigned char *)(a1 + 121) = a3[1];
  }
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 40) = 93;
  sub_244CB3B04(v6, a2);
  return a1;
}

BOOL sub_24479641C(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 112) == -1) {
    return 0;
  }
  uint64_t v3 = a1 + 24;
  int v2 = *(_DWORD *)(a1 + 24);
  if (!v2)
  {
    sub_244CB4E58(a1 + 48, &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *(void *)(v3 + 16) = v6;
    int v2 = *(_DWORD *)v3;
    if (!*(_DWORD *)v3)
    {
      *(_WORD *)a1 = 0;
      *(unsigned char *)(a1 + 2) = 0;
      *(unsigned char *)(a1 + 8) = 0;
      sub_24481C200(a1, a1 + 48, (uint64_t)&v5);
      *(_OWORD *)uint64_t v3 = v5;
      *(void *)(v3 + 16) = v6;
      int v2 = *(_DWORD *)(a1 + 24);
    }
  }
  return v2 == 0;
}

void sub_2447964CC(void *a1, unint64_t a2)
{
  *a1 = &unk_26F944520;
  is_mul_ok(a2, 0x18uLL);
  operator new[]();
}

void *sub_244796564(void *a1)
{
  *a1 = &unk_26F944520;
  uint64_t v2 = a1[1];
  if (v2) {
    MEMORY[0x245695F80](v2, 0x1060C80AA6B27F1);
  }
  return a1;
}

void sub_2447965C0(void *a1)
{
  *a1 = &unk_26F944520;
  uint64_t v1 = a1[1];
  if (v1) {
    MEMORY[0x245695F80](v1, 0x1060C80AA6B27F1);
  }

  JUMPOUT(0x245695FA0);
}

void sub_24479663C(void *a1, unint64_t a2)
{
  *a1 = &unk_26F944558;
  is_mul_ok(a2, 0x18uLL);
  operator new[]();
}

void *sub_2447966F8(void *a1)
{
  *a1 = &unk_26F944558;
  uint64_t v2 = a1[1];
  if (v2) {
    MEMORY[0x245695F80](v2 - 16, 0x1000C80B9492974);
  }
  return a1;
}

void sub_244796758(void *a1)
{
  *a1 = &unk_26F944558;
  uint64_t v1 = a1[1];
  if (v1) {
    MEMORY[0x245695F80](v1 - 16, 0x1000C80B9492974);
  }

  JUMPOUT(0x245695FA0);
}

uint64_t sub_2447967D8(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  *(unsigned char *)a1 = 0;
  *(_WORD *)(a1 + 2) = 0;
  sub_244CB3988(a1 + 32);
  int v7 = *a3;
  *(unsigned char *)(a1 + 104) = v7;
  if (v7) {
    *(unsigned char *)(a1 + 105) = a3[1];
  }
  *(_DWORD *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 24) = 93;
  sub_244CB3B04(v6, a2);
  return a1;
}

BOOL sub_244796850(_DWORD *a1)
{
  if (a1[24] == -1) {
    return 0;
  }
  uint64_t v3 = a1 + 2;
  int v2 = a1[2];
  if (!v2)
  {
    sub_244CB4E58((uint64_t)(a1 + 8), &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *((void *)v3 + 2) = v6;
    int v2 = *v3;
    if (!*v3)
    {
      *a1 = 0;
      sub_24481EE80((uint64_t)a1, (uint64_t)(a1 + 8), (uint64_t)&v5);
      *(_OWORD *)uint64_t v3 = v5;
      *((void *)v3 + 2) = v6;
      int v2 = a1[2];
    }
  }
  return v2 == 0;
}

void *sub_2447968F8(void *a1)
{
  *a1 = &unk_26F944590;
  uint64_t v2 = a1[1];
  if (v2) {
    MEMORY[0x245695F80](v2, 0x1000C8052888210);
  }
  return a1;
}

void sub_244796954(void *a1)
{
  *a1 = &unk_26F944590;
  uint64_t v1 = a1[1];
  if (v1) {
    MEMORY[0x245695F80](v1, 0x1000C8052888210);
  }

  JUMPOUT(0x245695FA0);
}

uint64_t sub_2447969D0(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  *(_WORD *)a1 = 0;
  *(unsigned char *)(a1 + 2) = 0;
  *(unsigned char *)(a1 + 4) = 0;
  *(unsigned char *)(a1 + 6) = 0;
  *(unsigned char *)(a1 + 8) = 0;
  sub_244CB3988(a1 + 40);
  int v7 = *a3;
  *(unsigned char *)(a1 + 112) = v7;
  if (v7) {
    *(unsigned char *)(a1 + 113) = a3[1];
  }
  *(_DWORD *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 32) = 93;
  sub_244CB3B04(v6, a2);
  return a1;
}

BOOL sub_244796A54(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 104) == -1) {
    return 0;
  }
  uint64_t v3 = (int *)(a1 + 16);
  int v2 = *(_DWORD *)(a1 + 16);
  if (!v2)
  {
    sub_244CB4E58(a1 + 40, &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *((void *)v3 + 2) = v6;
    int v2 = *v3;
    if (!*v3)
    {
      *(_WORD *)(a1 + 8) = 0;
      *(void *)a1 = 0;
      sub_244828088((_WORD *)a1, a1 + 40, (uint64_t)&v5);
      *(_OWORD *)uint64_t v3 = v5;
      *((void *)v3 + 2) = v6;
      int v2 = *(_DWORD *)(a1 + 16);
    }
  }
  return v2 == 0;
}

void sub_244796B00(void *a1, unint64_t a2)
{
  *a1 = &unk_26F9445C8;
  is_mul_ok(a2, 0xAuLL);
  operator new[]();
}

void *sub_244796BA4(void *a1)
{
  *a1 = &unk_26F9445C8;
  uint64_t v2 = a1[1];
  if (v2) {
    MEMORY[0x245695F80](v2, 0x1000C80B740803ALL);
  }
  return a1;
}

void sub_244796C00(void *a1)
{
  *a1 = &unk_26F9445C8;
  uint64_t v1 = a1[1];
  if (v1) {
    MEMORY[0x245695F80](v1, 0x1000C80B740803ALL);
  }

  JUMPOUT(0x245695FA0);
}

uint64_t sub_244796C7C(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  *(_DWORD *)a1 = 0;
  *(unsigned char *)(a1 + 4) = 0;
  sub_244CB3988(a1 + 32);
  int v7 = *a3;
  *(unsigned char *)(a1 + 104) = v7;
  if (v7) {
    *(unsigned char *)(a1 + 105) = a3[1];
  }
  *(_DWORD *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 24) = 93;
  sub_244CB3B04(v6, a2);
  return a1;
}

BOOL sub_244796CF4(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 96) == -1) {
    return 0;
  }
  uint64_t v3 = a1 + 8;
  int v2 = *(_DWORD *)(a1 + 8);
  if (!v2)
  {
    sub_244CB4E58(a1 + 32, &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *(void *)(v3 + 16) = v6;
    int v2 = *(_DWORD *)v3;
    if (!*(_DWORD *)v3)
    {
      *(_DWORD *)a1 = 0;
      *(unsigned char *)(a1 + 4) = 0;
      sub_2447F0300(a1, a1 + 32, (uint64_t)&v5);
      *(_OWORD *)uint64_t v3 = v5;
      *(void *)(v3 + 16) = v6;
      int v2 = *(_DWORD *)(a1 + 8);
    }
  }
  return v2 == 0;
}

void sub_244796DA0(void *a1, unint64_t a2)
{
  *a1 = &unk_26F944600;
  is_mul_ok(a2, 0x70uLL);
  operator new[]();
}

void *sub_244796E68(void *a1)
{
  *a1 = &unk_26F944600;
  uint64_t v2 = a1[1];
  if (v2) {
    MEMORY[0x245695F80](v2 - 16, 0x1050C8080B4FE94);
  }
  return a1;
}

void sub_244796EC8(void *a1)
{
  *a1 = &unk_26F944600;
  uint64_t v1 = a1[1];
  if (v1) {
    MEMORY[0x245695F80](v1 - 16, 0x1050C8080B4FE94);
  }

  JUMPOUT(0x245695FA0);
}

void sub_244796F48(void *a1)
{
  *a1 = &unk_26F944638;
  operator new[]();
}

void *sub_244796FD0(void *a1)
{
  *a1 = &unk_26F944638;
  uint64_t v2 = a1[1];
  if (v2) {
    MEMORY[0x245695F80](v2, 0x1050C807EF9F939);
  }
  return a1;
}

void sub_24479702C(void *a1)
{
  *a1 = &unk_26F944638;
  uint64_t v1 = a1[1];
  if (v1) {
    MEMORY[0x245695F80](v1, 0x1050C807EF9F939);
  }

  JUMPOUT(0x245695FA0);
}

uint64_t sub_2447970A8(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  *(unsigned char *)(a1 + 24) = 0;
  *(unsigned char *)(a1 + 48) = 0;
  *(unsigned char *)(a1 + 72) = 0;
  *(unsigned char *)(a1 + 96) = 0;
  *(unsigned char *)(a1 + 120) = 0;
  *(unsigned char *)(a1 + 176) = 0;
  *(unsigned char *)(a1 + 200) = 0;
  *(unsigned char *)(a1 + 288) = 0;
  *(unsigned char *)(a1 + 376) = 0;
  *(unsigned char *)(a1 + 400) = 0;
  *(unsigned char *)(a1 + 424) = 0;
  *(unsigned char *)(a1 + 448) = 0;
  *(unsigned char *)(a1 + 472) = 0;
  *(unsigned char *)(a1 + 496) = 0;
  *(unsigned char *)(a1 + 504) = 0;
  *(unsigned char *)(a1 + 552) = 0;
  *(unsigned char *)(a1 + 640) = 0;
  *(unsigned char *)(a1 + 728) = 0;
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(_DWORD *)(a1 + 16) = 0;
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = 0;
  *(unsigned char *)(a1 + 152) = 0;
  *(void *)(a1 + 144) = 0;
  sub_244CB3988(a1 + 840);
  int v7 = *a3;
  *(unsigned char *)(a1 + 912) = v7;
  if (v7) {
    *(unsigned char *)(a1 + 913) = a3[1];
  }
  *(_DWORD *)(a1 + 816) = 0;
  *(void *)(a1 + 824) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 832) = 93;
  sub_244CB3B04(v6, a2);
  return a1;
}

BOOL sub_244797174(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 904) == -1) {
    return 0;
  }
  int v2 = *(_DWORD *)(a1 + 816);
  if (!v2)
  {
    uint64_t v3 = (_OWORD *)(a1 + 816);
    sub_244CB4E58(a1 + 840, &v5);
    *uint64_t v3 = v5;
    *(void *)(a1 + 832) = v6;
    int v2 = *(_DWORD *)v3;
    if (!*(_DWORD *)v3)
    {
      bzero(&v5, 0x330uLL);
      sub_244797230(a1, (uint64_t)&v5);
      sub_2448311D4(a1, a1 + 840, (uint64_t)&v5);
      *uint64_t v3 = v5;
      *(void *)(a1 + 832) = v6;
      int v2 = *(_DWORD *)(a1 + 816);
    }
  }
  return v2 == 0;
}

uint64_t sub_244797230(uint64_t result, uint64_t a2)
{
  *(_OWORD *)uint64_t result = *(_OWORD *)a2;
  *(_DWORD *)(result + 16) = *(_DWORD *)(a2 + 16);
  int v2 = *(unsigned __int8 *)(a2 + 24);
  *(unsigned char *)(result + 24) = v2;
  if (v2)
  {
    *(_OWORD *)(result + 32) = *(_OWORD *)(a2 + 32);
    *(unsigned char *)(a2 + 24) = 0;
  }
  int v3 = *(unsigned __int8 *)(a2 + 48);
  *(unsigned char *)(result + 48) = v3;
  if (v3)
  {
    *(_OWORD *)(result + 56) = *(_OWORD *)(a2 + 56);
    *(unsigned char *)(a2 + 48) = 0;
  }
  int v4 = *(unsigned __int8 *)(a2 + 72);
  *(unsigned char *)(result + 72) = v4;
  if (v4)
  {
    *(_OWORD *)(result + 80) = *(_OWORD *)(a2 + 80);
    *(unsigned char *)(a2 + 72) = 0;
  }
  int v5 = *(unsigned __int8 *)(a2 + 96);
  *(unsigned char *)(result + 96) = v5;
  if (v5)
  {
    *(_OWORD *)(result + 104) = *(_OWORD *)(a2 + 104);
    *(unsigned char *)(a2 + 96) = 0;
  }
  int v6 = *(unsigned __int8 *)(a2 + 120);
  *(unsigned char *)(result + 120) = v6;
  if (v6)
  {
    *(unsigned char *)(result + 121) = *(unsigned char *)(a2 + 121);
    *(unsigned char *)(a2 + 120) = 0;
  }
  long long v7 = *(_OWORD *)(a2 + 128);
  *(void *)(result + 144) = *(void *)(a2 + 144);
  *(_OWORD *)(result + 128) = v7;
  int v8 = *(unsigned __int8 *)(a2 + 152);
  *(unsigned char *)(result + 152) = v8;
  if (v8)
  {
    *(_OWORD *)(result + 160) = *(_OWORD *)(a2 + 160);
    *(unsigned char *)(a2 + 152) = 0;
  }
  int v9 = *(unsigned __int8 *)(a2 + 176);
  *(unsigned char *)(result + 176) = v9;
  if (v9)
  {
    *(_OWORD *)(result + 184) = *(_OWORD *)(a2 + 184);
    *(unsigned char *)(a2 + 176) = 0;
  }
  int v10 = *(unsigned __int8 *)(a2 + 200);
  *(unsigned char *)(result + 200) = v10;
  if (v10)
  {
    *(_OWORD *)(result + 208) = *(_OWORD *)(a2 + 208);
    long long v11 = *(_OWORD *)(a2 + 224);
    long long v12 = *(_OWORD *)(a2 + 240);
    long long v13 = *(_OWORD *)(a2 + 256);
    *(void *)(result + 272) = *(void *)(a2 + 272);
    *(_OWORD *)(result + 240) = v12;
    *(_OWORD *)(result + 256) = v13;
    *(_OWORD *)(result + 224) = v11;
    int v14 = *(unsigned __int8 *)(a2 + 280);
    *(unsigned char *)(result + 280) = v14;
    if (v14)
    {
      *(unsigned char *)(result + 281) = *(unsigned char *)(a2 + 281);
      *(unsigned char *)(a2 + 280) = 0;
    }
    *(unsigned char *)(a2 + 200) = 0;
  }
  int v15 = *(unsigned __int8 *)(a2 + 288);
  *(unsigned char *)(result + 288) = v15;
  if (v15)
  {
    *(_OWORD *)(result + 296) = *(_OWORD *)(a2 + 296);
    long long v16 = *(_OWORD *)(a2 + 312);
    long long v17 = *(_OWORD *)(a2 + 328);
    long long v18 = *(_OWORD *)(a2 + 344);
    *(void *)(result + 360) = *(void *)(a2 + 360);
    *(_OWORD *)(result + 344) = v18;
    *(_OWORD *)(result + 328) = v17;
    *(_OWORD *)(result + 312) = v16;
    int v19 = *(unsigned __int8 *)(a2 + 368);
    *(unsigned char *)(result + 368) = v19;
    if (v19)
    {
      *(unsigned char *)(result + 369) = *(unsigned char *)(a2 + 369);
      *(unsigned char *)(a2 + 368) = 0;
    }
    *(unsigned char *)(a2 + 288) = 0;
  }
  int v20 = *(unsigned __int8 *)(a2 + 376);
  *(unsigned char *)(result + 376) = v20;
  if (v20)
  {
    *(_OWORD *)(result + 384) = *(_OWORD *)(a2 + 384);
    *(unsigned char *)(a2 + 376) = 0;
  }
  int v21 = *(unsigned __int8 *)(a2 + 400);
  *(unsigned char *)(result + 400) = v21;
  if (v21)
  {
    *(_OWORD *)(result + 408) = *(_OWORD *)(a2 + 408);
    *(unsigned char *)(a2 + 400) = 0;
  }
  int v22 = *(unsigned __int8 *)(a2 + 424);
  *(unsigned char *)(result + 424) = v22;
  if (v22)
  {
    *(_OWORD *)(result + 432) = *(_OWORD *)(a2 + 432);
    *(unsigned char *)(a2 + 424) = 0;
  }
  int v23 = *(unsigned __int8 *)(a2 + 448);
  *(unsigned char *)(result + 448) = v23;
  if (v23)
  {
    *(_OWORD *)(result + 456) = *(_OWORD *)(a2 + 456);
    *(unsigned char *)(a2 + 448) = 0;
  }
  int v24 = *(unsigned __int8 *)(a2 + 472);
  *(unsigned char *)(result + 472) = v24;
  if (v24)
  {
    *(_OWORD *)(result + 480) = *(_OWORD *)(a2 + 480);
    *(unsigned char *)(a2 + 472) = 0;
  }
  int v25 = *(unsigned __int8 *)(a2 + 496);
  *(unsigned char *)(result + 496) = v25;
  if (v25)
  {
    *(_DWORD *)(result + 500) = *(_DWORD *)(a2 + 500);
    *(unsigned char *)(a2 + 496) = 0;
  }
  int v26 = *(unsigned __int8 *)(a2 + 504);
  *(unsigned char *)(result + 504) = v26;
  if (v26)
  {
    long long v27 = *(_OWORD *)(a2 + 512);
    long long v28 = *(_OWORD *)(a2 + 528);
    *(void *)(result + 544) = *(void *)(a2 + 544);
    *(_OWORD *)(result + 512) = v27;
    *(_OWORD *)(result + 528) = v28;
    *(unsigned char *)(a2 + 504) = 0;
  }
  int v29 = *(unsigned __int8 *)(a2 + 552);
  *(unsigned char *)(result + 552) = v29;
  if (v29)
  {
    *(_OWORD *)(result + 560) = *(_OWORD *)(a2 + 560);
    long long v30 = *(_OWORD *)(a2 + 576);
    long long v31 = *(_OWORD *)(a2 + 592);
    long long v32 = *(_OWORD *)(a2 + 608);
    *(void *)(result + 624) = *(void *)(a2 + 624);
    *(_OWORD *)(result + 592) = v31;
    *(_OWORD *)(result + 608) = v32;
    *(_OWORD *)(result + 576) = v30;
    int v33 = *(unsigned __int8 *)(a2 + 632);
    *(unsigned char *)(result + 632) = v33;
    if (v33)
    {
      *(unsigned char *)(result + 633) = *(unsigned char *)(a2 + 633);
      *(unsigned char *)(a2 + 632) = 0;
    }
    *(unsigned char *)(a2 + 552) = 0;
  }
  int v34 = *(unsigned __int8 *)(a2 + 640);
  *(unsigned char *)(result + 640) = v34;
  if (v34)
  {
    *(_OWORD *)(result + 648) = *(_OWORD *)(a2 + 648);
    long long v35 = *(_OWORD *)(a2 + 664);
    long long v36 = *(_OWORD *)(a2 + 680);
    long long v37 = *(_OWORD *)(a2 + 696);
    *(void *)(result + 712) = *(void *)(a2 + 712);
    *(_OWORD *)(result + 696) = v37;
    *(_OWORD *)(result + 680) = v36;
    *(_OWORD *)(result + 664) = v35;
    int v38 = *(unsigned __int8 *)(a2 + 720);
    *(unsigned char *)(result + 720) = v38;
    if (v38)
    {
      *(unsigned char *)(result + 721) = *(unsigned char *)(a2 + 721);
      *(unsigned char *)(a2 + 720) = 0;
    }
    *(unsigned char *)(a2 + 640) = 0;
  }
  int v39 = *(unsigned __int8 *)(a2 + 728);
  *(unsigned char *)(result + 728) = v39;
  if (v39)
  {
    *(_OWORD *)(result + 736) = *(_OWORD *)(a2 + 736);
    long long v40 = *(_OWORD *)(a2 + 752);
    long long v41 = *(_OWORD *)(a2 + 768);
    long long v42 = *(_OWORD *)(a2 + 784);
    *(void *)(result + 800) = *(void *)(a2 + 800);
    *(_OWORD *)(result + 768) = v41;
    *(_OWORD *)(result + 784) = v42;
    *(_OWORD *)(result + 752) = v40;
    int v43 = *(unsigned __int8 *)(a2 + 808);
    *(unsigned char *)(result + 808) = v43;
    if (v43)
    {
      *(unsigned char *)(result + 809) = *(unsigned char *)(a2 + 809);
      *(unsigned char *)(a2 + 808) = 0;
    }
    *(unsigned char *)(a2 + 728) = 0;
  }
  return result;
}

uint64_t sub_244797544(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  sub_244CB3988(a1 + 40);
  int v7 = *a3;
  *(unsigned char *)(a1 + 112) = v7;
  if (v7) {
    *(unsigned char *)(a1 + 113) = a3[1];
  }
  *(_DWORD *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 32) = 93;
  sub_244CB3B04(v6, a2);
  return a1;
}

BOOL sub_2447975B4(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 104) == -1) {
    return 0;
  }
  int v3 = (int *)(a1 + 16);
  int v2 = *(_DWORD *)(a1 + 16);
  if (!v2)
  {
    sub_244CB4E58(a1 + 40, &v5);
    *(_OWORD *)int v3 = v5;
    *((void *)v3 + 2) = v6;
    int v2 = *v3;
    if (!*v3)
    {
      *(void *)a1 = 0;
      *(void *)(a1 + 8) = 0;
      sub_244CB41F0(a1 + 40, (_OWORD *)a1, &v5);
      *(_OWORD *)int v3 = v5;
      *((void *)v3 + 2) = v6;
      int v2 = *(_DWORD *)(a1 + 16);
    }
  }
  return v2 == 0;
}

uint64_t sub_24479765C(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  sub_244CB3988(a1 + 64);
  int v7 = *a3;
  *(unsigned char *)(a1 + 136) = v7;
  if (v7) {
    *(unsigned char *)(a1 + 137) = a3[1];
  }
  *(_DWORD *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 56) = 93;
  sub_244CB3B04(v6, a2);
  return a1;
}

BOOL sub_2447976D4(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 128) == -1) {
    return 0;
  }
  uint64_t v3 = a1 + 40;
  int v2 = *(_DWORD *)(a1 + 40);
  if (!v2)
  {
    sub_244CB4E58(a1 + 64, &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *(void *)(v3 + 16) = v6;
    int v2 = *(_DWORD *)v3;
    if (!*(_DWORD *)v3)
    {
      *(void *)a1 = 0;
      *(void *)(a1 + 8) = 0;
      *(unsigned char *)(a1 + 16) = 0;
      sub_2448307D0(a1, a1 + 64, (uint64_t)&v5);
      *(_OWORD *)uint64_t v3 = v5;
      *(void *)(v3 + 16) = v6;
      int v2 = *(_DWORD *)(a1 + 40);
    }
  }
  return v2 == 0;
}

uint64_t sub_244797780(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  sub_244CB3988(a1 + 56);
  int v7 = *a3;
  *(unsigned char *)(a1 + 128) = v7;
  if (v7) {
    *(unsigned char *)(a1 + 129) = a3[1];
  }
  *(_DWORD *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 48) = 93;
  sub_244CB3B04(v6, a2);
  return a1;
}

BOOL sub_2447977F8(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 120) == -1) {
    return 0;
  }
  uint64_t v3 = (int *)(a1 + 32);
  int v2 = *(_DWORD *)(a1 + 32);
  if (!v2)
  {
    sub_244CB4E58(a1 + 56, &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *((void *)v3 + 2) = v6;
    int v2 = *v3;
    if (!*v3)
    {
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      sub_2448305B0((_OWORD *)a1, a1 + 56, (uint64_t)&v5);
      *(_OWORD *)uint64_t v3 = v5;
      *((void *)v3 + 2) = v6;
      int v2 = *(_DWORD *)(a1 + 32);
    }
  }
  return v2 == 0;
}

void sub_2447978A4(void *a1, unint64_t a2)
{
  *a1 = &unk_26F944670;
  is_mul_ok(a2, 0x30uLL);
  operator new[]();
}

void *sub_244797960(void *a1)
{
  *a1 = &unk_26F944670;
  uint64_t v2 = a1[1];
  if (v2) {
    MEMORY[0x245695F80](v2 - 16, 0x1070C80B6A23389);
  }
  return a1;
}

void sub_2447979C0(void *a1)
{
  *a1 = &unk_26F944670;
  uint64_t v1 = a1[1];
  if (v1) {
    MEMORY[0x245695F80](v1 - 16, 0x1070C80B6A23389);
  }

  JUMPOUT(0x245695FA0);
}

void sub_244797A40(void *a1)
{
  *a1 = &unk_26F9446A8;
  operator new[]();
}

void *sub_244797AC8(void *a1)
{
  *a1 = &unk_26F9446A8;
  uint64_t v2 = a1[1];
  if (v2) {
    MEMORY[0x245695F80](v2, 0x1050C807EF9F939);
  }
  return a1;
}

void sub_244797B24(void *a1)
{
  *a1 = &unk_26F9446A8;
  uint64_t v1 = a1[1];
  if (v1) {
    MEMORY[0x245695F80](v1, 0x1050C807EF9F939);
  }

  JUMPOUT(0x245695FA0);
}

void *sub_244797BA0(void *a1)
{
  *a1 = &unk_26F9446E0;
  uint64_t v2 = a1[1];
  if (v2) {
    MEMORY[0x245695F80](v2, 0x1000C8077774924);
  }
  return a1;
}

void sub_244797BFC(void *a1)
{
  *a1 = &unk_26F9446E0;
  uint64_t v1 = a1[1];
  if (v1) {
    MEMORY[0x245695F80](v1, 0x1000C8077774924);
  }

  JUMPOUT(0x245695FA0);
}

void sub_244797C78(void *a1, unint64_t a2)
{
  *a1 = &unk_26F944718;
  is_mul_ok(a2, 0x30uLL);
  operator new[]();
}

void *sub_244797D2C(void *a1)
{
  *a1 = &unk_26F944718;
  uint64_t v2 = a1[1];
  if (v2) {
    MEMORY[0x245695F80](v2 - 16, 0x10D0C80EB051EDALL);
  }
  return a1;
}

void sub_244797D8C(void *a1)
{
  *a1 = &unk_26F944718;
  uint64_t v1 = a1[1];
  if (v1) {
    MEMORY[0x245695F80](v1 - 16, 0x10D0C80EB051EDALL);
  }

  JUMPOUT(0x245695FA0);
}

void sub_244797E0C(void *a1)
{
  *a1 = &unk_26F944750;
  operator new[]();
}

void *sub_244797E94(void *a1)
{
  *a1 = &unk_26F944750;
  uint64_t v2 = a1[1];
  if (v2) {
    MEMORY[0x245695F80](v2, 0x1000C8052888210);
  }
  return a1;
}

void sub_244797EF0(void *a1)
{
  *a1 = &unk_26F944750;
  uint64_t v1 = a1[1];
  if (v1) {
    MEMORY[0x245695F80](v1, 0x1000C8052888210);
  }

  JUMPOUT(0x245695FA0);
}

uint64_t sub_244797F6C(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  sub_244CB3988(a1 + 24);
  *(unsigned char *)(a1 + 96) = 0;
  sub_244CB39B8(v6, 0, 0);
  *(unsigned char *)(a1 + 104) = 0;
  sub_244CB3988(a1 + 152);
  int v8 = *a3;
  *(unsigned char *)(a1 + 224) = v8;
  if (v8) {
    *(unsigned char *)(a1 + 225) = a3[1];
  }
  *(_DWORD *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 144) = 93;
  sub_244CB3B04(v7, a2);
  return a1;
}

BOOL sub_244798000(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 216) == -1) {
    return 0;
  }
  uint64_t v3 = a1 + 128;
  int v2 = *(_DWORD *)(a1 + 128);
  if (!v2)
  {
    sub_244CB4E58(a1 + 152, v7);
    *(_OWORD *)uint64_t v3 = v7[0];
    *(void *)(v3 + 16) = *(void *)&v7[1];
    int v2 = *(_DWORD *)v3;
    if (!*(_DWORD *)v3)
    {
      long long v8 = 0u;
      long long v9 = 0u;
      memset(v7, 0, sizeof(v7));
      sub_244CB3988((uint64_t)&v7[1] + 8);
      LOBYTE(v8) = 0;
      sub_244CB39B8(v4, 0, 0);
      BYTE8(v8) = 0;
      *(_OWORD *)a1 = v7[0];
      *(unsigned char *)(a1 + 16) = v7[1];
      *(_OWORD *)(a1 + 40) = *(_OWORD *)((char *)&v7[2] + 8);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)((char *)&v7[3] + 8);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)((char *)&v7[4] + 8);
      *(void *)(a1 + 87) = *(void *)((char *)&v7[5] + 7);
      *(_OWORD *)(a1 + 24) = *(_OWORD *)((char *)&v7[1] + 8);
      int v5 = v8;
      *(unsigned char *)(a1 + 96) = v8;
      if (v5) {
        *(unsigned char *)(a1 + 97) = BYTE1(v8);
      }
      *(unsigned char *)(a1 + 104) = 0;
      sub_24483A390(a1, a1 + 152, (uint64_t)v7);
      *(_OWORD *)uint64_t v3 = v7[0];
      *(void *)(v3 + 16) = *(void *)&v7[1];
      int v2 = *(_DWORD *)(a1 + 128);
    }
  }
  return v2 == 0;
}

uint64_t sub_244798128(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  *(_DWORD *)a1 = 0;
  sub_244CB3988(a1 + 32);
  int v7 = *a3;
  *(unsigned char *)(a1 + 104) = v7;
  if (v7) {
    *(unsigned char *)(a1 + 105) = a3[1];
  }
  *(_DWORD *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 24) = 93;
  sub_244CB3B04(v6, a2);
  return a1;
}

BOOL sub_244798198(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 96) == -1) {
    return 0;
  }
  uint64_t v3 = (int *)(a1 + 8);
  int v2 = *(_DWORD *)(a1 + 8);
  if (!v2)
  {
    sub_244CB4E58(a1 + 32, &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *((void *)v3 + 2) = v6;
    int v2 = *v3;
    if (!*v3)
    {
      *(_DWORD *)a1 = 0;
      sub_24483A150((_WORD *)a1, a1 + 32, (uint64_t)&v5);
      *(_OWORD *)uint64_t v3 = v5;
      *((void *)v3 + 2) = v6;
      int v2 = *(_DWORD *)(a1 + 8);
    }
  }
  return v2 == 0;
}

void *sub_244798240(void *a1)
{
  *a1 = &unk_26F944788;
  uint64_t v2 = a1[1];
  if (v2) {
    MEMORY[0x245695F80](v2, 0x1000C8077774924);
  }
  return a1;
}

void sub_24479829C(void *a1)
{
  *a1 = &unk_26F944788;
  uint64_t v1 = a1[1];
  if (v1) {
    MEMORY[0x245695F80](v1, 0x1000C8077774924);
  }

  JUMPOUT(0x245695FA0);
}

void sub_244798318(void *a1, unint64_t a2)
{
  *a1 = &unk_26F9447C0;
  is_mul_ok(a2, 0x48uLL);
  operator new[]();
}

void *sub_2447983D0(void *a1)
{
  *a1 = &unk_26F9447C0;
  uint64_t v2 = a1[1];
  if (v2) {
    MEMORY[0x245695F80](v2 - 16, 0x1070C80A4F1E997);
  }
  return a1;
}

void sub_244798430(void *a1)
{
  *a1 = &unk_26F9447C0;
  uint64_t v1 = a1[1];
  if (v1) {
    MEMORY[0x245695F80](v1 - 16, 0x1070C80A4F1E997);
  }

  JUMPOUT(0x245695FA0);
}

void sub_2447984B0(void *a1)
{
  *a1 = &unk_26F9447F8;
  operator new[]();
}

void *sub_244798538(void *a1)
{
  *a1 = &unk_26F9447F8;
  uint64_t v2 = a1[1];
  if (v2) {
    MEMORY[0x245695F80](v2, 0x1050C80717B85FCLL);
  }
  return a1;
}

void sub_244798594(void *a1)
{
  *a1 = &unk_26F9447F8;
  uint64_t v1 = a1[1];
  if (v1) {
    MEMORY[0x245695F80](v1, 0x1050C80717B85FCLL);
  }

  JUMPOUT(0x245695FA0);
}

uint64_t sub_244798610(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  *(_WORD *)a1 = 0;
  *(_WORD *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 10) = 0;
  *(_DWORD *)(a1 + 52) = 0;
  *(void *)(a1 + 56) = 0;
  *(unsigned char *)(a1 + 64) = 0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(unsigned char *)(a1 + 48) = 0;
  sub_244CB3988(a1 + 72);
  *(unsigned char *)(a1 + 144) = 0;
  sub_244CB39B8(v6, 0, 0);
  sub_244CB3988(a1 + 152);
  *(unsigned char *)(a1 + 224) = 0;
  sub_244CB39B8(v7, 0, 0);
  sub_244CB3988(a1 + 232);
  *(unsigned char *)(a1 + 304) = 0;
  sub_244CB39B8(v8, 0, 0);
  sub_244CB3988(a1 + 312);
  *(unsigned char *)(a1 + 384) = 0;
  sub_244CB39B8(v9, 0, 0);
  sub_244CB3988(a1 + 416);
  int v11 = *a3;
  *(unsigned char *)(a1 + 488) = v11;
  if (v11) {
    *(unsigned char *)(a1 + 489) = a3[1];
  }
  *(_DWORD *)(a1 + 392) = 0;
  *(void *)(a1 + 400) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 408) = 93;
  sub_244CB3B04(v10, a2);
  return a1;
}

BOOL sub_244798704(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 480) == -1) {
    return 0;
  }
  int v2 = *(_DWORD *)(a1 + 392);
  if (!v2)
  {
    uint64_t v3 = (_OWORD *)(a1 + 392);
    sub_244CB4E58(a1 + 416, v22);
    *uint64_t v3 = v22[0];
    *(void *)(a1 + 408) = *(void *)&v22[1];
    int v2 = *(_DWORD *)v3;
    if (!*(_DWORD *)v3)
    {
      uint64_t v25 = 0;
      memset(v24, 0, sizeof(v24));
      long long v23 = 0u;
      memset(v22, 0, sizeof(v22));
      sub_244CB3988((uint64_t)v24 + 8);
      LOBYTE(v24[5]) = 0;
      sub_244CB39B8(v4, 0, 0);
      sub_244CB3988((uint64_t)&v24[5] + 8);
      LOBYTE(v24[10]) = 0;
      sub_244CB39B8(v5, 0, 0);
      sub_244CB3988((uint64_t)&v24[10] + 8);
      LOBYTE(v24[15]) = 0;
      sub_244CB39B8(v6, 0, 0);
      sub_244CB3988((uint64_t)&v24[15] + 8);
      LOBYTE(v25) = 0;
      sub_244CB39B8(v7, 0, 0);
      *(_WORD *)a1 = v22[0];
      *(_OWORD *)(a1 + 8) = *(_OWORD *)((char *)v22 + 8);
      *(_OWORD *)(a1 + 24) = *(_OWORD *)((char *)&v22[1] + 8);
      *(void *)(a1 + 40) = *((void *)&v22[2] + 1);
      *(unsigned char *)(a1 + 48) = v23;
      *(void *)(a1 + 52) = *(void *)((char *)&v23 + 4);
      *(_DWORD *)(a1 + 60) = HIDWORD(v23);
      int v8 = LOBYTE(v24[0]);
      *(unsigned char *)(a1 + 64) = v24[0];
      if (v8)
      {
        *(unsigned char *)(a1 + 65) = BYTE1(v24[0]);
        LOBYTE(v24[0]) = 0;
      }
      long long v9 = *(_OWORD *)((char *)v24 + 8);
      *(_OWORD *)(a1 + 88) = *(_OWORD *)((char *)&v24[1] + 8);
      long long v10 = *(_OWORD *)((char *)&v24[3] + 8);
      *(_OWORD *)(a1 + 104) = *(_OWORD *)((char *)&v24[2] + 8);
      *(_OWORD *)(a1 + 120) = v10;
      *(void *)(a1 + 135) = *(void *)((char *)&v24[4] + 7);
      *(_OWORD *)(a1 + 72) = v9;
      int v11 = LOBYTE(v24[5]);
      *(unsigned char *)(a1 + 144) = v24[5];
      if (v11)
      {
        *(unsigned char *)(a1 + 145) = BYTE1(v24[5]);
        LOBYTE(v24[5]) = 0;
      }
      long long v12 = *(_OWORD *)((char *)&v24[5] + 8);
      *(_OWORD *)(a1 + 168) = *(_OWORD *)((char *)&v24[6] + 8);
      long long v13 = *(_OWORD *)((char *)&v24[8] + 8);
      *(_OWORD *)(a1 + 184) = *(_OWORD *)((char *)&v24[7] + 8);
      *(_OWORD *)(a1 + 200) = v13;
      *(void *)(a1 + 215) = *(void *)((char *)&v24[9] + 7);
      *(_OWORD *)(a1 + 152) = v12;
      int v14 = LOBYTE(v24[10]);
      *(unsigned char *)(a1 + 224) = v24[10];
      if (v14)
      {
        *(unsigned char *)(a1 + 225) = BYTE1(v24[10]);
        LOBYTE(v24[10]) = 0;
      }
      long long v15 = *(_OWORD *)((char *)&v24[10] + 8);
      *(_OWORD *)(a1 + 248) = *(_OWORD *)((char *)&v24[11] + 8);
      long long v16 = *(_OWORD *)((char *)&v24[13] + 8);
      *(_OWORD *)(a1 + 264) = *(_OWORD *)((char *)&v24[12] + 8);
      *(_OWORD *)(a1 + 280) = v16;
      *(void *)(a1 + 295) = *(void *)((char *)&v24[14] + 7);
      *(_OWORD *)(a1 + 232) = v15;
      int v17 = LOBYTE(v24[15]);
      *(unsigned char *)(a1 + 304) = v24[15];
      if (v17)
      {
        *(unsigned char *)(a1 + 305) = BYTE1(v24[15]);
        LOBYTE(v24[15]) = 0;
      }
      long long v18 = *(_OWORD *)((char *)&v24[18] + 8);
      *(_OWORD *)(a1 + 344) = *(_OWORD *)((char *)&v24[17] + 8);
      *(_OWORD *)(a1 + 360) = v18;
      *(void *)(a1 + 375) = *(void *)((char *)&v24[19] + 7);
      long long v19 = *(_OWORD *)((char *)&v24[16] + 8);
      *(_OWORD *)(a1 + 312) = *(_OWORD *)((char *)&v24[15] + 8);
      *(_OWORD *)(a1 + 328) = v19;
      int v20 = v25;
      *(unsigned char *)(a1 + 384) = v25;
      if (v20) {
        *(unsigned char *)(a1 + 385) = BYTE1(v25);
      }
      sub_2448445A4((unsigned char *)a1, a1 + 416, (uint64_t)v22);
      *uint64_t v3 = v22[0];
      *(void *)(a1 + 408) = *(void *)&v22[1];
      int v2 = *(_DWORD *)(a1 + 392);
    }
  }
  return v2 == 0;
}

uint64_t sub_24479898C(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  *(_WORD *)a1 = 0;
  *(unsigned char *)(a1 + 2) = 0;
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 48) = 0;
  *(unsigned char *)(a1 + 56) = 0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(unsigned char *)(a1 + 40) = 0;
  sub_244CB3988(a1 + 88);
  int v7 = *a3;
  *(unsigned char *)(a1 + 160) = v7;
  if (v7) {
    *(unsigned char *)(a1 + 161) = a3[1];
  }
  *(_DWORD *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
  *(_DWORD *)(a1 + 80) = 93;
  sub_244CB3B04(v6, a2);
  return a1;
}

BOOL sub_244798A20(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 152) == -1) {
    return 0;
  }
  uint64_t v3 = a1 + 64;
  int v2 = *(_DWORD *)(a1 + 64);
  if (!v2)
  {
    sub_244CB4E58(a1 + 88, &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *(void *)(v3 + 16) = v6;
    int v2 = *(_DWORD *)v3;
    if (!*(_DWORD *)v3)
    {
      *(_DWORD *)(a1 + 44) = 0;
      *(void *)(a1 + 48) = 0;
      *(unsigned char *)(a1 + 56) = 0;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_OWORD *)(a1 + 25) = 0u;
      sub_2448432EC(a1, a1 + 88, (uint64_t)&v5);
      *(_OWORD *)uint64_t v3 = v5;
      *(void *)(v3 + 16) = v6;
      int v2 = *(_DWORD *)(a1 + 64);
    }
  }
  return v2 == 0;
}

BOOL sub_244798ADC(_DWORD *a1)
{
  if (a1[24] == -1) {
    return 0;
  }
  uint64_t v3 = a1 + 2;
  int v2 = a1[2];
  if (!v2)
  {
    sub_244CB4E58((uint64_t)(a1 + 8), &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *((void *)v3 + 2) = v6;
    int v2 = *v3;
    if (!*v3)
    {
      *a1 = 0;
      sub_244CB3FB0((uint64_t)(a1 + 8), a1, (uint64_t)&v5);
      *(_OWORD *)uint64_t v3 = v5;
      *((void *)v3 + 2) = v6;
      int v2 = a1[2];
    }
  }
  return v2 == 0;
}

BOOL sub_244798B84(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 104) == -1) {
    return 0;
  }
  uint64_t v3 = (int *)(a1 + 16);
  int v2 = *(_DWORD *)(a1 + 16);
  if (!v2)
  {
    sub_244CB4E58(a1 + 40, &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *((void *)v3 + 2) = v6;
    int v2 = *v3;
    if (!*v3)
    {
      *(void *)a1 = 0;
      *(void *)(a1 + 8) = 0;
      if (sub_244CB3B68(a1 + 40) == 16)
      {
        sub_244CB40C8(a1 + 40, (_OWORD *)a1, &v5);
      }
      else
      {
        LODWORD(v5) = 43;
        *((void *)&v5 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
        LODWORD(v6) = 80;
      }
      *(_OWORD *)uint64_t v3 = v5;
      *((void *)v3 + 2) = v6;
      int v2 = *v3;
    }
  }
  return v2 == 0;
}

BOOL sub_244798C5C(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 96) == -1) {
    return 0;
  }
  uint64_t v3 = (int *)(a1 + 8);
  int v2 = *(_DWORD *)(a1 + 8);
  if (!v2)
  {
    sub_244CB4E58(a1 + 32, &v5);
    *(_OWORD *)uint64_t v3 = v5;
    *((void *)v3 + 2) = v6;
    int v2 = *v3;
    if (!*v3)
    {
      *(unsigned char *)a1 = 0;
      sub_244CB3C0C(a1 + 32, (char *)a1, (uint64_t)&v5);
      *(_OWORD *)uint64_t v3 = v5;
      *((void *)v3 + 2) = v6;
      int v2 = *(_DWORD *)(a1 + 8);
    }
  }
  return v2 == 0;
}

void sub_244798D04(void *a1, unint64_t a2)
{
  *a1 = &unk_26F944830;
  is_mul_ok(a2, 0x88uLL);
  operator new[]();
}

void *sub_244798DE8(void *a1)
{
  *a1 = &unk_26F944830;
  uint64_t v2 = a1[1];
  if (v2) {
    MEMORY[0x245695F80](v2 - 16, 0x1070C80B96004A6);
  }
  return a1;
}

void sub_244798E48(void *a1)
{
  *a1 = &unk_26F944830;
  uint64_t v1 = a1[1];
  if (v1) {
    MEMORY[0x245695F80](v1 - 16, 0x1070C80B96004A6);
  }

  JUMPOUT(0x245695FA0);
}

void sub_244798EC8(void *a1)
{
  *a1 = &unk_26F944868;
  operator new[]();
}

void *sub_244798F80(void *a1)
{
  *a1 = &unk_26F944868;
  uint64_t v2 = a1[1];
  if (v2) {
    MEMORY[0x245695F80](v2 - 16, 0x1050C807739CE8DLL);
  }
  return a1;
}

void sub_244798FE0(void *a1)
{
  *a1 = &unk_26F944868;
  uint64_t v1 = a1[1];
  if (v1) {
    MEMORY[0x245695F80](v1 - 16, 0x1050C807739CE8DLL);
  }

  JUMPOUT(0x245695FA0);
}

void *sub_244799060(void *a1)
{
  *a1 = &unk_26F9448A0;
  uint64_t v2 = a1[1];
  if (v2) {
    MEMORY[0x245695F80](v2, 0x1000C8077774924);
  }
  return a1;
}

void sub_2447990BC(void *a1)
{
  *a1 = &unk_26F9448A0;
  uint64_t v1 = a1[1];
  if (v1) {
    MEMORY[0x245695F80](v1, 0x1000C8077774924);
  }

  JUMPOUT(0x245695FA0);
}

void *sub_244799138(void *a1)
{
  *a1 = &unk_26F9448D8;
  uint64_t v2 = a1[1];
  if (v2) {
    MEMORY[0x245695F80](v2, 0x1000C8077774924);
  }
  return a1;
}

void sub_244799194(void *a1)
{
  *a1 = &unk_26F9448D8;
  uint64_t v1 = a1[1];
  if (v1) {
    MEMORY[0x245695F80](v1, 0x1000C8077774924);
  }

  JUMPOUT(0x245695FA0);
}

void *sub_244799210(void *a1)
{
  *a1 = &unk_26F944910;
  uint64_t v2 = a1[1];
  if (v2) {
    MEMORY[0x245695F80](v2, 0x1000C8077774924);
  }
  return a1;
}

void sub_24479926C(void *a1)
{
  *a1 = &unk_26F944910;
  uint64_t v1 = a1[1];
  if (v1) {
    MEMORY[0x245695F80](v1, 0x1000C8077774924);
  }

  JUMPOUT(0x245695FA0);
}

int *sub_2447992E8(int a1)
{
  uint64_t v1 = 0;
  while (dword_265194680[v1] != a1)
  {
    v1 += 4;
    if (v1 == 264) {
      return 0;
    }
  }
  return &dword_265194680[v1];
}

void sub_2447993A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_244799464(int a1, unsigned int a2)
{
  uint64_t result = 0;
  if (a1 <= 256)
  {
    switch(a1)
    {
      case 3:
      case 43:
      case 74:
      case 84:
      case 85:
      case 94:
      case 151:
      case 156:
        return sub_244799D7C(a2);
      case 4:
      case 30:
      case 45:
      case 46:
      case 64:
      case 65:
      case 69:
      case 91:
        return sub_244799D98(a2);
      case 5:
      case 7:
      case 9:
      case 10:
      case 11:
      case 12:
      case 13:
      case 14:
      case 15:
      case 16:
      case 17:
      case 18:
      case 19:
      case 20:
      case 21:
      case 22:
      case 23:
      case 24:
      case 25:
      case 26:
      case 27:
      case 32:
      case 33:
      case 34:
      case 35:
      case 36:
      case 38:
      case 39:
      case 58:
      case 61:
      case 66:
      case 67:
      case 68:
      case 75:
      case 76:
      case 77:
      case 78:
      case 79:
      case 88:
      case 90:
      case 99:
      case 100:
      case 101:
      case 102:
      case 103:
      case 104:
      case 105:
      case 106:
      case 107:
      case 108:
      case 109:
      case 110:
      case 111:
      case 112:
      case 115:
      case 116:
      case 117:
      case 118:
      case 119:
      case 120:
      case 121:
      case 122:
      case 123:
      case 124:
      case 125:
      case 126:
      case 127:
      case 130:
      case 131:
      case 132:
      case 133:
      case 134:
      case 135:
      case 136:
      case 137:
      case 138:
      case 139:
      case 140:
      case 141:
      case 142:
      case 143:
      case 146:
      case 147:
      case 149:
      case 154:
        return result;
      case 6:
        return sub_244799DB4(a2);
      case 8:
        return sub_244799DE0(a2);
      case 28:
      case 41:
      case 50:
        goto LABEL_8;
      case 29:
      case 155:
        goto LABEL_12;
      case 31:
        return sub_244799E40(a2);
      case 37:
      case 44:
      case 59:
      case 60:
      case 71:
      case 98:
        return sub_244799E60(a2);
      case 40:
        return sub_244799E7C(a2);
      case 42:
      case 52:
      case 63:
      case 73:
      case 81:
      case 82:
      case 83:
      case 89:
      case 93:
      case 157:
      case 158:
      case 159:
        goto LABEL_15;
      case 47:
        return sub_244799EB8(a2);
      case 48:
      case 70:
        return sub_244799ED8(a2);
      case 49:
      case 129:
        goto LABEL_20;
      case 51:
      case 55:
      case 95:
        return sub_244799F18(a2);
      case 53:
        return sub_244799F38(a2);
      case 54:
      case 56:
      case 92:
        return sub_244799F58(a2);
      case 57:
        return sub_244799F78(a2);
      case 62:
      case 72:
      case 80:
      case 86:
      case 96:
      case 97:
      case 113:
      case 114:
      case 145:
      case 148:
        return sub_244799FB4(a2);
      case 87:
        return sub_244799FD4(a2);
      case 128:
      case 150:
      case 152:
        goto LABEL_58;
      case 144:
        return sub_24479A028(a2);
      case 153:
        return sub_24479A048(a2);
      default:
        if (a1 == -918523) {
          return sub_24479A48C(a2);
        }
        if (a1 != -918496) {
          return result;
        }
        break;
    }
    return sub_244799D98(a2);
  }
  if (a1 <= 1104)
  {
    if (a1 > 768)
    {
      switch(a1)
      {
        case 1024:
LABEL_12:
          uint64_t result = sub_244799E24(a2);
          break;
        case 1025:
        case 1031:
        case 1032:
        case 1033:
        case 1034:
        case 1035:
        case 1038:
        case 1039:
        case 1040:
        case 1041:
        case 1042:
        case 1044:
          return result;
        case 1026:
        case 1028:
        case 1029:
LABEL_15:
          uint64_t result = sub_244799E9C(a2);
          break;
        case 1027:
          uint64_t result = sub_24479A3EC(a2);
          break;
        case 1030:
          uint64_t result = sub_24479A428(a2);
          break;
        case 1036:
        case 1037:
        case 1043:
        case 1045:
LABEL_20:
          uint64_t result = sub_244799EF8(a2);
          break;
        default:
          switch(a1)
          {
            case 1066:
            case 1067:
            case 1068:
            case 1069:
            case 1070:
            case 1071:
              goto LABEL_20;
            default:
              if (a1 == 769) {
                uint64_t result = sub_24479A3A0(a2);
              }
              break;
          }
          break;
      }
      return result;
    }
    if (a1 <= 511)
    {
      switch(a1)
      {
        case 257:
          return sub_24479A094(a2);
        case 258:
          return sub_24479A104(a2);
        case 336:
          return sub_244799FB4(a2);
      }
    }
    else
    {
      switch(a1)
      {
        case 512:
          uint64_t result = sub_24479A12C(a2);
          break;
        case 513:
          uint64_t result = sub_24479A174(a2);
          break;
        case 514:
          uint64_t result = sub_24479A310(a2);
          break;
        case 515:
          return result;
        case 516:
          return sub_244799E60(a2);
        default:
          if (a1 == 768) {
            uint64_t result = sub_24479A330(a2);
          }
          break;
      }
    }
  }
  else
  {
    if (a1 <= 1359)
    {
      if (a1 > 1282)
      {
        switch(a1)
        {
          case 1283:
          case 1285:
          case 1287:
          case 1290:
          case 1291:
          case 1292:
            return sub_244799D7C(a2);
          case 1284:
            return sub_244799E60(a2);
          case 1286:
            goto LABEL_20;
          case 1288:
          case 1289:
          case 1294:
          case 1296:
LABEL_8:
            uint64_t result = a2 - 65528 < 6;
            break;
          case 1293:
          case 1295:
LABEL_58:
            uint64_t result = sub_24479A008(a2);
            break;
          default:
            return result;
        }
        return result;
      }
      if (a1 != 1105)
      {
        if (a1 != 1106)
        {
          if (a1 == 1107) {
            return sub_244799E60(a2);
          }
          return result;
        }
        return sub_244799FB4(a2);
      }
      return sub_244799D7C(a2);
    }
    if (a1 <= 1871)
    {
      switch(a1)
      {
        case 1360:
          goto LABEL_15;
        case 1361:
          uint64_t result = sub_24479A46C(a2);
          break;
        case 1363:
        case 1364:
          return sub_244799D98(a2);
        case 1366:
          return sub_244799E60(a2);
        default:
          return result;
      }
      return result;
    }
    if (a1 > 323615743)
    {
      if (a1 == 323615747 || a1 == 323615744) {
        return sub_244799D5C(a2);
      }
      return result;
    }
    if (a1 == 1872) {
      return sub_244799D7C(a2);
    }
    if (a1 == 1873) {
      return sub_244799D98(a2);
    }
  }
  return result;
}

BOOL sub_244799D5C(int a1)
{
  return (a1 - 65528) <= 5 && a1 != 65530 || a1 == 0;
}

BOOL sub_244799D7C(unsigned int a1)
{
  return a1 - 65528 < 6 || a1 < 2;
}

BOOL sub_244799D98(int a1)
{
  return (a1 - 65528) < 6 || a1 == 0;
}

uint64_t sub_244799DB4(int a1)
{
  BOOL v1 = (a1 - 0x4000) < 4 || a1 == 0;
  return (a1 - 65528) < 6 || v1;
}

uint64_t sub_244799DE0(unsigned int a1)
{
  uint64_t result = 1;
  if (a1 > 0x14 || ((1 << a1) & 0x1F807F) == 0)
  {
    unsigned int v3 = a1 - 65528;
    BOOL v4 = a1 == 0x4000;
    return v3 < 6 || v4;
  }
  return result;
}

BOOL sub_244799E24(unsigned int a1)
{
  return a1 - 65528 < 6 || a1 < 5;
}

BOOL sub_244799E40(unsigned int a1)
{
  return a1 < 7 || a1 - 65528 < 6;
}

BOOL sub_244799E60(unsigned int a1)
{
  return a1 - 65528 < 6 || a1 < 3;
}

BOOL sub_244799E7C(unsigned int a1)
{
  return a1 < 0x17 || a1 - 65528 < 6;
}

BOOL sub_244799E9C(unsigned int a1)
{
  return a1 - 65528 < 6 || a1 < 4;
}

BOOL sub_244799EB8(unsigned int a1)
{
  return a1 < 0x20 || a1 - 65528 < 6;
}

BOOL sub_244799ED8(unsigned int a1)
{
  return a1 < 0xA || a1 - 65528 < 6;
}

BOOL sub_244799EF8(unsigned int a1)
{
  return a1 < 0xB || a1 - 65528 < 6;
}

BOOL sub_244799F18(unsigned int a1)
{
  return a1 < 9 || a1 - 65528 < 6;
}

BOOL sub_244799F38(unsigned int a1)
{
  return a1 < 0x3F || a1 - 65528 < 6;
}

BOOL sub_244799F58(unsigned int a1)
{
  return a1 < 0xD || a1 - 65528 < 6;
}

BOOL sub_244799F78(unsigned int a1)
{
  BOOL result = 1;
  if (a1 > 0x14 || ((1 << a1) & 0x16FFBE) == 0) {
    return a1 - 65528 < 6;
  }
  return result;
}

BOOL sub_244799FB4(unsigned int a1)
{
  return a1 < 6 || a1 - 65528 < 6;
}

uint64_t sub_244799FD4(unsigned int a1)
{
  uint64_t result = 1;
  if (a1 - 65528 >= 6 && (a1 > 3 || a1 == 1)) {
    return 0;
  }
  return result;
}

BOOL sub_24479A008(unsigned int a1)
{
  return a1 < 8 || a1 - 65528 < 6;
}

BOOL sub_24479A028(unsigned int a1)
{
  return a1 < 0x13 || a1 - 65528 < 6;
}

BOOL sub_24479A048(unsigned int a1)
{
  BOOL result = 1;
  if (a1 - 35 > 0x20 || ((1 << (a1 - 35)) & 0x1E000E01FLL) == 0) {
    return a1 < 0xB || a1 - 65528 < 6;
  }
  return result;
}

uint64_t sub_24479A094(int a1)
{
  uint64_t result = 1;
  if (a1 <= 127)
  {
    if (a1 <= 0x35 && ((1 << a1) & 0x2F1FFE1FFE007FLL) != 0) {
      return result;
    }
    return 0;
  }
  if ((a1 - 128) >= 9 && (a1 - 323551232) >= 9 && (a1 - 65528) >= 6) {
    return 0;
  }
  return result;
}

uint64_t sub_24479A104(unsigned int a1)
{
  BOOL v3 = a1 - 65528 < 6 || a1 == 23 || a1 == 26;
  return a1 < 0x14 || v3;
}

BOOL sub_24479A12C(unsigned int a1)
{
  BOOL result = 1;
  if (a1 > 0x21 || ((1 << a1) & 0x300FF1FFFLL) == 0) {
    return a1 - 65528 < 6;
  }
  return result;
}

uint64_t sub_24479A174(int a1)
{
  uint64_t result = 1;
  switch(a1)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 30:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 41:
    case 48:
    case 49:
    case 50:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 64:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
      return result;
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 29:
    case 31:
    case 38:
    case 39:
    case 40:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 51:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
      goto LABEL_4;
    default:
      if ((a1 - 65528) >= 6) {
LABEL_4:
      }
        uint64_t result = 0;
      break;
  }
  return result;
}

BOOL sub_24479A310(unsigned int a1)
{
  return a1 < 0xC || a1 - 65528 < 6;
}

BOOL sub_24479A330(unsigned int a1)
{
  BOOL result = 1;
  if ((a1 > 0x3C || ((1 << a1) & 0x1DDF07770EEF81FFLL) == 0) && (a1 - 0x4000 > 0x10 || ((1 << a1) & 0x13C7F) == 0)) {
    return a1 - 65528 < 6;
  }
  return result;
}

BOOL sub_24479A3A0(unsigned int a1)
{
  BOOL result = 1;
  if (a1 > 0x35 || ((1 << a1) & 0x3F000100330007) == 0) {
    return a1 - 65528 < 6;
  }
  return result;
}

BOOL sub_24479A3EC(unsigned int a1)
{
  BOOL result = 1;
  if (a1 > 0x14 || ((1 << a1) & 0x1F000F) == 0) {
    return a1 - 65528 < 6;
  }
  return result;
}

BOOL sub_24479A428(unsigned int a1)
{
  BOOL result = 1;
  if (a1 > 0x32 || ((1 << a1) & 0x700070007001FLL) == 0) {
    return a1 - 65528 < 6;
  }
  return result;
}

BOOL sub_24479A46C(unsigned int a1)
{
  return a1 < 0x2F || a1 - 65528 < 6;
}

uint64_t sub_24479A48C(int a1)
{
  uint64_t result = 1;
  if (a1 >= 12288)
  {
    if (((a1 - 0x4000) > 0x34 || ((1 << a1) & 0x1807F043FFFFFFLL) == 0)
      && (a1 - 65528) >= 6
      && (a1 - 12288) >= 2)
    {
      return 0;
    }
  }
  else if ((a1 > 0x34 || ((1 << a1) & 0x1F0FFFFFFFFFFFLL) == 0) && a1 != -897279 && a1 != 255)
  {
    return 0;
  }
  return result;
}

void *sub_24479A528(void *a1)
{
  *a1 = &unk_26F944948;
  sub_2446D18EC(0, (uint64_t)a1);
  return a1;
}

void *sub_24479A574(void *a1)
{
  *a1 = &unk_26F944948;
  if (!byte_26B0D4300)
  {
    byte_26B0D4300 = 1;
    sub_24479E4DC((uint64_t)&unk_26B0D41B8);
  }
  LODWORD(v3) = 116;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TROTAProviderDelegateBridge.mm";
  int v4 = 498;
  sub_24479A618((uint64_t)&unk_26B0D41B8, &v3);
  sub_2446D18EC(0, 0);
  return a1;
}

void sub_24479A618(uint64_t a1, long long *a2)
{
  uint64_t v37 = *MEMORY[0x263EF8340];
  sub_244D6A434("/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTROTAProviderDelegateBridge.mm", 126);
  if (*(unsigned char *)(a1 + 280) && *(unsigned char *)(a1 + 278))
  {
    int v4 = sub_244CC8484(9u, "Controller");
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      int v5 = *((_DWORD *)sub_24479DC08((unsigned char *)(a1 + 280)) + 1);
      uint64_t v6 = *(void *)sub_24479DC08((unsigned char *)(a1 + 280));
      int v7 = *sub_24479DC2C((unsigned char *)(a1 + 278));
      *(_DWORD *)buf = 67109632;
      int v32 = v5;
      __int16 v33 = 1024;
      int v34 = v6;
      __int16 v35 = 1024;
      int v36 = v7;
      _os_log_impl(&dword_2446BD000, v4, OS_LOG_TYPE_DEFAULT, "Resetting state for OTA Provider; no longer providing an update for node id 0x%08X%08X, fabric index %u",
        buf,
        0x14u);
    }

    if (sub_244CC4E58(2u))
    {
      sub_24479DC08((unsigned char *)(a1 + 280));
      sub_24479DC08((unsigned char *)(a1 + 280));
      sub_24479DC2C((unsigned char *)(a1 + 278));
      sub_244CC4DE0(9u, 2);
    }
    if (*(unsigned char *)(a1 + 277))
    {
      objc_msgSend_sharedInstance(MTRDeviceControllerFactory, v8, v9);
      long long v10 = (unsigned __int8 *)objc_claimAutoreleasedReturnValue();
      int v11 = sub_24479DC2C((unsigned char *)(a1 + 278));
      long long v12 = sub_2446D67B8(v10, *v11);

      if (v12)
      {
        long long v13 = NSNumber;
        int v14 = (uint64_t *)sub_24479DC08((unsigned char *)(a1 + 280));
        long long v16 = objc_msgSend_numberWithUnsignedLongLong_(v13, v15, *v14);
        id v17 = *(id *)(a1 + 296);
        if (objc_opt_respondsToSelector())
        {
          long long v18 = *(NSObject **)(a1 + 304);
          block[0] = MEMORY[0x263EF8330];
          block[1] = 3221225472;
          block[2] = sub_24479DC50;
          block[3] = &unk_265194C30;
          id v26 = v17;
          id v27 = v16;
          id v28 = v12;
          long long v29 = *a2;
          uint64_t v30 = *((void *)a2 + 2);
          dispatch_async(v18, block);
        }
      }
      else
      {
        int v20 = sub_244CC8484(9u, "Controller");
        if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
        {
          *(_WORD *)buf = 0;
          _os_log_impl(&dword_2446BD000, v20, OS_LOG_TYPE_ERROR, "Not notifying delegate of BDX Transfer Session End, controller is not running", buf, 2u);
        }

        if (sub_244CC4E58(1u)) {
          sub_244CC4DE0(9u, 1);
        }
      }
    }
  }
  else
  {
    long long v19 = sub_244CC8484(9u, "Controller");
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_2446BD000, v19, OS_LOG_TYPE_DEFAULT, "Resetting state for OTA Provider", buf, 2u);
    }

    if (sub_244CC4E58(2u)) {
      sub_244CC4DE0(9u, 2);
    }
  }
  uint64_t v21 = *(void *)(a1 + 264);
  if (v21) {
    (*(void (**)(uint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t))(*(void *)v21 + 72))(v21, sub_24479DCD8, a1);
  }
  if (*(unsigned char *)(a1 + 276))
  {
    sub_244DDFBA0(a1);
    ++*(void *)(a1 + 320);
    *(unsigned char *)(a1 + 278) = 0;
    *(unsigned char *)(a1 + 280) = 0;
    uint64_t v22 = *(void *)(a1 + 256);
    if (v22)
    {
      sub_244D64B58(v22);
      *(void *)(a1 + 256) = 0;
    }
    long long v23 = *(void **)(a1 + 296);
    *(void *)(a1 + 296) = 0;

    int v24 = *(void **)(a1 + 304);
    *(void *)(a1 + 304) = 0;

    *(_WORD *)(a1 + 276) = 0;
  }
}

void sub_24479AA30(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24479AA7C(void *a1)
{
  sub_24479A574(a1);

  JUMPOUT(0x245695FA0);
}

int *sub_24479AAB4@<X0>(uint64_t a1@<X1>, int *a2@<X2>, uint64_t a3@<X8>)
{
  if (!byte_26B0D4300)
  {
    byte_26B0D4300 = 1;
    sub_24479E4DC((uint64_t)&unk_26B0D41B8);
  }

  return sub_24479AB28((uint64_t)&unk_26B0D41B8, a1, a2, a3);
}

int *sub_24479AB28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result = (int *)sub_244D6A434("/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTROTAProviderDelegateBridge.mm", 84);
  if (*(void *)(a1 + 264))
  {
    int v9 = 86;
  }
  else if (*(void *)(a1 + 312))
  {
    int v9 = 87;
  }
  else if (a2)
  {
    if (a3)
    {
      uint64_t result = sub_244D662CC(a3, 0x20000, a1 + 8, (uint64_t)v11);
      int v10 = 0;
      *(void *)(a1 + 264) = a2;
      *(void *)(a1 + 312) = a3;
      int v9 = 96;
      goto LABEL_6;
    }
    int v9 = 89;
  }
  else
  {
    int v9 = 88;
  }
  int v10 = 3;
LABEL_6:
  *(_DWORD *)a4 = v10;
  *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MT"
                        "ROTAProviderDelegateBridge.mm";
  *(_DWORD *)(a4 + 16) = v9;
  return result;
}

void sub_24479ABEC()
{
  if (!byte_26B0D4300)
  {
    byte_26B0D4300 = 1;
    sub_24479E4DC((uint64_t)&unk_26B0D41B8);
  }
  sub_24479AC38((uint64_t)&unk_26B0D41B8, (uint64_t)v0);
}

void sub_24479AC38(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_244D6A434("/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTROTAProviderDelegateBridge.mm", 101);
  if (!*(void *)(a1 + 264))
  {
    int v6 = 103;
LABEL_6:
    int v5 = 3;
    goto LABEL_7;
  }
  int v4 = *(int **)(a1 + 312);
  if (!v4)
  {
    int v6 = 104;
    goto LABEL_6;
  }
  sub_244D663E8(v4, 0x20000, (uint64_t)v9);
  LODWORD(v7) = 116;
  *((void *)&v7 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TROTAProviderDelegateBridge.mm";
  int v8 = 107;
  sub_24479A618(a1, &v7);
  int v5 = 0;
  *(void *)(a1 + 312) = 0;
  *(void *)(a1 + 264) = 0;
  int v6 = 112;
LABEL_7:
  *(_DWORD *)a2 = v5;
  *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MT"
                        "ROTAProviderDelegateBridge.mm";
  *(_DWORD *)(a2 + 16) = v6;
}

void sub_24479ACEC(uint64_t a1, void *a2)
{
  id v2 = a2;
  if (!byte_26B0D4300)
  {
    byte_26B0D4300 = 1;
    sub_24479E4DC((uint64_t)&unk_26B0D41B8);
  }
  sub_24479AD70((uint64_t)&unk_26B0D41B8, v2);
}

void sub_24479AD5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24479AD70(uint64_t a1, void *a2)
{
  id v3 = a2;
  sub_244D6A434("/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTROTAProviderDelegateBridge.mm", 117);
  if (*(unsigned char *)(a1 + 276))
  {
    int v4 = *sub_24479DC2C((unsigned char *)(a1 + 278));
    if (v4 == objc_msgSend_fabricIndex(v3, v5, v6))
    {
      LODWORD(v7) = 116;
      *((void *)&v7 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CH"
                             "IP/MTROTAProviderDelegateBridge.mm";
      int v8 = 120;
      sub_24479A618(a1, &v7);
    }
  }
}

void sub_24479AE04(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24479AE14(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int16 *a4)
{
  sub_244D6A434("/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTROTAProviderDelegateBridge.mm", 606);
  id v52 = 0;
  v53[0] = 0;
  int v7 = sub_24479B2BC(a2, a3, v53, &v52);
  id v8 = v52;
  if (v7)
  {
    char v9 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 48))(a2);
    uint64_t v10 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 96))(a2);
    sub_24479B4A8(v10, v46);
    uint64_t v11 = sub_244D879D8(v46[0]);
    uint64_t v12 = (*(uint64_t (**)(uint64_t))(*(void *)v11 + 56))(v11);
    uint64_t v14 = v13;
    (*(void (**)(uint64_t))(*(void *)v46[0] + 32))(v46[0]);
    long long v15 = objc_alloc_init(MTROTASoftwareUpdateProviderClusterQueryImageParams);
    long long v50 = 0uLL;
    uint64_t v51 = 0;
    sub_24479B538(a4, v15, &v50);
    if (v50)
    {
      long long v48 = v50;
      uint64_t v49 = v51;
      sub_24479B818((uint64_t)v43, &v48);
      LOWORD(v46[0]) = LOBYTE(v43[0]);
      (*(void (**)(uint64_t, uint64_t, uint64_t *, void))(*(void *)a2 + 24))(a2, a3, v46, 0);
    }
    else
    {
      v46[0] = 0;
      v46[1] = (uint64_t)v46;
      v46[2] = 0x4812000000;
      v46[3] = (uint64_t)sub_24479B894;
      v46[4] = (uint64_t)sub_24479B8A0;
      v46[5] = (uint64_t)"";
      sub_244DD5804(v47, a2);
      v43[0] = 0;
      v43[1] = v43;
      v43[2] = 0x4012000000;
      v43[3] = sub_24479B8A8;
      v43[4] = nullsub_19;
      v43[5] = "";
      __int16 v44 = *(_WORD *)a3;
      uint64_t v45 = *(void *)(a3 + 4);
      v34[0] = MEMORY[0x263EF8330];
      v34[1] = 3221225472;
      v34[2] = sub_24479B8C0;
      v34[3] = &unk_265194AF0;
      id v16 = v8;
      id v35 = v16;
      uint64_t v37 = v46;
      int v38 = v43;
      id v17 = v15;
      char v42 = v9;
      uint64_t v18 = v53[0];
      int v36 = v17;
      uint64_t v39 = v53[0];
      uint64_t v40 = v12;
      uint64_t v41 = v14;
      long long v19 = (void *)MEMORY[0x2456969D0](v34);
      uint64_t v22 = objc_msgSend_otaProviderDelegate(v16, v20, v21);
      uint64_t v25 = objc_msgSend_otaProviderDelegateQueue(v16, v23, v24);
      v28[0] = MEMORY[0x263EF8330];
      v28[1] = 3221225472;
      v28[2] = sub_24479C920;
      v28[3] = &unk_265194B40;
      id v29 = v22;
      uint64_t v33 = v18;
      id v30 = v16;
      long long v31 = v17;
      id v32 = v19;
      id v26 = v19;
      id v27 = v22;
      dispatch_async(v25, v28);

      _Block_object_dispose(v43, 8);
      _Block_object_dispose(v46, 8);
      sub_24479E130(v47);
    }
  }
}

void sub_24479B20C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,void *a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  _Block_object_dispose(&a30, 8);
  _Block_object_dispose(&a38, 8);
  sub_24479E130(v40);

  _Unwind_Resume(a1);
}

uint64_t sub_24479B2BC(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  (*(void (**)(void *__return_ptr))(*(void *)a1 + 88))(v18);
  if (BYTE1(v18[0]) == 64)
  {
    objc_msgSend_sharedInstance(MTRDeviceControllerFactory, v8, v9);
    uint64_t v10 = (unsigned __int8 *)objc_claimAutoreleasedReturnValue();
    int v11 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
    uint64_t v12 = sub_2446D67B8(v10, v11);

    if (v12)
    {
      long long v15 = objc_msgSend_otaProviderDelegate(v12, v13, v14);

      if (v15)
      {
        *a4 = v12;
        *a3 = v18[1];
        uint64_t v16 = 1;
LABEL_9:

        return v16;
      }
      __int16 v19 = 129;
      (*(void (**)(uint64_t, uint64_t, __int16 *, void))(*(void *)a1 + 24))(a1, a2, &v19, 0);
    }
    else
    {
      __int16 v19 = 1;
      (*(void (**)(uint64_t, uint64_t, __int16 *, void))(*(void *)a1 + 24))(a1, a2, &v19, 0);
    }
    uint64_t v16 = 0;
    goto LABEL_9;
  }
  __int16 v19 = 1;
  (*(void (**)(uint64_t, uint64_t, __int16 *, void))(*(void *)a1 + 24))(a1, a2, &v19, 0);
  return 0;
}

void sub_24479B48C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24479B4A8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  if (!*(unsigned char *)(a1 + 88)) {
    sub_244E1ED94(a1);
  }
  sub_24479DD24(a1 + 64, (uint64_t)v5);
  uint64_t v3 = *(void *)sub_24479DC08(v5);
  *a2 = v3;
  (*(void (**)(uint64_t))(*(void *)v3 + 24))(v3);
  return sub_24479DF48((uint64_t)v5);
}

void sub_24479B538(unsigned __int16 *a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  id v5 = a2;
  int v7 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v6, *a1);
  objc_msgSend_setVendorID_(v5, v8, (uint64_t)v7);

  uint64_t v10 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v9, a1[1]);
  objc_msgSend_setProductID_(v5, v11, (uint64_t)v10);

  uint64_t v13 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v12, *((unsigned int *)a1 + 1));
  objc_msgSend_setSoftwareVersion_(v5, v14, (uint64_t)v13);

  v45[0] = *((unsigned char *)a1 + 80);
  if (v45[0]) {
    v45[1] = *((unsigned char *)a1 + 81);
  }
  sub_2446D1930((uint64_t)v42, (uint64_t)(a1 + 4), v45);
  id v15 = objc_alloc_init(MEMORY[0x263EFF980]);
  while (sub_2446D19A0((uint64_t)v42))
  {
    id v17 = objc_msgSend_numberWithInt_(NSNumber, v16, v42[0]);
    objc_msgSend_addObject_(v15, v18, (uint64_t)v17);
  }
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  if (v43 == 33)
  {
    a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/DecodableList.h";
    *((_DWORD *)a3 + 4) = 147;
  }
  else
  {
    *(_OWORD *)a3 = v43;
    a3[2] = v44;
    if (*(_DWORD *)a3) {
      goto LABEL_18;
    }
  }
  objc_msgSend_setProtocolsSupported_(v5, v16, (uint64_t)v15);
  if (*((unsigned char *)a1 + 88))
  {
    __int16 v19 = NSNumber;
    int v20 = sub_2446D1880((unsigned char *)a1 + 88);
    uint64_t v22 = objc_msgSend_numberWithUnsignedShort_(v19, v21, *(unsigned __int16 *)v20);
    objc_msgSend_setHardwareVersion_(v5, v23, (uint64_t)v22);
  }
  if (*((unsigned char *)a1 + 96))
  {
    uint64_t v24 = (uint64_t *)sub_2446D18A4((unsigned char *)a1 + 96);
    uint64_t v25 = *v24;
    uint64_t v26 = v24[1];
    id v27 = [NSString alloc];
    id v29 = objc_msgSend_initWithBytes_length_encoding_(v27, v28, v25, v26, 4);
    objc_msgSend_setLocation_(v5, v30, (uint64_t)v29);
  }
  if (*((unsigned char *)a1 + 120))
  {
    long long v31 = NSNumber;
    id v32 = sub_2446D18C8((unsigned char *)a1 + 120);
    int v34 = objc_msgSend_numberWithBool_(v31, v33, *v32);
    objc_msgSend_setRequestorCanConsent_(v5, v35, (uint64_t)v34);
  }
  int v37 = *((unsigned __int8 *)a1 + 128);
  int v36 = a1 + 64;
  if (v37)
  {
    int v38 = (uint64_t *)sub_2446D18A4(v36);
    uint64_t v40 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v39, *v38, v38[1]);
    objc_msgSend_setMetadataForProvider_(v5, v41, (uint64_t)v40);
  }
  *(_DWORD *)a3 = 0;
  a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTROTAProviderDelegateBridge.mm";
  *((_DWORD *)a3 + 4) = 882;
LABEL_18:
}

void sub_24479B7BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24479B818(uint64_t a1, long long *a2)
{
  long long v7 = *a2;
  uint64_t v8 = *((void *)a2 + 2);
  sub_244CD0398(&v9, (int *)&v7);
  unsigned int v3 = v9;
  *(_WORD *)a1 = v9;
  if (v3 <= 1)
  {
    char v4 = v10;
    if (v10)
    {
      char v5 = v11;
      *(unsigned char *)a1 = v3 != 0;
      *(unsigned char *)(a1 + 1) = v4;
      *(unsigned char *)(a1 + 2) = v5;
    }
  }
  return a1;
}

void *sub_24479B894(uint64_t a1, uint64_t a2)
{
  return sub_24479DFA0((void *)(a1 + 48), a2 + 48);
}

void *sub_24479B8A0(uint64_t a1)
{
  return sub_24479E130((void *)(a1 + 48));
}

uint64_t sub_24479B8A8(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 48);
  *(_DWORD *)(result + 56) = *(_DWORD *)(a2 + 56);
  *(void *)(result + 48) = v2;
  return result;
}

void sub_24479B8C0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  long long v7 = *(void **)(a1 + 32);
  v13[0] = MEMORY[0x263EF8330];
  v13[1] = 3221225472;
  v13[2] = sub_24479B9F8;
  v13[3] = &unk_265194AA8;
  uint64_t v17 = *(void *)(a1 + 56);
  id v14 = v5;
  id v15 = v6;
  long long v12 = *(_OWORD *)(a1 + 40);
  id v8 = (id)v12;
  long long v16 = v12;
  char v20 = *(unsigned char *)(a1 + 88);
  uint64_t v18 = *(void *)(a1 + 64);
  long long v19 = *(_OWORD *)(a1 + 72);
  id v9 = v6;
  id v10 = v5;
  objc_msgSend_asyncDispatchToMatterQueue_errorHandler_(v7, v11, (uint64_t)v13, &unk_26F944970);
}

void sub_24479B9CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, void *a17, void *a18)
{
  _Unwind_Resume(a1);
}

void sub_24479B9F8(uint64_t a1)
{
  uint64_t v90 = *MEMORY[0x263EF8340];
  sub_244D6A434("/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTROTAProviderDelegateBridge.mm", 632);
  uint64_t v2 = sub_24479C380(*(void *)(*(void *)(a1 + 56) + 8) + 48, *(void *)(*(void *)(a1 + 64) + 8) + 48, (uint64_t)"QueryImage", *(void **)(a1 + 32), *(void **)(a1 + 40));
  if (v2)
  {
    uint64_t v3 = v2;
    char v4 = sub_244CC8484(9u, "Controller");
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      objc_msgSend_description(*(void **)(a1 + 32), v5, v6);
      id v7 = objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 136315138;
      *(void *)&uint8_t buf[4] = objc_msgSend_UTF8String(v7, v8, v9);
      _os_log_impl(&dword_2446BD000, v4, OS_LOG_TYPE_INFO, "QueryImage: application responded with: %s", buf, 0xCu);
    }
    if (sub_244CC4E58(3u))
    {
      objc_msgSend_description(*(void **)(a1 + 32), v10, v11);
      id v12 = objc_claimAutoreleasedReturnValue();
      uint64_t v46 = objc_msgSend_UTF8String(v12, v13, v14);
      sub_244CC4DE0(9u, 3);
    }
    id v15 = objc_msgSend_status(*(void **)(a1 + 32), v10, v11, v46);
    char isEqual = objc_msgSend_isEqual_(v15, v16, (uint64_t)&unk_26F9C8578);

    char v20 = objc_msgSend_protocolsSupported(*(void **)(a1 + 48), v18, v19);
    char v22 = objc_msgSend_containsObject_(v20, v21, (uint64_t)&unk_26F9C8578);

    if (v22)
    {
      LOBYTE(v70[0]) = 0;
      BYTE4(v70[0]) = 0;
      char v71 = 0;
      char v73 = 0;
      char v74 = 0;
      char v75 = 0;
      char v76 = 0;
      char v77 = 0;
      sub_24479C51C(*(void **)(a1 + 32), (uint64_t)v70);
      if (isEqual)
      {
        memset(v69, 0, 24);
        if (!byte_26B0D4300)
        {
          byte_26B0D4300 = 1;
          sub_24479E4DC((uint64_t)qword_26B0D41B8);
        }
        sub_24479C828(qword_26B0D41B8, *(unsigned __int8 *)(a1 + 96), *(void *)(a1 + 72), (uint64_t)v69);
        int v25 = v69[0];
        if (LODWORD(v69[0]))
        {
          if (LODWORD(v69[0]) == 219)
          {
            uint64_t v26 = sub_244CC8484(9u, "Controller");
            if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR))
            {
              *(_WORD *)buf = 0;
              _os_log_impl(&dword_2446BD000, v26, OS_LOG_TYPE_ERROR, "Responding with Busy due to being in the middle of handling another BDX transfer", buf, 2u);
            }

            if (sub_244CC4E58(1u)) {
              sub_244CC4DE0(9u, 1);
            }
            uint8_t buf[16] = 0;
            char v85 = 0;
            char v86 = 0;
            char v87 = 0;
            char v88 = 0;
            char v89 = 0;
            buf[0] = 1;
            if (BYTE4(v70[0])) {
              id v27 = (int *)sub_2446F12CC((unsigned char *)v70 + 4);
            }
            else {
              id v27 = &dword_244E7A760;
            }
            uint8_t buf[4] = 1;
            *(_DWORD *)&uint8_t buf[8] = *v27;
            uint64_t v44 = *(void *)(*(void *)(a1 + 64) + 8) + 48;
            *(void *)int v78 = &unk_26F944B00;
            *(void *)&v78[8] = buf;
            (*(void (**)(uint64_t, uint64_t, uint64_t, unsigned char *))(*(void *)v3 + 64))(v3, v44, 1, v78);
            sub_244DD57B0(*(void *)(*(void *)(a1 + 56) + 8) + 48);
          }
          else
          {
            *(_OWORD *)int v78 = *(_OWORD *)((char *)v69 + 4);
            *(_DWORD *)&v78[16] = DWORD1(v69[1]);
            uint64_t v41 = sub_244CC8484(0, "NotSpecified");
            if (os_log_type_enabled(v41, OS_LOG_TYPE_ERROR))
            {
              long long v67 = *(_OWORD *)v78;
              int v66 = v25;
              int v68 = *(_DWORD *)&v78[16];
              char v42 = sub_244CB7B34((const char **)&v66, 1);
              *(_DWORD *)buf = 136315650;
              *(void *)&uint8_t buf[4] = v42;
              *(_WORD *)&buf[12] = 2080;
              *(void *)&buf[14] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Frame"
                                    "work/CHIP/MTROTAProviderDelegateBridge.mm";
              __int16 v83 = 1024;
              int v84 = 689;
              _os_log_impl(&dword_2446BD000, v41, OS_LOG_TYPE_ERROR, "%s at %s:%d", buf, 0x1Cu);
            }

            if (sub_244CC4E58(1u))
            {
              long long v64 = *(_OWORD *)v78;
              int v63 = v25;
              int v65 = *(_DWORD *)&v78[16];
              sub_244CB7B34((const char **)&v63, 1);
              sub_244CC4DE0(0, 1);
            }
            uint64_t v43 = *(void *)(*(void *)(a1 + 64) + 8);
            long long v61 = v69[0];
            uint64_t v62 = *(void *)&v69[1];
            sub_24479B818((uint64_t)v78, &v61);
            buf[0] = v78[0];
            buf[1] = 0;
            (*(void (**)(uint64_t, uint64_t, unsigned char *, void))(*(void *)v3 + 24))(v3, v43 + 48, buf, 0);
            sub_244DD57B0(*(void *)(*(void *)(a1 + 56) + 8) + 48);
            if (!byte_26B0D4300)
            {
              byte_26B0D4300 = 1;
              sub_24479E4DC((uint64_t)qword_26B0D41B8);
            }
            long long v59 = v69[0];
            uint64_t v60 = *(void *)&v69[1];
            sub_24479A618((uint64_t)qword_26B0D41B8, &v59);
          }
        }
        else
        {
          __n128 v57 = buf;
          uint64_t v58 = 256;
          unint64_t v30 = *(void *)(a1 + 80);
          objc_msgSend_imageURI(*(void **)(a1 + 32), v23, v24);
          id v31 = objc_claimAutoreleasedReturnValue();
          uint64_t v34 = objc_msgSend_UTF8String(v31, v32, v33);
          uint64_t v36 = objc_msgSend_lengthOfBytesUsingEncoding_(v31, v35, 4);
          sub_24479476C(&v80, v34, v36);

          sub_244DDF988(v30, (const void *)v80, *((size_t *)&v80 + 1), (uint64_t)&v57, v78);
          v69[0] = *(_OWORD *)v78;
          *(void *)&v69[1] = *(void *)&v78[16];

          int v37 = v69[0];
          if (LODWORD(v69[0]))
          {
            long long v80 = *(_OWORD *)((char *)v69 + 4);
            int v81 = DWORD1(v69[1]);
            int v38 = sub_244CC8484(0, "NotSpecified");
            if (os_log_type_enabled(v38, OS_LOG_TYPE_ERROR))
            {
              int v54 = v37;
              long long v55 = v80;
              int v56 = v81;
              uint64_t v39 = sub_244CB7B34((const char **)&v54, 1);
              *(_DWORD *)int v78 = 136315650;
              *(void *)&v78[4] = v39;
              *(_WORD *)&v78[12] = 2080;
              *(void *)&v78[14] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Frame"
                                    "work/CHIP/MTROTAProviderDelegateBridge.mm";
              *(_WORD *)&v78[22] = 1024;
              int v79 = 702;
              _os_log_impl(&dword_2446BD000, v38, OS_LOG_TYPE_ERROR, "%s at %s:%d", v78, 0x1Cu);
            }

            if (sub_244CC4E58(1u))
            {
              int v51 = v37;
              long long v52 = v80;
              int v53 = v81;
              sub_244CB7B34((const char **)&v51, 1);
              sub_244CC4DE0(0, 1);
            }
            uint64_t v40 = *(void *)(*(void *)(a1 + 64) + 8);
            long long v49 = v69[0];
            uint64_t v50 = *(void *)&v69[1];
            sub_24479B818((uint64_t)&v80, &v49);
            v78[0] = v80;
            v78[1] = 0;
            (*(void (**)(uint64_t, uint64_t, unsigned char *, void))(*(void *)v3 + 24))(v3, v40 + 48, v78, 0);
            sub_244DD57B0(*(void *)(*(void *)(a1 + 56) + 8) + 48);
            if (!byte_26B0D4300)
            {
              byte_26B0D4300 = 1;
              sub_24479E4DC((uint64_t)qword_26B0D41B8);
            }
            long long v47 = v69[0];
            uint64_t v48 = *(void *)&v69[1];
            sub_24479A618((uint64_t)qword_26B0D41B8, &v47);
          }
          else
          {
            sub_24479476C(v78, (uint64_t)v57, v58);
            char v71 = 1;
            long long v72 = *(_OWORD *)v78;
            uint64_t v45 = *(void *)(*(void *)(a1 + 64) + 8) + 48;
            *(void *)int v78 = &unk_26F944B00;
            *(void *)&v78[8] = v70;
            (*(void (**)(uint64_t, uint64_t, uint64_t, unsigned char *))(*(void *)v3 + 64))(v3, v45, 1, v78);
            sub_244DD57B0(*(void *)(*(void *)(a1 + 56) + 8) + 48);
          }
        }
      }
      else
      {
        uint64_t v29 = *(void *)(*(void *)(a1 + 64) + 8) + 48;
        *(void *)buf = &unk_26F944B00;
        *(void *)&uint8_t buf[8] = v70;
        (*(void (**)(uint64_t, uint64_t, uint64_t, unsigned char *))(*(void *)v3 + 64))(v3, v29, 1, buf);
        sub_244DD57B0(*(void *)(*(void *)(a1 + 56) + 8) + 48);
      }
    }
    else
    {
      uint8_t buf[4] = 0;
      uint8_t buf[16] = 0;
      char v85 = 0;
      char v86 = 0;
      char v87 = 0;
      char v88 = 0;
      char v89 = 0;
      buf[0] = 3;
      uint64_t v28 = *(void *)(*(void *)(a1 + 64) + 8) + 48;
      v70[0] = &unk_26F944B00;
      v70[1] = buf;
      (*(void (**)(uint64_t, uint64_t, uint64_t, void *))(*(void *)v3 + 64))(v3, v28, 1, v70);
      sub_244DD57B0(*(void *)(*(void *)(a1 + 56) + 8) + 48);
    }
  }
}

void sub_24479C2CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24479C380(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  id v9 = a4;
  id v10 = a5;
  uint64_t v11 = sub_24479D7AC(a1, a2, a3, v10);
  if (v11 && !v9)
  {
    id v12 = sub_244CC8484(9u, "Controller");
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136315138;
      uint64_t v15 = a3;
      _os_log_impl(&dword_2446BD000, v12, OS_LOG_TYPE_ERROR, "%s: no data to send as a response", buf, 0xCu);
    }

    if (sub_244CC4E58(1u)) {
      sub_244CC4DE0(9u, 1);
    }
    *(_WORD *)buf = 1;
    (*(void (**)(uint64_t, uint64_t, uint8_t *, void))(*(void *)v11 + 24))(v11, a2, buf, 0);
    sub_244DD57B0(a1);
    uint64_t v11 = 0;
  }

  return v11;
}

void sub_24479C4FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24479C51C(void *a1, uint64_t a2)
{
  id v3 = a1;
  uint64_t v6 = objc_msgSend_status(v3, v4, v5);
  *(unsigned char *)a2 = objc_msgSend_intValue(v6, v7, v8);

  uint64_t v11 = objc_msgSend_delayedActionTime(v3, v9, v10);

  if (v11)
  {
    uint64_t v14 = objc_msgSend_delayedActionTime(v3, v12, v13);
    int v17 = objc_msgSend_unsignedIntValue(v14, v15, v16);
    *(unsigned char *)(a2 + 4) = 1;
    *(_DWORD *)(a2 + 8) = v17;
  }
  uint64_t v18 = objc_msgSend_imageURI(v3, v12, v13);

  if (v18)
  {
    objc_msgSend_imageURI(v3, v19, v20);
    id v21 = objc_claimAutoreleasedReturnValue();
    uint64_t v24 = objc_msgSend_UTF8String(v21, v22, v23);
    uint64_t v26 = objc_msgSend_lengthOfBytesUsingEncoding_(v21, v25, 4);
    sub_24479476C(&v74, v24, v26);

    long long v27 = v74;
    *(unsigned char *)(a2 + 16) = 1;
    *(_OWORD *)(a2 + 24) = v27;
  }
  uint64_t v28 = objc_msgSend_softwareVersion(v3, v19, v20);

  if (v28)
  {
    id v31 = objc_msgSend_softwareVersion(v3, v29, v30);
    int v34 = objc_msgSend_unsignedIntValue(v31, v32, v33);
    *(unsigned char *)(a2 + 40) = 1;
    *(_DWORD *)(a2 + 44) = v34;
  }
  id v35 = objc_msgSend_softwareVersionString(v3, v29, v30);

  if (v35)
  {
    objc_msgSend_softwareVersionString(v3, v36, v37);
    id v38 = objc_claimAutoreleasedReturnValue();
    uint64_t v41 = objc_msgSend_UTF8String(v38, v39, v40);
    uint64_t v43 = objc_msgSend_lengthOfBytesUsingEncoding_(v38, v42, 4);
    sub_24479476C(&v74, v41, v43);

    long long v44 = v74;
    *(unsigned char *)(a2 + 48) = 1;
    *(_OWORD *)(a2 + 56) = v44;
  }
  uint64_t v45 = objc_msgSend_updateToken(v3, v36, v37);

  if (v45)
  {
    objc_msgSend_updateToken(v3, v46, v47);
    id v48 = objc_claimAutoreleasedReturnValue();
    uint64_t v51 = objc_msgSend_bytes(v48, v49, v50);
    uint64_t v54 = objc_msgSend_length(v48, v52, v53);
    sub_2446C1098(&v74, v51, v54);

    long long v55 = v74;
    *(unsigned char *)(a2 + 72) = 1;
    *(_OWORD *)(a2 + 80) = v55;
  }
  int v56 = objc_msgSend_userConsentNeeded(v3, v46, v47);

  if (v56)
  {
    long long v59 = objc_msgSend_userConsentNeeded(v3, v57, v58);
    char v62 = objc_msgSend_BOOLValue(v59, v60, v61);
    *(unsigned char *)(a2 + 96) = 1;
    *(unsigned char *)(a2 + 97) = v62;
  }
  int v63 = objc_msgSend_metadataForRequestor(v3, v57, v58);

  if (v63)
  {
    objc_msgSend_metadataForRequestor(v3, v64, v65);
    id v66 = objc_claimAutoreleasedReturnValue();
    uint64_t v69 = objc_msgSend_bytes(v66, v67, v68);
    uint64_t v72 = objc_msgSend_length(v66, v70, v71);
    sub_2446C1098(&v74, v69, v72);

    long long v73 = v74;
    *(unsigned char *)(a2 + 104) = 1;
    *(_OWORD *)(a2 + 112) = v73;
  }
}

void sub_24479C7CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24479C828(void *a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244D6A434("/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTROTAProviderDelegateBridge.mm", 71);
  if (!a1[39])
  {
    *(_DWORD *)a4 = 3;
    *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "MTROTAProviderDelegateBridge.mm";
    int v9 = 73;
LABEL_9:
    *(_DWORD *)(a4 + 16) = v9;
    return;
  }
  if (!a1[33])
  {
    *(_DWORD *)a4 = 3;
    *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "MTROTAProviderDelegateBridge.mm";
    int v9 = 74;
    goto LABEL_9;
  }
  *(void *)a4 = 0;
  *(void *)(a4 + 8) = 0;
  *(void *)(a4 + 16) = 0;
  sub_24479E16C((uint64_t)a1, a2, a3, a4);
  if (!*(_DWORD *)a4)
  {
    uint64_t v8 = a1[33];
    sub_244DE0318(a1, v8, 1, 32, 1024, 300000, 50, (void *)a4);
  }
}

void sub_24479C920(uint64_t a1)
{
  char v2 = objc_opt_respondsToSelector();
  id v3 = *(void **)(a1 + 32);
  objc_msgSend_numberWithUnsignedLongLong_(NSNumber, v4, *(void *)(a1 + 64));
  id v9 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v7 = *(void *)(a1 + 48);
  if (v2)
  {
    objc_msgSend_handleQueryImageForNodeID_controller_params_completion_(v3, v5, (uint64_t)v9, *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56));
  }
  else
  {
    v10[0] = MEMORY[0x263EF8330];
    v10[1] = 3221225472;
    v10[2] = sub_24479CA70;
    v10[3] = &unk_265194B18;
    id v11 = *(id *)(a1 + 56);
    objc_msgSend_handleQueryImageForNodeID_controller_params_completionHandler_(v3, v8, (uint64_t)v9, v6, v7, v10);
  }
}

void sub_24479CA4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24479CA70(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24479CA80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_244D6A434("/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTROTAProviderDelegateBridge.mm", 741);
  id v36 = 0;
  uint64_t v37 = 0;
  int v7 = sub_24479B2BC(a2, a3, &v37, &v36);
  id v8 = v36;
  if (v7)
  {
    v34[0] = 0;
    v34[1] = v34;
    v34[2] = 0x4812000000;
    v34[3] = sub_24479B894;
    void v34[4] = sub_24479B8A0;
    v34[5] = "";
    sub_244DD5804(v35, a2);
    v31[0] = 0;
    v31[1] = v31;
    v31[2] = 0x4012000000;
    v31[3] = sub_24479B8A8;
    v31[4] = nullsub_19;
    v31[5] = "";
    __int16 v32 = *(_WORD *)a3;
    uint64_t v33 = *(void *)(a3 + 4);
    v27[0] = MEMORY[0x263EF8330];
    v27[1] = 3221225472;
    void v27[2] = sub_24479CD88;
    v27[3] = &unk_265194B90;
    id v9 = v8;
    id v28 = v9;
    uint64_t v29 = v34;
    uint64_t v30 = v31;
    uint64_t v10 = (void *)MEMORY[0x2456969D0](v27);
    id v11 = objc_alloc_init(MTROTASoftwareUpdateProviderClusterApplyUpdateRequestParams);
    sub_24479D120(a4, v11);
    uint64_t v14 = objc_msgSend_otaProviderDelegate(v9, v12, v13);
    int v17 = objc_msgSend_otaProviderDelegateQueue(v9, v15, v16);
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = sub_24479D1D8;
    block[3] = &unk_265194B40;
    id v22 = v14;
    uint64_t v26 = v37;
    id v23 = v9;
    uint64_t v24 = v11;
    id v25 = v10;
    id v18 = v10;
    uint64_t v19 = v11;
    id v20 = v14;
    dispatch_async(v17, block);

    _Block_object_dispose(v31, 8);
    _Block_object_dispose(v34, 8);
    sub_24479E130(v35);
  }
}

void sub_24479CD24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,char a26)
{
  __int16 v32 = v28;

  _Block_object_dispose(&a26, 8);
  _Block_object_dispose((const void *)(v31 - 168), 8);
  sub_24479E130(v27);

  _Unwind_Resume(a1);
}

void sub_24479CD88(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  int v7 = *(void **)(a1 + 32);
  v11[0] = MEMORY[0x263EF8330];
  v11[1] = 3221225472;
  v11[2] = sub_24479CE7C;
  v11[3] = &unk_265194B68;
  long long v14 = *(_OWORD *)(a1 + 40);
  id v12 = v5;
  id v13 = v6;
  id v8 = v6;
  id v9 = v5;
  objc_msgSend_asyncDispatchToMatterQueue_errorHandler_(v7, v10, (uint64_t)v11, &unk_26F944990);
}

void sub_24479CE58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24479CE7C(uint64_t a1)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  sub_244D6A434("/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTROTAProviderDelegateBridge.mm", 757);
  uint64_t result = sub_24479C380(*(void *)(*(void *)(a1 + 48) + 8) + 48, *(void *)(*(void *)(a1 + 56) + 8) + 48, (uint64_t)"ApplyUpdateRequest", *(void **)(a1 + 32), *(void **)(a1 + 40));
  if (result)
  {
    uint64_t v3 = result;
    char v4 = sub_244CC8484(9u, "Controller");
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      objc_msgSend_description(*(void **)(a1 + 32), v5, v6);
      id v7 = objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 136315138;
      *(void *)((char *)&buf + 4) = objc_msgSend_UTF8String(v7, v8, v9);
      _os_log_impl(&dword_2446BD000, v4, OS_LOG_TYPE_INFO, "ApplyUpdateRequest: application responded with: %s", (uint8_t *)&buf, 0xCu);
    }
    if (sub_244CC4E58(3u))
    {
      objc_msgSend_description(*(void **)(a1 + 32), v10, v11);
      id v12 = objc_claimAutoreleasedReturnValue();
      objc_msgSend_UTF8String(v12, v13, v14);
      sub_244CC4DE0(9u, 3);
    }
    v16[0] = 0;
    int v17 = 0;
    sub_24479D080(*(void **)(a1 + 32), (uint64_t)v16);
    uint64_t v15 = *(void *)(*(void *)(a1 + 56) + 8) + 48;
    *(void *)&long long buf = &unk_26F944B50;
    *((void *)&buf + 1) = v16;
    (*(void (**)(uint64_t, uint64_t, uint64_t, long long *))(*(void *)v3 + 64))(v3, v15, 3, &buf);
    return sub_244DD57B0(*(void *)(*(void *)(a1 + 48) + 8) + 48);
  }
  return result;
}

void sub_24479D050(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24479D080(void *a1, uint64_t a2)
{
  id v13 = a1;
  id v5 = objc_msgSend_action(v13, v3, v4);
  *(unsigned char *)a2 = objc_msgSend_intValue(v5, v6, v7);

  uint64_t v10 = objc_msgSend_delayedActionTime(v13, v8, v9);
  *(_DWORD *)(a2 + 4) = objc_msgSend_unsignedIntValue(v10, v11, v12);
}

void sub_24479D0F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24479D120(uint64_t a1, void *a2)
{
  id v9 = a2;
  uint64_t v4 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v3, *(void *)a1, *(void *)(a1 + 8));
  objc_msgSend_setUpdateToken_(v9, v5, (uint64_t)v4);

  uint64_t v7 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v6, *(unsigned int *)(a1 + 16));
  objc_msgSend_setNewVersion_(v9, v8, (uint64_t)v7);
}

void sub_24479D1B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24479D1D8(uint64_t a1)
{
  char v2 = objc_opt_respondsToSelector();
  uint64_t v3 = *(void **)(a1 + 32);
  objc_msgSend_numberWithUnsignedLongLong_(NSNumber, v4, *(void *)(a1 + 64));
  id v9 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v7 = *(void *)(a1 + 48);
  if (v2)
  {
    objc_msgSend_handleApplyUpdateRequestForNodeID_controller_params_completion_(v3, v5, (uint64_t)v9, *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56));
  }
  else
  {
    v10[0] = MEMORY[0x263EF8330];
    v10[1] = 3221225472;
    v10[2] = sub_24479D328;
    v10[3] = &unk_265194BB8;
    id v11 = *(id *)(a1 + 56);
    objc_msgSend_handleApplyUpdateRequestForNodeID_controller_params_completionHandler_(v3, v8, (uint64_t)v9, v6, v7, v10);
  }
}

void sub_24479D304(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24479D328(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_24479D338(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_244D6A434("/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTROTAProviderDelegateBridge.mm", 802);
  id v36 = 0;
  uint64_t v37 = 0;
  int v7 = sub_24479B2BC(a2, a3, &v37, &v36);
  id v8 = v36;
  if (v7)
  {
    v34[0] = 0;
    v34[1] = v34;
    v34[2] = 0x4812000000;
    v34[3] = sub_24479B894;
    void v34[4] = sub_24479B8A0;
    v34[5] = "";
    sub_244DD5804(v35, a2);
    v31[0] = 0;
    v31[1] = v31;
    v31[2] = 0x4012000000;
    v31[3] = sub_24479B8A8;
    v31[4] = nullsub_19;
    v31[5] = "";
    __int16 v32 = *(_WORD *)a3;
    uint64_t v33 = *(void *)(a3 + 4);
    v27[0] = MEMORY[0x263EF8330];
    v27[1] = 3221225472;
    void v27[2] = sub_24479D640;
    v27[3] = &unk_265194C08;
    id v9 = v8;
    id v28 = v9;
    uint64_t v29 = v34;
    uint64_t v30 = v31;
    uint64_t v10 = (void *)MEMORY[0x2456969D0](v27);
    id v11 = objc_alloc_init(MTROTASoftwareUpdateProviderClusterNotifyUpdateAppliedParams);
    sub_24479DA98(a4, v11);
    uint64_t v14 = objc_msgSend_otaProviderDelegate(v9, v12, v13);
    int v17 = objc_msgSend_otaProviderDelegateQueue(v9, v15, v16);
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = sub_24479DB50;
    block[3] = &unk_265194B40;
    id v22 = v14;
    uint64_t v26 = v37;
    id v23 = v9;
    uint64_t v24 = v11;
    id v25 = v10;
    id v18 = v10;
    uint64_t v19 = v11;
    id v20 = v14;
    dispatch_async(v17, block);

    _Block_object_dispose(v31, 8);
    _Block_object_dispose(v34, 8);
    sub_24479E130(v35);
  }
}

void sub_24479D5DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,char a26)
{
  __int16 v32 = v28;

  _Block_object_dispose(&a26, 8);
  _Block_object_dispose((const void *)(v31 - 168), 8);
  sub_24479E130(v27);

  _Unwind_Resume(a1);
}

void sub_24479D640(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = *(void **)(a1 + 32);
  v7[0] = MEMORY[0x263EF8330];
  v7[1] = 3221225472;
  v7[2] = sub_24479D700;
  void v7[3] = &unk_265194BE0;
  long long v9 = *(_OWORD *)(a1 + 40);
  id v8 = v3;
  id v5 = v3;
  objc_msgSend_asyncDispatchToMatterQueue_errorHandler_(v4, v6, (uint64_t)v7, &unk_26F9449B0);
}

void sub_24479D6E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24479D700(uint64_t a1)
{
  sub_244D6A434("/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTROTAProviderDelegateBridge.mm", 817);
  uint64_t result = sub_24479D7AC(*(void *)(*(void *)(a1 + 40) + 8) + 48, *(void *)(*(void *)(a1 + 48) + 8) + 48, (uint64_t)"NotifyUpdateApplied", *(void **)(a1 + 32));
  if (result)
  {
    uint64_t v3 = *(void *)(*(void *)(a1 + 48) + 8) + 48;
    __int16 v4 = 0;
    (*(void (**)(uint64_t, uint64_t, __int16 *, void))(*(void *)result + 24))(result, v3, &v4, 0);
    return sub_244DD57B0(*(void *)(*(void *)(a1 + 40) + 8) + 48);
  }
  return result;
}

uint64_t sub_24479D7AC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v31 = *MEMORY[0x263EF8340];
  id v7 = a4;
  uint64_t v10 = sub_244DD577C(a1);
  if (!v10)
  {
    id v21 = sub_244CC8484(9u, "Controller");
    if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 136315138;
      *(void *)&uint8_t buf[4] = a3;
      _os_log_impl(&dword_2446BD000, v21, OS_LOG_TYPE_ERROR, "%s: no CommandHandler to send response", buf, 0xCu);
    }

    if (sub_244CC4E58(1u)) {
      sub_244CC4DE0(9u, 1);
    }
    goto LABEL_12;
  }
  if (v7)
  {
    id v11 = objc_msgSend_description(v7, v8, v9);
    long long v25 = 0uLL;
    uint64_t v26 = 0;
    sub_244B27864(v7, (uint64_t)&v25);
    uint64_t v12 = sub_244CC8484(9u, "Controller");
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
    {
      id v13 = v11;
      uint64_t v16 = objc_msgSend_UTF8String(v13, v14, v15);
      long long v27 = v25;
      uint64_t v28 = v26;
      int v17 = sub_244CB7B34((const char **)&v27, 1);
      *(_DWORD *)long long buf = 136315650;
      *(void *)&uint8_t buf[4] = a3;
      *(_WORD *)&buf[12] = 2080;
      *(void *)&buf[14] = v16;
      *(_WORD *)&unsigned char buf[22] = 2080;
      uint64_t v30 = v17;
      _os_log_impl(&dword_2446BD000, v12, OS_LOG_TYPE_ERROR, "%s: application returned error: '%s', sending error: '%s'", buf, 0x20u);
    }

    if (sub_244CC4E58(1u))
    {
      id v18 = v11;
      objc_msgSend_UTF8String(v18, v19, v20);
      *(_OWORD *)long long buf = v25;
      *(void *)&uint8_t buf[16] = v26;
      sub_244CB7B34((const char **)buf, 1);
      sub_244CC4DE0(9u, 1);
    }
    long long v23 = v25;
    uint64_t v24 = v26;
    sub_24479B818((uint64_t)&v27, &v23);
    buf[0] = v27;
    buf[1] = 0;
    (*(void (**)(uint64_t, uint64_t, unsigned char *, void))(*(void *)v10 + 24))(v10, a2, buf, 0);
    sub_244DD57B0(a1);

LABEL_12:
    uint64_t v10 = 0;
  }

  return v10;
}

void sub_24479DA50(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24479DA98(uint64_t a1, void *a2)
{
  id v9 = a2;
  __int16 v4 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v3, *(void *)a1, *(void *)(a1 + 8));
  objc_msgSend_setUpdateToken_(v9, v5, (uint64_t)v4);

  id v7 = objc_msgSend_numberWithUnsignedLong_(NSNumber, v6, *(unsigned int *)(a1 + 16));
  objc_msgSend_setSoftwareVersion_(v9, v8, (uint64_t)v7);
}

void sub_24479DB2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_24479DB50(void *a1)
{
  char v2 = objc_opt_respondsToSelector();
  uint64_t v3 = (void *)a1[4];
  objc_msgSend_numberWithUnsignedLongLong_(NSNumber, v4, a1[8]);
  id v5 = (const char *)objc_claimAutoreleasedReturnValue();
  uint64_t v6 = a1[5];
  uint64_t v7 = a1[6];
  uint64_t v8 = a1[7];
  id v9 = (char *)v5;
  if (v2) {
    objc_msgSend_handleNotifyUpdateAppliedForNodeID_controller_params_completion_(v3, v5, (uint64_t)v5, v6, v7, v8);
  }
  else {
    objc_msgSend_handleNotifyUpdateAppliedForNodeID_controller_params_completionHandler_(v3, v5, (uint64_t)v5, v6, v7, v8);
  }
}

void sub_24479DBF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

unsigned char *sub_24479DC08(unsigned char *a1)
{
  if (!*a1) {
    sub_244E1EE60();
  }
  return a1 + 8;
}

unsigned char *sub_24479DC2C(unsigned char *a1)
{
  if (!*a1) {
    sub_244E1EE60();
  }
  return a1 + 1;
}

void sub_24479DC50(uint64_t a1)
{
  BOOL v1 = *(void **)(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = *(void *)(a1 + 48);
  long long v6 = *(_OWORD *)(a1 + 56);
  uint64_t v7 = *(void *)(a1 + 72);
  __int16 v4 = sub_244B26908((uint64_t)MTRError, &v6);
  objc_msgSend_handleBDXTransferSessionEndForNodeID_controller_error_(v1, v5, v2, v3, v4);
}

void sub_24479DCC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24479DCD8(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    int v3 = 50;
    __int16 v4 = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTROTAProviderDelegateBridge.mm";
    int v5 = 183;
    return sub_24479A618(a2, &v3);
  }
  return result;
}

unsigned char *sub_24479DD24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v4 = *(unsigned __int8 *)(a1 + 24);
  uint64_t result = (unsigned char *)(a1 + 24);
  if (v4)
  {
    uint64_t v5 = *(void *)sub_2446F7170(result);
    *(unsigned char *)a2 = 1;
    *(void *)(a2 + 8) = v5;
    long long v6 = *(uint64_t (**)(void))(*(void *)v5 + 24);
    return (unsigned char *)v6();
  }
  else
  {
    *(unsigned char *)a2 = 0;
  }
  return result;
}

uint64_t sub_24479DDA0(uint64_t a1)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v2 = sub_244CC8484(5u, "ExchangeManager");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
  {
    int v3 = *(unsigned __int16 *)(a1 + 112);
    if (sub_244D64530(a1)) {
      int v4 = 105;
    }
    else {
      int v4 = 114;
    }
    uint64_t v5 = *(void **)(a1 + 40);
    if (v5) {
      long long v6 = (const char *)(*(void *)(*(void *)(*v5 - 8) + 8) & 0x7FFFFFFFFFFFFFFFLL);
    }
    else {
      long long v6 = "null";
    }
    *(_DWORD *)long long buf = 67109634;
    int v9 = v3;
    __int16 v10 = 1024;
    int v11 = v4;
    __int16 v12 = 2080;
    id v13 = v6;
    _os_log_impl(&dword_2446BD000, v2, OS_LOG_TYPE_ERROR, "ExchangeContext: %u%c delegate=%s", buf, 0x18u);
  }

  uint64_t result = sub_244CC4E58(1u);
  if (result)
  {
    sub_244D64530(a1);
    return sub_244CC4DE0(5u, 1);
  }
  return result;
}

void sub_24479DF30(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24479DF48(uint64_t a1)
{
  if (*(unsigned char *)a1) {
    (*(void (**)(void))(**(void **)(a1 + 8) + 32))(*(void *)(a1 + 8));
  }
  return a1;
}

void *sub_24479DFA0(void *a1, uint64_t a2)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  sub_244DD5720((uint64_t)a1, *(void *)(a2 + 16));
  sub_244DD57B0(a2);
  return a1;
}

void sub_24479DFE0(_Unwind_Exception *a1)
{
  sub_24479DFF4(v1);
  _Unwind_Resume(a1);
}

void *sub_24479DFF4(void *result)
{
  uint64_t v8 = *MEMORY[0x263EF8340];
  if (*result && result[1])
  {
    BOOL v1 = sub_244CC8484(0x1Bu, "Support");
    if (os_log_type_enabled(v1, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 136315650;
      int v3 = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/lib/support/IntrusiveList.h";
      __int16 v4 = 1024;
      int v5 = 88;
      __int16 v6 = 2080;
      uint64_t v7 = "!IsInList()";
      _os_log_impl(&dword_2446BD000, v1, OS_LOG_TYPE_ERROR, "VerifyOrDie failure at %s:%d: %s", buf, 0x1Cu);
    }

    if (sub_244CC4E58(1u)) {
      sub_244CC4DE0(0x1Bu, 1);
    }
    abort();
  }
  return result;
}

void sub_24479E124(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_2446D1FF0(a1);
}

void *sub_24479E130(void *a1)
{
  sub_244DD57B0((uint64_t)a1);

  return sub_24479DFF4(a1);
}

void sub_24479E16C(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v41 = *MEMORY[0x263EF8340];
  sub_244D6A434("/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTROTAProviderDelegateBridge.mm", 439);
  if (*(unsigned char *)(a1 + 276))
  {
    if (*sub_24479DC2C((unsigned char *)(a1 + 278)) != a2
      || *(void *)sub_24479DC08((unsigned char *)(a1 + 280)) != a3)
    {
      *(_DWORD *)a4 = 219;
      *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/MTROTAProviderDelegateBridge.mm";
      *(_DWORD *)(a4 + 16) = 443;
      return;
    }
    LODWORD(v31) = 116;
    *((void *)&v31 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/MTROTAProviderDelegateBridge.mm";
    int v32 = 446;
    sub_24479A618(a1, &v31);
  }
  objc_msgSend_sharedInstance(MTRDeviceControllerFactory, v8, v9);
  __int16 v10 = (unsigned __int8 *)objc_claimAutoreleasedReturnValue();
  int v11 = sub_2446D67B8(v10, a2);

  if (v11)
  {
    uint64_t v14 = objc_msgSend_otaProviderDelegate(v11, v12, v13);
    uint64_t v15 = *(void **)(a1 + 296);
    *(void *)(a1 + 296) = v14;

    uint64_t v18 = objc_msgSend_otaProviderDelegateQueue(v11, v16, v17);
    uint64_t v19 = *(void **)(a1 + 304);
    *(void *)(a1 + 304) = v18;

    if (*(void *)(a1 + 296))
    {
      if (*(void *)(a1 + 304))
      {
        memset(v30, 0, sizeof(v30));
        (*(void (**)(unsigned char *__return_ptr))(**(void **)(a1 + 264) + 40))(v30);
        int v20 = *(_DWORD *)v30;
        long long v39 = *(_OWORD *)&v30[4];
        int v40 = *(_DWORD *)&v30[20];
        if (*(_DWORD *)v30)
        {
          id v21 = sub_244CC8484(0, "NotSpecified");
          if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
          {
            int v27 = v20;
            long long v28 = v39;
            int v29 = v40;
            id v22 = sub_244CB7B34((const char **)&v27, 1);
            *(_DWORD *)long long buf = 136315650;
            int v34 = v22;
            __int16 v35 = 2080;
            id v36 = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTROTAPr"
                  "oviderDelegateBridge.mm";
            __int16 v37 = 1024;
            int v38 = 461;
            _os_log_impl(&dword_2446BD000, v21, OS_LOG_TYPE_ERROR, "%s at %s:%d", buf, 0x1Cu);
          }

          if (sub_244CC4E58(1u))
          {
            int v24 = v20;
            long long v25 = v39;
            int v26 = v40;
            sub_244CB7B34((const char **)&v24, 1);
            sub_244CC4DE0(0, 1);
          }
        }
        *(_OWORD *)a4 = *(_OWORD *)v30;
        *(void *)(a4 + 16) = *(void *)&v30[16];
        if (*(_DWORD *)a4) {
          goto LABEL_20;
        }
        *(unsigned char *)(a1 + 278) = 1;
        *(unsigned char *)(a1 + 279) = a2;
        *(unsigned char *)(a1 + 280) = 1;
        *(void *)(a1 + 288) = a3;
        *(unsigned char *)(a1 + 276) = 1;
        *(_DWORD *)a4 = 0;
        *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/MTROTAProviderDelegateBridge.mm";
        int v23 = 470;
      }
      else
      {
        *(_DWORD *)a4 = 3;
        *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/MTROTAProviderDelegateBridge.mm";
        int v23 = 457;
      }
    }
    else
    {
      *(_DWORD *)a4 = 3;
      *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/MTROTAProviderDelegateBridge.mm";
      int v23 = 456;
    }
  }
  else
  {
    *(_DWORD *)a4 = 3;
    *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "MTROTAProviderDelegateBridge.mm";
    int v23 = 450;
  }
  *(_DWORD *)(a4 + 16) = v23;
LABEL_20:
}

void sub_24479E4A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24479E4DC(uint64_t a1)
{
  *(void *)a1 = &unk_26F959280;
  *(void *)(a1 + 8) = &unk_26F9592D0;
  sub_244DDCF1C(a1 + 16);
  *(void *)(a1 + 256) = 0;
  *(void *)(a1 + 264) = 0;
  *(_DWORD *)(a1 + 272) = 500;
  *(void *)a1 = &unk_26F944A08;
  *(void *)(a1 + 8) = &unk_26F944A58;
  *(_WORD *)(a1 + 276) = 0;
  *(unsigned char *)(a1 + 278) = 0;
  *(unsigned char *)(a1 + 280) = 0;
  *(_OWORD *)(a1 + 296) = 0u;
  *(_OWORD *)(a1 + 312) = 0u;
  return a1;
}

void *sub_24479E5A0(uint64_t a1)
{
  *(void *)a1 = &unk_26F944A08;
  *(void *)(a1 + 8) = &unk_26F944A58;

  return sub_244DDFB2C((void *)a1);
}

void sub_24479E620(uint64_t a1)
{
  *(void *)a1 = &unk_26F944A08;
  *(void *)(a1 + 8) = &unk_26F944A58;

  sub_244DDFB2C((void *)a1);

  JUMPOUT(0x245695FA0);
}

uint64_t sub_24479E6BC@<X0>(uint64_t result@<X0>, void *a2@<X2>, uint64_t a3@<X8>)
{
  *a2 = result;
  *(_DWORD *)a3 = 0;
  *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/protocols/bdx/TransferFacilitator.h";
  *(_DWORD *)(a3 + 16) = 62;
  return result;
}

double sub_24479E6DC(uint64_t a1, unsigned __int16 *a2)
{
  uint64_t v33 = *MEMORY[0x263EF8340];
  if (*(void *)(a1 + 296))
  {
    switch(*a2)
    {
      case 0u:
      case 7u:
        return result;
      case 1u:
        sub_24479F4B8(a1, (uint64_t)a2, (uint64_t)buf);
        goto LABEL_6;
      case 2u:
        sub_24479ECEC(a1, (uint64_t)buf);
        double result = *(double *)v27;
        long long v31 = *(_OWORD *)v27;
        int v4 = *(_DWORD *)buf;
        int v32 = *(_DWORD *)&v27[16];
        if (!*(_DWORD *)buf) {
          return result;
        }
        long long v29 = 0uLL;
        uint64_t v30 = 0;
        int v23 = *(_DWORD *)buf;
        long long v24 = v31;
        int v25 = v32;
        __int16 v8 = sub_244DDFAF0(&v23);
        sub_244DDE468(a1 + 16, v8, (uint64_t)&v29);
        if (v29)
        {
          uint64_t v9 = sub_244CC8484(0, "NotSpecified");
          if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
          {
            long long v21 = v29;
            uint64_t v22 = v30;
            __int16 v10 = sub_244CB7B34((const char **)&v21, 1);
            *(_DWORD *)long long buf = 136315650;
            *(void *)int v27 = v10;
            *(_WORD *)&v27[8] = 2080;
            *(void *)&v27[10] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framewo"
                                  "rk/CHIP/MTROTAProviderDelegateBridge.mm";
            *(_WORD *)&v27[18] = 1024;
            int v28 = 405;
            _os_log_impl(&dword_2446BD000, v9, OS_LOG_TYPE_ERROR, "%s at %s:%d", buf, 0x1Cu);
          }

          if (sub_244CC4E58(1u))
          {
            long long v19 = v29;
            uint64_t v20 = v30;
            sub_244CB7B34((const char **)&v19, 1);
            sub_244CC4DE0(0, 1);
          }
        }
        long long v29 = v31;
        LODWORD(v30) = v32;
        goto LABEL_7;
      case 5u:
      case 6u:
        sub_24479F144(a1, (uint64_t)a2, (uint64_t)buf);
        goto LABEL_6;
      case 8u:
      case 0xAu:
      case 0xBu:
        goto LABEL_3;
      case 9u:
        int v11 = sub_244CC8484(0xCu, "BDX");
        if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
        {
          int v12 = a2[8];
          *(_DWORD *)long long buf = 67109120;
          *(_DWORD *)int v27 = v12;
          _os_log_impl(&dword_2446BD000, v11, OS_LOG_TYPE_ERROR, "Got StatusReport %x", buf, 8u);
        }

        if (sub_244CC4E58(1u)) {
          sub_244CC4DE0(0xCu, 1);
        }
LABEL_3:
        sub_24479F078(a1, a2, (uint64_t)buf);
LABEL_6:
        long long v31 = *(_OWORD *)v27;
        int v4 = *(_DWORD *)buf;
        int v32 = *(_DWORD *)&v27[16];
        double result = *(double *)v27;
        long long v29 = *(_OWORD *)v27;
        LODWORD(v30) = *(_DWORD *)&v27[16];
        if (*(_DWORD *)buf)
        {
LABEL_7:
          __int16 v6 = sub_244CC8484(0, "NotSpecified");
          if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
          {
            int v16 = v4;
            long long v17 = v29;
            int v18 = v30;
            uint64_t v7 = sub_244CB7B34((const char **)&v16, 1);
            *(_DWORD *)long long buf = 136315650;
            *(void *)int v27 = v7;
            *(_WORD *)&v27[8] = 2080;
            *(void *)&v27[10] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framewo"
                                  "rk/CHIP/MTROTAProviderDelegateBridge.mm";
            *(_WORD *)&v27[18] = 1024;
            int v28 = 434;
            _os_log_impl(&dword_2446BD000, v6, OS_LOG_TYPE_ERROR, "%s at %s:%d", buf, 0x1Cu);
          }

          if (sub_244CC4E58(1u))
          {
            int v13 = v4;
            long long v14 = v29;
            int v15 = v30;
            sub_244CB7B34((const char **)&v13, 1);
            sub_244CC4DE0(0, 1);
          }
        }
        break;
      default:
        sub_24479F5F0();
    }
  }
  return result;
}

void sub_24479EAC4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *sub_24479EB18(uint64_t a1)
{
  uint64_t v2 = (void *)(a1 - 8);
  *(void *)(a1 - 8) = &unk_26F944A08;
  *(void *)a1 = &unk_26F944A58;

  return sub_244DDFB2C(v2);
}

void sub_24479EB98(uint64_t a1)
{
  uint64_t v2 = (void *)(a1 - 8);
  *(void *)(a1 - 8) = &unk_26F944A08;
  *(void *)a1 = &unk_26F944A58;

  sub_244DDFB2C(v2);

  JUMPOUT(0x245695FA0);
}

uint64_t sub_24479EC2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)a1 + 24))(a1, a2, a4);
}

uint64_t sub_24479EC54@<X0>(uint64_t result@<X0>, void *a2@<X2>, uint64_t a3@<X8>)
{
  *a2 = result - 8;
  *(_DWORD *)a3 = 0;
  *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/protocols/bdx/TransferFacilitator.h";
  *(_DWORD *)(a3 + 16) = 62;
  return result;
}

uint64_t *sub_24479EC7C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_268EB8498, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_268EB8498))
  {
    qword_268EB8490 = (uint64_t)&unk_26F956348;
    __cxa_guard_release(&qword_268EB8498);
  }
  return &qword_268EB8490;
}

void sub_24479ECEC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_244D6A434("/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTROTAProviderDelegateBridge.mm", 221);
  uint64_t v4 = *(void *)(a1 + 264);
  if (v4) {
    (*(void (**)(uint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t))(*(void *)v4 + 72))(v4, sub_24479DCD8, a1);
  }
  if (!*(unsigned char *)(a1 + 278))
  {
    *(_DWORD *)a2 = 3;
    *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "MTROTAProviderDelegateBridge.mm";
    int v30 = 227;
LABEL_12:
    *(_DWORD *)(a2 + 16) = v30;
    return;
  }
  if (!*(unsigned char *)(a1 + 280))
  {
    *(_DWORD *)a2 = 3;
    *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "MTROTAProviderDelegateBridge.mm";
    int v30 = 228;
    goto LABEL_12;
  }
  unint64_t v5 = *(unsigned __int16 *)(a1 + 104);
  if (v5 >= 0x100)
  {
    *(_DWORD *)a2 = 47;
    *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "MTROTAProviderDelegateBridge.mm";
    int v30 = 231;
    goto LABEL_12;
  }
  sub_24479476C(v43, *(void *)(a1 + 96), v5);
  uint64_t v6 = v43[0];
  uint64_t v7 = v43[1];
  id v8 = [NSString alloc];
  int v11 = objc_msgSend_initWithBytes_length_encoding_(v8, v9, v6, v7, 4);
  if (v11)
  {
    int v12 = objc_msgSend_numberWithUnsignedLongLong_(NSNumber, v10, *(void *)(a1 + 32));
    objc_msgSend_sharedInstance(MTRDeviceControllerFactory, v13, v14);
    int v15 = (unsigned __int8 *)objc_claimAutoreleasedReturnValue();
    int v16 = sub_24479DC2C((unsigned char *)(a1 + 278));
    long long v17 = sub_2446D67B8(v15, *v16);

    if (v17)
    {
      long long v31 = v12;
      uint64_t v18 = *(void *)(a1 + 320);
      v39[0] = MEMORY[0x263EF8330];
      v39[1] = 3221225472;
      v39[2] = sub_24479F678;
      v39[3] = &unk_265194C80;
      uint64_t v41 = a1;
      id v19 = v17;
      id v40 = v19;
      uint64_t v42 = v18;
      uint64_t v20 = (void *)MEMORY[0x2456969D0](v39);
      *(unsigned char *)(a1 + 277) = 1;
      long long v21 = NSNumber;
      uint64_t v22 = (uint64_t *)sub_24479DC08((unsigned char *)(a1 + 280));
      long long v24 = objc_msgSend_numberWithUnsignedLongLong_(v21, v23, *v22);
      id v25 = *(id *)(a1 + 296);
      int v26 = *(NSObject **)(a1 + 304);
      block[0] = MEMORY[0x263EF8330];
      block[1] = 3221225472;
      block[2] = sub_24479FB50;
      block[3] = &unk_265194CA8;
      id v33 = v25;
      id v34 = v24;
      id v35 = v19;
      id v36 = v11;
      int v12 = v31;
      id v37 = v31;
      id v38 = v20;
      id v27 = v20;
      id v28 = v24;
      id v29 = v25;
      dispatch_async(v26, block);
      *(_DWORD *)a2 = 0;
      *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/MTROTAProviderDelegateBridge.mm";
      *(_DWORD *)(a2 + 16) = 298;
    }
    else
    {
      *(_DWORD *)a2 = 3;
      *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/MTROTAProviderDelegateBridge.mm";
      *(_DWORD *)(a2 + 16) = 242;
    }
  }
  else
  {
    *(_DWORD *)a2 = 3;
    *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "MTROTAProviderDelegateBridge.mm";
    *(_DWORD *)(a2 + 16) = 236;
  }
}

void sub_24479F02C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24479F078(uint64_t a1@<X0>, unsigned __int16 *a2@<X1>, uint64_t a3@<X8>)
{
  sub_244D6A434("/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTROTAProviderDelegateBridge.mm", 303);
  if (!*(unsigned char *)(a1 + 278))
  {
    int v13 = 305;
LABEL_18:
    int v12 = 3;
    goto LABEL_19;
  }
  if (!*(unsigned char *)(a1 + 280))
  {
    int v13 = 306;
    goto LABEL_18;
  }
  int v6 = *a2;
  if (v6 == 11) {
    int v7 = 50;
  }
  else {
    int v7 = 172;
  }
  if (v6 == 11) {
    int v8 = 310;
  }
  else {
    int v8 = 312;
  }
  BOOL v9 = v6 == 8;
  if (v6 == 8) {
    unsigned int v10 = 0;
  }
  else {
    unsigned int v10 = v7;
  }
  *(void *)&long long v14 = v10;
  *((void *)&v14 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "MTROTAProviderDelegateBridge.mm";
  if (v9) {
    int v11 = 308;
  }
  else {
    int v11 = v8;
  }
  int v15 = v11;
  int v16 = 0;
  sub_24479A618(a1, &v14);
  int v12 = 0;
  int v13 = 316;
LABEL_19:
  *(_DWORD *)a3 = v12;
  *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MT"
                        "ROTAProviderDelegateBridge.mm";
  *(_DWORD *)(a3 + 16) = v13;
}

void sub_24479F144(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_244D6A434("/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTROTAProviderDelegateBridge.mm", 321);
  if (!*(unsigned char *)(a1 + 278))
  {
    *(_DWORD *)a3 = 3;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "MTROTAProviderDelegateBridge.mm";
    int v13 = 323;
LABEL_7:
    *(_DWORD *)(a3 + 16) = v13;
    return;
  }
  if (!*(unsigned char *)(a1 + 280))
  {
    *(_DWORD *)a3 = 3;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "MTROTAProviderDelegateBridge.mm";
    int v13 = 324;
    goto LABEL_7;
  }
  int v7 = objc_msgSend_numberWithUnsignedShort_(NSNumber, v6, *(unsigned __int16 *)(a1 + 48));
  int v11 = objc_msgSend_numberWithUnsignedInt_(NSNumber, v8, *(unsigned int *)(a1 + 220));
  if (*(_WORD *)a2 == 6)
  {
    int v12 = objc_msgSend_numberWithUnsignedLongLong_(NSNumber, v9, *(void *)(a2 + 16));
  }
  else
  {
    int v12 = &unk_26F9C8590;
  }
  objc_msgSend_sharedInstance(MTRDeviceControllerFactory, v9, v10);
  long long v14 = (unsigned __int8 *)objc_claimAutoreleasedReturnValue();
  int v15 = sub_24479DC2C((unsigned char *)(a1 + 278));
  int v16 = sub_2446D67B8(v14, *v15);

  if (v16)
  {
    id v29 = v11;
    int v30 = v7;
    uint64_t v17 = *(void *)(a1 + 320);
    v39[0] = MEMORY[0x263EF8330];
    v39[1] = 3221225472;
    v39[2] = sub_24479FBC0;
    v39[3] = &unk_265194CF8;
    uint64_t v41 = a1;
    id v18 = v16;
    id v40 = v18;
    uint64_t v42 = v17;
    id v19 = (void *)MEMORY[0x2456969D0](v39);
    uint64_t v20 = NSNumber;
    long long v21 = (uint64_t *)sub_24479DC08((unsigned char *)(a1 + 280));
    int v23 = objc_msgSend_numberWithUnsignedLongLong_(v20, v22, *v21);
    id v24 = *(id *)(a1 + 296);
    id v25 = *(NSObject **)(a1 + 304);
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = sub_2447A009C;
    block[3] = &unk_265194D20;
    id v32 = v24;
    id v33 = v23;
    id v34 = v18;
    int v7 = v30;
    id v35 = v30;
    id v36 = v29;
    id v37 = v12;
    id v38 = v19;
    id v28 = v19;
    id v26 = v23;
    id v27 = v24;
    dispatch_async(v25, block);
    *(_DWORD *)a3 = 0;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "MTROTAProviderDelegateBridge.mm";
    *(_DWORD *)(a3 + 16) = 393;

    int v11 = v29;
  }
  else
  {
    *(_DWORD *)a3 = 3;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "MTROTAProviderDelegateBridge.mm";
    *(_DWORD *)(a3 + 16) = 335;
  }
}

void sub_24479F43C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_24479F4B8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_244D6A434("/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTROTAProviderDelegateBridge.mm", 188);
  uint64_t v6 = *(void *)(a1 + 256);
  if (!v6)
  {
    *(_DWORD *)a3 = 3;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "MTROTAProviderDelegateBridge.mm";
    int v9 = 190;
LABEL_11:
    *(_DWORD *)(a3 + 16) = v9;
    return;
  }
  if (!*(void *)(a1 + 296))
  {
    *(_DWORD *)a3 = 3;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "MTROTAProviderDelegateBridge.mm";
    int v9 = 191;
    goto LABEL_11;
  }
  __int16 v15 = 0;
  int v7 = *(unsigned __int8 *)(a2 + 20);
  if (*(_WORD *)(a2 + 16) || *(_WORD *)(a2 + 18) || v7 != 64) {
    __int16 v15 = 1;
  }
  *(void *)a3 = 0;
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  sub_244D645BC(v6, *(_DWORD *)(a2 + 16), v7, (uint64_t *)(a2 + 8), &v15, a3);
  if (*(_DWORD *)a3)
  {
    sub_244D64B58(*(void *)(a1 + 256));
    *(void *)(a1 + 256) = 0;
    long long v13 = *(_OWORD *)a3;
    uint64_t v14 = *(void *)(a3 + 16);
    int v8 = &v13;
LABEL_16:
    sub_24479A618(a1, v8);
    return;
  }
  if (!*(_WORD *)(a2 + 16) && !*(_WORD *)(a2 + 18) && *(unsigned char *)(a2 + 20) == 64)
  {
    *(void *)(a1 + 256) = 0;
    int v10 = 172;
    int v11 = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTROTAProviderDelegateBridge.mm";
    int v12 = 214;
    int v8 = (long long *)&v10;
    goto LABEL_16;
  }
}

void sub_24479F5F0()
{
  uint64_t v0 = sub_244CC8484(0, "NotSpecified");
  if (os_log_type_enabled(v0, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)BOOL v1 = 0;
    _os_log_impl(&dword_2446BD000, v0, OS_LOG_TYPE_ERROR, "chipDie chipDie chipDie", v1, 2u);
  }

  if (sub_244CC4E58(1u)) {
    sub_244CC4DE0(0, 1);
  }
  sub_2447A0110();
}

void sub_24479F678(void *a1, void *a2)
{
  id v3 = a2;
  unint64_t v5 = (void *)a1[4];
  uint64_t v4 = a1[5];
  v9[0] = MEMORY[0x263EF8330];
  v9[1] = 3221225472;
  v9[2] = sub_24479F738;
  v9[3] = &unk_265194C58;
  uint64_t v6 = a1[6];
  uint64_t v11 = v4;
  uint64_t v12 = v6;
  id v10 = v3;
  id v7 = v3;
  objc_msgSend_asyncDispatchToMatterQueue_errorHandler_(v5, v8, (uint64_t)v9, &unk_26F944AB0);
}

void sub_24479F720(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_24479F738(void *a1)
{
  uint64_t v36 = *MEMORY[0x263EF8340];
  uint64_t v2 = a1[5];
  sub_244D6A434("/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTROTAProviderDelegateBridge.mm", 249);
  if (*(unsigned char *)(v2 + 276) && *(void *)(v2 + 320) == a1[6])
  {
    id v3 = (void *)a1[4];
    if (v3)
    {
      memset(v28, 0, sizeof(v28));
      sub_244B27864(v3, (uint64_t)v28);
      long long v34 = *(_OWORD *)&v28[4];
      int v4 = *(_DWORD *)v28;
      LODWORD(v35) = *(_DWORD *)&v28[20];
      if (*(_DWORD *)v28)
      {
        unint64_t v5 = sub_244CC8484(0, "NotSpecified");
        if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
        {
          long long v26 = v34;
          int v25 = v4;
          int v27 = v35;
          uint64_t v6 = sub_244CB7B34((const char **)&v25, 1);
          *(_DWORD *)long long buf = 136315650;
          *(void *)long long v31 = v6;
          *(_WORD *)&uint8_t v31[8] = 2080;
          *(void *)&v31[10] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework"
                                "/CHIP/MTROTAProviderDelegateBridge.mm";
          *(_WORD *)&v31[18] = 1024;
          LODWORD(v32) = 258;
          _os_log_impl(&dword_2446BD000, v5, OS_LOG_TYPE_ERROR, "%s at %s:%d", buf, 0x1Cu);
        }

        if (sub_244CC4E58(1u))
        {
          long long v23 = v34;
          int v22 = v4;
          int v24 = v35;
          sub_244CB7B34((const char **)&v22, 1);
          sub_244CC4DE0(0, 1);
        }
      }
      long long v34 = 0uLL;
      uint64_t v35 = 0;
      long long v20 = *(_OWORD *)v28;
      uint64_t v21 = *(void *)&v28[16];
      __int16 v7 = sub_244DDFAF0((int *)&v20);
      sub_244DDE468(v2 + 16, v7, (uint64_t)&v34);
      if (v34)
      {
        int v8 = sub_244CC8484(0, "NotSpecified");
        if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
        {
          long long v18 = v34;
          uint64_t v19 = v35;
          int v9 = sub_244CB7B34((const char **)&v18, 1);
          *(_DWORD *)long long buf = 136315650;
          *(void *)long long v31 = v9;
          *(_WORD *)&uint8_t v31[8] = 2080;
          *(void *)&v31[10] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework"
                                "/CHIP/MTROTAProviderDelegateBridge.mm";
          *(_WORD *)&v31[18] = 1024;
          LODWORD(v32) = 259;
          _os_log_impl(&dword_2446BD000, v8, OS_LOG_TYPE_ERROR, "%s at %s:%d", buf, 0x1Cu);
        }

        if (sub_244CC4E58(1u))
        {
          long long v16 = v34;
          uint64_t v17 = v35;
          sub_244CB7B34((const char **)&v16, 1);
          sub_244CC4DE0(0, 1);
        }
      }
    }
    else
    {
      uint64_t v32 = 0;
      uint64_t v33 = 0;
      buf[0] = 32;
      *(_WORD *)&buf[2] = *(_WORD *)(v2 + 48);
      *(_OWORD *)&v31[4] = *(_OWORD *)(v2 + 32);
      long long v34 = 0uLL;
      uint64_t v35 = 0;
      sub_244DDD6EC(v2 + 16, (char *)buf, (uint64_t)&v34);
      if (v34)
      {
        id v10 = sub_244CC8484(0, "NotSpecified");
        if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        {
          long long v14 = v34;
          uint64_t v15 = v35;
          uint64_t v11 = sub_244CB7B34((const char **)&v14, 1);
          *(_DWORD *)id v28 = 136315650;
          *(void *)&void v28[4] = v11;
          *(_WORD *)&v28[12] = 2080;
          *(void *)&v28[14] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework"
                                "/CHIP/MTROTAProviderDelegateBridge.mm";
          *(_WORD *)&v28[22] = 1024;
          int v29 = 272;
          _os_log_impl(&dword_2446BD000, v10, OS_LOG_TYPE_ERROR, "%s at %s:%d", v28, 0x1Cu);
        }

        if (sub_244CC4E58(1u))
        {
          long long v12 = v34;
          uint64_t v13 = v35;
          sub_244CB7B34((const char **)&v12, 1);
          sub_244CC4DE0(0, 1);
        }
      }
    }
  }
}

void sub_24479FB1C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_24479FB50(uint64_t a1)
{
  char v2 = objc_opt_respondsToSelector();
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  if (v2)
  {
    return MEMORY[0x270F9A6D0](v3, sel_handleBDXTransferSessionBeginForNodeID_controller_fileDesignator_offset_completion_, v4);
  }
  else
  {
    return MEMORY[0x270F9A6D0](v3, sel_handleBDXTransferSessionBeginForNodeID_controller_fileDesignator_offset_completionHandler_, v4);
  }
}

void sub_24479FBC0(void *a1, void *a2, char a3)
{
  id v5 = a2;
  __int16 v7 = (void *)a1[4];
  uint64_t v6 = a1[5];
  v11[0] = MEMORY[0x263EF8330];
  v11[1] = 3221225472;
  v11[2] = sub_24479FC90;
  v11[3] = &unk_265194CD0;
  uint64_t v8 = a1[6];
  uint64_t v13 = v6;
  uint64_t v14 = v8;
  id v12 = v5;
  char v15 = a3;
  id v9 = v5;
  objc_msgSend_asyncDispatchToMatterQueue_errorHandler_(v7, v10, (uint64_t)v11, &unk_26F944AD0);
}

void sub_24479FC78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_24479FC90(uint64_t a1)
{
  uint64_t v42 = *MEMORY[0x263EF8340];
  uint64_t v2 = *(void *)(a1 + 40);
  sub_244D6A434("/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTROTAProviderDelegateBridge.mm", 342);
  if (*(unsigned char *)(v2 + 276) && *(void *)(v2 + 320) == *(void *)(a1 + 48))
  {
    uint64_t v3 = *(void **)(a1 + 32);
    if (v3)
    {
      HIDWORD(v33) = 0;
      id v4 = v3;
      *(void *)&long long v32 = objc_msgSend_bytes(v4, v5, v6);
      *((void *)&v32 + 1) = objc_msgSend_length(*(void **)(a1 + 32), v7, v8);
      LOBYTE(v33) = *(unsigned char *)(a1 + 56);
      memset(v27, 0, sizeof(v27));
      uint64_t v9 = v2 + 16;
      sub_244DDE048(v2 + 16, (uint64_t *)&v32, (uint64_t)v27);
      int v10 = *(_DWORD *)v27;
      if (*(_DWORD *)v27)
      {
        long long v34 = *(_OWORD *)&v27[4];
        LODWORD(v35) = *(_DWORD *)&v27[20];
        uint64_t v11 = sub_244CC8484(0, "NotSpecified");
        if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
        {
          int v24 = v10;
          long long v25 = v34;
          int v26 = v35;
          id v12 = sub_244CB7B34((const char **)&v24, 1);
          *(_DWORD *)long long buf = 136315650;
          id v37 = v12;
          __int16 v38 = 2080;
          long long v39 = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTROTAProv"
                "iderDelegateBridge.mm";
          __int16 v40 = 1024;
          int v41 = 361;
          _os_log_impl(&dword_2446BD000, v11, OS_LOG_TYPE_ERROR, "%s at %s:%d", buf, 0x1Cu);
        }

        if (sub_244CC4E58(1u))
        {
          int v21 = v10;
          long long v22 = v34;
          int v23 = v35;
          sub_244CB7B34((const char **)&v21, 1);
          sub_244CC4DE0(0, 1);
        }
        long long v34 = 0uLL;
        uint64_t v35 = 0;
        sub_244DDE468(v9, 95, (uint64_t)&v34);
        if (v34)
        {
          uint64_t v13 = sub_244CC8484(0, "NotSpecified");
          if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
          {
            long long v19 = v34;
            uint64_t v20 = v35;
            uint64_t v14 = sub_244CB7B34((const char **)&v19, 1);
            *(_DWORD *)long long buf = 136315650;
            id v37 = v14;
            __int16 v38 = 2080;
            long long v39 = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTROTAPr"
                  "oviderDelegateBridge.mm";
            __int16 v40 = 1024;
            int v41 = 362;
            _os_log_impl(&dword_2446BD000, v13, OS_LOG_TYPE_ERROR, "%s at %s:%d", buf, 0x1Cu);
          }

          if (sub_244CC4E58(1u))
          {
            long long v17 = v34;
            uint64_t v18 = v35;
            sub_244CB7B34((const char **)&v17, 1);
            sub_244CC4DE0(0, 1);
          }
        }
      }
    }
    else
    {
      long long v32 = 0uLL;
      uint64_t v33 = 0;
      sub_244DDE468(v2 + 16, 95, (uint64_t)&v32);
      if (v32)
      {
        char v15 = sub_244CC8484(0, "NotSpecified");
        if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
        {
          long long v30 = v32;
          uint64_t v31 = v33;
          long long v16 = sub_244CB7B34((const char **)&v30, 1);
          *(_DWORD *)long long buf = 136315650;
          id v37 = v16;
          __int16 v38 = 2080;
          long long v39 = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTROTAProv"
                "iderDelegateBridge.mm";
          __int16 v40 = 1024;
          int v41 = 350;
          _os_log_impl(&dword_2446BD000, v15, OS_LOG_TYPE_ERROR, "%s at %s:%d", buf, 0x1Cu);
        }

        if (sub_244CC4E58(1u))
        {
          long long v28 = v32;
          uint64_t v29 = v33;
          sub_244CB7B34((const char **)&v28, 1);
          sub_244CC4DE0(0, 1);
        }
      }
    }
  }
}

void sub_2447A0068(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2447A009C(uint64_t a1)
{
  char v2 = objc_opt_respondsToSelector();
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  if (v2)
  {
    return MEMORY[0x270F9A6D0](v3, sel_handleBDXQueryForNodeID_controller_blockSize_blockIndex_bytesToSkip_completion_, v4);
  }
  else
  {
    return MEMORY[0x270F9A6D0](v3, sel_handleBDXQueryForNodeID_controller_blockSize_blockIndex_bytesToSkip_completionHandler_, v4);
  }
}

void sub_2447A0110()
{
}

void sub_2447A0124()
{
}

double sub_2447A0138@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_2447F9820(*(unsigned char **)(a1 + 8), a2, a3, a4);
}

void sub_2447A0144()
{
}

double sub_2447A0158@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_2447F9E80(*(unsigned char **)(a1 + 8), a2, a3, a4);
}

uint64_t sub_2447A0188()
{
  uint64_t v0 = sub_244CC8484(0x1Du, "Zcl");
  if (os_log_type_enabled(v0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)char v2 = 0;
    _os_log_impl(&dword_2446BD000, v0, OS_LOG_TYPE_DEFAULT, "Using ZAP configuration...", v2, 2u);
  }
  if (sub_244CC4E58(2u)) {
    sub_244CC4DE0(0x1Du, 2);
  }
  sub_2448557A8();
  return sub_244B198E8();
}

void sub_2447A0264(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447A0414(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447A0564(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447A0700(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447A0978(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447A0AEC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447A0C44(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447A0F74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void *sub_2447A0FEC(void *a1, void *a2)
{
  id v3 = a2;
  *a1 = &unk_26F944B90;
  a1[1] = v3;
  return a1;
}

void sub_2447A1030(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  sub_244D6A434("/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTRSessionResumptionStorageBridge.mm", 37);
  id v12 = sub_2446D67B8(*(unsigned __int8 **)(a1 + 8), *(unsigned __int8 *)(a2 + 8));
  if (v12)
  {
    id v20 = v12;
    char v15 = objc_msgSend_controllerDataStore(v12, v13, v14);
    long long v17 = objc_msgSend_numberWithUnsignedLongLong_(NSNumber, v16, *(void *)a2);
    long long v19 = objc_msgSend_findResumptionInfoByNodeID_(v15, v18, (uint64_t)v17);

    if (v19)
    {
      sub_2447A1190(v19, &v21, a3, a4, a5, (void *)a6);
    }
    else
    {
      *(_DWORD *)a6 = 16;
      *(void *)(a6 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/MTRSessionResumptionStorageBridge.mm";
      *(_DWORD *)(a6 + 16) = 46;
    }

    id v12 = v20;
  }
  else
  {
    *(_DWORD *)a6 = 16;
    *(void *)(a6 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "MTRSessionResumptionStorageBridge.mm";
    *(_DWORD *)(a6 + 16) = 41;
  }
}

void sub_2447A1158(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id a9)
{
  _Unwind_Resume(a1);
}

void sub_2447A1190(void *a1@<X0>, uint64_t *a2@<X1>, void *a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  uint64_t v89 = *MEMORY[0x263EF8340];
  id v11 = a1;
  uint64_t v14 = objc_msgSend_resumptionID(v11, v12, v13);
  uint64_t v17 = objc_msgSend_length(v14, v15, v16);

  if (v17 != 16)
  {
    __int16 v38 = sub_244CC8484(0, "NotSpecified");
    if (os_log_type_enabled(v38, OS_LOG_TYPE_ERROR))
    {
      int v41 = objc_msgSend_resumptionID(v11, v39, v40);
      *(_DWORD *)long long buf = 134218240;
      uint64_t v86 = objc_msgSend_length(v41, v42, v43);
      __int16 v87 = 2048;
      uint64_t v88 = 16;
      _os_log_impl(&dword_2446BD000, v38, OS_LOG_TYPE_ERROR, "Unable to return resumption ID: Stored size %llu does not match required size %llu", buf, 0x16u);
    }
    if (!sub_244CC4E58(1u))
    {
      int v37 = 131;
      goto LABEL_18;
    }
    long long v34 = objc_msgSend_resumptionID(v11, v44, v45);
    objc_msgSend_length(v34, v46, v47);
    sub_244CC4DE0(0, 1);
    int v37 = 131;
LABEL_11:

LABEL_18:
    int v84 = 159;
    goto LABEL_19;
  }
  id v20 = objc_msgSend_sharedSecret(v11, v18, v19);
  unint64_t v23 = objc_msgSend_length(v20, v21, v22);

  if (v23 >= 0x21)
  {
    int v26 = sub_244CC8484(0, "NotSpecified");
    if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR))
    {
      uint64_t v29 = objc_msgSend_sharedSecret(v11, v27, v28);
      *(_DWORD *)long long buf = 134218240;
      uint64_t v86 = objc_msgSend_length(v29, v30, v31);
      __int16 v87 = 2048;
      uint64_t v88 = 32;
      _os_log_impl(&dword_2446BD000, v26, OS_LOG_TYPE_ERROR, "Unable to return resumption shared secret: Stored size %llu is larger than allowed size %llu", buf, 0x16u);
    }
    if (!sub_244CC4E58(1u))
    {
      int v37 = 138;
      goto LABEL_18;
    }
    long long v34 = objc_msgSend_sharedSecret(v11, v32, v33);
    objc_msgSend_length(v34, v35, v36);
    sub_244CC4DE0(0, 1);
    int v37 = 138;
    goto LABEL_11;
  }
  id v48 = objc_msgSend_nodeID(v11, v24, v25);
  *a2 = objc_msgSend_unsignedLongLongValue(v48, v49, v50);

  objc_msgSend_resumptionID(v11, v51, v52);
  id v53 = objc_claimAutoreleasedReturnValue();
  int v56 = (const void *)objc_msgSend_bytes(v53, v54, v55);
  long long v59 = objc_msgSend_resumptionID(v11, v57, v58);
  size_t v62 = objc_msgSend_length(v59, v60, v61);
  memcpy(a3, v56, v62);

  uint64_t v65 = objc_msgSend_sharedSecret(v11, v63, v64);
  unint64_t v68 = objc_msgSend_length(v65, v66, v67);
  if (v68 <= 0x20) {
    a4[4] = v68;
  }

  objc_msgSend_sharedSecret(v11, v69, v70);
  id v71 = objc_claimAutoreleasedReturnValue();
  long long v74 = (const void *)objc_msgSend_bytes(v71, v72, v73);
  char v77 = objc_msgSend_sharedSecret(v11, v75, v76);
  size_t v80 = objc_msgSend_length(v77, v78, v79);
  memcpy(a4, v74, v80);

  *a6 = 0;
  a6[1] = 0;
  a6[2] = 0;
  __int16 v83 = objc_msgSend_caseAuthenticatedTags(v11, v81, v82);
  sub_244B2B924(v83, a5, (uint64_t)a6);

  int v84 = *(_DWORD *)a6;
  if (!*(_DWORD *)a6)
  {
    int v37 = 147;
LABEL_19:
    *(_DWORD *)a6 = v84;
    a6[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTRSessionResu"
            "mptionStorageBridge.mm";
    *((_DWORD *)a6 + 4) = v37;
  }
}

void sub_2447A151C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447A15C8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  uint64_t v33 = *MEMORY[0x263EF8340];
  sub_244D6A434("/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTRSessionResumptionStorageBridge.mm", 56);
  id v11 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v10, a2, 16);
  sub_2446D43BC(*(os_unfair_lock_s **)(a1 + 8));
  long long v29 = 0u;
  long long v30 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  id v12 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v16 = objc_msgSend_countByEnumeratingWithState_objects_count_(v12, v13, (uint64_t)&v27, v32, 16);
  if (v16)
  {
    uint64_t v17 = *(void *)v28;
    while (2)
    {
      for (uint64_t i = 0; i != v16; ++i)
      {
        if (*(void *)v28 != v17) {
          objc_enumerationMutation(v12);
        }
        uint64_t v19 = *(void **)(*((void *)&v27 + 1) + 8 * i);
        char v20 = objc_msgSend_fabricIndex(v19, v14, v15);
        if ((v20 - 1) < 0xFEu)
        {
          uint64_t v21 = objc_msgSend_controllerDataStore(v19, v14, v15);
          unint64_t v23 = objc_msgSend_findResumptionInfoByResumptionID_(v21, v22, (uint64_t)v11);

          if (v23)
          {
            uint64_t v26 = 0;
            *a6 = 0;
            a6[1] = 0;
            a6[2] = 0;
            sub_2447A1190(v23, &v26, v31, a4, a5, a6);
            if (!*(_DWORD *)a6)
            {
              *(void *)a3 = v26;
              *(unsigned char *)(a3 + 8) = v20;
              *(_DWORD *)a6 = 0;
              a6[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTRS"
                      "essionResumptionStorageBridge.mm";
              *((_DWORD *)a6 + 4) = 75;
            }

            goto LABEL_14;
          }
        }
      }
      uint64_t v16 = objc_msgSend_countByEnumeratingWithState_objects_count_(v12, v14, (uint64_t)&v27, v32, 16);
      if (v16) {
        continue;
      }
      break;
    }
  }

  *(_DWORD *)a6 = 16;
  a6[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTRSessionResump"
          "tionStorageBridge.mm";
  *((_DWORD *)a6 + 4) = 80;
LABEL_14:
}

void sub_2447A17D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447A1824(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  sub_244D6A434("/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTRSessionResumptionStorageBridge.mm", 86);
  id v12 = sub_2446D67B8(*(unsigned __int8 **)(a1 + 8), *(unsigned __int8 *)(a2 + 8));
  if (v12)
  {
    uint64_t v13 = objc_alloc_init(MTRCASESessionResumptionInfo);
    uint64_t v15 = objc_msgSend_numberWithUnsignedLongLong_(NSNumber, v14, *(void *)a2);
    objc_msgSend_setNodeID_(v13, v16, (uint64_t)v15);

    uint64_t v18 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v17, a3, 16);
    objc_msgSend_setResumptionID_(v13, v19, (uint64_t)v18);

    sub_2446C1098(v29, a4, *(void *)(a4 + 32));
    uint64_t v21 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v20, v29[0], v29[1]);
    objc_msgSend_setSharedSecret_(v13, v22, (uint64_t)v21);

    unint64_t v23 = sub_244B2BCCC(a5);
    objc_msgSend_setCaseAuthenticatedTags_(v13, v24, (uint64_t)v23);

    long long v27 = objc_msgSend_controllerDataStore(v12, v25, v26);
    objc_msgSend_storeResumptionInfo_(v27, v28, (uint64_t)v13);

    *(_DWORD *)a6 = 0;
    *(void *)(a6 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "MTRSessionResumptionStorageBridge.mm";
    *(_DWORD *)(a6 + 16) = 100;
  }
  else
  {
    *(_DWORD *)a6 = 159;
    *(void *)(a6 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "MTRSessionResumptionStorageBridge.mm";
    *(_DWORD *)(a6 + 16) = 90;
  }
}

void sub_2447A19A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2447A19F8@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  sub_244D6A434("/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTRSessionResumptionStorageBridge.mm", 105);
  uint64_t result = sub_2446D65A4(*(unsigned __int8 **)(a1 + 8), a2, 0, 0);
  if (result)
  {
    __int16 v7 = sub_244CC8484(9u, "Controller");
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl(&dword_2446BD000, v7, OS_LOG_TYPE_ERROR, "ResumptionStorage::DeleteAll called for running controller", v8, 2u);
    }

    if (sub_244CC4E58(1u)) {
      sub_244CC4DE0(9u, 1);
    }
    abort();
  }
  *(_DWORD *)a3 = 0;
  *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MT"
                        "RSessionResumptionStorageBridge.mm";
  *(_DWORD *)(a3 + 16) = 120;
  return result;
}

void sub_2447A1AEC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2447A1B00(uint64_t a1)
{
  return a1;
}

void sub_2447A1B2C(uint64_t a1)
{
  JUMPOUT(0x245695FA0);
}

uint64_t sub_2447A1B78(unsigned __int16 *a1)
{
  char v2 = (uint64_t *)sub_244856270(*a1);
  if (v2)
  {
    uint64_t v3 = sub_244856304(v2, *((_DWORD *)a1 + 1), 64, 0);
    if (v3)
    {
      uint64_t v4 = v3;
      id v5 = (uint64_t *)sub_244DD5868();
      uint64_t v6 = sub_244DD5AF4(v5, *a1, *((_DWORD *)a1 + 1));
      if (!v6
        || (uint64_t v14 = 0,
            HIDWORD(v14) = *((_DWORD *)a1 + 2),
            memset(v13, 0, sizeof(v13)),
            (*(void (**)(void *__return_ptr))(*(void *)v6 + 24))(v13),
            LODWORD(v13[0]) == 45))
      {
        uint64_t v8 = *(int **)(v4 + 32);
        if (!v8) {
          return -127;
        }
        int v9 = *v8;
        if (*v8 == -1)
        {
          return -127;
        }
        else
        {
          int v10 = v8 + 1;
          while (v9 != *((_DWORD *)a1 + 2))
          {
            int v11 = *v10++;
            int v9 = v11;
            if (v11 == -1) {
              return -127;
            }
          }
          return 0;
        }
      }
      else if (LODWORD(v13[0]))
      {
        return 1;
      }
      else if ((_BYTE)v14)
      {
        return 0;
      }
      else
      {
        return -127;
      }
    }
    else
    {
      return -61;
    }
  }
  else
  {
    return 127;
  }
}

BOOL sub_2447A1CA4(unsigned __int16 *a1)
{
  uint64_t v1 = 0;
  int v2 = *((_DWORD *)a1 + 2);
  while (dword_244E7A930[v1] != v2)
  {
    if (++v1 == 3)
    {
      uint64_t v3 = sub_244856060(*a1, *((_DWORD *)a1 + 1), v2);
      return v3 != 0;
    }
  }
  uint64_t v3 = sub_244855D80(*a1, *((_DWORD *)a1 + 1));
  return v3 != 0;
}

double sub_2447A1D0C@<D0>(_OWORD *a1@<X0>, char a2@<W1>, unsigned __int16 *a3@<X2>, uint64_t a4@<X3>, unsigned __int16 *a5@<X4>, __n128 *a6@<X8>)
{
  uint64_t v76 = *MEMORY[0x263EF8340];
  id v12 = sub_244CC8484(0xDu, "DataManagement");
  if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
  {
    int v13 = HIWORD(*((_DWORD *)a3 + 1));
    int v14 = (unsigned __int16)*((_DWORD *)a3 + 1);
    int v15 = *a3;
    int v16 = HIWORD(*((_DWORD *)a3 + 2));
    int v17 = (unsigned __int16)*((_DWORD *)a3 + 2);
    int v18 = *((unsigned __int8 *)a3 + 2);
    *(_DWORD *)long long buf = 67110400;
    *(_DWORD *)&uint8_t buf[4] = v13;
    *(_WORD *)&uint8_t buf[8] = 1024;
    *(_DWORD *)&buf[10] = v14;
    *(_WORD *)&buf[14] = 1024;
    *(_DWORD *)&uint8_t buf[16] = v15;
    *(_WORD *)&buf[20] = 1024;
    *(_DWORD *)&unsigned char buf[22] = v16;
    *(_WORD *)&buf[26] = 1024;
    *(_DWORD *)&buf[28] = v17;
    *(_WORD *)&buf[32] = 1024;
    *(_DWORD *)&buf[34] = v18;
    _os_log_impl(&dword_2446BD000, v12, OS_LOG_TYPE_INFO, "Reading attribute: Cluster=0x%04X_%04X Endpoint=%x AttributeId=0x%04X_%04X (expanded=%d)", buf, 0x26u);
  }
  if (sub_244CC4E58(3u)) {
    sub_244CC4DE0(0xDu, 3);
  }
  long long v60 = 0uLL;
  sub_2447A28C0(a3, (uint64_t *)&v60 + 1, (uint64_t *)&v60);
  uint64_t v20 = *((void *)&v60 + 1);
  if (v60 == 0)
  {
    a6->n128_u32[0] = sub_2447A2940(a3) | 0x500;
    a6->n128_u64[1] = (unint64_t)"/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/util"
                                        "/ember-compatibility-functions.cpp";
    int v22 = 290;
LABEL_34:
    a6[1].n128_u32[0] = v22;
    return v21.n128_f64[0];
  }
  unint64_t v23 = (const char *)*((unsigned int *)a3 + 2);
  *(_DWORD *)int v56 = *((_DWORD *)a3 + 1);
  *(_WORD *)&v56[4] = *a3;
  v56[6] = 1;
  *(_DWORD *)&v56[8] = v23;
  LOBYTE(v57) = 1;
  unsigned int v24 = sub_244BCAD3C(*(unsigned int *)v56, v23, v19);
  memset(buf, 0, 24);
  uint64_t v25 = sub_244D908A4();
  sub_244D90050(v25, (uint64_t)a1, (uint64_t)v56, v24, buf);
  switch(*(_DWORD *)buf)
  {
    case 0:
      v56[8] = 1;
      *(_WORD *)&v56[10] = -1;
      int v57 = -1;
      uint64_t v58 = 0;
      uint64_t v59 = v20;
      uint64_t v26 = v56;
      *(void *)int v56 = &unk_26F952780;
      if (v20 || (v27 = sub_244CB24F4(), (uint64_t v26 = (unsigned char *)sub_244CB27DC(v27, *a3, *((_DWORD *)a3 + 1))) != 0))
      {
        a6->n128_u64[0] = 0;
        a6->n128_u64[1] = 0;
        a6[1].n128_u64[0] = 0;
        if (a5)
        {
          int v28 = *a5;
          int v29 = *((unsigned __int8 *)a5 + 2) << 16;
        }
        else
        {
          int v29 = 0;
          int v28 = 0xFFFF;
        }
        int v61 = 0;
        a6->n128_u64[1] = 0;
        a6[1].n128_u64[0] = 0;
        a6->n128_u64[0] = 0;
        sub_2447A2998(a3, &v61, (uint64_t)a6);
        if (a6->n128_u32[0]) {
          return v21.n128_f64[0];
        }
        long long v30 = a1[1];
        *(_OWORD *)&uint8_t buf[8] = *a1;
        *(_OWORD *)&unsigned char buf[24] = v30;
        *(void *)long long buf = a4;
        unsigned __int16 v65 = *a3;
        uint64_t v67 = *(void *)(a3 + 2);
        char v66 = 0;
        __int16 v68 = 0;
        char v69 = 0;
        char v70 = 0;
        int v71 = v61;
        unsigned __int8 v72 = 0;
        char v73 = a2;
        int v74 = -65536;
        int v75 = v29 | v28;
        memset(v62, 0, sizeof(v62));
        unint64_t v63 = 0;
        (*(void (**)(uint8_t *__return_ptr, unsigned char *, unsigned __int16 *, unsigned char *))(*(void *)v26 + 16))(v62, v26, a3, buf);
        if (*(_DWORD *)v62)
        {
          if (*(_DWORD *)v62 == 1423 && *((unsigned char *)a3 + 2))
          {
            a6->n128_u32[0] = 0;
            a6->n128_u64[1] = (unint64_t)"/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/"
                                                "app/util/ember-compatibility-functions.cpp";
            a6[1].n128_u32[0] = 195;
LABEL_31:
            a6->n128_u32[0] = 0;
            a6->n128_u64[1] = (unint64_t)"/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/"
                                                "app/util/ember-compatibility-functions.cpp";
            int v22 = 327;
            goto LABEL_34;
          }
          if (a5)
          {
            *a5 = v75;
            *((unsigned char *)a5 + 2) = BYTE2(v75);
          }
          v21.n128_u64[0] = *(void *)v62;
          *a6 = *(__n128 *)v62;
          a6[1].n128_u64[0] = v63;
          if (a6->n128_u32[0]) {
            return v21.n128_f64[0];
          }
        }
        else
        {
          int v31 = v72;
          a6->n128_u32[0] = 0;
          a6->n128_u64[1] = (unint64_t)"/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/ap"
                                              "p/util/ember-compatibility-functions.cpp";
          a6[1].n128_u32[0] = 210;
          if (v31) {
            goto LABEL_31;
          }
        }
      }
      *(_WORD *)int v56 = *a3;
      *(void *)&v56[4] = *(void *)(a3 + 2);
      int v32 = sub_2448560A4((unsigned __int16 *)v56, &v60, (uint64_t)off_268EB8500, (unsigned __int16)qword_268EB8508, 0);
      if (v32)
      {
        a6->n128_u32[0] = v32 | 0x500;
        a6->n128_u64[1] = (unint64_t)"/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/"
                                            "util/ember-compatibility-functions.cpp";
        int v22 = 343;
        goto LABEL_34;
      }
      uint64_t v33 = sub_244CCCAF8(a4);
      __n128 v21 = *(__n128 *)a4;
      *a6 = *(__n128 *)a4;
      a6[1].n128_u64[0] = *(void *)(a4 + 16);
      if (!a6->n128_u32[0])
      {
        long long v34 = (__n128 *)v33;
        uint64_t v35 = (__n128 *)sub_244CCCAA0(v33);
        __n128 v21 = *v35;
        *a6 = *v35;
        a6[1].n128_u64[0] = v35[1].n128_u64[0];
        if (!a6->n128_u32[0])
        {
          int v61 = 0;
          a6->n128_u64[1] = 0;
          a6[1].n128_u64[0] = 0;
          a6->n128_u64[0] = 0;
          sub_2447A2998(a3, &v61, (uint64_t)a6);
          if (!a6->n128_u32[0])
          {
            sub_244CCB9E4((uint64_t)v35);
            __n128 v21 = *v35;
            *a6 = *v35;
            a6[1].n128_u64[0] = v35[1].n128_u64[0];
            if (!a6->n128_u32[0])
            {
              uint64_t v36 = sub_244CCB98C((uint64_t)v35);
              __n128 v21 = *v35;
              *a6 = *v35;
              a6[1].n128_u64[0] = v35[1].n128_u64[0];
              if (!a6->n128_u32[0])
              {
                memset(buf, 0, 24);
                uint64_t v37 = sub_244CCC220(v36);
                uint64_t v38 = sub_244CCC278(v37);
                long long v39 = (__n128 *)sub_244CCC2D0(v38);
                sub_244CCBA3C(v39, (__n128 *)buf);
                v21.n128_u64[0] = *(void *)buf;
                *a6 = *(__n128 *)buf;
                a6[1].n128_u64[0] = *(void *)&buf[16];
                if (!a6->n128_u32[0])
                {
                  uint64_t v40 = (char *)v35[1].n128_u64[1];
                  if (!v40)
                  {
                    a6->n128_u32[0] = 0;
                    a6->n128_u64[1] = (unint64_t)"/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhom"
                                                        "eip/src/app/util/ember-compatibility-functions.cpp";
                    int v22 = 368;
                    goto LABEL_34;
                  }
                  int v41 = *(unsigned __int8 *)(v60 + 14);
                  unsigned int v42 = *(unsigned __int8 *)(v60 + 15);
                  int v43 = sub_2447A83B4(*(unsigned __int8 *)(v60 + 14));
                  switch(v43)
                  {
                    case 16:
                      a6->n128_u64[0] = 0;
                      a6->n128_u64[1] = 0;
                      a6[1].n128_u64[0] = 0;
                      sub_2447A2AE4((v42 >> 6) & 1, (uint64_t)a6);
                      goto LABEL_86;
                    case 17:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 27:
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 59:
                    case 60:
                    case 61:
                    case 62:
                    case 63:
                    case 64:
                      goto LABEL_47;
                    case 32:
                      a6->n128_u64[0] = 0;
                      a6->n128_u64[1] = 0;
                      a6[1].n128_u64[0] = 0;
                      sub_2447A2B3C((uint64_t)v40, (v42 >> 6) & 1);
                      goto LABEL_86;
                    case 33:
                      a6->n128_u64[0] = 0;
                      a6->n128_u64[1] = 0;
                      a6[1].n128_u64[0] = 0;
                      sub_2447A2B68((uint64_t)v40, (v42 >> 6) & 1);
                      goto LABEL_86;
                    case 34:
                      a6->n128_u64[0] = 0;
                      a6->n128_u64[1] = 0;
                      a6[1].n128_u64[0] = 0;
                      sub_2447A2B98((v42 >> 6) & 1, (uint64_t)a6);
                      goto LABEL_86;
                    case 35:
                      a6->n128_u64[0] = 0;
                      a6->n128_u64[1] = 0;
                      a6[1].n128_u64[0] = 0;
                      sub_2447A2C60((uint64_t)v40, (v42 >> 6) & 1);
                      goto LABEL_86;
                    case 36:
                      a6->n128_u64[0] = 0;
                      a6->n128_u64[1] = 0;
                      a6[1].n128_u64[0] = 0;
                      sub_2447A2C8C((v42 >> 6) & 1, (uint64_t)a6);
                      goto LABEL_86;
                    case 37:
                      a6->n128_u64[0] = 0;
                      a6->n128_u64[1] = 0;
                      a6[1].n128_u64[0] = 0;
                      sub_2447A2D54((v42 >> 6) & 1, (uint64_t)a6);
                      goto LABEL_86;
                    case 38:
                      a6->n128_u64[0] = 0;
                      a6->n128_u64[1] = 0;
                      a6[1].n128_u64[0] = 0;
                      sub_2447A2E1C((v42 >> 6) & 1, (uint64_t)a6);
                      goto LABEL_86;
                    case 39:
                      a6->n128_u64[0] = 0;
                      a6->n128_u64[1] = 0;
                      a6[1].n128_u64[0] = 0;
                      sub_2447A2EE4((uint64_t)v40, (v42 >> 6) & 1);
                      goto LABEL_86;
                    case 40:
                      a6->n128_u64[0] = 0;
                      a6->n128_u64[1] = 0;
                      a6[1].n128_u64[0] = 0;
                      sub_2447A2F10((uint64_t)v40, (v42 >> 6) & 1);
                      goto LABEL_86;
                    case 41:
                      a6->n128_u64[0] = 0;
                      a6->n128_u64[1] = 0;
                      a6[1].n128_u64[0] = 0;
                      sub_2447A2F40((uint64_t)v40, (v42 >> 6) & 1);
                      goto LABEL_86;
                    case 42:
                      a6->n128_u64[0] = 0;
                      a6->n128_u64[1] = 0;
                      a6[1].n128_u64[0] = 0;
                      sub_2447A2F70((v42 >> 6) & 1, (uint64_t)a6);
                      goto LABEL_86;
                    case 43:
                      a6->n128_u64[0] = 0;
                      a6->n128_u64[1] = 0;
                      a6[1].n128_u64[0] = 0;
                      sub_2447A302C((uint64_t)v40, (v42 >> 6) & 1);
                      goto LABEL_86;
                    case 44:
                      a6->n128_u64[0] = 0;
                      a6->n128_u64[1] = 0;
                      a6[1].n128_u64[0] = 0;
                      sub_2447A305C((v42 >> 6) & 1, (uint64_t)a6);
                      goto LABEL_86;
                    case 45:
                      a6->n128_u64[0] = 0;
                      a6->n128_u64[1] = 0;
                      a6[1].n128_u64[0] = 0;
                      sub_2447A3130((v42 >> 6) & 1, (uint64_t)a6);
                      goto LABEL_86;
                    case 46:
                      a6->n128_u64[0] = 0;
                      a6->n128_u64[1] = 0;
                      a6[1].n128_u64[0] = 0;
                      sub_2447A3208((v42 >> 6) & 1, (uint64_t)a6);
                      goto LABEL_86;
                    case 47:
                      a6->n128_u64[0] = 0;
                      a6->n128_u64[1] = 0;
                      a6[1].n128_u64[0] = 0;
                      sub_2447A32E0((uint64_t)v40, (v42 >> 6) & 1);
                      goto LABEL_86;
                    case 57:
                      a6->n128_u64[0] = 0;
                      a6->n128_u64[1] = 0;
                      a6[1].n128_u64[0] = 0;
                      sub_2447A3310();
                      goto LABEL_86;
                    case 58:
                      a6->n128_u64[0] = 0;
                      a6->n128_u64[1] = 0;
                      a6[1].n128_u64[0] = 0;
                      sub_2447A333C();
                      goto LABEL_86;
                    case 65:
                      uint64_t v45 = off_268EB8500;
                      uint64_t v46 = *(unsigned __int8 *)sub_2447A3368(&off_268EB8500, 0);
                      if (v46 != 255)
                      {
                        a6->n128_u64[0] = 0;
                        a6->n128_u64[1] = 0;
                        a6[1].n128_u64[0] = 0;
                        sub_2446C1098(v55, (uint64_t)v45 + 1, v46);
                        sub_244CB6ADC(v40, v55[0], (unint64_t)v55[1], (uint64_t)a6);
                        goto LABEL_86;
                      }
                      if ((v42 & 0x40) != 0) {
                        goto LABEL_85;
                      }
                      a6->n128_u32[0] = 3;
                      a6->n128_u64[1] = (unint64_t)"/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedh"
                                                          "omeip/src/app/util/ember-compatibility-functions.cpp";
                      int v22 = 497;
                      goto LABEL_34;
                    case 66:
                      uint64_t v47 = off_268EB8500;
                      unsigned int v48 = *(unsigned __int8 *)sub_2447A3368(&off_268EB8500, 0);
                      if (v48 != 255)
                      {
                        a6->n128_u64[0] = 0;
                        a6->n128_u64[1] = 0;
                        a6[1].n128_u64[0] = 0;
                        sub_244CB6CB4(v40, (char *)v47 + 1, v48, (uint64_t)a6);
                        goto LABEL_86;
                      }
                      if ((v42 & 0x40) != 0) {
                        goto LABEL_85;
                      }
                      a6->n128_u32[0] = 3;
                      a6->n128_u64[1] = (unint64_t)"/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedh"
                                                          "omeip/src/app/util/ember-compatibility-functions.cpp";
                      int v22 = 466;
                      goto LABEL_34;
                    case 67:
                      uint64_t v49 = *(unsigned __int16 *)off_268EB8500;
                      if (v49 != 0xFFFF)
                      {
                        uint64_t v50 = (char *)off_268EB8500 + 2;
                        a6->n128_u64[0] = 0;
                        a6->n128_u64[1] = 0;
                        a6[1].n128_u64[0] = 0;
                        sub_2446C1098(v54, (uint64_t)v50, v49);
                        sub_244CB6ADC(v40, v54[0], (unint64_t)v54[1], (uint64_t)a6);
                        goto LABEL_86;
                      }
                      if ((v42 & 0x40) != 0) {
                        goto LABEL_85;
                      }
                      a6->n128_u32[0] = 3;
                      a6->n128_u64[1] = (unint64_t)"/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedh"
                                                          "omeip/src/app/util/ember-compatibility-functions.cpp";
                      int v22 = 512;
                      goto LABEL_34;
                    case 68:
                      unsigned int v51 = *(unsigned __int16 *)off_268EB8500;
                      if (v51 == 0xFFFF)
                      {
                        if ((v42 & 0x40) == 0)
                        {
                          a6->n128_u32[0] = 3;
                          a6->n128_u64[1] = (unint64_t)"/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connec"
                                                              "tedhomeip/src/app/util/ember-compatibility-functions.cpp";
                          int v22 = 482;
                          goto LABEL_34;
                        }
LABEL_85:
                        a6->n128_u64[0] = 0;
                        a6->n128_u64[1] = 0;
                        a6[1].n128_u64[0] = 0;
                        sub_244CB710C();
                      }
                      else
                      {
                        uint64_t v52 = (char *)off_268EB8500 + 2;
                        a6->n128_u64[0] = 0;
                        a6->n128_u64[1] = 0;
                        a6[1].n128_u64[0] = 0;
                        sub_244CB6CB4(v40, v52, v51, (uint64_t)a6);
                      }
LABEL_86:
                      if (!a6->n128_u32[0])
                      {
                        a6->n128_u64[0] = 0;
                        a6->n128_u64[1] = 0;
                        a6[1].n128_u64[0] = 0;
                        v21.n128_u64[0] = sub_244CCBA3C(v35, a6).n128_u64[0];
                        if (!a6->n128_u32[0]) {
                          v21.n128_u64[0] = sub_244CCBA3C(v34, a6).n128_u64[0];
                        }
                      }
                      break;
                    default:
                      if (!v43) {
                        goto LABEL_85;
                      }
LABEL_47:
                      long long v44 = sub_244CC8484(0xDu, "DataManagement");
                      if (os_log_type_enabled(v44, OS_LOG_TYPE_ERROR))
                      {
                        *(_DWORD *)size_t v62 = 67109120;
                        *(_DWORD *)&v62[4] = v41;
                        _os_log_impl(&dword_2446BD000, v44, OS_LOG_TYPE_ERROR, "Attribute type 0x%x not handled", v62, 8u);
                      }
                      if (sub_244CC4E58(1u)) {
                        sub_244CC4DE0(0xDu, 1);
                      }
                      a6->n128_u32[0] = 1281;
                      a6->n128_u64[1] = (unint64_t)"/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedh"
                                                          "omeip/src/app/util/ember-compatibility-functions.cpp";
                      int v22 = 523;
                      goto LABEL_34;
                  }
                }
              }
            }
          }
        }
      }
      return v21.n128_f64[0];
    case 0xA5:
      if (!*((unsigned char *)a3 + 2))
      {
        a6->n128_u32[0] = 1406;
        a6->n128_u64[1] = (unint64_t)"/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/"
                                            "util/ember-compatibility-functions.cpp";
        int v22 = 310;
        goto LABEL_34;
      }
      goto LABEL_17;
    case 0xA8:
      if (!*((unsigned char *)a3 + 2))
      {
        a6->n128_u32[0] = 1437;
        a6->n128_u64[1] = (unint64_t)"/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/"
                                            "util/ember-compatibility-functions.cpp";
        int v22 = 311;
        goto LABEL_34;
      }
LABEL_17:
      a6->n128_u32[0] = 0;
      a6->n128_u64[1] = (unint64_t)"/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/ut"
                                          "il/ember-compatibility-functions.cpp";
      int v22 = 308;
      goto LABEL_34;
  }
  v21.n128_u64[0] = *(void *)buf;
  *a6 = *(__n128 *)buf;
  a6[1].n128_u64[0] = *(void *)&buf[16];
  return v21.n128_f64[0];
}

uint64_t sub_2447A28C0(unsigned __int16 *a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v5 = 0;
  *a2 = 0;
  *a3 = 0;
  int v6 = *((_DWORD *)a1 + 2);
  while (dword_244E7A930[v5] != v6)
  {
    if (++v5 == 3)
    {
      uint64_t result = sub_244856060(*a1, *((_DWORD *)a1 + 1), v6);
      *a3 = result;
      return result;
    }
  }
  uint64_t result = sub_244855D80(*a1, *((_DWORD *)a1 + 1));
  *a2 = result;
  return result;
}

uint64_t sub_2447A2940(unsigned __int16 *a1)
{
  int v2 = (uint64_t *)sub_244856270(*a1);
  if (v2)
  {
    if (sub_244856304(v2, *((_DWORD *)a1 + 1), 64, 0)) {
      return -122;
    }
    else {
      return -61;
    }
  }
  else
  {
    return 127;
  }
}

uint64_t sub_2447A2998@<X0>(unsigned __int16 *a1@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  uint64_t result = sub_24485773C(a1);
  if (result)
  {
    int v7 = 0;
    *a2 = *(_DWORD *)result;
    int v8 = 172;
  }
  else
  {
    int v9 = sub_244CC8484(0xDu, "DataManagement");
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      int v10 = *a1;
      int v11 = HIWORD(*((_DWORD *)a1 + 1));
      int v12 = (unsigned __int16)*((_DWORD *)a1 + 1);
      *(_DWORD *)long long buf = 67109632;
      int v14 = v10;
      __int16 v15 = 1024;
      int v16 = v11;
      __int16 v17 = 1024;
      int v18 = v12;
      _os_log_impl(&dword_2446BD000, v9, OS_LOG_TYPE_ERROR, "Endpoint %x, Cluster 0x%04X_%04X not found in ReadClusterDataVersion!", buf, 0x14u);
    }
    uint64_t result = sub_244CC4E58(1u);
    if (result) {
      uint64_t result = sub_244CC4DE0(0xDu, 1);
    }
    int v8 = 169;
    int v7 = 216;
  }
  *(_DWORD *)a3 = v7;
  *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/util/ember-compatibi"
                        "lity-functions.cpp";
  *(_DWORD *)(a3 + 16) = v8;
  return result;
}

void sub_2447A2AE4(int a1@<W1>, uint64_t a2@<X8>)
{
  int v2 = *(unsigned __int8 *)off_268EB8500;
  if (a1)
  {
    if (v2 == 255)
    {
      sub_244CB710C();
      return;
    }
  }
  else if (v2 == 255)
  {
    *(_DWORD *)a2 = 3;
    *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/util/ember-compati"
                          "bility-functions.cpp";
    *(_DWORD *)(a2 + 16) = 80;
    return;
  }
  sub_244CB65C8();
}

void sub_2447A2B3C(uint64_t a1, int a2)
{
  if (a2 && *(unsigned __int8 *)off_268EB8500 == 255) {
    sub_244CB710C();
  }
  else {
    sub_244CB68B8();
  }
}

void sub_2447A2B68(uint64_t a1, int a2)
{
  if (a2 && *(unsigned __int16 *)off_268EB8500 == 0xFFFF) {
    sub_244CB710C();
  }
  else {
    sub_244CB6904();
  }
}

void sub_2447A2B98(int a1@<W1>, uint64_t a2@<X8>)
{
  __int16 v9 = *(_WORD *)off_268EB8500;
  char v10 = *((unsigned char *)off_268EB8500 + 2);
  if (!a1) {
    goto LABEL_12;
  }
  uint64_t v2 = 2;
  do
  {
    int v3 = *((unsigned __int8 *)&v9 + v2);
    BOOL v4 = v2-- != 0;
  }
  while (v4 && v3 == 255);
  if (v3 == 255)
  {
    sub_244CB710C();
    return;
  }
  uint64_t v5 = 2;
  do
  {
    int v6 = *((unsigned __int8 *)&v9 + v5);
    BOOL v4 = v5-- != 0;
  }
  while (v4 && v6 == 255);
  if (v6 == 255)
  {
    *(_DWORD *)a2 = 3;
    *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/util/ember-compati"
                          "bility-functions.cpp";
    *(_DWORD *)(a2 + 16) = 80;
  }
  else
  {
LABEL_12:
    int v7 = 0;
    for (uint64_t i = 2; i != -1; --i)
      int v7 = *((unsigned __int8 *)&v9 + i) | (v7 << 8);
    sub_244CB694C();
  }
}

void sub_2447A2C60(uint64_t a1, int a2)
{
  if (a2 && *(_DWORD *)off_268EB8500 == -1) {
    sub_244CB710C();
  }
  else {
    sub_244CB694C();
  }
}

void sub_2447A2C8C(int a1@<W1>, uint64_t a2@<X8>)
{
  int v9 = *(_DWORD *)off_268EB8500;
  char v10 = *((unsigned char *)off_268EB8500 + 4);
  if (!a1) {
    goto LABEL_12;
  }
  uint64_t v2 = 4;
  do
  {
    int v3 = *((unsigned __int8 *)&v9 + v2);
    BOOL v4 = v2-- != 0;
  }
  while (v4 && v3 == 255);
  if (v3 == 255)
  {
    sub_244CB710C();
    return;
  }
  uint64_t v5 = 4;
  do
  {
    int v6 = *((unsigned __int8 *)&v9 + v5);
    BOOL v4 = v5-- != 0;
  }
  while (v4 && v6 == 255);
  if (v6 == 255)
  {
    *(_DWORD *)a2 = 3;
    *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/util/ember-compati"
                          "bility-functions.cpp";
    *(_DWORD *)(a2 + 16) = 80;
  }
  else
  {
LABEL_12:
    unint64_t v7 = 0;
    for (uint64_t i = 4; i != -1; --i)
      unint64_t v7 = *((unsigned __int8 *)&v9 + i) | (v7 << 8);
    sub_244CB68CC();
  }
}

void sub_2447A2D54(int a1@<W1>, uint64_t a2@<X8>)
{
  int v9 = *(_DWORD *)off_268EB8500;
  __int16 v10 = *((_WORD *)off_268EB8500 + 2);
  if (!a1) {
    goto LABEL_12;
  }
  uint64_t v2 = 5;
  do
  {
    int v3 = *((unsigned __int8 *)&v9 + v2);
    BOOL v4 = v2-- != 0;
  }
  while (v4 && v3 == 255);
  if (v3 == 255)
  {
    sub_244CB710C();
    return;
  }
  uint64_t v5 = 5;
  do
  {
    int v6 = *((unsigned __int8 *)&v9 + v5);
    BOOL v4 = v5-- != 0;
  }
  while (v4 && v6 == 255);
  if (v6 == 255)
  {
    *(_DWORD *)a2 = 3;
    *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/util/ember-compati"
                          "bility-functions.cpp";
    *(_DWORD *)(a2 + 16) = 80;
  }
  else
  {
LABEL_12:
    unint64_t v7 = 0;
    for (uint64_t i = 5; i != -1; --i)
      unint64_t v7 = *((unsigned __int8 *)&v9 + i) | (v7 << 8);
    sub_244CB68CC();
  }
}

void sub_2447A2E1C(int a1@<W1>, uint64_t a2@<X8>)
{
  *(_DWORD *)int v9 = *(_DWORD *)off_268EB8500;
  *(_DWORD *)&v9[3] = *(_DWORD *)((char *)off_268EB8500 + 3);
  if (!a1) {
    goto LABEL_12;
  }
  uint64_t v2 = 6;
  do
  {
    int v3 = v9[v2];
    BOOL v4 = v2-- != 0;
  }
  while (v4 && v3 == 255);
  if (v3 == 255)
  {
    sub_244CB710C();
    return;
  }
  uint64_t v5 = 6;
  do
  {
    int v6 = v9[v5];
    BOOL v4 = v5-- != 0;
  }
  while (v4 && v6 == 255);
  if (v6 == 255)
  {
    *(_DWORD *)a2 = 3;
    *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/util/ember-compati"
                          "bility-functions.cpp";
    *(_DWORD *)(a2 + 16) = 80;
  }
  else
  {
LABEL_12:
    unint64_t v7 = 0;
    for (uint64_t i = 6; i != -1; --i)
      unint64_t v7 = v9[i] | (v7 << 8);
    sub_244CB68CC();
  }
}

void sub_2447A2EE4(uint64_t a1, int a2)
{
  if (a2 && *off_268EB8500 == -1) {
    sub_244CB710C();
  }
  else {
    sub_244CB68CC();
  }
}

void sub_2447A2F10(uint64_t a1, int a2)
{
  if (a2 && *(unsigned __int8 *)off_268EB8500 == 128) {
    sub_244CB710C();
  }
  else {
    sub_244CB69F4();
  }
}

void sub_2447A2F40(uint64_t a1, int a2)
{
  if (a2 && *(unsigned __int16 *)off_268EB8500 == 0x8000) {
    sub_244CB710C();
  }
  else {
    sub_244CB69F4();
  }
}

void sub_2447A2F70(int a1@<W1>, uint64_t a2@<X8>)
{
  __int16 v8 = *(_WORD *)off_268EB8500;
  unsigned __int8 v9 = *((unsigned char *)off_268EB8500 + 2);
  if (!a1) {
    goto LABEL_16;
  }
  if (v9 == 128 && HIBYTE(v8) == 0 && v8 == 0)
  {
    sub_244CB710C();
    return;
  }
  BOOL v4 = v9 == 128 && HIBYTE(v8) == 0;
  if (v4 && v8 == 0)
  {
    *(_DWORD *)a2 = 3;
    *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/util/ember-compati"
                          "bility-functions.cpp";
    *(_DWORD *)(a2 + 16) = 80;
  }
  else
  {
LABEL_16:
    int v6 = 0;
    for (uint64_t i = 2; i != -1; --i)
      int v6 = *((unsigned __int8 *)&v8 + i) | (v6 << 8);
    sub_244CB69F4();
  }
}

void sub_2447A302C(uint64_t a1, int a2)
{
  if (a2 && *(_DWORD *)off_268EB8500 == 0x80000000) {
    sub_244CB710C();
  }
  else {
    sub_244CB69F4();
  }
}

void sub_2447A305C(int a1@<W1>, uint64_t a2@<X8>)
{
  int v7 = *(_DWORD *)off_268EB8500;
  int v2 = *((unsigned __int8 *)off_268EB8500 + 4);
  char v8 = *((unsigned char *)off_268EB8500 + 4);
  if (a1 && v2 == 128)
  {
    uint64_t v3 = 3;
    while (!*((unsigned char *)&v7 + v3))
    {
      if (--v3 == -1)
      {
        sub_244CB710C();
        return;
      }
    }
    uint64_t v4 = 3;
    while (!*((unsigned char *)&v7 + v4))
    {
      if (--v4 == -1)
      {
        *(_DWORD *)a2 = 3;
        *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/util/ember-com"
                              "patibility-functions.cpp";
        *(_DWORD *)(a2 + 16) = 80;
        return;
      }
    }
  }
  unint64_t v5 = 0;
  for (uint64_t i = 4; i != -1; --i)
    unint64_t v5 = *((unsigned __int8 *)&v7 + i) | (v5 << 8);
  sub_244CB69FC();
}

void sub_2447A3130(int a1@<W1>, uint64_t a2@<X8>)
{
  __int16 v7 = *((_WORD *)off_268EB8500 + 2);
  int v6 = *(_DWORD *)off_268EB8500;
  if (a1 && HIBYTE(v7) == 128)
  {
    uint64_t v2 = 4;
    while (!*((unsigned char *)&v6 + v2))
    {
      if (--v2 == -1)
      {
        sub_244CB710C();
        return;
      }
    }
    uint64_t v3 = 4;
    while (!*((unsigned char *)&v6 + v3))
    {
      if (--v3 == -1)
      {
        *(_DWORD *)a2 = 3;
        *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/util/ember-com"
                              "patibility-functions.cpp";
        *(_DWORD *)(a2 + 16) = 80;
        return;
      }
    }
  }
  unint64_t v4 = 0;
  for (uint64_t i = 5; i != -1; --i)
    unint64_t v4 = *((unsigned __int8 *)&v6 + i) | (v4 << 8);
  sub_244CB69FC();
}

void sub_2447A3208(int a1@<W1>, uint64_t a2@<X8>)
{
  *(_DWORD *)&v6[3] = *(_DWORD *)((char *)off_268EB8500 + 3);
  *(_DWORD *)int v6 = *(_DWORD *)off_268EB8500;
  if (a1 && v6[6] == 128)
  {
    uint64_t v2 = 5;
    while (!v6[v2])
    {
      if (--v2 == -1)
      {
        sub_244CB710C();
        return;
      }
    }
    uint64_t v3 = 5;
    while (!v6[v3])
    {
      if (--v3 == -1)
      {
        *(_DWORD *)a2 = 3;
        *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/util/ember-com"
                              "patibility-functions.cpp";
        *(_DWORD *)(a2 + 16) = 80;
        return;
      }
    }
  }
  unint64_t v4 = 0;
  for (uint64_t i = 6; i != -1; --i)
    unint64_t v4 = v6[i] | (v4 << 8);
  sub_244CB69FC();
}

void sub_2447A32E0(uint64_t a1, int a2)
{
  if (a2 && *off_268EB8500 == 0x8000000000000000) {
    sub_244CB710C();
  }
  else {
    sub_244CB69FC();
  }
}

void sub_2447A3310()
{
}

void sub_2447A333C()
{
}

unint64_t sub_2447A3368(void *a1, unint64_t a2)
{
  if (a1[1] <= a2) {
    sub_244E1EF08();
  }
  return *a1 + a2;
}

uint64_t sub_2447A3394(uint64_t a1)
{
  return sub_244856060(*(_WORD *)a1, *(_DWORD *)(a1 + 4), *(_DWORD *)(a1 + 8));
}

void sub_2447A33A4(_OWORD *a1@<X0>, unsigned __int16 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v84 = *MEMORY[0x263EF8340];
  long long v75 = 0uLL;
  sub_2447A28C0(a2, (uint64_t *)&v75 + 1, (uint64_t *)&v75);
  uint64_t v10 = v75;
  if (v75 == 0)
  {
    buf[0] = sub_2447A2940(a2);
    buf[1] = 0;
    sub_244CAB2B0(a4, (uint64_t)a2, buf, (__n128 *)a5);
    return;
  }
  if (!(void)v75 || (*(unsigned char *)(v75 + 15) & 1) == 0)
  {
    *(_WORD *)long long buf = 136;
    sub_244CAB2B0(a4, (uint64_t)a2, buf, (__n128 *)a5);
    return;
  }
  int v11 = *((_DWORD *)a2 + 2);
  *(_DWORD *)int v81 = *((_DWORD *)a2 + 1);
  *(_WORD *)&v81[4] = *a2;
  v81[6] = 2;
  int v82 = v11;
  char v83 = 1;
  unsigned int v12 = sub_244BCAD34();
  *(void *)long long buf = *(void *)a2;
  *(_DWORD *)&uint8_t buf[8] = *((_DWORD *)a2 + 2);
  buf[12] = v12;
  if (!sub_2447A4810(a4, (unsigned __int16 *)buf))
  {
    __int16 v15 = sub_244D908A4();
    sub_244D90050(v15, (uint64_t)a1, (uint64_t)v81, v12, buf);
    long long v79 = *(_OWORD *)&buf[4];
    int v80 = *(_DWORD *)&buf[20];
    if (*(_DWORD *)buf)
    {
      if (*(_DWORD *)buf == 165 || *(_DWORD *)buf == 168)
      {
        if (*(_DWORD *)buf == 165) {
          char v16 = 126;
        }
        else {
          char v16 = -99;
        }
        buf[0] = v16;
        buf[1] = 0;
        sub_244CAB2B0(a4, (uint64_t)a2, buf, (__n128 *)a5);
      }
      else
      {
        *(_DWORD *)a5 = *(_DWORD *)buf;
        *(_OWORD *)(a5 + 4) = v79;
        *(_DWORD *)(a5 + 20) = v80;
      }
      return;
    }
  }
  int v13 = *((_DWORD *)a2 + 2);
  uint64_t v14 = *(void *)a2;
  *(unsigned char *)(a4 + 248) = 1;
  *(void *)(a4 + 252) = v14;
  *(_DWORD *)(a4 + 260) = v13;
  *(unsigned char *)(a4 + 264) = v12;
  if ((*(unsigned char *)(v10 + 15) & 8) != 0 && (*(unsigned char *)(a4 + 280) & 1) == 0)
  {
    *(_WORD *)long long buf = 198;
    sub_244CAB2B0(a4, (uint64_t)a2, buf, (__n128 *)a5);
    return;
  }
  if (!*((unsigned char *)a2 + 16) || (__int16 v17 = (int *)sub_2446F12CC((unsigned char *)a2 + 16), sub_2447A4884(a2, *v17)))
  {
    int v18 = sub_244CB24F4();
    uint64_t v19 = sub_244CB27DC(v18, *a2, *((_DWORD *)a2 + 1));
    if (v19)
    {
      *(void *)long long buf = a3;
      uint8_t buf[8] = 0;
      long long v20 = a1[1];
      *(_OWORD *)&uint8_t buf[16] = *a1;
      long long v78 = v20;
      *(void *)(a5 + 8) = 0;
      *(void *)(a5 + 16) = 0;
      *(void *)a5 = 0;
      (*(void (**)(uint64_t, unsigned __int16 *, unsigned char *))(*(void *)v19 + 24))(v19, a2, buf);
      if (*(_DWORD *)a5) {
        return;
      }
      if (buf[8])
      {
        sub_24484E2EC(a2);
        LOWORD(v79) = 0;
        sub_244CAB2B0(a4, (uint64_t)a2, (unsigned __int8 *)&v79, (__n128 *)a5);
        return;
      }
    }
    long long v79 = xmmword_265194D44;
    int v80 = 0;
    int v21 = sub_2447A83B4(*(unsigned __int8 *)(v10 + 14));
    char v22 = *(unsigned char *)(v10 + 15);
    switch(v21)
    {
      case 16:
        if (!qword_268EB8508) {
          sub_244E1EFC0();
        }
        if ((*(unsigned char *)(v10 + 15) & 0x40) != 0 && sub_244CB3B68(a3) == 20) {
          goto LABEL_87;
        }
        v81[0] = 0;
        memset(buf, 0, 24);
        sub_244CB3C0C(a3, (char *)v81, (uint64_t)buf);
        int v23 = *(_DWORD *)buf;
        if (*(_DWORD *)buf) {
          goto LABEL_240;
        }
        uint8_t v38 = v81[0];
        goto LABEL_227;
      case 32:
        if (!qword_268EB8508) {
          sub_244E1F068();
        }
        if ((*(unsigned char *)(v10 + 15) & 0x40) != 0 && sub_244CB3B68(a3) == 20)
        {
LABEL_87:
          uint8_t v38 = -1;
          goto LABEL_227;
        }
        v81[0] = 0;
        memset(buf, 0, 24);
        sub_244CB3E8C(a3, v81, (uint64_t)buf);
        int v23 = *(_DWORD *)buf;
        if (*(_DWORD *)buf) {
          goto LABEL_240;
        }
        uint8_t v38 = v81[0];
        if ((v22 & 0x40) == 0 || v81[0] != 255) {
          goto LABEL_227;
        }
        goto LABEL_238;
      case 33:
        if ((unint64_t)qword_268EB8508 <= 1) {
          sub_244E1F110();
        }
        if ((*(unsigned char *)(v10 + 15) & 0x40) != 0 && sub_244CB3B68(a3) == 20)
        {
          __int16 v33 = -1;
          goto LABEL_156;
        }
        *(_WORD *)int v81 = 0;
        memset(buf, 0, 24);
        sub_244CB3F40(a3, v81, (uint64_t)buf);
        int v23 = *(_DWORD *)buf;
        if (*(_DWORD *)buf) {
          goto LABEL_240;
        }
        __int16 v33 = *(_WORD *)v81;
        if ((v22 & 0x40) == 0 || *(unsigned __int16 *)v81 != 0xFFFF) {
          goto LABEL_156;
        }
        goto LABEL_238;
      case 34:
        if ((unint64_t)qword_268EB8508 <= 2) {
          sub_244E1F1B8();
        }
        if ((*(unsigned char *)(v10 + 15) & 0x40) != 0 && sub_244CB3B68(a3) == 20)
        {
          LOBYTE(v39) = -1;
          uint8_t v37 = -1;
          uint8_t v40 = -1;
LABEL_186:
          uint64_t v55 = off_268EB8500;
          *(unsigned char *)off_268EB8500 = v40;
          *((unsigned char *)v55 + 1) = v39;
          goto LABEL_187;
        }
        *(_DWORD *)int v81 = 0;
        memset(buf, 0, 24);
        sub_244CB3FB0(a3, v81, (uint64_t)buf);
        int v23 = *(_DWORD *)buf;
        if (*(_DWORD *)buf) {
          goto LABEL_240;
        }
        uint8_t v40 = v81[0];
        if ((v22 & 0x40) != 0) {
          unsigned int v56 = 16777214;
        }
        else {
          unsigned int v56 = 0xFFFFFF;
        }
        if (v56 >= *(_DWORD *)v81)
        {
          int v39 = *(_DWORD *)v81 >> 8;
          uint8_t v37 = v81[2];
          goto LABEL_186;
        }
        goto LABEL_238;
      case 35:
        if ((unint64_t)qword_268EB8508 <= 3) {
          sub_244E1F260();
        }
        if ((*(unsigned char *)(v10 + 15) & 0x40) != 0 && sub_244CB3B68(a3) == 20)
        {
          unsigned int v34 = -1;
          goto LABEL_234;
        }
        *(_DWORD *)int v81 = 0;
        memset(buf, 0, 24);
        sub_244CB3FB0(a3, v81, (uint64_t)buf);
        int v23 = *(_DWORD *)buf;
        if (*(_DWORD *)buf) {
          goto LABEL_240;
        }
        unsigned int v34 = *(_DWORD *)v81;
        if ((v22 & 0x40) == 0 || *(_DWORD *)v81 != -1) {
          goto LABEL_234;
        }
        goto LABEL_238;
      case 36:
        if ((unint64_t)qword_268EB8508 <= 4) {
          sub_244E1F308();
        }
        LOBYTE(v76[1]) = 0;
        v76[0] = 0;
        if ((v22 & 0x40) != 0 && sub_244CB3B68(a3) == 20)
        {
          LOBYTE(v76[1]) = -1;
          v76[0] = -1;
          goto LABEL_171;
        }
        *(void *)int v81 = 0;
        memset(buf, 0, 24);
        sub_244CB3EFC(a3, v81, (uint64_t)buf);
        int v23 = *(_DWORD *)buf;
        if (*(_DWORD *)buf) {
          goto LABEL_223;
        }
        unint64_t v50 = *(void *)v81;
        unint64_t v51 = 0xFFFFFFFFFELL;
        if ((v22 & 0x40) == 0) {
          unint64_t v51 = 0xFFFFFFFFFFLL;
        }
        if (v51 < *(void *)v81) {
          goto LABEL_222;
        }
        for (uint64_t i = 0; i != 5; ++i)
        {
          *((unsigned char *)v76 + i) = v50;
          v50 >>= 8;
        }
        goto LABEL_171;
      case 37:
        if ((unint64_t)qword_268EB8508 <= 5) {
          sub_244E1F3B0();
        }
        LOWORD(v76[1]) = 0;
        v76[0] = 0;
        if ((v22 & 0x40) != 0 && sub_244CB3B68(a3) == 20)
        {
          LOWORD(v76[1]) = -1;
          v76[0] = -1;
          goto LABEL_213;
        }
        *(void *)int v81 = 0;
        memset(buf, 0, 24);
        sub_244CB3EFC(a3, v81, (uint64_t)buf);
        int v23 = *(_DWORD *)buf;
        if (*(_DWORD *)buf) {
          goto LABEL_223;
        }
        unint64_t v57 = *(void *)v81;
        unint64_t v58 = 0xFFFFFFFFFFFELL;
        if ((v22 & 0x40) == 0) {
          unint64_t v58 = 0xFFFFFFFFFFFFLL;
        }
        if (v58 < *(void *)v81) {
          goto LABEL_222;
        }
        for (uint64_t j = 0; j != 6; ++j)
        {
          *((unsigned char *)v76 + j) = v57;
          v57 >>= 8;
        }
        goto LABEL_213;
      case 38:
        if ((unint64_t)qword_268EB8508 <= 6) {
          sub_244E1F458();
        }
        memset(v76, 0, 7);
        if ((v22 & 0x40) != 0 && sub_244CB3B68(a3) == 20)
        {
          memset(v76, 255, 7);
          goto LABEL_221;
        }
        *(void *)int v81 = 0;
        memset(buf, 0, 24);
        sub_244CB3EFC(a3, v81, (uint64_t)buf);
        int v23 = *(_DWORD *)buf;
        if (*(_DWORD *)buf) {
          goto LABEL_223;
        }
        unint64_t v60 = *(void *)v81;
        unint64_t v61 = 0xFFFFFFFFFFFFFELL;
        if ((v22 & 0x40) == 0) {
          unint64_t v61 = 0xFFFFFFFFFFFFFFLL;
        }
        if (v61 < *(void *)v81) {
          goto LABEL_222;
        }
        for (uint64_t k = 0; k != 7; ++k)
        {
          *((unsigned char *)v76 + k) = v60;
          v60 >>= 8;
        }
        goto LABEL_221;
      case 39:
        if ((unint64_t)qword_268EB8508 <= 7) {
          sub_244E1F500();
        }
        if ((*(unsigned char *)(v10 + 15) & 0x40) != 0 && sub_244CB3B68(a3) == 20)
        {
          uint64_t v32 = -1;
          goto LABEL_241;
        }
        *(void *)int v81 = 0;
        memset(buf, 0, 24);
        sub_244CB3EFC(a3, v81, (uint64_t)buf);
        int v23 = *(_DWORD *)buf;
        if (*(_DWORD *)buf) {
          goto LABEL_240;
        }
        uint64_t v32 = *(void *)v81;
        if ((v22 & 0x40) == 0 || *(void *)v81 != -1) {
          goto LABEL_241;
        }
        goto LABEL_238;
      case 40:
        if (!qword_268EB8508) {
          sub_244E1F5A8();
        }
        if ((*(unsigned char *)(v10 + 15) & 0x40) != 0 && sub_244CB3B68(a3) == 20)
        {
          uint8_t v38 = 0x80;
LABEL_227:
          *(unsigned char *)off_268EB8500 = v38;
          *(_DWORD *)long long buf = 0;
          unsigned int v25 = 1;
          goto LABEL_251;
        }
        v81[0] = 0;
        memset(buf, 0, 24);
        sub_244CB3C70(a3, v81, (uint64_t)buf);
        int v23 = *(_DWORD *)buf;
        if (*(_DWORD *)buf) {
          goto LABEL_240;
        }
        uint8_t v38 = v81[0];
        if ((v22 & 0x40) == 0 || v81[0] != 128) {
          goto LABEL_227;
        }
        goto LABEL_238;
      case 41:
        if ((unint64_t)qword_268EB8508 <= 1) {
          sub_244E1F650();
        }
        if ((*(unsigned char *)(v10 + 15) & 0x40) != 0 && sub_244CB3B68(a3) == 20)
        {
          __int16 v33 = 0x8000;
LABEL_156:
          *(_WORD *)off_268EB8500 = v33;
          *(_DWORD *)long long buf = 0;
          unsigned int v25 = 2;
          goto LABEL_251;
        }
        *(_WORD *)int v81 = 0;
        memset(buf, 0, 24);
        sub_244CB3D8C(a3, v81, (uint64_t)buf);
        int v23 = *(_DWORD *)buf;
        if (*(_DWORD *)buf) {
          goto LABEL_240;
        }
        __int16 v33 = *(_WORD *)v81;
        if ((v22 & 0x40) == 0 || *(unsigned __int16 *)v81 != 0x8000) {
          goto LABEL_156;
        }
        goto LABEL_238;
      case 42:
        if ((unint64_t)qword_268EB8508 <= 2) {
          sub_244E1F6F8();
        }
        if ((*(unsigned char *)(v10 + 15) & 0x40) != 0 && sub_244CB3B68(a3) == 20)
        {
          LOWORD(v35) = 0;
          uint8_t v36 = 0;
          uint8_t v37 = 0x80;
          goto LABEL_179;
        }
        *(_DWORD *)int v81 = 0;
        memset(buf, 0, 24);
        sub_244CB3E0C(a3, v81, (uint64_t)buf);
        int v23 = *(_DWORD *)buf;
        if (*(_DWORD *)buf) {
          goto LABEL_240;
        }
        uint8_t v36 = v81[0];
        if ((v22 & 0x40) != 0) {
          int v54 = -8388607;
        }
        else {
          int v54 = -8388608;
        }
        if (v54 <= *(int *)v81 && *(int *)v81 < 0x800000)
        {
          int v35 = *(_DWORD *)v81 >> 8;
          uint8_t v37 = v81[2];
LABEL_179:
          uint64_t v55 = off_268EB8500;
          *(_WORD *)off_268EB8500 = v36 | (unsigned __int16)((_WORD)v35 << 8);
LABEL_187:
          *((unsigned char *)v55 + 2) = v37;
          *(_DWORD *)long long buf = 0;
          unsigned int v25 = 3;
          goto LABEL_251;
        }
LABEL_238:
        int v23 = 47;
        *(_DWORD *)long long buf = 47;
        *(void *)&uint8_t buf[8] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/util/ember-comp"
                             "atibility-functions.cpp";
        int v42 = 548;
LABEL_239:
        *(_DWORD *)&uint8_t buf[16] = v42;
LABEL_240:
        long long v79 = *(_OWORD *)&buf[4];
        int v80 = *(_DWORD *)&buf[20];
        goto LABEL_246;
      case 43:
        if ((unint64_t)qword_268EB8508 <= 3) {
          sub_244E1F7A0();
        }
        if ((*(unsigned char *)(v10 + 15) & 0x40) != 0 && sub_244CB3B68(a3) == 20)
        {
          unsigned int v34 = 0x80000000;
          goto LABEL_234;
        }
        *(_DWORD *)int v81 = 0;
        memset(buf, 0, 24);
        sub_244CB3E0C(a3, v81, (uint64_t)buf);
        int v23 = *(_DWORD *)buf;
        if (*(_DWORD *)buf) {
          goto LABEL_240;
        }
        unsigned int v34 = *(_DWORD *)v81;
        if ((v22 & 0x40) == 0 || *(_DWORD *)v81 != 0x80000000) {
          goto LABEL_234;
        }
        goto LABEL_238;
      case 44:
        if ((unint64_t)qword_268EB8508 <= 4) {
          sub_244E1F848();
        }
        LOBYTE(v76[1]) = 0;
        v76[0] = 0;
        if ((v22 & 0x40) != 0 && sub_244CB3B68(a3) == 20)
        {
          LOBYTE(v76[1]) = 0x80;
          v76[0] = 0;
LABEL_171:
          int v23 = 0;
          id v53 = off_268EB8500;
          *(_DWORD *)off_268EB8500 = v76[0];
          *((unsigned char *)v53 + 4) = v76[1];
          *(_DWORD *)long long buf = 0;
          *(void *)&uint8_t buf[8] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/util/ember-co"
                               "mpatibility-functions.cpp";
          *(_DWORD *)&uint8_t buf[16] = 553;
          unsigned int v25 = 5;
          goto LABEL_245;
        }
        *(void *)int v81 = 0;
        memset(buf, 0, 24);
        sub_244CB3CF0(a3, v81, (uint64_t)buf);
        int v23 = *(_DWORD *)buf;
        if (*(_DWORD *)buf) {
          goto LABEL_223;
        }
        uint64_t v47 = *(void *)v81;
        uint64_t v48 = 0xFFFFFF8000000000;
        if ((v22 & 0x40) != 0) {
          uint64_t v48 = 0xFFFFFF8000000001;
        }
        if (v48 <= *(uint64_t *)v81 && *(uint64_t *)v81 <= 0x7FFFFFFFFFLL)
        {
          for (uint64_t m = 0; m != 5; ++m)
          {
            *((unsigned char *)v76 + m) = v47;
            v47 >>= 8;
          }
          goto LABEL_171;
        }
        goto LABEL_222;
      case 45:
        if ((unint64_t)qword_268EB8508 <= 5) {
          sub_244E1F8F0();
        }
        LOWORD(v76[1]) = 0;
        v76[0] = 0;
        if ((v22 & 0x40) != 0 && sub_244CB3B68(a3) == 20)
        {
          v76[0] = 0;
          LOWORD(v76[1]) = 0x8000;
LABEL_213:
          int v23 = 0;
          char v66 = off_268EB8500;
          *(_DWORD *)off_268EB8500 = v76[0];
          *((_WORD *)v66 + 2) = v76[1];
          *(_DWORD *)long long buf = 0;
          *(void *)&uint8_t buf[8] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/util/ember-co"
                               "mpatibility-functions.cpp";
          *(_DWORD *)&uint8_t buf[16] = 553;
          unsigned int v25 = 6;
          goto LABEL_245;
        }
        *(void *)int v81 = 0;
        memset(buf, 0, 24);
        sub_244CB3CF0(a3, v81, (uint64_t)buf);
        int v23 = *(_DWORD *)buf;
        if (*(_DWORD *)buf) {
          goto LABEL_223;
        }
        uint64_t v63 = *(void *)v81;
        uint64_t v64 = 0xFFFF800000000000;
        if ((v22 & 0x40) != 0) {
          uint64_t v64 = 0xFFFF800000000001;
        }
        if (v64 <= *(uint64_t *)v81 && *(uint64_t *)v81 <= 0x7FFFFFFFFFFFLL)
        {
          for (uint64_t n = 0; n != 6; ++n)
          {
            *((unsigned char *)v76 + n) = v63;
            v63 >>= 8;
          }
          goto LABEL_213;
        }
        goto LABEL_222;
      case 46:
        if ((unint64_t)qword_268EB8508 <= 6) {
          sub_244E1F998();
        }
        memset(v76, 0, 7);
        if ((v22 & 0x40) != 0 && sub_244CB3B68(a3) == 20)
        {
          BYTE2(v76[1]) = 0x80;
          v76[0] = 0;
          LOWORD(v76[1]) = 0;
LABEL_221:
          int v23 = 0;
          char v70 = off_268EB8500;
          *(_DWORD *)off_268EB8500 = v76[0];
          *(_DWORD *)((char *)v70 + 3) = *(_DWORD *)((char *)v76 + 3);
          *(_DWORD *)long long buf = 0;
          *(void *)&uint8_t buf[8] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/util/ember-co"
                               "mpatibility-functions.cpp";
          *(_DWORD *)&uint8_t buf[16] = 553;
          unsigned int v25 = 7;
          goto LABEL_245;
        }
        *(void *)int v81 = 0;
        memset(buf, 0, 24);
        sub_244CB3CF0(a3, v81, (uint64_t)buf);
        int v23 = *(_DWORD *)buf;
        if (*(_DWORD *)buf) {
          goto LABEL_223;
        }
        uint64_t v67 = *(void *)v81;
        uint64_t v68 = 0xFF80000000000000;
        if ((v22 & 0x40) != 0) {
          uint64_t v68 = 0xFF80000000000001;
        }
        if (v68 <= *(uint64_t *)v81 && *(uint64_t *)v81 <= 0x7FFFFFFFFFFFFFLL)
        {
          for (iuint64_t i = 0; ii != 7; ++ii)
          {
            *((unsigned char *)v76 + ii) = v67;
            v67 >>= 8;
          }
          goto LABEL_221;
        }
LABEL_222:
        int v23 = 47;
        *(_DWORD *)long long buf = 47;
        *(void *)&uint8_t buf[8] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/util/ember-comp"
                             "atibility-functions.cpp";
        *(_DWORD *)&uint8_t buf[16] = 548;
LABEL_223:
        unsigned int v25 = 0;
        goto LABEL_245;
      case 47:
        if ((unint64_t)qword_268EB8508 <= 7) {
          sub_244E1FA40();
        }
        if ((*(unsigned char *)(v10 + 15) & 0x40) != 0 && sub_244CB3B68(a3) == 20)
        {
          uint64_t v32 = 0x8000000000000000;
          goto LABEL_241;
        }
        *(void *)int v81 = 0;
        memset(buf, 0, 24);
        sub_244CB3CF0(a3, v81, (uint64_t)buf);
        int v23 = *(_DWORD *)buf;
        if (*(_DWORD *)buf) {
          goto LABEL_240;
        }
        uint64_t v32 = *(void *)v81;
        if ((v22 & 0x40) != 0 && *(void *)v81 == 0x8000000000000000) {
          goto LABEL_238;
        }
        goto LABEL_241;
      case 57:
        if ((unint64_t)qword_268EB8508 <= 3) {
          sub_244E1FAE8();
        }
        if ((*(unsigned char *)(v10 + 15) & 0x40) != 0 && sub_244CB3B68(a3) == 20)
        {
          unsigned int v34 = 2143289344;
        }
        else
        {
          *(_DWORD *)int v81 = 0;
          memset(buf, 0, 24);
          sub_244CB401C(a3, v81, (uint64_t)buf);
          int v23 = *(_DWORD *)buf;
          if (*(_DWORD *)buf) {
            goto LABEL_240;
          }
          unsigned int v34 = *(_DWORD *)v81;
        }
LABEL_234:
        *(_DWORD *)off_268EB8500 = v34;
        *(_DWORD *)long long buf = 0;
        unsigned int v25 = 4;
        goto LABEL_251;
      case 58:
        if ((unint64_t)qword_268EB8508 <= 7) {
          sub_244E1FB90();
        }
        if ((*(unsigned char *)(v10 + 15) & 0x40) != 0 && sub_244CB3B68(a3) == 20)
        {
          uint64_t v32 = 0x7FF8000000000000;
        }
        else
        {
          *(void *)int v81 = 0;
          memset(buf, 0, 24);
          sub_244CB4060(a3, (double *)v81, (uint64_t)buf);
          int v23 = *(_DWORD *)buf;
          if (*(_DWORD *)buf) {
            goto LABEL_240;
          }
          uint64_t v32 = *(void *)v81;
        }
LABEL_241:
        *off_268EB8500 = v32;
        *(_DWORD *)long long buf = 0;
        unsigned int v25 = 8;
        goto LABEL_251;
      case 65:
      case 66:
        *(void *)int v81 = 0;
        if ((v22 & 0x40) != 0 && sub_244CB3B68(a3) == 20)
        {
          int v23 = 0;
          *(unsigned char *)off_268EB8500 = -1;
          int v24 = 583;
          unsigned int v25 = 1;
          goto LABEL_244;
        }
        int v31 = sub_244CB3B68(a3);
        if (v21 == 65)
        {
          if (v31 != 16) {
            goto LABEL_138;
          }
        }
        else if (v31 != 12)
        {
          goto LABEL_138;
        }
        if (sub_244CB3BE0(a3) > 0xFF) {
          goto LABEL_242;
        }
        memset(buf, 0, 24);
        sub_244CB4170(a3, v81, (uint64_t)buf);
        int v23 = *(_DWORD *)buf;
        if (*(_DWORD *)buf) {
          goto LABEL_223;
        }
        unsigned __int8 v45 = sub_244CB3BE0(a3);
        if (v45 == 0xFF) {
          goto LABEL_258;
        }
        int v46 = v45;
        if (qword_268EB8508 <= (unint64_t)v45) {
          goto LABEL_259;
        }
        *(unsigned char *)off_268EB8500 = v45;
        memcpy((char *)off_268EB8500 + 1, *(const void **)v81, v45);
        int v23 = 0;
        unsigned int v25 = v46 + 1;
        goto LABEL_137;
      case 67:
      case 68:
        *(void *)int v81 = 0;
        if ((v22 & 0x40) != 0 && sub_244CB3B68(a3) == 20)
        {
          int v23 = 0;
          *(_WORD *)off_268EB8500 = -1;
          int v24 = 583;
          unsigned int v25 = 2;
          goto LABEL_244;
        }
        int v30 = sub_244CB3B68(a3);
        if (v21 == 67)
        {
          if (v30 == 16)
          {
LABEL_126:
            if (sub_244CB3BE0(a3) >> 16)
            {
LABEL_242:
              unsigned int v25 = 0;
              int v24 = 573;
            }
            else
            {
              memset(buf, 0, 24);
              sub_244CB4170(a3, v81, (uint64_t)buf);
              int v23 = *(_DWORD *)buf;
              if (*(_DWORD *)buf) {
                goto LABEL_223;
              }
              unsigned __int16 v43 = sub_244CB3BE0(a3);
              if (v43 == 0xFFFF)
              {
LABEL_258:
                unsigned int v25 = 0;
                int v24 = 576;
              }
              else
              {
                unsigned __int16 v44 = v43 + 2;
                if ((unint64_t)v43 + 2 <= qword_268EB8508)
                {
                  *(_WORD *)off_268EB8500 = v43;
                  memcpy((char *)off_268EB8500 + 2, *(const void **)v81, v43);
                  int v23 = 0;
                  unsigned int v25 = v44;
LABEL_137:
                  int v24 = 583;
                  goto LABEL_244;
                }
LABEL_259:
                unsigned int v25 = 0;
                int v24 = 578;
              }
            }
            int v23 = 4;
LABEL_244:
            *(_DWORD *)long long buf = v23;
            *(void *)&uint8_t buf[8] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/util/ember-"
                                 "compatibility-functions.cpp";
            *(_DWORD *)&uint8_t buf[16] = v24;
LABEL_245:
            long long v79 = *(_OWORD *)&buf[4];
            int v80 = *(_DWORD *)&buf[20];
            if (v23)
            {
LABEL_246:
              int v71 = sub_244CC8484(0x1Du, "Zcl");
              if (os_log_type_enabled(v71, OS_LOG_TYPE_INFO))
              {
                *(_DWORD *)long long buf = v23;
                *(_OWORD *)&uint8_t buf[4] = v79;
                *(_DWORD *)&buf[20] = v80;
                unsigned __int8 v72 = sub_244CB7B34((const char **)buf, 1);
                *(_DWORD *)long long buf = 136315138;
                *(void *)&uint8_t buf[4] = v72;
                _os_log_impl(&dword_2446BD000, v71, OS_LOG_TYPE_INFO, "Failed to prepare data to write: %s", buf, 0xCu);
              }
              if (sub_244CC4E58(3u))
              {
                *(_DWORD *)long long buf = v23;
                *(_OWORD *)&uint8_t buf[4] = v79;
                *(_DWORD *)&buf[20] = v80;
                sub_244CB7B34((const char **)buf, 1);
                sub_244CC4DE0(0x1Du, 3);
              }
            }
            else
            {
LABEL_251:
              if (v25 <= *(unsigned __int16 *)(v75 + 12))
              {
                char v74 = *(unsigned char *)(v75 + 14);
                *(void *)long long buf = off_268EB8500;
                uint8_t buf[8] = v74;
                *(_DWORD *)&buf[12] = 0;
                *(void *)&uint8_t buf[16] = 0;
                buf[0] = sub_2446CD4E0();
                buf[1] = 0;
                sub_244CAB2B0(a4, (uint64_t)a2, buf, (__n128 *)a5);
                return;
              }
              char v73 = sub_244CC8484(0x1Du, "Zcl");
              if (os_log_type_enabled(v73, OS_LOG_TYPE_INFO))
              {
                *(_WORD *)long long buf = 0;
                _os_log_impl(&dword_2446BD000, v73, OS_LOG_TYPE_INFO, "Data to write exceedes the attribute size claimed.", buf, 2u);
              }
              if (sub_244CC4E58(3u)) {
                sub_244CC4DE0(0x1Du, 3);
              }
            }
            *(_WORD *)long long buf = 135;
            sub_244CAB2B0(a4, (uint64_t)a2, buf, (__n128 *)a5);
            return;
          }
        }
        else if (v30 == 12)
        {
          goto LABEL_126;
        }
LABEL_138:
        unsigned int v25 = 0;
        int v24 = 572;
        int v23 = 47;
        goto LABEL_244;
      default:
        int v41 = sub_244CC8484(0xDu, "DataManagement");
        if (os_log_type_enabled(v41, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)int v81 = 67109120;
          *(_DWORD *)&v81[4] = v21;
          _os_log_impl(&dword_2446BD000, v41, OS_LOG_TYPE_ERROR, "Attribute type %x not handled", v81, 8u);
        }
        if (sub_244CC4E58(1u)) {
          sub_244CC4DE0(0xDu, 1);
        }
        int v23 = 49;
        *(_DWORD *)long long buf = 49;
        *(void *)&uint8_t buf[8] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/util/ember-comp"
                             "atibility-functions.cpp";
        int v42 = 664;
        goto LABEL_239;
    }
  }
  uint64_t v26 = sub_244CC8484(0xDu, "DataManagement");
  if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR))
  {
    int v27 = *a2;
    int v28 = HIWORD(*((_DWORD *)a2 + 1));
    int v29 = (unsigned __int16)*((_DWORD *)a2 + 1);
    *(_DWORD *)long long buf = 67109632;
    *(_DWORD *)&uint8_t buf[4] = v27;
    *(_WORD *)&uint8_t buf[8] = 1024;
    *(_DWORD *)&buf[10] = v28;
    *(_WORD *)&buf[14] = 1024;
    *(_DWORD *)&uint8_t buf[16] = v29;
    _os_log_impl(&dword_2446BD000, v26, OS_LOG_TYPE_ERROR, "Write Version mismatch for Endpoint %x, Cluster 0x%04X_%04X", buf, 0x14u);
  }
  if (sub_244CC4E58(1u)) {
    sub_244CC4DE0(0xDu, 1);
  }
  *(_WORD *)long long buf = 146;
  sub_244CAB2B0(a4, (uint64_t)a2, buf, (__n128 *)a5);
}

BOOL sub_2447A4810(uint64_t a1, unsigned __int16 *a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 248);
  uint64_t v2 = (unsigned char *)(a1 + 248);
  if (v3
    && (unint64_t v5 = sub_2447A4A8C(v2), *(unsigned __int16 *)v5 == *a2)
    && *((_DWORD *)v5 + 1) == *((_DWORD *)a2 + 1)
    && *((_DWORD *)v5 + 2) == *((_DWORD *)a2 + 2))
  {
    return v5[12] == *((unsigned char *)a2 + 12);
  }
  else
  {
    return 0;
  }
}

BOOL sub_2447A4884(unsigned __int16 *a1, int a2)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  unint64_t v4 = (_DWORD *)sub_24485773C(a1);
  if (v4) {
    return *v4 == a2;
  }
  int v6 = sub_244CC8484(0xDu, "DataManagement");
  if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
  {
    int v7 = *a1;
    int v8 = HIWORD(*((_DWORD *)a1 + 1));
    int v9 = (unsigned __int16)*((_DWORD *)a1 + 1);
    *(_DWORD *)long long buf = 67109632;
    int v11 = v7;
    __int16 v12 = 1024;
    int v13 = v8;
    __int16 v14 = 1024;
    int v15 = v9;
    _os_log_impl(&dword_2446BD000, v6, OS_LOG_TYPE_ERROR, "Endpoint %x, Cluster 0x%04X_%04X not found in IsClusterDataVersionEqual!", buf, 0x14u);
  }
  BOOL result = sub_244CC4E58(1u);
  if (result)
  {
    sub_244CC4DE0(0xDu, 1);
    return 0;
  }
  return result;
}

BOOL sub_2447A49A8(int a1, int a2)
{
  int v3 = (int *)sub_244856AD0(a2, (uint64_t)v10);
  if (v10[0] || !v4) {
    return 0;
  }
  uint64_t v6 = 8 * v4 - 8;
  do
  {
    int v7 = *v3;
    v3 += 2;
    BOOL v5 = v7 == a1;
    BOOL v8 = v7 == a1 || v6 == 0;
    v6 -= 8;
  }
  while (!v8);
  return v5;
}

uint64_t sub_2447A4A18(unsigned __int16 *a1)
{
  uint64_t v2 = (uint64_t *)sub_244856270(*a1);
  if (v2)
  {
    if (sub_244856304(v2, *((_DWORD *)a1 + 1), 64, 0)) {
      return 0;
    }
    else {
      return -61;
    }
  }
  else
  {
    return 127;
  }
}

uint64_t sub_2447A4A6C(int a1, uint64_t a2)
{
  if (*(_DWORD *)(a2 + 4) != a1) {
    return 0;
  }
  uint64_t result = 1;
  *(unsigned char *)a2 = 1;
  return result;
}

unsigned char *sub_2447A4A8C(unsigned char *a1)
{
  if (!*a1) {
    sub_244E1FCF0();
  }
  return a1 + 4;
}

void sub_2447A4CF0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

unsigned char *sub_2447A4DF0(unsigned char *a1)
{
  if (!*a1) {
    sub_244E1FE60();
  }
  return a1 + 2;
}

void sub_2447A505C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12)
{
  _Unwind_Resume(a1);
}

void sub_2447A50B4(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = *(NSObject **)(a1 + 32);
  block[0] = MEMORY[0x263EF8330];
  block[1] = 3221225472;
  block[2] = sub_2447A51A8;
  block[3] = &unk_265194D60;
  objc_copyWeak(&v11, (id *)(a1 + 64));
  id v9 = *(id *)(a1 + 48);
  id v7 = *(id *)(a1 + 40);
  id v8 = v3;
  id v10 = *(id *)(a1 + 56);
  id v5 = v3;
  dispatch_async(v4, block);

  objc_destroyWeak(&v11);
}

void sub_2447A51A8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  if (WeakRetained)
  {
    if (WeakRetained[5]) {
      uint64_t v2 = *(void *)(a1 + 32);
    }
    else {
      uint64_t v2 = 0;
    }
    (*(void (**)(void, uint64_t, void))(*(void *)(a1 + 48) + 16))(*(void *)(a1 + 48), v2, *(void *)(a1 + 40));
    (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
  }
}

void sub_2447A5234(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2447A5444(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447A55BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447A5730(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447A57D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2447A5874(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447A5A0C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447A5A78()
{
}

void sub_2447A5B38(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447A5BD0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447A5D7C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447A5EE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, objc_super a9)
{
  a9.super_class = (Class)MTRDownloads;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_2447A60A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447A61BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447A63A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  _Unwind_Resume(a1);
}

void sub_2447A6460(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2447A653C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447A69E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11, void *a12, void *a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27)
{
  _Unwind_Resume(a1);
}

void sub_2447A6AA8(uint64_t a1, void *a2)
{
  id v3 = a2;
  v7[0] = MEMORY[0x263EF8330];
  v7[1] = 3221225472;
  v7[2] = sub_2447A6B64;
  void v7[3] = &unk_265194DB0;
  uint64_t v4 = *(void **)(a1 + 32);
  void v7[4] = *(void *)(a1 + 40);
  id v8 = v3;
  __int16 v9 = *(_WORD *)(a1 + 48);
  id v5 = v3;
  objc_msgSend_asyncDispatchToMatterQueue_errorHandler_(v4, v6, (uint64_t)v7, 0);
}

void sub_2447A6B4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_2447A6B64(uint64_t a1, const char *a2)
{
  uint64_t v3 = objc_msgSend_remove_(*(void **)(*(void *)(a1 + 32) + 16), a2, *(void *)(a1 + 40));
  if (*(_WORD *)(a1 + 48))
  {
    uint64_t v4 = *(void **)(a1 + 40);
    sub_2447A6BB8(v3, v4);
  }
}

void sub_2447A6BB8(uint64_t a1, void *a2)
{
  id v4 = a2;
  BOOL v2 = sub_244D6A434("/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTRDiagnosticLogsDownloader.mm", 633);
  uint64_t v3 = sub_244D6A430(v2);
  (*(void (**)(uint64_t, void (*)(uint64_t, void *), id))(*(void *)v3 + 72))(v3, sub_2447A7FF4, v4);
}

void sub_2447A6C44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2447A6C58(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 172;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/M"
                         "TRDiagnosticLogsDownloader.mm";
  int v4 = 444;
  BOOL v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_2447A6CD0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2447A6CE0(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270F9A6D0](*(void *)(a1 + 32), sel_checkInteractionModelResponse_error_, a2);
}

void sub_2447A6CF0(uint64_t a1, void *a2, unsigned int a3)
{
  id v6 = a2;
  BOOL v4 = sub_244D6A434("/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTRDiagnosticLogsDownloader.mm", 627);
  uint64_t v5 = sub_244D6A430(v4);
  (*(void (**)(uint64_t, uint64_t, void (*)(uint64_t, void *), id))(*(void *)v5 + 40))(v5, 1000 * a3, sub_2447A7FF4, v6);
}

void sub_2447A6D90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2447A6E08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2447A6FF4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447A7238(_Unwind_Exception *a1)
{
  id v8 = v7;

  _Unwind_Resume(a1);
}

void sub_2447A7410(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2447A7470(uint64_t a1, void *a2)
{
  *(void *)a1 = &unk_26F944BF8;
  id v3 = a2;
  *(void *)(a1 + 8) = 0;
  objc_storeWeak((id *)(a1 + 8), v3);

  return a1;
}

uint64_t sub_2447A74CC(uint64_t a1)
{
  *(void *)a1 = &unk_26F944BF8;
  BOOL v2 = (id *)(a1 + 8);
  objc_storeWeak((id *)(a1 + 8), 0);
  objc_destroyWeak(v2);
  return a1;
}

uint64_t sub_2447A7524(uint64_t a1)
{
  *(void *)a1 = &unk_26F944BF8;
  BOOL v2 = (id *)(a1 + 8);
  objc_storeWeak((id *)(a1 + 8), 0);
  objc_destroyWeak(v2);
  return a1;
}

void sub_2447A757C(uint64_t a1)
{
  *(void *)a1 = &unk_26F944BF8;
  uint64_t v1 = (id *)(a1 + 8);
  objc_storeWeak((id *)(a1 + 8), 0);
  objc_destroyWeak(v1);

  JUMPOUT(0x245695FA0);
}

void sub_2447A75F4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (id *)(a1 + 8);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 8));

  if (WeakRetained)
  {
    uint64_t v7 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 40))(a2);
    uint64_t v9 = v8;
    id v10 = [NSString alloc];
    __int16 v12 = objc_msgSend_initWithBytes_length_encoding_(v10, v11, v7, v9, 4);
    if (v12)
    {
      int v13 = NSNumber;
      uint64_t v14 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 48))(a2);
      uint64_t v16 = objc_msgSend_numberWithUnsignedChar_(v13, v15, v14);
      __int16 v17 = NSNumber;
      uint64_t v18 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 56))(a2);
      long long v20 = objc_msgSend_numberWithUnsignedLongLong_(v17, v19, v18);
      v26[0] = MEMORY[0x263EF8330];
      v26[1] = 3221225472;
      v26[2] = sub_2447A7890;
      v26[3] = &unk_265194E48;
      v26[4] = a2;
      int v21 = (void *)MEMORY[0x2456969D0](v26);
      v25[0] = MEMORY[0x263EF8330];
      v25[1] = 3221225472;
      v25[2] = sub_2447A7980;
      v25[3] = &unk_265194E48;
      v25[4] = a2;
      char v22 = (void *)MEMORY[0x2456969D0](v25);
      id v23 = objc_loadWeakRetained(v5);
      objc_msgSend_handleBDXTransferSessionBeginForFileDesignator_fabricIndex_nodeID_completion_abortHandler_(v23, v24, (uint64_t)v12, v16, v20, v21, v22);

      *(_DWORD *)a3 = 0;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/MTRDiagnosticLogsDownloader.mm";
      *(_DWORD *)(a3 + 16) = 567;
    }
    else
    {
      *(_DWORD *)a3 = 3;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/MTRDiagnosticLogsDownloader.mm";
      *(_DWORD *)(a3 + 16) = 540;
    }
  }
  else
  {
    *(_DWORD *)a3 = 3;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "MTRDiagnosticLogsDownloader.mm";
    *(_DWORD *)(a3 + 16) = 536;
  }
}

void sub_2447A785C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447A7890(uint64_t a1, void *a2)
{
  id v3 = a2;
  sub_244D6A434("/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTRDiagnosticLogsDownloader.mm", 546);
  if (v3)
  {
    long long v8 = 0uLL;
    uint64_t v9 = 0;
    sub_244B27864(v3, (uint64_t)&v8);
    uint64_t v4 = *(void *)(a1 + 32);
    long long v6 = v8;
    uint64_t v7 = v9;
    (*(void (**)(void *__return_ptr))(*(void *)v4 + 24))(v5);
  }
  else
  {
    (*(void (**)(long long *__return_ptr))(**(void **)(a1 + 32) + 16))(&v8);
  }
}

void sub_2447A7964(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447A7980(uint64_t a1, void *a2)
{
  id v3 = a2;
  sub_244D6A434("/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTRDiagnosticLogsDownloader.mm", 557);
  long long v8 = 0uLL;
  uint64_t v9 = 0;
  sub_244B27864(v3, (uint64_t)&v8);
  uint64_t v4 = *(void *)(a1 + 32);
  long long v6 = v8;
  uint64_t v7 = v9;
  (*(void (**)(void *__return_ptr))(*(void *)v4 + 24))(v5);
}

void sub_2447A7A20(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447A7A38(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = (id *)(a1 + 8);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 8));

  if (WeakRetained)
  {
    uint64_t v9 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 40))(a2);
    uint64_t v11 = v10;
    id v12 = [NSString alloc];
    uint64_t v14 = objc_msgSend_initWithBytes_length_encoding_(v12, v13, v9, v11, 4);
    if (v14)
    {
      if (*(_DWORD *)a3)
      {
        long long v26 = *(_OWORD *)a3;
        uint64_t v27 = *(void *)(a3 + 16);
        int v15 = sub_244B26908((uint64_t)MTRError, &v26);
      }
      else
      {
        int v15 = 0;
      }
      uint64_t v16 = NSNumber;
      uint64_t v17 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 48))(a2);
      uint64_t v19 = objc_msgSend_numberWithUnsignedChar_(v16, v18, v17);
      long long v20 = NSNumber;
      uint64_t v21 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 56))(a2);
      id v23 = objc_msgSend_numberWithUnsignedLongLong_(v20, v22, v21);
      id v24 = objc_loadWeakRetained(v7);
      objc_msgSend_handleBDXTransferSessionEndForFileDesignator_fabricIndex_nodeID_error_(v24, v25, (uint64_t)v14, v19, v23, v15);

      *(_DWORD *)a4 = 0;
      *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/MTRDiagnosticLogsDownloader.mm";
      *(_DWORD *)(a4 + 16) = 589;
    }
    else
    {
      *(_DWORD *)a4 = 3;
      *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/MTRDiagnosticLogsDownloader.mm";
      *(_DWORD *)(a4 + 16) = 576;
    }
  }
  else
  {
    *(_DWORD *)a4 = 3;
    *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "MTRDiagnosticLogsDownloader.mm";
    *(_DWORD *)(a4 + 16) = 572;
  }
}

void sub_2447A7C34(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447A7C6C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = (id *)(a1 + 8);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 8));

  if (WeakRetained)
  {
    uint64_t v9 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 40))(a2);
    uint64_t v11 = v10;
    id v12 = [NSString alloc];
    uint64_t v14 = objc_msgSend_initWithBytes_length_encoding_(v12, v13, v9, v11, 4);
    if (v14)
    {
      int v15 = NSNumber;
      uint64_t v16 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 48))(a2);
      uint64_t v18 = objc_msgSend_numberWithUnsignedChar_(v15, v17, v16);
      uint64_t v19 = NSNumber;
      uint64_t v20 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 56))(a2);
      char v22 = objc_msgSend_numberWithUnsignedLongLong_(v19, v21, v20);
      id v24 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v23, *a3, a3[1]);
      if (v24)
      {
        v28[0] = MEMORY[0x263EF8330];
        v28[1] = 3221225472;
        v28[2] = sub_2447A7F04;
        v28[3] = &unk_265194E48;
        void v28[4] = a2;
        unsigned int v25 = (void *)MEMORY[0x2456969D0](v28);
        id v26 = objc_loadWeakRetained(v7);
        objc_msgSend_handleBDXTransferSessionDataForFileDesignator_fabricIndex_nodeID_data_completion_(v26, v27, (uint64_t)v14, v18, v22, v24, v25);

        *(_DWORD *)a4 = 0;
        *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/MTRDiagnosticLogsDownloader.mm";
        *(_DWORD *)(a4 + 16) = 622;
      }
      else
      {
        *(_DWORD *)a4 = 3;
        *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/MTRDiagnosticLogsDownloader.mm";
        *(_DWORD *)(a4 + 16) = 604;
      }
    }
    else
    {
      *(_DWORD *)a4 = 3;
      *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/MTRDiagnosticLogsDownloader.mm";
      *(_DWORD *)(a4 + 16) = 598;
    }
  }
  else
  {
    *(_DWORD *)a4 = 3;
    *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "MTRDiagnosticLogsDownloader.mm";
    *(_DWORD *)(a4 + 16) = 594;
  }
}

void sub_2447A7EC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447A7F04(uint64_t a1, void *a2)
{
  id v3 = a2;
  sub_244D6A434("/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTRDiagnosticLogsDownloader.mm", 607);
  if (v3)
  {
    long long v8 = 0uLL;
    uint64_t v9 = 0;
    sub_244B27864(v3, (uint64_t)&v8);
    uint64_t v4 = *(void *)(a1 + 32);
    long long v6 = v8;
    uint64_t v7 = v9;
    (*(void (**)(void *__return_ptr))(*(void *)v4 + 24))(v5);
  }
  else
  {
    (*(void (**)(long long *__return_ptr))(**(void **)(a1 + 32) + 32))(&v8);
  }
}

void sub_2447A7FD8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447A7FF4(uint64_t a1, void *a2)
{
  sub_244D6A434("/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTRDiagnosticLogsDownloader.mm", 639);
  id v3 = a2;
  if (v3)
  {
    LODWORD(v11) = 50;
    *((void *)&v11 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/MTRDiagnosticLogsDownloader.mm";
    int v12 = 648;
    uint64_t v4 = sub_244B26908((uint64_t)MTRError, &v11);
    uint64_t v7 = objc_msgSend_abortHandler(v3, v5, v6);

    if (v7)
    {
      objc_msgSend_abortHandler(v3, v8, v9);
      uint64_t v10 = (void (**)(void, void))objc_claimAutoreleasedReturnValue();
      ((void (**)(void, void *))v10)[2](v10, v4);
    }
    else
    {
      objc_msgSend_failure_(v3, v8, (uint64_t)v4);
    }
  }
}

void sub_2447A80C4(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_2447A80F0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = sub_244D879D8(*a3);
  v7[0] = 1;
  uint64_t v8 = v6;
  (*(void (**)(uint64_t))(*(void *)v6 + 24))(v6);
  (*(void (**)(uint64_t, uint64_t, char *, void, void))(v5 + 16))(v5, a2, v7, 0, 0);
  sub_24479DF48((uint64_t)v7);
  sub_2447A81A4((int *)a1);
}

void sub_2447A8190(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_2447A81A4(int *a1)
{
  if (!*a1) {
    sub_244E1FF18();
  }
  int v1 = *a1 - 1;
  *a1 = v1;
  if (!v1)
  {
    BOOL v2 = (void *)sub_2447A831C((uint64_t)a1);
    j__free(v2);
  }
}

void sub_2447A81EC(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 42))
  {
    uint64_t v4 = NSNumber;
    LOWORD(v5) = *(_WORD *)sub_2447A82F8((unsigned char *)(a2 + 42));
    uint64_t v8 = objc_msgSend_numberWithDouble_(v4, v6, v7, (double)v5 / 1000.0);
  }
  else
  {
    uint64_t v8 = 0;
  }
  uint64_t v9 = *(void *)(a1 + 8);
  v13[0] = 0;
  long long v11 = *(_OWORD *)(a2 + 16);
  uint64_t v12 = *(void *)(a2 + 32);
  uint64_t v10 = sub_244B26908((uint64_t)MTRError, &v11);
  (*(void (**)(uint64_t, void, unsigned char *, void *, void *))(v9 + 16))(v9, 0, v13, v10, v8);

  sub_24479DF48((uint64_t)v13);
  sub_2447A81A4((int *)a1);
}

void sub_2447A82CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

unsigned char *sub_2447A82F8(unsigned char *a1)
{
  if (!*a1) {
    sub_244E1FFE8();
  }
  return a1 + 2;
}

uint64_t sub_2447A831C(uint64_t a1)
{
  uint64_t v2 = a1 + 16;
  id v3 = *(void (**)(uint64_t))(a1 + 32);
  if (v3)
  {
    *(void *)(a1 + 32) = 0;
    v3(a1 + 16);
  }
  uint64_t v4 = *(void (**)(uint64_t))(a1 + 72);
  if (v4)
  {
    *(void *)(a1 + 72) = 0;
    v4(a1 + 56);
    unint64_t v5 = *(void (**)(uint64_t))(a1 + 72);
    if (v5)
    {
      *(void *)(a1 + 72) = 0;
      v5(a1 + 56);
    }
  }
  uint64_t v6 = *(void (**)(uint64_t))(a1 + 32);
  if (v6)
  {
    *(void *)(a1 + 32) = 0;
    v6(v2);
  }

  return a1;
}

uint64_t sub_2447A83B4(uint64_t a1)
{
  uint64_t result = 32;
  if ((int)a1 <= 50)
  {
    switch((int)a1)
    {
      case 24:
        return result;
      case 25:
        goto LABEL_9;
      case 26:
      case 28:
      case 29:
      case 30:
        goto LABEL_11;
      case 27:
        return 35;
      case 31:
        return 39;
      default:
        if (a1 == 48) {
          return result;
        }
        if (a1 == 49) {
LABEL_9:
        }
          uint64_t result = 33;
        else {
LABEL_11:
        }
          uint64_t result = a1;
        break;
    }
  }
  else
  {
    switch((int)a1)
    {
      case 192:
      case 193:
      case 194:
      case 231:
        goto LABEL_9;
      case 195:
      case 199:
      case 210:
      case 228:
      case 232:
      case 233:
      case 235:
      case 236:
      case 237:
      case 239:
        return 35;
      case 196:
      case 200:
      case 208:
      case 209:
      case 227:
      case 229:
      case 240:
        return 39;
      case 197:
      case 230:
      case 238:
        return result;
      case 198:
      case 201:
      case 202:
      case 203:
      case 204:
      case 205:
      case 206:
      case 207:
      case 211:
      case 212:
      case 213:
      case 214:
      case 215:
      case 221:
      case 222:
      case 223:
      case 224:
      case 225:
      case 226:
      case 234:
        goto LABEL_11;
      case 216:
        uint64_t result = 41;
        break;
      case 217:
      case 218:
      case 219:
      case 220:
        uint64_t result = 47;
        break;
      default:
        if (a1 != 51) {
          goto LABEL_11;
        }
        break;
    }
  }
  return result;
}

void sub_2447A865C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447A870C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447A88B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447A8960(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447A8AD8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447A8B7C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447A8CD8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447A8D7C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447A8F38(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447A8FEC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447A9204(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447A92C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447A9474(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447A9518(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447A961C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447A96C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447A9778(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447A98AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447A9978(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447A9A2C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447A9BE4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447A9C94(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447A9E90(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447A9F50(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447AA09C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447AA128(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447AA1E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447AA3D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447AA490(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447AA6C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447AA784(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447AA98C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447AAA40(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447AAC8C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447AAD50(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447AAED8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447AAFA4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447AB058(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447AB218(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447AB2C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447AB498(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447AB54C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447AB6E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447AB784(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447AB8E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447AB984(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447ABAB4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447ABB50(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447ABC30(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447ABCFC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447ABD98(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447ABE80(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447ABF1C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447AC05C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447AC10C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447AC2DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447AC390(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447AC524(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447AC5C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447AC77C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447AC830(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447AC970(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447AC9FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447ACAA0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447ACBA8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447ACC34(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447ACCD8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447ACDE0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447ACE6C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447ACF10(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447AD018(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447AD0A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447AD148(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447AD250(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447AD2DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447AD380(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447AD488(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447AD514(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447AD5B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447AD714(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447AD7B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447AD8C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447AD994(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447ADA90(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447ADC3C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447ADD88(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447ADE88(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447AE07C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447AE188(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447AE280(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447AE47C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447AE5C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447AE6C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447AE880(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447AE90C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447AE9B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447AEAB8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447AEB44(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447AEBE8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447AECF0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447AED7C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447AEE20(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447AEF50(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447AEFEC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447AF184(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447AF244(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447AF420(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447AF4E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447AF87C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447AF980(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447AFDE4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447AFED8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B02AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B0390(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B05CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B0670(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B07A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B083C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B08FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B0988(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B0A2C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B0B5C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B0BF8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B0D0C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B0DB0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B0EE8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B0F84(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B10C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B1174(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B12EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B1390(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B1518(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B15C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B176C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B181C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B1960(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B1A2C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B1AC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B1BDC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B1C80(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B1DA8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B1E6C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B1F64(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B2008(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B2138(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B21D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B22B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B2378(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B2444(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B24E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B25C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B2664(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B274C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B27E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B28D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B296C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B2A54(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B2AF0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B2BD8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B2C74(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B2D5C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B2DF8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B2F0C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B2FB0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B310C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B31B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B32E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B33F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B34C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B3660(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B370C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B37EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B3938(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B3A04(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B3AB8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B3C78(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B3D28(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B3FA8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B40D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B42FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B43A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B44FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B45A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B46D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B476C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B48D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B498C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B4B4C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B4BFC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B4D74(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B4E18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B4EF8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B4F64(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B5000(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B5140(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B51F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B5368(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B540C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B5518(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B55C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B5674(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B57EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B5890(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B599C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B5A48(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B5AF8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B5C70(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B5D14(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B5E20(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B5ECC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B5F7C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B60F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B6198(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B62A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B6350(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B6400(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B6578(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B661C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B6728(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B67D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B6884(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B69FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B6AA0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B6BAC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B6C58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B6D08(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B6ED8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B6F8C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B7120(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B71C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B72D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B737C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B742C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B7578(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B7614(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B76FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B7798(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B7880(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B791C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B79FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B7AC0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B7B84(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B7C48(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B7D0C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B7DD8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B7E74(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B7F5C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B7FF8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B80D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B8228(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B82DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B8470(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B8514(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B8620(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B86CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B877C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B8920(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B89D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B8B48(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B8BEC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B8CCC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B8D38(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B8DD4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B8F14(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B8FC4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B9168(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B9218(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B9390(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B9434(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B9514(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B9580(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B961C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B975C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B980C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B9AB8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B9B98(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B9D54(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B9DE0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447B9E84(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BA090(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BA154(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BA328(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BA3CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BA530(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BA5D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BA730(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BA7D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BA904(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BA9A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BAAB4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BAB58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BAC88(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BAD24(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BAF40(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BB014(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BB1D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BB2C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BB384(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BB534(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BB5D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BB8C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BB9B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BBB90(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BBBFC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BBC98(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BBEB4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BBF88(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BC14C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BC238(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BC2F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BC4F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BC5AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BC7C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BC884(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BCA2C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BCAD0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BCC24(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BCCC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BCED4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BCF98(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BD0E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BD154(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BD1F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BD2D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BD39C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BD438(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BD520(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BD5BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BD6A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BD740(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BD828(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BD8C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BDA28(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BDADC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BDD4C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BDE1C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BDFFC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BE148(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BE250(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BE42C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BE518(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BE5E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BE7A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BE92C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BEA18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BEC58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BECFC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BEE38(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BEF64(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BF03C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BF1B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BF224(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BF2D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BF37C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BF3E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BF498(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BF564(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BF630(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BF6FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BF8F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BF9A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BFB94(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BFC48(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BFDDC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447BFE80(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C029C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C03C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C06D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C0840(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C0920(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C0BC4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C0C84(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C0E60(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C0F10(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C1054(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C1178(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C1228(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C136C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C1438(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C14D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C1614(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C16C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C17D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C1864(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C1908(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C1A38(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C1AD4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C1C6C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C1D2C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C1F34(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C1FE8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C2200(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C22C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C24C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C257C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C2698(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C2704(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C27B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C28D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C2978(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C2AD4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C2B78(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C2C84(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C2D30(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C2DE0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C2F58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C2FFC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C3108(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C31B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C3264(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C33DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C3480(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C358C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C3638(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C36E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C3860(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C3904(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C3A60(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C3B04(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C3C34(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C3CD0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C3DB8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C3E54(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C4018(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C40DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C4384(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C4454(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C4718(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C47E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C4A28(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C4ADC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C4CF4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C4DB4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C5040(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C5110(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C52F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C539C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C54F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C5594(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C5694(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C5740(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C57F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C5970(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C5A14(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C5BC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C5C7C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C5DDC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C5EA0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C5F64(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C6028(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C60EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C61B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C6274(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C6338(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C63FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C64C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C6584(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C6648(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C670C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C67D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C6894(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C6958(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C6A1C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C6BC4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C6CA8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C6E4C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C6F58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C7058(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C72EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C73C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C75C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C7674(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C7818(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C78C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C7A6C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C7B1C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C7CC0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C7D70(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C7EBC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C7F58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C8028(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C80F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C81C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C8360(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C8404(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C8560(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C8604(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C8760(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C8804(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C8A3C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C8B0C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C8D68(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C9014(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C9144(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C94A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C9550(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C96C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C9764(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C98C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C9964(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C9B20(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C9BD4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C9D70(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C9E14(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C9F2C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447C9FD8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CA0A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CA224(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CA2C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CA424(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CA4C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CA624(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CA6C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CA818(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CA984(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CAA90(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CAD1C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CADD0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CAF90(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CB040(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CB1EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CB29C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CB3B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CB464(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CB514(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CB68C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CB730(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CB8C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CB970(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CBA70(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CBADC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CBB78(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CBCB0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CBD60(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CBF90(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CC054(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CC254(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CC304(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CC484(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CC528(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CC624(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CC6B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CC754(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CC8B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CC95C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CCA94(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CCB30(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CCC44(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CCCE8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CCE10(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CCF08(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CCFAC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CD0C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CD190(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CD244(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CD404(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CD4B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CD684(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CD738(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CD868(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CD8F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CD998(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CDA90(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CDB1C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CDBC0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CDD1C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CDDC0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CDF58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CE164(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CE268(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CE508(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CE654(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CE728(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CE8D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CE97C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CEA2C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CEB50(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CEBFC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CECAC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CEE00(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CEECC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CEF80(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CF21C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CF2F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CF578(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CF638(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CF840(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CF8F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CFC14(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447CFD04(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447D0038(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447D0108(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447D03CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447D049C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447D0630(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447D06FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447D07B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447D0A20(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447D0AF0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447D0C84(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447D0D50(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447D0E04(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447D1074(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447D1144(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447D1334(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447D13D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447D1534(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447D15D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447D1730(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447D187C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447D1950(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447D1B0C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447D1BD8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447D1C8C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447D1E78(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447D1F2C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447D20C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447D222C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447D2330(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447D2560(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447D26AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447D2780(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447D2B34(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447D2C28(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447D2E4C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447D2F18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447D2FCC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447D3180(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447D32AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447D337C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447D34EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447D3558(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447D35F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447D36A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447D3730(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447D37E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447D3944(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447D3A50(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447D3B14(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447D3CB4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447D3D50(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447D3E38(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447D3ED4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447D3FE8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447D408C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447D42A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2447D43E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447D4498(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447D454C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447D4628(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447D4730(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447D4A94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_2447D4B44(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 3;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTRBaseDevice.mm";
  int v4 = 336;
  uint64_t v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void *))(v1 + 16))(v1, v2);
}

void sub_2447D4BB8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447D4BC8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 3;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTRBaseDevice.mm";
  int v4 = 346;
  uint64_t v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void *))(v1 + 16))(v1, v2);
}

void sub_2447D4C3C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447D4C4C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  id v7 = a4;
  id v8 = a5;
  if (!v7) {
    operator new();
  }
  uint64_t v9 = v8;
  uint64_t v10 = *(NSObject **)(a1 + 32);
  block[0] = MEMORY[0x263EF8330];
  block[1] = 3221225472;
  block[2] = sub_2447D55F8;
  block[3] = &unk_265194F48;
  id v13 = *(id *)(a1 + 64);
  id v12 = v7;
  dispatch_async(v10, block);
}

void sub_2447D53B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,void *a30,void *a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,void *a36,void *a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *a42,void *a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,void *a48,void *a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,void *a54,void *a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,char a62)
{
  (*(void (**)(uint64_t))(*(void *)v64 + 8))(v64);
  sub_2447D5AF4(&a56);

  if (v63) {
    (*(void (**)(uint64_t))(*(void *)v63 + 8))(v63);
  }
  sub_244D87F44(&a62);
  if (v62) {
    MEMORY[0x245695FA0](v62, 0x1000C40FD6F1FF4);
  }
  if (a14) {
    MEMORY[0x245695FA0](a14, 0x1000C403E1C8BA9);
  }

  _Unwind_Resume(a1);
}

uint64_t sub_2447D55F8(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

void sub_2447D560C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    objc_msgSend_setCppClusterStateCache_(WeakRetained, v1, 0);
    objc_msgSend_setBaseDevice_(WeakRetained, v2, 0);
  }
}

void sub_2447D566C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2447D5680(uint64_t a1, void *a2)
{
  id v3 = a2;
  v7[0] = MEMORY[0x263EF8330];
  v7[1] = 3221225472;
  v7[2] = sub_2447D5730;
  void v7[3] = &unk_265194F48;
  int v4 = *(NSObject **)(a1 + 32);
  id v5 = *(id *)(a1 + 40);
  id v8 = v3;
  id v9 = v5;
  id v6 = v3;
  dispatch_async(v4, v7);
}

uint64_t sub_2447D5730(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, *(void *)(a1 + 32));
  }
  return result;
}

void sub_2447D5750(uint64_t a1, void *a2)
{
  id v3 = a2;
  v7[0] = MEMORY[0x263EF8330];
  v7[1] = 3221225472;
  v7[2] = sub_2447D5800;
  void v7[3] = &unk_265194F48;
  int v4 = *(NSObject **)(a1 + 32);
  id v5 = *(id *)(a1 + 40);
  id v8 = v3;
  id v9 = v5;
  id v6 = v3;
  dispatch_async(v4, v7);
}

uint64_t sub_2447D5800(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, *(void *)(a1 + 32));
  }
  return result;
}

void sub_2447D5820(uint64_t a1, void *a2)
{
  id v3 = a2;
  v7[0] = MEMORY[0x263EF8330];
  v7[1] = 3221225472;
  v7[2] = sub_2447D58D0;
  void v7[3] = &unk_265194F48;
  int v4 = *(NSObject **)(a1 + 32);
  id v5 = *(id *)(a1 + 40);
  id v8 = v3;
  id v9 = v5;
  id v6 = v3;
  dispatch_async(v4, v7);
}

uint64_t sub_2447D58D0(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

void sub_2447D58E4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  block[0] = MEMORY[0x263EF8330];
  block[1] = 3221225472;
  block[2] = sub_2447D59B8;
  block[3] = &unk_265194FE8;
  id v7 = *(NSObject **)(a1 + 32);
  id v8 = *(id *)(a1 + 40);
  id v13 = v6;
  id v14 = v8;
  id v12 = v5;
  id v9 = v6;
  id v10 = v5;
  dispatch_async(v7, block);
}

uint64_t sub_2447D59B8(void *a1)
{
  uint64_t result = a1[6];
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, void))(result + 16))(result, a1[4], a1[5]);
  }
  return result;
}

void sub_2447D59D8(uint64_t a1)
{
  block[0] = MEMORY[0x263EF8330];
  block[1] = 3221225472;
  block[2] = sub_2447D5A60;
  block[3] = &unk_265194E00;
  uint64_t v1 = *(NSObject **)(a1 + 32);
  id v3 = *(id *)(a1 + 40);
  dispatch_async(v1, block);
}

uint64_t sub_2447D5A60(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_2447D5A78(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  long long v3 = *(_OWORD *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 56);
  uint64_t v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void *))(v1 + 16))(v1, v2);
}

void sub_2447D5AE4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t *sub_2447D5AF4(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    uint64_t v3 = sub_2447E7674(v2);
    MEMORY[0x245695FA0](v3, 0x10A1C40B03ED83DLL);
  }
  return a1;
}

id sub_2447D5B3C(uint64_t a1, void *a2)
{
  uint64_t v109 = *MEMORY[0x263EF8340];
  id v3 = a2;
  int v4 = sub_244CB3B68(a1);
  int v5 = v4;
  id v6 = @"Structure";
  switch(v4)
  {
    case 4:
      *(void *)&long long v104 = 0;
      memset(v107, 0, sizeof(v107));
      uint64_t v108 = 0;
      sub_244CB3EFC(a1, &v104, (uint64_t)v107);
      if (*(_DWORD *)v107)
      {
        id v8 = sub_244CC8484(0, "NotSpecified");
        if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
        {
          long long v96 = *(_OWORD *)v107;
          uint64_t v97 = v108;
          id v9 = sub_244CB7B34((const char **)&v96, 1);
          *(_DWORD *)long long buf = 136315138;
          *(void *)&uint8_t buf[4] = v9;
          _os_log_impl(&dword_2446BD000, v8, OS_LOG_TYPE_ERROR, "Error(%s): TLV unsigned integer decoding failed", buf, 0xCu);
        }

        if (sub_244CC4E58(1u))
        {
          long long v94 = *(_OWORD *)v107;
          uint64_t v95 = v108;
          sub_244CB7B34((const char **)&v94, 1);
          sub_244CC4DE0(0, 1);
        }
        goto LABEL_45;
      }
      uint64_t v47 = objc_msgSend_numberWithUnsignedLongLong_(NSNumber, v7, v104);
      int v30 = sub_2447D6B2C(@"UnsignedInteger", v47, v3);

      goto LABEL_46;
    case 5:
    case 6:
    case 7:
    case 9:
    case 11:
    case 13:
    case 14:
    case 15:
    case 17:
    case 18:
    case 19:
      goto LABEL_13;
    case 8:
      LOBYTE(v104) = 0;
      memset(v107, 0, sizeof(v107));
      uint64_t v108 = 0;
      sub_244CB3C0C(a1, (char *)&v104, (uint64_t)v107);
      if (!*(_DWORD *)v107)
      {
        uint64_t v48 = objc_msgSend_numberWithBool_(NSNumber, v14, v104);
        int v30 = sub_2447D6B2C(@"Boolean", v48, v3);

        goto LABEL_46;
      }
      int v15 = sub_244CC8484(0, "NotSpecified");
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
      {
        long long v92 = *(_OWORD *)v107;
        uint64_t v93 = v108;
        uint64_t v16 = sub_244CB7B34((const char **)&v92, 1);
        *(_DWORD *)long long buf = 136315138;
        *(void *)&uint8_t buf[4] = v16;
        _os_log_impl(&dword_2446BD000, v15, OS_LOG_TYPE_ERROR, "Error(%s): TLV BOOLean decoding failed", buf, 0xCu);
      }

      if (sub_244CC4E58(1u))
      {
        long long v90 = *(_OWORD *)v107;
        uint64_t v91 = v108;
        sub_244CB7B34((const char **)&v90, 1);
        sub_244CC4DE0(0, 1);
      }
      goto LABEL_45;
    case 10:
      *(_DWORD *)int v102 = 0;
      memset(v107, 0, sizeof(v107));
      uint64_t v108 = 0;
      sub_244CB401C(a1, v102, (uint64_t)v107);
      if (!*(_DWORD *)v107)
      {
        LODWORD(v19) = *(_DWORD *)v102;
        uint64_t v49 = objc_msgSend_numberWithFloat_(NSNumber, v17, v18, v19);
        int v30 = sub_2447D6B2C(@"Float", v49, v3);

        goto LABEL_46;
      }
      *(void *)&long long v104 = 0;
      sub_244CB4060(a1, (double *)&v104, (uint64_t)buf);
      *(_OWORD *)long long v107 = *(_OWORD *)buf;
      uint64_t v108 = v106;
      if (!*(_DWORD *)buf)
      {
        uint64_t v64 = objc_msgSend_numberWithDouble_(NSNumber, v20, v21, *(double *)&v104);
        int v30 = sub_2447D6B2C(@"Double", v64, v3);

        goto LABEL_46;
      }
      char v22 = sub_244CC8484(0, "NotSpecified");
      if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
      {
        long long v88 = *(_OWORD *)v107;
        uint64_t v89 = v108;
        id v23 = sub_244CB7B34((const char **)&v88, 1);
        *(_DWORD *)long long buf = 136315138;
        *(void *)&uint8_t buf[4] = v23;
        _os_log_impl(&dword_2446BD000, v22, OS_LOG_TYPE_ERROR, "Error(%s): TLV floating point decoding failed", buf, 0xCu);
      }

      if (sub_244CC4E58(1u))
      {
        long long v86 = *(_OWORD *)v107;
        uint64_t v87 = v108;
        sub_244CB7B34((const char **)&v86, 1);
        sub_244CC4DE0(0, 1);
      }
      goto LABEL_45;
    case 12:
      long long v104 = 0uLL;
      memset(buf, 0, sizeof(buf));
      uint64_t v106 = 0;
      sub_244CB41F0(a1, &v104, buf);
      if (*(_DWORD *)buf)
      {
        id v24 = sub_244CC8484(0, "NotSpecified");
        if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
        {
          long long v84 = *(_OWORD *)buf;
          uint64_t v85 = v106;
          unsigned int v25 = sub_244CB7B34((const char **)&v84, 1);
          *(_DWORD *)long long v107 = 136315138;
          *(void *)&v107[4] = v25;
          _os_log_impl(&dword_2446BD000, v24, OS_LOG_TYPE_ERROR, "Error(%s): TLV UTF8String decoding failed", v107, 0xCu);
        }

        if (sub_244CC4E58(1u))
        {
          long long v82 = *(_OWORD *)buf;
          uint64_t v83 = v106;
          sub_244CB7B34((const char **)&v82, 1);
          sub_244CC4DE0(0, 1);
        }
        goto LABEL_45;
      }
      long long v50 = v104;
      id v51 = [NSString alloc];
      id v53 = objc_msgSend_initWithBytes_length_encoding_(v51, v52, v50, *((void *)&v50 + 1), 4);
      if (v53)
      {
        int v30 = sub_2447D6B2C(@"UTF8String", v53, v3);
      }
      else
      {
        unsigned __int16 v65 = sub_244CC8484(0, "NotSpecified");
        if (os_log_type_enabled(v65, OS_LOG_TYPE_ERROR))
        {
          *(_OWORD *)long long v107 = *(_OWORD *)buf;
          uint64_t v108 = v106;
          *(_DWORD *)int v102 = 136315138;
          long long v103 = sub_244CB7B34((const char **)v107, 1);
          _os_log_impl(&dword_2446BD000, v65, OS_LOG_TYPE_ERROR, "Error(%s): TLV UTF8String value is not actually UTF-8", v102, 0xCu);
        }

        if (sub_244CC4E58(1u))
        {
          *(_OWORD *)long long v107 = *(_OWORD *)buf;
          uint64_t v108 = v106;
          sub_244CB7B34((const char **)v107, 1);
          sub_244CC4DE0(0, 1);
        }
        int v30 = 0;
      }

      goto LABEL_46;
    case 16:
      memset(buf, 0, sizeof(buf));
      memset(v107, 0, sizeof(v107));
      uint64_t v108 = 0;
      double v27 = sub_244CB40C8(a1, buf, v107);
      if (!*(_DWORD *)v107)
      {
        int v54 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v26, *(uint64_t *)buf, *(void *)&buf[8], v27);
        int v30 = sub_2447D6B2C(@"OctetString", v54, v3);

        goto LABEL_46;
      }
      int v28 = sub_244CC8484(0, "NotSpecified");
      if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR))
      {
        long long v80 = *(_OWORD *)v107;
        uint64_t v81 = v108;
        int v29 = sub_244CB7B34((const char **)&v80, 1);
        LODWORD(v104) = 136315138;
        *(void *)((char *)&v104 + 4) = v29;
        _os_log_impl(&dword_2446BD000, v28, OS_LOG_TYPE_ERROR, "Error(%s): TLV ByteString decoding failed", (uint8_t *)&v104, 0xCu);
      }

      if (sub_244CC4E58(1u))
      {
        long long v78 = *(_OWORD *)v107;
        uint64_t v79 = v108;
        sub_244CB7B34((const char **)&v78, 1);
        sub_244CC4DE0(0, 1);
      }
      goto LABEL_45;
    case 20:
      int v30 = sub_2447D6B2C(@"Null", 0, v3);
      goto LABEL_46;
    case 21:
      goto LABEL_40;
    case 22:
      id v6 = @"Array";
LABEL_40:
      LODWORD(v104) = 0;
      memset(v107, 0, sizeof(v107));
      uint64_t v108 = 0;
      sub_244CB4C90(a1, &v104, (uint64_t)v107);
      if (!*(_DWORD *)v107)
      {
        id v34 = objc_alloc_init(MEMORY[0x263EFF980]);
        while (1)
        {
          sub_244CB4E58(a1, buf);
          *(_OWORD *)long long v107 = *(_OWORD *)buf;
          uint64_t v108 = v106;
          if (*(_DWORD *)buf)
          {
            if (*(_DWORD *)buf == 33)
            {
              sub_244CB4D00(a1, v104, (uint64_t)buf);
              *(_OWORD *)long long v107 = *(_OWORD *)buf;
              uint64_t v108 = v106;
              if (*(_DWORD *)buf)
              {
                unsigned __int8 v45 = sub_244CC8484(0, "NotSpecified");
                if (os_log_type_enabled(v45, OS_LOG_TYPE_ERROR))
                {
                  long long v68 = *(_OWORD *)v107;
                  uint64_t v69 = v108;
                  int v46 = sub_244CB7B34((const char **)&v68, 1);
                  *(_DWORD *)long long buf = 136315138;
                  *(void *)&uint8_t buf[4] = v46;
                  _os_log_impl(&dword_2446BD000, v45, OS_LOG_TYPE_ERROR, "Error(%s): TLV container exiting failed", buf, 0xCu);
                }

                if (sub_244CC4E58(1u))
                {
                  long long v66 = *(_OWORD *)v107;
                  uint64_t v67 = v108;
                  sub_244CB7B34((const char **)&v66, 1);
LABEL_80:
                  sub_244CC4DE0(0, 1);
                  goto LABEL_85;
                }
                goto LABEL_85;
              }
              int v30 = sub_2447D6B2C(v6, v34, v3);
            }
            else
            {
              unsigned int v56 = sub_244CC8484(0, "NotSpecified");
              if (os_log_type_enabled(v56, OS_LOG_TYPE_ERROR))
              {
                long long v72 = *(_OWORD *)v107;
                uint64_t v73 = v108;
                unint64_t v57 = sub_244CB7B34((const char **)&v72, 1);
                *(_DWORD *)long long buf = 136315138;
                *(void *)&uint8_t buf[4] = v57;
                _os_log_impl(&dword_2446BD000, v56, OS_LOG_TYPE_ERROR, "Error(%s): TLV container decoding failed", buf, 0xCu);
              }

              if (sub_244CC4E58(1u))
              {
                long long v70 = *(_OWORD *)v107;
                uint64_t v71 = v108;
                sub_244CB7B34((const char **)&v70, 1);
                goto LABEL_80;
              }
LABEL_85:
              int v30 = 0;
            }

            goto LABEL_46;
          }
          unint64_t v35 = *(void *)(a1 + 16);
          uint8_t v38 = sub_2447D5B3C(a1, 0);
          if (!v38)
          {
            unint64_t v58 = sub_244CC8484(0, "NotSpecified");
            if (os_log_type_enabled(v58, OS_LOG_TYPE_ERROR))
            {
              uint64_t v61 = objc_msgSend_UTF8String(v6, v59, v60);
              *(_DWORD *)long long buf = 136315138;
              *(void *)&uint8_t buf[4] = v61;
              _os_log_impl(&dword_2446BD000, v58, OS_LOG_TYPE_ERROR, "Error when decoding TLV container of type %s", buf, 0xCu);
            }

            if (sub_244CC4E58(1u))
            {
              objc_msgSend_UTF8String(v6, v62, v63);
              sub_244CC4DE0(0, 1);
            }
            goto LABEL_85;
          }
          int v39 = objc_msgSend_dictionary(MEMORY[0x263EFF9A0], v36, v37);
          objc_msgSend_setObject_forKey_(v39, v40, (uint64_t)v38, @"data");
          if (v5 != 21) {
            goto LABEL_57;
          }
          if (v35 < 0x100) {
            goto LABEL_56;
          }
          if (HIDWORD(v35)) {
            break;
          }
          unsigned __int16 v44 = sub_244CC8484(0, "NotSpecified");
          if (os_log_type_enabled(v44, OS_LOG_TYPE_ERROR))
          {
            *(_WORD *)long long buf = 0;
            _os_log_impl(&dword_2446BD000, v44, OS_LOG_TYPE_ERROR, "Skipping unknown tag type when decoding TLV structure.", buf, 2u);
          }

          if (sub_244CC4E58(1u)) {
            sub_244CC4DE0(0, 1);
          }
LABEL_58:
        }
        v35 ^= 0xFFFFFFFF00000000;
LABEL_56:
        int v42 = objc_msgSend_numberWithUnsignedLongLong_(NSNumber, v41, v35);
        objc_msgSend_setObject_forKey_(v39, v43, (uint64_t)v42, @"contextTag");

LABEL_57:
        objc_msgSend_addObject_(v34, v41, (uint64_t)v39);
        goto LABEL_58;
      }
      int v31 = sub_244CC8484(0, "NotSpecified");
      if (os_log_type_enabled(v31, OS_LOG_TYPE_ERROR))
      {
        long long v76 = *(_OWORD *)v107;
        uint64_t v77 = v108;
        uint64_t v32 = sub_244CB7B34((const char **)&v76, 1);
        *(_DWORD *)long long buf = 136315138;
        *(void *)&uint8_t buf[4] = v32;
        _os_log_impl(&dword_2446BD000, v31, OS_LOG_TYPE_ERROR, "Error(%s): TLV container entering failed", buf, 0xCu);
      }

      if (sub_244CC4E58(1u))
      {
        long long v74 = *(_OWORD *)v107;
        uint64_t v75 = v108;
        sub_244CB7B34((const char **)&v74, 1);
        sub_244CC4DE0(0, 1);
      }
LABEL_45:
      int v30 = 0;
LABEL_46:

      return v30;
    default:
      if (v4)
      {
LABEL_13:
        id v13 = sub_244CC8484(0, "NotSpecified");
        if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)long long v107 = 67109120;
          *(_DWORD *)&v107[4] = sub_244CB3B68(a1);
          _os_log_impl(&dword_2446BD000, v13, OS_LOG_TYPE_ERROR, "Error: Unsupported TLV type for conversion: %u", v107, 8u);
        }

        if (sub_244CC4E58(1u))
        {
          sub_244CB3B68(a1);
          sub_244CC4DE0(0, 1);
        }
      }
      else
      {
        *(void *)&long long v104 = 0;
        memset(v107, 0, sizeof(v107));
        uint64_t v108 = 0;
        sub_244CB3CF0(a1, &v104, (uint64_t)v107);
        if (!*(_DWORD *)v107)
        {
          uint64_t v55 = objc_msgSend_numberWithLongLong_(NSNumber, v10, v104);
          int v30 = sub_2447D6B2C(@"SignedInteger", v55, v3);

          goto LABEL_46;
        }
        long long v11 = sub_244CC8484(0, "NotSpecified");
        if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
        {
          long long v100 = *(_OWORD *)v107;
          uint64_t v101 = v108;
          id v12 = sub_244CB7B34((const char **)&v100, 1);
          *(_DWORD *)long long buf = 136315138;
          *(void *)&uint8_t buf[4] = v12;
          _os_log_impl(&dword_2446BD000, v11, OS_LOG_TYPE_ERROR, "Error(%s): TLV signed integer decoding failed", buf, 0xCu);
        }

        if (sub_244CC4E58(1u))
        {
          long long v98 = *(_OWORD *)v107;
          uint64_t v99 = v108;
          sub_244CB7B34((const char **)&v98, 1);
          sub_244CC4DE0(0, 1);
        }
      }
      goto LABEL_45;
  }
}

void sub_2447D6940(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_2447D6B2C(void *a1, void *a2, void *a3)
{
  v21[3] = *MEMORY[0x263EF8340];
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  id v9 = v7;
  if (v6 && v7)
  {
    v20[0] = @"type";
    v20[1] = @"value";
    v21[0] = v5;
    v21[1] = v6;
    v20[2] = @"dataVersion";
    v21[2] = v7;
    objc_msgSend_dictionaryWithObjects_forKeys_count_(NSDictionary, v8, (uint64_t)v21, v20, 3);
    goto LABEL_9;
  }
  if (v6)
  {
    v18[0] = @"type";
    v18[1] = @"value";
    v19[0] = v5;
    v19[1] = v6;
    id v10 = v18;
    long long v11 = v19;
LABEL_8:
    objc_msgSend_dictionaryWithObjects_forKeys_count_(NSDictionary, v8, (uint64_t)v11, v10, 2);
    goto LABEL_9;
  }
  if (v7)
  {
    v16[0] = @"type";
    v16[1] = @"dataVersion";
    v17[0] = v5;
    v17[1] = v7;
    id v10 = v16;
    long long v11 = v17;
    goto LABEL_8;
  }
  id v14 = @"type";
  id v15 = v5;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(NSDictionary, v8, (uint64_t)&v15, &v14, 1);
  id v12 = LABEL_9:;

  return v12;
}

void sub_2447D6C7C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_2447D6C9C(void *a1, void *a2)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  id v3 = a1;
  sub_244CB62B8((uint64_t)v11);
  sub_244CB62E0((uint64_t)v11, (uint64_t)v13, 0x4B0uLL);
  long long v9 = 0uLL;
  uint64_t v10 = 0;
  sub_2447D6DCC(v3, v11, 256, &v9);
  if (v9)
  {
    if (a2)
    {
      long long v7 = v9;
      uint64_t v8 = v10;
      sub_244B26908((uint64_t)MTRError, &v7);
      id v5 = 0;
      *a2 = (id)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      id v5 = 0;
    }
  }
  else
  {
    id v5 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v4, (uint64_t)v13, v12);
  }

  return v5;
}

void sub_2447D6DB0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447D6DCC(void *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v11 = *MEMORY[0x263EF8340];
  id v7 = a1;
  a4[1] = 0;
  a4[2] = 0;
  *a4 = 0;
  sub_2447E38B8(v7, a2, a3, (uint64_t)a4);
  if (*(_DWORD *)a4)
  {
    uint64_t v8 = sub_244CC8484(0, "NotSpecified");
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 138412290;
      id v10 = v7;
      _os_log_impl(&dword_2446BD000, v8, OS_LOG_TYPE_ERROR, "Failed to encode to TLV: %@", buf, 0xCu);
    }

    if (sub_244CC4E58(1u)) {
      sub_244CC4DE0(0, 1);
    }
  }
}

void sub_2447D6EDC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447D6FE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2447D7174(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_2447D71B8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v8 = a3;
  if (v8)
  {
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  }
  else
  {
    if (objc_msgSend_count(v5, v6, v7))
    {
      id v10 = objc_msgSend_objectAtIndexedSubscript_(v5, v9, 0);
      uint64_t v11 = [MTRAttributeReport alloc];
      id v28 = 0;
      id v13 = objc_msgSend_initWithResponseValue_error_(v11, v12, (uint64_t)v10, &v28);
      id v16 = v28;
      if (v16)
      {
        (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
      }
      else
      {
        uint64_t v18 = objc_msgSend_path(v13, v14, v15);
        char isEqual = objc_msgSend_isEqual_(v18, v19, *(void *)(a1 + 32));

        uint64_t v23 = *(void *)(a1 + 40);
        if (isEqual)
        {
          id v24 = objc_msgSend_value(v13, v21, v22);
          double v27 = objc_msgSend_error(v13, v25, v26);
          (*(void (**)(uint64_t, void *, void *))(v23 + 16))(v23, v24, v27);
        }
        else
        {
          id v24 = objc_msgSend_errorWithDomain_code_userInfo_(MEMORY[0x263F087E8], v21, @"MTRErrorDomain", 13, 0);
          (*(void (**)(uint64_t, void, void *))(v23 + 16))(v23, 0, v24);
        }
      }
    }
    else
    {
      uint64_t v17 = *(void *)(a1 + 40);
      id v10 = objc_msgSend_errorWithDomain_code_userInfo_(MEMORY[0x263F087E8], v9, @"MTRErrorDomain", 13, 0);
      (*(void (**)(uint64_t, void, void *))(v17 + 16))(v17, 0, v10);
    }
  }
}

void sub_2447D73A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447D7568(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447D7810(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15, void *a16)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2447D78A0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2447D78BC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v103 = *MEMORY[0x263EF8340];
  id v8 = (std::__shared_weak_count *)operator new(0x30uLL);
  v8->__shared_owners_ = 0;
  v8->__shared_weak_owners_ = 0;
  LODWORD(v8[1].__vftable) = 0;
  long long v9 = v8 + 1;
  v8->__vftable = (std::__shared_weak_count_vtbl *)&unk_26F944FB8;
  v8[1].__shared_owners_ = (uint64_t)"/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Frame"
                                    "work/CHIP/MTRBaseDevice.mm";
  LODWORD(v8[1].__shared_weak_owners_) = 1079;
  id v10 = objc_alloc_init(MEMORY[0x263EFF980]);
  char v61 = *(unsigned char *)(a1 + 56);
  id v68 = v10;
  v88[1] = v68;
  v88[2] = &v8[1];
  v88[3] = v8;
  atomic_fetch_add_explicit(&v8->__shared_owners_, 1uLL, memory_order_relaxed);
  uint64_t v87 = 0;
  v88[0] = 0;
  id v13 = *(void **)(a1 + 32);
  if (v13)
  {
    size_t v14 = objc_msgSend_count(v13, v11, v12);
    uint64_t v15 = sub_244CC4D90(v14, 0xCuLL);
    v88[0] = v15;
    if (v14 && v15)
    {
      memset(v15, 255, 12 * v14);
    }
    else if (!v15)
    {
      uint64_t v57 = a7;
      *(_DWORD *)a7 = 11;
      *(void *)(a7 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/MTRBaseDevice.mm";
      int v58 = 1129;
      goto LABEL_32;
    }
    long long v85 = 0u;
    long long v86 = 0u;
    long long v83 = 0u;
    long long v84 = 0u;
    id v16 = *(id *)(a1 + 32);
    uint64_t v19 = objc_msgSend_countByEnumeratingWithState_objects_count_(v16, v17, (uint64_t)&v83, v92, 16);
    if (v19)
    {
      uint64_t v20 = 0;
      uint64_t v21 = *(void *)v84;
      do
      {
        uint64_t v22 = 0;
        uint64_t v23 = 12 * v20;
        do
        {
          if (*(void *)v84 != v21) {
            objc_enumerationMutation(v16);
          }
          objc_msgSend_convertToAttributePathParams_(*(void **)(*((void *)&v83 + 1) + 8 * v22++), v18, (uint64_t)v88[0] + v23);
          v23 += 12;
        }
        while (v19 != v22);
        uint64_t v19 = objc_msgSend_countByEnumeratingWithState_objects_count_(v16, v18, (uint64_t)&v83, v92, 16);
        v20 += v22;
      }
      while (v19);
    }
  }
  id v24 = *(void **)(a1 + 40);
  if (v24)
  {
    size_t v25 = objc_msgSend_count(v24, v11, v12);
    if (*sub_2447D8070(&v87, v25))
    {
      long long v81 = 0u;
      long long v82 = 0u;
      long long v79 = 0u;
      long long v80 = 0u;
      id v26 = *(id *)(a1 + 40);
      uint64_t v29 = objc_msgSend_countByEnumeratingWithState_objects_count_(v26, v27, (uint64_t)&v79, v91, 16);
      if (v29)
      {
        uint64_t v30 = 0;
        uint64_t v31 = *(void *)v80;
        do
        {
          uint64_t v32 = 0;
          uint64_t v33 = 12 * v30;
          do
          {
            if (*(void *)v80 != v31) {
              objc_enumerationMutation(v26);
            }
            objc_msgSend_convertToEventPathParams_(*(void **)(*((void *)&v79 + 1) + 8 * v32++), v28, (uint64_t)v87 + v33);
            v33 += 12;
          }
          while (v29 != v32);
          uint64_t v29 = objc_msgSend_countByEnumeratingWithState_objects_count_(v26, v28, (uint64_t)&v79, v91, 16);
          v30 += v32;
        }
        while (v29);
      }

      goto LABEL_24;
    }
    uint64_t v57 = a7;
    *(_DWORD *)a7 = 11;
    *(void *)(a7 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "MTRBaseDevice.mm";
    int v58 = 1137;
LABEL_32:
    *(_DWORD *)(v57 + 16) = v58;
    goto LABEL_37;
  }
LABEL_24:
  id v34 = sub_244DBE094();
  sub_2447E3834((uint64_t)v74, a3);
  objc_msgSend_toReadPrepareParams_(*(void **)(a1 + 48), v35, (uint64_t)v74);
  uint64_t v77 = v88[0];
  uint64_t v78 = objc_msgSend_count(*(void **)(a1 + 32), v36, v37);
  uint64_t v75 = v87;
  uint64_t v76 = objc_msgSend_count(*(void **)(a1 + 40), v38, v39);
  int v41 = v87;
  uint8_t v40 = v88[0];
  id v42 = v68;
  v70[1] = (uint64_t)v42;
  void v70[2] = (uint64_t)&v8[1];
  atomic_fetch_add_explicit(&v8->__shared_owners_, 1uLL, memory_order_relaxed);
  v70[3] = (uint64_t)v8;
  *(void *)&long long v71 = a6;
  *((void *)&v71 + 1) = a4;
  *(void *)&long long v72 = a5;
  *((void *)&v72 + 1) = v40;
  uint64_t v73 = v41;
  uint64_t v44 = (uint64_t)v87;
  unsigned __int16 v43 = v88[0];
  unsigned __int8 v45 = (char *)sub_244CC4D84(0x130uLL);
  if (v45)
  {
    long long v66 = v34;
    uint64_t v46 = v78;
    uint64_t v47 = v76;
    id v48 = v42;
    *(void *)long long v100 = &unk_26F945008;
    *(void *)&v100[8] = v48;
    v100[16] = v61;
    int v102 = v100;
    uint64_t v49 = (void (***)(void))v48;
    v99[0] = (void (***)(void))&unk_26F945098;
    v99[1] = v49;
    v99[3] = (void (***)(void))v99;
    long long v50 = v49;
    atomic_fetch_add_explicit(&v8->__shared_owners_, 1uLL, memory_order_relaxed);
    long long v98 = 0;
    id v51 = operator new(0x20uLL);
    *id v51 = &unk_26F945128;
    v51[1] = v50;
    v51[2] = v9;
    v51[3] = v8;
    long long v98 = v51;
    uint64_t v52 = v50;
    atomic_fetch_add_explicit(&v8->__shared_owners_, 1uLL, memory_order_relaxed);
    long long v96 = 0;
    id v53 = operator new(0x48uLL);
    *id v53 = &unk_26F9451B8;
    v53[1] = v52;
    v53[2] = v9;
    uint64_t v53[3] = v8;
    long long v54 = v72;
    *((_OWORD *)v53 + 2) = v71;
    *((_OWORD *)v53 + 3) = v54;
    v53[8] = v73;
    long long v96 = v53;
    v94[3] = 0;
    v93[3] = 0;
    sub_2447E8D04((uint64_t)v45, (uint64_t)v43, v46, v44, v47, (uint64_t)v100, (uint64_t)v99, (uint64_t)v97, (uint64_t)v95, (uint64_t)v94, (uint64_t)v93);
    sub_2447E6C90(v93);
    sub_2447E6D14(v94);
    sub_2447E6D98(v95);
    sub_2447E6E1C(v97);
    sub_2447E6EA0(v99);
    sub_2447E6F24(v100);
    v70[0] = (uint64_t)v45;
    uint64_t v55 = sub_244CC4D84(0x160uLL);
    if (v55)
    {
      v99[0] = (void (***)(void))sub_244DCD620(v55, v66, a2, v45 + 200, 0);
      sub_244DCE078((uint64_t)v99[0], (uint64_t)v74, (__n128 *)v100);
      long long v89 = *(_OWORD *)&v100[4];
      int v90 = v101;
      if (*(_DWORD *)v100)
      {
        uint64_t v56 = a7;
        *(_DWORD *)a7 = *(_DWORD *)v100;
      }
      else
      {
        uint64_t v59 = v99[0];
        v99[0] = 0;
        uint64_t v69 = 0;
        sub_2447E6BB0((void (****)(void))(v70[0] + 264), v59);
        sub_2447E6BB0(&v69, 0);
        v70[0] = 0;
        uint64_t v87 = 0;
        v88[0] = 0;
        uint64_t v56 = a7;
        *(_DWORD *)a7 = 0;
      }
      *(_OWORD *)(v56 + 4) = v89;
      *(_DWORD *)(v56 + 20) = v90;
    }
    else
    {
      v99[0] = 0;
      *(_DWORD *)a7 = 11;
      *(void *)(a7 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/MTRBaseDevice.mm";
      *(_DWORD *)(a7 + 16) = 1182;
    }
    sub_2447E6BB0(v99, 0);
  }
  else
  {
    v70[0] = 0;
    *(_DWORD *)a7 = 11;
    *(void *)(a7 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "MTRBaseDevice.mm";
    *(_DWORD *)(a7 + 16) = 1178;
  }
  sub_2447E9A28(v70, 0);
  sub_2447E7E54(v8);

  sub_244D87F44(v74);
LABEL_37:
  sub_2446D7EC0(&v87);
  sub_2446D7EC0(v88);
  sub_2447E7E54(v8);

  sub_2447E7E54(v8);
}

void sub_2447D7F38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,void *a62,void *a63)
{
  sub_2447E6BB0((void (****)(void))(v65 - 168), 0);
  sub_2447E9A28(&a21, 0);
  sub_2447D80CC((uint64_t)&a22);
  sub_244D87F44(&a30);
  sub_2446D7EC0(&a62);
  sub_2446D7EC0(&a63);
  sub_2447D80CC((uint64_t)&a64);

  sub_2447E7E54(v64);
  _Unwind_Resume(a1);
}

void **sub_2447D8070(void **a1, size_t a2)
{
  size_t v2 = a2;
  sub_2447E6744(a1, a2, 0xCuLL);
  if (v2 && *a1)
  {
    int v4 = (char *)*a1 + 10;
    do
    {
      *(void *)(v4 - 10) = -1;
      *((_WORD *)v4 - 1) = -1;
      *int v4 = 0;
      v4 += 12;
      --v2;
    }
    while (v2);
  }
  return a1;
}

uint64_t sub_2447D80CC(uint64_t a1)
{
  size_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2) {
    sub_2447E7E54(v2);
  }

  return a1;
}

void sub_2447D8104(uint64_t a1, void *a2)
{
  id v11 = a2;
  if (objc_msgSend_isPASEDevice(v11, v3, v4))
  {
    sub_2447E5674(a1, v11);
  }
  else
  {
    uint64_t v7 = objc_msgSend_nodeID(v11, v5, v6);
    id v10 = objc_msgSend_deviceController(v11, v8, v9);
    sub_2447E5768(a1, v7, v10);
  }
}

void sub_2447D8198(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2447D8394(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447D85A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, void *a19, void *a20,void *a21,void *a22)
{
  size_t v25 = v24;

  _Unwind_Resume(a1);
}

void sub_2447D865C(uint64_t a1@<X0>, uint64_t *a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, __n128 *a6@<X8>)
{
  uint64_t v100 = *MEMORY[0x263EF8340];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    uint64_t v74 = a3;
    uint64_t v75 = a4;
    id v77 = *(id *)(a1 + 32);
    id v13 = objc_msgSend_objectForKeyedSubscript_(v77, v12, @"type");
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      uint64_t v73 = v13;
      if (objc_msgSend_isEqualToString_(v13, v14, @"Array"))
      {
        uint64_t v17 = objc_msgSend_objectForKeyedSubscript_(*(void **)(a1 + 32), v15, @"value");
        objc_opt_class();
        if (objc_opt_isKindOfClass())
        {
          long long v84 = 0;
          long long v85 = 0;
          long long v86 = 0;
          long long v72 = v17;
          unint64_t v20 = objc_msgSend_count(v17, v18, v19);
          sub_2447D9250(&v84, v20);
          uint64_t v70 = a5;
          long long v71 = a2;
          long long v82 = 0u;
          long long v83 = 0u;
          long long v80 = 0u;
          long long v81 = 0u;
          id obj = v17;
          uint64_t v22 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v21, (uint64_t)&v80, v92, 16);
          if (v22)
          {
            uint64_t v23 = *(void *)v81;
            while (2)
            {
              for (uint64_t i = 0; i != v22; ++i)
              {
                if (*(void *)v81 != v23) {
                  objc_enumerationMutation(obj);
                }
                size_t v25 = *(void **)(*((void *)&v80 + 1) + 8 * i);
                objc_opt_class();
                if ((objc_opt_isKindOfClass() & 1) == 0)
                {
                  uint64_t v69 = sub_244CC8484(0, "NotSpecified");
                  if (os_log_type_enabled(v69, OS_LOG_TYPE_ERROR))
                  {
                    LODWORD(buf) = 138412290;
                    *(void *)((char *)&buf + 4) = obj;
                    _os_log_impl(&dword_2446BD000, v69, OS_LOG_TYPE_ERROR, "Error: Can't encode corrupt list: %@", (uint8_t *)&buf, 0xCu);
                  }

                  if (sub_244CC4E58(1u)) {
                    sub_244CC4DE0(0, 1);
                  }
                  a6->n128_u32[0] = 47;
                  a6->n128_u64[1] = (unint64_t)"/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomei"
                                                      "p/src/darwin/Framework/CHIP/MTRBaseDevice.mm";
                  a6[1].n128_u32[0] = 1274;

                  goto LABEL_56;
                }
                objc_msgSend_objectForKeyedSubscript_(v25, v26, @"data");
                id v27 = (id)objc_claimAutoreleasedReturnValue();
                id v28 = v27;
                uint64_t v29 = v85;
                if (v85 >= v86)
                {
                  uint64_t v31 = v84;
                  uint64_t v32 = (v85 - v84) >> 3;
                  unint64_t v33 = v32 + 1;
                  if ((unint64_t)(v32 + 1) >> 61) {
                    sub_2446D033C();
                  }
                  uint64_t v34 = v86 - v84;
                  if ((v86 - v84) >> 2 > v33) {
                    unint64_t v33 = v34 >> 2;
                  }
                  if ((unint64_t)v34 >= 0x7FFFFFFFFFFFFFF8) {
                    unint64_t v35 = 0x1FFFFFFFFFFFFFFFLL;
                  }
                  else {
                    unint64_t v35 = v33;
                  }
                  uint64_t v99 = &v86;
                  if (v35)
                  {
                    uint8_t v36 = (char *)sub_2447EAF80((uint64_t)&v86, v35);
                    uint64_t v31 = v84;
                    uint64_t v29 = v85;
                  }
                  else
                  {
                    uint8_t v36 = 0;
                  }
                  uint64_t v37 = &v36[8 * v32];
                  *(void *)uint64_t v37 = v28;
                  uint8_t v38 = v37;
                  if (v29 != v31)
                  {
                    uint64_t v39 = v29;
                    do
                    {
                      uint64_t v40 = *((void *)v39 - 1);
                      v39 -= 8;
                      *(void *)uint64_t v39 = 0;
                      *((void *)v38 - 1) = v40;
                      v38 -= 8;
                    }
                    while (v39 != v31);
                  }
                  uint64_t v30 = v37 + 8;
                  long long v84 = v38;
                  long long v85 = v37 + 8;
                  int v41 = v86;
                  long long v86 = &v36[8 * v35];
                  uint64_t v97 = v29;
                  long long v98 = v41;
                  *(void *)&long long buf = v31;
                  *((void *)&buf + 1) = v31;
                  sub_2447EAFB8((uint64_t)&buf);
                }
                else
                {
                  *(void *)long long v85 = v27;
                  uint64_t v30 = v29 + 8;
                }
                long long v85 = v30;
              }
              uint64_t v22 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v42, (uint64_t)&v80, v92, 16);
              if (v22) {
                continue;
              }
              break;
            }
          }

          sub_24479476C(&buf, (uint64_t)v84, (v85 - v84) >> 3);
          __int16 v45 = objc_msgSend_unsignedShortValue(*(void **)(a1 + 40), v43, v44);
          unsigned int v48 = objc_msgSend_unsignedLongValue(*(void **)(a1 + 48), v46, v47);
          unsigned int v53 = objc_msgSend_unsignedLongValue(*(void **)(a1 + 56), v49, v50);
          v91[0] = &unk_26F945448;
          v91[1] = v74;
          v91[2] = v70;
          v91[3] = v91;
          v90[0] = &unk_26F9454D8;
          v90[1] = v75;
          v90[2] = v70;
          v90[3] = v90;
          long long v54 = *(void **)(a1 + 64);
          if (v54)
          {
            v78[0] = 1;
            __int16 v79 = objc_msgSend_unsignedShortValue(v54, v51, v52);
          }
          else
          {
            v78[0] = 0;
          }
          v89[3] = 0;
          v87[0] = 0;
          sub_2447D9300(v71, v45, v48, v53, &buf, (uint64_t)v91, (uint64_t)v90, v78, a6, (uint64_t)v89, (uint64_t)v87, 0);
          sub_2447E6A80(v89);
          sub_2447E69FC(v90);
          sub_2447E6978(v91);
LABEL_56:
          uint64_t v17 = v72;
          *(void *)&long long buf = &v84;
          sub_2447EAF00((void ***)&buf);
        }
        else
        {
          id v68 = sub_244CC8484(0, "NotSpecified");
          if (os_log_type_enabled(v68, OS_LOG_TYPE_ERROR))
          {
            LODWORD(buf) = 138412290;
            *(void *)((char *)&buf + 4) = v17;
            _os_log_impl(&dword_2446BD000, v68, OS_LOG_TYPE_ERROR, "Error: Object to encode claims to be a list but isn't: %@", (uint8_t *)&buf, 0xCu);
          }

          if (sub_244CC4E58(1u)) {
            sub_244CC4DE0(0, 1);
          }
          a6->n128_u32[0] = 47;
          a6->n128_u64[1] = (unint64_t)"/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/da"
                                              "rwin/Framework/CHIP/MTRBaseDevice.mm";
          a6[1].n128_u32[0] = 1265;
        }
      }
      else
      {
        __int16 v58 = objc_msgSend_unsignedShortValue(*(void **)(a1 + 40), v15, v16);
        unsigned int v61 = objc_msgSend_unsignedLongValue(*(void **)(a1 + 48), v59, v60);
        unsigned int v64 = objc_msgSend_unsignedLongValue(*(void **)(a1 + 56), v62, v63);
        *(void *)&long long buf = *(id *)(a1 + 32);
        v95[0] = &unk_26F945448;
        v95[1] = v74;
        v95[2] = a5;
        void v95[3] = v95;
        v94[0] = &unk_26F9454D8;
        v94[1] = v75;
        v94[2] = a5;
        v94[3] = v94;
        uint64_t v67 = *(void **)(a1 + 64);
        if (v67)
        {
          v87[0] = 1;
          __int16 v88 = objc_msgSend_unsignedShortValue(v67, v65, v66);
        }
        else
        {
          v87[0] = 0;
        }
        v93[3] = 0;
        LOBYTE(v84) = 0;
        sub_2447D8F18(a2, v58, v61, v64, (void **)&buf, (uint64_t)v95, (uint64_t)v94, v87, a6, (uint64_t)v93, (uint64_t)&v84, 0);
        sub_2447E6A80(v93);
        sub_2447E69FC(v94);
        sub_2447E6978(v95);
      }
      id v13 = v73;
    }
    else
    {
      uint64_t v57 = sub_244CC8484(0, "NotSpecified");
      if (os_log_type_enabled(v57, OS_LOG_TYPE_ERROR))
      {
        LODWORD(buf) = 138412290;
        *(void *)((char *)&buf + 4) = v77;
        _os_log_impl(&dword_2446BD000, v57, OS_LOG_TYPE_ERROR, "Error: Object to encode is corrupt: %@", (uint8_t *)&buf, 0xCu);
      }

      if (sub_244CC4E58(1u)) {
        sub_244CC4DE0(0, 1);
      }
      a6->n128_u32[0] = 47;
      a6->n128_u64[1] = (unint64_t)"/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin"
                                          "/Framework/CHIP/MTRBaseDevice.mm";
      a6[1].n128_u32[0] = 1250;
    }
  }
  else
  {
    uint64_t v55 = sub_244CC8484(0, "NotSpecified");
    if (os_log_type_enabled(v55, OS_LOG_TYPE_ERROR))
    {
      uint64_t v56 = *(void *)(a1 + 32);
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v56;
      _os_log_impl(&dword_2446BD000, v55, OS_LOG_TYPE_ERROR, "Error: Unsupported object to write as attribute value: %@", (uint8_t *)&buf, 0xCu);
    }

    if (sub_244CC4E58(1u)) {
      sub_244CC4DE0(0, 1);
    }
    a6->n128_u32[0] = 47;
    a6->n128_u64[1] = (unint64_t)"/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/F"
                                        "ramework/CHIP/MTRBaseDevice.mm";
    a6[1].n128_u32[0] = 1243;
  }
}

void sub_2447D8E20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,void **a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41)
{
  a32 = (void **)&a29;
  sub_2447EAF00(&a32);

  _Unwind_Resume(a1);
}

void sub_2447D8F18(uint64_t *a1@<X0>, __int16 a2@<W1>, unsigned int a3@<W2>, unsigned int a4@<W3>, void **a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, unsigned __int8 *a8@<X7>, __n128 *a9@<X8>, uint64_t a10, uint64_t a11, void *a12)
{
  uint64_t v35 = *MEMORY[0x263EF8340];
  uint64_t v20 = *a1;
  BOOL v21 = (*(unsigned int (**)(uint64_t))(*(void *)*a1 + 16))(*a1) == 3
     || (*(unsigned int (**)(uint64_t))(*(void *)v20 + 16))(v20) == 4;
  LOBYTE(v31) = v21;
  uint64_t v30 = sub_2447E9AF8(a6, a7, a10, (char *)&v31);
  if (v30)
  {
    uint64_t v22 = *((void *)sub_244DBE094() + 11);
    uint64_t v23 = sub_244CC4D84(0x158uLL);
    if (v23)
    {
      uint64_t v29 = (__n128 *)sub_2447EA230((uint64_t)v23, v22, (uint64_t)v30 + 112, a8, 0);
      uint64_t v24 = *a1;
      if ((*(unsigned int (**)(uint64_t))(*(void *)*a1 + 16))(*a1) == 3
        || (*(unsigned int (**)(uint64_t))(*(void *)v24 + 16))(v24) == 4)
      {
        a9->n128_u64[0] = 0;
        a9->n128_u64[1] = 0;
        a9[1].n128_u64[0] = 0;
        uint64_t v31 = (void *)__PAIR64__(a4, a3);
        LODWORD(v32) = -1;
        v28[0] = 0;
        sub_2447E9A58(v29, (uint64_t *)&v31, a5, (uint64_t)v28, a9);
      }
      else
      {
        a9->n128_u64[0] = 0;
        a9->n128_u64[1] = 0;
        a9[1].n128_u64[0] = 0;
        uint64_t v31 = (void *)__PAIR64__(a4, a3);
        LOWORD(v32) = a2;
        WORD1(v32) = -1;
        sub_2447E9A58(v29, (uint64_t *)&v31, a5, a11, a9);
      }
      if (a9->n128_u32[0]) {
        goto LABEL_15;
      }
      a9->n128_u64[0] = 0;
      a9->n128_u64[1] = 0;
      a9[1].n128_u64[0] = 0;
      sub_244DC8C28(v29, a1, 0, (uint64_t)a9);
      if (a9->n128_u32[0]) {
        goto LABEL_15;
      }
      if (a12)
      {
        uint64_t v31 = &unk_26F9453B8;
        uint64_t v32 = v30;
        unint64_t v33 = v29;
        uint64_t v34 = &v31;
        sub_2447EA870(&v31, a12);
        sub_2447E6D14(&v31);
      }
      int v26 = 0;
      uint64_t v29 = 0;
      uint64_t v30 = 0;
      int v25 = 175;
    }
    else
    {
      uint64_t v29 = 0;
      int v25 = 147;
      int v26 = 11;
    }
    a9->n128_u32[0] = v26;
    a9->n128_u64[1] = (unint64_t)"/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/controll"
                                        "er/WriteInteraction.h";
    a9[1].n128_u32[0] = v25;
LABEL_15:
    sub_2447EAADC((void (****)(void))&v29, 0);
    goto LABEL_16;
  }
  a9->n128_u32[0] = 11;
  a9->n128_u64[1] = (unint64_t)"/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/controller"
                                      "/WriteInteraction.h";
  a9[1].n128_u32[0] = 143;
LABEL_16:
  sub_2447EAB38(&v30, 0);
}

void sub_2447D9210(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va1, a4);
  va_start(va, a4);
  id v5 = va_arg(va1, void (***)(void));
  sub_2447EAADC((void (****)(void))va, 0);
  sub_2447EAB38((uint64_t *)va1, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_2447D9250(char **a1, unint64_t a2)
{
  uint64_t v4 = a1[2];
  uint64_t result = (uint64_t)(a1 + 2);
  if (a2 > (v4 - *a1) >> 3)
  {
    if (a2 >> 61) {
      sub_2446D033C();
    }
    uint64_t v5 = a1[1] - *a1;
    v14[4] = result;
    uint64_t v6 = (char *)sub_2447EAF80(result, a2);
    uint64_t v9 = *a1;
    id v8 = a1[1];
    id v10 = &v6[v5 & 0xFFFFFFFFFFFFFFF8];
    if (v8 != *a1)
    {
      id v10 = &v6[v5 & 0xFFFFFFFFFFFFFFF8];
      id v11 = a1[1];
      do
      {
        uint64_t v12 = *((void *)v11 - 1);
        v11 -= 8;
        *(void *)id v11 = 0;
        *((void *)v10 - 1) = v12;
        v10 -= 8;
      }
      while (v11 != v9);
    }
    *a1 = v10;
    a1[1] = &v6[v5 & 0xFFFFFFFFFFFFFFF8];
    id v13 = a1[2];
    a1[2] = &v6[8 * v7];
    v14[2] = v8;
    v14[3] = v13;
    v14[0] = v9;
    v14[1] = v9;
    return sub_2447EAFB8((uint64_t)v14);
  }
  return result;
}

void sub_2447D9300(uint64_t *a1@<X0>, __int16 a2@<W1>, unsigned int a3@<W2>, unsigned int a4@<W3>, void *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, unsigned __int8 *a8@<X7>, __n128 *a9@<X8>, uint64_t a10, uint64_t a11, void *a12)
{
  uint64_t v35 = *MEMORY[0x263EF8340];
  uint64_t v20 = *a1;
  BOOL v21 = (*(unsigned int (**)(uint64_t))(*(void *)*a1 + 16))(*a1) == 3
     || (*(unsigned int (**)(uint64_t))(*(void *)v20 + 16))(v20) == 4;
  LOBYTE(v31) = v21;
  uint64_t v30 = sub_2447E9AF8(a6, a7, a10, (char *)&v31);
  if (v30)
  {
    uint64_t v22 = *((void *)sub_244DBE094() + 11);
    uint64_t v23 = sub_244CC4D84(0x158uLL);
    if (v23)
    {
      uint64_t v29 = (__n128 *)sub_2447EA230((uint64_t)v23, v22, (uint64_t)v30 + 112, a8, 0);
      uint64_t v24 = *a1;
      if ((*(unsigned int (**)(uint64_t))(*(void *)*a1 + 16))(*a1) == 3
        || (*(unsigned int (**)(uint64_t))(*(void *)v24 + 16))(v24) == 4)
      {
        a9->n128_u64[0] = 0;
        a9->n128_u64[1] = 0;
        a9[1].n128_u64[0] = 0;
        uint64_t v31 = (void *)__PAIR64__(a4, a3);
        LODWORD(v32) = -1;
        v28[0] = 0;
        sub_2447EB00C(v29, (uint64_t *)&v31, a5, (uint64_t)v28, a9);
      }
      else
      {
        a9->n128_u64[0] = 0;
        a9->n128_u64[1] = 0;
        a9[1].n128_u64[0] = 0;
        uint64_t v31 = (void *)__PAIR64__(a4, a3);
        LOWORD(v32) = a2;
        WORD1(v32) = -1;
        sub_2447EB00C(v29, (uint64_t *)&v31, a5, a11, a9);
      }
      if (a9->n128_u32[0]) {
        goto LABEL_15;
      }
      a9->n128_u64[0] = 0;
      a9->n128_u64[1] = 0;
      a9[1].n128_u64[0] = 0;
      sub_244DC8C28(v29, a1, 0, (uint64_t)a9);
      if (a9->n128_u32[0]) {
        goto LABEL_15;
      }
      if (a12)
      {
        uint64_t v31 = &unk_26F945568;
        uint64_t v32 = v30;
        unint64_t v33 = v29;
        uint64_t v34 = &v31;
        sub_2447EA870(&v31, a12);
        sub_2447E6D14(&v31);
      }
      int v26 = 0;
      uint64_t v29 = 0;
      uint64_t v30 = 0;
      int v25 = 175;
    }
    else
    {
      uint64_t v29 = 0;
      int v25 = 147;
      int v26 = 11;
    }
    a9->n128_u32[0] = v26;
    a9->n128_u64[1] = (unint64_t)"/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/controll"
                                        "er/WriteInteraction.h";
    a9[1].n128_u32[0] = v25;
LABEL_15:
    sub_2447EAADC((void (****)(void))&v29, 0);
    goto LABEL_16;
  }
  a9->n128_u32[0] = 11;
  a9->n128_u64[1] = (unint64_t)"/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/controller"
                                      "/WriteInteraction.h";
  a9[1].n128_u32[0] = 143;
LABEL_16:
  sub_2447EAB38(&v30, 0);
}

void sub_2447D95F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va1, a4);
  va_start(va, a4);
  uint64_t v5 = va_arg(va1, void (***)(void));
  sub_2447EAADC((void (****)(void))va, 0);
  sub_2447EAB38((uint64_t *)va1, 0);
  _Unwind_Resume(a1);
}

void sub_2447D9638(uint64_t a1, __n128 a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (!*(unsigned char *)(a1 + 112))
  {
    *(unsigned char *)(a1 + 112) = 1;
    uint64_t v16 = 0;
    a2.n128_u64[0] = 0x8E0000008ELL;
    if (*(_DWORD *)(a5 + 4) == *(_DWORD *)(a1 + 104))
    {
      if (a7 || *(_DWORD *)(a5 + 8) == *(_DWORD *)(a1 + 108))
      {
        if (!a7 || (sub_2447ED398(&v16, a7, (uint64_t)v15), a2.n128_u64[0] = v15[0], !LODWORD(v15[0])))
        {
          uint64_t v13 = *(void *)(a1 + 32);
          if (v13)
          {
            (*(void (**)(uint64_t, uint64_t, uint64_t, void **, __n128))(*(void *)v13 + 48))(v13, a5, a6, &v16, a2);
            goto LABEL_10;
          }
LABEL_17:
          sub_2447E68F0();
        }
        id v11 = (const char *)v15[1];
        a3 = *(double *)&v15[2];
LABEL_8:
        v14[0] = a2.n128_u64[0];
        v14[1] = v11;
        *(double *)&v14[2] = a3;
        uint64_t v12 = *(void *)(a1 + 64);
        if (v12)
        {
          (*(void (**)(uint64_t, void *))(*(void *)v12 + 48))(v12, v14);
LABEL_10:

          return;
        }
        goto LABEL_17;
      }
      int v10 = 1372;
    }
    else
    {
      int v10 = 1367;
    }
    LODWORD(a3) = v10;
    id v11 = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTRBaseDevice.mm";
    goto LABEL_8;
  }
}

void sub_2447D9778(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447D9BA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_2447D9C7C(uint64_t a1@<X0>, const char *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, void *a6@<X5>, __n128 *a7@<X8>)
{
  v60[4] = *MEMORY[0x263EF8340];
  unsigned int v48 = a3;
  if (objc_msgSend_isEqualToNumber_(*(void **)(a1 + 32), a2, (uint64_t)&unk_26F9C8680)
    && objc_msgSend_isEqualToNumber_(*(void **)(a1 + 40), v14, (uint64_t)&unk_26F9C8698, v48)
    && (*(unsigned int (**)(void))(*(void *)*a3 + 16))() == 2)
  {
    uint64_t v15 = sub_244D879D8(*a3);
    uint64_t v17 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v16, v15 + 216, 16);
  }
  else
  {
    uint64_t v17 = 0;
  }
  id v18 = v17;
  __int16 v21 = objc_msgSend_unsignedShortValue(*(void **)(a1 + 48), v19, v20);
  int v24 = objc_msgSend_unsignedLongValue(*(void **)(a1 + 32), v22, v23);
  int v27 = objc_msgSend_unsignedLongValue(*(void **)(a1 + 40), v25, v26);
  v53[0] = v21;
  v53[1] = 0;
  int v54 = v24;
  int v55 = v27;
  char v56 = 1;
  id v28 = sub_244CC4D84(0x78uLL);
  if (v28)
  {
    uint64_t v29 = v18;
    uint64_t v30 = a2;
    uint64_t v49 = v29;
    id v31 = v29;
    uint64_t v32 = operator new(0x20uLL);
    *uint64_t v32 = &unk_26F9455E8;
    v32[1] = a4;
    v32[2] = a6;
    v32[3] = v31;
    v60[3] = (uint64_t)v32;
    v59[0] = &unk_26F945678;
    v59[1] = a5;
    v59[2] = a6;
    v59[3] = v59;
    v58[3] = 0;
    sub_2447EBA64((uint64_t)v28, v24, v27, (uint64_t)v60, (uint64_t)v59, (uint64_t)v58);
    sub_2447E6FA8(v58);
    sub_2447E6794(v59);
    sub_2447E6818(v60);
    uint64_t v52 = v28;
    v57[0] = &unk_26F945708;
    v57[1] = v28;
    v57[3] = v57;
    sub_2447E5888(v28 + 9, (uint64_t)v57);
    sub_2447E6FA8(v57);
    uint64_t v33 = *(void *)(a1 + 56);
    uint64_t v34 = (__n128 *)sub_244CC4D84(0x198uLL);
    uint64_t v35 = v34;
    if (v34)
    {
      sub_244DBB440(v34, v28, v30, v33 != 0, 0, 0);
      v60[0] = (uint64_t)v35;
      a7->n128_u64[1] = 0;
      a7[1].n128_u64[0] = 0;
      a7->n128_u64[0] = 0;
      v59[0] = *(id *)(a1 + 64);
      uint8_t v38 = *(void **)(a1 + 56);
      id v18 = v49;
      if (v38)
      {
        __int16 v39 = objc_msgSend_unsignedShortValue(v38, v36, v37);
        LOBYTE(v58[0]) = 1;
        WORD1(v58[0]) = v39;
      }
      else
      {
        LOBYTE(v58[0]) = 0;
      }
      sub_2447DA0E8(v35, (uint64_t)v53, (uint64_t)v59, (uint64_t)v58, a7);

      if (a7->n128_u32[0]) {
        goto LABEL_19;
      }
      uint64_t v44 = *(void **)(a1 + 72);
      if (v44)
      {
        int v45 = objc_msgSend_unsignedShortValue(v44, v42, v43);
        int v46 = sub_244D87C24(*v48, 1000 * v45);
        a7->n128_u64[0] = 0;
        a7->n128_u64[1] = 0;
        a7[1].n128_u64[0] = 0;
        uint64_t v47 = (unsigned __int8 *)v60[0];
        v50[0] = 1;
        int v51 = v46;
      }
      else
      {
        a7->n128_u64[0] = 0;
        a7->n128_u64[1] = 0;
        a7[1].n128_u64[0] = 0;
        uint64_t v47 = (unsigned __int8 *)v60[0];
        v50[0] = 0;
      }
      sub_244DBBC64(v47, v48, (uint64_t)v50, a7);
      if (a7->n128_u32[0]) {
        goto LABEL_19;
      }
      int v41 = 0;
      uint64_t v52 = 0;
      int v40 = 1521;
    }
    else
    {
      int v40 = 1505;
      int v41 = 11;
      id v18 = v49;
    }
    v60[0] = 0;
    a7->n128_u32[0] = v41;
    a7->n128_u64[1] = (unint64_t)"/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/F"
                                        "ramework/CHIP/MTRBaseDevice.mm";
    a7[1].n128_u32[0] = v40;
LABEL_19:
    sub_2447EBE1C(v60, 0);
    goto LABEL_20;
  }
  uint64_t v52 = 0;
  a7->n128_u32[0] = 11;
  a7->n128_u64[1] = (unint64_t)"/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Fra"
                                      "mework/CHIP/MTRBaseDevice.mm";
  a7[1].n128_u32[0] = 1493;
LABEL_20:
  sub_2447EBC54(&v52, 0);
}

void sub_2447DA03C(_Unwind_Exception *a1, uint64_t a2, void *a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_2447EBE1C((uint64_t *)(v4 - 128), 0);
  sub_2447EBC54(va, 0);

  _Unwind_Resume(a1);
}

void sub_2447DA0E8(__n128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, __n128 *a5@<X8>)
{
  v5[0] = *(unsigned char *)a4;
  if (v5[0]) {
    __int16 v6 = *(_WORD *)(a4 + 2);
  }
  char v7 = 0;
  v8[0] = &unk_26F945798;
  v8[1] = a3;
  sub_244DBD6B0(a1, a2, (uint64_t)v8, (uint64_t)v5, a5);
}

void sub_2447DA338(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2447DA384(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), 0, *(void *)(a1 + 32));
}

void sub_2447DA39C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v8 = a3;
  if (!v8)
  {
    if (objc_msgSend_count(v5, v6, v7) != 1)
    {
      uint64_t v9 = 0;
      objc_msgSend_errorWithDomain_code_userInfo_(MEMORY[0x263F087E8], v10, @"MTRErrorDomain", 13, 0);
      id v8 = (id)objc_claimAutoreleasedReturnValue();
      goto LABEL_7;
    }
    id v11 = *(objc_class **)(a1 + 40);
    if (v11)
    {
      id v12 = [v11 alloc];
      size_t v14 = objc_msgSend_objectAtIndexedSubscript_(v5, v13, 0);
      id v16 = 0;
      uint64_t v9 = objc_msgSend_initWithResponseValue_error_(v12, v15, (uint64_t)v14, &v16);
      id v8 = v16;

      goto LABEL_7;
    }
    id v8 = 0;
  }
  uint64_t v9 = 0;
LABEL_7:
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2447DA4C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447DA5E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2447DA794(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16)
{
  int v25 = v19;

  _Unwind_Resume(a1);
}

void sub_2447DA7E4(uint64_t a1, void *a2, void *a3)
{
  uint64_t v37 = *MEMORY[0x263EF8340];
  id v5 = a2;
  id v6 = a3;
  uint64_t v29 = v5;
  if (v6)
  {
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  }
  else
  {
    long long v34 = 0u;
    long long v35 = 0u;
    long long v32 = 0u;
    long long v33 = 0u;
    id obj = v5;
    uint64_t v8 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v7, (uint64_t)&v32, v36, 16);
    if (v8)
    {
      uint64_t v9 = *(void *)v33;
      do
      {
        for (uint64_t i = 0; i != v8; ++i)
        {
          if (*(void *)v33 != v9) {
            objc_enumerationMutation(obj);
          }
          uint64_t v11 = *(void *)(*((void *)&v32 + 1) + 8 * i);
          id v12 = [MTRAttributeReport alloc];
          id v31 = 0;
          size_t v14 = objc_msgSend_initWithResponseValue_error_(v12, v13, v11, &v31);
          id v17 = v31;
          if (v17)
          {
            (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
          }
          else
          {
            id v18 = objc_msgSend_path(v14, v15, v16);
            char isEqual = objc_msgSend_isEqual_(v18, v19, *(void *)(a1 + 32));

            uint64_t v23 = *(void *)(a1 + 40);
            if (isEqual)
            {
              int v24 = objc_msgSend_value(v14, v21, v22);
              int v27 = objc_msgSend_error(v14, v25, v26);
              (*(void (**)(uint64_t, void *, void *))(v23 + 16))(v23, v24, v27);
            }
            else
            {
              int v24 = objc_msgSend_errorWithDomain_code_userInfo_(MEMORY[0x263F087E8], v21, @"MTRErrorDomain", 13, 0);
              (*(void (**)(uint64_t, void, void *))(v23 + 16))(v23, 0, v24);
            }
          }
        }
        uint64_t v8 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v28, (uint64_t)&v32, v36, 16);
      }
      while (v8);
    }

    id v6 = 0;
  }
}

void sub_2447DAA34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_2447DAEA0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447DAF40(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  __int16 v3 = 128;
  size_t v2 = sub_244B27140((uint64_t)MTRError, (unsigned __int8 *)&v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_2447DAFA4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447DAFB4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 3;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTRBaseDevice.mm";
  int v4 = 1651;
  size_t v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_2447DB02C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447DB03C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 3;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTRBaseDevice.mm";
  int v4 = 1661;
  size_t v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_2447DB0B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447DB0C4(uint64_t a1, uint64_t a2, unsigned char *a3, void *a4)
{
  uint64_t v180 = *MEMORY[0x263EF8340];
  id v7 = a4;
  uint64_t v8 = *(NSObject **)(a1 + 32);
  if (!v7)
  {
    uint64_t v128 = a2;
    v129 = v8;
    v130 = (void *)MEMORY[0x2456969D0](*(void *)(a1 + 72));
    id v131 = *(id *)(a1 + 32);
    v132 = (void *)MEMORY[0x2456969D0](*(void *)(a1 + 72));
    id v133 = *(id *)(a1 + 32);
    v134 = (void *)MEMORY[0x2456969D0](*(void *)(a1 + 72));
    id v135 = *(id *)(a1 + 32);
    v136 = (void *)MEMORY[0x2456969D0](*(void *)(a1 + 80));
    id v137 = *(id *)(a1 + 32);
    v138 = (void *)MEMORY[0x2456969D0](*(void *)(a1 + 88));
    int v10 = objc_alloc_init(MTRReadClientContainer);
    uint64_t v13 = objc_msgSend_nodeID(*(void **)(a1 + 40), v11, v12);
    objc_msgSend_setDeviceID_(v10, v14, v13);
    id v17 = *(void **)(a1 + 48);
    if (v17)
    {
      size_t v18 = objc_msgSend_count(v17, v15, v16);
      uint64_t v19 = sub_244CC4D90(v18, 0xCuLL);
      objc_msgSend_setPathParams_(v10, v20, (uint64_t)v19);
      if (!objc_msgSend_pathParams(v10, v21, v22))
      {
        uint64_t v37 = *(NSObject **)(a1 + 32);
        v160[0] = MEMORY[0x263EF8330];
        v160[1] = 3221225472;
        v160[2] = sub_2447DBC48;
        v160[3] = &unk_265194E00;
        id v161 = *(id *)(a1 + 72);
        dispatch_async(v37, v160);
        objc_msgSend_cleanup(v10, v38, v39);

        goto LABEL_45;
      }
      long long v158 = 0u;
      long long v159 = 0u;
      long long v156 = 0u;
      long long v157 = 0u;
      id v23 = *(id *)(a1 + 48);
      uint64_t v27 = objc_msgSend_countByEnumeratingWithState_objects_count_(v23, v24, (uint64_t)&v156, v168, 16);
      if (v27)
      {
        v125 = a3;
        uint64_t v28 = 0;
        uint64_t v29 = *(void *)v157;
        do
        {
          uint64_t v30 = 0;
          uint64_t v31 = v28;
          uint64_t v32 = 12 * v28;
          do
          {
            if (*(void *)v157 != v29) {
              objc_enumerationMutation(v23);
            }
            long long v33 = *(void **)(*((void *)&v156 + 1) + 8 * v30);
            uint64_t v34 = objc_msgSend_pathParams(v10, v25, v26);
            objc_msgSend_convertToAttributePathParams_(v33, v35, v34 + v32);
            ++v30;
            v32 += 12;
          }
          while (v27 != v30);
          uint64_t v27 = objc_msgSend_countByEnumeratingWithState_objects_count_(v23, v25, (uint64_t)&v156, v168, 16);
          uint64_t v28 = v31 + v30;
        }
        while (v27);
        uint64_t v36 = v31 + v30;
        a3 = v125;
      }
      else
      {
        uint64_t v36 = 0;
      }
    }
    else
    {
      uint64_t v36 = 0;
    }
    int v40 = *(void **)(a1 + 56);
    if (!v40)
    {
      uint64_t v50 = 0;
LABEL_29:
      uint64_t v59 = sub_244DBE094();
      uint64_t v60 = (uint64_t *)sub_2446F7170(a3);
      sub_2447E3834((uint64_t)v145, v60);
      objc_msgSend_toReadPrepareParams_(*(void **)(a1 + 64), v61, (uint64_t)v145);
      uint64_t v148 = objc_msgSend_pathParams(v10, v62, v63);
      uint64_t v149 = v36;
      uint64_t v146 = objc_msgSend_eventPathParams(v10, v64, v65);
      uint64_t v147 = v50;
      uint64_t v66 = v10;
      uint64_t v69 = objc_msgSend_pathParams(v66, v67, v68);
      uint64_t v72 = objc_msgSend_eventPathParams(v66, v70, v71);
      uint64_t v73 = (char *)sub_244CC4D84(0x130uLL);
      if (v73)
      {
        uint64_t v124 = v72;
        uint64_t v127 = v69;
        uint64_t v74 = v129;
        uint64_t v75 = (void *)MEMORY[0x2456969D0](v130);
        v179 = 0;
        *(void *)v178 = &unk_26F9457D8;
        *(void *)&v178[8] = v74;
        uint64_t v76 = v74;
        *(void *)&v178[16] = MEMORY[0x2456969D0](v75);
        v179 = v178;

        id v77 = v131;
        uint64_t v78 = (void *)MEMORY[0x2456969D0](v132);
        v177 = 0;
        v176[0] = &unk_26F945858;
        v176[1] = v77;
        id v79 = v77;
        v176[2] = MEMORY[0x2456969D0](v78);
        v177 = v176;

        id v80 = v133;
        long long v81 = (void *)MEMORY[0x2456969D0](v134);
        v175 = 0;
        v174[0] = &unk_26F9458D8;
        v174[1] = v80;
        id v82 = v80;
        v174[2] = MEMORY[0x2456969D0](v81);
        v175 = v174;

        long long v83 = v66;
        v173[0] = &unk_26F945958;
        v173[1] = v83;
        v173[3] = v173;
        id v84 = v135;
        long long v85 = (void *)MEMORY[0x2456969D0](v136);
        v172 = 0;
        v171[0] = &unk_26F9459D8;
        v171[1] = v84;
        id v86 = v84;
        v171[2] = MEMORY[0x2456969D0](v85);
        v172 = v171;

        id v87 = v137;
        __int16 v88 = (void *)MEMORY[0x2456969D0](v138);
        v170 = 0;
        v169[0] = &unk_26F945A58;
        v169[1] = v87;
        id v89 = v87;
        v169[2] = MEMORY[0x2456969D0](v88);
        v170 = v169;

        sub_2447E8D04((uint64_t)v73, v127, v36, v124, v50, (uint64_t)v178, (uint64_t)v176, (uint64_t)v174, (uint64_t)v173, (uint64_t)v171, (uint64_t)v169);
        sub_2447E6C90(v169);
        sub_2447E6D14(v171);
        sub_2447E6D98(v173);
        sub_2447E6E1C(v174);
        sub_2447E6EA0(v176);
        sub_2447E6F24(v178);
      }
      uint64_t v144 = (uint64_t)v73;
      int v90 = sub_244CC4D84(0x160uLL);
      uint64_t v92 = (uint64_t)v90;
      if (v90) {
        sub_244DCD620(v90, v59, v128, v73 + 200, 1);
      }
      objc_msgSend_setReadClientPtr_(v66, v91, v92);
      uint64_t v93 = v144;
      uint64_t v144 = 0;
      objc_msgSend_setCallback_(v66, v94, v93);
      if (objc_msgSend_shouldResubscribeAutomatically(*(void **)(a1 + 64), v95, v96)) {
        sub_244DD0EB4(v92, (uint64_t)v145, (__n128 *)v178);
      }
      else {
        sub_244DCE078(v92, (uint64_t)v145, (__n128 *)v178);
      }
      long long v165 = *(_OWORD *)&v178[4];
      int v99 = *(_DWORD *)v178;
      int v166 = *(_DWORD *)&v178[20];
      if (*(_DWORD *)v178)
      {
        uint64_t v100 = *(NSObject **)(a1 + 32);
        v139[0] = MEMORY[0x263EF8330];
        v139[1] = 3221225472;
        v139[2] = sub_2447DBD58;
        v139[3] = &unk_265195060;
        v140 = (MTRReadClientContainer *)*(id *)(a1 + 72);
        int v141 = v99;
        long long v142 = v165;
        int v143 = v166;
        dispatch_async(v100, v139);
        objc_msgSend_cleanup(v66, v101, v102);
        uint64_t v103 = v140;
      }
      else
      {
        uint64_t v104 = objc_msgSend_deviceID(v66, v97, v98);
        uint64_t v103 = v66;
        if (qword_268EBE918 != -1) {
          dispatch_once(&qword_268EBE918, &unk_26F944D20);
        }
        uint64_t v106 = objc_msgSend_numberWithUnsignedLongLong_(NSNumber, v105, v104);
        objc_msgSend_lock((void *)qword_268EBE908, v107, v108);
        int v110 = objc_msgSend_objectForKeyedSubscript_((void *)qword_268EBE910, v109, (uint64_t)v106);
        BOOL v111 = v110 == 0;

        if (v111)
        {
          v114 = objc_msgSend_array(MEMORY[0x263EFF980], v112, v113);
          objc_msgSend_setObject_forKeyedSubscript_((void *)qword_268EBE910, v115, (uint64_t)v114, v106);
        }
        v116 = objc_msgSend_objectForKeyedSubscript_((void *)qword_268EBE910, v112, (uint64_t)v106);
        objc_msgSend_addObject_(v116, v117, (uint64_t)v103);

        objc_msgSend_unlock((void *)qword_268EBE908, v118, v119);
      }

      sub_2447E9A28(&v144, 0);
      sub_244D87F44(v145);
      goto LABEL_45;
    }
    size_t v41 = objc_msgSend_count(v40, v15, v16);
    id v42 = sub_244CC4D90(v41, 0xCuLL);
    objc_msgSend_setEventPathParams_(v10, v43, (uint64_t)v42);
    if (objc_msgSend_eventPathParams(v10, v44, v45))
    {
      uint64_t v123 = v36;
      long long v152 = 0u;
      long long v153 = 0u;
      long long v150 = 0u;
      long long v151 = 0u;
      id v46 = *(id *)(a1 + 56);
      uint64_t v50 = objc_msgSend_countByEnumeratingWithState_objects_count_(v46, v47, (uint64_t)&v150, v167, 16);
      if (v50)
      {
        v126 = a3;
        uint64_t v51 = 0;
        uint64_t v52 = *(void *)v151;
        do
        {
          uint64_t v53 = 0;
          uint64_t v54 = v51;
          uint64_t v55 = 12 * v51;
          do
          {
            if (*(void *)v151 != v52) {
              objc_enumerationMutation(v46);
            }
            char v56 = *(void **)(*((void *)&v150 + 1) + 8 * v53);
            uint64_t v57 = objc_msgSend_eventPathParams(v10, v48, v49);
            objc_msgSend_convertToEventPathParams_(v56, v58, v57 + v55);
            ++v53;
            v55 += 12;
          }
          while (v50 != v53);
          uint64_t v50 = objc_msgSend_countByEnumeratingWithState_objects_count_(v46, v48, (uint64_t)&v150, v167, 16);
          uint64_t v51 = v54 + v53;
        }
        while (v50);
        uint64_t v50 = v54 + v53;
        a3 = v126;
      }

      uint64_t v36 = v123;
      goto LABEL_29;
    }
    v120 = *(NSObject **)(a1 + 32);
    v154[0] = MEMORY[0x263EF8330];
    v154[1] = 3221225472;
    v154[2] = sub_2447DBCD0;
    v154[3] = &unk_265194E00;
    id v155 = *(id *)(a1 + 72);
    dispatch_async(v120, v154);
    objc_msgSend_cleanup(v10, v121, v122);

LABEL_45:
    uint64_t v9 = v129;
    goto LABEL_46;
  }
  block[0] = MEMORY[0x263EF8330];
  block[1] = 3221225472;
  block[2] = sub_2447DBC30;
  block[3] = &unk_265194F48;
  v164 = *(id *)(a1 + 72);
  id v163 = v7;
  dispatch_async(v8, block);

  uint64_t v9 = v164;
LABEL_46:
}

void sub_2447DBAB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, void *a18, void *a19, void *a20,void *a21,void *a22,void *a23,void *a24,void *a25,void *a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36)
{
  sub_2447E9A28(&a35, 0);
  sub_244D87F44(&a36);

  _Unwind_Resume(a1);
}

uint64_t sub_2447DBC30(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), 0, *(void *)(a1 + 32));
}

void sub_2447DBC48(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 11;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTRBaseDevice.mm";
  int v4 = 1762;
  size_t v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_2447DBCC0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447DBCD0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 11;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTRBaseDevice.mm";
  int v4 = 1777;
  size_t v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_2447DBD48(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447DBD58(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  long long v3 = *(_OWORD *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 56);
  size_t v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_2447DBDC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447DC0A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16, void *a17, void *a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,void *a24,void *a25)
{
  _Unwind_Resume(a1);
}

void sub_2447DC7EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447DC874(uint64_t a1)
{
  int v6 = 1;
  id v7 = "dwnfw_open_pairing_window";
  int v8 = 3;
  char v9 = 3;
  sub_244D7E78C((uint64_t)&v6);
  uint64_t v2 = *(void *)(a1 + 32);
  LODWORD(v4) = 3;
  *((void *)&v4 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTRBaseDevice.mm";
  int v5 = 1935;
  long long v3 = sub_244B26908((uint64_t)MTRError, &v4);
  (*(void (**)(uint64_t, void, void *))(v2 + 16))(v2, 0, v3);
}

void sub_2447DC91C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447DC92C(uint64_t a1)
{
  int v6 = 1;
  id v7 = "dwnfw_open_pairing_window";
  int v8 = 3;
  char v9 = 3;
  sub_244D7E78C((uint64_t)&v6);
  uint64_t v2 = *(void *)(a1 + 32);
  LODWORD(v4) = 3;
  *((void *)&v4 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTRBaseDevice.mm";
  int v5 = 1945;
  long long v3 = sub_244B26908((uint64_t)MTRError, &v4);
  (*(void (**)(uint64_t, void, void *))(v2 + 16))(v2, 0, v3);
}

void sub_2447DC9D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447DC9E4(uint64_t a1)
{
  int v6 = 1;
  id v7 = "dwnfw_open_pairing_window";
  int v8 = 143;
  char v9 = 3;
  sub_244D7E78C((uint64_t)&v6);
  uint64_t v2 = *(void *)(a1 + 32);
  LODWORD(v4) = 143;
  *((void *)&v4 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTRBaseDevice.mm";
  int v5 = 1955;
  long long v3 = sub_244B26908((uint64_t)MTRError, &v4);
  (*(void (**)(uint64_t, void, void *))(v2 + 16))(v2, 0, v3);
}

void sub_2447DCA90(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447DCAA0(uint64_t a1)
{
  int v6 = 1;
  id v7 = "dwnfw_open_pairing_window";
  int v8 = 143;
  char v9 = 3;
  sub_244D7E78C((uint64_t)&v6);
  uint64_t v2 = *(void *)(a1 + 32);
  LODWORD(v4) = 143;
  *((void *)&v4 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTRBaseDevice.mm";
  int v5 = 1966;
  long long v3 = sub_244B26908((uint64_t)MTRError, &v4);
  (*(void (**)(uint64_t, void, void *))(v2 + 16))(v2, 0, v3);
}

void sub_2447DCB4C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447DCB5C(uint64_t a1)
{
  int v6 = 1;
  id v7 = "dwnfw_open_pairing_window";
  int v8 = 143;
  char v9 = 3;
  sub_244D7E78C((uint64_t)&v6);
  uint64_t v2 = *(void *)(a1 + 32);
  LODWORD(v4) = 143;
  *((void *)&v4 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTRBaseDevice.mm";
  int v5 = 1978;
  long long v3 = sub_244B26908((uint64_t)MTRError, &v4);
  (*(void (**)(uint64_t, void, void *))(v2 + 16))(v2, 0, v3);
}

void sub_2447DCC08(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447DCC18(id *a1)
{
  v17[0] = MEMORY[0x263EF8330];
  v17[1] = 3221225472;
  void v17[2] = sub_2447DCFC8;
  v17[3] = &unk_2651951A0;
  unsigned __int8 v17[4] = a1[4];
  v17[5] = a1[6];
  char v8 = 0;
  __int16 v11 = 0;
  char v12 = 0;
  int v13 = 0;
  int v9 = 0;
  __int16 v10 = 0;
  size_t v14 = v15;
  v15[0] = 0;
  v16[0] = 0;
  v16[1] = 0;
  v15[1] = 0;
  v15[2] = v16;
  long long v6 = 0uLL;
  uint64_t v7 = 0;
  int v5 = (void *)MEMORY[0x2456969D0](v17);
  objc_msgSend_nodeID(a1[5], v2, v3);
  id v4 = v5;
  operator new();
}

void sub_2447DCF5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,id a37,id a38)
{
  sub_2447DD2CC(v39 - 176);

  sub_2447DD2CC((uint64_t)&a24);
  _Unwind_Resume(a1);
}

void sub_2447DCFC8(uint64_t a1, long long *a2, uint64_t a3)
{
  if (*(_DWORD *)a2)
  {
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = sub_2447DD220;
    block[3] = &unk_265195060;
    long long v24 = *a2;
    uint64_t v25 = *((void *)a2 + 2);
    id v4 = *(NSObject **)(a1 + 32);
    id v23 = (uint64_t **)*(id *)(a1 + 40);
    dispatch_async(v4, block);
    int v5 = v23;
  }
  else
  {
    uint64_t v7 = [MTRSetupPayload alloc];
    *(_DWORD *)uint64_t v15 = *(_DWORD *)a3;
    *(_DWORD *)&void v15[3] = *(_DWORD *)(a3 + 3);
    if (*(unsigned char *)(a3 + 7)) {
      char v17 = *(unsigned char *)(a3 + 8);
    }
    uint64_t v18 = *(void *)(a3 + 10);
    __int16 v19 = *(_WORD *)(a3 + 18);
    sub_2447E5E38(v20, a3 + 24);
    sub_2447E62FC(v21, a3 + 48);
    int v5 = sub_244BDBF10(v7, v15);
    sub_2447E6298((uint64_t)v21, (char *)v21[1]);
    sub_2447E6298((uint64_t)v20, (char *)v20[1]);
    char v8 = *(NSObject **)(a1 + 32);
    if (v5)
    {
      v10[0] = MEMORY[0x263EF8330];
      v10[1] = 3221225472;
      v10[2] = sub_2447DD3C4;
      v10[3] = &unk_265194F48;
      int v9 = &v12;
      id v12 = *(id *)(a1 + 40);
      __int16 v11 = v5;
      dispatch_async(v8, v10);
    }
    else
    {
      v13[0] = MEMORY[0x263EF8330];
      v13[1] = 3221225472;
      v13[2] = sub_2447DD308;
      void v13[3] = &unk_265194E00;
      int v9 = &v14;
      id v14 = *(id *)(a1 + 40);
      dispatch_async(v8, v13);
    }
  }
}

void sub_2447DD1F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_start(va, a12);
  sub_2447DD2CC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2447DD220(uint64_t a1)
{
  int v6 = 1;
  uint64_t v7 = "dwnfw_open_pairing_window";
  int v8 = *(_DWORD *)(a1 + 40);
  char v9 = 3;
  sub_244D7E78C((uint64_t)&v6);
  uint64_t v2 = *(void *)(a1 + 32);
  long long v4 = *(_OWORD *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 56);
  uint64_t v3 = sub_244B26908((uint64_t)MTRError, &v4);
  (*(void (**)(uint64_t, void, void *))(v2 + 16))(v2, 0, v3);
}

void sub_2447DD2BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2447DD2CC(uint64_t a1)
{
  return a1;
}

void sub_2447DD308(uint64_t a1)
{
  int v6 = 1;
  uint64_t v7 = "dwnfw_open_pairing_window";
  int v8 = 11;
  char v9 = 3;
  sub_244D7E78C((uint64_t)&v6);
  uint64_t v2 = *(void *)(a1 + 32);
  LODWORD(v4) = 11;
  *((void *)&v4 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTRBaseDevice.mm";
  int v5 = 1999;
  uint64_t v3 = sub_244B26908((uint64_t)MTRError, &v4);
  (*(void (**)(uint64_t, void, void *))(v2 + 16))(v2, 0, v3);
}

void sub_2447DD3B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2447DD3C4(uint64_t a1)
{
  int v3 = 1;
  long long v4 = "dwnfw_open_pairing_window";
  int v5 = 0;
  char v6 = 3;
  sub_244D7E78C((uint64_t)&v3);
  return (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_2447DD428(uint64_t a1)
{
  int v6 = 1;
  uint64_t v7 = "dwnfw_open_pairing_window";
  int v8 = *(_DWORD *)(a1 + 40);
  char v9 = 3;
  sub_244D7E78C((uint64_t)&v6);
  uint64_t v2 = *(void *)(a1 + 32);
  long long v4 = *(_OWORD *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 56);
  int v3 = sub_244B26908((uint64_t)MTRError, &v4);
  (*(void (**)(uint64_t, void, void *))(v2 + 16))(v2, 0, v3);
}

void sub_2447DD4C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2447DD4D4(uint64_t result, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a2 + 72);
  *(unsigned char *)(result + 72) = v2;
  if (v2) {
    *(_DWORD *)(result + 76) = *(_DWORD *)(a2 + 76);
  }
  return result;
}

void sub_2447DD4F0(uint64_t a1, void *a2)
{
  id v3 = a2;
  v6[0] = MEMORY[0x263EF8330];
  v6[1] = 3221225472;
  v6[2] = sub_2447DD5A4;
  v6[3] = &unk_265195038;
  id v7 = v3;
  long long v4 = *(NSObject **)(a1 + 32);
  id v8 = *(id *)(a1 + 40);
  id v5 = v3;
  dispatch_async(v4, v6);
}

uint64_t sub_2447DD5A4(uint64_t a1)
{
  sub_244B27864(*(void **)(a1 + 32), (uint64_t)v3);
  int v4 = 1;
  id v5 = "dwnfw_open_pairing_window";
  int v6 = v3[0];
  char v7 = 3;
  sub_244D7E78C((uint64_t)&v4);
  return (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_2447DD724(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2447DD858(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2447DDDFC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447DE24C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  sub_2446DE240((uint64_t)va);
  sub_244794634((_WORD **)(v16 - 120));

  _Unwind_Resume(a1);
}

uint64_t sub_2447DE310(void *a1, void *a2, uint64_t a3, void *a4, void *a5)
{
  id v8 = a2;
  id v9 = a4;
  __int16 v11 = objc_msgSend_objectForKeyedSubscript_(a1, v10, (uint64_t)v8);
  if (!v11)
  {
    int v13 = NSString;
    id v14 = v8;
    uint64_t v17 = objc_msgSend_UTF8String(v14, v15, v16);
    __int16 v19 = objc_msgSend_stringWithFormat_(v13, v18, @"%s is null when not expected to be", v17);
    sub_2447DE428(v19, 4, a5);

LABEL_6:
    uint64_t v12 = 0;
    goto LABEL_7;
  }
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    sub_2447DE428(v9, 4, a5);
    goto LABEL_6;
  }
  uint64_t v12 = 1;
LABEL_7:

  return v12;
}

void sub_2447DE3FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447DE428(void *a1, uint64_t a2, void *a3)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  id v5 = a1;
  int v6 = sub_244CC8484(0, "NotSpecified");
  if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
  {
    id v7 = v5;
    *(_DWORD *)long long buf = 136315138;
    uint64_t v24 = objc_msgSend_UTF8String(v7, v8, v9);
    _os_log_impl(&dword_2446BD000, v6, OS_LOG_TYPE_ERROR, "%s", buf, 0xCu);
  }

  if (sub_244CC4E58(1u))
  {
    id v12 = v5;
    objc_msgSend_UTF8String(v12, v13, v14);
    sub_244CC4DE0(0, 1);
  }
  if (a3)
  {
    uint64_t v21 = *MEMORY[0x263F08338];
    uint64_t v15 = objc_msgSend_mainBundle(MEMORY[0x263F086E0], v10, v11);
    uint64_t v17 = objc_msgSend_localizedStringForKey_value_table_(v15, v16, (uint64_t)v5, &stru_26F969DC8, 0);
    uint64_t v22 = v17;
    __int16 v19 = objc_msgSend_dictionaryWithObjects_forKeys_count_(NSDictionary, v18, (uint64_t)&v22, &v21, 1);

    objc_msgSend_errorWithDomain_code_userInfo_(MEMORY[0x263F087E8], v20, @"MTRErrorDomain", a2, v19);
    *a3 = (id)objc_claimAutoreleasedReturnValue();
  }
}

void sub_2447DE5D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447DE624(void *a1, uint64_t a2, void *a3)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  id v5 = a1;
  int v6 = sub_244CC8484(0, "NotSpecified");
  if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
  {
    id v7 = v5;
    uint64_t v10 = objc_msgSend_UTF8String(v7, v8, v9);
    long long v17 = *(_OWORD *)a2;
    uint64_t v18 = *(void *)(a2 + 16);
    uint64_t v11 = sub_244CB7B34((const char **)&v17, 1);
    *(_DWORD *)long long buf = 136315394;
    uint64_t v20 = v10;
    __int16 v21 = 2080;
    uint64_t v22 = v11;
    _os_log_impl(&dword_2446BD000, v6, OS_LOG_TYPE_ERROR, "%s: %s", buf, 0x16u);
  }

  if (sub_244CC4E58(1u))
  {
    id v12 = v5;
    objc_msgSend_UTF8String(v12, v13, v14);
    long long v17 = *(_OWORD *)a2;
    uint64_t v18 = *(void *)(a2 + 16);
    sub_244CB7B34((const char **)&v17, 1);
    sub_244CC4DE0(0, 1);
  }
  if (a3)
  {
    long long v15 = *(_OWORD *)a2;
    uint64_t v16 = *(void *)(a2 + 16);
    sub_244B26908((uint64_t)MTRError, &v15);
    *a3 = (id)objc_claimAutoreleasedReturnValue();
  }
}

void sub_2447DE7AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447DE95C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447DE98C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  LODWORD(v3) = 3;
  *((void *)&v3 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTRBaseDevice.mm";
  int v4 = 2239;
  int v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_2447DEA04(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447DEAB4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447DECB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, id a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_2447DEE84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2447DEF60(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447DF028(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

__CFString *sub_2447DF050(void *a1)
{
  id v1 = a1;
  int v4 = v1;
  if (v1)
  {
    id v5 = NSString;
    unsigned int v6 = objc_msgSend_unsignedShortValue(v1, v2, v3);
    objc_msgSend_stringWithFormat_(v5, v7, @"%u", v6);
    id v8 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    id v8 = @"wildcard";
  }

  return v8;
}

void sub_2447DF0D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

__CFString *sub_2447DF0E4(void *a1)
{
  id v1 = a1;
  int v4 = v1;
  if (v1)
  {
    id v5 = NSString;
    uint64_t v6 = objc_msgSend_unsignedLongLongValue(v1, v2, v3);
    uint64_t v9 = objc_msgSend_unsignedLongLongValue(v4, v7, v8);
    uint64_t v12 = objc_msgSend_unsignedLongLongValue(v4, v10, v11);
    uint64_t v14 = MTRClusterNameForID(v12, v13);
    objc_msgSend_stringWithFormat_(v5, v15, @"0x%llx (%llu, %@)", v6, v9, v14);
    uint64_t v16 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    uint64_t v16 = @"wildcard";
  }

  return v16;
}

void sub_2447DF1A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

__CFString *sub_2447DF1BC(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  uint64_t v9 = a3;
  if (v6)
  {
    uint64_t v10 = NSString;
    uint64_t v13 = objc_msgSend_unsignedLongLongValue(v6, v7, v8);
    if (v5)
    {
      uint64_t v14 = objc_msgSend_unsignedLongLongValue(v6, v11, v12);
      uint64_t v17 = objc_msgSend_unsignedLongLongValue(v5, v15, v16);
      uint64_t v18 = v9[2](v9, v17, v6);
      objc_msgSend_stringWithFormat_(v10, v19, @"0x%llx (%llu, %@)", v13, v14, v18);
      uint64_t v20 = (__CFString *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      uint64_t v21 = objc_msgSend_unsignedLongLongValue(v6, v11, v12);
      objc_msgSend_stringWithFormat_(v10, v22, @"0x%llx (%llu)", v13, v21);
      uint64_t v20 = (__CFString *)objc_claimAutoreleasedReturnValue();
    }
  }
  else
  {
    uint64_t v20 = @"wildcard";
  }

  return v20;
}

void sub_2447DF2EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_2447DF310(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v7 = (const char *)objc_msgSend_unsignedLongLongValue(v4, v5, v6);
  uint64_t v8 = MTRAttributeNameForID(a2, v7);

  return v8;
}

void sub_2447DF368(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447DF3FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447DF4D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447DF574(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447DF9A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447DFA5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2447DFB74(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447DFC3C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_2447DFC64(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v7 = (const char *)objc_msgSend_unsignedLongLongValue(v4, v5, v6);
  uint64_t v8 = MTREventNameForID(a2, v7);

  return v8;
}

void sub_2447DFCBC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447DFD50(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447DFE2C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447DFEC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447E02E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447E039C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2447E04B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447E057C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447E061C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447E06BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447E074C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447E0A1C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447E0AA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2447E0B98(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447E0D1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, void *a18, void *a19, void *a20)
{
  _Unwind_Resume(a1);
}

void sub_2447E0E48(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447E0EE4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447E0F68(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447E0FFC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447E1094(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447E113C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447E131C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447E13B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447E149C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447E1620(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, void *a18, void *a19, void *a20)
{
  _Unwind_Resume(a1);
}

void sub_2447E173C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447E17D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447E1858(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447E18EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447E1984(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447E1A2C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447E1C0C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447E1CA4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447E1D8C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447E1E90(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447E1F6C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447E2004(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447E2088(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447E211C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447E21B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447E2388(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447E2420(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447E2554(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447E2804(_Unwind_Exception *a1)
{
  sub_2446D7EC0((void **)(v7 - 96));
  sub_244794634((_WORD **)(v7 - 88));

  _Unwind_Resume(a1);
}

uint64_t sub_2447E2870(void *a1, void **a2, void *a3, uint64_t a4, void *a5)
{
  id v9 = a3;
  sub_244CC8F5C(0x62FuLL, 0, v33);
  if (*a1) {
    sub_244CC8A0C((_WORD *)*a1);
  }
  *a1 = *(void *)v33;
  *(void *)long long v33 = 0;
  sub_244794634((_WORD **)v33);
  if (*a1)
  {
    sub_244CB62B8((uint64_t)v33);
    long long v35 = 0;
    uint64_t v36 = 0;
    uint64_t v34 = &unk_26F9536C8;
    char v37 = 0;
    sub_2447945A0((uint64_t)&v34, a1, 1);
    sub_244CB6318((uint64_t)v33, (uint64_t)&v34, 0xFFFFFFFF, (uint64_t)&v41);
    long long v41 = 0uLL;
    uint64_t v42 = 0;
    sub_2447D6DCC(v9, v33, 256, &v41);
    if (v41)
    {
      uint64_t v10 = @"Unable to encode data-value to TLV";
      uint64_t v11 = &v32;
    }
    else
    {
      sub_2446DE160((uint64_t)v33, (_WORD **)a1, &v30);
      long long v41 = v30;
      uint64_t v42 = v31;
      if (v30)
      {
        uint64_t v10 = @"Unable to encode data-value to TLV";
        uint64_t v11 = &v29;
      }
      else
      {
        uint64_t v14 = (void *)*a1;
        if (*(void *)*a1)
        {
          size_t v15 = v14[2];
          sub_2447E6744(a2, v15, 1uLL);
          if (!*a2)
          {
            int v26 = 11;
            uint64_t v27 = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTRBaseDevice.mm";
            int v28 = 3101;
            sub_2447DE624(@"Unable to allocate decoding buffer", (uint64_t)&v26, a5);
            goto LABEL_10;
          }
          unint64_t v16 = 0;
          while (1)
          {
            uint64_t v17 = (_WORD *)*a1;
            if (!*a1) {
              break;
            }
            size_t v18 = *((void *)v17 + 3);
            if (v18 > v15)
            {
              int v25 = 3;
              uint64_t v20 = @"Encoding buffer size is bigger than it claimed";
              int v21 = 3109;
              uint64_t v22 = &v25;
              goto LABEL_26;
            }
            memcpy((char *)*a2 + v16, *((const void **)v17 + 1), v18);
            uint64_t v19 = *(void *)(*a1 + 24);
            v16 += v19;
            v15 -= v19;
            sub_2447E66C8((uint64_t **)a1);
          }
          if (v15)
          {
            int v24 = 3;
            uint64_t v20 = @"Did not copy all data from Encoding buffer for some reason";
            int v21 = 3120;
            uint64_t v22 = &v24;
LABEL_26:
            *((void *)v22 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framew"
                                   "ork/CHIP/MTRBaseDevice.mm";
            v22[4] = v21;
            sub_2447DE624(v20, (uint64_t)v22, a5);
            goto LABEL_10;
          }
          sub_244CB39B8(a4, (uint64_t)*a2, v16);
        }
        else
        {
          sub_244CB39B8(a4, v14[1], v14[3]);
        }
        sub_244CB54B4(a4, 256, &v30);
        long long v41 = v30;
        uint64_t v42 = v31;
        if (!v30)
        {
          uint64_t v12 = 1;
          goto LABEL_11;
        }
        uint64_t v10 = @"data-value TLV encoding did not create a TLV element";
        uint64_t v11 = (char *)&v23;
      }
    }
    *(_OWORD *)uint64_t v11 = v41;
    *((void *)v11 + 2) = v42;
    sub_2447DE624(v10, (uint64_t)v11, a5);
LABEL_10:
    uint64_t v12 = 0;
LABEL_11:
    uint64_t v34 = &unk_26F9536C8;
    sub_244794634(&v36);
    sub_244794634(&v35);
    goto LABEL_12;
  }
  int v38 = 11;
  uint64_t v39 = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTRBaseDevice.mm";
  int v40 = 3078;
  sub_2447DE624(@"Unable to allocate encoding buffer", (uint64_t)&v38, a5);
  uint64_t v12 = 0;
LABEL_12:

  return v12;
}

void sub_2447E2B98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  sub_2446DE240((uint64_t)&a30);

  _Unwind_Resume(a1);
}

void sub_2447E2C98(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447E2F50(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447E3058(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447E34FC(_Unwind_Exception *a1)
{
  uint64_t v10 = v7;

  sub_2446D7EC0((void **)(v9 - 112));
  sub_244794634((_WORD **)(v9 - 104));

  _Unwind_Resume(a1);
}

void *sub_2447E3664(void *a1)
{
  return a1;
}

void sub_2447E36A0(void *a1)
{
  sub_2447E6FA8(a1 + 9);
  sub_2447E6794(a1 + 5);
  sub_2447E6818(a1 + 1);

  JUMPOUT(0x245695FA0);
}

uint64_t sub_2447E36FC(uint64_t result, uint64_t a2, long long *a3)
{
  if (!*(unsigned char *)(result + 112))
  {
    *(unsigned char *)(result + 112) = 1;
    long long v4 = *a3;
    uint64_t v5 = *((void *)a3 + 2);
    uint64_t v3 = *(void *)(result + 64);
    if (!v3) {
      sub_2447E68F0();
    }
    return (*(uint64_t (**)(uint64_t, long long *))(*(void *)v3 + 48))(v3, &v4);
  }
  return result;
}

uint64_t sub_2447E376C(uint64_t a1, uint64_t a2)
{
  if (!*(unsigned char *)(a1 + 112))
  {
    LODWORD(v5) = 33;
    *((void *)&v5 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP"
                           "/MTRBaseDevice.mm";
    int v6 = 1338;
    sub_2447E36FC(a1, a2, &v5);
  }
  return sub_2447E689C(a1 + 72, a2);
}

void sub_2447E37D8(uint64_t a1, const char *a2, uint64_t a3)
{
  uint64_t v3 = objc_msgSend_dictionary(MEMORY[0x263EFF9A0], a2, a3);
  long long v4 = (void *)qword_268EBE910;
  qword_268EBE910 = v3;

  id v5 = objc_alloc_init(MEMORY[0x263F08958]);
  int v6 = (void *)qword_268EBE908;
  qword_268EBE908 = (uint64_t)v5;
}

uint64_t sub_2447E3834(uint64_t a1, uint64_t *a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = &unk_26F956F80;
  *(unsigned char *)(a1 + 24) = 0;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(unsigned char *)(a1 + 88) = 0;
  *(void *)(a1 + 104) = 0;
  *(unsigned char *)(a1 + 112) = 0;
  *(_WORD *)(a1 + 113) = 1;
  sub_244D88328((void *)a1, a2);
  return a1;
}

void sub_2447E38A4(_Unwind_Exception *a1)
{
  sub_244D87F44(v1);
  _Unwind_Resume(a1);
}

void sub_2447E38B8(void *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v114 = *MEMORY[0x263EF8340];
  id v7 = a1;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    unint64_t v16 = sub_244CC8484(0, "NotSpecified");
    if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 138412290;
      id v113 = (id)objc_opt_class();
      id v17 = v113;
      _os_log_impl(&dword_2446BD000, v16, OS_LOG_TYPE_ERROR, "Error: Unsupported object to encode: %@", buf, 0xCu);
    }
    if (sub_244CC4E58(1u))
    {
      objc_opt_class();
      sub_244CC4DE0(0, 1);
    }
    *(_DWORD *)a4 = 47;
    *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "MTRBaseDevice.mm";
    *(_DWORD *)(a4 + 16) = 620;
    goto LABEL_18;
  }
  uint64_t v9 = objc_msgSend_objectForKeyedSubscript_(v7, v8, @"type");
  uint64_t v11 = objc_msgSend_objectForKeyedSubscript_(v7, v10, @"value");
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    size_t v18 = sub_244CC8484(0, "NotSpecified");
    if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 138412290;
      id v113 = v7;
      _os_log_impl(&dword_2446BD000, v18, OS_LOG_TYPE_ERROR, "Error: Object to encode has no MTRTypeKey: %@", buf, 0xCu);
    }

    if (sub_244CC4E58(1u)) {
      sub_244CC4DE0(0, 1);
    }
    *(_DWORD *)a4 = 47;
    *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "MTRBaseDevice.mm";
    int v19 = 626;
    goto LABEL_16;
  }
  if (objc_msgSend_isEqualToString_(v9, v12, @"SignedInteger"))
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      objc_msgSend_longLongValue(v11, v14, v15);
      sub_244CB69FC();
      goto LABEL_17;
    }
    int v26 = sub_244CC8484(0, "NotSpecified");
    if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 138412290;
      id v113 = (id)objc_opt_class();
      id v27 = v113;
      _os_log_impl(&dword_2446BD000, v26, OS_LOG_TYPE_ERROR, "Error: Object to encode has corrupt signed integer type: %@", buf, 0xCu);
    }
    if (sub_244CC4E58(1u))
    {
      objc_opt_class();
      sub_244CC4DE0(0, 1);
    }
    *(_DWORD *)a4 = 47;
    *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "MTRBaseDevice.mm";
    int v19 = 632;
    goto LABEL_16;
  }
  if (objc_msgSend_isEqualToString_(v9, v13, @"UnsignedInteger"))
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      objc_msgSend_unsignedLongLongValue(v11, v21, v22);
      sub_244CB68CC();
      goto LABEL_17;
    }
    uint64_t v31 = sub_244CC8484(0, "NotSpecified");
    if (os_log_type_enabled(v31, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 138412290;
      id v113 = (id)objc_opt_class();
      id v32 = v113;
      _os_log_impl(&dword_2446BD000, v31, OS_LOG_TYPE_ERROR, "Error: Object to encode has corrupt unsigned integer type: %@", buf, 0xCu);
    }
    if (sub_244CC4E58(1u))
    {
      objc_opt_class();
      sub_244CC4DE0(0, 1);
    }
    *(_DWORD *)a4 = 47;
    *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "MTRBaseDevice.mm";
    int v19 = 639;
    goto LABEL_16;
  }
  if (objc_msgSend_isEqualToString_(v9, v20, @"Boolean"))
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      objc_msgSend_BOOLValue(v11, v24, v25);
      sub_244CB65C8();
      goto LABEL_17;
    }
    uint64_t v36 = sub_244CC8484(0, "NotSpecified");
    if (os_log_type_enabled(v36, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 138412290;
      id v113 = (id)objc_opt_class();
      id v37 = v113;
      _os_log_impl(&dword_2446BD000, v36, OS_LOG_TYPE_ERROR, "Error: Object to encode has corrupt BOOLean type: %@", buf, 0xCu);
    }
    if (sub_244CC4E58(1u))
    {
      objc_opt_class();
      sub_244CC4DE0(0, 1);
    }
    *(_DWORD *)a4 = 47;
    *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "MTRBaseDevice.mm";
    int v19 = 646;
    goto LABEL_16;
  }
  if (objc_msgSend_isEqualToString_(v9, v23, @"Float"))
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      objc_msgSend_floatValue(v11, v29, v30);
      sub_244CB6ABC();
      goto LABEL_17;
    }
    uint64_t v39 = sub_244CC8484(0, "NotSpecified");
    if (os_log_type_enabled(v39, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 138412290;
      id v113 = (id)objc_opt_class();
      id v40 = v113;
      _os_log_impl(&dword_2446BD000, v39, OS_LOG_TYPE_ERROR, "Error: Object to encode has corrupt float type: %@", buf, 0xCu);
    }
    if (sub_244CC4E58(1u))
    {
      objc_opt_class();
      sub_244CC4DE0(0, 1);
    }
    *(_DWORD *)a4 = 47;
    *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "MTRBaseDevice.mm";
    int v19 = 653;
    goto LABEL_16;
  }
  if (objc_msgSend_isEqualToString_(v9, v28, @"Double"))
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      objc_msgSend_doubleValue(v11, v34, v35);
      sub_244CB6ACC();
      goto LABEL_17;
    }
    uint64_t v44 = sub_244CC8484(0, "NotSpecified");
    if (os_log_type_enabled(v44, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 138412290;
      id v113 = (id)objc_opt_class();
      id v45 = v113;
      _os_log_impl(&dword_2446BD000, v44, OS_LOG_TYPE_ERROR, "Error: Object to encode has corrupt double type: %@", buf, 0xCu);
    }
    if (sub_244CC4E58(1u))
    {
      objc_opt_class();
      sub_244CC4DE0(0, 1);
    }
    *(_DWORD *)a4 = 47;
    *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "MTRBaseDevice.mm";
    int v19 = 660;
    goto LABEL_16;
  }
  if (objc_msgSend_isEqualToString_(v9, v33, @"Null"))
  {
    sub_244CB710C();
    goto LABEL_17;
  }
  if (objc_msgSend_isEqualToString_(v9, v38, @"UTF8String"))
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      uint64_t v42 = (char *)sub_2447E4C90(v11);
      sub_244CB6D80(a2, v42, v43, a4);
      goto LABEL_17;
    }
    unsigned int v64 = sub_244CC8484(0, "NotSpecified");
    if (os_log_type_enabled(v64, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 138412290;
      id v113 = (id)objc_opt_class();
      id v65 = v113;
      _os_log_impl(&dword_2446BD000, v64, OS_LOG_TYPE_ERROR, "Error: Object to encode has corrupt UTF8 string type: %@", buf, 0xCu);
    }
    if (sub_244CC4E58(1u))
    {
      objc_opt_class();
      sub_244CC4DE0(0, 1);
    }
    *(_DWORD *)a4 = 47;
    *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "MTRBaseDevice.mm";
    int v19 = 670;
    goto LABEL_16;
  }
  if (objc_msgSend_isEqualToString_(v9, v41, @"OctetString"))
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      uint64_t v47 = (char *)sub_2447E4CFC(v11);
      sub_244CB6ADC(a2, v47, v48, a4);
      goto LABEL_17;
    }
    uint64_t v74 = sub_244CC8484(0, "NotSpecified");
    if (os_log_type_enabled(v74, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 138412290;
      id v113 = (id)objc_opt_class();
      id v75 = v113;
      _os_log_impl(&dword_2446BD000, v74, OS_LOG_TYPE_ERROR, "Error: Object to encode has corrupt octet string type: %@", buf, 0xCu);
    }
    if (sub_244CC4E58(1u))
    {
      objc_opt_class();
      sub_244CC4DE0(0, 1);
    }
    *(_DWORD *)a4 = 47;
    *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "MTRBaseDevice.mm";
    int v19 = 677;
    goto LABEL_16;
  }
  if (!objc_msgSend_isEqualToString_(v9, v46, @"Structure"))
  {
    if (objc_msgSend_isEqualToString_(v9, v49, @"Array"))
    {
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        int v109 = 0;
        *(void *)(a4 + 8) = 0;
        *(void *)(a4 + 16) = 0;
        *(void *)a4 = 0;
        sub_244CB7594(a2, a3, 22, &v109, a4);
        if (*(_DWORD *)a4) {
          goto LABEL_17;
        }
        long long v103 = 0u;
        long long v104 = 0u;
        long long v101 = 0u;
        long long v102 = 0u;
        id v96 = v11;
        uint64_t v100 = objc_msgSend_countByEnumeratingWithState_objects_count_(v96, v66, (uint64_t)&v101, v110, 16);
        if (v100)
        {
          uint64_t v98 = *(void *)v102;
          do
          {
            for (uint64_t i = 0; i != v100; ++i)
            {
              if (*(void *)v102 != v98) {
                objc_enumerationMutation(v96);
              }
              uint64_t v68 = *(void **)(*((void *)&v101 + 1) + 8 * i);
              objc_opt_class();
              if ((objc_opt_isKindOfClass() & 1) == 0)
              {
                id v89 = sub_244CC8484(0, "NotSpecified");
                if (os_log_type_enabled(v89, OS_LOG_TYPE_ERROR))
                {
                  int v90 = objc_opt_class();
                  *(_DWORD *)long long buf = 138412290;
                  id v113 = v90;
                  id v91 = v90;
                  _os_log_impl(&dword_2446BD000, v89, OS_LOG_TYPE_ERROR, "Error: Array element to encode has corrupt type: %@", buf, 0xCu);
                }
                if (sub_244CC4E58(1u))
                {
                  objc_opt_class();
                  sub_244CC4DE0(0, 1);
                }
                int v92 = 729;
                goto LABEL_154;
              }
              uint64_t v70 = objc_msgSend_objectForKeyedSubscript_(v68, v69, @"data");
              uint64_t v71 = (void *)v70;
              if (!v70)
              {
                uint64_t v93 = sub_244CC8484(0, "NotSpecified");
                if (os_log_type_enabled(v93, OS_LOG_TYPE_ERROR))
                {
                  *(_DWORD *)long long buf = 138412290;
                  id v113 = v68;
                  _os_log_impl(&dword_2446BD000, v93, OS_LOG_TYPE_ERROR, "Error: Array element to encode has corrupt value: %@", buf, 0xCu);
                }

                if (sub_244CC4E58(1u)) {
                  sub_244CC4DE0(0, 1);
                }
                int v92 = 734;
LABEL_154:
                *(_DWORD *)a4 = 47;
                *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Fra"
                                      "mework/CHIP/MTRBaseDevice.mm";
                *(_DWORD *)(a4 + 16) = v92;
LABEL_155:

                goto LABEL_17;
              }
              *(void *)a4 = 0;
              *(void *)(a4 + 8) = 0;
              *(void *)(a4 + 16) = 0;
              sub_2447E38B8(v70, a2, 256);
              BOOL v72 = *(_DWORD *)a4 == 0;

              if (!v72) {
                goto LABEL_155;
              }
            }
            uint64_t v100 = objc_msgSend_countByEnumeratingWithState_objects_count_(v96, v73, (uint64_t)&v101, v110, 16);
          }
          while (v100);
        }

        *(void *)a4 = 0;
        *(void *)(a4 + 8) = 0;
        *(void *)(a4 + 16) = 0;
        sub_244CB7708((uint64_t)a2, v109, a4);
        if (*(_DWORD *)a4) {
          goto LABEL_17;
        }
        *(_DWORD *)a4 = 0;
        *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/MTRBaseDevice.mm";
        int v19 = 739;
      }
      else
      {
        id v79 = sub_244CC8484(0, "NotSpecified");
        if (os_log_type_enabled(v79, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)long long buf = 138412290;
          id v113 = (id)objc_opt_class();
          id v80 = v113;
          _os_log_impl(&dword_2446BD000, v79, OS_LOG_TYPE_ERROR, "Error: Object to encode has corrupt array type: %@", buf, 0xCu);
        }
        if (sub_244CC4E58(1u))
        {
          objc_opt_class();
          sub_244CC4DE0(0, 1);
        }
        *(_DWORD *)a4 = 47;
        *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/MTRBaseDevice.mm";
        int v19 = 722;
      }
    }
    else
    {
      uint64_t v76 = sub_244CC8484(0, "NotSpecified");
      if (os_log_type_enabled(v76, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)long long buf = 138412290;
        id v113 = v9;
        _os_log_impl(&dword_2446BD000, v76, OS_LOG_TYPE_ERROR, "Error: Unsupported type to encode: %@", buf, 0xCu);
      }

      if (sub_244CC4E58(1u)) {
        sub_244CC4DE0(0, 1);
      }
      *(_DWORD *)a4 = 47;
      *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/MTRBaseDevice.mm";
      int v19 = 742;
    }
LABEL_16:
    *(_DWORD *)(a4 + 16) = v19;
    goto LABEL_17;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    id v77 = sub_244CC8484(0, "NotSpecified");
    if (os_log_type_enabled(v77, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 138412290;
      id v113 = (id)objc_opt_class();
      id v78 = v113;
      _os_log_impl(&dword_2446BD000, v77, OS_LOG_TYPE_ERROR, "Error: Object to encode has corrupt structure type: %@", buf, 0xCu);
    }
    if (sub_244CC4E58(1u))
    {
      objc_opt_class();
      sub_244CC4DE0(0, 1);
    }
    *(_DWORD *)a4 = 47;
    *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "MTRBaseDevice.mm";
    int v19 = 684;
    goto LABEL_16;
  }
  int v109 = 0;
  *(void *)(a4 + 8) = 0;
  *(void *)(a4 + 16) = 0;
  *(void *)a4 = 0;
  sub_244CB7594(a2, a3, 21, &v109, a4);
  if (*(_DWORD *)a4) {
    goto LABEL_17;
  }
  long long v107 = 0u;
  long long v108 = 0u;
  long long v105 = 0u;
  long long v106 = 0u;
  id obj = v11;
  uint64_t v97 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v50, (uint64_t)&v105, v111, 16);
  if (!v97) {
    goto LABEL_84;
  }
  id v95 = *(id *)v106;
  while (2)
  {
    for (uint64_t j = 0; j != v97; ++j)
    {
      if (*(id *)v106 != v95) {
        objc_enumerationMutation(obj);
      }
      uint64_t v52 = *(void **)(*((void *)&v105 + 1) + 8 * j);
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) == 0)
      {
        long long v81 = sub_244CC8484(0, "NotSpecified");
        if (os_log_type_enabled(v81, OS_LOG_TYPE_ERROR))
        {
          id v82 = objc_opt_class();
          *(_DWORD *)long long buf = 138412290;
          id v113 = v82;
          id v83 = v82;
          _os_log_impl(&dword_2446BD000, v81, OS_LOG_TYPE_ERROR, "Error: Structure element to encode has corrupt type: %@", buf, 0xCu);
        }
        if (sub_244CC4E58(1u))
        {
          objc_opt_class();
          sub_244CC4DE0(0, 1);
        }
        *(_DWORD *)a4 = 47;
        *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/MTRBaseDevice.mm";
        *(_DWORD *)(a4 + 16) = 691;
        goto LABEL_143;
      }
      uint64_t v54 = objc_msgSend_objectForKeyedSubscript_(v52, v53, @"contextTag");
      uint64_t v56 = objc_msgSend_objectForKeyedSubscript_(v52, v55, @"data");
      int v99 = (void *)v56;
      if (v54) {
        BOOL v57 = v56 == 0;
      }
      else {
        BOOL v57 = 1;
      }
      if (v57)
      {
        id v84 = sub_244CC8484(0, "NotSpecified");
        if (os_log_type_enabled(v84, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)long long buf = 138412290;
          id v113 = v52;
          _os_log_impl(&dword_2446BD000, v84, OS_LOG_TYPE_ERROR, "Error: Structure element to encode has corrupt value: %@", buf, 0xCu);
        }

        if (sub_244CC4E58(1u)) {
          sub_244CC4DE0(0, 1);
        }
        int v85 = 697;
LABEL_141:
        *(_DWORD *)a4 = 47;
        *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/C"
                              "HIP/MTRBaseDevice.mm";
        *(_DWORD *)(a4 + 16) = v85;
        uint64_t v60 = v99;
LABEL_142:

LABEL_143:
        goto LABEL_17;
      }
      objc_opt_class();
      uint64_t v60 = v99;
      if ((objc_opt_isKindOfClass() & 1) == 0)
      {
        id v86 = sub_244CC8484(0, "NotSpecified");
        if (os_log_type_enabled(v86, OS_LOG_TYPE_ERROR))
        {
          id v87 = objc_opt_class();
          *(_DWORD *)long long buf = 138412290;
          id v113 = v87;
          id v88 = v87;
          _os_log_impl(&dword_2446BD000, v86, OS_LOG_TYPE_ERROR, "Error: Structure element to encode has corrupt tag type: %@", buf, 0xCu);
        }
        if (sub_244CC4E58(1u))
        {
          objc_opt_class();
          sub_244CC4DE0(0, 1);
        }
        int v85 = 701;
        goto LABEL_141;
      }
      unint64_t v61 = objc_msgSend_unsignedLongLongValue(v54, v58, v59);
      if (v61 <= 0xFF) {
        unint64_t v62 = v61;
      }
      else {
        unint64_t v62 = v61 ^ 0xFFFFFFFF00000000;
      }
      *(void *)a4 = 0;
      *(void *)(a4 + 8) = 0;
      *(void *)(a4 + 16) = 0;
      sub_2447E38B8(v99, a2, v62);
      if (*(_DWORD *)a4) {
        goto LABEL_142;
      }
    }
    uint64_t v97 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v63, (uint64_t)&v105, v111, 16);
    if (v97) {
      continue;
    }
    break;
  }
LABEL_84:

  *(void *)a4 = 0;
  *(void *)(a4 + 8) = 0;
  *(void *)(a4 + 16) = 0;
  sub_244CB7708((uint64_t)a2, v109, a4);
  if (!*(_DWORD *)a4)
  {
    *(_DWORD *)a4 = 0;
    *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "MTRBaseDevice.mm";
    int v19 = 717;
    goto LABEL_16;
  }
LABEL_17:

LABEL_18:
}

void sub_2447E4B44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2447E4C90(void *a1)
{
  id v1 = a1;
  uint64_t v4 = objc_msgSend_UTF8String(v1, v2, v3);
  uint64_t v6 = objc_msgSend_lengthOfBytesUsingEncoding_(v1, v5, 4);
  sub_24479476C(&v8, v4, v6);

  return v8;
}

void sub_2447E4CEC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2447E4CFC(void *a1)
{
  id v1 = a1;
  uint64_t v4 = objc_msgSend_bytes(v1, v2, v3);
  uint64_t v7 = objc_msgSend_length(v1, v5, v6);
  sub_2446C1098(&v9, v4, v7);

  return v9;
}

void sub_2447E4D54(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447E4D64(uint64_t a1, void *a2)
{
}

uint64_t sub_2447E4D70(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5)
{
  id v9 = a2;
  *(unsigned char *)(a1 + 16) = 0;
  *(void *)a1 = &unk_26F944DC0;
  *(void *)(a1 + 8) = v9;
  id v10 = a4;
  *(void *)(a1 + 24) = MEMORY[0x2456969D0](a3);
  uint64_t v11 = MEMORY[0x2456969D0](v10);

  *(void *)(a1 + 32) = v11;
  *(void *)(a1 + 40) = a5;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 48) = sub_2447E5578;
  return a1;
}

void sub_2447E4E0C(id *a1)
{
  sub_2447E5628(a1);

  JUMPOUT(0x245695FA0);
}

void sub_2447E4E44(void *a1, uint64_t a2, unsigned char *a3, void *a4)
{
  void (**v8)(void *__return_ptr, void, void, void, void, void, void);
  void *v9;
  unsigned char *v10;
  NSObject *v11;
  char *v12;
  long long v13;
  uint64_t v14;
  long long v15;
  uint64_t v16;
  long long v17;
  uint64_t v18;
  long long v19;
  uint64_t v20;
  uint8_t buf[4];
  unint64_t v22;
  __int16 v23;
  char *v24;
  uint64_t v25;

  uint64_t v25 = *MEMORY[0x263EF8340];
  id v7 = a4;
  uint64_t v8 = (void (**)(void *__return_ptr, void, void, void, void, void, void))MEMORY[0x2456969D0](a1[4]);
  id v9 = (void *)a1[4];
  a1[4] = 0;

  if (v7)
  {
    sub_2447E51C0((uint64_t)a1, v7, 0);
  }
  else
  {
    int v19 = 0uLL;
    uint64_t v20 = 0;
    id v10 = sub_2446F7170(a3);
    ((void (**)(long long *__return_ptr, void, uint64_t, unsigned char *, void, void, void *))v8)[2](&v19, v8, a2, v10, a1[5], a1[6], a1);
    if (v19)
    {
      uint64_t v11 = sub_244CC8484(9u, "Controller");
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      {
        id v17 = v19;
        size_t v18 = v20;
        uint64_t v12 = sub_244CB7B34((const char **)&v17, 1);
        *(_DWORD *)long long buf = 136315394;
        uint64_t v22 = 0x8000000244E7AA2BLL & 0x7FFFFFFFFFFFFFFFLL;
        uint64_t v23 = 2080;
        int v24 = v12;
        _os_log_impl(&dword_2446BD000, v11, OS_LOG_TYPE_ERROR, "Failure performing action. C++-mangled success callback type: '%s', error: %s", buf, 0x16u);
      }

      if (sub_244CC4E58(1u))
      {
        uint64_t v15 = v19;
        unint64_t v16 = v20;
        sub_244CB7B34((const char **)&v15, 1);
        sub_244CC4DE0(9u, 1);
      }
      uint64_t v13 = v19;
      uint64_t v14 = v20;
      sub_2447E5578((uint64_t)a1, (uint64_t)&v13);
    }
  }
}

void sub_2447E5034(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2447E5064(uint64_t a1, const char *a2, uint64_t a3)
{
  uint64_t v20 = *MEMORY[0x263EF8340];
  uint64_t v4 = objc_msgSend_date(MEMORY[0x263EFF910], a2, a3);
  id v5 = *(void **)(a1 + 56);
  *(void *)(a1 + 56) = v4;

  uint64_t v6 = NSString;
  uint64_t v7 = arc4random();
  uint64_t v9 = objc_msgSend_stringWithFormat_(v6, v8, @"Response Time: %s+%u", 0x8000000244E7AA2BLL & 0x7FFFFFFFFFFFFFFFLL, v7);
  id v10 = *(void **)(a1 + 64);
  *(void *)(a1 + 64) = v9;

  uint64_t v11 = sub_244CC8484(9u, "Controller");
  if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
  {
    uint64_t v14 = objc_msgSend_UTF8String(*(void **)(a1 + 64), v12, v13);
    *(_DWORD *)long long buf = 136315138;
    uint64_t v19 = v14;
    _os_log_impl(&dword_2446BD000, v11, OS_LOG_TYPE_INFO, "%s", buf, 0xCu);
  }

  uint64_t result = sub_244CC4E58(3u);
  if (result)
  {
    objc_msgSend_UTF8String(*(void **)(a1 + 64), v16, v17);
    return sub_244CC4DE0(9u, 3);
  }
  return result;
}

void sub_2447E51A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447E51C0(uint64_t a1, void *a2, void *a3)
{
  uint64_t v28 = *MEMORY[0x263EF8340];
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = v6;
  if (a1)
  {
    uint64_t v8 = *(NSObject **)(a1 + 8);
    if (v8)
    {
      block[0] = MEMORY[0x263EF8330];
      block[1] = 3221225472;
      block[2] = sub_2447E53E4;
      block[3] = &unk_2651933A0;
      uint64_t v23 = a1;
      id v21 = v6;
      id v22 = v5;
      dispatch_async(v8, block);
    }
    else
    {
      uint64_t v9 = sub_244CC8484(9u, "Controller");
      if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
      {
        uint64_t v12 = objc_msgSend_UTF8String(*(void **)(a1 + 64), v10, v11);
        objc_msgSend_timeIntervalSinceNow(*(void **)(a1 + 56), v13, v14);
        *(_DWORD *)long long buf = 136315394;
        uint64_t v25 = v12;
        __int16 v26 = 2048;
        double v27 = -v15;
        _os_log_impl(&dword_2446BD000, v9, OS_LOG_TYPE_INFO, "%s %f seconds: can't dispatch response; no queue",
          buf,
          0x16u);
      }

      if (sub_244CC4E58(3u))
      {
        objc_msgSend_UTF8String(*(void **)(a1 + 64), v16, v17);
        objc_msgSend_timeIntervalSinceNow(*(void **)(a1 + 56), v18, v19);
        sub_244CC4DE0(9u, 3);
      }
      if (!*(unsigned char *)(a1 + 16)) {
        (*(void (**)(uint64_t))(*(void *)a1 + 8))(a1);
      }
    }
  }
}

void sub_2447E53B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

unsigned char *sub_2447E53E4(uint64_t a1)
{
  uint64_t v20 = *MEMORY[0x263EF8340];
  int v2 = sub_244CC8484(9u, "Controller");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    uint64_t v5 = objc_msgSend_UTF8String(*(void **)(*(void *)(a1 + 48) + 64), v3, v4);
    objc_msgSend_timeIntervalSinceNow(*(void **)(*(void *)(a1 + 48) + 56), v6, v7);
    *(_DWORD *)long long buf = 136315394;
    uint64_t v17 = v5;
    __int16 v18 = 2048;
    double v19 = -v8;
    _os_log_impl(&dword_2446BD000, v2, OS_LOG_TYPE_INFO, "%s %f seconds", buf, 0x16u);
  }

  if (sub_244CC4E58(3u))
  {
    objc_msgSend_UTF8String(*(void **)(*(void *)(a1 + 48) + 64), v9, v10);
    objc_msgSend_timeIntervalSinceNow(*(void **)(*(void *)(a1 + 48) + 56), v11, v12);
    sub_244CC4DE0(9u, 3);
  }
  uint64_t v14 = *(void *)(a1 + 48);
  uint64_t v13 = (unsigned char **)(a1 + 48);
  (*(void (**)(void, void))(*(void *)(v14 + 24) + 16))(*(void *)(v14 + 24), *(v13 - 2));
  uint64_t result = *v13;
  if (*v13)
  {
    if (!result[16]) {
      return (unsigned char *)(*(uint64_t (**)(unsigned char *))(*(void *)result + 8))(result);
    }
  }
  return result;
}

void sub_2447E5560(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447E5578(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)a2;
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v3 = sub_244B26908((uint64_t)MTRError, &v4);
  sub_2447E51C0(a1, v3, 0);
}

void sub_2447E55DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447E55F0(id *a1)
{
  sub_2447E5628(a1);

  JUMPOUT(0x245695FA0);
}

id *sub_2447E5628(id *a1)
{
  return a1;
}

void sub_2447E5674(uint64_t a1, void *a2)
{
  id v3 = a2;
  (*(void (**)(uint64_t))(*(void *)a1 + 24))(a1);
  id v6 = objc_msgSend_deviceController(v3, v4, v5);
  uint64_t v9 = objc_msgSend_nodeID(v3, v7, v8);
  v11[0] = MEMORY[0x263EF8330];
  v11[1] = 3221225472;
  v11[2] = sub_2447E5838;
  v11[3] = &unk_265195210;
  void v11[4] = a1;
  objc_msgSend_getSessionForCommissioneeDevice_completion_(v6, v10, v9, v11);
}

void sub_2447E574C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447E5768(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  (*(void (**)(uint64_t))(*(void *)a1 + 24))(a1);
  v7[0] = MEMORY[0x263EF8330];
  v7[1] = 3221225472;
  v7[2] = sub_2447E5860;
  void v7[3] = &unk_265195210;
  void v7[4] = a1;
  objc_msgSend_getSessionForNode_completion_(v5, v6, a2, v7);
}

void sub_2447E5828(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2447E5838(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 32) + 16))();
}

uint64_t sub_2447E5860(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 32) + 16))();
}

void *sub_2447E5888(void *a1, uint64_t a2)
{
  v4[4] = *MEMORY[0x263EF8340];
  sub_2447E58FC((uint64_t)v4, a2);
  sub_2447E5994(v4, a1);
  sub_2447E6FA8(v4);
  return a1;
}

uint64_t sub_2447E58FC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void *sub_2447E5994(void *result, void *a2)
{
  v6[3] = *MEMORY[0x263EF8340];
  if (a2 != result)
  {
    uint64_t v3 = result;
    long long v4 = (void *)result[3];
    id v5 = (void *)a2[3];
    if (v4 == result)
    {
      if (v5 == a2)
      {
        (*(void (**)(void *, void *))(*result + 24))(result, v6);
        (*(void (**)(void))(*(void *)v3[3] + 32))(v3[3]);
        void v3[3] = 0;
        (*(void (**)(void, void *))(*(void *)a2[3] + 24))(a2[3], v3);
        (*(void (**)(void))(*(void *)a2[3] + 32))(a2[3]);
        a2[3] = 0;
        void v3[3] = v3;
        (*(void (**)(void *, void *))(v6[0] + 24))(v6, a2);
        uint64_t result = (void *)(*(uint64_t (**)(void *))(v6[0] + 32))(v6);
      }
      else
      {
        (*(void (**)(void *, void *))(*result + 24))(result, a2);
        uint64_t result = (void *)(*(uint64_t (**)(void))(*(void *)v3[3] + 32))(v3[3]);
        void v3[3] = a2[3];
      }
      a2[3] = a2;
    }
    else if (v5 == a2)
    {
      (*(void (**)(void *, void *))(*a2 + 24))(a2, result);
      uint64_t result = (void *)(*(uint64_t (**)(void))(*(void *)a2[3] + 32))(a2[3]);
      a2[3] = v3[3];
      void v3[3] = v3;
    }
    else
    {
      result[3] = v5;
      a2[3] = v4;
    }
  }
  return result;
}

void sub_2447E5BF4(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_2446D1FF0(a1);
}

void sub_2447E5C00(uint64_t a1)
{
  uint64_t v17 = *MEMORY[0x263EF8340];
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  id v2 = *(id *)(a1 + 32);
  uint64_t v6 = objc_msgSend_countByEnumeratingWithState_objects_count_(v2, v3, (uint64_t)&v12, v16, 16);
  if (v6)
  {
    uint64_t v7 = *(void *)v13;
    do
    {
      uint64_t v8 = 0;
      do
      {
        if (*(void *)v13 != v7) {
          objc_enumerationMutation(v2);
        }
        objc_msgSend_cleanup(*(void **)(*((void *)&v12 + 1) + 8 * v8++), v4, v5, (void)v12);
      }
      while (v6 != v8);
      uint64_t v6 = objc_msgSend_countByEnumeratingWithState_objects_count_(v2, v4, (uint64_t)&v12, v16, 16);
    }
    while (v6);
  }

  objc_msgSend_removeAllObjects(*(void **)(a1 + 32), v9, v10);
  uint64_t v11 = *(void **)(a1 + 48);
  if (v11) {
    dispatch_async(*(dispatch_queue_t *)(a1 + 40), v11);
  }
}

void sub_2447E5D08(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447E5D28(uint64_t a1)
{
  id v1 = *(void **)(a1 + 40);
  id v2 = *(void **)(a1 + 48);
  uint64_t v3 = *(void **)(a1 + 56);
  id v15 = *(id *)(a1 + 32);
  id v4 = v1;
  uint64_t v5 = v2;
  id v6 = v3;
  objc_msgSend_lock((void *)qword_268EBE908, v7, v8);
  uint64_t v10 = objc_msgSend_objectForKeyedSubscript_((void *)qword_268EBE910, v9, (uint64_t)v4);
  long long v12 = v10;
  if (v10) {
    objc_msgSend_addObjectsFromArray_(v10, v11, (uint64_t)v15);
  }
  else {
    objc_msgSend_setObject_forKeyedSubscript_((void *)qword_268EBE910, v11, (uint64_t)v15, v4);
  }
  objc_msgSend_unlock((void *)qword_268EBE908, v13, v14);
  if (v6) {
    dispatch_async(v5, v6);
  }
}

void sub_2447E5E08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

uint64_t *sub_2447E5E38(uint64_t *a1, uint64_t a2)
{
  a1[2] = 0;
  a1[1] = 0;
  *a1 = (uint64_t)(a1 + 1);
  sub_2447E5E90(a1, *(unsigned __int8 **)a2, (unsigned __int8 *)(a2 + 8));
  return a1;
}

void sub_2447E5E78(_Unwind_Exception *a1)
{
  sub_2447E6298(v1, *(char **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *sub_2447E5E90(uint64_t *result, unsigned __int8 *a2, unsigned __int8 *a3)
{
  if (a2 != a3)
  {
    id v4 = a2;
    uint64_t v5 = (uint64_t **)result;
    id v6 = result + 1;
    do
    {
      uint64_t result = sub_2447E5F1C(v5, v6, v4 + 32, (uint64_t)(v4 + 32));
      uint64_t v7 = (unsigned __int8 *)*((void *)v4 + 1);
      if (v7)
      {
        do
        {
          uint64_t v8 = v7;
          uint64_t v7 = *(unsigned __int8 **)v7;
        }
        while (v7);
      }
      else
      {
        do
        {
          uint64_t v8 = (unsigned __int8 *)*((void *)v4 + 2);
          BOOL v9 = *(void *)v8 == (void)v4;
          id v4 = v8;
        }
        while (!v9);
      }
      id v4 = v8;
    }
    while (v8 != a3);
  }
  return result;
}

uint64_t *sub_2447E5F1C(uint64_t **a1, uint64_t *a2, unsigned __int8 *a3, uint64_t a4)
{
  id v6 = (uint64_t **)sub_2447E5FA0(a1, a2, &v10, &v9, a3);
  uint64_t result = *v6;
  if (!*v6)
  {
    sub_2447E6148((uint64_t)a1, a4, (uint64_t)&v8);
    sub_2446DA06C(a1, (uint64_t)v10, v6, v8);
    return v8;
  }
  return result;
}

uint64_t *sub_2447E5FA0(void *a1, uint64_t *a2, uint64_t **a3, uint64_t *a4, unsigned __int8 *a5)
{
  uint64_t v5 = a1 + 1;
  if (a1 + 1 == a2 || (unsigned int v6 = *a5, v7 = *((unsigned __int8 *)a2 + 32), v6 < v7))
  {
    uint64_t v8 = (uint64_t *)*a2;
    if ((uint64_t *)*a1 == a2)
    {
      uint64_t v10 = a2;
LABEL_17:
      if (v8)
      {
        *a3 = v10;
        return v10 + 1;
      }
      else
      {
        *a3 = a2;
        return a2;
      }
    }
    if (v8)
    {
      uint64_t v9 = (uint64_t *)*a2;
      do
      {
        uint64_t v10 = v9;
        uint64_t v9 = (uint64_t *)v9[1];
      }
      while (v9);
    }
    else
    {
      long long v13 = a2;
      do
      {
        uint64_t v10 = (uint64_t *)v13[2];
        BOOL v14 = *v10 == (void)v13;
        long long v13 = v10;
      }
      while (v14);
    }
    unsigned int v15 = *a5;
    if (*((unsigned __int8 *)v10 + 32) < v15) {
      goto LABEL_17;
    }
    uint64_t v16 = *v5;
    if (*v5)
    {
      do
      {
        while (1)
        {
          uint64_t v17 = (uint64_t *)v16;
          unsigned int v18 = *(unsigned __int8 *)(v16 + 32);
          if (v15 >= v18) {
            break;
          }
          uint64_t v16 = *v17;
          uint64_t v5 = v17;
          if (!*v17) {
            goto LABEL_29;
          }
        }
        if (v18 >= v15) {
          break;
        }
        uint64_t v5 = v17 + 1;
        uint64_t v16 = v17[1];
      }
      while (v16);
    }
    else
    {
      uint64_t v17 = a1 + 1;
    }
LABEL_29:
    *a3 = v17;
    return v5;
  }
  if (v7 >= v6)
  {
    *a3 = a2;
    *a4 = (uint64_t)a2;
    return a4;
  }
  uint64_t v11 = a2[1];
  if (v11)
  {
    long long v12 = (uint64_t *)a2[1];
    do
    {
      a4 = v12;
      long long v12 = (uint64_t *)*v12;
    }
    while (v12);
  }
  else
  {
    double v19 = a2;
    do
    {
      a4 = (uint64_t *)v19[2];
      BOOL v14 = *a4 == (void)v19;
      double v19 = a4;
    }
    while (!v14);
  }
  if (a4 != v5 && v6 >= *((unsigned __int8 *)a4 + 32))
  {
    uint64_t v20 = *v5;
    if (*v5)
    {
      do
      {
        while (1)
        {
          id v21 = (uint64_t *)v20;
          unsigned int v22 = *(unsigned __int8 *)(v20 + 32);
          if (v6 >= v22) {
            break;
          }
          uint64_t v20 = *v21;
          uint64_t v5 = v21;
          if (!*v21) {
            goto LABEL_48;
          }
        }
        if (v22 >= v6) {
          break;
        }
        uint64_t v5 = v21 + 1;
        uint64_t v20 = v21[1];
      }
      while (v20);
    }
    else
    {
      id v21 = a1 + 1;
    }
LABEL_48:
    *a3 = v21;
    return v5;
  }
  if (v11)
  {
    *a3 = a4;
  }
  else
  {
    *a3 = a2;
    return a2 + 1;
  }
  return a4;
}

uint64_t sub_2447E6148@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  unsigned int v6 = operator new(0x50uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  uint64_t result = sub_2447E61CC((uint64_t)v6 + 32, a2);
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_2447E61B0(_Unwind_Exception *a1)
{
  void *v1 = 0;
  sub_2447E6238(v3, v2);
  _Unwind_Resume(a1);
}

uint64_t sub_2447E61CC(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v4 = a1 + 16;
  if (*(char *)(a2 + 39) < 0)
  {
    sub_2446DA130((unsigned char *)v4, *(void **)(a2 + 16), *(void *)(a2 + 24));
  }
  else
  {
    long long v5 = *(_OWORD *)(a2 + 16);
    *(void *)(v4 + 16) = *(void *)(a2 + 32);
    *(_OWORD *)uint64_t v4 = v5;
  }
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  return a1;
}

void sub_2447E6238(uint64_t a1, void **__p)
{
  if (*(unsigned char *)(a1 + 8))
  {
    if (*((char *)__p + 71) < 0) {
      operator delete(__p[6]);
    }
  }
  else if (!__p)
  {
    return;
  }

  operator delete(__p);
}

void sub_2447E6298(uint64_t a1, char *a2)
{
  if (a2)
  {
    sub_2447E6298(a1, *(void *)a2);
    sub_2447E6298(a1, *((void *)a2 + 1));
    if (a2[71] < 0) {
      operator delete(*((void **)a2 + 6));
    }
    operator delete(a2);
  }
}

uint64_t *sub_2447E62FC(uint64_t *a1, uint64_t a2)
{
  a1[2] = 0;
  a1[1] = 0;
  *a1 = (uint64_t)(a1 + 1);
  sub_2447E6354(a1, *(unsigned __int8 **)a2, (unsigned __int8 *)(a2 + 8));
  return a1;
}

void sub_2447E633C(_Unwind_Exception *a1)
{
  sub_2447E6298(v1, *(char **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *sub_2447E6354(uint64_t *result, unsigned __int8 *a2, unsigned __int8 *a3)
{
  if (a2 != a3)
  {
    uint64_t v4 = a2;
    long long v5 = (uint64_t **)result;
    unsigned int v6 = result + 1;
    do
    {
      uint64_t result = sub_2447E63E0(v5, v6, v4 + 32, (uint64_t)(v4 + 32));
      unsigned int v7 = (unsigned __int8 *)*((void *)v4 + 1);
      if (v7)
      {
        do
        {
          uint64_t v8 = v7;
          unsigned int v7 = *(unsigned __int8 **)v7;
        }
        while (v7);
      }
      else
      {
        do
        {
          uint64_t v8 = (unsigned __int8 *)*((void *)v4 + 2);
          BOOL v9 = *(void *)v8 == (void)v4;
          uint64_t v4 = v8;
        }
        while (!v9);
      }
      uint64_t v4 = v8;
    }
    while (v8 != a3);
  }
  return result;
}

uint64_t *sub_2447E63E0(uint64_t **a1, uint64_t *a2, unsigned __int8 *a3, uint64_t a4)
{
  unsigned int v6 = (uint64_t **)sub_2447E5FA0(a1, a2, &v10, &v9, a3);
  uint64_t result = *v6;
  if (!*v6)
  {
    sub_2447E6464((uint64_t)a1, a4, (uint64_t)&v8);
    sub_2446DA06C(a1, (uint64_t)v10, v6, v8);
    return v8;
  }
  return result;
}

uint64_t sub_2447E6464@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  unsigned int v6 = operator new(0x68uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  uint64_t result = sub_2447E64E8((uint64_t)v6 + 32, a2);
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_2447E64CC(_Unwind_Exception *a1)
{
  void *v1 = 0;
  sub_2447E6238(v3, v2);
  _Unwind_Resume(a1);
}

uint64_t sub_2447E64E8(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v4 = a1 + 16;
  if (*(char *)(a2 + 39) < 0)
  {
    sub_2446DA130((unsigned char *)v4, *(void **)(a2 + 16), *(void *)(a2 + 24));
  }
  else
  {
    long long v5 = *(_OWORD *)(a2 + 16);
    *(void *)(v4 + 16) = *(void *)(a2 + 32);
    *(_OWORD *)uint64_t v4 = v5;
  }
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  long long v6 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = v6;
  return a1;
}

uint64_t sub_2447E6564(uint64_t a1, uint64_t a2, long long *a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(a1 + 408);
  uint64_t v11 = *((void *)a3 + 2);
  long long v10 = *a3;
  (*(void (**)(uint64_t, long long *, uint64_t))(v5 + 16))(v5, &v10, a4);

  long long v6 = *(void (**)(uint64_t))(a1 + 384);
  if (v6)
  {
    *(void *)(a1 + 384) = 0;
    v6(a1 + 368);
  }
  unsigned int v7 = *(void (**)(uint64_t))(a1 + 344);
  if (v7)
  {
    *(void *)(a1 + 344) = 0;
    v7(a1 + 328);
  }
  uint64_t v8 = *(void (**)(uint64_t))(a1 + 304);
  if (v8)
  {
    *(void *)(a1 + 304) = 0;
    v8(a1 + 288);
  }
  sub_2447E6298(a1 + 88, *(char **)(a1 + 96));
  sub_2447E6298(a1 + 64, *(char **)(a1 + 72));
  return MEMORY[0x245695FA0](a1, 0x10F0C40D63A2ED9);
}

uint64_t sub_2447E6634(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = a2;
  *(unsigned char *)(result + 8) = 0;
  *(_WORD *)(result + 50) = 0;
  *(unsigned char *)(result + 52) = 0;
  *(_DWORD *)(result + 56) = 0;
  *(_DWORD *)(result + 42) = 0;
  *(void *)(result + 72) = 0;
  *(_WORD *)(result + sub_244D6A434("/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/ServerEndpoint/MTRIMDispatch.mm", 46) = 0;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = 0;
  *(unsigned char *)(result + 40) = 0;
  *(void *)(result + 64) = result + 72;
  *(void *)(result + 104) = 0;
  *(void *)(result + 96) = 0;
  *(void *)(result + 80) = 0;
  *(void *)(result + 88) = result + 96;
  *(_WORD *)(result + 112) = 0;
  *(unsigned char *)(result + 114) = 0;
  *(_DWORD *)(result + 232) = 0;
  *(void *)(result + 272) = 0;
  *(void *)(result + 280) = 0;
  *(void *)(result + 125) = 0;
  *(void *)(result + 120) = 0;
  *(void *)(result + 288) = result + 288;
  *(void *)(result + 296) = result + 288;
  *(void *)(result + 304) = 0;
  *(void *)(result + 312) = result;
  *(void *)(result + 320) = sub_244E13FFC;
  *(void *)(result + 328) = result + 328;
  *(void *)(result + 336) = result + 328;
  *(void *)(result + 344) = 0;
  *(void *)(result + 352) = result;
  *(void *)(result + 360) = sub_244E1434C;
  return result;
}

_WORD **sub_2447E66C8(uint64_t **a1)
{
  id v2 = *a1;
  uint64_t v3 = (_WORD *)*v2;
  if (*v2)
  {
    sub_244CC8F2C(*v2);
    id v2 = *a1;
    uint64_t v5 = v3;
    if (!v2) {
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v5 = 0;
  }
  sub_244CC8A0C(v2);
  uint64_t v3 = v5;
LABEL_6:
  *a1 = (uint64_t *)v3;
  uint64_t v5 = 0;
  return sub_244794634(&v5);
}

void sub_2447E6730(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_244794634((_WORD **)va);
  _Unwind_Resume(a1);
}

void *sub_2447E6744(void **a1, size_t a2, size_t a3)
{
  long long v6 = *a1;
  if (v6)
  {
    j__free(v6);
    *a1 = 0;
  }
  uint64_t result = sub_244CC4D90(a2, a3);
  *a1 = result;
  return result;
}

void *sub_2447E6794(void *a1)
{
  id v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_2447E6818(void *a1)
{
  id v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

uint64_t sub_2447E689C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a2;
  uint64_t v2 = *(void *)(a1 + 24);
  if (!v2) {
    sub_2447E68F0();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t *))(*(void *)v2 + 48))(v2, &v4);
}

void sub_2447E68F0()
{
  exceptiouint64_t n = __cxa_allocate_exception(8uLL);
  void *exception = &unk_26F944E08;
  __cxa_throw(exception, (struct type_info *)&unk_26F944DE0, (void (*)(void *))std::exception::~exception);
}

void sub_2447E6940(std::exception *a1)
{
  std::exception::~exception(a1);

  JUMPOUT(0x245695FA0);
}

void *sub_2447E6978(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_2447E69FC(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_2447E6A80(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

uint64_t sub_2447E6B08(uint64_t a1)
{
  uint64_t v2 = (void (****)(void))(a1 + 264);
  sub_2447E6BB0((void (****)(void))(a1 + 264), 0);
  sub_2447E6BB0(v2, 0);
  *(void *)(a1 + 200) = &unk_26F953058;
  uint64_t v4 = (void **)(a1 + 232);
  sub_2447E6C0C(&v4);
  sub_2447E6C90((void *)(a1 + 168));
  sub_2447E6D14((void *)(a1 + 136));
  sub_2447E6D98((void *)(a1 + 104));
  sub_2447E6E1C((void *)(a1 + 72));
  sub_2447E6EA0((void *)(a1 + 40));
  sub_2447E6F24((void *)(a1 + 8));
  return a1;
}

void sub_2447E6BB0(void (****a1)(void), void (***a2)(void))
{
  uint64_t v2 = *a1;
  *a1 = a2;
  if (v2)
  {
    (**v2)(v2);
    j__free(v2);
  }
}

void sub_2447E6C0C(void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (_WORD **)**a1;
  if (v2)
  {
    uint64_t v4 = (_WORD **)v1[1];
    uint64_t v5 = v2;
    if (v4 != v2)
    {
      do
        uint64_t v4 = sub_244794634(v4 - 1);
      while (v4 != v2);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void *sub_2447E6C90(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_2447E6D14(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_2447E6D98(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_2447E6E1C(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_2447E6EA0(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_2447E6F24(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_2447E6FA8(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

uint64_t sub_2447E702C(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8, void *a9, void *a10)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = &unk_26F9523B0;
  id v34 = a10;
  id v18 = a9;
  id v19 = a8;
  id v20 = a7;
  id v21 = a6;
  id v22 = a5;
  id v23 = a4;
  id v24 = a3;
  *(void *)(a1 + 24) = MEMORY[0x2456969D0](a2);
  uint64_t v25 = MEMORY[0x2456969D0](v24);

  *(void *)(a1 + 32) = v25;
  uint64_t v26 = MEMORY[0x2456969D0](v23);

  *(void *)(a1 + 40) = v26;
  uint64_t v27 = MEMORY[0x2456969D0](v22);

  *(void *)(a1 + 48) = v27;
  uint64_t v28 = MEMORY[0x2456969D0](v21);

  *(void *)(a1 + 56) = v28;
  uint64_t v29 = MEMORY[0x2456969D0](v19);

  *(void *)(a1 + 64) = v29;
  uint64_t v30 = MEMORY[0x2456969D0](v18);

  *(void *)(a1 + 72) = v30;
  uint64_t v31 = MEMORY[0x2456969D0](v34);

  *(void *)(a1 + 80) = v31;
  *(void *)(a1 + 88) = &unk_26F953058;
  *(_WORD *)(a1 + 96) = 0;
  *(unsigned char *)(a1 + 98) = 0;
  *(unsigned char *)(a1 + 112) = 0;
  *(void *)(a1 + 100) = 0;
  *(_DWORD *)(a1 + 107) = 0;
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = a1;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 160) = 0;
  *(unsigned char *)(a1 + 168) = 0;
  uint64_t v32 = MEMORY[0x2456969D0](v20);

  *(void *)(a1 + 176) = v32;
  *(void *)(a1 + 184) = 0;
  return a1;
}

void sub_2447E71EC(uint64_t a1)
{
  sub_2447E7674(a1);

  JUMPOUT(0x245695FA0);
}

void sub_2447E7228(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4)
{
  if (a4)
  {
    long long v6 = 0;
    uint64_t v7 = sub_244B27140((uint64_t)MTRError, a4);
LABEL_3:
    uint64_t v8 = (void *)v7;
    goto LABEL_4;
  }
  if (!a3)
  {
    long long v6 = 0;
    LODWORD(v28) = 47;
    *((void *)&v28 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/MTRBaseDevice.mm";
    int v29 = 3393;
    uint64_t v7 = sub_244B26908((uint64_t)MTRError, &v28);
    goto LABEL_3;
  }
  BOOL v14 = sub_244BCED98(a2, a3, (uint64_t)&v26);
  long long v6 = v14;
  if (v26)
  {
    if (v26 == 182)
    {
LABEL_13:
      uint64_t v8 = 0;
      goto LABEL_14;
    }

    long long v24 = v26;
    uint64_t v25 = v27;
    uint64_t v8 = sub_244B26908((uint64_t)MTRError, &v24);
    long long v6 = 0;
  }
  else
  {
    uint64_t v8 = 0;
  }
LABEL_4:
  uint64_t v9 = *(void **)(a1 + 16);
  if (!v9)
  {
    int v21 = 3;
    id v22 = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTRBaseDevice.mm";
    int v23 = 3410;
    sub_244B2F754(a1, (uint64_t)&v21, 1);
    goto LABEL_14;
  }
  if (!v8)
  {
    unsigned int v15 = [MTREventReport alloc];
    uint64_t v17 = objc_msgSend_numberWithUnsignedLongLong_(NSNumber, v16, *(void *)(a2 + 16));
    id v19 = objc_msgSend_initWithPath_eventNumber_priority_timestamp_value_(v15, v18, a2, v17, *(unsigned __int8 *)(a2 + 24), a2 + 32, v6);
    objc_msgSend_addObject_(v9, v20, (uint64_t)v19);

    goto LABEL_13;
  }
  long long v10 = [MTREventReport alloc];
  long long v12 = objc_msgSend_initWithPath_error_(v10, v11, a2, v8);
  objc_msgSend_addObject_(v9, v13, (uint64_t)v12);

LABEL_14:
}

void sub_2447E7400(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447E7438(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4)
{
  if (*(unsigned __int8 *)(a2 + 14) >= 2u)
  {
    int v24 = 3;
    uint64_t v25 = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTRBaseDevice.mm";
    int v26 = 3429;
    sub_244B2F754(a1, (uint64_t)&v24, 1);
    return;
  }
  if (*a4)
  {
    long long v6 = 0;
    uint64_t v7 = sub_244B27140((uint64_t)MTRError, a4);
LABEL_5:
    uint64_t v8 = (void *)v7;
    goto LABEL_6;
  }
  if (!a3)
  {
    long long v6 = 0;
    LODWORD(v22) = 47;
    *((void *)&v22 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHI"
                            "P/MTRBaseDevice.mm";
    int v23 = 3438;
    uint64_t v7 = sub_244B26908((uint64_t)MTRError, &v22);
    goto LABEL_5;
  }
  BOOL v14 = sub_244B9BC80(a2, a3, (uint64_t)&v20);
  long long v6 = v14;
  if (!v20)
  {
    uint64_t v8 = 0;
    goto LABEL_6;
  }
  if (v20 != 181)
  {

    long long v18 = v20;
    uint64_t v19 = v21;
    uint64_t v8 = sub_244B26908((uint64_t)MTRError, &v18);
    long long v6 = 0;
LABEL_6:
    uint64_t v9 = *(void **)(a1 + 8);
    if (v9)
    {
      long long v10 = [MTRAttributeReport alloc];
      long long v12 = objc_msgSend_initWithPath_value_error_(v10, v11, a2, v6, v8);
      objc_msgSend_addObject_(v9, v13, (uint64_t)v12);
    }
    else
    {
      int v15 = 3;
      uint64_t v16 = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTRBaseDevice.mm";
      int v17 = 3455;
      sub_244B2F754(a1, (uint64_t)&v15, 1);
    }
    goto LABEL_13;
  }
  uint64_t v8 = 0;
LABEL_13:
}

void sub_2447E75F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447E7618(unsigned char *a1@<X3>, uint64_t a2@<X8>)
{
  *a1 = 0;
  *(_DWORD *)a2 = 0;
  *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/ReadClient.h";
  *(_DWORD *)(a2 + 16) = 249;
}

void sub_2447E7638(unsigned char *a1@<X1>, uint64_t a2@<X8>)
{
  *a1 = 0;
  *(_DWORD *)a2 = 0;
  *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/ReadClient.h";
  *(_DWORD *)(a2 + 16) = 260;
}

uint64_t sub_2447E7674(uint64_t a1)
{
  *(void *)a1 = &unk_26F9523B0;
  uint64_t v2 = *(void *)(a1 + 152);
  *(void *)(a1 + 152) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = *(void **)(a1 + 184);
  if (v3)
  {
    dispatch_block_cancel(v3);
    uint64_t v4 = *(void **)(a1 + 184);
  }
  else
  {
    uint64_t v4 = 0;
  }

  uint64_t v5 = *(void *)(a1 + 160);
  *(void *)(a1 + 160) = 0;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
  }
  uint64_t v6 = *(void *)(a1 + 152);
  *(void *)(a1 + 152) = 0;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
  }
  *(void *)(a1 + 88) = &unk_26F953058;
  uint64_t v8 = (void **)(a1 + 120);
  sub_2447E6C0C(&v8);

  return a1;
}

uint64_t sub_2447E77F0(uint64_t result, uint64_t a2, unsigned __int8 *a3)
{
  *(void *)(result + 24) = 0;
  *(void *)uint64_t result = &unk_26F944F00;
  *(void *)(result + 8) = a2;
  *(void *)(result + 16) = result + 24;
  *(void *)(result + 48) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = result + 48;
  *(void *)(result + 80) = 0;
  *(void *)(result + 88) = 0;
  *(void *)(result + 72) = 0;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = result + 72;
  *(void *)(result + 96) = 0;
  *(void *)(result + 104) = 0;
  *(void *)(result + 128) = 0;
  *(void *)(result + 120) = 0;
  *(void *)(result + 112) = result + 120;
  *(unsigned char *)(result + 136) = 0;
  *(void *)(result + 160) = 0;
  *(void *)(result + 152) = result + 160;
  *(void *)(result + 168) = 0;
  *(void *)(result + 176) = &unk_26F953058;
  *(_WORD *)(result + 184) = 0;
  *(unsigned char *)(result + 186) = 0;
  *(unsigned char *)(result + 200) = 0;
  *(void *)(result + 188) = 0;
  *(_DWORD *)(result + 195) = 0;
  *(void *)(result + 208) = 0;
  *(void *)(result + 216) = 0;
  *(void *)(result + 224) = 0;
  *(void *)(result + 232) = result;
  *(_WORD *)(result + 240) = -1;
  *(_DWORD *)(result + 244) = -1;
  *(unsigned char *)(result + 248) = 1;
  int v3 = *a3;
  *(unsigned char *)(result + 136) = v3;
  if (v3) {
    *(void *)(result + 144) = *((void *)a3 + 1);
  }
  return result;
}

uint64_t sub_2447E78C4(uint64_t a1)
{
  *(void *)a1 = &unk_26F944F00;
  *(void *)(a1 + 176) = &unk_26F953058;
  uint64_t v4 = (void **)(a1 + 208);
  sub_2447E6C0C(&v4);
  sub_244794718(a1 + 152, *(void **)(a1 + 160));
  sub_2447E7C50(a1 + 112, *(void **)(a1 + 120));
  uint64_t v2 = *(void **)(a1 + 88);
  if (v2)
  {
    *(void *)(a1 + 96) = v2;
    operator delete(v2);
  }
  sub_244794718(a1 + 64, *(void **)(a1 + 72));
  sub_244794718(a1 + 40, *(void **)(a1 + 48));
  sub_2447E7CAC(a1 + 16, *(void **)(a1 + 24));
  return a1;
}

uint64_t sub_2447E7988(uint64_t a1)
{
  *(void *)a1 = &unk_26F944F00;
  *(void *)(a1 + 176) = &unk_26F953058;
  uint64_t v4 = (void **)(a1 + 208);
  sub_2447E6C0C(&v4);
  sub_244794718(a1 + 152, *(void **)(a1 + 160));
  sub_2447E7C50(a1 + 112, *(void **)(a1 + 120));
  uint64_t v2 = *(void **)(a1 + 88);
  if (v2)
  {
    *(void *)(a1 + 96) = v2;
    operator delete(v2);
  }
  sub_244794718(a1 + 64, *(void **)(a1 + 72));
  sub_244794718(a1 + 40, *(void **)(a1 + 48));
  sub_2447E7CAC(a1 + 16, *(void **)(a1 + 24));
  return MEMORY[0x245695FA0](a1, 0x10B1C40036DCBC2);
}

uint64_t sub_2447E7A60(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 8) + 56))();
}

uint64_t sub_2447E7A88(uint64_t a1, uint64_t a2, long long *a3)
{
  uint64_t v3 = *(void *)(a1 + 8);
  long long v5 = *a3;
  uint64_t v6 = *((void *)a3 + 2);
  return (*(uint64_t (**)(uint64_t, uint64_t, long long *))(*(void *)v3 + 64))(v3, a2, &v5);
}

uint64_t sub_2447E7AE0(uint64_t a1, long long *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  long long v4 = *a2;
  uint64_t v5 = *((void *)a2 + 2);
  return (*(uint64_t (**)(uint64_t, long long *))(*(void *)v2 + 72))(v2, &v4);
}

uint64_t sub_2447E7B38(uint64_t a1)
{
  uint64_t v1 = (void *)(a1 + 72);
  sub_244794718(a1 + 64, *(void **)(a1 + 72));
  *(v1 - 1) = v1;
  void *v1 = 0;
  v1[1] = 0;
  uint64_t v2 = *(uint64_t (**)(void))(*(void *)*(v1 - 8) + 80);

  return v2();
}

uint64_t sub_2447E7BA8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 8) + 88))();
}

uint64_t sub_2447E7BD0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v3 = *(unsigned __int8 *)(result + 136);
  *(unsigned char *)a2 = v3;
  if (v3) {
    *(void *)(a2 + 8) = *(void *)(result + 144);
  }
  *(_DWORD *)a3 = 0;
  *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/ClusterStateCache.h";
  *(_DWORD *)(a3 + 16) = 290;
  return result;
}

uint64_t sub_2447E7C00(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 8) + 112))();
}

uint64_t sub_2447E7C28(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 8) + 120))();
}

void sub_2447E7C50(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_2447E7C50(a1, *a2);
    sub_2447E7C50(a1, a2[1]);
    sub_244794634((_WORD **)a2 + 10);
    operator delete(a2);
  }
}

void sub_2447E7CAC(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_2447E7CAC(a1, *a2);
    sub_2447E7CAC(a1, a2[1]);
    sub_2447E7D0C((uint64_t)(a2 + 5), (void *)a2[6]);
    operator delete(a2);
  }
}

void sub_2447E7D0C(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_2447E7D0C(a1, *a2);
    sub_2447E7D0C(a1, a2[1]);
    sub_2447E7D6C((uint64_t)(a2 + 5), (void **)a2[6]);
    operator delete(a2);
  }
}

void sub_2447E7D6C(uint64_t a1, void **a2)
{
  if (a2)
  {
    sub_2447E7D6C(a1, *a2);
    sub_2447E7D6C(a1, a2[1]);
    if (a2[5] == (void *)1)
    {
      a2[7] = 0;
      sub_2446D7EC0(a2 + 6);
    }
    operator delete(a2);
  }
}

void sub_2447E7DD8(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26F944FB8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_2447E7DF8(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26F944FB8;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x245695FA0);
}

void sub_2447E7E54(std::__shared_weak_count *a1)
{
  if (!atomic_fetch_add(&a1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))a1->__on_zero_shared)(a1);
    std::__shared_weak_count::__release_weak(a1);
  }
}

uint64_t sub_2447E7EC8(uint64_t a1)
{
  return a1;
}

void sub_2447E7EF4(uint64_t a1)
{
  JUMPOUT(0x245695FA0);
}

void *sub_2447E7F40(uint64_t a1)
{
  uint64_t v2 = operator new(0x18uLL);
  void *v2 = &unk_26F945008;
  v2[1] = *(id *)(a1 + 8);
  *((unsigned char *)v2 + 16) = *(unsigned char *)(a1 + 16);
  return v2;
}

id sub_2447E7FA0(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &unk_26F945008;
  id result = *(id *)(a1 + 8);
  *(void *)(a2 + 8) = result;
  *(unsigned char *)(a2 + 16) = *(unsigned char *)(a1 + 16);
  return result;
}

void sub_2447E7FF4(uint64_t a1)
{
}

void sub_2447E7FFC(id *a1)
{
  operator delete(a1);
}

void sub_2447E8038(uint64_t a1, uint64_t a2, id *a3)
{
  uint64_t v33 = *MEMORY[0x263EF8340];
  if (*(unsigned char *)(a1 + 16) && (uint64_t v6 = (unsigned char *)(a2 + 16), *(unsigned char *)(a2 + 16)))
  {
    id v7 = *a3;
    uint64_t v8 = *(void **)(a1 + 8);
    int v29 = @"attributePath";
    uint64_t v9 = [MTRAttributePath alloc];
    id v11 = (id)objc_msgSend_initWithPath_(v9, v10, a2);
    uint64_t v30 = @"data";
    id v31 = v11;
    long long v13 = objc_msgSend_objectForKeyedSubscript_(v7, v12, @"type");
    int v15 = objc_msgSend_objectForKeyedSubscript_(v7, v14, @"value");
    uint64_t v16 = NSNumber;
    int v17 = sub_2446F12CC(v6);
    uint64_t v19 = objc_msgSend_numberWithUnsignedInt_(v16, v18, *(unsigned int *)v17);
    long long v20 = sub_2447D6B2C(v13, v15, v19);
    id v32 = v20;
    long long v22 = objc_msgSend_dictionaryWithObjects_forKeys_count_(NSDictionary, v21, (uint64_t)&v31, &v29, 2);
    objc_msgSend_addObject_(v8, v23, (uint64_t)v22);
  }
  else
  {
    int v24 = *(void **)(a1 + 8);
    int v29 = @"attributePath";
    uint64_t v25 = [MTRAttributePath alloc];
    id v7 = (id)objc_msgSend_initWithPath_(v25, v26, a2);
    uint64_t v30 = @"data";
    id v31 = v7;
    id v11 = *a3;
    id v32 = v11;
    long long v13 = objc_msgSend_dictionaryWithObjects_forKeys_count_(NSDictionary, v27, (uint64_t)&v31, &v29, 2);
    objc_msgSend_addObject_(v24, v28, (uint64_t)v13);
  }
}

void sub_2447E8220(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2447E8298(uint64_t a1, uint64_t a2)
{
  if (sub_2447E82E4(a2, (uint64_t)&unk_26F945078)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

void *sub_2447E82D8()
{
  return &unk_26F945078;
}

BOOL sub_2447E82E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a2 + 8);
  if (v2 == v3) {
    return 1;
  }
  if ((v3 & v2) < 0 != __OFSUB__(v2, v3)) {
    return strcmp((const char *)(v2 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL)) == 0;
  }
  return 0;
}

uint64_t sub_2447E8334(uint64_t a1)
{
  return a1;
}

void sub_2447E8360(uint64_t a1)
{
  JUMPOUT(0x245695FA0);
}

void *sub_2447E83AC(uint64_t a1)
{
  uint64_t v2 = operator new(0x10uLL);
  void *v2 = &unk_26F945098;
  v2[1] = *(id *)(a1 + 8);
  return v2;
}

id sub_2447E8404(uint64_t a1, void *a2)
{
  *a2 = &unk_26F945098;
  id result = *(id *)(a1 + 8);
  a2[1] = result;
  return result;
}

void sub_2447E844C(uint64_t a1)
{
}

void sub_2447E8454(id *a1)
{
  operator delete(a1);
}

void sub_2447E8490(uint64_t a1, uint64_t a2, id *a3)
{
  long long v4 = *(void **)(a1 + 8);
  id v8 = *a3;
  uint64_t v6 = objc_msgSend_eventReportForHeader_andData_(MTRBaseDevice, v5, a2);
  objc_msgSend_addObject_(v4, v7, (uint64_t)v6);
}

void sub_2447E8514(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2447E8534(uint64_t a1, uint64_t a2)
{
  if (sub_2447E82E4(a2, (uint64_t)&unk_26F945108)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

void *sub_2447E8574()
{
  return &unk_26F945108;
}

uint64_t sub_2447E8580(uint64_t a1)
{
  *(void *)a1 = &unk_26F945128;
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 24);
  if (v2) {
    sub_2447E7E54(v2);
  }

  return a1;
}

void sub_2447E85D4(uint64_t a1)
{
  *(void *)a1 = &unk_26F945128;
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 24);
  if (v2) {
    sub_2447E7E54(v2);
  }

  JUMPOUT(0x245695FA0);
}

void *sub_2447E8648(uint64_t a1)
{
  uint64_t v2 = operator new(0x20uLL);
  void *v2 = &unk_26F945128;
  id v3 = *(id *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  v2[1] = v3;
  v2[2] = v5;
  v2[3] = v4;
  if (v4) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v4 + 8), 1uLL, memory_order_relaxed);
  }
  return v2;
}

id sub_2447E86B8(uint64_t a1, void *a2)
{
  *a2 = &unk_26F945128;
  id result = *(id *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  a2[1] = result;
  a2[2] = v6;
  a2[3] = v5;
  if (v5) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v5 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_2447E871C(uint64_t a1)
{
}

void sub_2447E8724(void *a1)
{
  sub_2447E89E8((uint64_t)a1 + 8);

  operator delete(a1);
}

__n128 sub_2447E8760(uint64_t a1, uint64_t *a2, uint64_t *a3, __n128 *a4)
{
  uint64_t v34 = *MEMORY[0x263EF8340];
  uint64_t v4 = *a2;
  uint64_t v5 = *a3;
  __n128 v25 = *a4;
  unint64_t v26 = a4[1].n128_u64[0];
  if (*a2)
  {
    uint64_t v6 = *(void **)(a1 + 8);
    v31[0] = @"attributePath";
    id v7 = [MTRAttributePath alloc];
    unint64_t v8 = *(void *)v4;
    v27.n128_u32[2] = *(_DWORD *)(v4 + 8);
    v27.n128_u64[0] = v8;
    v27.n128_u16[6] = 0;
    v27.n128_u8[14] = 0;
    LOBYTE(v28) = 0;
    long long v10 = (__CFString *)objc_msgSend_initWithPath_(v7, v9, (uint64_t)&v27);
    v31[1] = @"error";
    id v32 = v10;
    __n128 v29 = v25;
    unint64_t v30 = v26;
    sub_244B26908((uint64_t)MTRError, (long long *)&v29);
    id v11 = (__CFString *)objc_claimAutoreleasedReturnValue();
    uint64_t v33 = v11;
    long long v13 = objc_msgSend_dictionaryWithObjects_forKeys_count_(NSDictionary, v12, (uint64_t)&v32, v31, 2);
    objc_msgSend_addObject_(v6, v14, (uint64_t)v13);
  }
  else if (v5)
  {
    uint64_t v16 = *(void **)(a1 + 8);
    id v32 = @"eventPath";
    int v17 = [MTREventPath alloc];
    uint64_t v19 = objc_msgSend_initWithPath_(v17, v18, v5);
    v29.n128_u64[0] = (unint64_t)v19;
    uint64_t v33 = @"error";
    __n128 v27 = v25;
    unint64_t v28 = v26;
    long long v20 = sub_244B26908((uint64_t)MTRError, (long long *)&v27);
    v29.n128_u64[1] = (unint64_t)v20;
    long long v22 = objc_msgSend_dictionaryWithObjects_forKeys_count_(NSDictionary, v21, (uint64_t)&v29, &v32, 2);
    objc_msgSend_addObject_(v16, v23, (uint64_t)v22);
  }
  else
  {
    int v24 = *(__n128 **)(a1 + 16);
    __n128 result = *a4;
    v24[1].n128_u64[0] = a4[1].n128_u64[0];
    __n128 *v24 = result;
  }
  return result;
}

void sub_2447E8944(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2447E899C(uint64_t a1, uint64_t a2)
{
  if (sub_2447E82E4(a2, (uint64_t)&unk_26F945198)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

void *sub_2447E89DC()
{
  return &unk_26F945198;
}

void sub_2447E89E8(uint64_t a1)
{
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2) {
    sub_2447E7E54(v2);
  }
  id v3 = *(void **)a1;
}

uint64_t sub_2447E8A28(uint64_t a1)
{
  *(void *)a1 = &unk_26F9451B8;
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 24);
  if (v2) {
    sub_2447E7E54(v2);
  }

  return a1;
}

void sub_2447E8A7C(uint64_t a1)
{
  *(void *)a1 = &unk_26F9451B8;
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 24);
  if (v2) {
    sub_2447E7E54(v2);
  }

  JUMPOUT(0x245695FA0);
}

void *sub_2447E8AF0(uint64_t a1)
{
  uint64_t v2 = operator new(0x48uLL);
  void *v2 = &unk_26F9451B8;
  id v3 = *(id *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  v2[1] = v3;
  v2[2] = v5;
  v2[3] = v4;
  if (v4) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v4 + 8), 1uLL, memory_order_relaxed);
  }
  long long v6 = *(_OWORD *)(a1 + 48);
  *((_OWORD *)v2 + 2) = *(_OWORD *)(a1 + 32);
  *((_OWORD *)v2 + 3) = v6;
  v2[8] = *(void *)(a1 + 64);
  return v2;
}

__n128 sub_2447E8B70(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &unk_26F9451B8;
  id v4 = *(id *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  *(void *)(a2 + 8) = v4;
  *(void *)(a2 + 16) = v6;
  *(void *)(a2 + 24) = v5;
  if (v5) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v5 + 8), 1uLL, memory_order_relaxed);
  }
  __n128 result = *(__n128 *)(a1 + 32);
  long long v8 = *(_OWORD *)(a1 + 48);
  *(void *)(a2 + 64) = *(void *)(a1 + 64);
  *(__n128 *)(a2 + 32) = result;
  *(_OWORD *)(a2 + 48) = v8;
  return result;
}

void sub_2447E8BE4(uint64_t a1)
{
}

void sub_2447E8BEC(void *a1)
{
  sub_2447E89E8((uint64_t)a1 + 8);

  operator delete(a1);
}

void sub_2447E8C28(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  id v4 = *(long long **)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 32);
  if (*(_DWORD *)v4)
  {
    uint64_t v6 = *(void (**)(uint64_t, long long *))(a1 + 48);
    uint64_t v7 = *((void *)v4 + 2);
    long long v11 = *v4;
    uint64_t v12 = v7;
    v6(v5, &v11);
  }
  else
  {
    (*(void (**)(uint64_t, void))(a1 + 40))(v5, *(void *)(a1 + 8));
  }
  long long v8 = *(void **)(a1 + 56);
  if (v8) {
    j__free(v8);
  }
  uint64_t v9 = *(void **)(a1 + 64);
  if (v9) {
    j__free(v9);
  }
  if (v3)
  {
    long long v10 = (void *)sub_2447E6B08(v3);
    j__free(v10);
  }
}

uint64_t sub_2447E8CB8(uint64_t a1, uint64_t a2)
{
  if (sub_2447E82E4(a2, (uint64_t)&unk_26F945228)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

void *sub_2447E8CF8()
{
  return &unk_26F945228;
}

uint64_t sub_2447E8D04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  *(void *)a1 = &unk_26F945248;
  uint64_t v18 = a1 + 40;
  sub_2447E9548(a1 + 8, a6);
  sub_2447E95E0(v18, a7);
  sub_2447E9678(a1 + 72, a8);
  sub_2447E9710(a1 + 104, a9);
  sub_2447E97A8(a1 + 136, a10);
  sub_2447E9840(a1 + 168, a11);
  *(void *)(a1 + 200) = &unk_26F953058;
  *(_WORD *)(a1 + 208) = 0;
  *(unsigned char *)(a1 + 210) = 0;
  *(unsigned char *)(a1 + 224) = 0;
  *(void *)(a1 + 212) = 0;
  *(_DWORD *)(a1 + 219) = 0;
  *(void *)(a1 + 232) = 0;
  *(void *)(a1 + 240) = 0;
  *(void *)(a1 + 248) = 0;
  *(void *)(a1 + 256) = a1;
  *(void *)(a1 + 264) = 0;
  *(void *)(a1 + 272) = a2;
  *(void *)(a1 + 280) = a4;
  *(void *)(a1 + 288) = a3;
  *(void *)(a1 + 296) = a5;
  return a1;
}

void sub_2447E8E20(_Unwind_Exception *a1)
{
  sub_2447E6D14(v5);
  sub_2447E6D98(v4);
  sub_2447E6E1C(v3);
  sub_2447E6EA0(v2);
  sub_2447E6F24(v1);
  _Unwind_Resume(a1);
}

void sub_2447E8E74(uint64_t a1)
{
  sub_2447E6B08(a1);

  JUMPOUT(0x245695FA0);
}

void sub_2447E8EAC(void *a1, unsigned __int16 *a2, uint64_t a3, unsigned __int8 *a4)
{
  int v17 = 0;
  if (!a1[8]) {
    goto LABEL_20;
  }
  uint64_t v6 = a1[35];
  if (!v6) {
    goto LABEL_20;
  }
  uint64_t v7 = a1[37];
  if (v7)
  {
    uint64_t v8 = 12 * v7;
    uint64_t v9 = a1[35];
    while (1)
    {
      int v10 = *(unsigned __int16 *)(v9 + 8);
      if ((v10 == 0xFFFF || v10 == *a2) && (*(_DWORD *)v9 == -1 || *(_DWORD *)v9 == *((_DWORD *)a2 + 1)))
      {
        int v13 = *(_DWORD *)(v9 + 4);
        if (v13 == -1 || v13 == *((_DWORD *)a2 + 2)) {
          break;
        }
      }
      v9 += 12;
      v8 -= 12;
      if (!v8) {
        goto LABEL_20;
      }
    }
  }
  else
  {
    uint64_t v9 = a1[35];
  }
  if (v9 == v6 + 12 * v7) {
    goto LABEL_20;
  }
  if (a4)
  {
    sub_244CCF6E8(a4, (uint64_t)&v16);
    if (!v16) {
      goto LABEL_21;
    }
    goto LABEL_20;
  }
  if (!a3 || (sub_2447ED398(&v17, a3, (uint64_t)&v16), v16))
  {
LABEL_20:
    sub_2447E98D8((uint64_t)(a1 + 9), 0, (uint64_t)a2);
    goto LABEL_21;
  }
  uint64_t v15 = a1[8];
  if (!v15) {
    sub_2447E68F0();
  }
  (*(void (**)(uint64_t, unsigned __int16 *, void **))(*(void *)v15 + 48))(v15, a2, &v17);
LABEL_21:
}

void sub_2447E905C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447E9078(void *a1, unsigned __int16 *a2, uint64_t a3, unsigned __int8 *a4)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  int v17 = 0;
  if (!a1[4]) {
    goto LABEL_32;
  }
  uint64_t v6 = a1[34];
  if (!v6) {
    goto LABEL_32;
  }
  if (*((unsigned __int8 *)a2 + 14) >= 2u)
  {
    uint64_t v16 = sub_244CC8484(0x1Bu, "Support");
    if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
    {
      int buf = 136315650;
      buf_4 = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTRBaseDevice.mm";
      __int16 v20 = 1024;
      int v21 = 881;
      __int16 v22 = 2080;
      int v23 = "!aPath.IsListItemOperation()";
      _os_log_impl(&dword_2446BD000, v16, OS_LOG_TYPE_ERROR, "VerifyOrDie failure at %s:%d: %s", (uint8_t *)&buf, 0x1Cu);
    }

    if (sub_244CC4E58(1u)) {
      sub_244CC4DE0(0x1Bu, 1);
    }
    abort();
  }
  uint64_t v7 = a1[36];
  if (v7)
  {
    uint64_t v8 = 12 * v7;
    uint64_t v9 = a1[34];
    while (1)
    {
      int v10 = *(unsigned __int16 *)(v9 + 8);
      if ((v10 == 0xFFFF || v10 == *a2) && (*(_DWORD *)v9 == -1 || *(_DWORD *)v9 == *((_DWORD *)a2 + 1)))
      {
        int v13 = *(_DWORD *)(v9 + 4);
        if (v13 == -1 || v13 == *((_DWORD *)a2 + 2)) {
          break;
        }
      }
      v9 += 12;
      v8 -= 12;
      if (!v8) {
        goto LABEL_32;
      }
    }
  }
  else
  {
    uint64_t v9 = a1[34];
  }
  if (v9 == v6 + 12 * v7) {
    goto LABEL_32;
  }
  if (*a4)
  {
    sub_244CCF6E8(a4, (uint64_t)&buf);
    if (!buf) {
      goto LABEL_33;
    }
    goto LABEL_32;
  }
  if (!a3 || (sub_2447ED398(&v17, a3, (uint64_t)&buf), buf))
  {
LABEL_32:
    sub_2447E98D8((uint64_t)(a1 + 9), (uint64_t)a2, 0);
    goto LABEL_33;
  }
  uint64_t v15 = a1[4];
  if (!v15) {
    sub_2447E68F0();
  }
  (*(void (**)(uint64_t, unsigned __int16 *, void **))(*(void *)v15 + 48))(v15, a2, &v17);
LABEL_33:
}

void sub_2447E932C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2447E9354(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 160);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 48))();
  }
  return result;
}

uint64_t sub_2447E9384@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v20 = *MEMORY[0x263EF8340];
  long long v16 = 0uLL;
  uint64_t v17 = 0;
  long long v18 = *(_OWORD *)a3;
  uint64_t v19 = *(void *)(a3 + 16);
  uint64_t result = sub_244DD17BC(a2, (uint64_t)&v18, (uint64_t)&v16);
  *(_OWORD *)a4 = v16;
  *(void *)(a4 + 16) = v17;
  if (!*(_DWORD *)a4)
  {
    if (*(void *)(a1 + 192))
    {
      sub_2447E9840((uint64_t)&v18, a1 + 168);
      long long v14 = *(_OWORD *)a3;
      uint64_t v15 = *(void *)(a3 + 16);
      uint64_t v9 = sub_244B26908((uint64_t)MTRError, &v14);
      int v10 = NSNumber;
      uint64_t v11 = sub_244DCDA88(a2);
      int v13 = objc_msgSend_numberWithUnsignedInt_(v10, v12, v11);
      sub_2447E9930((uint64_t)&v18, v9, v13);

      uint64_t result = (uint64_t)sub_2447E6C90(&v18);
    }
    *(_DWORD *)a4 = 0;
    *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/"
                          "MTRBaseDevice.mm";
    *(_DWORD *)(a4 + 16) = 955;
  }
  return result;
}

void sub_2447E94C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);

  sub_2447E6C90((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2447E94F8(uint64_t a1)
{
  return sub_2447E98D8(a1 + 72, 0, 0);
}

uint64_t sub_2447E9538(uint64_t a1)
{
  return sub_2447E99D4(a1 + 104, a1);
}

uint64_t sub_2447E9548(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

uint64_t sub_2447E95E0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

uint64_t sub_2447E9678(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

uint64_t sub_2447E9710(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

uint64_t sub_2447E97A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

uint64_t sub_2447E9840(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

uint64_t sub_2447E98D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a3;
  uint64_t v6 = a2;
  uint64_t v3 = *(void *)(a1 + 24);
  if (!v3) {
    sub_2447E68F0();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t *))(*(void *)v3 + 48))(v3, &v6, &v5);
}

void sub_2447E9930(uint64_t a1, void *a2, void *a3)
{
  id v7 = a2;
  id v6 = a3;
  uint64_t v5 = *(void *)(a1 + 24);
  if (!v5) {
    sub_2447E68F0();
  }
  (*(void (**)(uint64_t, id *, id *))(*(void *)v5 + 48))(v5, &v7, &v6);
}

void sub_2447E99B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2447E99D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a2;
  uint64_t v2 = *(void *)(a1 + 24);
  if (!v2) {
    sub_2447E68F0();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t *))(*(void *)v2 + 48))(v2, &v4);
}

void sub_2447E9A28(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  *a1 = a2;
  if (v3)
  {
    uint64_t v4 = (void *)sub_2447E6B08(v3);
    j__free(v4);
  }
}

void sub_2447E9A58(__n128 *a1@<X0>, uint64_t *a2@<X1>, void **a3@<X2>, uint64_t a4@<X3>, __n128 *a5@<X8>)
{
  a5->n128_u64[0] = 0;
  a5->n128_u64[1] = 0;
  a5[1].n128_u64[0] = 0;
  sub_244DC8634(a1, a5);
  if (!a5->n128_u32[0])
  {
    unsigned __int16 v10 = *((_WORD *)a2 + 4);
    uint64_t v12 = *a2;
    char v11 = 0;
    __int16 v13 = 0;
    char v14 = 0;
    if (*(unsigned char *)a4) {
      int v16 = *(_DWORD *)(a4 + 4);
    }
    sub_2447EA508(a1, &v10, a3, a5);
  }
}

void *sub_2447E9AF8(uint64_t a1, uint64_t a2, uint64_t a3, char *a4)
{
  uint8_t v12[4] = *MEMORY[0x263EF8340];
  uint64_t v8 = sub_244CC4D84(0x98uLL);
  if (v8)
  {
    sub_2447E9C0C((uint64_t)v12, a1);
    sub_2447E9CA4((uint64_t)v11, a2);
    sub_2447E9D3C((uint64_t)v10, a3);
    sub_2447E9DD4((uint64_t)v8, (uint64_t)v12, (uint64_t)v11, (uint64_t)v10, *a4);
    sub_2447E6A80(v10);
    sub_2447E69FC(v11);
    sub_2447E6978(v12);
  }
  return v8;
}

void sub_2447E9BD0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va2, a2);
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v3 = va_arg(va1, void);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  va_copy(va2, va1);
  uint64_t v8 = va_arg(va2, void);
  uint64_t v10 = va_arg(va2, void);
  uint64_t v11 = va_arg(va2, void);
  uint64_t v12 = va_arg(va2, void);
  sub_2447E6A80((uint64_t *)va);
  sub_2447E69FC((uint64_t *)va1);
  sub_2447E6978((uint64_t *)va2);
  _Unwind_Resume(a1);
}

uint64_t sub_2447E9C0C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

uint64_t sub_2447E9CA4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

uint64_t sub_2447E9D3C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

uint64_t sub_2447E9DD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(void *)a1 = &unk_26F9452F0;
  uint64_t v9 = a1 + 40;
  sub_2447E9C0C(a1 + 8, a2);
  sub_2447E9CA4(v9, a3);
  sub_2447E9D3C(a1 + 72, a4);
  *(unsigned char *)(a1 + 104) = 0;
  *(unsigned char *)(a1 + 105) = a5;
  *(void *)(a1 + 112) = &unk_26F952B18;
  *(unsigned char *)(a1 + 120) = 0;
  *(_WORD *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = a1;
  return a1;
}

void sub_2447E9E8C(_Unwind_Exception *a1)
{
  sub_2447E69FC(v2);
  sub_2447E6978(v1);
  _Unwind_Resume(a1);
}

void *sub_2447E9EB0(void *a1)
{
  a1[14] = &unk_26F952B18;
  sub_2447E6A80(a1 + 9);
  sub_2447E69FC(a1 + 5);
  sub_2447E6978(a1 + 1);
  return a1;
}

void sub_2447E9F0C(void *a1)
{
  a1[14] = &unk_26F952B18;
  sub_2447E6A80(a1 + 9);
  sub_2447E69FC(a1 + 5);
  sub_2447E6978(a1 + 1);

  JUMPOUT(0x245695FA0);
}

uint64_t sub_2447E9F88(uint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 *a4)
{
  if (!*(unsigned char *)(result + 104))
  {
    *(unsigned char *)(result + 104) = 1;
    if (*a4)
    {
      uint64_t v5 = result + 40;
      sub_244CCF6E8(a4, (uint64_t)v8);
      return sub_2447EA188(v5, a3);
    }
    else
    {
      uint64_t v6 = *(void *)(result + 32);
      if (!v6) {
        sub_2447E68F0();
      }
      uint64_t v7 = *(uint64_t (**)(void))(*(void *)v6 + 48);
      return v7();
    }
  }
  return result;
}

uint64_t sub_2447EA038(uint64_t result)
{
  if (!*(unsigned char *)(result + 104))
  {
    *(unsigned char *)(result + 104) = 1;
    return sub_2447EA188(result + 40, 0);
  }
  return result;
}

void sub_2447EA084(uint64_t a1, void (***a2)(void))
{
  if (!*(unsigned char *)(a1 + 105) && !*(unsigned char *)(a1 + 104))
  {
    *(unsigned char *)(a1 + 104) = 1;
    sub_2447EA188(a1 + 40, 0);
  }
  if (*(void *)(a1 + 96)) {
    sub_2447EA1DC(a1 + 72, (uint64_t)a2);
  }
  if (a2)
  {
    (**a2)(a2);
    j__free(a2);
  }
  *(void *)(a1 + 112) = &unk_26F952B18;
  sub_2447E6A80((void *)(a1 + 72));
  sub_2447E69FC((void *)(a1 + 40));
  sub_2447E6978((void *)(a1 + 8));
  j__free((void *)a1);
}

uint64_t sub_2447EA188(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a2;
  uint64_t v2 = *(void *)(a1 + 24);
  if (!v2) {
    sub_2447E68F0();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t *))(*(void *)v2 + 48))(v2, &v4);
}

uint64_t sub_2447EA1DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a2;
  uint64_t v2 = *(void *)(a1 + 24);
  if (!v2) {
    sub_2447E68F0();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t *))(*(void *)v2 + 48))(v2, &v4);
}

uint64_t sub_2447EA230(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4, char a5)
{
  *(void *)a1 = &unk_26F9587C0;
  *(void *)(a1 + 8) = a2;
  *(void *)(a1 + 16) = &unk_26F945360;
  *(void *)(a1 + 24) = a1;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = a3;
  *(_DWORD *)(a1 + 48) = 0;
  sub_244CB62B8(a1 + 56);
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 120) = &unk_26F9536C8;
  *(unsigned char *)(a1 + 144) = 0;
  sub_244CCCDE0(a1 + 152);
  sub_244CCCDE0(a1 + 192);
  sub_244CCCDE0(a1 + 232);
  sub_244CCCDE0(a1 + 272);
  *(void *)(a1 + 312) = 0;
  int v8 = *a4;
  *(unsigned char *)(a1 + 320) = v8;
  if (v8) {
    *(_WORD *)(a1 + 322) = *((_WORD *)a4 + 1);
  }
  *(unsigned char *)(a1 + 324) = a5;
  *(void *)(a1 + 328) = 0;
  *(_WORD *)(a1 + 336) = 0;
  *(unsigned char *)(a1 + 338) = 0;
  sub_244D6A434("/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/WriteClient.h", 132);
  return a1;
}

void sub_2447EA344(_Unwind_Exception *a1)
{
  sub_244794634(v3);
  sub_244794634(v4);
  sub_2446DE240(v2);
  sub_2447EA474(v1);
  _Unwind_Resume(a1);
}

void sub_2447EA384(void *a1)
{
  sub_2447EA474(a1);

  JUMPOUT(0x245695FA0);
}

uint64_t sub_2447EA3BC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 8) + 16))();
}

uint64_t sub_2447EA3E4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 8) + 24))();
}

uint64_t sub_2447EA40C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    *(void *)(v1 + 40) = 0;
    if ((*(_WORD *)(v1 + 8) & 0x40) == 0) {
      *(void *)(a1 + 16) = 0;
    }
  }
  return (*(uint64_t (**)(void))(**(void **)(a1 + 8) + 32))();
}

uint64_t sub_2447EA44C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 8) + 40))();
}

void *sub_2447EA474(void *a1)
{
  *a1 = &unk_26F945360;
  sub_2447EA4BC((uint64_t)a1);
  return a1;
}

void sub_2447EA4BC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    *(void *)(v2 + 40) = 0;
    char v3 = sub_244D6453C(v2);
    uint64_t v4 = *(void *)(a1 + 16);
    if ((v3 & 1) != 0 || (*(_WORD *)(v4 + 8) & 0x40) != 0) {
      sub_244D64BA8(v4);
    }
  }
  *(void *)(a1 + 16) = 0;
}

void sub_2447EA508(__n128 *a1@<X0>, unsigned __int16 *a2@<X1>, void **a3@<X2>, __n128 *a4@<X8>)
{
  sub_244CB62B8((uint64_t)&v18);
  int v8 = (long long *)a1[13].n128_u64[1];
  long long v9 = v8[3];
  long long v11 = *v8;
  long long v10 = v8[1];
  long long v20 = v8[2];
  long long v21 = v9;
  long long v18 = v11;
  long long v19 = v10;
  __n128 v16 = 0uLL;
  unint64_t v17 = 0;
  sub_2447EA618(a1, a2, a3, &v16);
  if (v16.n128_u32[0] == 25 || v16.n128_u32[0] == 11)
  {
    uint64_t v12 = (_OWORD *)a1[13].n128_u64[1];
    long long v13 = v18;
    long long v14 = v19;
    long long v15 = v21;
    void v12[2] = v20;
    void v12[3] = v15;
    *uint64_t v12 = v13;
    v12[1] = v14;
    sub_244CCCE18((uint64_t)&a1[12]);
    a4->n128_u64[0] = 0;
    a4->n128_u64[1] = 0;
    a4[1].n128_u64[0] = 0;
    sub_244DC8660(a1, a4);
    if (a4->n128_u32[0]) {
      return;
    }
    a4->n128_u64[0] = 0;
    a4->n128_u64[1] = 0;
    a4[1].n128_u64[0] = 0;
    sub_2447EA618(a1, a2, a3, a4);
  }
  else
  {
    *a4 = v16;
    a4[1].n128_u64[0] = v17;
  }
  if (!a4->n128_u32[0])
  {
    a4->n128_u32[0] = 0;
    a4->n128_u64[1] = (unint64_t)"/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/WriteClient.h";
    a4[1].n128_u32[0] = 309;
  }
}

void sub_2447EA618(__n128 *a1@<X0>, unsigned __int16 *a2@<X1>, void **a3@<X2>, __n128 *a4@<X8>)
{
  a4->n128_u64[0] = 0;
  a4->n128_u64[1] = 0;
  a4[1].n128_u64[0] = 0;
  sub_244DC82EC(a1, a2, a4);
  if (!a4->n128_u32[0])
  {
    uint64_t v7 = (char *)sub_244DC8490((uint64_t)a1);
    if (!v7)
    {
      int v9 = 263;
      int v8 = 3;
      goto LABEL_7;
    }
    a4->n128_u64[0] = 0;
    a4->n128_u64[1] = 0;
    a4[1].n128_u64[0] = 0;
    sub_2447D6DCC(*a3, v7, 2, a4);
    if (!a4->n128_u32[0])
    {
      a4->n128_u64[0] = 0;
      a4->n128_u64[1] = 0;
      a4[1].n128_u64[0] = 0;
      sub_244DC8428((uint64_t)a1, a4);
      if (!a4->n128_u32[0])
      {
        int v8 = 0;
        int v9 = 267;
LABEL_7:
        a4->n128_u32[0] = v8;
        a4->n128_u64[1] = (unint64_t)"/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/WriteClient.h";
        a4[1].n128_u32[0] = v9;
      }
    }
  }
}

void sub_2447EA6D4()
{
}

__n128 sub_2447EA6E8(uint64_t a1)
{
  uint64_t v2 = (char *)operator new(0x18uLL);
  *(void *)uint64_t v2 = &unk_26F9453B8;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_2447EA734(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &unk_26F9453B8;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

void sub_2447EA764(uint64_t a1)
{
}

uint64_t sub_2447EA76C(uint64_t a1, uint64_t a2)
{
  if (sub_2447E82E4(a2, (uint64_t)&unk_26F945428)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

void *sub_2447EA7AC()
{
  return &unk_26F945428;
}

void sub_2447EA7B8(uint64_t a1)
{
  uint64_t v2 = *(void (****)(void))(a1 + 8);
  if (v2)
  {
    (**v2)(*(void *)(a1 + 8));
    j__free(v2);
  }
  char v3 = *(void **)a1;
  if (v3)
  {
    v3[14] = &unk_26F952B18;
    sub_2447E6A80(v3 + 9);
    sub_2447E69FC(v3 + 5);
    sub_2447E6978(v3 + 1);
    j__free(v3);
  }
}

void *sub_2447EA870(void *result, void *a2)
{
  v6[3] = *MEMORY[0x263EF8340];
  if (a2 != result)
  {
    char v3 = result;
    uint64_t v4 = (void *)result[3];
    uint64_t v5 = (void *)a2[3];
    if (v4 == result)
    {
      if (v5 == a2)
      {
        (*(void (**)(void *, void *))(*result + 24))(result, v6);
        (*(void (**)(void))(*(void *)v3[3] + 32))(v3[3]);
        void v3[3] = 0;
        (*(void (**)(void, void *))(*(void *)a2[3] + 24))(a2[3], v3);
        (*(void (**)(void))(*(void *)a2[3] + 32))(a2[3]);
        a2[3] = 0;
        void v3[3] = v3;
        (*(void (**)(void *, void *))(v6[0] + 24))(v6, a2);
        __n128 result = (void *)(*(uint64_t (**)(void *))(v6[0] + 32))(v6);
      }
      else
      {
        (*(void (**)(void *, void *))(*result + 24))(result, a2);
        __n128 result = (void *)(*(uint64_t (**)(void))(*(void *)v3[3] + 32))(v3[3]);
        void v3[3] = a2[3];
      }
      a2[3] = a2;
    }
    else if (v5 == a2)
    {
      (*(void (**)(void *, void *))(*a2 + 24))(a2, result);
      __n128 result = (void *)(*(uint64_t (**)(void))(*(void *)a2[3] + 32))(a2[3]);
      a2[3] = v3[3];
      void v3[3] = v3;
    }
    else
    {
      result[3] = v5;
      a2[3] = v4;
    }
  }
  return result;
}

void sub_2447EAAD0(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_2446D1FF0(a1);
}

void sub_2447EAADC(void (****a1)(void), void (***a2)(void))
{
  uint64_t v2 = *a1;
  *a1 = a2;
  if (v2)
  {
    (**v2)(v2);
    j__free(v2);
  }
}

void sub_2447EAB38(void *a1, uint64_t a2)
{
  char v3 = (void *)*a1;
  *a1 = a2;
  if (v3) {
    sub_2447EAB64((uint64_t)a1, v3);
  }
}

void sub_2447EAB64(uint64_t a1, void *a2)
{
  if (a2)
  {
    a2[14] = &unk_26F952B18;
    sub_2447E6A80(a2 + 9);
    sub_2447E69FC(a2 + 5);
    sub_2447E6978(a2 + 1);
    j__free(a2);
  }
}

void sub_2447EABDC()
{
}

__n128 sub_2447EABF0(uint64_t a1)
{
  uint64_t v2 = (char *)operator new(0x18uLL);
  *(void *)uint64_t v2 = &unk_26F945448;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_2447EAC3C(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &unk_26F945448;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

void sub_2447EAC6C(uint64_t a1, uint64_t *a2)
{
  v18[1] = *MEMORY[0x263EF8340];
  __n128 v16 = @"attributePath";
  uint64_t v4 = [MTRAttributePath alloc];
  uint64_t v11 = *a2;
  int v12 = *((_DWORD *)a2 + 2);
  __int16 v13 = 0;
  char v14 = 0;
  char v15 = 0;
  uint64_t v6 = objc_msgSend_initWithPath_(v4, v5, (uint64_t)&v11);
  unint64_t v17 = v6;
  int v8 = objc_msgSend_dictionaryWithObjects_forKeys_count_(NSDictionary, v7, (uint64_t)&v17, &v16, 1);
  v18[0] = v8;
  long long v10 = objc_msgSend_arrayWithObjects_count_(MEMORY[0x263EFF8C0], v9, (uint64_t)v18, 1);

  (*(void (**)(void, void *))(a1 + 8))(*(void *)(a1 + 16), v10);
}

void sub_2447EAD68(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2447EAD9C(uint64_t a1, uint64_t a2)
{
  if (sub_2447E82E4(a2, (uint64_t)&unk_26F9454B8)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

void *sub_2447EADDC()
{
  return &unk_26F9454B8;
}

void sub_2447EADEC()
{
}

__n128 sub_2447EAE00(uint64_t a1)
{
  uint64_t v2 = (char *)operator new(0x18uLL);
  *(void *)uint64_t v2 = &unk_26F9454D8;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_2447EAE4C(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &unk_26F9454D8;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_2447EAE7C(uint64_t a1, uint64_t a2, long long *a3)
{
  long long v4 = *a3;
  uint64_t v5 = *((void *)a3 + 2);
  return (*(uint64_t (**)(void, long long *))(a1 + 8))(*(void *)(a1 + 16), &v4);
}

uint64_t sub_2447EAEB4(uint64_t a1, uint64_t a2)
{
  if (sub_2447E82E4(a2, (uint64_t)&unk_26F945548)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

void *sub_2447EAEF4()
{
  return &unk_26F945548;
}

void sub_2447EAF00(void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (char *)**a1;
  if (v2)
  {
    long long v4 = (char *)v1[1];
    uint64_t v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        uint64_t v6 = (void *)*((void *)v4 - 1);
        v4 -= 8;
      }
      while (v4 != v2);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void *sub_2447EAF80(uint64_t a1, unint64_t a2)
{
  if (a2 >> 61) {
    sub_2446D041C();
  }
  return operator new(8 * a2);
}

uint64_t sub_2447EAFB8(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 8;
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_2447EB00C(__n128 *a1@<X0>, uint64_t *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, __n128 *a5@<X8>)
{
  unsigned __int16 v11 = *((_WORD *)a2 + 4);
  uint64_t v13 = *a2;
  char v12 = 0;
  __int16 v14 = 0;
  char v15 = 0;
  if (*(unsigned char *)a4) {
    int v17 = *(_DWORD *)(a4 + 4);
  }
  a5->n128_u64[0] = 0;
  a5->n128_u64[1] = 0;
  a5[1].n128_u64[0] = 0;
  sub_244DC8634(a1, a5);
  if (!a5->n128_u32[0])
  {
    a5->n128_u64[0] = 0;
    a5->n128_u64[1] = 0;
    a5[1].n128_u64[0] = 0;
    v10[0] = 0;
    v10[1] = 0;
    sub_2447EB12C(a1, &v11, v10, a5);
    if (!a5->n128_u32[0])
    {
      char v15 = 4;
      if (a3[1])
      {
        uint64_t v8 = 0;
        unint64_t v9 = 0;
        while (1)
        {
          a5->n128_u64[0] = 0;
          a5->n128_u64[1] = 0;
          a5[1].n128_u64[0] = 0;
          sub_2447EA508(a1, &v11, (void **)(*a3 + v8), a5);
          if (a5->n128_u32[0]) {
            break;
          }
          ++v9;
          v8 += 8;
          if (v9 >= a3[1]) {
            goto LABEL_9;
          }
        }
      }
      else
      {
LABEL_9:
        a5->n128_u32[0] = 0;
        a5->n128_u64[1] = (unint64_t)"/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/WriteClient.h";
        a5[1].n128_u32[0] = 186;
      }
    }
  }
}

void sub_2447EB12C(__n128 *a1@<X0>, unsigned __int16 *a2@<X1>, uint64_t *a3@<X2>, __n128 *a4@<X8>)
{
  sub_244CB62B8((uint64_t)&v18);
  uint64_t v8 = (long long *)a1[13].n128_u64[1];
  long long v9 = v8[3];
  long long v11 = *v8;
  long long v10 = v8[1];
  long long v20 = v8[2];
  long long v21 = v9;
  long long v18 = v11;
  long long v19 = v10;
  __n128 v16 = 0uLL;
  unint64_t v17 = 0;
  sub_2447EB23C(a1, a2, a3, &v16);
  if (v16.n128_u32[0] == 25 || v16.n128_u32[0] == 11)
  {
    char v12 = (_OWORD *)a1[13].n128_u64[1];
    long long v13 = v18;
    long long v14 = v19;
    long long v15 = v21;
    void v12[2] = v20;
    void v12[3] = v15;
    *char v12 = v13;
    v12[1] = v14;
    sub_244CCCE18((uint64_t)&a1[12]);
    a4->n128_u64[0] = 0;
    a4->n128_u64[1] = 0;
    a4[1].n128_u64[0] = 0;
    sub_244DC8660(a1, a4);
    if (a4->n128_u32[0]) {
      return;
    }
    a4->n128_u64[0] = 0;
    a4->n128_u64[1] = 0;
    a4[1].n128_u64[0] = 0;
    sub_2447EB23C(a1, a2, a3, a4);
  }
  else
  {
    *a4 = v16;
    a4[1].n128_u64[0] = v17;
  }
  if (!a4->n128_u32[0])
  {
    a4->n128_u32[0] = 0;
    a4->n128_u64[1] = (unint64_t)"/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/WriteClient.h";
    a4[1].n128_u32[0] = 309;
  }
}

void sub_2447EB23C(__n128 *a1@<X0>, unsigned __int16 *a2@<X1>, uint64_t *a3@<X2>, __n128 *a4@<X8>)
{
  a4->n128_u64[0] = 0;
  a4->n128_u64[1] = 0;
  a4[1].n128_u64[0] = 0;
  sub_244DC82EC(a1, a2, a4);
  if (a4->n128_u32[0]) {
    return;
  }
  uint64_t v7 = (void *)sub_244DC8490((uint64_t)a1);
  if (!v7)
  {
    a4->n128_u32[0] = 3;
    a4->n128_u64[1] = (unint64_t)"/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/WriteClient.h";
    int v11 = 263;
    goto LABEL_12;
  }
  uint64_t v8 = (uint64_t)v7;
  uint64_t v10 = *a3;
  uint64_t v9 = a3[1];
  int v12 = 0;
  a4->n128_u64[1] = 0;
  a4[1].n128_u64[0] = 0;
  a4->n128_u64[0] = 0;
  sub_244CB7594(v7, 2, 22, &v12, (uint64_t)a4);
  if (a4->n128_u32[0]) {
    return;
  }
  if (!v9)
  {
LABEL_8:
    a4->n128_u64[0] = 0;
    a4->n128_u64[1] = 0;
    a4[1].n128_u64[0] = 0;
    sub_244CB7708(v8, v12, (uint64_t)a4);
    if (a4->n128_u32[0]) {
      return;
    }
    a4->n128_u64[0] = 0;
    a4->n128_u64[1] = 0;
    a4[1].n128_u64[0] = 0;
    sub_244DC8428((uint64_t)a1, a4);
    if (a4->n128_u32[0]) {
      return;
    }
    a4->n128_u32[0] = 0;
    a4->n128_u64[1] = (unint64_t)"/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/WriteClient.h";
    int v11 = 267;
LABEL_12:
    a4[1].n128_u32[0] = v11;
    return;
  }
  while (1)
  {
    a4->n128_u64[0] = 0;
    a4->n128_u64[1] = 0;
    a4[1].n128_u64[0] = 0;
    sub_244CB68B8();
    if (a4->n128_u32[0]) {
      break;
    }
    ++v10;
    if (!--v9) {
      goto LABEL_8;
    }
  }
}

void sub_2447EB378()
{
}

__n128 sub_2447EB38C(uint64_t a1)
{
  uint64_t v2 = (char *)operator new(0x18uLL);
  *(void *)uint64_t v2 = &unk_26F945568;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_2447EB3D8(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &unk_26F945568;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

void sub_2447EB408(uint64_t a1)
{
}

uint64_t sub_2447EB410(uint64_t a1, uint64_t a2)
{
  if (sub_2447E82E4(a2, (uint64_t)&unk_26F9455C8)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

void *sub_2447EB450()
{
  return &unk_26F9455C8;
}

uint64_t sub_2447EB45C(uint64_t a1)
{
  return a1;
}

void sub_2447EB488(uint64_t a1)
{
  JUMPOUT(0x245695FA0);
}

char *sub_2447EB4D4(uint64_t a1)
{
  uint64_t v2 = (char *)operator new(0x20uLL);
  *(void *)uint64_t v2 = &unk_26F9455E8;
  *(_OWORD *)(v2 + 8) = *(_OWORD *)(a1 + 8);
  *((void *)v2 + 3) = *(id *)(a1 + 24);
  return v2;
}

id sub_2447EB534(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &unk_26F9455E8;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(a1 + 8);
  id result = *(id *)(a1 + 24);
  *(void *)(a2 + 24) = result;
  return result;
}

void sub_2447EB584(uint64_t a1)
{
}

void sub_2447EB58C(id *a1)
{
  operator delete(a1);
}

void sub_2447EB5C8(uint64_t a1, uint64_t a2, uint64_t a3, id *a4)
{
  v48[2] = *MEMORY[0x263EF8340];
  id v7 = objc_alloc_init(MEMORY[0x263EFF980]);
  if (*a4)
  {
    id v8 = *a4;
    uint64_t v10 = v8;
    if (*(void *)(a1 + 24))
    {
      int v11 = objc_msgSend_objectForKeyedSubscript_(v8, v9, @"value");
      id v12 = objc_alloc(MEMORY[0x263EFF980]);
      uint64_t v15 = objc_msgSend_count(v11, v13, v14);
      unint64_t v17 = objc_msgSend_initWithCapacity_(v12, v16, v15 + 1);
      objc_msgSend_addObjectsFromArray_(v17, v18, (uint64_t)v11);
      v47[1] = @"data";
      v48[0] = &unk_26F9C86E0;
      v45[0] = @"type";
      v45[1] = @"value";
      uint64_t v19 = *(void *)(a1 + 24);
      v46[0] = @"OctetString";
      v46[1] = v19;
      v47[0] = @"contextTag";
      long long v21 = objc_msgSend_dictionaryWithObjects_forKeys_count_(NSDictionary, v20, (uint64_t)v46, v45, 2);
      v48[1] = v21;
      int v23 = objc_msgSend_dictionaryWithObjects_forKeys_count_(NSDictionary, v22, (uint64_t)v48, v47, 2);
      objc_msgSend_addObject_(v17, v24, (uint64_t)v23);

      __n128 v25 = (void *)MEMORY[0x263EFF9A0];
      uint64_t v28 = objc_msgSend_count(v10, v26, v27);
      unint64_t v30 = objc_msgSend_dictionaryWithCapacity_(v25, v29, v28 + 1);
      objc_msgSend_addEntriesFromDictionary_(v30, v31, (uint64_t)v10);
      objc_msgSend_setObject_forKeyedSubscript_(v30, v32, (uint64_t)v17, @"value");
    }
    else
    {
      unint64_t v30 = v8;
    }
    v43[0] = @"commandPath";
    int v38 = [MTRCommandPath alloc];
    uint64_t v36 = objc_msgSend_initWithPath_(v38, v39, a2);
    v43[1] = @"data";
    v44[0] = v36;
    v44[1] = v30;
    long long v41 = objc_msgSend_dictionaryWithObjects_forKeys_count_(NSDictionary, v40, (uint64_t)v44, v43, 2);
    objc_msgSend_addObject_(v7, v42, (uint64_t)v41);
  }
  else
  {
    v47[0] = @"commandPath";
    uint64_t v33 = [MTRCommandPath alloc];
    unint64_t v30 = objc_msgSend_initWithPath_(v33, v34, a2);
    v48[0] = v30;
    uint64_t v36 = objc_msgSend_dictionaryWithObjects_forKeys_count_(NSDictionary, v35, (uint64_t)v48, v47, 1);
    objc_msgSend_addObject_(v7, v37, (uint64_t)v36);
  }

  (*(void (**)(void, id))(a1 + 8))(*(void *)(a1 + 16), v7);
}

void sub_2447EB860(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2447EB900(uint64_t a1, uint64_t a2)
{
  if (sub_2447E82E4(a2, (uint64_t)&unk_26F945658)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

void *sub_2447EB940()
{
  return &unk_26F945658;
}

void sub_2447EB950()
{
}

__n128 sub_2447EB964(uint64_t a1)
{
  uint64_t v2 = (char *)operator new(0x18uLL);
  *(void *)uint64_t v2 = &unk_26F945678;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_2447EB9B0(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &unk_26F945678;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_2447EB9E0(uint64_t a1, long long *a2)
{
  long long v3 = *a2;
  uint64_t v4 = *((void *)a2 + 2);
  return (*(uint64_t (**)(void, long long *))(a1 + 8))(*(void *)(a1 + 16), &v3);
}

uint64_t sub_2447EBA18(uint64_t a1, uint64_t a2)
{
  if (sub_2447E82E4(a2, (uint64_t)&unk_26F9456E8)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

void *sub_2447EBA58()
{
  return &unk_26F9456E8;
}

uint64_t sub_2447EBA64(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)a1 = &unk_26F944CD0;
  uint64_t v11 = a1 + 40;
  sub_2447EBB24(a1 + 8, a4);
  sub_2447EBBBC(v11, a5);
  sub_2447E58FC(a1 + 72, a6);
  *(_DWORD *)(a1 + 104) = a2;
  *(_DWORD *)(a1 + 108) = a3;
  *(unsigned char *)(a1 + 112) = 0;
  return a1;
}

void sub_2447EBB00(_Unwind_Exception *a1)
{
  sub_2447E6794(v2);
  sub_2447E6818(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2447EBB24(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

uint64_t sub_2447EBBBC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void sub_2447EBC54(void *a1, uint64_t a2)
{
  uint64_t v3 = (void *)*a1;
  *a1 = a2;
  if (v3) {
    sub_2447EBC80((uint64_t)a1, v3);
  }
}

void sub_2447EBC80(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_2447E6FA8(a2 + 9);
    sub_2447E6794(a2 + 5);
    sub_2447E6818(a2 + 1);
    j__free(a2);
  }
}

void sub_2447EBCD8()
{
}

void *sub_2447EBCEC(uint64_t a1)
{
  __n128 result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *__n128 result = &unk_26F945708;
  result[1] = v3;
  return result;
}

uint64_t sub_2447EBD34(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &unk_26F945708;
  a2[1] = v2;
  return result;
}

void sub_2447EBD60(uint64_t a1, void *a2)
{
  if (*a2)
  {
    uint64_t v3 = (void *)sub_244DBB640(*a2);
    j__free(v3);
  }
  uint64_t v4 = *(void **)(a1 + 8);
  if (v4)
  {
    sub_2447E6FA8(v4 + 9);
    sub_2447E6794(v4 + 5);
    sub_2447E6818(v4 + 1);
    j__free(v4);
  }
}

uint64_t sub_2447EBDD0(uint64_t a1, uint64_t a2)
{
  if (sub_2447E82E4(a2, (uint64_t)&unk_26F945778)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

void *sub_2447EBE10()
{
  return &unk_26F945778;
}

void sub_2447EBE1C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  *a1 = a2;
  if (v3)
  {
    uint64_t v4 = (void *)sub_244DBB640();
    j__free(v4);
  }
}

void sub_2447EBE50()
{
}

void sub_2447EBE64(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
}

uint64_t sub_2447EBE70(uint64_t a1)
{
  return a1;
}

void sub_2447EBEA4(uint64_t a1)
{
  JUMPOUT(0x245695FA0);
}

void *sub_2447EBEF8(uint64_t a1)
{
  uint64_t v2 = operator new(0x18uLL);
  void *v2 = &unk_26F9457D8;
  v2[1] = *(id *)(a1 + 8);
  v2[2] = MEMORY[0x2456969D0](*(void *)(a1 + 16));
  return v2;
}

uint64_t sub_2447EBF5C(uint64_t a1, void *a2)
{
  *a2 = &unk_26F9457D8;
  a2[1] = *(id *)(a1 + 8);
  uint64_t result = MEMORY[0x2456969D0](*(void *)(a1 + 16));
  a2[2] = result;
  return result;
}

void sub_2447EBFB4(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 8);
}

void sub_2447EBFF0(id *a1)
{
  operator delete(a1);
}

void sub_2447EC034(uint64_t a1, uint64_t *a2, id *a3)
{
  id v5 = *a3;
  uint64_t v6 = *a2;
  int v13 = *((_DWORD *)a2 + 2);
  v9[0] = MEMORY[0x263EF8330];
  v9[1] = 3221225472;
  v9[2] = sub_2447EC130;
  v9[3] = &unk_265195288;
  id v7 = *(NSObject **)(a1 + 8);
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = v6;
  id v10 = v5;
  id v8 = v5;
  dispatch_async(v7, v9);
}

uint64_t sub_2447EC0E4(uint64_t a1, uint64_t a2)
{
  if (sub_2447E82E4(a2, (uint64_t)&unk_26F945838)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

void *sub_2447EC124()
{
  return &unk_26F945838;
}

void sub_2447EC130(uint64_t a1)
{
  v17[1] = *MEMORY[0x263EF8340];
  uint64_t v2 = *(void *)(a1 + 40);
  v15[0] = @"attributePath";
  uint64_t v3 = [MTRAttributePath alloc];
  uint64_t v10 = *(void *)(a1 + 48);
  int v11 = *(_DWORD *)(a1 + 56);
  __int16 v12 = 0;
  char v13 = 0;
  char v14 = 0;
  id v5 = objc_msgSend_initWithPath_(v3, v4, (uint64_t)&v10);
  v15[1] = @"data";
  v16[0] = v5;
  v16[1] = *(void *)(a1 + 32);
  id v7 = objc_msgSend_dictionaryWithObjects_forKeys_count_(NSDictionary, v6, (uint64_t)v16, v15, 2);
  v17[0] = v7;
  uint64_t v9 = objc_msgSend_arrayWithObjects_count_(MEMORY[0x263EFF8C0], v8, (uint64_t)v17, 1);
  (*(void (**)(uint64_t, void *, void))(v2 + 16))(v2, v9, 0);
}

void sub_2447EC248(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2447EC278(uint64_t a1)
{
  return a1;
}

void sub_2447EC2AC(uint64_t a1)
{
  JUMPOUT(0x245695FA0);
}

void *sub_2447EC300(uint64_t a1)
{
  uint64_t v2 = operator new(0x18uLL);
  void *v2 = &unk_26F945858;
  v2[1] = *(id *)(a1 + 8);
  v2[2] = MEMORY[0x2456969D0](*(void *)(a1 + 16));
  return v2;
}

uint64_t sub_2447EC364(uint64_t a1, void *a2)
{
  *a2 = &unk_26F945858;
  a2[1] = *(id *)(a1 + 8);
  uint64_t result = MEMORY[0x2456969D0](*(void *)(a1 + 16));
  a2[2] = result;
  return result;
}

void sub_2447EC3BC(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 8);
}

void sub_2447EC3F8(id *a1)
{
  operator delete(a1);
}

void sub_2447EC43C(uint64_t a1, uint64_t a2, id *a3)
{
  id v5 = *a3;
  id v7 = objc_msgSend_eventReportForHeader_andData_(MTRBaseDevice, v6, a2, v5);

  v11[0] = MEMORY[0x263EF8330];
  v11[1] = 3221225472;
  v11[2] = sub_2447EC568;
  v11[3] = &unk_265194F48;
  uint64_t v9 = *(NSObject **)(a1 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  id v12 = v7;
  uint64_t v13 = v8;
  id v10 = v7;
  dispatch_async(v9, v11);
}

void sub_2447EC50C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2447EC51C(uint64_t a1, uint64_t a2)
{
  if (sub_2447E82E4(a2, (uint64_t)&unk_26F9458B8)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

void *sub_2447EC55C()
{
  return &unk_26F9458B8;
}

void sub_2447EC568(uint64_t a1, const char *a2)
{
  v4[1] = *MEMORY[0x263EF8340];
  uint64_t v2 = *(void *)(a1 + 40);
  v4[0] = *(void *)(a1 + 32);
  uint64_t v3 = objc_msgSend_arrayWithObjects_count_(MEMORY[0x263EFF8C0], a2, (uint64_t)v4, 1);
  (*(void (**)(uint64_t, void *, void))(v2 + 16))(v2, v3, 0);
}

void sub_2447EC5F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2447EC610(uint64_t a1)
{
  return a1;
}

void sub_2447EC644(uint64_t a1)
{
  JUMPOUT(0x245695FA0);
}

void *sub_2447EC698(uint64_t a1)
{
  uint64_t v2 = operator new(0x18uLL);
  void *v2 = &unk_26F9458D8;
  v2[1] = *(id *)(a1 + 8);
  v2[2] = MEMORY[0x2456969D0](*(void *)(a1 + 16));
  return v2;
}

uint64_t sub_2447EC6FC(uint64_t a1, void *a2)
{
  *a2 = &unk_26F9458D8;
  a2[1] = *(id *)(a1 + 8);
  uint64_t result = MEMORY[0x2456969D0](*(void *)(a1 + 16));
  a2[2] = result;
  return result;
}

void sub_2447EC754(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 8);
}

void sub_2447EC790(id *a1)
{
  operator delete(a1);
}

void sub_2447EC7D4(uint64_t a1, uint64_t **a2, uint64_t **a3, long long *a4)
{
  uint64_t v4 = *a2;
  if (*a2)
  {
    uint64_t v5 = *v4;
    int v19 = *((_DWORD *)v4 + 2);
    uint64_t v18 = v5;
    uint64_t v6 = *(NSObject **)(a1 + 8);
    uint64_t v11 = MEMORY[0x263EF8330];
    uint64_t v12 = 3221225472;
    id v7 = sub_2447EC960;
  }
  else
  {
    uint64_t v8 = *a3;
    if (!*a3)
    {
      uint64_t v6 = *(NSObject **)(a1 + 8);
      uint64_t v11 = MEMORY[0x263EF8330];
      uint64_t v12 = 3221225472;
      id v7 = sub_2447ECC4C;
      id v10 = &unk_265195060;
      goto LABEL_6;
    }
    uint64_t v9 = *v8;
    int v19 = *((_DWORD *)v8 + 2);
    uint64_t v18 = v9;
    uint64_t v6 = *(NSObject **)(a1 + 8);
    uint64_t v11 = MEMORY[0x263EF8330];
    uint64_t v12 = 3221225472;
    id v7 = sub_2447ECAE4;
  }
  id v10 = &unk_2651952B0;
LABEL_6:
  uint64_t v13 = v7;
  char v14 = v10;
  uint64_t v15 = *(void *)(a1 + 16);
  long long v16 = *a4;
  uint64_t v17 = *((void *)a4 + 2);
  dispatch_async(v6, &v11);
}

uint64_t sub_2447EC914(uint64_t a1, uint64_t a2)
{
  if (sub_2447E82E4(a2, (uint64_t)&unk_26F945938)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

void *sub_2447EC954()
{
  return &unk_26F945938;
}

void sub_2447EC960(uint64_t a1)
{
  v20[1] = *MEMORY[0x263EF8340];
  uint64_t v2 = *(void *)(a1 + 32);
  v18[0] = @"attributePath";
  uint64_t v3 = [MTRAttributePath alloc];
  uint64_t v13 = *(void *)(a1 + 64);
  int v14 = *(_DWORD *)(a1 + 72);
  __int16 v15 = 0;
  char v16 = 0;
  char v17 = 0;
  uint64_t v5 = objc_msgSend_initWithPath_(v3, v4, (uint64_t)&v13);
  v18[1] = @"error";
  v19[0] = v5;
  long long v11 = *(_OWORD *)(a1 + 40);
  uint64_t v12 = *(void *)(a1 + 56);
  uint64_t v6 = sub_244B26908((uint64_t)MTRError, &v11);
  v19[1] = v6;
  uint64_t v8 = objc_msgSend_dictionaryWithObjects_forKeys_count_(NSDictionary, v7, (uint64_t)v19, v18, 2);
  v20[0] = v8;
  id v10 = objc_msgSend_arrayWithObjects_count_(MEMORY[0x263EFF8C0], v9, (uint64_t)v20, 1);
  (*(void (**)(uint64_t, void *, void))(v2 + 16))(v2, v10, 0);
}

void sub_2447ECAA8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447ECAE4(uint64_t a1)
{
  v15[1] = *MEMORY[0x263EF8340];
  uint64_t v2 = *(void *)(a1 + 32);
  v13[0] = @"eventPath";
  uint64_t v3 = [MTREventPath alloc];
  uint64_t v5 = objc_msgSend_initWithPath_(v3, v4, a1 + 64);
  v13[1] = @"error";
  v14[0] = v5;
  long long v11 = *(_OWORD *)(a1 + 40);
  uint64_t v12 = *(void *)(a1 + 56);
  uint64_t v6 = sub_244B26908((uint64_t)MTRError, &v11);
  v14[1] = v6;
  uint64_t v8 = objc_msgSend_dictionaryWithObjects_forKeys_count_(NSDictionary, v7, (uint64_t)v14, v13, 2);
  v15[0] = v8;
  id v10 = objc_msgSend_arrayWithObjects_count_(MEMORY[0x263EFF8C0], v9, (uint64_t)v15, 1);
  (*(void (**)(uint64_t, void *, void))(v2 + 16))(v2, v10, 0);
}

void sub_2447ECC10(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2447ECC4C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  long long v3 = *(_OWORD *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 56);
  uint64_t v2 = sub_244B26908((uint64_t)MTRError, &v3);
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);
}

void sub_2447ECCBC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_2447ECCCC(uint64_t a1)
{
  return a1;
}

void sub_2447ECCF8(uint64_t a1)
{
  JUMPOUT(0x245695FA0);
}

void *sub_2447ECD44(uint64_t a1)
{
  uint64_t v2 = operator new(0x10uLL);
  void *v2 = &unk_26F945958;
  v2[1] = *(id *)(a1 + 8);
  return v2;
}

id sub_2447ECD9C(uint64_t a1, void *a2)
{
  *a2 = &unk_26F945958;
  id result = *(id *)(a1 + 8);
  a2[1] = result;
  return result;
}

void sub_2447ECDE4(uint64_t a1)
{
}

void sub_2447ECDEC(id *a1)
{
  operator delete(a1);
}

uint64_t sub_2447ECE28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270F9A6D0](*(void *)(a1 + 8), sel_onDone, a3);
}

uint64_t sub_2447ECE30(uint64_t a1, uint64_t a2)
{
  if (sub_2447E82E4(a2, (uint64_t)&unk_26F9459B8)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

void *sub_2447ECE70()
{
  return &unk_26F9459B8;
}

uint64_t sub_2447ECE7C(uint64_t a1)
{
  return a1;
}

void sub_2447ECEB0(uint64_t a1)
{
  JUMPOUT(0x245695FA0);
}

void *sub_2447ECF04(uint64_t a1)
{
  uint64_t v2 = operator new(0x18uLL);
  void *v2 = &unk_26F9459D8;
  v2[1] = *(id *)(a1 + 8);
  v2[2] = MEMORY[0x2456969D0](*(void *)(a1 + 16));
  return v2;
}

uint64_t sub_2447ECF68(uint64_t a1, void *a2)
{
  *a2 = &unk_26F9459D8;
  a2[1] = *(id *)(a1 + 8);
  uint64_t result = MEMORY[0x2456969D0](*(void *)(a1 + 16));
  a2[2] = result;
  return result;
}

void sub_2447ECFC0(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 8);
}

void sub_2447ECFFC(id *a1)
{
  operator delete(a1);
}

void sub_2447ED040(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 16);
  if (v1) {
    dispatch_async(*(dispatch_queue_t *)(a1 + 8), v1);
  }
}

uint64_t sub_2447ED054(uint64_t a1, uint64_t a2)
{
  if (sub_2447E82E4(a2, (uint64_t)&unk_26F945A38)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

void *sub_2447ED094()
{
  return &unk_26F945A38;
}

uint64_t sub_2447ED0A0(uint64_t a1)
{
  return a1;
}

void sub_2447ED0D4(uint64_t a1)
{
  JUMPOUT(0x245695FA0);
}

void *sub_2447ED128(uint64_t a1)
{
  uint64_t v2 = operator new(0x18uLL);
  void *v2 = &unk_26F945A58;
  v2[1] = *(id *)(a1 + 8);
  v2[2] = MEMORY[0x2456969D0](*(void *)(a1 + 16));
  return v2;
}

uint64_t sub_2447ED18C(uint64_t a1, void *a2)
{
  *a2 = &unk_26F945A58;
  a2[1] = *(id *)(a1 + 8);
  uint64_t result = MEMORY[0x2456969D0](*(void *)(a1 + 16));
  a2[2] = result;
  return result;
}

void sub_2447ED1E4(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 8);
}

void sub_2447ED220(id *a1)
{
  operator delete(a1);
}

void sub_2447ED264(uint64_t a1, id *a2, void **a3)
{
  uint64_t v4 = *a3;
  id v5 = *a2;
  id v6 = v4;
  uint64_t v7 = *(void *)(a1 + 16);
  if (v7)
  {
    uint64_t v8 = *(NSObject **)(a1 + 8);
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = sub_2447ED380;
    block[3] = &unk_265194FE8;
    uint64_t v12 = v7;
    id v10 = v5;
    id v11 = v6;
    dispatch_async(v8, block);
  }
}

uint64_t sub_2447ED334(uint64_t a1, uint64_t a2)
{
  if (sub_2447E82E4(a2, (uint64_t)&unk_26F945AC8)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

void *sub_2447ED374()
{
  return &unk_26F945AC8;
}

uint64_t sub_2447ED380(void *a1)
{
  return (*(uint64_t (**)(void, void, void))(a1[6] + 16))(a1[6], a1[4], a1[5]);
}

void sub_2447ED398(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = sub_2447D5B3C(a2, 0);
  id v6 = *a1;
  *a1 = (void *)v5;

  if (*a1)
  {
    int v7 = 0;
  }
  else
  {
    uint64_t v8 = sub_244CC8484(0, "NotSpecified");
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl(&dword_2446BD000, v8, OS_LOG_TYPE_ERROR, "Error: Failed to get value from TLV data for attribute reading response", v9, 2u);
    }

    if (sub_244CC4E58(1u)) {
      sub_244CC4DE0(0, 1);
    }
    if (*a1) {
      int v7 = 0;
    }
    else {
      int v7 = 176;
    }
  }
  *(_DWORD *)a3 = v7;
  *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/darwin/Framework/CHIP/MTRBaseDevice.mm";
  *(_DWORD *)(a3 + 16) = 796;
}

double sub_2447ED490@<D0>(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_24483F80C(a1, (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB6904();
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
        long long v8 = v11;
        uint64_t v9 = v12;
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2447ED5A0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_11:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_2651952D0;
      uint64_t v11 = 103;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_244CB3F40(a2, (_WORD *)(a1 + 4), (uint64_t)&v10);
      }
      else if (!(_BYTE)v12)
      {
        *(unsigned char *)a1 = 1;
        *(_WORD *)(a1 + 2) = 0;
        uint64_t v9 = 0;
        long long v8 = 0uLL;
        sub_24484B11C(a2, (_WORD *)(a1 + 2), &v8);
        if (!v8)
        {
          LODWORD(v8) = 0;
          *((void *)&v8 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
          LODWORD(v9) = 61;
        }
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_11;
      }
    }
  }
  return result;
}

void sub_2447ED6F8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(unsigned char *)a1)
  {
LABEL_2:
    uint64_t v4 = *(void *)(a1 + 8);
    while (1)
    {
      long long v7 = 0uLL;
      uint64_t v8 = 0;
      sub_244CB4E58(v4, &v7);
      if (v7) {
        break;
      }
      uint64_t v4 = *(void *)(a1 + 8);
      unint64_t v5 = *(void *)(v4 + 16);
      if (v5 <= 0xFF)
      {
        int v6 = 0;
        *(unsigned char *)a2 = v5;
        goto LABEL_13;
      }
    }
    if (v7 == 33) {
      sub_244CB4D00(*(void *)(a1 + 8), *(_DWORD *)(a1 + 4), (uint64_t)&v7);
    }
    goto LABEL_10;
  }
  if (sub_244CB3B68(*(void *)(a1 + 8)) != 21)
  {
    *(_DWORD *)a2 = 38;
    *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-common/a"
                          "pp-common/zap-generated/cluster-objects.cpp";
    *(_DWORD *)(a2 + 16) = 47;
    goto LABEL_12;
  }
  long long v7 = 0uLL;
  uint64_t v8 = 0;
  sub_244CB4C90(*(void *)(a1 + 8), (_DWORD *)(a1 + 4), (uint64_t)&v7);
  if (!v7)
  {
    *(unsigned char *)a1 = 1;
    goto LABEL_2;
  }
LABEL_10:
  *(_OWORD *)a2 = v7;
  *(void *)(a2 + 16) = v8;
LABEL_12:
  int v6 = 1;
LABEL_13:
  *(_DWORD *)(a2 + 24) = v6;
}

double sub_2447ED7F4@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  long long v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB6D80(v7, *(char **)a1, *(void *)(a1 + 8), (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB68B8();
      long long v8 = v11;
      uint64_t v9 = v12;
    }
  }
  sub_2447ED914((uint64_t)&v7, 2u, a1 + 24);
  if (!v8)
  {
    sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2447ED914(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = a1 + 8;
  if (!*(_DWORD *)(a1 + 8))
  {
    uint64_t v4 = *(void **)a1;
    unint64_t v5 = *(unsigned char **)a3;
    uint64_t v6 = *(void *)(a3 + 8);
    int v11 = 0;
    uint64_t v10 = 0;
    long long v9 = 0uLL;
    sub_244CB7594(v4, a2, 22, &v11, (uint64_t)&v9);
    if (!v9)
    {
      if (v6)
      {
        uint64_t v7 = 6 * v6;
        while (1)
        {
          long long v9 = 0uLL;
          uint64_t v10 = 0;
          sub_2447ED490(v5, v4, 256, (uint64_t)&v9);
          if (v9) {
            break;
          }
          v5 += 6;
          v7 -= 6;
          if (!v7) {
            goto LABEL_7;
          }
        }
      }
      else
      {
LABEL_7:
        long long v9 = 0uLL;
        uint64_t v10 = 0;
        sub_244CB7708((uint64_t)v4, v11, (uint64_t)&v9);
        if (!v9)
        {
          LODWORD(v9) = 0;
          *((void *)&v9 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/List.h";
          LODWORD(v10) = 86;
        }
      }
    }
    double result = *(double *)&v9;
    *(_OWORD *)uint64_t v3 = v9;
    *(void *)(v3 + 16) = v10;
  }
  return result;
}

double sub_2447EDA04@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  for (int i = v14; v14 != 1; int i = v14)
  {
    long long v10 = xmmword_2651952E8;
    uint64_t v11 = 145;
    if (i) {
      sub_24484AFEC();
    }
    if (v12 == 2)
    {
      sub_24484B03C(a1 + 24, a2, (uint64_t)&v8);
    }
    else
    {
      if (v12 != 1)
      {
        if (!(_BYTE)v12) {
          sub_244CB41F0(a2, (_OWORD *)a1, &v10);
        }
        goto LABEL_10;
      }
      sub_244CB3E8C(a2, (unsigned char *)(a1 + 16), (uint64_t)&v8);
    }
    long long v10 = v8;
    uint64_t v11 = v9;
LABEL_10:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
    if (*(_DWORD *)a3) {
      return result;
    }
    sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  }
  double result = *(double *)&v12;
  *(_OWORD *)a3 = v12;
  *(void *)(a3 + 16) = v13;
  return result;
}

double sub_2447EDB34@<D0>(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB69FC();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB69FC();
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_24483F80C(a1 + 16, (uint64_t)&v11);
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_24483F80C(a1 + 20, (uint64_t)&v11);
          uint64_t v9 = v12;
          long long v8 = v11;
          if (!v11)
          {
            sub_24483F80C(a1 + 24, (uint64_t)&v11);
            uint64_t v9 = v12;
            long long v8 = v11;
            if (!v11)
            {
              sub_244839174(a1 + 32, (uint64_t)&v11);
              uint64_t v9 = v12;
              long long v8 = v11;
              if (!v11)
              {
                sub_244839174(a1 + 48, (uint64_t)&v11);
                uint64_t v9 = v12;
                long long v8 = v11;
                if (!v11)
                {
                  sub_244839174(a1 + 64, (uint64_t)&v11);
                  uint64_t v9 = v12;
                  long long v8 = v11;
                  if (!v11)
                  {
                    sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
                    long long v8 = v11;
                    uint64_t v9 = v12;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2447EDD4C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v19[0] = 0;
  uint64_t v20 = a2;
  sub_2447ED6F8((uint64_t)v19, (uint64_t)&v16);
  int v6 = v18;
  if (v18 == 1)
  {
LABEL_17:
    double result = *(double *)&v16;
    *(_OWORD *)a3 = v16;
    *(void *)(a3 + 16) = v17;
  }
  else
  {
    while (1)
    {
      long long v14 = xmmword_265195300;
      uint64_t v15 = 196;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v16)
      {
        case 0:
          sub_244CB3CF0(a2, (void *)a1, (uint64_t)&v14);
          break;
        case 1:
          sub_244CB3CF0(a2, (void *)(a1 + 8), (uint64_t)&v12);
          goto LABEL_14;
        case 2:
          *(unsigned char *)(a1 + 16) = 1;
          *(_WORD *)(a1 + 18) = 0;
          uint64_t v7 = a2;
          long long v8 = (_WORD *)(a1 + 18);
          goto LABEL_9;
        case 3:
          *(unsigned char *)(a1 + 20) = 1;
          *(_WORD *)(a1 + 22) = 0;
          uint64_t v7 = a2;
          long long v8 = (_WORD *)(a1 + 22);
          goto LABEL_9;
        case 4:
          *(unsigned char *)(a1 + 24) = 1;
          *(_WORD *)(a1 + 26) = 0;
          uint64_t v7 = a2;
          long long v8 = (_WORD *)(a1 + 26);
LABEL_9:
          sub_244CB3F40(v7, v8, (uint64_t)&v12);
          goto LABEL_14;
        case 5:
          *(unsigned char *)(a1 + 32) = 1;
          *(void *)(a1 + 40) = 0;
          uint64_t v9 = a2;
          int v10 = (void *)(a1 + 40);
          goto LABEL_13;
        case 6:
          *(unsigned char *)(a1 + 48) = 1;
          *(void *)(a1 + 56) = 0;
          uint64_t v9 = a2;
          int v10 = (void *)(a1 + 56);
          goto LABEL_13;
        case 7:
          *(unsigned char *)(a1 + 64) = 1;
          *(void *)(a1 + 72) = 0;
          uint64_t v9 = a2;
          int v10 = (void *)(a1 + 72);
LABEL_13:
          sub_244CB3EFC(v9, v10, (uint64_t)&v12);
LABEL_14:
          long long v14 = v12;
          uint64_t v15 = v13;
          break;
        default:
          break;
      }
      double result = *(double *)&v14;
      *(_OWORD *)a3 = v14;
      *(void *)(a3 + 16) = v15;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v19, (uint64_t)&v16);
      int v6 = v18;
      if (v18 == 1) {
        goto LABEL_17;
      }
    }
  }
  return result;
}

double sub_2447EDF60@<D0>(_WORD *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  sub_2447EE0BC((uint64_t)&v7, 0, a1);
  if (!v8)
  {
    sub_244CB65C8();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB69FC();
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB69FC();
        long long v8 = v11;
        uint64_t v9 = v12;
      }
    }
  }
  sub_2447EE138((uint64_t)&v7, 4u, (uint64_t)(a1 + 12));
  if (!v8)
  {
    sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2447EE0BC(uint64_t a1, uint64_t a2, _WORD *a3)
{
  uint64_t v3 = a1 + 8;
  if (!*(_DWORD *)(a1 + 8))
  {
    if (*a3 == 15)
    {
      LODWORD(v5) = 1415;
      *((void *)&v5 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
      LODWORD(v6) = 75;
    }
    else
    {
      sub_244CB6904();
    }
    double result = *(double *)&v5;
    *(_OWORD *)uint64_t v3 = v5;
    *(void *)(v3 + 16) = v6;
  }
  return result;
}

double sub_2447EE138(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = a1 + 8;
  if (!*(_DWORD *)(a1 + 8))
  {
    uint64_t v4 = *(void **)a1;
    long long v5 = *(unsigned char **)a3;
    uint64_t v6 = *(void *)(a3 + 8);
    int v11 = 0;
    uint64_t v10 = 0;
    long long v9 = 0uLL;
    sub_244CB7594(v4, a2, 22, &v11, (uint64_t)&v9);
    if (!v9)
    {
      if (v6)
      {
        uint64_t v7 = 80 * v6;
        while (1)
        {
          long long v9 = 0uLL;
          uint64_t v10 = 0;
          sub_2447EDB34(v5, v4, 256, (uint64_t)&v9);
          if (v9) {
            break;
          }
          v5 += 80;
          v7 -= 80;
          if (!v7) {
            goto LABEL_7;
          }
        }
      }
      else
      {
LABEL_7:
        long long v9 = 0uLL;
        uint64_t v10 = 0;
        sub_244CB7708((uint64_t)v4, v11, (uint64_t)&v9);
        if (!v9)
        {
          LODWORD(v9) = 0;
          *((void *)&v9 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/List.h";
          LODWORD(v10) = 86;
        }
      }
    }
    double result = *(double *)&v9;
    *(_OWORD *)uint64_t v3 = v9;
    *(void *)(v3 + 16) = v10;
  }
  return result;
}

double sub_2447EE228@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  int v6 = v16;
  if (v16 == 1)
  {
LABEL_13:
    double result = *(double *)&v14;
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 16) = v15;
  }
  else
  {
    while (1)
    {
      long long v12 = xmmword_265195318;
      uint64_t v13 = 264;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v14)
      {
        case 0:
          sub_2447EE3B4(a2, (_WORD *)a1, &v12);
          break;
        case 1:
          sub_244CB3C0C(a2, (char *)(a1 + 2), (uint64_t)&v10);
          goto LABEL_10;
        case 2:
          uint64_t v7 = a2;
          long long v8 = (void *)(a1 + 8);
          goto LABEL_8;
        case 3:
          uint64_t v7 = a2;
          long long v8 = (void *)(a1 + 16);
LABEL_8:
          sub_244CB3CF0(v7, v8, (uint64_t)&v10);
          goto LABEL_10;
        case 4:
          sub_24484B03C(a1 + 24, a2, (uint64_t)&v10);
LABEL_10:
          long long v12 = v10;
          uint64_t v13 = v11;
          break;
        default:
          break;
      }
      double result = *(double *)&v12;
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
      int v6 = v16;
      if (v16 == 1) {
        goto LABEL_13;
      }
    }
  }
  return result;
}

uint64_t sub_2447EE3B4@<X0>(uint64_t a1@<X0>, _WORD *a2@<X1>, void *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  uint64_t result = sub_24484B11C(a1, a2, a3);
  if (!*(_DWORD *)a3)
  {
    unsigned int v6 = (unsigned __int16)*a2;
    if (v6 >= 0xF) {
      LOWORD(v6) = 15;
    }
    *a2 = v6;
    *(_DWORD *)a3 = 0;
    a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
    *((_DWORD *)a3 + 4) = 61;
  }
  return result;
}

double sub_2447EE418@<D0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  sub_244CB7594(a1, a2, 21, &v8, (uint64_t)&v9);
  long long v6 = v9;
  uint64_t v7 = v10;
  if (!v9)
  {
    sub_244CB694C();
    uint64_t v7 = v10;
    long long v6 = v9;
    if (!v9)
    {
      sub_244CB6904();
      uint64_t v7 = v10;
      long long v6 = v9;
      if (!v9)
      {
        sub_244CB7708((uint64_t)a1, v8, (uint64_t)&v9);
        long long v6 = v9;
        uint64_t v7 = v10;
      }
    }
  }
  double result = *(double *)&v6;
  *(_OWORD *)a3 = v6;
  *(void *)(a3 + 16) = v7;
  return result;
}

double sub_2447EE528@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265195330;
      uint64_t v11 = 317;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_244CB3F40(a2, (_WORD *)(a1 + 4), (uint64_t)&v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB3FB0(a2, (_DWORD *)a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_2447EE638@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB6904();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB6D80(a2, *(char **)(a1 + 8), *(void *)(a1 + 16), (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
        long long v8 = v11;
        uint64_t v9 = v12;
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2447EE748@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265195348;
      uint64_t v11 = 358;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_244CB41F0(a2, (_OWORD *)(a1 + 8), &v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB3F40(a2, (_WORD *)a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_2447EE858@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB68B8();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_2447F6524(a2, (unsigned char *)(a1 + 8), (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_2447F6524(a2, (unsigned char *)(a1 + 32), (uint64_t)&v11);
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
          long long v8 = v11;
          uint64_t v9 = v12;
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2447EE994@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  for (int i = v16; v16 != 1; int i = v16)
  {
    long long v12 = xmmword_265195360;
    uint64_t v13 = 400;
    if (i) {
      sub_24484AFEC();
    }
    if (v14 == 2)
    {
      *(unsigned char *)(a1 + 32) = 1;
      *(void *)(a1 + 40) = 0;
      *(void *)(a1 + 48) = 0;
      uint64_t v7 = a2;
      long long v8 = (_OWORD *)(a1 + 40);
    }
    else
    {
      if (v14 != 1)
      {
        if (!(_BYTE)v14) {
          sub_244CB3E8C(a2, (unsigned char *)a1, (uint64_t)&v12);
        }
        goto LABEL_10;
      }
      *(unsigned char *)(a1 + 8) = 1;
      *(void *)(a1 + 16) = 0;
      *(void *)(a1 + 24) = 0;
      uint64_t v7 = a2;
      long long v8 = (_OWORD *)(a1 + 16);
    }
    sub_244CB41F0(v7, v8, &v10);
    long long v12 = v10;
    uint64_t v13 = v11;
LABEL_10:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
    if (*(_DWORD *)a3) {
      return result;
    }
    sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  }
  double result = *(double *)&v14;
  *(_OWORD *)a3 = v14;
  *(void *)(a3 + 16) = v15;
  return result;
}

double sub_2447EEADC@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  sub_2447EEC28((uint64_t)&v7, 1u, (uint64_t *)a1);
  if (!v8)
  {
    sub_2447F6524(v7, (unsigned char *)(a1 + 16), (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_2447F6524(v7, (unsigned char *)(a1 + 40), (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_24483F80C((unsigned char *)(a1 + 64), (uint64_t)&v11);
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
          long long v8 = v11;
          uint64_t v9 = v12;
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2447EEC28(uint64_t a1, unsigned int a2, uint64_t *a3)
{
  uint64_t v3 = a1 + 8;
  if (!*(_DWORD *)(a1 + 8))
  {
    uint64_t v4 = *(char **)a1;
    uint64_t v5 = *a3;
    uint64_t v6 = a3[1];
    int v11 = 0;
    uint64_t v10 = 0;
    long long v9 = 0uLL;
    sub_244CB7594(v4, a2, 22, &v11, (uint64_t)&v9);
    if (!v9)
    {
      if (v6)
      {
        uint64_t v7 = v5 + 16 * v6;
        while (1)
        {
          long long v9 = 0uLL;
          uint64_t v10 = 0;
          sub_244CB6D80(v4, *(char **)v5, *(void *)(v5 + 8), (uint64_t)&v9);
          if (v9) {
            break;
          }
          v5 += 16;
          if (v5 == v7) {
            goto LABEL_7;
          }
        }
      }
      else
      {
LABEL_7:
        long long v9 = 0uLL;
        uint64_t v10 = 0;
        sub_244CB7708((uint64_t)v4, v11, (uint64_t)&v9);
        if (!v9)
        {
          LODWORD(v9) = 0;
          *((void *)&v9 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/List.h";
          LODWORD(v10) = 86;
        }
      }
    }
    double result = *(double *)&v9;
    *(_OWORD *)uint64_t v3 = v9;
    *(void *)(v3 + 16) = v10;
  }
  return result;
}

double sub_2447EED14@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  int v6 = v16;
  if (v16 == 1)
  {
LABEL_12:
    double result = *(double *)&v14;
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 16) = v15;
  }
  else
  {
    while (1)
    {
      long long v12 = xmmword_265195378;
      uint64_t v13 = 447;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v14)
      {
        case 1:
          sub_24484B03C(a1, a2, (uint64_t)&v12);
          break;
        case 2:
          *(unsigned char *)(a1 + 80) = 1;
          *(void *)(a1 + 88) = 0;
          *(void *)(a1 + 96) = 0;
          uint64_t v7 = a2;
          long long v8 = (_OWORD *)(a1 + 88);
          goto LABEL_7;
        case 3:
          *(unsigned char *)(a1 + 104) = 1;
          *(void *)(a1 + 112) = 0;
          *(void *)(a1 + 120) = 0;
          uint64_t v7 = a2;
          long long v8 = (_OWORD *)(a1 + 112);
LABEL_7:
          sub_244CB41F0(v7, v8, &v10);
          goto LABEL_9;
        case 4:
          *(unsigned char *)(a1 + 128) = 1;
          *(_WORD *)(a1 + 130) = 0;
          sub_244CB3F40(a2, (_WORD *)(a1 + 130), (uint64_t)&v10);
LABEL_9:
          long long v12 = v10;
          uint64_t v13 = v11;
          break;
        default:
          break;
      }
      double result = *(double *)&v12;
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
      int v6 = v16;
      if (v16 == 1) {
        goto LABEL_12;
      }
    }
  }
  return result;
}

double sub_2447EEEA4@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB6D80(a2, *(char **)a1, *(void *)(a1 + 8), (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB6D80(a2, *(char **)(a1 + 16), *(void *)(a1 + 24), (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
        long long v8 = v11;
        uint64_t v9 = v12;
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2447EEFB4@<D0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265195390;
      uint64_t v11 = 496;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_244CB41F0(a2, a1 + 1, &v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB41F0(a2, a1, &v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_2447EF0C4@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB68B8();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_2447F6524(a2, (unsigned char *)(a1 + 8), (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
        long long v8 = v11;
        uint64_t v9 = v12;
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2447EF1D4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_2651953A8;
      uint64_t v11 = 537;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        *(unsigned char *)(a1 + 8) = 1;
        *(void *)(a1 + 16) = 0;
        *(void *)(a1 + 24) = 0;
        sub_244CB41F0(a2, (_OWORD *)(a1 + 16), &v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB3E8C(a2, (unsigned char *)a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_2447EF2F0@<D0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  sub_244CB7594(a1, a2, 21, &v8, (uint64_t)&v9);
  long long v6 = v9;
  uint64_t v7 = v10;
  if (!v9)
  {
    sub_244CB6904();
    uint64_t v7 = v10;
    long long v6 = v9;
    if (!v9)
    {
      sub_244CB6904();
      uint64_t v7 = v10;
      long long v6 = v9;
      if (!v9)
      {
        sub_244CB6904();
        uint64_t v7 = v10;
        long long v6 = v9;
        if (!v9)
        {
          sub_244CB6904();
          uint64_t v7 = v10;
          long long v6 = v9;
          if (!v9)
          {
            sub_244CB7708((uint64_t)a1, v8, (uint64_t)&v9);
            long long v6 = v9;
            uint64_t v7 = v10;
          }
        }
      }
    }
  }
  double result = *(double *)&v6;
  *(_OWORD *)a3 = v6;
  *(void *)(a3 + 16) = v7;
  return result;
}

double sub_2447EF458@<D0>(_WORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  int v6 = v16;
  if (v16 == 1)
  {
LABEL_11:
    double result = *(double *)&v14;
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 16) = v15;
  }
  else
  {
    while (1)
    {
      long long v12 = xmmword_2651953C0;
      uint64_t v13 = 580;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v14)
      {
        case 0:
          sub_244CB3F40(a2, a1, (uint64_t)&v12);
          break;
        case 1:
          uint64_t v7 = a2;
          int v8 = a1 + 1;
          goto LABEL_8;
        case 2:
          uint64_t v7 = a2;
          int v8 = a1 + 2;
          goto LABEL_8;
        case 3:
          uint64_t v7 = a2;
          int v8 = a1 + 3;
LABEL_8:
          sub_244CB3F40(v7, v8, (uint64_t)&v10);
          long long v12 = v10;
          uint64_t v13 = v11;
          break;
        default:
          break;
      }
      double result = *(double *)&v12;
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
      int v6 = v16;
      if (v16 == 1) {
        goto LABEL_11;
      }
    }
  }
  return result;
}

double sub_2447EF5C4@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB6904();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB68CC();
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB68B8();
        long long v8 = v11;
        uint64_t v9 = v12;
      }
    }
  }
  sub_2447EF794((uint64_t)&v7, 4, (unsigned char *)(a1 + 17));
  if (!v8)
  {
    sub_2447F5C00((unsigned __int16 *)(a1 + 18), (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_2447F5C00((unsigned __int16 *)(a1 + 22), (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB68B8();
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
          long long v8 = v11;
          uint64_t v9 = v12;
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2447EF794(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  uint64_t v3 = a1 + 8;
  if (!*(_DWORD *)(a1 + 8))
  {
    if (*a3 == 4)
    {
      LODWORD(v5) = 1415;
      *((void *)&v5 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
      LODWORD(v6) = 75;
    }
    else
    {
      sub_244CB68B8();
    }
    double result = *(double *)&v5;
    *(_OWORD *)uint64_t v3 = v5;
    *(void *)(v3 + 16) = v6;
  }
  return result;
}

double sub_2447EF810@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  int v6 = v16;
  if (v16 == 1)
  {
LABEL_15:
    double result = *(double *)&v14;
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 16) = v15;
  }
  else
  {
    while (1)
    {
      long long v12 = xmmword_2651953D8;
      uint64_t v13 = 634;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v14)
      {
        case 1:
          sub_244CB3F40(a2, (_WORD *)a1, (uint64_t)&v12);
          break;
        case 2:
          sub_244CB3EFC(a2, (void *)(a1 + 8), (uint64_t)&v10);
          goto LABEL_12;
        case 3:
          sub_244CB3E8C(a2, (unsigned char *)(a1 + 16), (uint64_t)&v10);
          goto LABEL_12;
        case 4:
          sub_2446D1A48(a2, (unsigned char *)(a1 + 17), &v10);
          goto LABEL_12;
        case 5:
          uint64_t v7 = a2;
          long long v8 = (__int16 *)(a1 + 18);
          goto LABEL_10;
        case 6:
          uint64_t v7 = a2;
          long long v8 = (__int16 *)(a1 + 22);
LABEL_10:
          sub_2447EF9E0(v7, v8, (uint64_t)&v10);
          goto LABEL_12;
        case 7:
          sub_24484B184(a2, (unsigned char *)(a1 + 26), &v10);
LABEL_12:
          long long v12 = v10;
          uint64_t v13 = v11;
          break;
        default:
          break;
      }
      double result = *(double *)&v12;
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
      int v6 = v16;
      if (v16 == 1) {
        goto LABEL_15;
      }
    }
  }
  return result;
}

uint64_t sub_2447EF9E0@<X0>(uint64_t a1@<X0>, __int16 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = sub_244CB3B68(a1);
  if (result == 20)
  {
    if (*((unsigned char *)a2 + 2)) {
      *((unsigned char *)a2 + 2) = 0;
    }
    *(_DWORD *)a3 = 0;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
    int v7 = 168;
LABEL_5:
    *(_DWORD *)(a3 + 16) = v7;
    return result;
  }
  *(void *)a3 = 0;
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  *a2 = 0;
  *((unsigned char *)a2 + 2) = 1;
  uint64_t result = sub_244CB3F40(a1, a2, a3);
  if (!*(_DWORD *)a3)
  {
    if (!*((unsigned char *)a2 + 2)) {
      sub_24479484C();
    }
    if (*a2 == -1)
    {
      *(_DWORD *)a3 = 1415;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
      int v7 = 175;
    }
    else
    {
      *(_DWORD *)a3 = 0;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
      int v7 = 177;
    }
    goto LABEL_5;
  }
  return result;
}

double sub_2447EFABC@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB6D80(a2, *(char **)a1, *(void *)(a1 + 8), (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_24484B1EC((uint64_t)a2, 1, a1 + 16);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_24484B200((unsigned char *)(a1 + 24), (uint64_t)&v11);
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
          long long v8 = v11;
          uint64_t v9 = v12;
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2447EFBF8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  for (int i = v14; v14 != 1; int i = v14)
  {
    long long v10 = xmmword_2651953F0;
    uint64_t v11 = 702;
    if (i) {
      sub_24484AFEC();
    }
    if (v12 == 2)
    {
      *(unsigned char *)(a1 + 24) = 1;
      *(_WORD *)(a1 + 25) = 0;
      sub_2447F21B8(a2, (unsigned __int8 *)(a1 + 25), (uint64_t)&v8);
    }
    else
    {
      if (v12 != 1)
      {
        if (!(_BYTE)v12) {
          sub_244CB41F0(a2, (_OWORD *)a1, &v10);
        }
        goto LABEL_10;
      }
      sub_2447EFD3C(a2, a1 + 16, &v8);
    }
    long long v10 = v8;
    uint64_t v11 = v9;
LABEL_10:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
    if (*(_DWORD *)a3) {
      return result;
    }
    sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  }
  double result = *(double *)&v12;
  *(_OWORD *)a3 = v12;
  *(void *)(a3 + 16) = v13;
  return result;
}

uint64_t sub_2447EFD3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t result = sub_244CB3B68(a1);
  if (result == 20)
  {
    if (*(unsigned char *)(a2 + 4)) {
      *(unsigned char *)(a2 + 4) = 0;
    }
    int v7 = 168;
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
    *(_DWORD *)a2 = 0;
    *(unsigned char *)(a2 + 4) = 1;
    uint64_t result = sub_24484B2E8(a1, (_DWORD *)a2, a3);
    if (*(_DWORD *)a3) {
      return result;
    }
    int v7 = 177;
  }
  *(_DWORD *)a3 = 0;
  a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
  *((_DWORD *)a3 + 4) = v7;
  return result;
}

double sub_2447EFDD0@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB6D80(a2, *(char **)a1, *(void *)(a1 + 8), (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_24484B350((unsigned __int16 *)(a1 + 16), (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_24484B390((unsigned __int8 *)(a1 + 20), (uint64_t)&v11);
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
          long long v8 = v11;
          uint64_t v9 = v12;
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2447EFF0C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  for (int i = v14; v14 != 1; int i = v14)
  {
    long long v10 = xmmword_265195408;
    uint64_t v11 = 748;
    if (i) {
      sub_24484AFEC();
    }
    if (v12 == 2)
    {
      sub_2447F0118(a2, (unsigned __int8 *)(a1 + 20), (uint64_t)&v8);
    }
    else
    {
      if (v12 != 1)
      {
        if (!(_BYTE)v12) {
          sub_244CB41F0(a2, (_OWORD *)a1, &v10);
        }
        goto LABEL_10;
      }
      sub_2447F003C(a2, (__int16 *)(a1 + 16), (uint64_t)&v8);
    }
    long long v10 = v8;
    uint64_t v11 = v9;
LABEL_10:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
    if (*(_DWORD *)a3) {
      return result;
    }
    sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  }
  double result = *(double *)&v12;
  *(_OWORD *)a3 = v12;
  *(void *)(a3 + 16) = v13;
  return result;
}

uint64_t sub_2447F003C@<X0>(uint64_t a1@<X0>, __int16 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = sub_244CB3B68(a1);
  if (result == 20)
  {
    if (*((unsigned char *)a2 + 2)) {
      *((unsigned char *)a2 + 2) = 0;
    }
    *(_DWORD *)a3 = 0;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
    int v7 = 168;
LABEL_5:
    *(_DWORD *)(a3 + 16) = v7;
    return result;
  }
  *(void *)a3 = 0;
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  *a2 = 0;
  *((unsigned char *)a2 + 2) = 1;
  uint64_t result = sub_244CB3D8C(a1, a2, a3);
  if (!*(_DWORD *)a3)
  {
    if (!*((unsigned char *)a2 + 2)) {
      sub_24479484C();
    }
    if (*a2 == -32768)
    {
      *(_DWORD *)a3 = 1415;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
      int v7 = 175;
    }
    else
    {
      *(_DWORD *)a3 = 0;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
      int v7 = 177;
    }
    goto LABEL_5;
  }
  return result;
}

uint64_t sub_2447F0118@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = sub_244CB3B68(a1);
  if (result == 20)
  {
    if (a2[1]) {
      a2[1] = 0;
    }
    *(_DWORD *)a3 = 0;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
    int v7 = 168;
LABEL_5:
    *(_DWORD *)(a3 + 16) = v7;
    return result;
  }
  *(void *)a3 = 0;
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  *(_WORD *)a2 = 256;
  uint64_t result = sub_24484B3F0(a1, a2, (void *)a3);
  if (!*(_DWORD *)a3)
  {
    if (!a2[1]) {
      sub_24479484C();
    }
    if (*a2 == 255)
    {
      *(_DWORD *)a3 = 1415;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
      int v7 = 175;
    }
    else
    {
      *(_DWORD *)a3 = 0;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
      int v7 = 177;
    }
    goto LABEL_5;
  }
  return result;
}

double sub_2447F01F0@<D0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  sub_244CB7594(a1, a2, 21, &v8, (uint64_t)&v9);
  long long v6 = v9;
  uint64_t v7 = v10;
  if (!v9)
  {
    sub_244CB694C();
    uint64_t v7 = v10;
    long long v6 = v9;
    if (!v9)
    {
      sub_244CB68B8();
      uint64_t v7 = v10;
      long long v6 = v9;
      if (!v9)
      {
        sub_244CB7708((uint64_t)a1, v8, (uint64_t)&v9);
        long long v6 = v9;
        uint64_t v7 = v10;
      }
    }
  }
  double result = *(double *)&v6;
  *(_OWORD *)a3 = v6;
  *(void *)(a3 + 16) = v7;
  return result;
}

double sub_2447F0300@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265195420;
      uint64_t v11 = 793;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_244CB3E8C(a2, (unsigned char *)(a1 + 4), (uint64_t)&v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB3FB0(a2, (_DWORD *)a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_2447F0410@<D0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  sub_244CB7594(a1, a2, 21, &v8, (uint64_t)&v9);
  long long v6 = v9;
  uint64_t v7 = v10;
  if (!v9)
  {
    sub_244CB6904();
    uint64_t v7 = v10;
    long long v6 = v9;
    if (!v9)
    {
      sub_244CB7708((uint64_t)a1, v8, (uint64_t)&v9);
      long long v6 = v9;
      uint64_t v7 = v10;
    }
  }
  double result = *(double *)&v6;
  *(_OWORD *)a3 = v6;
  *(void *)(a3 + 16) = v7;
  return result;
}

double sub_2447F04F4@<D0>(_WORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265195438;
      uint64_t v9 = 839;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3F40(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_2447F05CC@<D0>(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  sub_2447F06A4((uint64_t)&v7, 0, a1);
  sub_2447F0720((uint64_t)&v7, 1, a1 + 1);
  if (!v8)
  {
    sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2447F06A4(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  uint64_t v3 = a1 + 8;
  if (!*(_DWORD *)(a1 + 8))
  {
    if (*a3 == 3)
    {
      LODWORD(v5) = 1415;
      *((void *)&v5 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
      LODWORD(v6) = 75;
    }
    else
    {
      sub_244CB68B8();
    }
    double result = *(double *)&v5;
    *(_OWORD *)uint64_t v3 = v5;
    *(void *)(v3 + 16) = v6;
  }
  return result;
}

double sub_2447F0720(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  uint64_t v3 = a1 + 8;
  if (!*(_DWORD *)(a1 + 8))
  {
    if (*a3 == 1)
    {
      LODWORD(v5) = 1415;
      *((void *)&v5 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
      LODWORD(v6) = 75;
    }
    else
    {
      sub_244CB68B8();
    }
    double result = *(double *)&v5;
    *(_OWORD *)uint64_t v3 = v5;
    *(void *)(v3 + 16) = v6;
  }
  return result;
}

double sub_2447F079C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265195450;
      uint64_t v11 = 874;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_2447F092C(a2, (BOOL *)(a1 + 1), &v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_2447F08AC(a2, (char *)a1, &v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

uint64_t sub_2447F08AC@<X0>(uint64_t a1@<X0>, char *a2@<X1>, void *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  uint64_t result = sub_2446D1AAC(a1, a2, a3);
  if (!*(_DWORD *)a3)
  {
    if ((*a2 + 2) > 0xDu) {
      char v6 = 3;
    }
    else {
      char v6 = byte_244E7CA10[(char)(*a2 + 2)];
    }
    *a2 = v6;
    *(_DWORD *)a3 = 0;
    a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
    *((_DWORD *)a3 + 4) = 61;
  }
  return result;
}

uint64_t sub_2447F092C@<X0>(uint64_t a1@<X0>, BOOL *a2@<X1>, void *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  uint64_t result = sub_2446D1AAC(a1, a2, a3);
  if (!*(_DWORD *)a3)
  {
    *a2 = *a2;
    *(_DWORD *)a3 = 0;
    a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
    *((_DWORD *)a3 + 4) = 61;
  }
  return result;
}

void sub_2447F098C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4 = (_WORD *)a1;
  int v5 = *(_DWORD *)(a3 + 8);
  switch(v5)
  {
    case 65528:
      uint64_t v6 = a1 + 8;
      goto LABEL_3;
    case 65529:
      uint64_t v6 = a1 + 88;
      goto LABEL_3;
    case 65530:
      uint64_t v6 = a1 + 168;
      goto LABEL_3;
    case 65531:
      uint64_t v6 = a1 + 248;
LABEL_3:
      sub_24484B03C(v6, a2, a4);
      return;
    case 65532:
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 328), a4);
      return;
    case 65533:
      uint64_t v4 = (_WORD *)(a1 + 332);
      goto LABEL_12;
    default:
      if (v5 == 1)
      {
        sub_2447F0A54(a2, (unsigned char *)(a1 + 2), (void *)a4);
      }
      else if (v5)
      {
        *(_DWORD *)a4 = 0;
        *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-comm"
                              "on/app-common/zap-generated/cluster-objects.cpp";
        *(_DWORD *)(a4 + 16) = 917;
      }
      else
      {
LABEL_12:
        sub_244CB3F40(a2, v4, a4);
      }
      return;
  }
}

uint64_t sub_2447F0A54@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  uint64_t result = sub_2446D1AAC(a1, a2, a3);
  if (!*(_DWORD *)a3)
  {
    unsigned int v6 = *a2;
    if (v6 >= 6) {
      LOBYTE(v6) = 6;
    }
    *a2 = v6;
    *(_DWORD *)a3 = 0;
    a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
    *((_DWORD *)a3 + 4) = 61;
  }
  return result;
}

double sub_2447F0AB8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265195468;
      uint64_t v11 = 948;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_244CB41F0(a2, (_OWORD *)(a1 + 8), &v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB3F40(a2, (_WORD *)a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_2447F0BC8@<D0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  sub_244CB7594(a1, a2, 21, &v8, (uint64_t)&v9);
  long long v6 = v9;
  uint64_t v7 = v10;
  if (!v9)
  {
    sub_244CB68B8();
    uint64_t v7 = v10;
    long long v6 = v9;
    if (!v9)
    {
      sub_244CB6904();
      uint64_t v7 = v10;
      long long v6 = v9;
      if (!v9)
      {
        sub_244CB7708((uint64_t)a1, v8, (uint64_t)&v9);
        long long v6 = v9;
        uint64_t v7 = v10;
      }
    }
  }
  double result = *(double *)&v6;
  *(_OWORD *)a3 = v6;
  *(void *)(a3 + 16) = v7;
  return result;
}

double sub_2447F0CD8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265195480;
      uint64_t v11 = 987;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_244CB3F40(a2, (_WORD *)(a1 + 2), (uint64_t)&v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB3E8C(a2, (unsigned char *)a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_2447F0DE8@<D0>(_WORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265195498;
      uint64_t v9 = 1025;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3F40(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_2447F0EC0@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB68B8();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB6904();
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB6D80(a2, *(char **)(a1 + 8), *(void *)(a1 + 16), (uint64_t)&v11);
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
          long long v8 = v11;
          uint64_t v9 = v12;
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2447F0FFC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  for (int i = v14; v14 != 1; int i = v14)
  {
    long long v10 = xmmword_2651954B0;
    uint64_t v11 = 1061;
    if (i) {
      sub_24484AFEC();
    }
    if (v12 == 2)
    {
      sub_244CB41F0(a2, (_OWORD *)(a1 + 8), &v8);
    }
    else
    {
      if (v12 != 1)
      {
        if (!(_BYTE)v12) {
          sub_244CB3E8C(a2, (unsigned char *)a1, (uint64_t)&v10);
        }
        goto LABEL_10;
      }
      sub_244CB3F40(a2, (_WORD *)(a1 + 2), (uint64_t)&v8);
    }
    long long v10 = v8;
    uint64_t v11 = v9;
LABEL_10:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
    if (*(_DWORD *)a3) {
      return result;
    }
    sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  }
  double result = *(double *)&v12;
  *(_OWORD *)a3 = v12;
  *(void *)(a3 + 16) = v13;
  return result;
}

double sub_2447F112C@<D0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  sub_2447F11F4((uint64_t)&v7, 0, a1);
  if (!v8)
  {
    sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2447F11F4(uint64_t a1, unsigned int a2, uint64_t *a3)
{
  uint64_t v3 = a1 + 8;
  if (!*(_DWORD *)(a1 + 8))
  {
    uint64_t v4 = *(void **)a1;
    uint64_t v5 = *a3;
    uint64_t v6 = a3[1];
    int v11 = 0;
    uint64_t v10 = 0;
    long long v9 = 0uLL;
    sub_244CB7594(v4, a2, 22, &v11, (uint64_t)&v9);
    if (!v9)
    {
      if (v6)
      {
        uint64_t v7 = 2 * v6;
        while (1)
        {
          long long v9 = 0uLL;
          uint64_t v10 = 0;
          sub_244CB6904();
          if (v9) {
            break;
          }
          v5 += 2;
          v7 -= 2;
          if (!v7) {
            goto LABEL_7;
          }
        }
      }
      else
      {
LABEL_7:
        long long v9 = 0uLL;
        uint64_t v10 = 0;
        sub_244CB7708((uint64_t)v4, v11, (uint64_t)&v9);
        if (!v9)
        {
          LODWORD(v9) = 0;
          *((void *)&v9 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/List.h";
          LODWORD(v10) = 86;
        }
      }
    }
    double result = *(double *)&v9;
    *(_OWORD *)uint64_t v3 = v9;
    *(void *)(v3 + 16) = v10;
  }
  return result;
}

double sub_2447F12E0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_2651954C8;
      uint64_t v9 = 1103;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_24484B03C(a1, a2, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_2447F13B8@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_2447FB010((unsigned __int8 *)a1, (uint64_t)&v11);
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  sub_2447F11F4((uint64_t)&v7, 1u, (uint64_t *)(a1 + 8));
  if (!v8)
  {
    sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2447F14AC@<D0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_2651954E0;
      uint64_t v11 = 1138;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_24484B03C((uint64_t)(a1 + 8), a2, (uint64_t)&v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_2447F15BC(a2, a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

uint64_t sub_2447F15BC@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = sub_244CB3B68(a1);
  if (result == 20)
  {
    if (a2[1]) {
      a2[1] = 0;
    }
    *(_DWORD *)a3 = 0;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
    int v7 = 168;
LABEL_5:
    *(_DWORD *)(a3 + 16) = v7;
    return result;
  }
  *(void *)a3 = 0;
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  *(_WORD *)a2 = 256;
  uint64_t result = sub_244CB3E8C(a1, a2, a3);
  if (!*(_DWORD *)a3)
  {
    if (!a2[1]) {
      sub_24479484C();
    }
    if (*a2 == 255)
    {
      *(_DWORD *)a3 = 1415;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
      int v7 = 175;
    }
    else
    {
      *(_DWORD *)a3 = 0;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
      int v7 = 177;
    }
    goto LABEL_5;
  }
  return result;
}

double sub_2447F1694@<D0>(_WORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_2651954F8;
      uint64_t v9 = 1176;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3F40(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_2447F176C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265195510;
      uint64_t v11 = 1211;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_244CB3F40(a2, (_WORD *)(a1 + 2), (uint64_t)&v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB3E8C(a2, (unsigned char *)a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_2447F187C@<D0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  sub_244CB7594(a1, a2, 21, &v8, (uint64_t)&v9);
  long long v6 = v9;
  uint64_t v7 = v10;
  if (!v9)
  {
    sub_244CB7708((uint64_t)a1, v8, (uint64_t)&v9);
    long long v6 = v9;
    uint64_t v7 = v10;
  }
  double result = *(double *)&v6;
  *(_OWORD *)a3 = v6;
  *(void *)(a3 + 16) = v7;
  return result;
}

double sub_2447F1928@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  v7[0] = 0;
  uint64_t v8 = a1;
  do
    sub_2447ED6F8((uint64_t)v7, (uint64_t)&v4);
  while (v6 != 1);
  double result = *(double *)&v4;
  *(_OWORD *)a2 = v4;
  *(void *)(a2 + 16) = v5;
  return result;
}

double sub_2447F1980@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265195528;
      uint64_t v11 = 1270;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_244CB41F0(a2, (_OWORD *)(a1 + 8), &v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB3F40(a2, (_WORD *)a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

void sub_2447F1A90(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4 = *(_DWORD *)(a3 + 8);
  switch(v4)
  {
    case 65528:
      uint64_t v5 = a1 + 8;
      goto LABEL_3;
    case 65529:
      uint64_t v5 = a1 + 88;
      goto LABEL_3;
    case 65530:
      uint64_t v5 = a1 + 168;
      goto LABEL_3;
    case 65531:
      uint64_t v5 = a1 + 248;
LABEL_3:
      sub_24484B03C(v5, a2, a4);
      break;
    case 65532:
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 328), a4);
      break;
    case 65533:
      sub_244CB3F40(a2, (_WORD *)(a1 + 332), a4);
      break;
    default:
      if (v4)
      {
        *(_DWORD *)a4 = 0;
        *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-comm"
                              "on/app-common/zap-generated/cluster-objects.cpp";
        *(_DWORD *)(a4 + 16) = 1311;
      }
      else
      {
        sub_24484B184(a2, (unsigned char *)a1, (void *)a4);
      }
      break;
  }
}

double sub_2447F1B4C@<D0>(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  sub_2447F1C40((uint64_t)&v7, 0, a1);
  if (!v8)
  {
    sub_244CB68B8();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
      long long v8 = v11;
      uint64_t v9 = v12;
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2447F1C40(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  uint64_t v3 = a1 + 8;
  if (!*(_DWORD *)(a1 + 8))
  {
    if (*a3 == 2)
    {
      LODWORD(v5) = 1415;
      *((void *)&v5 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
      LODWORD(v6) = 75;
    }
    else
    {
      sub_244CB68B8();
    }
    double result = *(double *)&v5;
    *(_OWORD *)uint64_t v3 = v5;
    *(void *)(v3 + 16) = v6;
  }
  return result;
}

double sub_2447F1CBC@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265195540;
      uint64_t v11 = 1402;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_244CB3E8C(a2, a1 + 1, (uint64_t)&v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_2447F1DCC(a2, a1, &v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

uint64_t sub_2447F1DCC@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  uint64_t result = sub_2446D1AAC(a1, a2, a3);
  if (!*(_DWORD *)a3)
  {
    unsigned int v6 = *a2;
    if (v6 >= 2) {
      LOBYTE(v6) = 2;
    }
    *a2 = v6;
    *(_DWORD *)a3 = 0;
    a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
    *((_DWORD *)a3 + 4) = 61;
  }
  return result;
}

double sub_2447F1E30@<D0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  sub_244CB7594(a1, a2, 21, &v8, (uint64_t)&v9);
  long long v6 = v9;
  uint64_t v7 = v10;
  if (!v9)
  {
    sub_244CB68B8();
    uint64_t v7 = v10;
    long long v6 = v9;
    if (!v9)
    {
      sub_244CB6904();
      uint64_t v7 = v10;
      long long v6 = v9;
      if (!v9)
      {
        sub_244CB6904();
        uint64_t v7 = v10;
        long long v6 = v9;
        if (!v9)
        {
          sub_244CB7708((uint64_t)a1, v8, (uint64_t)&v9);
          long long v6 = v9;
          uint64_t v7 = v10;
        }
      }
    }
  }
  double result = *(double *)&v6;
  *(_OWORD *)a3 = v6;
  *(void *)(a3 + 16) = v7;
  return result;
}

double sub_2447F1F6C@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  for (int i = v16; v16 != 1; int i = v16)
  {
    long long v12 = xmmword_265195558;
    uint64_t v13 = 1462;
    if (i) {
      sub_24484AFEC();
    }
    if (v14 == 2)
    {
      uint64_t v7 = a2;
      int v8 = a1 + 4;
    }
    else
    {
      if (v14 != 1)
      {
        if (!(_BYTE)v14) {
          sub_24484B184(a2, a1, &v12);
        }
        goto LABEL_10;
      }
      uint64_t v7 = a2;
      int v8 = a1 + 2;
    }
    sub_244CB3F40(v7, v8, (uint64_t)&v10);
    long long v12 = v10;
    uint64_t v13 = v11;
LABEL_10:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
    if (*(_DWORD *)a3) {
      return result;
    }
    sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  }
  double result = *(double *)&v14;
  *(_OWORD *)a3 = v14;
  *(void *)(a3 + 16) = v15;
  return result;
}

void sub_2447F2098(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4 = (char *)a1;
  int v5 = *(_DWORD *)(a3 + 8);
  switch(v5)
  {
    case 65528:
      uint64_t v6 = a1 + 8;
      goto LABEL_3;
    case 65529:
      uint64_t v6 = a1 + 88;
      goto LABEL_3;
    case 65530:
      uint64_t v6 = a1 + 168;
      goto LABEL_3;
    case 65531:
      uint64_t v6 = a1 + 248;
LABEL_3:
      sub_24484B03C(v6, a2, a4);
      break;
    case 65532:
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 328), a4);
      break;
    case 65533:
      uint64_t v7 = (_WORD *)(a1 + 332);
LABEL_15:
      sub_244CB3F40(a2, v7, a4);
      break;
    default:
      switch(v5)
      {
        case 16384:
          int v4 = (char *)(a1 + 1);
          goto LABEL_7;
        case 16385:
          uint64_t v7 = (_WORD *)(a1 + 2);
          goto LABEL_15;
        case 16386:
          uint64_t v7 = (_WORD *)(a1 + 4);
          goto LABEL_15;
        case 16387:
          sub_2447F21B8(a2, (unsigned __int8 *)(a1 + 6), a4);
          return;
        default:
          if (v5)
          {
            *(_DWORD *)a4 = 0;
            *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-"
                                  "common/app-common/zap-generated/cluster-objects.cpp";
            *(_DWORD *)(a4 + 16) = 1515;
          }
          else
          {
LABEL_7:
            sub_244CB3C0C(a2, v4, a4);
          }
          break;
      }
      break;
  }
}

uint64_t sub_2447F21B8@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = sub_244CB3B68(a1);
  if (result == 20)
  {
    if (a2[1]) {
      a2[1] = 0;
    }
    *(_DWORD *)a3 = 0;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
    int v7 = 168;
LABEL_5:
    *(_DWORD *)(a3 + 16) = v7;
    return result;
  }
  *(void *)a3 = 0;
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  *(_WORD *)a2 = 256;
  uint64_t result = sub_2447F5F24(a1, a2, (void *)a3);
  if (!*(_DWORD *)a3)
  {
    if (!a2[1]) {
      sub_24479484C();
    }
    if (*a2 == 255)
    {
      *(_DWORD *)a3 = 1415;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
      int v7 = 175;
    }
    else
    {
      *(_DWORD *)a3 = 0;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
      int v7 = 177;
    }
    goto LABEL_5;
  }
  return result;
}

double sub_2447F2290@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB68B8();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_2447F5C00((unsigned __int16 *)(a1 + 2), (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB68B8();
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_244CB68B8();
          uint64_t v9 = v12;
          long long v8 = v11;
          if (!v11)
          {
            sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
            long long v8 = v11;
            uint64_t v9 = v12;
          }
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2447F23F8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  int v6 = v16;
  if (v16 == 1)
  {
LABEL_12:
    double result = *(double *)&v14;
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 16) = v15;
  }
  else
  {
    while (1)
    {
      long long v12 = xmmword_265195570;
      uint64_t v13 = 1548;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v14)
      {
        case 0:
          sub_244CB3E8C(a2, (unsigned char *)a1, (uint64_t)&v12);
          break;
        case 1:
          sub_2447EF9E0(a2, (__int16 *)(a1 + 2), (uint64_t)&v10);
          goto LABEL_9;
        case 2:
          uint64_t v7 = a2;
          long long v8 = (unsigned char *)(a1 + 6);
          goto LABEL_8;
        case 3:
          uint64_t v7 = a2;
          long long v8 = (unsigned char *)(a1 + 7);
LABEL_8:
          sub_24484B184(v7, v8, &v10);
LABEL_9:
          long long v12 = v10;
          uint64_t v13 = v11;
          break;
        default:
          break;
      }
      double result = *(double *)&v12;
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
      int v6 = v16;
      if (v16 == 1) {
        goto LABEL_12;
      }
    }
  }
  return result;
}

double sub_2447F2568@<D0>(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  sub_2447F1C40((uint64_t)&v7, 0, a1);
  if (!v8)
  {
    sub_2447FB010(a1 + 1, (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB68B8();
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB68B8();
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
          long long v8 = v11;
          uint64_t v9 = v12;
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2447F26B4@<D0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  int v6 = v16;
  if (v16 == 1)
  {
LABEL_12:
    double result = *(double *)&v14;
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 16) = v15;
  }
  else
  {
    while (1)
    {
      long long v12 = xmmword_265195588;
      uint64_t v13 = 1597;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v14)
      {
        case 0:
          sub_2447F1DCC(a2, a1, &v12);
          break;
        case 1:
          sub_2447F15BC(a2, a1 + 1, (uint64_t)&v10);
          goto LABEL_9;
        case 2:
          uint64_t v7 = a2;
          long long v8 = a1 + 3;
          goto LABEL_8;
        case 3:
          uint64_t v7 = a2;
          long long v8 = a1 + 4;
LABEL_8:
          sub_24484B184(v7, v8, &v10);
LABEL_9:
          long long v12 = v10;
          uint64_t v13 = v11;
          break;
        default:
          break;
      }
      double result = *(double *)&v12;
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
      int v6 = v16;
      if (v16 == 1) {
        goto LABEL_12;
      }
    }
  }
  return result;
}

double sub_2447F2824@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  sub_2447F1C40((uint64_t)&v7, 0, (unsigned char *)a1);
  if (!v8)
  {
    sub_244CB68B8();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_2447F5C00((unsigned __int16 *)(a1 + 2), (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB68B8();
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_244CB68B8();
          uint64_t v9 = v12;
          long long v8 = v11;
          if (!v11)
          {
            sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
            long long v8 = v11;
            uint64_t v9 = v12;
          }
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2447F299C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  int v6 = v16;
  if (v16 == 1)
  {
LABEL_13:
    double result = *(double *)&v14;
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 16) = v15;
  }
  else
  {
    while (1)
    {
      long long v12 = xmmword_2651955A0;
      uint64_t v13 = 1647;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v14)
      {
        case 0:
          sub_2447F1DCC(a2, (unsigned char *)a1, &v12);
          break;
        case 1:
          sub_244CB3E8C(a2, (unsigned char *)(a1 + 1), (uint64_t)&v10);
          goto LABEL_10;
        case 2:
          sub_2447EF9E0(a2, (__int16 *)(a1 + 2), (uint64_t)&v10);
          goto LABEL_10;
        case 3:
          uint64_t v7 = a2;
          long long v8 = (unsigned char *)(a1 + 6);
          goto LABEL_9;
        case 4:
          uint64_t v7 = a2;
          long long v8 = (unsigned char *)(a1 + 7);
LABEL_9:
          sub_24484B184(v7, v8, &v10);
LABEL_10:
          long long v12 = v10;
          uint64_t v13 = v11;
          break;
        default:
          break;
      }
      double result = *(double *)&v12;
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
      int v6 = v16;
      if (v16 == 1) {
        goto LABEL_13;
      }
    }
  }
  return result;
}

double sub_2447F2B28@<D0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  sub_244CB7594(a1, a2, 21, &v8, (uint64_t)&v9);
  long long v6 = v9;
  uint64_t v7 = v10;
  if (!v9)
  {
    sub_244CB68B8();
    uint64_t v7 = v10;
    long long v6 = v9;
    if (!v9)
    {
      sub_244CB68B8();
      uint64_t v7 = v10;
      long long v6 = v9;
      if (!v9)
      {
        sub_244CB7708((uint64_t)a1, v8, (uint64_t)&v9);
        long long v6 = v9;
        uint64_t v7 = v10;
      }
    }
  }
  double result = *(double *)&v6;
  *(_OWORD *)a3 = v6;
  *(void *)(a3 + 16) = v7;
  return result;
}

double sub_2447F2C38@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_2651955B8;
      uint64_t v11 = 1698;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_24484B184(a2, a1 + 1, &v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_24484B184(a2, a1, &v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_2447F2D48@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  int v6 = v16;
  if (v16 == 1)
  {
LABEL_12:
    double result = *(double *)&v14;
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 16) = v15;
  }
  else
  {
    while (1)
    {
      long long v12 = xmmword_2651955D0;
      uint64_t v13 = 1739;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v14)
      {
        case 0:
          sub_244CB3E8C(a2, (unsigned char *)a1, (uint64_t)&v12);
          break;
        case 1:
          sub_2447EF9E0(a2, (__int16 *)(a1 + 2), (uint64_t)&v10);
          goto LABEL_9;
        case 2:
          uint64_t v7 = a2;
          long long v8 = (unsigned char *)(a1 + 6);
          goto LABEL_8;
        case 3:
          uint64_t v7 = a2;
          long long v8 = (unsigned char *)(a1 + 7);
LABEL_8:
          sub_24484B184(v7, v8, &v10);
LABEL_9:
          long long v12 = v10;
          uint64_t v13 = v11;
          break;
        default:
          break;
      }
      double result = *(double *)&v12;
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
      int v6 = v16;
      if (v16 == 1) {
        goto LABEL_12;
      }
    }
  }
  return result;
}

double sub_2447F2EB8@<D0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  int v6 = v16;
  if (v16 == 1)
  {
LABEL_12:
    double result = *(double *)&v14;
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 16) = v15;
  }
  else
  {
    while (1)
    {
      long long v12 = xmmword_2651955E8;
      uint64_t v13 = 1788;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v14)
      {
        case 0:
          sub_2447F1DCC(a2, a1, &v12);
          break;
        case 1:
          sub_2447F15BC(a2, a1 + 1, (uint64_t)&v10);
          goto LABEL_9;
        case 2:
          uint64_t v7 = a2;
          long long v8 = a1 + 3;
          goto LABEL_8;
        case 3:
          uint64_t v7 = a2;
          long long v8 = a1 + 4;
LABEL_8:
          sub_24484B184(v7, v8, &v10);
LABEL_9:
          long long v12 = v10;
          uint64_t v13 = v11;
          break;
        default:
          break;
      }
      double result = *(double *)&v12;
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
      int v6 = v16;
      if (v16 == 1) {
        goto LABEL_12;
      }
    }
  }
  return result;
}

double sub_2447F3028@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  int v6 = v16;
  if (v16 == 1)
  {
LABEL_13:
    double result = *(double *)&v14;
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 16) = v15;
  }
  else
  {
    while (1)
    {
      long long v12 = xmmword_265195600;
      uint64_t v13 = 1838;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v14)
      {
        case 0:
          sub_2447F1DCC(a2, (unsigned char *)a1, &v12);
          break;
        case 1:
          sub_244CB3E8C(a2, (unsigned char *)(a1 + 1), (uint64_t)&v10);
          goto LABEL_10;
        case 2:
          sub_2447EF9E0(a2, (__int16 *)(a1 + 2), (uint64_t)&v10);
          goto LABEL_10;
        case 3:
          uint64_t v7 = a2;
          long long v8 = (unsigned char *)(a1 + 6);
          goto LABEL_9;
        case 4:
          uint64_t v7 = a2;
          long long v8 = (unsigned char *)(a1 + 7);
LABEL_9:
          sub_24484B184(v7, v8, &v10);
LABEL_10:
          long long v12 = v10;
          uint64_t v13 = v11;
          break;
        default:
          break;
      }
      double result = *(double *)&v12;
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
      int v6 = v16;
      if (v16 == 1) {
        goto LABEL_13;
      }
    }
  }
  return result;
}

double sub_2447F31B4@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265195618;
      uint64_t v11 = 1889;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_24484B184(a2, a1 + 1, &v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_24484B184(a2, a1, &v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_2447F32C4@<D0>(_WORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265195630;
      uint64_t v9 = 1927;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3F40(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

void sub_2447F339C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4 = (unsigned __int8 *)a1;
  int v5 = *(_DWORD *)(a3 + 8);
  switch(v5)
  {
    case 0:
      goto LABEL_22;
    case 1:
      int v6 = (_WORD *)(a1 + 2);
      goto LABEL_28;
    case 2:
      uint64_t v9 = (unsigned char *)(a1 + 4);
      goto LABEL_11;
    case 3:
      uint64_t v9 = (unsigned char *)(a1 + 5);
LABEL_11:
      sub_244CB3E8C(a2, v9, a4);
      return;
    case 4:
      int v6 = (_WORD *)(a1 + 6);
      goto LABEL_28;
    case 5:
      int v6 = (_WORD *)(a1 + 8);
      goto LABEL_28;
    case 6:
      int v6 = (_WORD *)(a1 + 10);
      goto LABEL_28;
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
LABEL_8:
      *(_DWORD *)a4 = 0;
      *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-common"
                            "/app-common/zap-generated/cluster-objects.cpp";
      *(_DWORD *)(a4 + 16) = 1990;
      return;
    case 15:
      sub_24484B184(a2, (unsigned char *)(a1 + 12), (void *)a4);
      return;
    case 16:
      int v6 = (_WORD *)(a1 + 14);
LABEL_28:
      sub_244CB3F40(a2, v6, a4);
      return;
    case 17:
      int v4 = (unsigned __int8 *)(a1 + 16);
      goto LABEL_22;
    case 18:
      long long v10 = (__int16 *)(a1 + 18);
      goto LABEL_20;
    case 19:
      long long v10 = (__int16 *)(a1 + 22);
LABEL_20:
      sub_2447EF9E0(a2, v10, a4);
      break;
    case 20:
      int v4 = (unsigned __int8 *)(a1 + 26);
LABEL_22:
      sub_2447F15BC(a2, v4, a4);
      break;
    default:
      int v7 = v5 - 65528;
      switch(v7)
      {
        case 0:
          uint64_t v8 = a1 + 32;
          goto LABEL_5;
        case 1:
          uint64_t v8 = a1 + 112;
          goto LABEL_5;
        case 2:
          uint64_t v8 = a1 + 192;
          goto LABEL_5;
        case 3:
          uint64_t v8 = a1 + 272;
LABEL_5:
          sub_24484B03C(v8, a2, a4);
          return;
        case 4:
          sub_244CB3FB0(a2, (_DWORD *)(a1 + 352), a4);
          return;
        case 5:
          int v6 = (_WORD *)(a1 + 356);
          goto LABEL_28;
        default:
          if (v7 != 0x4000) {
            goto LABEL_8;
          }
          int v4 = (unsigned __int8 *)(a1 + 28);
          goto LABEL_22;
      }
  }
}

void sub_2447F3558(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  switch(*(_DWORD *)(a3 + 8))
  {
    case 0xFFF8:
      goto LABEL_2;
    case 0xFFF9:
      a1 += 80;
      goto LABEL_2;
    case 0xFFFA:
      a1 += 160;
      goto LABEL_2;
    case 0xFFFB:
      a1 += 240;
LABEL_2:
      sub_24484B03C(a1, a2, a4);
      break;
    case 0xFFFC:
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 320), a4);
      break;
    case 0xFFFD:
      sub_244CB3F40(a2, (_WORD *)(a1 + 324), a4);
      break;
    default:
      *(_DWORD *)a4 = 0;
      *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-common"
                            "/app-common/zap-generated/cluster-objects.cpp";
      *(_DWORD *)(a4 + 16) = 2020;
      break;
  }
}

double sub_2447F35FC@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_2447F5C00((unsigned __int16 *)a1, (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB68B8();
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB68B8();
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_244819180(a2, (unsigned char *)(a1 + 8), (uint64_t)&v11);
          uint64_t v9 = v12;
          long long v8 = v11;
          if (!v11)
          {
            sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
            long long v8 = v11;
            uint64_t v9 = v12;
          }
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2447F3764@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  int v6 = v16;
  if (v16 == 1)
  {
LABEL_12:
    double result = *(double *)&v14;
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 16) = v15;
  }
  else
  {
    while (1)
    {
      long long v12 = xmmword_265195648;
      uint64_t v13 = 2053;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v14)
      {
        case 0:
          sub_2447F38E4(a2, (__int16 *)a1, (uint64_t)&v12);
          break;
        case 1:
          uint64_t v7 = a2;
          long long v8 = (unsigned char *)(a1 + 4);
          goto LABEL_7;
        case 2:
          uint64_t v7 = a2;
          long long v8 = (unsigned char *)(a1 + 5);
LABEL_7:
          sub_244CB3E8C(v7, v8, (uint64_t)&v10);
          goto LABEL_9;
        case 3:
          *(unsigned char *)(a1 + 8) = 1;
          *(void *)(a1 + 24) = 0;
          *(void *)(a1 + 32) = 0;
          *(void *)(a1 + 16) = 0;
          sub_244803C58(a2, a1 + 16, &v10);
LABEL_9:
          long long v12 = v10;
          uint64_t v13 = v11;
          break;
        default:
          break;
      }
      double result = *(double *)&v12;
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
      int v6 = v16;
      if (v16 == 1) {
        goto LABEL_12;
      }
    }
  }
  return result;
}

uint64_t sub_2447F38E4@<X0>(uint64_t a1@<X0>, __int16 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = sub_244CB3B68(a1);
  if (result == 20)
  {
    if (*((unsigned char *)a2 + 2)) {
      *((unsigned char *)a2 + 2) = 0;
    }
    *(_DWORD *)a3 = 0;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
    int v7 = 168;
LABEL_5:
    *(_DWORD *)(a3 + 16) = v7;
    return result;
  }
  *a2 = 0;
  *((unsigned char *)a2 + 2) = 1;
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  *(void *)a3 = 0;
  uint64_t result = sub_24484B11C(a1, a2, (void *)a3);
  if (!*(_DWORD *)a3)
  {
    *(_DWORD *)a3 = 0;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
    *(_DWORD *)(a3 + 16) = 61;
    if (!*((unsigned char *)a2 + 2)) {
      sub_24479484C();
    }
    if (*a2 == -1)
    {
      *(_DWORD *)a3 = 1415;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
      int v7 = 175;
    }
    else
    {
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
      int v7 = 177;
    }
    goto LABEL_5;
  }
  return result;
}

void sub_2447F39C4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  switch(*(_DWORD *)(a3 + 8))
  {
    case 0xFFF8:
      a1 += 400;
      goto LABEL_3;
    case 0xFFF9:
      a1 += 480;
      goto LABEL_3;
    case 0xFFFA:
      a1 += 560;
      goto LABEL_3;
    case 0xFFFB:
      a1 += 640;
LABEL_3:
      sub_24484B03C(a1, a2, a4);
      break;
    case 0xFFFC:
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 720), a4);
      break;
    case 0xFFFD:
      sub_244CB3F40(a2, (_WORD *)(a1 + 724), a4);
      break;
    default:
      switch(*(_DWORD *)(a3 + 8))
      {
        case 0xFFF8:
          goto LABEL_3;
        case 0xFFF9:
          a1 += 80;
          goto LABEL_3;
        case 0xFFFA:
          a1 += 160;
          goto LABEL_3;
        case 0xFFFB:
          a1 += 240;
          goto LABEL_3;
        case 0xFFFC:
          a1 += 320;
          goto LABEL_3;
        default:
          *(_DWORD *)a4 = 0;
          *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-co"
                                "mmon/app-common/zap-generated/cluster-objects.cpp";
          *(_DWORD *)(a4 + 16) = 2113;
          break;
      }
      break;
  }
}

double sub_2447F3AD0@<D0>(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v5[0] = 0;
  return sub_2447F3AF8(a1, a2, a3, v5, a4);
}

double sub_2447F3AF8@<D0>(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, unsigned char *a4@<X3>, uint64_t a5@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v13, (uint64_t)&v14);
  long long v11 = v14;
  uint64_t v12 = v15;
  int v8 = v14;
  if (!v14)
  {
    sub_244839174(a1, (uint64_t)&v14);
    uint64_t v12 = v15;
    long long v11 = v14;
    int v8 = v14;
    if (!v14)
    {
      sub_24483F80C(a1 + 16, (uint64_t)&v14);
      uint64_t v12 = v15;
      long long v11 = v14;
      int v8 = v14;
      if (!v14)
      {
        sub_24483F80C(a1 + 20, (uint64_t)&v14);
        uint64_t v12 = v15;
        long long v11 = v14;
        int v8 = v14;
        if (!v14)
        {
          sub_24483F918(a1 + 24, (uint64_t)&v14);
          uint64_t v12 = v15;
          long long v11 = v14;
          int v8 = v14;
        }
      }
    }
  }
  if (*a4)
  {
    if (v8) {
      goto LABEL_11;
    }
    sub_244CB68B8();
    uint64_t v12 = v15;
    long long v11 = v14;
    int v8 = v14;
  }
  if (!v8)
  {
    sub_244CB7708((uint64_t)a2, v13, (uint64_t)&v14);
    long long v11 = v14;
    uint64_t v12 = v15;
  }
LABEL_11:
  double result = *(double *)&v11;
  *(_OWORD *)a5 = v11;
  *(void *)(a5 + 16) = v12;
  return result;
}

double sub_2447F3C98@<D0>(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  v6[0] = 1;
  v6[1] = a4;
  return sub_2447F3AF8(a1, a2, a3, v6, a5);
}

double sub_2447F3CC8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  int v6 = v16;
  if (v16 != 1)
  {
    while (2)
    {
      long long v12 = xmmword_265195660;
      uint64_t v13 = 2163;
      if (!v6)
      {
        switch((char)v14)
        {
          case 1:
            *(unsigned char *)a1 = 1;
            *(void *)(a1 + 8) = 0;
            sub_244CB3EFC(a2, (void *)(a1 + 8), (uint64_t)&v12);
            goto LABEL_12;
          case 2:
            *(unsigned char *)(a1 + 16) = 1;
            *(_WORD *)(a1 + 18) = 0;
            uint64_t v7 = a2;
            int v8 = (_WORD *)(a1 + 18);
            goto LABEL_9;
          case 3:
            *(unsigned char *)(a1 + 20) = 1;
            *(_WORD *)(a1 + 22) = 0;
            uint64_t v7 = a2;
            int v8 = (_WORD *)(a1 + 22);
LABEL_9:
            sub_244CB3F40(v7, v8, (uint64_t)&v10);
            goto LABEL_11;
          case 4:
            *(unsigned char *)(a1 + 24) = 1;
            *(_DWORD *)(a1 + 28) = 0;
            sub_244CB3FB0(a2, (_DWORD *)(a1 + 28), (uint64_t)&v10);
            goto LABEL_11;
          default:
            if (v14 != 254) {
              goto LABEL_12;
            }
            sub_244CB3E8C(a2, (unsigned char *)(a1 + 32), (uint64_t)&v10);
LABEL_11:
            long long v12 = v10;
            uint64_t v13 = v11;
LABEL_12:
            double result = *(double *)&v12;
            *(_OWORD *)a3 = v12;
            *(void *)(a3 + 16) = v13;
            if (*(_DWORD *)a3) {
              return result;
            }
            sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
            int v6 = v16;
            if (v16 == 1) {
              goto LABEL_14;
            }
            continue;
        }
      }
      break;
    }
    sub_24484AFEC();
  }
LABEL_14:
  double result = *(double *)&v14;
  *(_OWORD *)a3 = v14;
  *(void *)(a3 + 16) = v15;
  return result;
}

void sub_2447F3E8C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4 = *(_DWORD *)(a3 + 8);
  switch(v4)
  {
    case 65528:
      a1 += 80;
      goto LABEL_3;
    case 65529:
      a1 += 160;
      goto LABEL_3;
    case 65530:
      a1 += 240;
      goto LABEL_3;
    case 65531:
      a1 += 320;
      goto LABEL_3;
    case 65532:
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 400), a4);
      return;
    case 65533:
      sub_244CB3F40(a2, (_WORD *)(a1 + 404), a4);
      return;
    default:
      if (v4)
      {
        *(_DWORD *)a4 = 0;
        *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-comm"
                              "on/app-common/zap-generated/cluster-objects.cpp";
        *(_DWORD *)(a4 + 16) = 2219;
      }
      else
      {
LABEL_3:
        sub_24484B03C(a1, a2, a4);
      }
      return;
  }
}

double sub_2447F3F3C@<D0>(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  sub_2447EF794((uint64_t)&v7, 0, a1);
  if (!v8)
  {
    sub_2447FAB34((uint64_t)(a1 + 4), (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
      long long v8 = v11;
      uint64_t v9 = v12;
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2447F4030@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265195678;
      uint64_t v11 = 2250;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_2447F4140(a2, (uint64_t)(a1 + 4), (uint64_t)&v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_2446D1A48(a2, a1, &v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

uint64_t sub_2447F4140@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = sub_244CB3B68(a1);
  if (result == 20)
  {
    if (*(unsigned char *)(a2 + 4)) {
      *(unsigned char *)(a2 + 4) = 0;
    }
    *(_DWORD *)a3 = 0;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
    int v7 = 168;
LABEL_5:
    *(_DWORD *)(a3 + 16) = v7;
    return result;
  }
  *(void *)a3 = 0;
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  *(_DWORD *)a2 = 0;
  *(unsigned char *)(a2 + 4) = 1;
  uint64_t result = sub_244CB3FB0(a1, (_DWORD *)a2, a3);
  if (!*(_DWORD *)a3)
  {
    if (!*(unsigned char *)(a2 + 4)) {
      sub_24479484C();
    }
    if (*(_DWORD *)a2 == -1)
    {
      *(_DWORD *)a3 = 1415;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
      int v7 = 175;
    }
    else
    {
      *(_DWORD *)a3 = 0;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
      int v7 = 177;
    }
    goto LABEL_5;
  }
  return result;
}

double sub_2447F421C@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB6904();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB694C();
      long long v8 = v11;
      uint64_t v9 = v12;
    }
  }
  sub_2447F433C((uint64_t)&v7, 2u, a1 + 8);
  if (!v8)
  {
    sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2447F433C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = a1 + 8;
  if (!*(_DWORD *)(a1 + 8))
  {
    int v4 = *(void **)a1;
    int v5 = *(unsigned char **)a3;
    uint64_t v6 = *(void *)(a3 + 8);
    int v11 = 0;
    uint64_t v10 = 0;
    long long v9 = 0uLL;
    sub_244CB7594(v4, a2, 22, &v11, (uint64_t)&v9);
    if (!v9)
    {
      if (v6)
      {
        uint64_t v7 = 12 * v6;
        while (1)
        {
          long long v9 = 0uLL;
          uint64_t v10 = 0;
          sub_2447F3F3C(v5, v4, 256, (uint64_t)&v9);
          if (v9) {
            break;
          }
          v5 += 12;
          v7 -= 12;
          if (!v7) {
            goto LABEL_7;
          }
        }
      }
      else
      {
LABEL_7:
        long long v9 = 0uLL;
        uint64_t v10 = 0;
        sub_244CB7708((uint64_t)v4, v11, (uint64_t)&v9);
        if (!v9)
        {
          LODWORD(v9) = 0;
          *((void *)&v9 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/List.h";
          LODWORD(v10) = 86;
        }
      }
    }
    double result = *(double *)&v9;
    *(_OWORD *)uint64_t v3 = v9;
    *(void *)(v3 + 16) = v10;
  }
  return result;
}

double sub_2447F442C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  for (int i = v14; v14 != 1; int i = v14)
  {
    long long v10 = xmmword_265195690;
    uint64_t v11 = 2292;
    if (i) {
      sub_24484AFEC();
    }
    if (v12 == 2)
    {
      sub_24484B03C(a1 + 8, a2, (uint64_t)&v8);
    }
    else
    {
      if (v12 != 1)
      {
        if (!(_BYTE)v12) {
          sub_244CB3F40(a2, (_WORD *)a1, (uint64_t)&v10);
        }
        goto LABEL_10;
      }
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 4), (uint64_t)&v8);
    }
    long long v10 = v8;
    uint64_t v11 = v9;
LABEL_10:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
    if (*(_DWORD *)a3) {
      return result;
    }
    sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  }
  double result = *(double *)&v12;
  *(_OWORD *)a3 = v12;
  *(void *)(a3 + 16) = v13;
  return result;
}

double sub_2447F455C@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v5[0] = 0;
  return sub_2447F4584(a1, a2, a3, v5, a4);
}

double sub_2447F4584@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, unsigned char *a4@<X3>, uint64_t a5@<X8>)
{
  if (*a4)
  {
    int v10 = *sub_2446F9190(a4);
    int v11 = *(unsigned __int8 *)(a1 + 24);
    uint64_t v13 = a2;
    sub_244CB7594(a2, a3, 21, &v16, (uint64_t)&v17);
    long long v14 = v17;
    uint64_t v15 = v18;
    if (v10 != v11) {
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v13 = a2;
    sub_244CB7594(a2, a3, 21, &v16, (uint64_t)&v17);
    long long v14 = v17;
    uint64_t v15 = v18;
  }
  if (!v14)
  {
    sub_244CB6904();
    uint64_t v15 = v18;
    long long v14 = v17;
    if (!v17)
    {
      sub_244CB694C();
      long long v14 = v17;
      uint64_t v15 = v18;
    }
  }
  sub_2447F433C((uint64_t)&v13, 2u, a1 + 8);
LABEL_9:
  if (*a4 && !v14)
  {
    sub_244CB68B8();
    long long v14 = v17;
    uint64_t v15 = v18;
  }
  if (!v14)
  {
    sub_244CB7708((uint64_t)v13, v16, (uint64_t)&v17);
    long long v14 = v17;
    uint64_t v15 = v18;
  }
  double result = *(double *)&v14;
  *(_OWORD *)a5 = v14;
  *(void *)(a5 + 16) = v15;
  return result;
}

double sub_2447F4774@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  v6[0] = 1;
  v6[1] = a4;
  return sub_2447F4584(a1, a2, a3, v6, a5);
}

double sub_2447F47A4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  for (int i = v14; v14 != 1; int i = v14)
  {
    long long v10 = xmmword_2651956A8;
    uint64_t v11 = 2365;
    if (i) {
      sub_24484AFEC();
    }
    if (v12 > 1u)
    {
      if (v12 == 2)
      {
        sub_24484B03C(a1 + 8, a2, (uint64_t)&v8);
        goto LABEL_12;
      }
      if (v12 == 254)
      {
        sub_244CB3E8C(a2, (unsigned char *)(a1 + 88), (uint64_t)&v8);
        goto LABEL_12;
      }
    }
    else if ((_BYTE)v12)
    {
      if (v12 == 1)
      {
        sub_244CB3FB0(a2, (_DWORD *)(a1 + 4), (uint64_t)&v8);
LABEL_12:
        long long v10 = v8;
        uint64_t v11 = v9;
      }
    }
    else
    {
      sub_244CB3F40(a2, (_WORD *)a1, (uint64_t)&v10);
    }
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
    if (*(_DWORD *)a3) {
      return result;
    }
    sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  }
  double result = *(double *)&v12;
  *(_OWORD *)a3 = v12;
  *(void *)(a3 + 16) = v13;
  return result;
}

double sub_2447F4904@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_2447FAB34(a1, (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_2447F5C00((unsigned __int16 *)(a1 + 8), (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_2447FAB34(a1 + 12, (uint64_t)&v11);
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
          long long v8 = v11;
          uint64_t v9 = v12;
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2447F4A40@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  for (int i = v14; v14 != 1; int i = v14)
  {
    long long v10 = xmmword_2651956C0;
    uint64_t v11 = 2415;
    if (i) {
      sub_24484AFEC();
    }
    if (v12 == 2)
    {
      sub_2447F4140(a2, a1 + 12, (uint64_t)&v8);
    }
    else
    {
      if (v12 != 1)
      {
        if (!(_BYTE)v12) {
          sub_2447F4140(a2, a1, (uint64_t)&v10);
        }
        goto LABEL_10;
      }
      sub_2447EF9E0(a2, (__int16 *)(a1 + 8), (uint64_t)&v8);
    }
    long long v10 = v8;
    uint64_t v11 = v9;
LABEL_10:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
    if (*(_DWORD *)a3) {
      return result;
    }
    sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  }
  double result = *(double *)&v12;
  *(_OWORD *)a3 = v12;
  *(void *)(a3 + 16) = v13;
  return result;
}

double sub_2447F4B70@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v5[0] = 0;
  return sub_2447F4B98(a1, a2, a3, v5, a4);
}

double sub_2447F4B98@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, unsigned char *a4@<X3>, uint64_t a5@<X8>)
{
  if (*a4)
  {
    int v10 = *sub_2446F9190(a4);
    int v11 = *(unsigned __int8 *)(a1 + 56);
    uint64_t v13 = a2;
    sub_244CB7594(a2, a3, 21, &v16, (uint64_t)&v17);
    long long v14 = v17;
    uint64_t v15 = v18;
    if (v10 != v11) {
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v13 = a2;
    sub_244CB7594(a2, a3, 21, &v16, (uint64_t)&v17);
    long long v14 = v17;
    uint64_t v15 = v18;
  }
  sub_2447F4DC8((uint64_t)&v13, 1, (unsigned char *)a1);
  sub_2447F4DC8((uint64_t)&v13, 2, (unsigned char *)(a1 + 1));
  if (!v14)
  {
    sub_24484B454(v13, 3, (uint64_t *)(a1 + 8), &v17);
    uint64_t v15 = v18;
    long long v14 = v17;
    if (!v17)
    {
      sub_24484B558(v13, 4, a1 + 32, &v17);
      long long v14 = v17;
      uint64_t v15 = v18;
    }
  }
LABEL_8:
  if (*a4 && !v14)
  {
    sub_244CB68B8();
    long long v14 = v17;
    uint64_t v15 = v18;
  }
  if (!v14)
  {
    sub_244CB7708((uint64_t)v13, v16, (uint64_t)&v17);
    long long v14 = v17;
    uint64_t v15 = v18;
  }
  double result = *(double *)&v14;
  *(_OWORD *)a5 = v14;
  *(void *)(a5 + 16) = v15;
  return result;
}

double sub_2447F4D98@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  v6[0] = 1;
  v6[1] = a4;
  return sub_2447F4B98(a1, a2, a3, v6, a5);
}

double sub_2447F4DC8(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  uint64_t v3 = a1 + 8;
  if (!*(_DWORD *)(a1 + 8))
  {
    if (*a3)
    {
      sub_244CB68B8();
    }
    else
    {
      LODWORD(v5) = 1415;
      *((void *)&v5 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
      LODWORD(v6) = 75;
    }
    double result = *(double *)&v5;
    *(_OWORD *)uint64_t v3 = v5;
    *(void *)(v3 + 16) = v6;
  }
  return result;
}

double sub_2447F4E40@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 != 1)
  {
    while (2)
    {
      long long v10 = xmmword_2651956D8;
      uint64_t v11 = 2492;
      if (!v6)
      {
        switch((char)v12)
        {
          case 1:
            sub_2447F4FD8(a2, a1, &v10);
            goto LABEL_11;
          case 2:
            sub_2447F503C(a2, a1 + 1, &v8);
            goto LABEL_10;
          case 3:
            sub_2447F50A0(a2, (uint64_t)(a1 + 8), &v8);
            goto LABEL_10;
          case 4:
            sub_2447F50A0(a2, (uint64_t)(a1 + 96), &v8);
            goto LABEL_10;
          default:
            if (v12 != 254) {
              goto LABEL_11;
            }
            sub_244CB3E8C(a2, a1 + 184, (uint64_t)&v8);
LABEL_10:
            long long v10 = v8;
            uint64_t v11 = v9;
LABEL_11:
            double result = *(double *)&v10;
            *(_OWORD *)a3 = v10;
            *(void *)(a3 + 16) = v11;
            if (*(_DWORD *)a3) {
              return result;
            }
            sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
            int v6 = v14;
            if (v14 == 1) {
              goto LABEL_13;
            }
            continue;
        }
      }
      break;
    }
    sub_24484AFEC();
  }
LABEL_13:
  double result = *(double *)&v12;
  *(_OWORD *)a3 = v12;
  *(void *)(a3 + 16) = v13;
  return result;
}

uint64_t sub_2447F4FD8@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  uint64_t result = sub_2446D1AAC(a1, a2, a3);
  if (!*(_DWORD *)a3)
  {
    int v6 = *a2;
    if ((v6 - 1) >= 5) {
      LOBYTE(v6) = 0;
    }
    *a2 = v6;
    *(_DWORD *)a3 = 0;
    a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
    *((_DWORD *)a3 + 4) = 61;
  }
  return result;
}

uint64_t sub_2447F503C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  uint64_t result = sub_2446D1AAC(a1, a2, a3);
  if (!*(_DWORD *)a3)
  {
    int v6 = *a2;
    if ((v6 - 1) >= 3) {
      LOBYTE(v6) = 0;
    }
    *a2 = v6;
    *(_DWORD *)a3 = 0;
    a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
    *((_DWORD *)a3 + 4) = 61;
  }
  return result;
}

void sub_2447F50A0(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if (sub_244CB3B68(a1) == 20)
  {
    if (*(unsigned char *)(a2 + 80)) {
      *(unsigned char *)(a2 + 80) = 0;
    }
    int v6 = 168;
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
    uint64_t v7 = sub_24484B660(a2);
    sub_24484B03C(v7, a1, (uint64_t)a3);
    if (*(_DWORD *)a3) {
      return;
    }
    int v6 = 177;
  }
  *(_DWORD *)a3 = 0;
  a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
  *((_DWORD *)a3 + 4) = v6;
}

double sub_2447F512C@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v5[0] = 0;
  return sub_2447F5154(a1, a2, a3, v5, a4);
}

double sub_2447F5154@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, unsigned char *a4@<X3>, uint64_t a5@<X8>)
{
  if (*a4)
  {
    int v10 = *sub_2446F9190(a4);
    int v11 = *(unsigned __int8 *)(a1 + 16);
    uint64_t v13 = a2;
    sub_244CB7594(a2, a3, 21, &v16, (uint64_t)&v17);
    long long v14 = v17;
    uint64_t v15 = v18;
    if (v10 != v11) {
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v13 = a2;
    sub_244CB7594(a2, a3, 21, &v16, (uint64_t)&v17);
    long long v14 = v17;
    uint64_t v15 = v18;
  }
  if (!v14)
  {
    sub_244CB6ADC(v13, *(char **)a1, *(void *)(a1 + 8), (uint64_t)&v17);
    long long v14 = v17;
    uint64_t v15 = v18;
  }
LABEL_7:
  if (*a4 && !v14)
  {
    sub_244CB68B8();
    long long v14 = v17;
    uint64_t v15 = v18;
  }
  if (!v14)
  {
    sub_244CB7708((uint64_t)v13, v16, (uint64_t)&v17);
    long long v14 = v17;
    uint64_t v15 = v18;
  }
  double result = *(double *)&v14;
  *(_OWORD *)a5 = v14;
  *(void *)(a5 + 16) = v15;
  return result;
}

double sub_2447F5308@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  v6[0] = 1;
  v6[1] = a4;
  return sub_2447F5154(a1, a2, a3, v6, a5);
}

double sub_2447F5338@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_12:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_2651956F0;
      uint64_t v11 = 2565;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 254)
      {
        sub_244CB3E8C(a2, (unsigned char *)(a1 + 16), (uint64_t)&v10);
      }
      else if (v12 == 1)
      {
        if (sub_244CB3B68(a2) == 16)
        {
          sub_244CB40C8(a2, (_OWORD *)a1, &v8);
        }
        else
        {
          LODWORD(v8) = 43;
          *((void *)&v8 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
          LODWORD(v9) = 80;
        }
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_12;
      }
    }
  }
  return result;
}

void sub_2447F5484(uint64_t a1@<X0>, _OWORD *a2@<X1>, uint64_t a3@<X8>)
{
  if (sub_244CB3B68(a1) == 16)
  {
    sub_244CB40C8(a1, a2, (void *)a3);
  }
  else
  {
    *(_DWORD *)a3 = 43;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
    *(_DWORD *)(a3 + 16) = 80;
  }
}

double sub_2447F5508@<D0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  sub_2447F55D0((uint64_t)&v7, 0, a1);
  if (!v8)
  {
    sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2447F55D0(uint64_t a1, unsigned int a2, uint64_t *a3)
{
  uint64_t v3 = a1 + 8;
  if (!*(_DWORD *)(a1 + 8))
  {
    int v4 = *(void **)a1;
    uint64_t v5 = *a3;
    uint64_t v6 = a3[1];
    int v11 = 0;
    uint64_t v10 = 0;
    long long v9 = 0uLL;
    sub_244CB7594(v4, a2, 22, &v11, (uint64_t)&v9);
    if (!v9)
    {
      if (v6)
      {
        uint64_t v7 = 24 * v6;
        while (1)
        {
          long long v9 = 0uLL;
          uint64_t v10 = 0;
          sub_2447F421C(v5, v4, 256, (uint64_t)&v9);
          if (v9) {
            break;
          }
          v5 += 24;
          v7 -= 24;
          if (!v7) {
            goto LABEL_7;
          }
        }
      }
      else
      {
LABEL_7:
        long long v9 = 0uLL;
        uint64_t v10 = 0;
        sub_244CB7708((uint64_t)v4, v11, (uint64_t)&v9);
        if (!v9)
        {
          LODWORD(v9) = 0;
          *((void *)&v9 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/List.h";
          LODWORD(v10) = 86;
        }
      }
    }
    double result = *(double *)&v9;
    *(_OWORD *)uint64_t v3 = v9;
    *(void *)(v3 + 16) = v10;
  }
  return result;
}

double sub_2447F56C0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265195708;
      uint64_t v9 = 2607;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_24484B03C(a1, a2, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_2447F5798@<D0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  sub_244CB7594(a1, a2, 21, &v8, (uint64_t)&v9);
  long long v6 = v9;
  uint64_t v7 = v10;
  if (!v9)
  {
    sub_244CB68CC();
    uint64_t v7 = v10;
    long long v6 = v9;
    if (!v9)
    {
      sub_244CB7708((uint64_t)a1, v8, (uint64_t)&v9);
      long long v6 = v9;
      uint64_t v7 = v10;
    }
  }
  double result = *(double *)&v6;
  *(_OWORD *)a3 = v6;
  *(void *)(a3 + 16) = v7;
  return result;
}

double sub_2447F587C@<D0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265195720;
      uint64_t v9 = 2641;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3EFC(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

void sub_2447F5954(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v6 = *(_DWORD *)(a3 + 8);
  if (!(!v5 & v4))
  {
    switch(v6)
    {
      case 0:
        goto LABEL_5;
      case 1:
        a1 += 80;
        goto LABEL_5;
      case 2:
        uint64_t v7 = (_WORD *)(a1 + 160);
        goto LABEL_17;
      case 3:
        uint64_t v7 = (_WORD *)(a1 + 162);
        goto LABEL_17;
      case 4:
        uint64_t v7 = (_WORD *)(a1 + 164);
        goto LABEL_17;
      case 5:
        a1 += 168;
        goto LABEL_5;
      case 6:
        a1 += 248;
        goto LABEL_5;
      default:
        JUMPOUT(0);
    }
  }
  switch(v6)
  {
    case 65528:
      a1 += 328;
      goto LABEL_5;
    case 65529:
      a1 += 408;
      goto LABEL_5;
    case 65530:
      a1 += 488;
      goto LABEL_5;
    case 65531:
      a1 += 568;
LABEL_5:
      sub_24484B03C(a1, a2, a4);
      break;
    case 65532:
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 648), a4);
      break;
    case 65533:
      uint64_t v7 = (_WORD *)(a1 + 652);
LABEL_17:
      sub_244CB3F40(a2, v7, a4);
      break;
    default:
      *(_DWORD *)a4 = 0;
      *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-common"
                            "/app-common/zap-generated/cluster-objects.cpp";
      *(_DWORD *)(a4 + 16) = 2690;
      break;
  }
}

void sub_2447F5A74(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  int v7 = 0;
  a4[1] = 0;
  a4[2] = 0;
  *a4 = 0;
  sub_244CB7594(a2, a3, 21, &v7, (uint64_t)a4);
  if (!*(_DWORD *)a4)
  {
    *a4 = 0;
    a4[1] = 0;
    a4[2] = 0;
    sub_2447F5BC4(a1, (uint64_t)a4);
    if (!*(_DWORD *)a4)
    {
      *a4 = 0;
      a4[1] = 0;
      a4[2] = 0;
      sub_2447F5C00((unsigned __int16 *)(a1 + 16), (uint64_t)a4);
      if (!*(_DWORD *)a4)
      {
        *a4 = 0;
        a4[1] = 0;
        a4[2] = 0;
        if (*(unsigned char *)(a1 + 20) == 3)
        {
          *(_DWORD *)a4 = 1415;
          a4[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
          *((_DWORD *)a4 + 4) = 75;
        }
        else
        {
          sub_244CB68B8();
          if (!*(_DWORD *)a4)
          {
            *a4 = 0;
            a4[1] = 0;
            a4[2] = 0;
            sub_2447F5C40(a2, 4, *(unsigned char *)(a1 + 96), a1 + 24, (uint64_t)a4);
            if (!*(_DWORD *)a4)
            {
              *a4 = 0;
              a4[1] = 0;
              a4[2] = 0;
              sub_244CB68B8();
              if (!*(_DWORD *)a4) {
                sub_244CB7708((uint64_t)a2, v7, (uint64_t)a4);
              }
            }
          }
        }
      }
    }
  }
}

void sub_2447F5BC4(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  if (*(unsigned char *)(a1 + 8))
  {
    if (*(void *)a1 == -1)
    {
      *(_DWORD *)a2 = 1415;
      *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
      *(_DWORD *)(a2 + 16) = 193;
    }
    else
    {
      sub_244CB68CC();
    }
  }
  else
  {
    sub_244CB710C();
  }
}

void sub_2447F5C00(unsigned __int16 *a1@<X2>, uint64_t a2@<X8>)
{
  if (*((unsigned char *)a1 + 2))
  {
    if (*a1 == 0xFFFF)
    {
      *(_DWORD *)a2 = 1415;
      *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
      *(_DWORD *)(a2 + 16) = 193;
    }
    else
    {
      sub_244CB6904();
    }
  }
  else
  {
    sub_244CB710C();
  }
}

void sub_2447F5C40(void *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  if (*(unsigned char *)(a4 + 64))
  {
    v5[0] = 1;
    v5[1] = a3;
    sub_2447F4B98(a4, a1, a2, v5, a5);
  }
  else
  {
    sub_244CB710C();
  }
}

double sub_2447F5CB0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 != 1)
  {
    while (2)
    {
      long long v10 = xmmword_265195738;
      uint64_t v11 = 2720;
      if (!v6)
      {
        switch((char)v12)
        {
          case 1:
            sub_2447F5E48(a2, a1, (uint64_t)&v10);
            goto LABEL_11;
          case 2:
            sub_2447EF9E0(a2, (__int16 *)(a1 + 16), (uint64_t)&v8);
            goto LABEL_10;
          case 3:
            sub_2447F5F24(a2, (unsigned char *)(a1 + 20), &v8);
            goto LABEL_10;
          case 4:
            sub_2447F5F88(a2, a1 + 24, &v8);
            goto LABEL_10;
          default:
            if (v12 != 254) {
              goto LABEL_11;
            }
            sub_244CB3E8C(a2, (unsigned char *)(a1 + 224), (uint64_t)&v8);
LABEL_10:
            long long v10 = v8;
            uint64_t v11 = v9;
LABEL_11:
            double result = *(double *)&v10;
            *(_OWORD *)a3 = v10;
            *(void *)(a3 + 16) = v11;
            if (*(_DWORD *)a3) {
              return result;
            }
            sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
            int v6 = v14;
            if (v14 == 1) {
              goto LABEL_13;
            }
            continue;
        }
      }
      break;
    }
    sub_24484AFEC();
  }
LABEL_13:
  double result = *(double *)&v12;
  *(_OWORD *)a3 = v12;
  *(void *)(a3 + 16) = v13;
  return result;
}

uint64_t sub_2447F5E48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = sub_244CB3B68(a1);
  if (result == 20)
  {
    if (*(unsigned char *)(a2 + 8)) {
      *(unsigned char *)(a2 + 8) = 0;
    }
    *(_DWORD *)a3 = 0;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
    int v7 = 168;
LABEL_5:
    *(_DWORD *)(a3 + 16) = v7;
    return result;
  }
  *(void *)a3 = 0;
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  uint64_t result = sub_244CB3EFC(a1, (void *)a2, a3);
  if (!*(_DWORD *)a3)
  {
    if (!*(unsigned char *)(a2 + 8)) {
      sub_24479484C();
    }
    if (*(void *)a2 == -1)
    {
      *(_DWORD *)a3 = 1415;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
      int v7 = 175;
    }
    else
    {
      *(_DWORD *)a3 = 0;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
      int v7 = 177;
    }
    goto LABEL_5;
  }
  return result;
}

uint64_t sub_2447F5F24@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  uint64_t result = sub_2446D1AAC(a1, a2, a3);
  if (!*(_DWORD *)a3)
  {
    unsigned int v6 = *a2;
    if (v6 >= 3) {
      LOBYTE(v6) = 3;
    }
    *a2 = v6;
    *(_DWORD *)a3 = 0;
    a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
    *((_DWORD *)a3 + 4) = 61;
  }
  return result;
}

void sub_2447F5F88(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if (sub_244CB3B68(a1) == 20)
  {
    if (*(unsigned char *)(a2 + 192)) {
      *(unsigned char *)(a2 + 192) = 0;
    }
    int v6 = 168;
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)(a2 + 48) = 0u;
    *(_OWORD *)(a2 + 64) = 0u;
    *(_OWORD *)(a2 + 80) = 0u;
    *(_OWORD *)(a2 + 96) = 0u;
    *(_OWORD *)(a2 + 112) = 0u;
    *(_OWORD *)(a2 + 128) = 0u;
    *(_OWORD *)(a2 + 144) = 0u;
    *(_OWORD *)(a2 + 160) = 0u;
    *(_OWORD *)(a2 + 176) = 0u;
    *(unsigned char *)(a2 + 192) = 1;
    sub_2447F4E40((unsigned char *)a2, a1, (uint64_t)a3);
    if (*(_DWORD *)a3) {
      return;
    }
    int v6 = 177;
  }
  *(_DWORD *)a3 = 0;
  a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
  *((_DWORD *)a3 + 4) = v6;
}

void sub_2447F6034(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  int v7 = 0;
  a4[1] = 0;
  a4[2] = 0;
  *a4 = 0;
  sub_244CB7594(a2, a3, 21, &v7, (uint64_t)a4);
  if (!*(_DWORD *)a4)
  {
    *a4 = 0;
    a4[1] = 0;
    a4[2] = 0;
    sub_2447F5BC4(a1, (uint64_t)a4);
    if (!*(_DWORD *)a4)
    {
      *a4 = 0;
      a4[1] = 0;
      a4[2] = 0;
      sub_2447F5C00((unsigned __int16 *)(a1 + 16), (uint64_t)a4);
      if (!*(_DWORD *)a4)
      {
        *a4 = 0;
        a4[1] = 0;
        a4[2] = 0;
        if (*(unsigned char *)(a1 + 20) == 3)
        {
          *(_DWORD *)a4 = 1415;
          a4[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
          *((_DWORD *)a4 + 4) = 75;
        }
        else
        {
          sub_244CB68B8();
          if (!*(_DWORD *)a4)
          {
            *a4 = 0;
            a4[1] = 0;
            a4[2] = 0;
            sub_2447F6184(a2, 4, *(unsigned char *)(a1 + 56), a1 + 24, (uint64_t)a4);
            if (!*(_DWORD *)a4)
            {
              *a4 = 0;
              a4[1] = 0;
              a4[2] = 0;
              sub_244CB68B8();
              if (!*(_DWORD *)a4) {
                sub_244CB7708((uint64_t)a2, v7, (uint64_t)a4);
              }
            }
          }
        }
      }
    }
  }
}

void sub_2447F6184(char *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  if (*(unsigned char *)(a4 + 24))
  {
    v5[0] = 1;
    v5[1] = a3;
    sub_2447F5154(a4, a1, a2, v5, a5);
  }
  else
  {
    sub_244CB710C();
  }
}

double sub_2447F61F4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 != 1)
  {
    while (2)
    {
      long long v10 = xmmword_265195750;
      uint64_t v11 = 2775;
      if (!v6)
      {
        switch((char)v12)
        {
          case 1:
            sub_2447F5E48(a2, a1, (uint64_t)&v10);
            goto LABEL_11;
          case 2:
            sub_2447EF9E0(a2, (__int16 *)(a1 + 16), (uint64_t)&v8);
            goto LABEL_10;
          case 3:
            sub_2447F5F24(a2, (unsigned char *)(a1 + 20), &v8);
            goto LABEL_10;
          case 4:
            sub_2447F638C(a2, a1 + 24, &v8);
            goto LABEL_10;
          default:
            if (v12 != 254) {
              goto LABEL_11;
            }
            sub_244CB3E8C(a2, (unsigned char *)(a1 + 56), (uint64_t)&v8);
LABEL_10:
            long long v10 = v8;
            uint64_t v11 = v9;
LABEL_11:
            double result = *(double *)&v10;
            *(_OWORD *)a3 = v10;
            *(void *)(a3 + 16) = v11;
            if (*(_DWORD *)a3) {
              return result;
            }
            sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
            int v6 = v14;
            if (v14 == 1) {
              goto LABEL_13;
            }
            continue;
        }
      }
      break;
    }
    sub_24484AFEC();
  }
LABEL_13:
  double result = *(double *)&v12;
  *(_OWORD *)a3 = v12;
  *(void *)(a3 + 16) = v13;
  return result;
}

void sub_2447F638C(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if (sub_244CB3B68(a1) == 20)
  {
    if (*(unsigned char *)(a2 + 24)) {
      *(unsigned char *)(a2 + 24) = 0;
    }
    int v6 = 168;
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
    *(void *)(a2 + 8) = 0;
    *(void *)(a2 + 16) = 0;
    *(void *)a2 = 0;
    *(unsigned char *)(a2 + 24) = 1;
    sub_2447F5338(a2, a1, (uint64_t)a3);
    if (*(_DWORD *)a3) {
      return;
    }
    int v6 = 177;
  }
  *(_DWORD *)a3 = 0;
  a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
  *((_DWORD *)a3 + 4) = v6;
}

void sub_2447F6424(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  int v7 = 0;
  a4[1] = 0;
  a4[2] = 0;
  *a4 = 0;
  sub_244CB7594(a2, a3, 21, &v7, (uint64_t)a4);
  if (!*(_DWORD *)a4)
  {
    *a4 = 0;
    a4[1] = 0;
    a4[2] = 0;
    sub_244CB68CC();
    if (!*(_DWORD *)a4)
    {
      *a4 = 0;
      a4[1] = 0;
      a4[2] = 0;
      sub_2447F6524(a2, (unsigned char *)(a1 + 8), (uint64_t)a4);
      if (!*(_DWORD *)a4)
      {
        *a4 = 0;
        a4[1] = 0;
        a4[2] = 0;
        sub_2447F6524(a2, (unsigned char *)(a1 + 32), (uint64_t)a4);
        if (!*(_DWORD *)a4)
        {
          *a4 = 0;
          a4[1] = 0;
          a4[2] = 0;
          sub_244CB68B8();
          if (!*(_DWORD *)a4) {
            sub_244CB7708((uint64_t)a2, v7, (uint64_t)a4);
          }
        }
      }
    }
  }
}

char *sub_2447F6524@<X0>(char *result@<X0>, unsigned char *a2@<X2>, uint64_t a3@<X8>)
{
  if (*a2)
  {
    char v4 = result;
    char v5 = sub_2446D18A4(a2);
    int v6 = *(char **)v5;
    unint64_t v7 = *((void *)v5 + 1);
    return sub_244CB6D80(v4, v6, v7, a3);
  }
  else
  {
    *(_DWORD *)a3 = 0;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    *(_DWORD *)(a3 + 16) = 171;
  }
  return result;
}

double sub_2447F65AC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  for (int i = v16; v16 != 1; int i = v16)
  {
    long long v12 = xmmword_265195768;
    uint64_t v13 = 2829;
    if (i) {
      sub_24484AFEC();
    }
    if (v14 > 1u)
    {
      if (v14 == 2)
      {
        *(unsigned char *)(a1 + 32) = 1;
        *(void *)(a1 + 40) = 0;
        *(void *)(a1 + 48) = 0;
        uint64_t v7 = a2;
        long long v8 = (_OWORD *)(a1 + 40);
        goto LABEL_12;
      }
      if (v14 == 254)
      {
        sub_244CB3E8C(a2, (unsigned char *)(a1 + 56), (uint64_t)&v10);
LABEL_13:
        long long v12 = v10;
        uint64_t v13 = v11;
      }
    }
    else if ((_BYTE)v14)
    {
      if (v14 == 1)
      {
        *(unsigned char *)(a1 + 8) = 1;
        *(void *)(a1 + 16) = 0;
        *(void *)(a1 + 24) = 0;
        uint64_t v7 = a2;
        long long v8 = (_OWORD *)(a1 + 16);
LABEL_12:
        sub_244CB41F0(v7, v8, &v10);
        goto LABEL_13;
      }
    }
    else
    {
      sub_244CB3EFC(a2, (void *)a1, (uint64_t)&v12);
    }
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
    if (*(_DWORD *)a3) {
      return result;
    }
    sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  }
  double result = *(double *)&v14;
  *(_OWORD *)a3 = v14;
  *(void *)(a3 + 16) = v15;
  return result;
}

double sub_2447F671C@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB6904();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB6D80(v7, *(char **)(a1 + 8), *(void *)(a1 + 16), (uint64_t)&v11);
      long long v8 = v11;
      uint64_t v9 = v12;
    }
  }
  sub_2447F68A4((uint64_t)&v7, 2, (unsigned char *)(a1 + 24));
  if (!v8)
  {
    sub_244CB6904();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB6904();
      long long v8 = v11;
      uint64_t v9 = v12;
    }
  }
  sub_2447EF794((uint64_t)&v7, 5, (unsigned char *)(a1 + 30));
  if (!v8)
  {
    sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2447F68A4(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  uint64_t v3 = a1 + 8;
  if (!*(_DWORD *)(a1 + 8))
  {
    if (*a3 == 7)
    {
      LODWORD(v5) = 1415;
      *((void *)&v5 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
      LODWORD(v6) = 75;
    }
    else
    {
      sub_244CB68B8();
    }
    double result = *(double *)&v5;
    *(_OWORD *)uint64_t v3 = v5;
    *(void *)(v3 + 16) = v6;
  }
  return result;
}

double sub_2447F6920@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_13:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265195780;
      uint64_t v11 = 2886;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v12)
      {
        case 0:
          sub_244CB3F40(a2, (_WORD *)a1, (uint64_t)&v10);
          break;
        case 1:
          sub_244CB41F0(a2, (_OWORD *)(a1 + 8), &v8);
          goto LABEL_10;
        case 2:
          sub_2447F6AD4(a2, (unsigned char *)(a1 + 24), &v8);
          goto LABEL_10;
        case 3:
          sub_244CB3F40(a2, (_WORD *)(a1 + 26), (uint64_t)&v8);
          goto LABEL_10;
        case 4:
          sub_24484B6B0(a2, (_WORD *)(a1 + 28), &v8);
          goto LABEL_10;
        case 5:
          sub_2446D1A48(a2, (unsigned char *)(a1 + 30), &v8);
LABEL_10:
          long long v10 = v8;
          uint64_t v11 = v9;
          break;
        default:
          break;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_13;
      }
    }
  }
  return result;
}

uint64_t sub_2447F6AD4@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  uint64_t result = sub_2446D1AAC(a1, a2, a3);
  if (!*(_DWORD *)a3)
  {
    unsigned int v6 = *a2;
    if (v6 >= 7) {
      LOBYTE(v6) = 7;
    }
    *a2 = v6;
    *(_DWORD *)a3 = 0;
    a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
    *((_DWORD *)a3 + 4) = 61;
  }
  return result;
}

double sub_2447F6B38@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB6904();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB6D80(v7, *(char **)(a1 + 8), *(void *)(a1 + 16), (uint64_t)&v11);
      long long v8 = v11;
      uint64_t v9 = v12;
    }
  }
  sub_2447F06A4((uint64_t)&v7, 2, (unsigned char *)(a1 + 24));
  sub_2447F11F4((uint64_t)&v7, 3u, (uint64_t *)(a1 + 32));
  if (!v8)
  {
    sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2447F6C68@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_11:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265195798;
      uint64_t v11 = 2945;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v12)
      {
        case 0:
          sub_244CB3F40(a2, (_WORD *)a1, (uint64_t)&v10);
          break;
        case 1:
          sub_244CB41F0(a2, (_OWORD *)(a1 + 8), &v8);
          goto LABEL_8;
        case 2:
          sub_2447F5F24(a2, (unsigned char *)(a1 + 24), &v8);
          goto LABEL_8;
        case 3:
          sub_24484B03C(a1 + 32, a2, (uint64_t)&v8);
LABEL_8:
          long long v10 = v8;
          uint64_t v11 = v9;
          break;
        default:
          break;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_11;
      }
    }
  }
  return result;
}

double sub_2447F6DDC@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB6904();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_24483F918((unsigned char *)(a1 + 4), (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
        long long v8 = v11;
        uint64_t v9 = v12;
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2447F6EEC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_2651957B0;
      uint64_t v11 = 2996;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        *(unsigned char *)(a1 + 4) = 1;
        *(_DWORD *)(a1 + 8) = 0;
        sub_244CB3FB0(a2, (_DWORD *)(a1 + 8), (uint64_t)&v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB3F40(a2, (_WORD *)a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_2447F7008@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB6904();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_24483F918((unsigned char *)(a1 + 4), (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB6904();
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
          long long v8 = v11;
          uint64_t v9 = v12;
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2447F7144@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  for (int i = v14; v14 != 1; int i = v14)
  {
    long long v10 = xmmword_2651957C8;
    uint64_t v11 = 3036;
    if (i) {
      sub_24484AFEC();
    }
    if (v12 == 2)
    {
      sub_244CB3F40(a2, (_WORD *)(a1 + 12), (uint64_t)&v8);
    }
    else
    {
      if (v12 != 1)
      {
        if (!(_BYTE)v12) {
          sub_244CB3F40(a2, (_WORD *)a1, (uint64_t)&v10);
        }
        goto LABEL_10;
      }
      *(unsigned char *)(a1 + 4) = 1;
      *(_DWORD *)(a1 + 8) = 0;
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 8), (uint64_t)&v8);
    }
    long long v10 = v8;
    uint64_t v11 = v9;
LABEL_10:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
    if (*(_DWORD *)a3) {
      return result;
    }
    sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  }
  double result = *(double *)&v12;
  *(_OWORD *)a3 = v12;
  *(void *)(a3 + 16) = v13;
  return result;
}

double sub_2447F7288@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_2651957E0;
      uint64_t v11 = 3079;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        *(unsigned char *)(a1 + 4) = 1;
        *(_DWORD *)(a1 + 8) = 0;
        sub_244CB3FB0(a2, (_DWORD *)(a1 + 8), (uint64_t)&v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB3F40(a2, (_WORD *)a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_2447F73A4@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB6904();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_24483F918((unsigned char *)(a1 + 4), (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB694C();
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
          long long v8 = v11;
          uint64_t v9 = v12;
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2447F74E0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  for (int i = v16; v16 != 1; int i = v16)
  {
    long long v12 = xmmword_2651957F8;
    uint64_t v13 = 3119;
    if (i) {
      sub_24484AFEC();
    }
    if (v14 == 2)
    {
      uint64_t v7 = a2;
      long long v8 = (_DWORD *)(a1 + 12);
    }
    else
    {
      if (v14 != 1)
      {
        if (!(_BYTE)v14) {
          sub_244CB3F40(a2, (_WORD *)a1, (uint64_t)&v12);
        }
        goto LABEL_10;
      }
      *(unsigned char *)(a1 + 4) = 1;
      *(_DWORD *)(a1 + 8) = 0;
      uint64_t v7 = a2;
      long long v8 = (_DWORD *)(a1 + 8);
    }
    sub_244CB3FB0(v7, v8, (uint64_t)&v10);
    long long v12 = v10;
    uint64_t v13 = v11;
LABEL_10:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
    if (*(_DWORD *)a3) {
      return result;
    }
    sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  }
  double result = *(double *)&v14;
  *(_OWORD *)a3 = v14;
  *(void *)(a3 + 16) = v15;
  return result;
}

double sub_2447F7620@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265195810;
      uint64_t v11 = 3162;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        *(unsigned char *)(a1 + 4) = 1;
        *(_DWORD *)(a1 + 8) = 0;
        sub_244CB3FB0(a2, (_DWORD *)(a1 + 8), (uint64_t)&v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB3F40(a2, (_WORD *)a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_2447F773C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265195828;
      uint64_t v11 = 3201;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        *(unsigned char *)(a1 + 4) = 1;
        *(_DWORD *)(a1 + 8) = 0;
        sub_244CB3FB0(a2, (_DWORD *)(a1 + 8), (uint64_t)&v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB3F40(a2, (_WORD *)a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_2447F7858@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  for (int i = v16; v16 != 1; int i = v16)
  {
    long long v12 = xmmword_265195840;
    uint64_t v13 = 3241;
    if (i) {
      sub_24484AFEC();
    }
    if (v14 == 2)
    {
      uint64_t v7 = a2;
      long long v8 = (_DWORD *)(a1 + 12);
    }
    else
    {
      if (v14 != 1)
      {
        if (!(_BYTE)v14) {
          sub_244CB3F40(a2, (_WORD *)a1, (uint64_t)&v12);
        }
        goto LABEL_10;
      }
      *(unsigned char *)(a1 + 4) = 1;
      *(_DWORD *)(a1 + 8) = 0;
      uint64_t v7 = a2;
      long long v8 = (_DWORD *)(a1 + 8);
    }
    sub_244CB3FB0(v7, v8, (uint64_t)&v10);
    long long v12 = v10;
    uint64_t v13 = v11;
LABEL_10:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
    if (*(_DWORD *)a3) {
      return result;
    }
    sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  }
  double result = *(double *)&v14;
  *(_OWORD *)a3 = v14;
  *(void *)(a3 + 16) = v15;
  return result;
}

double sub_2447F7998@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265195858;
      uint64_t v11 = 3284;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        *(unsigned char *)(a1 + 4) = 1;
        *(_DWORD *)(a1 + 8) = 0;
        sub_244CB3FB0(a2, (_DWORD *)(a1 + 8), (uint64_t)&v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB3F40(a2, (_WORD *)a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_2447F7AB4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265195870;
      uint64_t v11 = 3323;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        *(unsigned char *)(a1 + 4) = 1;
        *(_DWORD *)(a1 + 8) = 0;
        sub_244CB3FB0(a2, (_DWORD *)(a1 + 8), (uint64_t)&v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB3F40(a2, (_WORD *)a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_2447F7BD0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  for (int i = v16; v16 != 1; int i = v16)
  {
    long long v12 = xmmword_265195888;
    uint64_t v13 = 3363;
    if (i) {
      sub_24484AFEC();
    }
    if (v14 == 2)
    {
      uint64_t v7 = a2;
      long long v8 = (_DWORD *)(a1 + 12);
    }
    else
    {
      if (v14 != 1)
      {
        if (!(_BYTE)v14) {
          sub_244CB3F40(a2, (_WORD *)a1, (uint64_t)&v12);
        }
        goto LABEL_10;
      }
      *(unsigned char *)(a1 + 4) = 1;
      *(_DWORD *)(a1 + 8) = 0;
      uint64_t v7 = a2;
      long long v8 = (_DWORD *)(a1 + 8);
    }
    sub_244CB3FB0(v7, v8, (uint64_t)&v10);
    long long v12 = v10;
    uint64_t v13 = v11;
LABEL_10:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
    if (*(_DWORD *)a3) {
      return result;
    }
    sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  }
  double result = *(double *)&v14;
  *(_OWORD *)a3 = v14;
  *(void *)(a3 + 16) = v15;
  return result;
}

double sub_2447F7D10@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_2651958A0;
      uint64_t v11 = 3406;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        *(unsigned char *)(a1 + 4) = 1;
        *(_DWORD *)(a1 + 8) = 0;
        sub_244CB3FB0(a2, (_DWORD *)(a1 + 8), (uint64_t)&v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB3F40(a2, (_WORD *)a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_2447F7E2C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  for (int i = v16; v16 != 1; int i = v16)
  {
    long long v12 = xmmword_2651958B8;
    uint64_t v13 = 3446;
    if (i) {
      sub_24484AFEC();
    }
    if (v14 == 2)
    {
      uint64_t v7 = a2;
      long long v8 = (_DWORD *)(a1 + 12);
    }
    else
    {
      if (v14 != 1)
      {
        if (!(_BYTE)v14) {
          sub_244CB3F40(a2, (_WORD *)a1, (uint64_t)&v12);
        }
        goto LABEL_10;
      }
      *(unsigned char *)(a1 + 4) = 1;
      *(_DWORD *)(a1 + 8) = 0;
      uint64_t v7 = a2;
      long long v8 = (_DWORD *)(a1 + 8);
    }
    sub_244CB3FB0(v7, v8, (uint64_t)&v10);
    long long v12 = v10;
    uint64_t v13 = v11;
LABEL_10:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
    if (*(_DWORD *)a3) {
      return result;
    }
    sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  }
  double result = *(double *)&v14;
  *(_OWORD *)a3 = v14;
  *(void *)(a3 + 16) = v15;
  return result;
}

void sub_2447F7F6C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4 = *(_DWORD *)(a3 + 8);
  if (v4 <= 65527)
  {
    if (v4)
    {
      if (v4 != 1)
      {
        if (v4 == 2)
        {
          sub_244CB41F0(a2, (_OWORD *)(a1 + 160), (void *)a4);
        }
        else
        {
LABEL_16:
          *(_DWORD *)a4 = 0;
          *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-co"
                                "mmon/app-common/zap-generated/cluster-objects.cpp";
          *(_DWORD *)(a4 + 16) = 3495;
        }
        return;
      }
      a1 += 80;
    }
LABEL_4:
    sub_24484B03C(a1, a2, a4);
    return;
  }
  switch(v4)
  {
    case 65528:
      a1 += 176;
      goto LABEL_4;
    case 65529:
      a1 += 256;
      goto LABEL_4;
    case 65530:
      a1 += 336;
      goto LABEL_4;
    case 65531:
      a1 += 416;
      goto LABEL_4;
    case 65532:
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 496), a4);
      break;
    case 65533:
      sub_244CB3F40(a2, (_WORD *)(a1 + 500), a4);
      break;
    default:
      goto LABEL_16;
  }
}

void sub_2447F8050(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  int v7 = 0;
  a4[1] = 0;
  a4[2] = 0;
  *a4 = 0;
  sub_244CB7594(a2, a3, 21, &v7, (uint64_t)a4);
  if (!*(_DWORD *)a4)
  {
    *a4 = 0;
    a4[1] = 0;
    a4[2] = 0;
    sub_244CB6904();
    if (!*(_DWORD *)a4)
    {
      *a4 = 0;
      a4[1] = 0;
      a4[2] = 0;
      sub_244CB694C();
      if (!*(_DWORD *)a4)
      {
        *a4 = 0;
        a4[1] = 0;
        a4[2] = 0;
        if (*(unsigned char *)(a1 + 8) == 4)
        {
          *(_DWORD *)a4 = 1415;
          a4[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
          *((_DWORD *)a4 + 4) = 75;
        }
        else
        {
          sub_244CB68B8();
          if (!*(_DWORD *)a4) {
            sub_244CB7708((uint64_t)a2, v7, (uint64_t)a4);
          }
        }
      }
    }
  }
}

double sub_2447F8154@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  for (int i = v14; v14 != 1; int i = v14)
  {
    long long v10 = xmmword_2651958D0;
    uint64_t v11 = 3523;
    if (i) {
      sub_24484AFEC();
    }
    if (v12 == 2)
    {
      sub_2446D1A48(a2, (unsigned char *)(a1 + 8), &v8);
    }
    else
    {
      if (v12 != 1)
      {
        if (!(_BYTE)v12) {
          sub_244CB3F40(a2, (_WORD *)a1, (uint64_t)&v10);
        }
        goto LABEL_10;
      }
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 4), (uint64_t)&v8);
    }
    long long v10 = v8;
    uint64_t v11 = v9;
LABEL_10:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
    if (*(_DWORD *)a3) {
      return result;
    }
    sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  }
  double result = *(double *)&v12;
  *(_OWORD *)a3 = v12;
  *(void *)(a3 + 16) = v13;
  return result;
}

void sub_2447F8284(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  int v7 = 0;
  a4[1] = 0;
  a4[2] = 0;
  *a4 = 0;
  sub_244CB7594(a2, a3, 21, &v7, (uint64_t)a4);
  if (!*(_DWORD *)a4)
  {
    *a4 = 0;
    a4[1] = 0;
    a4[2] = 0;
    sub_244CB6904();
    if (!*(_DWORD *)a4)
    {
      *a4 = 0;
      a4[1] = 0;
      a4[2] = 0;
      sub_244CB694C();
      if (!*(_DWORD *)a4)
      {
        *a4 = 0;
        a4[1] = 0;
        a4[2] = 0;
        if (*(unsigned char *)(a1 + 8) == 4)
        {
LABEL_5:
          *(_DWORD *)a4 = 1415;
          a4[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
          *((_DWORD *)a4 + 4) = 75;
          return;
        }
        sub_244CB68B8();
        if (!*(_DWORD *)a4)
        {
          *a4 = 0;
          a4[1] = 0;
          a4[2] = 0;
          if (*(unsigned char *)(a1 + 9) == 2) {
            goto LABEL_5;
          }
          sub_244CB68B8();
          if (!*(_DWORD *)a4) {
            sub_244CB7708((uint64_t)a2, v7, (uint64_t)a4);
          }
        }
      }
    }
  }
}

double sub_2447F83B8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_11:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_2651958E8;
      uint64_t v11 = 3569;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v12)
      {
        case 0:
          sub_244CB3F40(a2, (_WORD *)a1, (uint64_t)&v10);
          break;
        case 1:
          sub_244CB3FB0(a2, (_DWORD *)(a1 + 4), (uint64_t)&v8);
          goto LABEL_8;
        case 2:
          sub_2446D1A48(a2, (unsigned char *)(a1 + 8), &v8);
          goto LABEL_8;
        case 3:
          sub_2447F1DCC(a2, (unsigned char *)(a1 + 9), &v8);
LABEL_8:
          long long v10 = v8;
          uint64_t v11 = v9;
          break;
        default:
          break;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_11;
      }
    }
  }
  return result;
}

double sub_2447F852C@<D0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  sub_244CB7594(a1, a2, 21, &v8, (uint64_t)&v9);
  long long v6 = v9;
  uint64_t v7 = v10;
  if (!v9)
  {
    sub_244CB6904();
    uint64_t v7 = v10;
    long long v6 = v9;
    if (!v9)
    {
      sub_244CB6904();
      uint64_t v7 = v10;
      long long v6 = v9;
      if (!v9)
      {
        sub_244CB7708((uint64_t)a1, v8, (uint64_t)&v9);
        long long v6 = v9;
        uint64_t v7 = v10;
      }
    }
  }
  double result = *(double *)&v6;
  *(_OWORD *)a3 = v6;
  *(void *)(a3 + 16) = v7;
  return result;
}

double sub_2447F863C@<D0>(_WORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265195900;
      uint64_t v11 = 3622;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_244CB3F40(a2, a1 + 1, (uint64_t)&v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB3F40(a2, a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_2447F874C@<D0>(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  sub_2447F8840((uint64_t)&v7, 0, a1);
  if (!v8)
  {
    sub_24484B718(a1 + 1, (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
      long long v8 = v11;
      uint64_t v9 = v12;
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2447F8840(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  uint64_t v3 = a1 + 8;
  if (!*(_DWORD *)(a1 + 8))
  {
    if (*a3 == 6)
    {
      LODWORD(v5) = 1415;
      *((void *)&v5 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
      LODWORD(v6) = 75;
    }
    else
    {
      sub_244CB68B8();
    }
    double result = *(double *)&v5;
    *(_OWORD *)uint64_t v3 = v5;
    *(void *)(v3 + 16) = v6;
  }
  return result;
}

double sub_2447F88BC@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265195918;
      uint64_t v11 = 3663;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_2447F89CC(a2, a1 + 1, (uint64_t)&v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_2447F0A54(a2, a1, &v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

uint64_t sub_2447F89CC@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = sub_244CB3B68(a1);
  if (result == 20)
  {
    if (a2[1]) {
      a2[1] = 0;
    }
    *(_DWORD *)a3 = 0;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
    int v7 = 168;
LABEL_5:
    *(_DWORD *)(a3 + 16) = v7;
    return result;
  }
  *(void *)a3 = 0;
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  *(_WORD *)a2 = 256;
  uint64_t result = sub_24484B778(a1, a2, (void *)a3);
  if (!*(_DWORD *)a3)
  {
    if (!a2[1]) {
      sub_24479484C();
    }
    if (*a2 == 255)
    {
      *(_DWORD *)a3 = 1415;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
      int v7 = 175;
    }
    else
    {
      *(_DWORD *)a3 = 0;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
      int v7 = 177;
    }
    goto LABEL_5;
  }
  return result;
}

void sub_2447F8AA4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  int v4 = (_WORD *)a1;
  int v6 = *(_DWORD *)(a3 + 8);
  switch(v6)
  {
    case 0:
      goto LABEL_51;
    case 1:
      int v7 = (_OWORD *)(a1 + 8);
      goto LABEL_26;
    case 2:
      *a4 = 0;
      a4[1] = 0;
      a4[2] = 0;
      sub_24484B11C(a2, (_WORD *)(a1 + 24), a4);
      if (!*(_DWORD *)a4)
      {
        *(_DWORD *)a4 = 0;
        a4[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
        int v9 = 61;
LABEL_38:
        *((_DWORD *)a4 + 4) = v9;
      }
      return;
    case 3:
      int v7 = (_OWORD *)(a1 + 32);
      goto LABEL_26;
    case 4:
      int v4 = (_WORD *)(a1 + 48);
      goto LABEL_51;
    case 5:
      int v7 = (_OWORD *)(a1 + 56);
      goto LABEL_26;
    case 6:
      int v7 = (_OWORD *)(a1 + 72);
      goto LABEL_26;
    case 7:
      int v4 = (_WORD *)(a1 + 88);
      goto LABEL_51;
    case 8:
      int v7 = (_OWORD *)(a1 + 96);
      goto LABEL_26;
    case 9:
      long long v10 = (_DWORD *)(a1 + 112);
      goto LABEL_47;
    case 10:
      int v7 = (_OWORD *)(a1 + 120);
      goto LABEL_26;
    case 11:
      int v7 = (_OWORD *)(a1 + 136);
      goto LABEL_26;
    case 12:
      int v7 = (_OWORD *)(a1 + 152);
      goto LABEL_26;
    case 13:
      int v7 = (_OWORD *)(a1 + 168);
      goto LABEL_26;
    case 14:
      int v7 = (_OWORD *)(a1 + 184);
      goto LABEL_26;
    case 15:
      int v7 = (_OWORD *)(a1 + 200);
      goto LABEL_26;
    case 16:
      uint64_t v11 = (char *)(a1 + 216);
      goto LABEL_22;
    case 17:
      uint64_t v11 = (char *)(a1 + 217);
LABEL_22:
      sub_244CB3C0C(a2, v11, (uint64_t)a4);
      break;
    case 18:
      int v7 = (_OWORD *)(a1 + 224);
LABEL_26:
      sub_244CB41F0(a2, v7, a4);
      break;
    case 19:
      long long v12 = (_WORD *)(a1 + 240);
      sub_2447F863C(v12, a2, (uint64_t)a4);
      break;
    case 20:
      uint64_t v13 = (unsigned char *)(a1 + 244);
      sub_2447F88BC(v13, a2, (uint64_t)a4);
      break;
    case 21:
      long long v10 = (_DWORD *)(a1 + 248);
LABEL_47:
      sub_244CB3FB0(a2, v10, (uint64_t)a4);
      break;
    case 22:
      int v4 = (_WORD *)(a1 + 252);
LABEL_51:
      sub_244CB3F40(a2, v4, (uint64_t)a4);
      break;
    default:
      switch(v6)
      {
        case 65528:
          uint64_t v8 = a1 + 256;
          break;
        case 65529:
          uint64_t v8 = a1 + 336;
          break;
        case 65530:
          uint64_t v8 = a1 + 416;
          break;
        case 65531:
          uint64_t v8 = a1 + 496;
          break;
        case 65532:
          long long v10 = (_DWORD *)(a1 + 576);
          goto LABEL_47;
        case 65533:
          int v4 = (_WORD *)(a1 + 580);
          goto LABEL_51;
        default:
          *(_DWORD *)a4 = 0;
          a4[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-common/app-commo"
                  "n/zap-generated/cluster-objects.cpp";
          int v9 = 3772;
          goto LABEL_38;
      }
      sub_24484B03C(v8, a2, (uint64_t)a4);
      break;
  }
}

void sub_2447F8DA8(void *a1@<X1>, uint64_t a2@<X2>, void *a3@<X8>)
{
  int v5 = 0;
  a3[1] = 0;
  a3[2] = 0;
  *a3 = 0;
  sub_244CB7594(a1, a2, 21, &v5, (uint64_t)a3);
  if (!*(_DWORD *)a3)
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
    sub_244CB694C();
    if (!*(_DWORD *)a3) {
      sub_244CB7708((uint64_t)a1, v5, (uint64_t)a3);
    }
  }
}

double sub_2447F8E3C@<D0>(_DWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265195930;
      uint64_t v9 = 3798;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3FB0(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

void *sub_2447F8F14@<X0>(void *a1@<X1>, uint64_t a2@<X2>, void *a3@<X8>)
{
  int v6 = 0;
  a3[1] = 0;
  a3[2] = 0;
  *a3 = 0;
  double result = sub_244CB7594(a1, a2, 21, &v6, (uint64_t)a3);
  if (!*(_DWORD *)a3) {
    return (void *)sub_244CB7708((uint64_t)a1, v6, (uint64_t)a3);
  }
  return result;
}

void sub_2447F8F78(void *a1@<X1>, uint64_t a2@<X2>, void *a3@<X8>)
{
  int v5 = 0;
  a3[1] = 0;
  a3[2] = 0;
  *a3 = 0;
  sub_244CB7594(a1, a2, 21, &v5, (uint64_t)a3);
  if (!*(_DWORD *)a3)
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
    sub_244CB68B8();
    if (!*(_DWORD *)a3) {
      sub_244CB7708((uint64_t)a1, v5, (uint64_t)a3);
    }
  }
}

double sub_2447F900C@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265195948;
      uint64_t v9 = 3854;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3E8C(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

void sub_2447F90E4(void *a1@<X1>, uint64_t a2@<X2>, void *a3@<X8>)
{
  int v5 = 0;
  a3[1] = 0;
  a3[2] = 0;
  *a3 = 0;
  sub_244CB7594(a1, a2, 21, &v5, (uint64_t)a3);
  if (!*(_DWORD *)a3)
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
    sub_244CB65C8();
    if (!*(_DWORD *)a3) {
      sub_244CB7708((uint64_t)a1, v5, (uint64_t)a3);
    }
  }
}

double sub_2447F9178@<D0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265195960;
      uint64_t v9 = 3889;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3C0C(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_2447F9250@<D0>(unsigned char *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB6904();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB6904();
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB694C();
        long long v8 = v11;
        uint64_t v9 = v12;
      }
    }
  }
  sub_2447F944C((uint64_t)&v7, 3u, (uint64_t)(a1 + 8));
  if (!v8)
  {
    sub_24483F80C(a1 + 24, (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_2447F6524(v7, a1 + 32, (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_24484B7DC(a1 + 56, (uint64_t)&v11);
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_24480248C(v7, a1 + 64, (uint64_t)&v11);
          uint64_t v9 = v12;
          long long v8 = v11;
          if (!v11)
          {
            sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
            long long v8 = v11;
            uint64_t v9 = v12;
          }
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2447F944C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = a1 + 8;
  if (!*(_DWORD *)(a1 + 8))
  {
    int v4 = *(void **)a1;
    int v5 = *(unsigned char **)a3;
    uint64_t v6 = *(void *)(a3 + 8);
    int v13 = 0;
    uint64_t v12 = 0;
    long long v11 = 0uLL;
    sub_244CB7594(v4, a2, 22, &v13, (uint64_t)&v11);
    if (!v11)
    {
      if (v6)
      {
        int v7 = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
        while (1)
        {
          long long v11 = 0uLL;
          uint64_t v12 = 0;
          if (*v5 == 4) {
            break;
          }
          sub_244CB68B8();
          if (v11) {
            goto LABEL_12;
          }
          ++v5;
          if (!--v6) {
            goto LABEL_8;
          }
        }
        int v9 = 75;
        int v8 = 1415;
        goto LABEL_11;
      }
LABEL_8:
      long long v11 = 0uLL;
      uint64_t v12 = 0;
      sub_244CB7708((uint64_t)v4, v13, (uint64_t)&v11);
      if (!v11)
      {
        int v8 = 0;
        int v9 = 86;
        int v7 = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/List.h";
LABEL_11:
        LODWORD(v11) = v8;
        *((void *)&v11 + 1) = v7;
        LODWORD(v12) = v9;
      }
    }
LABEL_12:
    double result = *(double *)&v11;
    *(_OWORD *)uint64_t v3 = v11;
    *(void *)(v3 + 16) = v12;
  }
  return result;
}

double sub_2447F955C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_16:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265195978;
      uint64_t v11 = 3936;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v12)
      {
        case 0:
          long long v8 = 0uLL;
          uint64_t v9 = 0;
          sub_24484B11C(a2, (_WORD *)a1, &v8);
          if (!v8)
          {
            LODWORD(v8) = 0;
            *((void *)&v8 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
            LODWORD(v9) = 61;
          }
          goto LABEL_13;
        case 1:
          sub_244CB3F40(a2, (_WORD *)(a1 + 2), (uint64_t)&v10);
          break;
        case 2:
          sub_244CB3FB0(a2, (_DWORD *)(a1 + 4), (uint64_t)&v8);
          goto LABEL_13;
        case 3:
          sub_24484B03C(a1 + 8, a2, (uint64_t)&v8);
          goto LABEL_13;
        case 4:
          *(unsigned char *)(a1 + 88) = 1;
          *(_WORD *)(a1 + 90) = 0;
          sub_244CB3F40(a2, (_WORD *)(a1 + 90), (uint64_t)&v8);
          goto LABEL_13;
        case 5:
          *(unsigned char *)(a1 + 96) = 1;
          *(void *)(a1 + 104) = 0;
          *(void *)(a1 + 112) = 0;
          sub_244CB41F0(a2, (_OWORD *)(a1 + 104), &v8);
          goto LABEL_13;
        case 6:
          *(_WORD *)(a1 + 120) = 1;
          sub_244CB3C0C(a2, (char *)(a1 + 121), (uint64_t)&v8);
          goto LABEL_13;
        case 7:
          sub_2447F978C(a2, a1 + 128, (uint64_t)&v8);
LABEL_13:
          long long v10 = v8;
          uint64_t v11 = v9;
          break;
        default:
          break;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_16;
      }
    }
  }
  return result;
}

void sub_2447F978C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(unsigned char *)a2 = 1;
  *(void *)(a2 + 16) = 0;
  *(void *)(a2 + 8) = 0;
  int v5 = (_OWORD *)(a2 + 8);
  if (sub_244CB3B68(a1) == 16)
  {
    sub_244CB40C8(a1, v5, (void *)a3);
  }
  else
  {
    *(_DWORD *)a3 = 43;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
    *(_DWORD *)(a3 + 16) = 80;
  }
}

double sub_2447F9820@<D0>(unsigned char *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  sub_2447EF794((uint64_t)&v7, 0, a1);
  if (!v8)
  {
    sub_24483F918(a1 + 4, (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_2447F6524(v7, a1 + 16, (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_24483F918(a1 + 40, (uint64_t)&v11);
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_2447F6524(v7, a1 + 48, (uint64_t)&v11);
          uint64_t v9 = v12;
          long long v8 = v11;
          if (!v11)
          {
            sub_24480248C(v7, a1 + 72, (uint64_t)&v11);
            uint64_t v9 = v12;
            long long v8 = v11;
            if (!v11)
            {
              sub_24484B7DC(a1 + 96, (uint64_t)&v11);
              uint64_t v9 = v12;
              long long v8 = v11;
              if (!v11)
              {
                sub_24480248C(v7, a1 + 104, (uint64_t)&v11);
                uint64_t v9 = v12;
                long long v8 = v11;
                if (!v11)
                {
                  sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
                  long long v8 = v11;
                  uint64_t v9 = v12;
                }
              }
            }
          }
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2447F9A1C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v21[0] = 0;
  uint64_t v22 = a2;
  sub_2447ED6F8((uint64_t)v21, (uint64_t)&v18);
  int v6 = v20;
  if (v20 == 1)
  {
LABEL_18:
    double result = *(double *)&v18;
    *(_OWORD *)a3 = v18;
    *(void *)(a3 + 16) = v19;
  }
  else
  {
    while (1)
    {
      long long v16 = xmmword_265195990;
      uint64_t v17 = 4005;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v18)
      {
        case 0:
          sub_2446D1A48(a2, (unsigned char *)a1, &v16);
          break;
        case 1:
          *(unsigned char *)(a1 + 4) = 1;
          *(_DWORD *)(a1 + 8) = 0;
          uint64_t v7 = a2;
          long long v8 = (_DWORD *)(a1 + 8);
          goto LABEL_8;
        case 2:
          *(unsigned char *)(a1 + 16) = 1;
          *(void *)(a1 + 24) = 0;
          *(void *)(a1 + 32) = 0;
          uint64_t v9 = a2;
          int v10 = (_OWORD *)(a1 + 24);
          goto LABEL_10;
        case 3:
          *(unsigned char *)(a1 + 40) = 1;
          *(_DWORD *)(a1 + 44) = 0;
          uint64_t v7 = a2;
          long long v8 = (_DWORD *)(a1 + 44);
LABEL_8:
          sub_244CB3FB0(v7, v8, (uint64_t)&v14);
          goto LABEL_15;
        case 4:
          *(unsigned char *)(a1 + 48) = 1;
          *(void *)(a1 + 56) = 0;
          *(void *)(a1 + 64) = 0;
          uint64_t v9 = a2;
          int v10 = (_OWORD *)(a1 + 56);
LABEL_10:
          sub_244CB41F0(v9, v10, &v14);
          goto LABEL_15;
        case 5:
          uint64_t v11 = a2;
          uint64_t v12 = a1 + 72;
          goto LABEL_14;
        case 6:
          *(_WORD *)(a1 + 96) = 1;
          sub_244CB3C0C(a2, (char *)(a1 + 97), (uint64_t)&v14);
          goto LABEL_15;
        case 7:
          uint64_t v11 = a2;
          uint64_t v12 = a1 + 104;
LABEL_14:
          sub_2447F978C(v11, v12, (uint64_t)&v14);
LABEL_15:
          long long v16 = v14;
          uint64_t v17 = v15;
          break;
        default:
          break;
      }
      double result = *(double *)&v16;
      *(_OWORD *)a3 = v16;
      *(void *)(a3 + 16) = v17;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v21, (uint64_t)&v18);
      int v6 = v20;
      if (v20 == 1) {
        goto LABEL_18;
      }
    }
  }
  return result;
}

double sub_2447F9C28@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB6ADC(a2, *(char **)a1, *(void *)(a1 + 8), (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB694C();
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
        long long v8 = v11;
        uint64_t v9 = v12;
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2447F9D38@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_12:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_2651959A8;
      uint64_t v11 = 4068;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_244CB3FB0(a2, (_DWORD *)(a1 + 16), (uint64_t)&v10);
      }
      else if (!(_BYTE)v12)
      {
        if (sub_244CB3B68(a2) == 16)
        {
          sub_244CB40C8(a2, (_OWORD *)a1, &v8);
        }
        else
        {
          LODWORD(v8) = 43;
          *((void *)&v8 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
          LODWORD(v9) = 80;
        }
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_12;
      }
    }
  }
  return result;
}

double sub_2447F9E80@<D0>(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  sub_2447F06A4((uint64_t)&v7, 0, a1);
  if (!v8)
  {
    sub_244CB694C();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
      long long v8 = v11;
      uint64_t v9 = v12;
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2447F9F74@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_2651959C0;
      uint64_t v11 = 4107;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_244CB3FB0(a2, (_DWORD *)(a1 + 4), (uint64_t)&v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_2447F5F24(a2, (unsigned char *)a1, &v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_2447FA084@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_12:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_2651959D8;
      uint64_t v11 = 4146;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_244CB3FB0(a2, (_DWORD *)(a1 + 16), (uint64_t)&v10);
      }
      else if (!(_BYTE)v12)
      {
        if (sub_244CB3B68(a2) == 16)
        {
          sub_244CB40C8(a2, (_OWORD *)a1, &v8);
        }
        else
        {
          LODWORD(v8) = 43;
          *((void *)&v8 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
          LODWORD(v9) = 80;
        }
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_12;
      }
    }
  }
  return result;
}

void sub_2447FA1CC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  switch(*(_DWORD *)(a3 + 8))
  {
    case 0xFFF8:
      goto LABEL_2;
    case 0xFFF9:
      a1 += 80;
      goto LABEL_2;
    case 0xFFFA:
      a1 += 160;
      goto LABEL_2;
    case 0xFFFB:
      a1 += 240;
LABEL_2:
      sub_24484B03C(a1, a2, a4);
      break;
    case 0xFFFC:
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 320), a4);
      break;
    case 0xFFFD:
      sub_244CB3F40(a2, (_WORD *)(a1 + 324), a4);
      break;
    default:
      *(_DWORD *)a4 = 0;
      *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-common"
                            "/app-common/zap-generated/cluster-objects.cpp";
      *(_DWORD *)(a4 + 16) = 4185;
      break;
  }
}

double sub_2447FA270@<D0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  v4[0] = 0;
  return sub_2447FA298(a1, a2, v4, a3);
}

double sub_2447FA298@<D0>(void *a1@<X1>, uint64_t a2@<X2>, unsigned char *a3@<X3>, uint64_t a4@<X8>)
{
  sub_244CB7594(a1, a2, 21, &v11, (uint64_t)&v12);
  long long v9 = v12;
  uint64_t v10 = v13;
  int v6 = v12;
  if (!v12)
  {
    sub_244CB68CC();
    uint64_t v10 = v13;
    long long v9 = v12;
    int v6 = v12;
    if (!v12)
    {
      sub_244CB6904();
      uint64_t v10 = v13;
      long long v9 = v12;
      int v6 = v12;
    }
  }
  if (*a3)
  {
    if (v6) {
      goto LABEL_9;
    }
    sub_244CB68B8();
    uint64_t v10 = v13;
    long long v9 = v12;
    int v6 = v12;
  }
  if (!v6)
  {
    sub_244CB7708((uint64_t)a1, v11, (uint64_t)&v12);
    long long v9 = v12;
    uint64_t v10 = v13;
  }
LABEL_9:
  double result = *(double *)&v9;
  *(_OWORD *)a4 = v9;
  *(void *)(a4 + 16) = v10;
  return result;
}

double sub_2447FA3E0@<D0>(void *a1@<X1>, uint64_t a2@<X2>, char a3@<W3>, uint64_t a4@<X8>)
{
  v5[0] = 1;
  v5[1] = a3;
  return sub_2447FA298(a1, a2, v5, a4);
}

double sub_2447FA410@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  for (int i = v14; v14 != 1; int i = v14)
  {
    long long v10 = xmmword_2651959F0;
    uint64_t v11 = 4233;
    if (i) {
      sub_24484AFEC();
    }
    if (v12 == 254)
    {
      sub_244CB3E8C(a2, (unsigned char *)(a1 + 10), (uint64_t)&v8);
    }
    else
    {
      if (v12 != 2)
      {
        if (v12 == 1) {
          sub_244CB3EFC(a2, (void *)a1, (uint64_t)&v10);
        }
        goto LABEL_10;
      }
      sub_244CB3F40(a2, (_WORD *)(a1 + 8), (uint64_t)&v8);
    }
    long long v10 = v8;
    uint64_t v11 = v9;
LABEL_10:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
    if (*(_DWORD *)a3) {
      return result;
    }
    sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  }
  double result = *(double *)&v12;
  *(_OWORD *)a3 = v12;
  *(void *)(a3 + 16) = v13;
  return result;
}

double sub_2447FA544@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB68CC();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB6904();
      long long v8 = v11;
      uint64_t v9 = v12;
    }
  }
  sub_2447F06A4((uint64_t)&v7, 2, (unsigned char *)(a1 + 10));
  if (!v8)
  {
    sub_24480248C(v7, (unsigned char *)(a1 + 16), (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB6904();
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
        long long v8 = v11;
        uint64_t v9 = v12;
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2447FA6BC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_13:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265195A08;
      uint64_t v11 = 4283;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v12)
      {
        case 0:
          sub_244CB3EFC(a2, (void *)a1, (uint64_t)&v10);
          break;
        case 1:
          long long v8 = 0uLL;
          uint64_t v9 = 0;
          sub_24484B11C(a2, (_WORD *)(a1 + 8), &v8);
          if (!v8)
          {
            LODWORD(v8) = 0;
            *((void *)&v8 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
            LODWORD(v9) = 61;
          }
          goto LABEL_10;
        case 2:
          sub_2447F5F24(a2, (unsigned char *)(a1 + 10), &v8);
          goto LABEL_10;
        case 3:
          sub_2447F978C(a2, a1 + 16, (uint64_t)&v8);
          goto LABEL_10;
        case 4:
          sub_244CB3F40(a2, (_WORD *)(a1 + 40), (uint64_t)&v8);
LABEL_10:
          long long v10 = v8;
          uint64_t v11 = v9;
          break;
        default:
          break;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_13;
      }
    }
  }
  return result;
}

void sub_2447FA87C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  switch(*(_DWORD *)(a3 + 8))
  {
    case 0xFFF8:
      a1 += 88;
      goto LABEL_3;
    case 0xFFF9:
      a1 += 168;
      goto LABEL_3;
    case 0xFFFA:
      a1 += 248;
      goto LABEL_3;
    case 0xFFFB:
      a1 += 328;
LABEL_3:
      sub_24484B03C(a1, a2, a4);
      break;
    case 0xFFFC:
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 408), a4);
      break;
    case 0xFFFD:
      sub_244CB3F40(a2, (_WORD *)(a1 + 412), a4);
      break;
    default:
      switch(*(_DWORD *)(a3 + 8))
      {
        case 0xFFF8:
          goto LABEL_3;
        case 0xFFF9:
          sub_244CB3C0C(a2, (char *)(a1 + 80), a4);
          break;
        case 0xFFFA:
          sub_2447FA994(a2, (unsigned char *)(a1 + 81), (void *)a4);
          break;
        case 0xFFFB:
          sub_2447F15BC(a2, (unsigned __int8 *)(a1 + 82), a4);
          break;
        default:
          *(_DWORD *)a4 = 0;
          *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-co"
                                "mmon/app-common/zap-generated/cluster-objects.cpp";
          *(_DWORD *)(a4 + 16) = 4342;
          break;
      }
      break;
  }
}

uint64_t sub_2447FA994@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  uint64_t result = sub_2446D1AAC(a1, a2, a3);
  if (!*(_DWORD *)a3)
  {
    unsigned int v6 = *a2;
    if (v6 >= 9) {
      LOBYTE(v6) = 9;
    }
    *a2 = v6;
    *(_DWORD *)a3 = 0;
    a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
    *((_DWORD *)a3 + 4) = 61;
  }
  return result;
}

void sub_2447FA9F8(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  int v7 = 0;
  a4[1] = 0;
  a4[2] = 0;
  *a4 = 0;
  sub_244CB7594(a2, a3, 21, &v7, (uint64_t)a4);
  if (!*(_DWORD *)a4)
  {
    *a4 = 0;
    a4[1] = 0;
    a4[2] = 0;
    if (*a1 == 9)
    {
LABEL_3:
      *(_DWORD *)a4 = 1415;
      a4[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
      *((_DWORD *)a4 + 4) = 75;
      return;
    }
    sub_244CB68B8();
    if (!*(_DWORD *)a4)
    {
      *a4 = 0;
      a4[1] = 0;
      a4[2] = 0;
      if (a1[1] == 9) {
        goto LABEL_3;
      }
      sub_244CB68B8();
      if (!*(_DWORD *)a4)
      {
        *a4 = 0;
        a4[1] = 0;
        a4[2] = 0;
        if (a1[2] == 5) {
          goto LABEL_3;
        }
        sub_244CB68B8();
        if (!*(_DWORD *)a4)
        {
          *a4 = 0;
          a4[1] = 0;
          a4[2] = 0;
          sub_2447FAB34((uint64_t)(a1 + 4), (uint64_t)a4);
          if (!*(_DWORD *)a4) {
            sub_244CB7708((uint64_t)a2, v7, (uint64_t)a4);
          }
        }
      }
    }
  }
}

void sub_2447FAB34(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  if (*(unsigned char *)(a1 + 4))
  {
    if (*(_DWORD *)a1 == -1)
    {
      *(_DWORD *)a2 = 1415;
      *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
      *(_DWORD *)(a2 + 16) = 193;
    }
    else
    {
      sub_244CB694C();
    }
  }
  else
  {
    sub_244CB710C();
  }
}

double sub_2447FAB70@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_11:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265195A20;
      uint64_t v11 = 4371;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v12)
      {
        case 0:
          sub_2447FA994(a2, a1, &v10);
          break;
        case 1:
          sub_2447FA994(a2, a1 + 1, &v8);
          goto LABEL_8;
        case 2:
          sub_2447FACE4(a2, a1 + 2, &v8);
          goto LABEL_8;
        case 3:
          sub_2447F4140(a2, (uint64_t)(a1 + 4), (uint64_t)&v8);
LABEL_8:
          long long v10 = v8;
          uint64_t v11 = v9;
          break;
        default:
          break;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_11;
      }
    }
  }
  return result;
}

uint64_t sub_2447FACE4@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  uint64_t result = sub_2446D1AAC(a1, a2, a3);
  if (!*(_DWORD *)a3)
  {
    unsigned int v6 = *a2;
    if (v6 >= 5) {
      LOBYTE(v6) = 5;
    }
    *a2 = v6;
    *(_DWORD *)a3 = 0;
    a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
    *((_DWORD *)a3 + 4) = 61;
  }
  return result;
}

void sub_2447FAD48(void *a1@<X1>, uint64_t a2@<X2>, void *a3@<X8>)
{
  int v5 = 0;
  a3[1] = 0;
  a3[2] = 0;
  *a3 = 0;
  sub_244CB7594(a1, a2, 21, &v5, (uint64_t)a3);
  if (!*(_DWORD *)a3)
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
    sub_244CB694C();
    if (!*(_DWORD *)a3)
    {
      *a3 = 0;
      a3[1] = 0;
      a3[2] = 0;
      sub_244CB6904();
      if (!*(_DWORD *)a3) {
        sub_244CB7708((uint64_t)a1, v5, (uint64_t)a3);
      }
    }
  }
}

double sub_2447FAE00@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265195A38;
      uint64_t v11 = 4419;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_244CB3F40(a2, (_WORD *)(a1 + 4), (uint64_t)&v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB3FB0(a2, (_DWORD *)a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

void sub_2447FAF10(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  int v7 = 0;
  a4[1] = 0;
  a4[2] = 0;
  *a4 = 0;
  sub_244CB7594(a2, a3, 21, &v7, (uint64_t)a4);
  if (!*(_DWORD *)a4)
  {
    *a4 = 0;
    a4[1] = 0;
    a4[2] = 0;
    sub_244CB694C();
    if (!*(_DWORD *)a4)
    {
      *a4 = 0;
      a4[1] = 0;
      a4[2] = 0;
      sub_244CB68CC();
      if (!*(_DWORD *)a4)
      {
        *a4 = 0;
        a4[1] = 0;
        a4[2] = 0;
        sub_2447FB010((unsigned __int8 *)(a1 + 16), (uint64_t)a4);
        if (!*(_DWORD *)a4)
        {
          *a4 = 0;
          a4[1] = 0;
          a4[2] = 0;
          sub_2447FB04C(a1 + 24, (uint64_t)a4);
          if (!*(_DWORD *)a4) {
            sub_244CB7708((uint64_t)a2, v7, (uint64_t)a4);
          }
        }
      }
    }
  }
}

void sub_2447FB010(unsigned __int8 *a1@<X2>, uint64_t a2@<X8>)
{
  if (a1[1])
  {
    if (*a1 == 255)
    {
      *(_DWORD *)a2 = 1415;
      *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
      *(_DWORD *)(a2 + 16) = 193;
    }
    else
    {
      sub_244CB68B8();
    }
  }
  else
  {
    sub_244CB710C();
  }
}

void sub_2447FB04C(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  if (*(unsigned char *)(a1 + 8))
  {
    if (*(void *)a1 == 0x8000000000000000)
    {
      *(_DWORD *)a2 = 1415;
      *(void *)(a2 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
      *(_DWORD *)(a2 + 16) = 193;
    }
    else
    {
      sub_244CB69FC();
    }
  }
  else
  {
    sub_244CB710C();
  }
}

double sub_2447FB08C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_11:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265195A50;
      uint64_t v11 = 4461;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v12)
      {
        case 0:
          sub_244CB3FB0(a2, (_DWORD *)a1, (uint64_t)&v10);
          break;
        case 1:
          sub_244CB3EFC(a2, (void *)(a1 + 8), (uint64_t)&v8);
          goto LABEL_8;
        case 2:
          sub_2447F15BC(a2, (unsigned __int8 *)(a1 + 16), (uint64_t)&v8);
          goto LABEL_8;
        case 3:
          sub_2447FB200(a2, a1 + 24, (uint64_t)&v8);
LABEL_8:
          long long v10 = v8;
          uint64_t v11 = v9;
          break;
        default:
          break;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_11;
      }
    }
  }
  return result;
}

uint64_t sub_2447FB200@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = sub_244CB3B68(a1);
  if (result == 20)
  {
    if (*(unsigned char *)(a2 + 8)) {
      *(unsigned char *)(a2 + 8) = 0;
    }
    *(_DWORD *)a3 = 0;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
    int v7 = 168;
LABEL_5:
    *(_DWORD *)(a3 + 16) = v7;
    return result;
  }
  *(void *)a3 = 0;
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  uint64_t result = sub_244CB3CF0(a1, (void *)a2, a3);
  if (!*(_DWORD *)a3)
  {
    if (!*(unsigned char *)(a2 + 8)) {
      sub_24479484C();
    }
    if (*(void *)a2 == 0x8000000000000000)
    {
      *(_DWORD *)a3 = 1415;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
      int v7 = 175;
    }
    else
    {
      *(_DWORD *)a3 = 0;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
      int v7 = 177;
    }
    goto LABEL_5;
  }
  return result;
}

void sub_2447FB2E0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4 = *(_DWORD *)(a3 + 8);
  switch(v4)
  {
    case 65528:
      uint64_t v5 = a1 + 96;
      goto LABEL_3;
    case 65529:
      uint64_t v5 = a1 + 176;
      goto LABEL_3;
    case 65530:
      uint64_t v5 = a1 + 256;
      goto LABEL_3;
    case 65531:
      uint64_t v5 = a1 + 336;
      goto LABEL_3;
    case 65532:
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 416), a4);
      return;
    case 65533:
      sub_244CB3F40(a2, (_WORD *)(a1 + 420), a4);
      return;
    default:
      if (v4 == 1)
      {
        uint64_t v5 = a1 + 16;
LABEL_3:
        sub_24484B03C(v5, a2, a4);
      }
      else if (v4)
      {
        *(_DWORD *)a4 = 0;
        *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-comm"
                              "on/app-common/zap-generated/cluster-objects.cpp";
        *(_DWORD *)(a4 + 16) = 4517;
      }
      else
      {
        sub_244CB41F0(a2, (_OWORD *)a1, (void *)a4);
      }
      return;
  }
}

void sub_2447FB3AC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4 = *(_DWORD *)(a3 + 8);
  if (v4 <= 65527)
  {
    if (v4)
    {
      if (v4 == 1)
      {
        sub_2447FB508(a2, (char *)(a1 + 1), (void *)a4);
      }
      else if (v4 == 2)
      {
        uint64_t v5 = a1 + 8;
LABEL_4:
        sub_24484B03C(v5, a2, a4);
      }
      else
      {
LABEL_16:
        *(_DWORD *)a4 = 0;
        *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-comm"
                              "on/app-common/zap-generated/cluster-objects.cpp";
        *(_DWORD *)(a4 + 16) = 4553;
      }
    }
    else
    {
      sub_2447FB49C(a2, (char *)a1, (void *)a4);
    }
  }
  else
  {
    switch(v4)
    {
      case 65528:
        uint64_t v5 = a1 + 88;
        goto LABEL_4;
      case 65529:
        uint64_t v5 = a1 + 168;
        goto LABEL_4;
      case 65530:
        uint64_t v5 = a1 + 248;
        goto LABEL_4;
      case 65531:
        uint64_t v5 = a1 + 328;
        goto LABEL_4;
      case 65532:
        sub_244CB3FB0(a2, (_DWORD *)(a1 + 408), a4);
        break;
      case 65533:
        sub_244CB3F40(a2, (_WORD *)(a1 + 412), a4);
        break;
      default:
        goto LABEL_16;
    }
  }
}

uint64_t sub_2447FB49C@<X0>(uint64_t a1@<X0>, char *a2@<X1>, void *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  uint64_t result = sub_2446D1AAC(a1, a2, a3);
  if (!*(_DWORD *)a3)
  {
    char v6 = *a2;
    if ((*a2 + 1) >= 3u) {
      char v6 = 2;
    }
    *a2 = v6;
    *(_DWORD *)a3 = 0;
    a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
    *((_DWORD *)a3 + 4) = 61;
  }
  return result;
}

uint64_t sub_2447FB508@<X0>(uint64_t a1@<X0>, char *a2@<X1>, void *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  uint64_t result = sub_2446D1AAC(a1, a2, a3);
  if (!*(_DWORD *)a3)
  {
    char v6 = *a2;
    if ((*a2 + 1) >= 0xDu) {
      char v6 = 12;
    }
    *a2 = v6;
    *(_DWORD *)a3 = 0;
    a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
    *((_DWORD *)a3 + 4) = 61;
  }
  return result;
}

void sub_2447FB574(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4 = *(_DWORD *)(a3 + 8);
  switch(v4)
  {
    case 65528:
      uint64_t v5 = a1 + 8;
      goto LABEL_3;
    case 65529:
      uint64_t v5 = a1 + 88;
      goto LABEL_3;
    case 65530:
      uint64_t v5 = a1 + 168;
      goto LABEL_3;
    case 65531:
      uint64_t v5 = a1 + 248;
LABEL_3:
      sub_24484B03C(v5, a2, a4);
      break;
    case 65532:
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 328), a4);
      break;
    case 65533:
      sub_244CB3F40(a2, (_WORD *)(a1 + 332), a4);
      break;
    default:
      if (v4)
      {
        *(_DWORD *)a4 = 0;
        *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-comm"
                              "on/app-common/zap-generated/cluster-objects.cpp";
        *(_DWORD *)(a4 + 16) = 4585;
      }
      else
      {
        sub_2447F5F24(a2, (unsigned char *)a1, (void *)a4);
      }
      break;
  }
}

void sub_2447FB630(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4 = *(_DWORD *)(a3 + 8);
  switch(v4)
  {
    case 65528:
      a1 += 80;
      goto LABEL_3;
    case 65529:
      a1 += 160;
      goto LABEL_3;
    case 65530:
      a1 += 240;
      goto LABEL_3;
    case 65531:
      a1 += 320;
      goto LABEL_3;
    case 65532:
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 400), a4);
      return;
    case 65533:
      sub_244CB3F40(a2, (_WORD *)(a1 + 404), a4);
      return;
    default:
      if (v4)
      {
        *(_DWORD *)a4 = 0;
        *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-comm"
                              "on/app-common/zap-generated/cluster-objects.cpp";
        *(_DWORD *)(a4 + 16) = 4617;
      }
      else
      {
LABEL_3:
        sub_24484B03C(a1, a2, a4);
      }
      return;
  }
}

double sub_2447FB6E0@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  sub_2447FB7B8((uint64_t)&v7, 0, a1);
  sub_2447FB7B8((uint64_t)&v7, 1u, a1 + 16);
  if (!v8)
  {
    sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2447FB7B8(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = a1 + 8;
  if (!*(_DWORD *)(a1 + 8))
  {
    int v4 = *(void **)a1;
    uint64_t v5 = *(unsigned char **)a3;
    uint64_t v6 = *(void *)(a3 + 8);
    int v13 = 0;
    uint64_t v12 = 0;
    long long v11 = 0uLL;
    sub_244CB7594(v4, a2, 22, &v13, (uint64_t)&v11);
    if (!v11)
    {
      if (v6)
      {
        int v7 = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
        while (1)
        {
          long long v11 = 0uLL;
          uint64_t v12 = 0;
          if (*v5 == 11) {
            break;
          }
          sub_244CB68B8();
          if (v11) {
            goto LABEL_12;
          }
          ++v5;
          if (!--v6) {
            goto LABEL_8;
          }
        }
        int v9 = 75;
        int v8 = 1415;
        goto LABEL_11;
      }
LABEL_8:
      long long v11 = 0uLL;
      uint64_t v12 = 0;
      sub_244CB7708((uint64_t)v4, v13, (uint64_t)&v11);
      if (!v11)
      {
        int v8 = 0;
        int v9 = 86;
        int v7 = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/List.h";
LABEL_11:
        LODWORD(v11) = v8;
        *((void *)&v11 + 1) = v7;
        LODWORD(v12) = v9;
      }
    }
LABEL_12:
    double result = *(double *)&v11;
    *(_OWORD *)uint64_t v3 = v11;
    *(void *)(v3 + 16) = v12;
  }
  return result;
}

double sub_2447FB8C8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265195A68;
      uint64_t v11 = 4648;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_24484B03C(a1 + 80, a2, (uint64_t)&v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_24484B03C(a1, a2, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_2447FB9D8@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  sub_2447FBAB0((uint64_t)&v7, 0, a1);
  sub_2447FBAB0((uint64_t)&v7, 1u, a1 + 16);
  if (!v8)
  {
    sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2447FBAB0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = a1 + 8;
  if (!*(_DWORD *)(a1 + 8))
  {
    int v4 = *(void **)a1;
    uint64_t v5 = *(unsigned char **)a3;
    uint64_t v6 = *(void *)(a3 + 8);
    int v13 = 0;
    uint64_t v12 = 0;
    long long v11 = 0uLL;
    sub_244CB7594(v4, a2, 22, &v13, (uint64_t)&v11);
    if (!v11)
    {
      if (v6)
      {
        int v7 = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
        while (1)
        {
          long long v11 = 0uLL;
          uint64_t v12 = 0;
          if (*v5 == 3) {
            break;
          }
          sub_244CB68B8();
          if (v11) {
            goto LABEL_12;
          }
          ++v5;
          if (!--v6) {
            goto LABEL_8;
          }
        }
        int v9 = 75;
        int v8 = 1415;
        goto LABEL_11;
      }
LABEL_8:
      long long v11 = 0uLL;
      uint64_t v12 = 0;
      sub_244CB7708((uint64_t)v4, v13, (uint64_t)&v11);
      if (!v11)
      {
        int v8 = 0;
        int v9 = 86;
        int v7 = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/List.h";
LABEL_11:
        LODWORD(v11) = v8;
        *((void *)&v11 + 1) = v7;
        LODWORD(v12) = v9;
      }
    }
LABEL_12:
    double result = *(double *)&v11;
    *(_OWORD *)uint64_t v3 = v11;
    *(void *)(v3 + 16) = v12;
  }
  return result;
}

double sub_2447FBBC0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265195A80;
      uint64_t v11 = 4689;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_24484B03C(a1 + 80, a2, (uint64_t)&v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_24484B03C(a1, a2, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_2447FBCD0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265195A98;
      uint64_t v11 = 4730;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_24484B03C(a1 + 80, a2, (uint64_t)&v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_24484B03C(a1, a2, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

void sub_2447FBDE0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v5 = *(_DWORD *)(a3 + 8);
  switch(v5)
  {
    case 0:
      uint64_t v6 = a2;
      int v7 = (unsigned char *)a1;
      goto LABEL_3;
    case 1:
      uint64_t v9 = (unsigned char *)(a1 + 1);
      goto LABEL_33;
    case 2:
      long long v10 = (_OWORD *)(a1 + 8);
      goto LABEL_29;
    case 3:
      uint64_t v11 = a1 + 24;
      goto LABEL_38;
    case 4:
      sub_2447EF9E0(a2, (__int16 *)(a1 + 32), a4);
      return;
    case 5:
      sub_2447F1DCC(a2, (unsigned char *)(a1 + 36), (void *)a4);
      return;
    case 6:
      uint64_t v11 = a1 + 40;
      goto LABEL_38;
    case 7:
      long long v12 = (_DWORD *)(a1 + 48);
      goto LABEL_46;
    case 8:
      long long v12 = (_DWORD *)(a1 + 52);
      goto LABEL_46;
    case 9:
      uint64_t v13 = (char *)(a1 + 56);
      goto LABEL_36;
    case 10:
      uint64_t v8 = a1 + 64;
      goto LABEL_6;
    case 11:
      uint64_t v11 = a1 + 144;
      goto LABEL_38;
    case 12:
      sub_2447F15BC(a2, (unsigned __int8 *)(a1 + 152), a4);
      return;
    case 13:
      uint64_t v11 = a1 + 156;
      goto LABEL_38;
    case 14:
      sub_2447F5F24(a2, (unsigned char *)(a1 + 164), (void *)a4);
      return;
    case 15:
      uint64_t v13 = (char *)(a1 + 165);
      goto LABEL_36;
    case 16:
      int v14 = (unsigned char *)(a1 + 166);
      uint64_t v6 = a2;
      int v7 = v14;
      goto LABEL_3;
    case 17:
      uint64_t v13 = (char *)(a1 + 167);
      goto LABEL_36;
    case 18:
      uint64_t v8 = a1 + 168;
      goto LABEL_6;
    case 19:
      long long v10 = (_OWORD *)(a1 + 248);
      goto LABEL_29;
    case 20:
      sub_2447FC098(a2, (_WORD *)(a1 + 264), (void *)a4);
      return;
    case 21:
      long long v10 = (_OWORD *)(a1 + 272);
      goto LABEL_29;
    case 22:
      long long v10 = (_OWORD *)(a1 + 288);
LABEL_29:
      sub_244CB41F0(a2, v10, (void *)a4);
      return;
    case 23:
      sub_2447FC0FC(a2, (_WORD *)(a1 + 304), (void *)a4);
      return;
    case 24:
      long long v12 = (_DWORD *)(a1 + 308);
LABEL_46:
      sub_244CB3FB0(a2, v12, a4);
      return;
    case 25:
      uint64_t v9 = (unsigned char *)(a1 + 312);
LABEL_33:
      sub_244CB3E8C(a2, v9, a4);
      return;
    case 26:
      uint64_t v15 = (unsigned char *)(a1 + 313);
      uint64_t v6 = a2;
      int v7 = v15;
LABEL_3:
      sub_2446D1A48(v6, v7, (void *)a4);
      return;
    case 27:
      uint64_t v11 = a1 + 316;
      goto LABEL_38;
    case 28:
      uint64_t v13 = (char *)(a1 + 324);
LABEL_36:
      sub_244CB3C0C(a2, v13, a4);
      return;
    case 29:
      uint64_t v11 = a1 + 328;
LABEL_38:
      sub_2447F4140(a2, v11, a4);
      return;
    case 30:
      uint64_t v8 = a1 + 336;
      goto LABEL_6;
    case 31:
      uint64_t v8 = a1 + 416;
LABEL_6:
      sub_24484B03C(v8, a2, a4);
      break;
    default:
      switch(v5)
      {
        case 65528:
          uint64_t v8 = a1 + 496;
          goto LABEL_6;
        case 65529:
          uint64_t v8 = a1 + 576;
          goto LABEL_6;
        case 65530:
          uint64_t v8 = a1 + 656;
          goto LABEL_6;
        case 65531:
          uint64_t v8 = a1 + 736;
          goto LABEL_6;
        case 65532:
          long long v12 = (_DWORD *)(a1 + 816);
          goto LABEL_46;
        case 65533:
          sub_244CB3F40(a2, (_WORD *)(a1 + 820), a4);
          break;
        default:
          *(_DWORD *)a4 = 0;
          *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-co"
                                "mmon/app-common/zap-generated/cluster-objects.cpp";
          *(_DWORD *)(a4 + 16) = 4836;
          break;
      }
      break;
  }
}

uint64_t sub_2447FC098@<X0>(uint64_t a1@<X0>, _WORD *a2@<X1>, void *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  uint64_t result = sub_24484B11C(a1, a2, a3);
  if (!*(_DWORD *)a3)
  {
    unsigned int v6 = (unsigned __int16)*a2;
    if (v6 >= 0x51) {
      LOWORD(v6) = 81;
    }
    *a2 = v6;
    *(_DWORD *)a3 = 0;
    a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
    *((_DWORD *)a3 + 4) = 61;
  }
  return result;
}

uint64_t sub_2447FC0FC@<X0>(uint64_t a1@<X0>, _WORD *a2@<X1>, void *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  uint64_t result = sub_24484B11C(a1, a2, a3);
  if (!*(_DWORD *)a3)
  {
    unsigned int v6 = (unsigned __int16)*a2;
    if (v6 >= 0x21) {
      LOWORD(v6) = 33;
    }
    *a2 = v6;
    *(_DWORD *)a3 = 0;
    a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
    *((_DWORD *)a3 + 4) = 61;
  }
  return result;
}

void sub_2447FC160(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  int v11 = 0;
  a4[1] = 0;
  a4[2] = 0;
  *a4 = 0;
  sub_244CB7594(a2, a3, 21, &v11, (uint64_t)a4);
  if (!*(_DWORD *)a4)
  {
    int v7 = *(unsigned char **)a1;
    uint64_t v8 = *(void *)(a1 + 8);
    int v12 = 0;
    a4[1] = 0;
    a4[2] = 0;
    *a4 = 0;
    sub_244CB7594(a2, 0, 22, &v12, (uint64_t)a4);
    if (!*(_DWORD *)a4)
    {
      if (v8)
      {
        while (1)
        {
          *a4 = 0;
          a4[1] = 0;
          a4[2] = 0;
          if (*v7 == 3) {
            break;
          }
          sub_244CB68B8();
          if (*(_DWORD *)a4) {
            return;
          }
          ++v7;
          if (!--v8) {
            goto LABEL_8;
          }
        }
      }
      else
      {
LABEL_8:
        *a4 = 0;
        a4[1] = 0;
        a4[2] = 0;
        sub_244CB7708((uint64_t)a2, v12, (uint64_t)a4);
        if (*(_DWORD *)a4) {
          return;
        }
        long long v10 = *(unsigned char **)(a1 + 16);
        uint64_t v9 = *(void *)(a1 + 24);
        int v13 = 0;
        a4[1] = 0;
        a4[2] = 0;
        *a4 = 0;
        sub_244CB7594(a2, 1, 22, &v13, (uint64_t)a4);
        if (*(_DWORD *)a4) {
          return;
        }
        if (!v9)
        {
LABEL_14:
          *a4 = 0;
          a4[1] = 0;
          a4[2] = 0;
          sub_244CB7708((uint64_t)a2, v13, (uint64_t)a4);
          if (!*(_DWORD *)a4)
          {
            *(_DWORD *)a4 = 0;
            a4[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/List.h";
            *((_DWORD *)a4 + 4) = 86;
            sub_244CB7708((uint64_t)a2, v11, (uint64_t)a4);
          }
          return;
        }
        while (1)
        {
          *a4 = 0;
          a4[1] = 0;
          a4[2] = 0;
          if (*v10 == 3) {
            break;
          }
          sub_244CB68B8();
          if (*(_DWORD *)a4) {
            return;
          }
          ++v10;
          if (!--v9) {
            goto LABEL_14;
          }
        }
      }
      *(_DWORD *)a4 = 1415;
      a4[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
      *((_DWORD *)a4 + 4) = 75;
    }
  }
}

double sub_2447FC32C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265195AB0;
      uint64_t v11 = 4863;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_24484B03C(a1 + 80, a2, (uint64_t)&v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_24484B03C(a1, a2, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_2447FC43C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265195AC8;
      uint64_t v11 = 4903;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_24484B03C(a1 + 80, a2, (uint64_t)&v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_24484B03C(a1, a2, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

void sub_2447FC54C(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  int v11 = 0;
  a4[1] = 0;
  a4[2] = 0;
  *a4 = 0;
  sub_244CB7594(a2, a3, 21, &v11, (uint64_t)a4);
  if (!*(_DWORD *)a4)
  {
    int v7 = *(unsigned char **)a1;
    uint64_t v8 = *(void *)(a1 + 8);
    int v12 = 0;
    a4[1] = 0;
    a4[2] = 0;
    *a4 = 0;
    sub_244CB7594(a2, 0, 22, &v12, (uint64_t)a4);
    if (!*(_DWORD *)a4)
    {
      if (v8)
      {
        while (1)
        {
          *a4 = 0;
          a4[1] = 0;
          a4[2] = 0;
          if (*v7 == 11) {
            break;
          }
          sub_244CB68B8();
          if (*(_DWORD *)a4) {
            return;
          }
          ++v7;
          if (!--v8) {
            goto LABEL_8;
          }
        }
      }
      else
      {
LABEL_8:
        *a4 = 0;
        a4[1] = 0;
        a4[2] = 0;
        sub_244CB7708((uint64_t)a2, v12, (uint64_t)a4);
        if (*(_DWORD *)a4) {
          return;
        }
        long long v10 = *(unsigned char **)(a1 + 16);
        uint64_t v9 = *(void *)(a1 + 24);
        int v13 = 0;
        a4[1] = 0;
        a4[2] = 0;
        *a4 = 0;
        sub_244CB7594(a2, 1, 22, &v13, (uint64_t)a4);
        if (*(_DWORD *)a4) {
          return;
        }
        if (!v9)
        {
LABEL_14:
          *a4 = 0;
          a4[1] = 0;
          a4[2] = 0;
          sub_244CB7708((uint64_t)a2, v13, (uint64_t)a4);
          if (!*(_DWORD *)a4)
          {
            *(_DWORD *)a4 = 0;
            a4[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/List.h";
            *((_DWORD *)a4 + 4) = 86;
            sub_244CB7708((uint64_t)a2, v11, (uint64_t)a4);
          }
          return;
        }
        while (1)
        {
          *a4 = 0;
          a4[1] = 0;
          a4[2] = 0;
          if (*v10 == 11) {
            break;
          }
          sub_244CB68B8();
          if (*(_DWORD *)a4) {
            return;
          }
          ++v10;
          if (!--v9) {
            goto LABEL_14;
          }
        }
      }
      *(_DWORD *)a4 = 1415;
      a4[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
      *((_DWORD *)a4 + 4) = 75;
    }
  }
}

double sub_2447FC718@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265195AE0;
      uint64_t v11 = 4943;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_24484B03C(a1 + 80, a2, (uint64_t)&v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_24484B03C(a1, a2, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_2447FC828@<D0>(_WORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265195AF8;
      uint64_t v11 = 4988;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_244CB3F40(a2, a1 + 1, (uint64_t)&v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB3F40(a2, a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_2447FC938@<D0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  sub_244CB7594(a1, a2, 21, &v8, (uint64_t)&v9);
  long long v6 = v9;
  uint64_t v7 = v10;
  if (!v9)
  {
    sub_244CB6904();
    uint64_t v7 = v10;
    long long v6 = v9;
    if (!v9)
    {
      sub_244CB68CC();
      uint64_t v7 = v10;
      long long v6 = v9;
      if (!v9)
      {
        sub_244CB7708((uint64_t)a1, v8, (uint64_t)&v9);
        long long v6 = v9;
        uint64_t v7 = v10;
      }
    }
  }
  double result = *(double *)&v6;
  *(_OWORD *)a3 = v6;
  *(void *)(a3 + 16) = v7;
  return result;
}

double sub_2447FCA48@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265195B10;
      uint64_t v11 = 5031;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_244CB3EFC(a2, (void *)(a1 + 8), (uint64_t)&v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB3F40(a2, (_WORD *)a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_2447FCB58@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  sub_2447FCC4C((uint64_t)&v7, 0, (unsigned char *)a1);
  if (!v8)
  {
    sub_244CB6D80(v7, *(char **)(a1 + 8), *(void *)(a1 + 16), (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
      long long v8 = v11;
      uint64_t v9 = v12;
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2447FCC4C(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  uint64_t v3 = a1 + 8;
  if (!*(_DWORD *)(a1 + 8))
  {
    if (*a3 == 8)
    {
      LODWORD(v5) = 1415;
      *((void *)&v5 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
      LODWORD(v6) = 75;
    }
    else
    {
      sub_244CB68B8();
    }
    double result = *(double *)&v5;
    *(_OWORD *)uint64_t v3 = v5;
    *(void *)(v3 + 16) = v6;
  }
  return result;
}

double sub_2447FCCC8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265195B28;
      uint64_t v11 = 5070;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_244CB41F0(a2, (_OWORD *)(a1 + 8), &v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_2447FCDD8(a2, (unsigned char *)a1, &v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

uint64_t sub_2447FCDD8@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  uint64_t result = sub_2446D1AAC(a1, a2, a3);
  if (!*(_DWORD *)a3)
  {
    unsigned int v6 = *a2;
    if (v6 >= 8) {
      LOBYTE(v6) = 8;
    }
    *a2 = v6;
    *(_DWORD *)a3 = 0;
    a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
    *((_DWORD *)a3 + 4) = 61;
  }
  return result;
}

double sub_2447FCE3C@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  sub_2447F06A4((uint64_t)&v7, 0, (unsigned char *)a1);
  if (!v8)
  {
    sub_244CB6D80(v7, *(char **)(a1 + 8), *(void *)(a1 + 16), (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB68CC();
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
        long long v8 = v11;
        uint64_t v9 = v12;
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2447FCF5C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  for (int i = v14; v14 != 1; int i = v14)
  {
    long long v10 = xmmword_265195B40;
    uint64_t v11 = 5110;
    if (i) {
      sub_24484AFEC();
    }
    if (v12 == 2)
    {
      sub_244CB3EFC(a2, (void *)(a1 + 24), (uint64_t)&v8);
    }
    else
    {
      if (v12 != 1)
      {
        if (!(_BYTE)v12) {
          sub_2447F5F24(a2, (unsigned char *)a1, &v10);
        }
        goto LABEL_10;
      }
      sub_244CB41F0(a2, (_OWORD *)(a1 + 8), &v8);
    }
    long long v10 = v8;
    uint64_t v11 = v9;
LABEL_10:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
    if (*(_DWORD *)a3) {
      return result;
    }
    sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  }
  double result = *(double *)&v12;
  *(_OWORD *)a3 = v12;
  *(void *)(a3 + 16) = v13;
  return result;
}

double sub_2447FD08C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265195B58;
      uint64_t v11 = 5153;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_244CB41F0(a2, (_OWORD *)(a1 + 8), &v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_2447FCDD8(a2, (unsigned char *)a1, &v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_2447FD19C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265195B70;
      uint64_t v11 = 5212;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_244CB41F0(a2, (_OWORD *)(a1 + 8), &v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_2447FCDD8(a2, (unsigned char *)a1, &v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_2447FD2AC@<D0>(_WORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265195B88;
      uint64_t v11 = 5251;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_244CB3F40(a2, a1 + 1, (uint64_t)&v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB3F40(a2, a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_2447FD3BC@<D0>(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  sub_2447FCC4C((uint64_t)&v7, 0, a1);
  if (!v8)
  {
    sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2447FD484@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265195BA0;
      uint64_t v9 = 5289;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_2447FCDD8(a2, a1, &v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

void sub_2447FD55C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4 = *(_DWORD *)(a3 + 8);
  switch(v4)
  {
    case 0:
      sub_244CB3EFC(a2, (void *)a1, a4);
      return;
    case 1:
      sub_2447FC828((_WORD *)(a1 + 8), a2, a4);
      return;
    case 2:
      int v6 = (unsigned char *)(a1 + 12);
      goto LABEL_9;
    case 3:
      int v6 = (unsigned char *)(a1 + 13);
LABEL_9:
      sub_2447F5F24(a2, v6, (void *)a4);
      return;
    case 4:
      uint64_t v7 = (char *)(a1 + 14);
      goto LABEL_15;
    case 5:
      long long v8 = (_WORD *)(a1 + 16);
      goto LABEL_24;
    case 6:
      long long v8 = (_WORD *)(a1 + 18);
      goto LABEL_24;
    case 7:
      long long v8 = (_WORD *)(a1 + 20);
LABEL_24:
      sub_244CB3F40(a2, v8, a4);
      break;
    case 8:
      uint64_t v7 = (char *)(a1 + 22);
LABEL_15:
      sub_244CB3C0C(a2, v7, a4);
      break;
    case 9:
      uint64_t v9 = (_DWORD *)(a1 + 24);
LABEL_22:
      sub_244CB3FB0(a2, v9, a4);
      break;
    default:
      switch(v4)
      {
        case 65528:
          uint64_t v5 = a1 + 32;
          goto LABEL_5;
        case 65529:
          uint64_t v5 = a1 + 112;
          goto LABEL_5;
        case 65530:
          uint64_t v5 = a1 + 192;
          goto LABEL_5;
        case 65531:
          uint64_t v5 = a1 + 272;
LABEL_5:
          sub_24484B03C(v5, a2, a4);
          break;
        case 65532:
          uint64_t v9 = (_DWORD *)(a1 + 352);
          goto LABEL_22;
        case 65533:
          long long v8 = (_WORD *)(a1 + 356);
          goto LABEL_24;
        default:
          *(_DWORD *)a4 = 0;
          *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-co"
                                "mmon/app-common/zap-generated/cluster-objects.cpp";
          *(_DWORD *)(a4 + 16) = 5344;
          break;
      }
      break;
  }
}

double sub_2447FD6BC@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB6ADC(a2, *(char **)a1, *(void *)(a1 + 8), (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB65C8();
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_24484B864(a2, (unsigned char *)(a1 + 24), (uint64_t)&v11);
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_24484B864(a2, (unsigned char *)(a1 + 56), (uint64_t)&v11);
          uint64_t v9 = v12;
          long long v8 = v11;
          if (!v11)
          {
            sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
            long long v8 = v11;
            uint64_t v9 = v12;
          }
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2447FD824@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  int v6 = v16;
  if (v16 == 1)
  {
LABEL_2:
    double result = *(double *)&v14;
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 16) = v15;
  }
  else
  {
    while (1)
    {
      long long v12 = xmmword_265195BB8;
      uint64_t v13 = 5377;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v14)
      {
        case 0:
          if (sub_244CB3B68(a2) == 16)
          {
            sub_244CB40C8(a2, (_OWORD *)a1, &v10);
          }
          else
          {
            LODWORD(v10) = 43;
            *((void *)&v10 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
            LODWORD(v11) = 80;
          }
          goto LABEL_12;
        case 1:
          sub_244CB3C0C(a2, (char *)(a1 + 16), (uint64_t)&v12);
          break;
        case 2:
          *(unsigned char *)(a1 + 24) = 1;
          *(void *)(a1 + 40) = 0;
          *(void *)(a1 + 48) = 0;
          *(void *)(a1 + 32) = 0;
          uint64_t v8 = a2;
          uint64_t v9 = a1 + 32;
          goto LABEL_11;
        case 3:
          *(unsigned char *)(a1 + 56) = 1;
          *(void *)(a1 + 72) = 0;
          *(void *)(a1 + 80) = 0;
          *(void *)(a1 + 64) = 0;
          uint64_t v8 = a2;
          uint64_t v9 = a1 + 64;
LABEL_11:
          sub_2447FFFFC(v8, v9, &v10);
LABEL_12:
          long long v12 = v10;
          uint64_t v13 = v11;
          break;
        default:
          break;
      }
      double result = *(double *)&v12;
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
      int v6 = v16;
      if (v16 == 1) {
        goto LABEL_2;
      }
    }
  }
  return result;
}

double sub_2447FD9EC@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB6904();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB68CC();
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB6D80(a2, *(char **)(a1 + 16), *(void *)(a1 + 24), (uint64_t)&v11);
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_244CB6904();
          uint64_t v9 = v12;
          long long v8 = v11;
          if (!v11)
          {
            sub_244CB68B8();
            uint64_t v9 = v12;
            long long v8 = v11;
            if (!v11)
            {
              sub_244CB6ADC(a2, *(char **)(a1 + 40), *(void *)(a1 + 48), (uint64_t)&v11);
              uint64_t v9 = v12;
              long long v8 = v11;
              if (!v11)
              {
                sub_244CB69F4();
                uint64_t v9 = v12;
                long long v8 = v11;
                if (!v11)
                {
                  sub_244CB68B8();
                  uint64_t v9 = v12;
                  long long v8 = v11;
                  if (!v11)
                  {
                    sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
                    long long v8 = v11;
                    uint64_t v9 = v12;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2447FDC04@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  int v6 = v16;
  if (v16 == 1)
  {
LABEL_18:
    double result = *(double *)&v14;
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 16) = v15;
  }
  else
  {
    while (1)
    {
      long long v12 = xmmword_265195BD0;
      uint64_t v13 = 5432;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v14)
      {
        case 0:
          sub_244CB3F40(a2, (_WORD *)a1, (uint64_t)&v12);
          break;
        case 1:
          sub_244CB3EFC(a2, (void *)(a1 + 8), (uint64_t)&v10);
          goto LABEL_15;
        case 2:
          sub_244CB41F0(a2, (_OWORD *)(a1 + 16), &v10);
          goto LABEL_15;
        case 3:
          sub_244CB3F40(a2, (_WORD *)(a1 + 32), (uint64_t)&v10);
          goto LABEL_15;
        case 4:
          uint64_t v7 = a2;
          long long v8 = (unsigned char *)(a1 + 34);
          goto LABEL_13;
        case 5:
          if (sub_244CB3B68(a2) == 16)
          {
            sub_244CB40C8(a2, (_OWORD *)(a1 + 40), &v10);
          }
          else
          {
            LODWORD(v10) = 43;
            *((void *)&v10 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
            LODWORD(v11) = 80;
          }
          goto LABEL_15;
        case 6:
          sub_244CB3C70(a2, (unsigned char *)(a1 + 56), (uint64_t)&v10);
          goto LABEL_15;
        case 7:
          uint64_t v7 = a2;
          long long v8 = (unsigned char *)(a1 + 57);
LABEL_13:
          sub_244CB3E8C(v7, v8, (uint64_t)&v10);
LABEL_15:
          long long v12 = v10;
          uint64_t v13 = v11;
          break;
        default:
          break;
      }
      double result = *(double *)&v12;
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
      int v6 = v16;
      if (v16 == 1) {
        goto LABEL_18;
      }
    }
  }
  return result;
}

double sub_2447FDE20@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB68B8();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB6ADC(v7, *(char **)(a1 + 8), *(void *)(a1 + 16), (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB6ADC(v7, *(char **)(a1 + 24), *(void *)(a1 + 32), (uint64_t)&v11);
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_244CB6904();
          long long v8 = v11;
          uint64_t v9 = v12;
        }
      }
    }
  }
  sub_2447F8840((uint64_t)&v7, 4, (unsigned char *)(a1 + 42));
  if (!v8)
  {
    sub_244CB69F4();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
      long long v8 = v11;
      uint64_t v9 = v12;
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2447FDFC4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  int v6 = v16;
  if (v16 == 1)
  {
LABEL_17:
    double result = *(double *)&v14;
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 16) = v15;
  }
  else
  {
    while (1)
    {
      long long v12 = xmmword_265195BE8;
      uint64_t v13 = 5501;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v14)
      {
        case 0:
          sub_24484B184(a2, (unsigned char *)a1, &v12);
          break;
        case 1:
          if (sub_244CB3B68(a2) != 16) {
            goto LABEL_13;
          }
          uint64_t v7 = a2;
          long long v8 = (_OWORD *)(a1 + 8);
          goto LABEL_9;
        case 2:
          if (sub_244CB3B68(a2) == 16)
          {
            uint64_t v7 = a2;
            long long v8 = (_OWORD *)(a1 + 24);
LABEL_9:
            sub_244CB40C8(v7, v8, &v10);
          }
          else
          {
LABEL_13:
            LODWORD(v10) = 43;
            *((void *)&v10 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
            LODWORD(v11) = 80;
          }
          goto LABEL_14;
        case 3:
          sub_244CB3F40(a2, (_WORD *)(a1 + 40), (uint64_t)&v10);
          goto LABEL_14;
        case 4:
          sub_2447F0A54(a2, (unsigned char *)(a1 + 42), &v10);
          goto LABEL_14;
        case 5:
          sub_244CB3C70(a2, (unsigned char *)(a1 + 43), (uint64_t)&v10);
LABEL_14:
          long long v12 = v10;
          uint64_t v13 = v11;
          break;
        default:
          break;
      }
      double result = *(double *)&v12;
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
      int v6 = v16;
      if (v16 == 1) {
        goto LABEL_17;
      }
    }
  }
  return result;
}

double sub_2447FE1B4@<D0>(unsigned char *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_24484B864(a2, a1, (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244839174(a1 + 32, (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
        long long v8 = v11;
        uint64_t v9 = v12;
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2447FE2C4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265195C00;
      uint64_t v11 = 5560;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        *(unsigned char *)(a1 + 32) = 1;
        *(void *)(a1 + 40) = 0;
        sub_244CB3EFC(a2, (void *)(a1 + 40), (uint64_t)&v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        *(unsigned char *)a1 = 1;
        *(void *)(a1 + 16) = 0;
        *(void *)(a1 + 24) = 0;
        *(void *)(a1 + 8) = 0;
        sub_2447FFFFC(a2, a1 + 8, &v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_2447FE3F8@<D0>(unsigned char *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  sub_2447FE544((uint64_t)&v7, 0, a1);
  if (!v8)
  {
    sub_2447F6524(v7, a1 + 8, (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_24484B904(v7, 2, a1 + 32, (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_24484BA10(v7, 3, a1 + 56, (uint64_t)&v11);
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
          long long v8 = v11;
          uint64_t v9 = v12;
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2447FE544(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  uint64_t v3 = a1 + 8;
  if (!*(_DWORD *)(a1 + 8))
  {
    if (*a3 == 13)
    {
      LODWORD(v5) = 1415;
      *((void *)&v5 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
      LODWORD(v6) = 75;
    }
    else
    {
      sub_244CB68B8();
    }
    double result = *(double *)&v5;
    *(_OWORD *)uint64_t v3 = v5;
    *(void *)(v3 + 16) = v6;
  }
  return result;
}

double sub_2447FE5C0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_11:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265195C18;
      uint64_t v11 = 5601;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v12)
      {
        case 0:
          sub_2447FE740(a2, (unsigned char *)a1, &v10);
          break;
        case 1:
          *(unsigned char *)(a1 + 8) = 1;
          *(void *)(a1 + 16) = 0;
          *(void *)(a1 + 24) = 0;
          sub_244CB41F0(a2, (_OWORD *)(a1 + 16), &v8);
          goto LABEL_8;
        case 2:
          sub_2447FE7A4(a2, (unsigned char *)(a1 + 32), (uint64_t)&v8);
          goto LABEL_8;
        case 3:
          sub_2447FE7A4(a2, (unsigned char *)(a1 + 120), (uint64_t)&v8);
LABEL_8:
          long long v10 = v8;
          uint64_t v11 = v9;
          break;
        default:
          break;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_11;
      }
    }
  }
  return result;
}

uint64_t sub_2447FE740@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  uint64_t result = sub_2446D1AAC(a1, a2, a3);
  if (!*(_DWORD *)a3)
  {
    unsigned int v6 = *a2;
    if (v6 >= 0xD) {
      LOBYTE(v6) = 13;
    }
    *a2 = v6;
    *(_DWORD *)a3 = 0;
    a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
    *((_DWORD *)a3 + 4) = 61;
  }
  return result;
}

void sub_2447FE7A4(uint64_t a1@<X0>, unsigned char *a2@<X1>, uint64_t a3@<X8>)
{
  *a2 = 1;
  uint64_t v6 = (uint64_t)(a2 + 8);
  sub_244CB3988((uint64_t)(a2 + 8));
  a2[80] = 0;
  sub_244CB39B8(v7, 0, 0);

  sub_24484B03C(v6, a1, a3);
}

double sub_2447FE814@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB6ADC(a2, *(char **)a1, *(void *)(a1 + 8), (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB6ADC(a2, *(char **)(a1 + 16), *(void *)(a1 + 24), (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244839174((unsigned char *)(a1 + 32), (uint64_t)&v11);
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_24480248C(a2, (unsigned char *)(a1 + 48), (uint64_t)&v11);
          uint64_t v9 = v12;
          long long v8 = v11;
          if (!v11)
          {
            sub_24480248C(a2, (unsigned char *)(a1 + 72), (uint64_t)&v11);
            uint64_t v9 = v12;
            long long v8 = v11;
            if (!v11)
            {
              sub_24480248C(a2, (unsigned char *)(a1 + 96), (uint64_t)&v11);
              uint64_t v9 = v12;
              long long v8 = v11;
              if (!v11)
              {
                sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
                long long v8 = v11;
                uint64_t v9 = v12;
              }
            }
          }
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2447FE9D4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v19[0] = 0;
  uint64_t v20 = a2;
  sub_2447ED6F8((uint64_t)v19, (uint64_t)&v16);
  int v6 = v18;
  if (v18 == 1)
  {
LABEL_18:
    double result = *(double *)&v16;
    *(_OWORD *)a3 = v16;
    *(void *)(a3 + 16) = v17;
  }
  else
  {
    while (1)
    {
      long long v14 = xmmword_265195C30;
      uint64_t v15 = 5652;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v16)
      {
        case 0:
          if (sub_244CB3B68(a2) != 16) {
            goto LABEL_14;
          }
          uint64_t v7 = a2;
          long long v8 = (_OWORD *)a1;
          goto LABEL_8;
        case 1:
          if (sub_244CB3B68(a2) == 16)
          {
            uint64_t v7 = a2;
            long long v8 = (_OWORD *)(a1 + 16);
LABEL_8:
            sub_244CB40C8(v7, v8, &v12);
          }
          else
          {
LABEL_14:
            LODWORD(v12) = 43;
            *((void *)&v12 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
            LODWORD(v13) = 80;
          }
          goto LABEL_15;
        case 2:
          *(unsigned char *)(a1 + 32) = 1;
          *(void *)(a1 + 40) = 0;
          sub_244CB3EFC(a2, (void *)(a1 + 40), (uint64_t)&v14);
          break;
        case 3:
          uint64_t v9 = a2;
          uint64_t v10 = a1 + 48;
          goto LABEL_13;
        case 4:
          uint64_t v9 = a2;
          uint64_t v10 = a1 + 72;
          goto LABEL_13;
        case 5:
          uint64_t v9 = a2;
          uint64_t v10 = a1 + 96;
LABEL_13:
          sub_2447F978C(v9, v10, (uint64_t)&v12);
LABEL_15:
          long long v14 = v12;
          uint64_t v15 = v13;
          break;
        default:
          break;
      }
      double result = *(double *)&v14;
      *(_OWORD *)a3 = v14;
      *(void *)(a3 + 16) = v15;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v19, (uint64_t)&v16);
      int v6 = v18;
      if (v18 == 1) {
        goto LABEL_18;
      }
    }
  }
  return result;
}

double sub_2447FEBC8@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB6ADC(a2, *(char **)a1, *(void *)(a1 + 8), (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244839174((unsigned char *)(a1 + 16), (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
        long long v8 = v11;
        uint64_t v9 = v12;
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2447FECD8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_12:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265195C48;
      uint64_t v11 = 5707;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        *(unsigned char *)(a1 + 16) = 1;
        *(void *)(a1 + 24) = 0;
        sub_244CB3EFC(a2, (void *)(a1 + 24), (uint64_t)&v10);
      }
      else if (!(_BYTE)v12)
      {
        if (sub_244CB3B68(a2) == 16)
        {
          sub_244CB40C8(a2, (_OWORD *)a1, &v8);
        }
        else
        {
          LODWORD(v8) = 43;
          *((void *)&v8 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
          LODWORD(v9) = 80;
        }
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_12;
      }
    }
  }
  return result;
}

double sub_2447FEE34@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_12:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265195C60;
      uint64_t v11 = 5746;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        *(unsigned char *)(a1 + 16) = 1;
        *(void *)(a1 + 24) = 0;
        sub_244CB3EFC(a2, (void *)(a1 + 24), (uint64_t)&v10);
      }
      else if (!(_BYTE)v12)
      {
        if (sub_244CB3B68(a2) == 16)
        {
          sub_244CB40C8(a2, (_OWORD *)a1, &v8);
        }
        else
        {
          LODWORD(v8) = 43;
          *((void *)&v8 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
          LODWORD(v9) = 80;
        }
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_12;
      }
    }
  }
  return result;
}

double sub_2447FEF90@<D0>(unsigned char *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  sub_2447FE544((uint64_t)&v7, 0, a1);
  if (!v8)
  {
    sub_2447F6524(v7, a1 + 8, (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244813DC0(a1 + 32, (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_24480248C(v7, a1 + 40, (uint64_t)&v11);
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_24480248C(v7, a1 + 64, (uint64_t)&v11);
          uint64_t v9 = v12;
          long long v8 = v11;
          if (!v11)
          {
            sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
            long long v8 = v11;
            uint64_t v9 = v12;
          }
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2447FF108@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  int v6 = v16;
  if (v16 == 1)
  {
LABEL_13:
    double result = *(double *)&v14;
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 16) = v15;
  }
  else
  {
    while (1)
    {
      long long v12 = xmmword_265195C78;
      uint64_t v13 = 5788;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v14)
      {
        case 0:
          sub_2447FE740(a2, (unsigned char *)a1, &v12);
          break;
        case 1:
          *(unsigned char *)(a1 + 8) = 1;
          *(void *)(a1 + 16) = 0;
          *(void *)(a1 + 24) = 0;
          sub_244CB41F0(a2, (_OWORD *)(a1 + 16), &v10);
          goto LABEL_10;
        case 2:
          *(_WORD *)(a1 + 32) = 1;
          sub_244CB3E8C(a2, (unsigned char *)(a1 + 33), (uint64_t)&v10);
          goto LABEL_10;
        case 3:
          uint64_t v7 = a2;
          uint64_t v8 = a1 + 40;
          goto LABEL_9;
        case 4:
          uint64_t v7 = a2;
          uint64_t v8 = a1 + 64;
LABEL_9:
          sub_2447F978C(v7, v8, (uint64_t)&v10);
LABEL_10:
          long long v12 = v10;
          uint64_t v13 = v11;
          break;
        default:
          break;
      }
      double result = *(double *)&v12;
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
      int v6 = v16;
      if (v16 == 1) {
        goto LABEL_13;
      }
    }
  }
  return result;
}

double sub_2447FF2AC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_12:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265195C90;
      uint64_t v11 = 5839;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        *(unsigned char *)(a1 + 16) = 1;
        *(void *)(a1 + 24) = 0;
        sub_244CB3EFC(a2, (void *)(a1 + 24), (uint64_t)&v10);
      }
      else if (!(_BYTE)v12)
      {
        if (sub_244CB3B68(a2) == 16)
        {
          sub_244CB40C8(a2, (_OWORD *)a1, &v8);
        }
        else
        {
          LODWORD(v8) = 43;
          *((void *)&v8 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
          LODWORD(v9) = 80;
        }
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_12;
      }
    }
  }
  return result;
}

double sub_2447FF408@<D0>(unsigned char *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  sub_2447FE544((uint64_t)&v7, 0, a1);
  if (!v8)
  {
    sub_2447F6524(v7, a1 + 8, (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_24484BB18((uint64_t)(a1 + 32), (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
        long long v8 = v11;
        uint64_t v9 = v12;
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2447FF528@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  for (int i = v14; v14 != 1; int i = v14)
  {
    long long v10 = xmmword_265195CA8;
    uint64_t v11 = 5879;
    if (i) {
      sub_24484AFEC();
    }
    if (v12 == 2)
    {
      sub_2447FF66C(a2, a1 + 32, (uint64_t)&v8);
    }
    else
    {
      if (v12 != 1)
      {
        if (!(_BYTE)v12) {
          sub_2447FE740(a2, (unsigned char *)a1, &v10);
        }
        goto LABEL_10;
      }
      *(unsigned char *)(a1 + 8) = 1;
      *(void *)(a1 + 16) = 0;
      *(void *)(a1 + 24) = 0;
      sub_244CB41F0(a2, (_OWORD *)(a1 + 16), &v8);
    }
    long long v10 = v8;
    uint64_t v11 = v9;
LABEL_10:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
    if (*(_DWORD *)a3) {
      return result;
    }
    sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  }
  double result = *(double *)&v12;
  *(_OWORD *)a3 = v12;
  *(void *)(a3 + 16) = v13;
  return result;
}

uint64_t sub_2447FF66C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = sub_244CB3B68(a1);
  if (result == 20)
  {
    if (*(unsigned char *)(a2 + 4)) {
      *(unsigned char *)(a2 + 4) = 0;
    }
    *(_DWORD *)a3 = 0;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
    int v7 = 168;
LABEL_5:
    *(_DWORD *)(a3 + 16) = v7;
    return result;
  }
  *(void *)a3 = 0;
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  *(_DWORD *)a2 = 0;
  *(unsigned char *)(a2 + 4) = 1;
  uint64_t result = sub_244CB3E0C(a1, (_DWORD *)a2, a3);
  if (!*(_DWORD *)a3)
  {
    if (!*(unsigned char *)(a2 + 4)) {
      sub_24479484C();
    }
    if (*(_DWORD *)a2 == 0x80000000)
    {
      *(_DWORD *)a3 = 1415;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
      int v7 = 175;
    }
    else
    {
      *(_DWORD *)a3 = 0;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
      int v7 = 177;
    }
    goto LABEL_5;
  }
  return result;
}

double sub_2447FF74C@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB6ADC(a2, *(char **)a1, *(void *)(a1 + 8), (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB68B8();
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244839174((unsigned char *)(a1 + 24), (uint64_t)&v11);
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
          long long v8 = v11;
          uint64_t v9 = v12;
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2447FF888@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 != 1)
  {
    while (1)
    {
      long long v10 = xmmword_265195CC0;
      uint64_t v11 = 5923;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 2) {
        break;
      }
      if (v12 == 1)
      {
        sub_244CB3E8C(a2, (unsigned char *)(a1 + 16), (uint64_t)&v10);
      }
      else if (!(_BYTE)v12)
      {
        if (sub_244CB3B68(a2) == 16)
        {
          sub_244CB40C8(a2, (_OWORD *)a1, &v8);
        }
        else
        {
          LODWORD(v8) = 43;
          *((void *)&v8 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
          LODWORD(v9) = 80;
        }
        goto LABEL_11;
      }
LABEL_12:
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        return result;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a1 + 24) = 1;
    *(void *)(a1 + 32) = 0;
    sub_244CB3EFC(a2, (void *)(a1 + 32), (uint64_t)&v8);
LABEL_11:
    long long v10 = v8;
    uint64_t v11 = v9;
    goto LABEL_12;
  }
LABEL_14:
  double result = *(double *)&v12;
  *(_OWORD *)a3 = v12;
  *(void *)(a3 + 16) = v13;
  return result;
}

double sub_2447FFA04@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB6ADC(a2, *(char **)a1, *(void *)(a1 + 8), (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_24480248C(a2, (unsigned char *)(a1 + 16), (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
        long long v8 = v11;
        uint64_t v9 = v12;
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2447FFB14@<D0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_12:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265195CD8;
      uint64_t v11 = 5966;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_2447F978C(a2, (uint64_t)(a1 + 1), (uint64_t)&v10);
      }
      else if (!(_BYTE)v12)
      {
        if (sub_244CB3B68(a2) == 16)
        {
          sub_244CB40C8(a2, a1, &v8);
        }
        else
        {
          LODWORD(v8) = 43;
          *((void *)&v8 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
          LODWORD(v9) = 80;
        }
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_12;
      }
    }
  }
  return result;
}

double sub_2447FFC5C@<D0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_12:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265195CF0;
      uint64_t v11 = 6005;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_2447F978C(a2, (uint64_t)(a1 + 1), (uint64_t)&v10);
      }
      else if (!(_BYTE)v12)
      {
        if (sub_244CB3B68(a2) == 16)
        {
          sub_244CB40C8(a2, a1, &v8);
        }
        else
        {
          LODWORD(v8) = 43;
          *((void *)&v8 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
          LODWORD(v9) = 80;
        }
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_12;
      }
    }
  }
  return result;
}

void sub_2447FFDA4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4 = (unsigned char *)a1;
  int v5 = *(_DWORD *)(a3 + 8);
  switch(v5)
  {
    case 0:
      goto LABEL_8;
    case 1:
      uint64_t v6 = a1 + 8;
      goto LABEL_3;
    case 2:
      int v4 = (unsigned char *)(a1 + 88);
      goto LABEL_8;
    case 3:
      int v4 = (unsigned char *)(a1 + 89);
LABEL_8:
      sub_244CB3E8C(a2, v4, a4);
      break;
    case 4:
      sub_244CB3C0C(a2, (char *)(a1 + 90), a4);
      break;
    case 5:
      sub_2447FFF24(a2, (unsigned __int8 *)(a1 + 91), a4);
      break;
    case 6:
      sub_2447FFFFC(a2, a1 + 96, (void *)a4);
      break;
    case 7:
      sub_2447FF66C(a2, a1 + 120, a4);
      break;
    case 8:
      uint64_t v6 = a1 + 128;
LABEL_3:
      sub_24484B03C(v6, a2, a4);
      break;
    case 9:
      sub_24484B6B0(a2, (_WORD *)(a1 + 208), (void *)a4);
      break;
    case 10:
      int v7 = (_WORD *)(a1 + 210);
LABEL_22:
      sub_244CB3F40(a2, v7, a4);
      break;
    default:
      switch(v5)
      {
        case 65528:
          uint64_t v6 = a1 + 216;
          goto LABEL_3;
        case 65529:
          uint64_t v6 = a1 + 296;
          goto LABEL_3;
        case 65530:
          uint64_t v6 = a1 + 376;
          goto LABEL_3;
        case 65531:
          uint64_t v6 = a1 + 456;
          goto LABEL_3;
        case 65532:
          sub_244CB3FB0(a2, (_DWORD *)(a1 + 536), a4);
          break;
        case 65533:
          int v7 = (_WORD *)(a1 + 540);
          goto LABEL_22;
        default:
          *(_DWORD *)a4 = 0;
          *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-co"
                                "mmon/app-common/zap-generated/cluster-objects.cpp";
          *(_DWORD *)(a4 + 16) = 6066;
          break;
      }
      break;
  }
}

uint64_t sub_2447FFF24@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = sub_244CB3B68(a1);
  if (result == 20)
  {
    if (a2[1]) {
      a2[1] = 0;
    }
    *(_DWORD *)a3 = 0;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
    int v7 = 168;
LABEL_5:
    *(_DWORD *)(a3 + 16) = v7;
    return result;
  }
  *(void *)a3 = 0;
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  *(_WORD *)a2 = 256;
  uint64_t result = sub_2447FE740(a1, a2, (void *)a3);
  if (!*(_DWORD *)a3)
  {
    if (!a2[1]) {
      sub_24479484C();
    }
    if (*a2 == 255)
    {
      *(_DWORD *)a3 = 1415;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
      int v7 = 175;
    }
    else
    {
      *(_DWORD *)a3 = 0;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
      int v7 = 177;
    }
    goto LABEL_5;
  }
  return result;
}

void sub_2447FFFFC(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if (sub_244CB3B68(a1) == 20)
  {
    int v6 = 0;
    if (*(unsigned char *)(a2 + 16)) {
      *(unsigned char *)(a2 + 16) = 0;
    }
    int v7 = 168;
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
    *(void *)a2 = 0;
    *(void *)(a2 + 8) = 0;
    *(unsigned char *)(a2 + 16) = 1;
    if (sub_244CB3B68(a1) == 16)
    {
      sub_244CB40C8(a1, (_OWORD *)a2, a3);
      if (*(_DWORD *)a3) {
        return;
      }
      int v6 = 0;
      int v7 = 177;
    }
    else
    {
      int v7 = 80;
      int v6 = 43;
    }
  }
  *(_DWORD *)a3 = v6;
  a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
  *((_DWORD *)a3 + 4) = v7;
}

double sub_2448000BC@<D0>(unsigned char *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  sub_2447F06A4((uint64_t)&v7, 0, a1);
  sub_2447F1C40((uint64_t)&v7, 1, a1 + 1);
  if (!v8)
  {
    sub_2447F6524(v7, a1 + 8, (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
      long long v8 = v11;
      uint64_t v9 = v12;
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2448001C0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  for (int i = v14; v14 != 1; int i = v14)
  {
    long long v10 = xmmword_265195D08;
    uint64_t v11 = 6098;
    if (i) {
      sub_24484AFEC();
    }
    if (v12 == 2)
    {
      *(unsigned char *)(a1 + 8) = 1;
      *(void *)(a1 + 16) = 0;
      *(void *)(a1 + 24) = 0;
      sub_244CB41F0(a2, (_OWORD *)(a1 + 16), &v8);
    }
    else
    {
      if (v12 != 1)
      {
        if (!(_BYTE)v12) {
          sub_2447F5F24(a2, (unsigned char *)a1, &v10);
        }
        goto LABEL_10;
      }
      sub_2447F1DCC(a2, (unsigned char *)(a1 + 1), &v8);
    }
    long long v10 = v8;
    uint64_t v11 = v9;
LABEL_10:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
    if (*(_DWORD *)a3) {
      return result;
    }
    sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  }
  double result = *(double *)&v12;
  *(_OWORD *)a3 = v12;
  *(void *)(a3 + 16) = v13;
  return result;
}

double sub_244800304@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  sub_244800450((uint64_t)&v7, 0, (unsigned char *)a1);
  if (!v8)
  {
    sub_244CB6ADC(v7, *(char **)(a1 + 8), *(void *)(a1 + 16), (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244839174((unsigned char *)(a1 + 24), (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244839174((unsigned char *)(a1 + 40), (uint64_t)&v11);
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
          long long v8 = v11;
          uint64_t v9 = v12;
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244800450(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  uint64_t v3 = a1 + 8;
  if (!*(_DWORD *)(a1 + 8))
  {
    if (*a3 == 5)
    {
      LODWORD(v5) = 1415;
      *((void *)&v5 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
      LODWORD(v6) = 75;
    }
    else
    {
      sub_244CB68B8();
    }
    double result = *(double *)&v5;
    *(_OWORD *)uint64_t v3 = v5;
    *(void *)(v3 + 16) = v6;
  }
  return result;
}

double sub_2448004CC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  int v6 = v16;
  if (v16 == 1)
  {
LABEL_2:
    double result = *(double *)&v14;
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 16) = v15;
  }
  else
  {
    while (1)
    {
      long long v12 = xmmword_265195D20;
      uint64_t v13 = 6143;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v14)
      {
        case 0:
          sub_2447FACE4(a2, (unsigned char *)a1, &v12);
          break;
        case 1:
          if (sub_244CB3B68(a2) == 16)
          {
            sub_244CB40C8(a2, (_OWORD *)(a1 + 8), &v10);
          }
          else
          {
            LODWORD(v10) = 43;
            *((void *)&v10 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
            LODWORD(v11) = 80;
          }
          goto LABEL_12;
        case 2:
          *(unsigned char *)(a1 + 24) = 1;
          *(void *)(a1 + 32) = 0;
          uint64_t v8 = a2;
          uint64_t v9 = (void *)(a1 + 32);
          goto LABEL_11;
        case 3:
          *(unsigned char *)(a1 + 40) = 1;
          *(void *)(a1 + 48) = 0;
          uint64_t v8 = a2;
          uint64_t v9 = (void *)(a1 + 48);
LABEL_11:
          sub_244CB3EFC(v8, v9, (uint64_t)&v10);
LABEL_12:
          long long v12 = v10;
          uint64_t v13 = v11;
          break;
        default:
          break;
      }
      double result = *(double *)&v12;
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
      int v6 = v16;
      if (v16 == 1) {
        goto LABEL_2;
      }
    }
  }
  return result;
}

void sub_24480068C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  switch(*(_DWORD *)(a3 + 8))
  {
    case 0xFFF8:
      goto LABEL_2;
    case 0xFFF9:
      a1 += 80;
      goto LABEL_2;
    case 0xFFFA:
      a1 += 160;
      goto LABEL_2;
    case 0xFFFB:
      a1 += 240;
LABEL_2:
      sub_24484B03C(a1, a2, a4);
      break;
    case 0xFFFC:
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 320), a4);
      break;
    case 0xFFFD:
      sub_244CB3F40(a2, (_WORD *)(a1 + 324), a4);
      break;
    default:
      *(_DWORD *)a4 = 0;
      *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-common"
                            "/app-common/zap-generated/cluster-objects.cpp";
      *(_DWORD *)(a4 + 16) = 6190;
      break;
  }
}

double sub_244800730@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB6D80(v7, *(char **)a1, *(void *)(a1 + 8), (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB65C8();
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_24484BB58((uint64_t)v7, 2, a1 + 17);
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_24484BB58((uint64_t)v7, 3, a1 + 19);
          uint64_t v9 = v12;
          long long v8 = v11;
          if (!v11)
          {
            sub_244CB6ADC(v7, *(char **)(a1 + 24), *(void *)(a1 + 32), (uint64_t)&v11);
            long long v8 = v11;
            uint64_t v9 = v12;
          }
        }
      }
    }
  }
  sub_2448008F4((uint64_t)&v7, 5u, (uint64_t *)(a1 + 40));
  sub_2448008F4((uint64_t)&v7, 6u, (uint64_t *)(a1 + 56));
  sub_244800450((uint64_t)&v7, 7, (unsigned char *)(a1 + 72));
  if (!v8)
  {
    sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2448008F4(uint64_t a1, unsigned int a2, uint64_t *a3)
{
  uint64_t v3 = a1 + 8;
  if (!*(_DWORD *)(a1 + 8))
  {
    int v4 = *(char **)a1;
    uint64_t v5 = *a3;
    uint64_t v6 = a3[1];
    int v11 = 0;
    uint64_t v10 = 0;
    long long v9 = 0uLL;
    sub_244CB7594(v4, a2, 22, &v11, (uint64_t)&v9);
    if (!v9)
    {
      if (v6)
      {
        uint64_t v7 = v5 + 16 * v6;
        while (1)
        {
          long long v9 = 0uLL;
          uint64_t v10 = 0;
          sub_244CB6ADC(v4, *(char **)v5, *(void *)(v5 + 8), (uint64_t)&v9);
          if (v9) {
            break;
          }
          v5 += 16;
          if (v5 == v7) {
            goto LABEL_7;
          }
        }
      }
      else
      {
LABEL_7:
        long long v9 = 0uLL;
        uint64_t v10 = 0;
        sub_244CB7708((uint64_t)v4, v11, (uint64_t)&v9);
        if (!v9)
        {
          LODWORD(v9) = 0;
          *((void *)&v9 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/List.h";
          LODWORD(v10) = 86;
        }
      }
    }
    double result = *(double *)&v9;
    *(_OWORD *)uint64_t v3 = v9;
    *(void *)(v3 + 16) = v10;
  }
  return result;
}

double sub_2448009E0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v18[0] = 0;
  uint64_t v19 = a2;
  sub_2447ED6F8((uint64_t)v18, (uint64_t)&v15);
  int v6 = v17;
  if (v17 == 1)
  {
LABEL_19:
    double result = *(double *)&v15;
    *(_OWORD *)a3 = v15;
    *(void *)(a3 + 16) = v16;
  }
  else
  {
    while (1)
    {
      long long v13 = xmmword_265195D38;
      uint64_t v14 = 6227;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v15)
      {
        case 0:
          sub_244CB41F0(a2, (_OWORD *)a1, &v13);
          break;
        case 1:
          sub_244CB3C0C(a2, (char *)(a1 + 16), (uint64_t)&v11);
          goto LABEL_16;
        case 2:
          uint64_t v7 = a2;
          long long v8 = (char *)(a1 + 17);
          goto LABEL_8;
        case 3:
          uint64_t v7 = a2;
          long long v8 = (char *)(a1 + 19);
LABEL_8:
          sub_244800BF4(v7, v8, &v11);
          goto LABEL_16;
        case 4:
          if (sub_244CB3B68(a2) == 16)
          {
            sub_244CB40C8(a2, (_OWORD *)(a1 + 24), &v11);
          }
          else
          {
            LODWORD(v11) = 43;
            *((void *)&v11 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
            LODWORD(v12) = 80;
          }
          goto LABEL_16;
        case 5:
          uint64_t v9 = a1 + 40;
          goto LABEL_13;
        case 6:
          uint64_t v9 = a1 + 120;
LABEL_13:
          sub_24484B03C(v9, a2, (uint64_t)&v11);
          goto LABEL_16;
        case 7:
          sub_2447FACE4(a2, (unsigned char *)(a1 + 200), &v11);
LABEL_16:
          long long v13 = v11;
          uint64_t v14 = v12;
          break;
        default:
          break;
      }
      double result = *(double *)&v13;
      *(_OWORD *)a3 = v13;
      *(void *)(a3 + 16) = v14;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v18, (uint64_t)&v15);
      int v6 = v17;
      if (v17 == 1) {
        goto LABEL_19;
      }
    }
  }
  return result;
}

uint64_t sub_244800BF4@<X0>(uint64_t a1@<X0>, char *a2@<X1>, void *a3@<X8>)
{
  uint64_t result = sub_244CB3B68(a1);
  if (result == 20)
  {
    if (a2[1]) {
      a2[1] = 0;
    }
    int v7 = 168;
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
    *(_WORD *)a2 = 256;
    uint64_t result = sub_244CB3C0C(a1, a2, (uint64_t)a3);
    if (*(_DWORD *)a3) {
      return result;
    }
    int v7 = 177;
  }
  *(_DWORD *)a3 = 0;
  a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
  *((_DWORD *)a3 + 4) = v7;
  return result;
}

double sub_244800C84@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB6ADC(a2, *(char **)a1, *(void *)(a1 + 8), (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB68CC();
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
        long long v8 = v11;
        uint64_t v9 = v12;
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244800D94@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_12:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265195D50;
      uint64_t v11 = 6294;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_244CB3EFC(a2, (void *)(a1 + 16), (uint64_t)&v10);
      }
      else if (!(_BYTE)v12)
      {
        if (sub_244CB3B68(a2) == 16)
        {
          sub_244CB40C8(a2, (_OWORD *)a1, &v8);
        }
        else
        {
          LODWORD(v8) = 43;
          *((void *)&v8 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
          LODWORD(v9) = 80;
        }
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_12;
      }
    }
  }
  return result;
}

double sub_244800EDC@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB68CC();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_2447F5BC4(a1 + 8, (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
        long long v8 = v11;
        uint64_t v9 = v12;
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244800FEC@<D0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265195D68;
      uint64_t v11 = 6353;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_2447F5E48(a2, (uint64_t)(a1 + 1), (uint64_t)&v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB3EFC(a2, a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_2448010FC@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB6ADC(a2, *(char **)a1, *(void *)(a1 + 8), (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB68B8();
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB6904();
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
          long long v8 = v11;
          uint64_t v9 = v12;
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244801238@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 != 1)
  {
    while (1)
    {
      long long v10 = xmmword_265195D80;
      uint64_t v11 = 6393;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 2) {
        break;
      }
      if (v12 == 1)
      {
        sub_244CB3E8C(a2, (unsigned char *)(a1 + 16), (uint64_t)&v10);
      }
      else if (!(_BYTE)v12)
      {
        if (sub_244CB3B68(a2) == 16)
        {
          sub_244CB40C8(a2, (_OWORD *)a1, &v8);
        }
        else
        {
          LODWORD(v8) = 43;
          *((void *)&v8 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
          LODWORD(v9) = 80;
        }
        goto LABEL_11;
      }
LABEL_12:
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        return result;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_14;
      }
    }
    sub_244CB3F40(a2, (_WORD *)(a1 + 18), (uint64_t)&v8);
LABEL_11:
    long long v10 = v8;
    uint64_t v11 = v9;
    goto LABEL_12;
  }
LABEL_14:
  double result = *(double *)&v12;
  *(_OWORD *)a3 = v12;
  *(void *)(a3 + 16) = v13;
  return result;
}

double sub_2448013A8@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB6ADC(a2, *(char **)a1, *(void *)(a1 + 8), (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
      long long v8 = v11;
      uint64_t v9 = v12;
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_24480148C@<D0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_10:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265195D98;
      uint64_t v11 = 6435;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v12)
      {
        if (sub_244CB3B68(a2) == 16)
        {
          sub_244CB40C8(a2, a1, &v8);
        }
        else
        {
          LODWORD(v8) = 43;
          *((void *)&v8 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
          LODWORD(v9) = 80;
        }
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_10;
      }
    }
  }
  return result;
}

void sub_2448015B4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4 = *(_DWORD *)(a3 + 8);
  switch(v4)
  {
    case 0:
      goto LABEL_2;
    case 1:
      uint64_t v5 = (_WORD *)(a1 + 80);
LABEL_20:
      sub_244CB3F40(a2, v5, a4);
      return;
    case 2:
      sub_244CB3EFC(a2, (void *)(a1 + 88), a4);
      return;
    case 3:
      int v6 = (_DWORD *)(a1 + 96);
LABEL_18:
      sub_244CB3FB0(a2, v6, a4);
      return;
    case 4:
      sub_2447F6AD4(a2, (unsigned char *)(a1 + 100), (void *)a4);
      return;
    case 5:
      a1 += 104;
      goto LABEL_2;
    case 6:
      a1 += 184;
      goto LABEL_2;
    case 7:
      a1 += 264;
LABEL_2:
      sub_24484B03C(a1, a2, a4);
      break;
    case 8:
      sub_244CB3C0C(a2, (char *)(a1 + 344), a4);
      break;
    default:
      switch(v4)
      {
        case 65528:
          a1 += 352;
          goto LABEL_2;
        case 65529:
          a1 += 432;
          goto LABEL_2;
        case 65530:
          a1 += 512;
          goto LABEL_2;
        case 65531:
          a1 += 592;
          goto LABEL_2;
        case 65532:
          int v6 = (_DWORD *)(a1 + 672);
          goto LABEL_18;
        case 65533:
          uint64_t v5 = (_WORD *)(a1 + 676);
          goto LABEL_20;
        default:
          *(_DWORD *)a4 = 0;
          *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-co"
                                "mmon/app-common/zap-generated/cluster-objects.cpp";
          *(_DWORD *)(a4 + 16) = 6488;
          break;
      }
      break;
  }
}

double sub_244801704@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265195DB0;
      uint64_t v11 = 6515;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_24484B03C(a1 + 80, a2, (uint64_t)&v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_24484B03C(a1, a2, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

void sub_244801814(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  int v11 = 0;
  a4[1] = 0;
  a4[2] = 0;
  *a4 = 0;
  sub_244CB7594(a2, a3, 21, &v11, (uint64_t)a4);
  if (!*(_DWORD *)a4)
  {
    int v7 = *(unsigned char **)a1;
    uint64_t v8 = *(void *)(a1 + 8);
    int v12 = 0;
    a4[1] = 0;
    a4[2] = 0;
    *a4 = 0;
    sub_244CB7594(a2, 0, 22, &v12, (uint64_t)a4);
    if (!*(_DWORD *)a4)
    {
      if (v8)
      {
        while (1)
        {
          *a4 = 0;
          a4[1] = 0;
          a4[2] = 0;
          if (*v7 == 7) {
            break;
          }
          sub_244CB68B8();
          if (*(_DWORD *)a4) {
            return;
          }
          ++v7;
          if (!--v8) {
            goto LABEL_8;
          }
        }
      }
      else
      {
LABEL_8:
        *a4 = 0;
        a4[1] = 0;
        a4[2] = 0;
        sub_244CB7708((uint64_t)a2, v12, (uint64_t)a4);
        if (*(_DWORD *)a4) {
          return;
        }
        long long v10 = *(unsigned char **)(a1 + 16);
        uint64_t v9 = *(void *)(a1 + 24);
        int v13 = 0;
        a4[1] = 0;
        a4[2] = 0;
        *a4 = 0;
        sub_244CB7594(a2, 1, 22, &v13, (uint64_t)a4);
        if (*(_DWORD *)a4) {
          return;
        }
        if (!v9)
        {
LABEL_14:
          *a4 = 0;
          a4[1] = 0;
          a4[2] = 0;
          sub_244CB7708((uint64_t)a2, v13, (uint64_t)a4);
          if (!*(_DWORD *)a4)
          {
            *(_DWORD *)a4 = 0;
            a4[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/List.h";
            *((_DWORD *)a4 + 4) = 86;
            sub_244CB7708((uint64_t)a2, v11, (uint64_t)a4);
          }
          return;
        }
        while (1)
        {
          *a4 = 0;
          a4[1] = 0;
          a4[2] = 0;
          if (*v10 == 7) {
            break;
          }
          sub_244CB68B8();
          if (*(_DWORD *)a4) {
            return;
          }
          ++v10;
          if (!--v9) {
            goto LABEL_14;
          }
        }
      }
      *(_DWORD *)a4 = 1415;
      a4[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
      *((_DWORD *)a4 + 4) = 75;
    }
  }
}

double sub_2448019E0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265195DC8;
      uint64_t v11 = 6555;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_24484B03C(a1 + 80, a2, (uint64_t)&v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_24484B03C(a1, a2, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

void sub_244801AF0(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  int v11 = 0;
  a4[1] = 0;
  a4[2] = 0;
  *a4 = 0;
  sub_244CB7594(a2, a3, 21, &v11, (uint64_t)a4);
  if (!*(_DWORD *)a4)
  {
    int v7 = *(unsigned char **)a1;
    uint64_t v8 = *(void *)(a1 + 8);
    int v12 = 0;
    a4[1] = 0;
    a4[2] = 0;
    *a4 = 0;
    sub_244CB7594(a2, 0, 22, &v12, (uint64_t)a4);
    if (!*(_DWORD *)a4)
    {
      if (v8)
      {
        while (1)
        {
          *a4 = 0;
          a4[1] = 0;
          a4[2] = 0;
          if (*v7 == 4) {
            break;
          }
          sub_244CB68B8();
          if (*(_DWORD *)a4) {
            return;
          }
          ++v7;
          if (!--v8) {
            goto LABEL_8;
          }
        }
      }
      else
      {
LABEL_8:
        *a4 = 0;
        a4[1] = 0;
        a4[2] = 0;
        sub_244CB7708((uint64_t)a2, v12, (uint64_t)a4);
        if (*(_DWORD *)a4) {
          return;
        }
        long long v10 = *(unsigned char **)(a1 + 16);
        uint64_t v9 = *(void *)(a1 + 24);
        int v13 = 0;
        a4[1] = 0;
        a4[2] = 0;
        *a4 = 0;
        sub_244CB7594(a2, 1, 22, &v13, (uint64_t)a4);
        if (*(_DWORD *)a4) {
          return;
        }
        if (!v9)
        {
LABEL_14:
          *a4 = 0;
          a4[1] = 0;
          a4[2] = 0;
          sub_244CB7708((uint64_t)a2, v13, (uint64_t)a4);
          if (!*(_DWORD *)a4)
          {
            *(_DWORD *)a4 = 0;
            a4[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/List.h";
            *((_DWORD *)a4 + 4) = 86;
            sub_244CB7708((uint64_t)a2, v11, (uint64_t)a4);
          }
          return;
        }
        while (1)
        {
          *a4 = 0;
          a4[1] = 0;
          a4[2] = 0;
          if (*v10 == 4) {
            break;
          }
          sub_244CB68B8();
          if (*(_DWORD *)a4) {
            return;
          }
          ++v10;
          if (!--v9) {
            goto LABEL_14;
          }
        }
      }
      *(_DWORD *)a4 = 1415;
      a4[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
      *((_DWORD *)a4 + 4) = 75;
    }
  }
}

double sub_244801CBC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265195DE0;
      uint64_t v11 = 6595;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_24484B03C(a1 + 80, a2, (uint64_t)&v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_24484B03C(a1, a2, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

void sub_244801DCC(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  int v7 = 0;
  a4[1] = 0;
  a4[2] = 0;
  *a4 = 0;
  sub_244CB7594(a2, a3, 21, &v7, (uint64_t)a4);
  if (!*(_DWORD *)a4)
  {
    *a4 = 0;
    a4[1] = 0;
    a4[2] = 0;
    if (*a1 == 7)
    {
      *(_DWORD *)a4 = 1415;
      a4[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
      *((_DWORD *)a4 + 4) = 75;
    }
    else
    {
      sub_244CB68B8();
      if (!*(_DWORD *)a4) {
        sub_244CB7708((uint64_t)a2, v7, (uint64_t)a4);
      }
    }
  }
}

double sub_244801E88@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265195DF8;
      uint64_t v9 = 6634;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_2447F6AD4(a2, a1, &v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_244801F60@<D0>(unsigned char *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB68CC();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_2447F6524(a2, a1 + 8, (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_24483F918(a1 + 32, (uint64_t)&v11);
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_24483F918(a1 + 40, (uint64_t)&v11);
          uint64_t v9 = v12;
          long long v8 = v11;
          if (!v11)
          {
            sub_24483F918(a1 + 48, (uint64_t)&v11);
            uint64_t v9 = v12;
            long long v8 = v11;
            if (!v11)
            {
              sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
              long long v8 = v11;
              uint64_t v9 = v12;
            }
          }
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_2448020F4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  int v6 = v16;
  if (v16 == 1)
  {
LABEL_13:
    double result = *(double *)&v14;
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 16) = v15;
  }
  else
  {
    while (1)
    {
      long long v12 = xmmword_265195E10;
      uint64_t v13 = 6678;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v14)
      {
        case 0:
          sub_244CB3EFC(a2, (void *)a1, (uint64_t)&v12);
          break;
        case 1:
          *(unsigned char *)(a1 + 8) = 1;
          *(void *)(a1 + 16) = 0;
          *(void *)(a1 + 24) = 0;
          sub_244CB41F0(a2, (_OWORD *)(a1 + 16), &v10);
          goto LABEL_10;
        case 2:
          *(unsigned char *)(a1 + 32) = 1;
          *(_DWORD *)(a1 + 36) = 0;
          uint64_t v7 = a2;
          long long v8 = (_DWORD *)(a1 + 36);
          goto LABEL_9;
        case 3:
          *(unsigned char *)(a1 + 40) = 1;
          *(_DWORD *)(a1 + 44) = 0;
          uint64_t v7 = a2;
          long long v8 = (_DWORD *)(a1 + 44);
          goto LABEL_9;
        case 4:
          *(unsigned char *)(a1 + 48) = 1;
          *(_DWORD *)(a1 + 52) = 0;
          uint64_t v7 = a2;
          long long v8 = (_DWORD *)(a1 + 52);
LABEL_9:
          sub_244CB3FB0(v7, v8, (uint64_t)&v10);
LABEL_10:
          long long v12 = v10;
          uint64_t v13 = v11;
          break;
        default:
          break;
      }
      double result = *(double *)&v12;
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
      int v6 = v16;
      if (v16 == 1) {
        goto LABEL_13;
      }
    }
  }
  return result;
}

void sub_2448022A8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  switch(*(_DWORD *)(a3 + 8))
  {
    case 0xFFF8:
      a1 += 104;
      goto LABEL_3;
    case 0xFFF9:
      a1 += 184;
      goto LABEL_3;
    case 0xFFFA:
      a1 += 264;
      goto LABEL_3;
    case 0xFFFB:
      a1 += 344;
LABEL_3:
      sub_24484B03C(a1, a2, a4);
      break;
    case 0xFFFC:
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 424), a4);
      break;
    case 0xFFFD:
      sub_244CB3F40(a2, (_WORD *)(a1 + 428), a4);
      break;
    default:
      switch(*(_DWORD *)(a3 + 8))
      {
        case 0xFFF8:
          goto LABEL_3;
        case 0xFFF9:
          int v4 = (void *)(a1 + 80);
          goto LABEL_14;
        case 0xFFFA:
          int v4 = (void *)(a1 + 88);
          goto LABEL_14;
        case 0xFFFB:
          int v4 = (void *)(a1 + 96);
LABEL_14:
          sub_244CB3EFC(a2, v4, a4);
          break;
        default:
          *(_DWORD *)a4 = 0;
          *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-co"
                                "mmon/app-common/zap-generated/cluster-objects.cpp";
          *(_DWORD *)(a4 + 16) = 6761;
          break;
      }
      break;
  }
}

void sub_2448023B0(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  int v7 = 0;
  a4[1] = 0;
  a4[2] = 0;
  *a4 = 0;
  sub_244CB7594(a2, a3, 21, &v7, (uint64_t)a4);
  if (!*(_DWORD *)a4)
  {
    *a4 = 0;
    a4[1] = 0;
    a4[2] = 0;
    sub_244CB68CC();
    if (!*(_DWORD *)a4)
    {
      *a4 = 0;
      a4[1] = 0;
      a4[2] = 0;
      sub_2447F6524(a2, (unsigned char *)(a1 + 8), (uint64_t)a4);
      if (!*(_DWORD *)a4)
      {
        *a4 = 0;
        a4[1] = 0;
        a4[2] = 0;
        sub_24480248C(a2, (unsigned char *)(a1 + 32), (uint64_t)a4);
        if (!*(_DWORD *)a4) {
          sub_244CB7708((uint64_t)a2, v7, (uint64_t)a4);
        }
      }
    }
  }
}

char *sub_24480248C@<X0>(char *result@<X0>, unsigned char *a2@<X2>, uint64_t a3@<X8>)
{
  if (*a2)
  {
    int v4 = result;
    uint64_t v5 = sub_2446D18A4(a2);
    int v6 = *(char **)v5;
    unint64_t v7 = *((void *)v5 + 1);
    return sub_244CB6ADC(v4, v6, v7, a3);
  }
  else
  {
    *(_DWORD *)a3 = 0;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
    *(_DWORD *)(a3 + 16) = 171;
  }
  return result;
}

double sub_244802514@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  for (int i = v14; v14 != 1; int i = v14)
  {
    long long v10 = xmmword_265195E28;
    uint64_t v11 = 6789;
    if (i) {
      sub_24484AFEC();
    }
    if (v12 == 2)
    {
      sub_2447F978C(a2, a1 + 32, (uint64_t)&v8);
    }
    else
    {
      if (v12 != 1)
      {
        if (!(_BYTE)v12) {
          sub_244CB3EFC(a2, (void *)a1, (uint64_t)&v10);
        }
        goto LABEL_10;
      }
      *(unsigned char *)(a1 + 8) = 1;
      *(void *)(a1 + 16) = 0;
      *(void *)(a1 + 24) = 0;
      sub_244CB41F0(a2, (_OWORD *)(a1 + 16), &v8);
    }
    long long v10 = v8;
    uint64_t v11 = v9;
LABEL_10:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
    if (*(_DWORD *)a3) {
      return result;
    }
    sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  }
  double result = *(double *)&v12;
  *(_OWORD *)a3 = v12;
  *(void *)(a3 + 16) = v13;
  return result;
}

double sub_244802658@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB68CC();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB694C();
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB6904();
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_244CB694C();
          uint64_t v9 = v12;
          long long v8 = v11;
          if (!v11)
          {
            sub_244CB694C();
            uint64_t v9 = v12;
            long long v8 = v11;
            if (!v11)
            {
              sub_244CB68B8();
              uint64_t v9 = v12;
              long long v8 = v11;
              if (!v11)
              {
                sub_24484BB6C((unsigned __int8 *)(a1 + 25), (uint64_t)&v11);
                uint64_t v9 = v12;
                long long v8 = v11;
                if (!v11)
                {
                  sub_24484BB6C((unsigned __int8 *)(a1 + 27), (uint64_t)&v11);
                  uint64_t v9 = v12;
                  long long v8 = v11;
                  if (!v11)
                  {
                    sub_244CB68B8();
                    uint64_t v9 = v12;
                    long long v8 = v11;
                    if (!v11)
                    {
                      sub_244CB68B8();
                      uint64_t v9 = v12;
                      long long v8 = v11;
                      if (!v11)
                      {
                        sub_244CB65C8();
                        uint64_t v9 = v12;
                        long long v8 = v11;
                        if (!v11)
                        {
                          sub_244CB65C8();
                          uint64_t v9 = v12;
                          long long v8 = v11;
                          if (!v11)
                          {
                            sub_244CB65C8();
                            uint64_t v9 = v12;
                            long long v8 = v11;
                            if (!v11)
                            {
                              sub_244CB65C8();
                              uint64_t v9 = v12;
                              long long v8 = v11;
                              if (!v11)
                              {
                                sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
                                long long v8 = v11;
                                uint64_t v9 = v12;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244802978@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v23[0] = 0;
  uint64_t v24 = a2;
  sub_2447ED6F8((uint64_t)v23, (uint64_t)&v20);
  int v6 = v22;
  if (v22 == 1)
  {
LABEL_25:
    double result = *(double *)&v20;
    *(_OWORD *)a3 = v20;
    *(void *)(a3 + 16) = v21;
  }
  else
  {
    while (1)
    {
      long long v18 = xmmword_265195E40;
      uint64_t v19 = 6850;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v20)
      {
        case 0:
          sub_244CB3EFC(a2, (void *)a1, (uint64_t)&v18);
          break;
        case 1:
          uint64_t v7 = a2;
          long long v8 = (_DWORD *)(a1 + 8);
          goto LABEL_12;
        case 2:
          sub_244CB3F40(a2, (_WORD *)(a1 + 12), (uint64_t)&v16);
          goto LABEL_22;
        case 3:
          uint64_t v7 = a2;
          long long v8 = (_DWORD *)(a1 + 16);
          goto LABEL_12;
        case 4:
          uint64_t v7 = a2;
          long long v8 = (_DWORD *)(a1 + 20);
LABEL_12:
          sub_244CB3FB0(v7, v8, (uint64_t)&v16);
          goto LABEL_22;
        case 5:
          uint64_t v9 = a2;
          int v10 = (unsigned char *)(a1 + 24);
          goto LABEL_18;
        case 6:
          uint64_t v13 = a2;
          int v14 = (unsigned __int8 *)(a1 + 25);
          goto LABEL_16;
        case 7:
          uint64_t v13 = a2;
          int v14 = (unsigned __int8 *)(a1 + 27);
LABEL_16:
          sub_244802BFC(v13, v14, (uint64_t)&v16);
          goto LABEL_22;
        case 8:
          uint64_t v9 = a2;
          int v10 = (unsigned char *)(a1 + 29);
          goto LABEL_18;
        case 9:
          uint64_t v9 = a2;
          int v10 = (unsigned char *)(a1 + 30);
LABEL_18:
          sub_244CB3E8C(v9, v10, (uint64_t)&v16);
          goto LABEL_22;
        case 10:
          uint64_t v11 = a2;
          uint64_t v12 = (char *)(a1 + 31);
          goto LABEL_21;
        case 11:
          uint64_t v11 = a2;
          uint64_t v12 = (char *)(a1 + 32);
          goto LABEL_21;
        case 12:
          uint64_t v11 = a2;
          uint64_t v12 = (char *)(a1 + 33);
          goto LABEL_21;
        case 13:
          uint64_t v11 = a2;
          uint64_t v12 = (char *)(a1 + 34);
LABEL_21:
          sub_244CB3C0C(v11, v12, (uint64_t)&v16);
LABEL_22:
          long long v18 = v16;
          uint64_t v19 = v17;
          break;
        default:
          break;
      }
      double result = *(double *)&v18;
      *(_OWORD *)a3 = v18;
      *(void *)(a3 + 16) = v19;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v23, (uint64_t)&v20);
      int v6 = v22;
      if (v22 == 1) {
        goto LABEL_25;
      }
    }
  }
  return result;
}

uint64_t sub_244802BFC@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = sub_244CB3B68(a1);
  if (result == 20)
  {
    if (a2[1]) {
      a2[1] = 0;
    }
    *(_DWORD *)a3 = 0;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
    int v7 = 168;
LABEL_5:
    *(_DWORD *)(a3 + 16) = v7;
    return result;
  }
  *(void *)a3 = 0;
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  *(_WORD *)a2 = 256;
  uint64_t result = sub_244CB3C70(a1, a2, a3);
  if (!*(_DWORD *)a3)
  {
    if (!a2[1]) {
      sub_24479484C();
    }
    if (*a2 == 128)
    {
      *(_DWORD *)a3 = 1415;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
      int v7 = 175;
    }
    else
    {
      *(_DWORD *)a3 = 0;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
      int v7 = 177;
    }
    goto LABEL_5;
  }
  return result;
}

double sub_244802CD4@<D0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  sub_244CB7594(a1, a2, 21, &v8, (uint64_t)&v9);
  long long v6 = v9;
  uint64_t v7 = v10;
  if (!v9)
  {
    sub_244CB65C8();
    uint64_t v7 = v10;
    long long v6 = v9;
    if (!v9)
    {
      sub_244CB65C8();
      uint64_t v7 = v10;
      long long v6 = v9;
      if (!v9)
      {
        sub_244CB65C8();
        uint64_t v7 = v10;
        long long v6 = v9;
        if (!v9)
        {
          sub_244CB65C8();
          uint64_t v7 = v10;
          long long v6 = v9;
          if (!v9)
          {
            sub_244CB65C8();
            uint64_t v7 = v10;
            long long v6 = v9;
            if (!v9)
            {
              sub_244CB65C8();
              uint64_t v7 = v10;
              long long v6 = v9;
              if (!v9)
              {
                sub_244CB65C8();
                uint64_t v7 = v10;
                long long v6 = v9;
                if (!v9)
                {
                  sub_244CB65C8();
                  uint64_t v7 = v10;
                  long long v6 = v9;
                  if (!v9)
                  {
                    sub_244CB65C8();
                    uint64_t v7 = v10;
                    long long v6 = v9;
                    if (!v9)
                    {
                      sub_244CB65C8();
                      uint64_t v7 = v10;
                      long long v6 = v9;
                      if (!v9)
                      {
                        sub_244CB65C8();
                        uint64_t v7 = v10;
                        long long v6 = v9;
                        if (!v9)
                        {
                          sub_244CB65C8();
                          uint64_t v7 = v10;
                          long long v6 = v9;
                          if (!v9)
                          {
                            sub_244CB7708((uint64_t)a1, v8, (uint64_t)&v9);
                            long long v6 = v9;
                            uint64_t v7 = v10;
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  double result = *(double *)&v6;
  *(_OWORD *)a3 = v6;
  *(void *)(a3 + 16) = v7;
  return result;
}

double sub_244802F9C@<D0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  int v6 = v16;
  if (v16 == 1)
  {
LABEL_19:
    double result = *(double *)&v14;
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 16) = v15;
  }
  else
  {
    while (1)
    {
      long long v12 = xmmword_265195E58;
      uint64_t v13 = 6949;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v14)
      {
        case 0:
          sub_244CB3C0C(a2, a1, (uint64_t)&v12);
          break;
        case 1:
          uint64_t v7 = a2;
          int v8 = a1 + 1;
          goto LABEL_16;
        case 2:
          uint64_t v7 = a2;
          int v8 = a1 + 2;
          goto LABEL_16;
        case 3:
          uint64_t v7 = a2;
          int v8 = a1 + 3;
          goto LABEL_16;
        case 4:
          uint64_t v7 = a2;
          int v8 = a1 + 4;
          goto LABEL_16;
        case 5:
          uint64_t v7 = a2;
          int v8 = a1 + 5;
          goto LABEL_16;
        case 6:
          uint64_t v7 = a2;
          int v8 = a1 + 6;
          goto LABEL_16;
        case 7:
          uint64_t v7 = a2;
          int v8 = a1 + 7;
          goto LABEL_16;
        case 8:
          uint64_t v7 = a2;
          int v8 = a1 + 8;
          goto LABEL_16;
        case 9:
          uint64_t v7 = a2;
          int v8 = a1 + 9;
          goto LABEL_16;
        case 10:
          uint64_t v7 = a2;
          int v8 = a1 + 10;
          goto LABEL_16;
        case 11:
          uint64_t v7 = a2;
          int v8 = a1 + 11;
LABEL_16:
          sub_244CB3C0C(v7, v8, (uint64_t)&v10);
          long long v12 = v10;
          uint64_t v13 = v11;
          break;
        default:
          break;
      }
      double result = *(double *)&v12;
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
      int v6 = v16;
      if (v16 == 1) {
        goto LABEL_19;
      }
    }
  }
  return result;
}

double sub_2448031DC@<D0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  sub_244CB7594(a1, a2, 21, &v8, (uint64_t)&v9);
  long long v6 = v9;
  uint64_t v7 = v10;
  if (!v9)
  {
    sub_244CB68CC();
    uint64_t v7 = v10;
    long long v6 = v9;
    if (!v9)
    {
      sub_244CB6904();
      uint64_t v7 = v10;
      long long v6 = v9;
      if (!v9)
      {
        sub_244CB68B8();
        uint64_t v7 = v10;
        long long v6 = v9;
        if (!v9)
        {
          sub_244CB68B8();
          uint64_t v7 = v10;
          long long v6 = v9;
          if (!v9)
          {
            sub_244CB68B8();
            uint64_t v7 = v10;
            long long v6 = v9;
            if (!v9)
            {
              sub_244CB68B8();
              uint64_t v7 = v10;
              long long v6 = v9;
              if (!v9)
              {
                sub_244CB68B8();
                uint64_t v7 = v10;
                long long v6 = v9;
                if (!v9)
                {
                  sub_244CB68B8();
                  uint64_t v7 = v10;
                  long long v6 = v9;
                  if (!v9)
                  {
                    sub_244CB65C8();
                    uint64_t v7 = v10;
                    long long v6 = v9;
                    if (!v9)
                    {
                      sub_244CB65C8();
                      uint64_t v7 = v10;
                      long long v6 = v9;
                      if (!v9)
                      {
                        sub_244CB7708((uint64_t)a1, v8, (uint64_t)&v9);
                        long long v6 = v9;
                        uint64_t v7 = v10;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  double result = *(double *)&v6;
  *(_OWORD *)a3 = v6;
  *(void *)(a3 + 16) = v7;
  return result;
}

double sub_24480344C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v19[0] = 0;
  uint64_t v20 = a2;
  sub_2447ED6F8((uint64_t)v19, (uint64_t)&v16);
  int v6 = v18;
  if (v18 == 1)
  {
LABEL_19:
    double result = *(double *)&v16;
    *(_OWORD *)a3 = v16;
    *(void *)(a3 + 16) = v17;
  }
  else
  {
    while (1)
    {
      long long v14 = xmmword_265195E70;
      uint64_t v15 = 7038;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v16)
      {
        case 0:
          sub_244CB3EFC(a2, (void *)a1, (uint64_t)&v14);
          break;
        case 1:
          sub_244CB3F40(a2, (_WORD *)(a1 + 8), (uint64_t)&v12);
          goto LABEL_16;
        case 2:
          uint64_t v7 = a2;
          int v8 = (unsigned char *)(a1 + 10);
          goto LABEL_12;
        case 3:
          uint64_t v7 = a2;
          int v8 = (unsigned char *)(a1 + 11);
          goto LABEL_12;
        case 4:
          uint64_t v7 = a2;
          int v8 = (unsigned char *)(a1 + 12);
          goto LABEL_12;
        case 5:
          uint64_t v7 = a2;
          int v8 = (unsigned char *)(a1 + 13);
          goto LABEL_12;
        case 6:
          uint64_t v7 = a2;
          int v8 = (unsigned char *)(a1 + 14);
          goto LABEL_12;
        case 7:
          uint64_t v7 = a2;
          int v8 = (unsigned char *)(a1 + 15);
LABEL_12:
          sub_244CB3E8C(v7, v8, (uint64_t)&v12);
          goto LABEL_16;
        case 8:
          uint64_t v9 = a2;
          uint64_t v10 = (char *)(a1 + 16);
          goto LABEL_15;
        case 9:
          uint64_t v9 = a2;
          uint64_t v10 = (char *)(a1 + 17);
LABEL_15:
          sub_244CB3C0C(v9, v10, (uint64_t)&v12);
LABEL_16:
          long long v14 = v12;
          uint64_t v15 = v13;
          break;
        default:
          break;
      }
      double result = *(double *)&v14;
      *(_OWORD *)a3 = v14;
      *(void *)(a3 + 16) = v15;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v19, (uint64_t)&v16);
      int v6 = v18;
      if (v18 == 1) {
        goto LABEL_19;
      }
    }
  }
  return result;
}

double sub_244803660@<D0>(_WORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265195E88;
      uint64_t v11 = 7111;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_244CB3F40(a2, a1 + 1, (uint64_t)&v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB3F40(a2, a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

void sub_244803770(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4 = (__int16 *)a1;
  int v5 = *(_DWORD *)(a3 + 8);
  switch(v5)
  {
    case 0:
      goto LABEL_17;
    case 1:
      sub_244803B80(a2, (unsigned __int8 *)(a1 + 4), a4);
      return;
    case 2:
      sub_244803C58(a2, a1 + 8, (void *)a4);
      return;
    case 3:
      int v4 = (__int16 *)(a1 + 32);
      goto LABEL_17;
    case 4:
      uint64_t v7 = a1 + 40;
      goto LABEL_63;
    case 5:
      uint64_t v8 = a1 + 56;
      goto LABEL_68;
    case 6:
      sub_244CB3EFC(a2, (void *)(a1 + 80), a4);
      return;
    case 7:
      uint64_t v6 = a1 + 88;
      goto LABEL_5;
    case 8:
      uint64_t v6 = a1 + 168;
      goto LABEL_5;
    case 9:
      uint64_t v9 = a1 + 248;
      goto LABEL_65;
    case 10:
      int v4 = (__int16 *)(a1 + 256);
      goto LABEL_17;
    case 11:
      int v4 = (__int16 *)(a1 + 260);
      goto LABEL_17;
    case 12:
      int v4 = (__int16 *)(a1 + 264);
LABEL_17:
      sub_2447EF9E0(a2, v4, a4);
      return;
    case 13:
      sub_2447F15BC(a2, (unsigned __int8 *)(a1 + 268), a4);
      return;
    case 14:
      long long v10 = (_WORD *)(a1 + 270);
      goto LABEL_78;
    case 15:
      long long v10 = (_WORD *)(a1 + 272);
      goto LABEL_78;
    case 16:
      long long v10 = (_WORD *)(a1 + 274);
      goto LABEL_78;
    case 17:
      long long v10 = (_WORD *)(a1 + 276);
      goto LABEL_78;
    case 18:
      long long v10 = (_WORD *)(a1 + 278);
      goto LABEL_78;
    case 19:
      long long v10 = (_WORD *)(a1 + 280);
      goto LABEL_78;
    case 20:
      long long v10 = (_WORD *)(a1 + 282);
      goto LABEL_78;
    case 21:
      long long v10 = (_WORD *)(a1 + 284);
LABEL_78:
      sub_244CB3F40(a2, v10, a4);
      return;
    case 22:
      uint64_t v11 = (_DWORD *)(a1 + 288);
      goto LABEL_76;
    case 23:
      uint64_t v11 = (_DWORD *)(a1 + 292);
      goto LABEL_76;
    case 24:
      uint64_t v11 = (_DWORD *)(a1 + 296);
      goto LABEL_76;
    case 25:
      uint64_t v11 = (_DWORD *)(a1 + 300);
      goto LABEL_76;
    case 26:
      uint64_t v11 = (_DWORD *)(a1 + 304);
      goto LABEL_76;
    case 27:
      uint64_t v11 = (_DWORD *)(a1 + 308);
      goto LABEL_76;
    case 28:
      uint64_t v11 = (_DWORD *)(a1 + 312);
      goto LABEL_76;
    case 29:
      uint64_t v11 = (_DWORD *)(a1 + 316);
      goto LABEL_76;
    case 30:
      uint64_t v11 = (_DWORD *)(a1 + 320);
      goto LABEL_76;
    case 31:
      uint64_t v11 = (_DWORD *)(a1 + 324);
      goto LABEL_76;
    case 32:
      uint64_t v11 = (_DWORD *)(a1 + 328);
      goto LABEL_76;
    case 33:
      uint64_t v11 = (_DWORD *)(a1 + 332);
      goto LABEL_76;
    case 34:
      uint64_t v11 = (_DWORD *)(a1 + 336);
      goto LABEL_76;
    case 35:
      uint64_t v11 = (_DWORD *)(a1 + 340);
      goto LABEL_76;
    case 36:
      uint64_t v11 = (_DWORD *)(a1 + 344);
      goto LABEL_76;
    case 37:
      uint64_t v11 = (_DWORD *)(a1 + 348);
      goto LABEL_76;
    case 38:
      uint64_t v11 = (_DWORD *)(a1 + 352);
      goto LABEL_76;
    case 39:
      uint64_t v11 = (_DWORD *)(a1 + 356);
      goto LABEL_76;
    case 40:
      uint64_t v11 = (_DWORD *)(a1 + 360);
      goto LABEL_76;
    case 41:
      uint64_t v11 = (_DWORD *)(a1 + 364);
      goto LABEL_76;
    case 42:
      uint64_t v11 = (_DWORD *)(a1 + 368);
      goto LABEL_76;
    case 43:
      uint64_t v11 = (_DWORD *)(a1 + 372);
      goto LABEL_76;
    case 44:
      uint64_t v11 = (_DWORD *)(a1 + 376);
      goto LABEL_76;
    case 45:
      uint64_t v11 = (_DWORD *)(a1 + 380);
      goto LABEL_76;
    case 46:
      uint64_t v11 = (_DWORD *)(a1 + 384);
      goto LABEL_76;
    case 47:
      uint64_t v11 = (_DWORD *)(a1 + 388);
      goto LABEL_76;
    case 48:
      uint64_t v11 = (_DWORD *)(a1 + 392);
      goto LABEL_76;
    case 49:
      uint64_t v11 = (_DWORD *)(a1 + 396);
      goto LABEL_76;
    case 50:
      uint64_t v11 = (_DWORD *)(a1 + 400);
      goto LABEL_76;
    case 51:
      uint64_t v11 = (_DWORD *)(a1 + 404);
      goto LABEL_76;
    case 52:
      uint64_t v11 = (_DWORD *)(a1 + 408);
      goto LABEL_76;
    case 53:
      uint64_t v11 = (_DWORD *)(a1 + 412);
      goto LABEL_76;
    case 54:
      uint64_t v11 = (_DWORD *)(a1 + 416);
      goto LABEL_76;
    case 55:
      uint64_t v11 = (_DWORD *)(a1 + 420);
LABEL_76:
      sub_244CB3FB0(a2, v11, a4);
      return;
    case 56:
      uint64_t v7 = a1 + 424;
      goto LABEL_63;
    case 57:
      uint64_t v7 = a1 + 440;
LABEL_63:
      sub_2447F5E48(a2, v7, a4);
      break;
    case 58:
      uint64_t v9 = a1 + 456;
LABEL_65:
      sub_2447F4140(a2, v9, a4);
      break;
    case 59:
      sub_244803CEC(a2, a1 + 464, (void *)a4);
      break;
    case 60:
      uint64_t v8 = a1 + 472;
LABEL_68:
      sub_2447FFFFC(a2, v8, (void *)a4);
      break;
    case 61:
      sub_244803D80(a2, a1 + 496, (void *)a4);
      break;
    case 62:
      uint64_t v6 = a1 + 512;
LABEL_5:
      sub_24484B03C(v6, a2, a4);
      break;
    default:
      switch(v5)
      {
        case 65528:
          uint64_t v6 = a1 + 592;
          goto LABEL_5;
        case 65529:
          uint64_t v6 = a1 + 672;
          goto LABEL_5;
        case 65530:
          uint64_t v6 = a1 + 752;
          goto LABEL_5;
        case 65531:
          uint64_t v6 = a1 + 832;
          goto LABEL_5;
        case 65532:
          uint64_t v11 = (_DWORD *)(a1 + 912);
          goto LABEL_76;
        case 65533:
          long long v10 = (_WORD *)(a1 + 916);
          goto LABEL_78;
        default:
          *(_DWORD *)a4 = 0;
          *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-co"
                                "mmon/app-common/zap-generated/cluster-objects.cpp";
          *(_DWORD *)(a4 + 16) = 7300;
          break;
      }
      break;
  }
}

uint64_t sub_244803B80@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = sub_244CB3B68(a1);
  if (result == 20)
  {
    if (a2[1]) {
      a2[1] = 0;
    }
    *(_DWORD *)a3 = 0;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
    int v7 = 168;
LABEL_5:
    *(_DWORD *)(a3 + 16) = v7;
    return result;
  }
  *(void *)a3 = 0;
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  *(_WORD *)a2 = 256;
  uint64_t result = sub_2447F6AD4(a1, a2, (void *)a3);
  if (!*(_DWORD *)a3)
  {
    if (!a2[1]) {
      sub_24479484C();
    }
    if (*a2 == 255)
    {
      *(_DWORD *)a3 = 1415;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
      int v7 = 175;
    }
    else
    {
      *(_DWORD *)a3 = 0;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
      int v7 = 177;
    }
    goto LABEL_5;
  }
  return result;
}

uint64_t sub_244803C58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t result = sub_244CB3B68(a1);
  if (result == 20)
  {
    if (*(unsigned char *)(a2 + 16)) {
      *(unsigned char *)(a2 + 16) = 0;
    }
    int v7 = 168;
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
    *(void *)a2 = 0;
    *(void *)(a2 + 8) = 0;
    *(unsigned char *)(a2 + 16) = 1;
    uint64_t result = sub_244CB41F0(a1, (_OWORD *)a2, a3);
    if (*(_DWORD *)a3) {
      return result;
    }
    int v7 = 177;
  }
  *(_DWORD *)a3 = 0;
  a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
  *((_DWORD *)a3 + 4) = v7;
  return result;
}

void sub_244803CEC(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if (sub_244CB3B68(a1) == 20)
  {
    if (*(unsigned char *)(a2 + 4)) {
      *(unsigned char *)(a2 + 4) = 0;
    }
    int v6 = 168;
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
    *(_DWORD *)a2 = 0;
    *(unsigned char *)(a2 + 4) = 1;
    sub_244803660((_WORD *)a2, a1, (uint64_t)a3);
    if (*(_DWORD *)a3) {
      return;
    }
    int v6 = 177;
  }
  *(_DWORD *)a3 = 0;
  a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
  *((_DWORD *)a3 + 4) = v6;
}

void sub_244803D80(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if (sub_244CB3B68(a1) == 20)
  {
    if (*(unsigned char *)(a2 + 12)) {
      *(unsigned char *)(a2 + 12) = 0;
    }
    int v6 = 168;
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
    *(void *)a2 = 0;
    *(_DWORD *)(a2 + 8) = 0;
    *(unsigned char *)(a2 + 12) = 1;
    sub_244802F9C((char *)a2, a1, (uint64_t)a3);
    if (*(_DWORD *)a3) {
      return;
    }
    int v6 = 177;
  }
  *(_DWORD *)a3 = 0;
  a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
  *((_DWORD *)a3 + 4) = v6;
}

void sub_244803E18(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  int v7 = 0;
  a4[1] = 0;
  a4[2] = 0;
  *a4 = 0;
  sub_244CB7594(a2, a3, 21, &v7, (uint64_t)a4);
  if (!*(_DWORD *)a4)
  {
    *a4 = 0;
    a4[1] = 0;
    a4[2] = 0;
    if (*a1 == 2)
    {
      *(_DWORD *)a4 = 1415;
      a4[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
      *((_DWORD *)a4 + 4) = 75;
    }
    else
    {
      sub_244CB68B8();
      if (!*(_DWORD *)a4) {
        sub_244CB7708((uint64_t)a2, v7, (uint64_t)a4);
      }
    }
  }
}

double sub_244803ED4@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265195EA0;
      uint64_t v9 = 7326;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_2447F1DCC(a2, a1, &v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_244803FAC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265195EB8;
      uint64_t v11 = 7362;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_24484B03C(a1 + 80, a2, (uint64_t)&v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_24484B03C(a1, a2, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

void sub_2448040BC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4 = *(_DWORD *)(a3 + 8);
  switch(v4)
  {
    case 0:
      sub_2447FFFFC(a2, a1, (void *)a4);
      return;
    case 1:
      sub_244804260(a2, (unsigned __int8 *)(a1 + 24), a4);
      return;
    case 2:
      sub_244803B80(a2, (unsigned __int8 *)(a1 + 26), a4);
      return;
    case 3:
      sub_2447EF9E0(a2, (__int16 *)(a1 + 28), a4);
      return;
    case 4:
      sub_244802BFC(a2, (unsigned __int8 *)(a1 + 32), a4);
      return;
    case 5:
      uint64_t v6 = a1 + 36;
      goto LABEL_25;
    case 6:
      uint64_t v6 = a1 + 44;
      goto LABEL_25;
    case 7:
      uint64_t v6 = a1 + 52;
      goto LABEL_25;
    case 8:
      uint64_t v6 = a1 + 60;
      goto LABEL_25;
    case 9:
      uint64_t v6 = a1 + 68;
      goto LABEL_25;
    case 10:
      uint64_t v6 = a1 + 76;
LABEL_25:
      sub_2447F4140(a2, v6, a4);
      return;
    case 11:
      uint64_t v7 = a1 + 88;
      goto LABEL_17;
    case 12:
      uint64_t v7 = a1 + 104;
LABEL_17:
      sub_2447F5E48(a2, v7, a4);
      break;
    default:
      switch(v4)
      {
        case 65528:
          uint64_t v5 = a1 + 120;
          goto LABEL_5;
        case 65529:
          uint64_t v5 = a1 + 200;
          goto LABEL_5;
        case 65530:
          uint64_t v5 = a1 + 280;
          goto LABEL_5;
        case 65531:
          uint64_t v5 = a1 + 360;
LABEL_5:
          sub_24484B03C(v5, a2, a4);
          break;
        case 65532:
          sub_244CB3FB0(a2, (_DWORD *)(a1 + 440), a4);
          break;
        case 65533:
          sub_244CB3F40(a2, (_WORD *)(a1 + 444), a4);
          break;
        default:
          *(_DWORD *)a4 = 0;
          *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-co"
                                "mmon/app-common/zap-generated/cluster-objects.cpp";
          *(_DWORD *)(a4 + 16) = 7453;
          break;
      }
      break;
  }
}

uint64_t sub_244804260@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = sub_244CB3B68(a1);
  if (result == 20)
  {
    if (a2[1]) {
      a2[1] = 0;
    }
    *(_DWORD *)a3 = 0;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
    int v7 = 168;
LABEL_5:
    *(_DWORD *)(a3 + 16) = v7;
    return result;
  }
  *(void *)a3 = 0;
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  *(_WORD *)a2 = 256;
  uint64_t result = sub_2447F0A54(a1, a2, (void *)a3);
  if (!*(_DWORD *)a3)
  {
    if (!a2[1]) {
      sub_24479484C();
    }
    if (*a2 == 255)
    {
      *(_DWORD *)a3 = 1415;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
      int v7 = 175;
    }
    else
    {
      *(_DWORD *)a3 = 0;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
      int v7 = 177;
    }
    goto LABEL_5;
  }
  return result;
}

void sub_244804338(void *a1@<X1>, uint64_t a2@<X2>, void *a3@<X8>)
{
  int v5 = 0;
  a3[1] = 0;
  a3[2] = 0;
  *a3 = 0;
  sub_244CB7594(a1, a2, 21, &v5, (uint64_t)a3);
  if (!*(_DWORD *)a3)
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
    sub_244CB6904();
    if (!*(_DWORD *)a3) {
      sub_244CB7708((uint64_t)a1, v5, (uint64_t)a3);
    }
  }
}

double sub_2448043CC@<D0>(_WORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265195ED0;
      uint64_t v9 = 7479;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3F40(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

void sub_2448044A4(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  int v7 = 0;
  a4[1] = 0;
  a4[2] = 0;
  *a4 = 0;
  sub_244CB7594(a2, a3, 21, &v7, (uint64_t)a4);
  if (!*(_DWORD *)a4)
  {
    *a4 = 0;
    a4[1] = 0;
    a4[2] = 0;
    if (*a1 == 4)
    {
      *(_DWORD *)a4 = 1415;
      a4[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Encode.h";
      *((_DWORD *)a4 + 4) = 75;
    }
    else
    {
      sub_244CB68B8();
      if (!*(_DWORD *)a4)
      {
        *a4 = 0;
        a4[1] = 0;
        a4[2] = 0;
        sub_244CB6904();
        if (!*(_DWORD *)a4) {
          sub_244CB7708((uint64_t)a2, v7, (uint64_t)a4);
        }
      }
    }
  }
}

double sub_244804584@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265195EE8;
      uint64_t v11 = 7515;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_244CB3F40(a2, (_WORD *)(a1 + 2), (uint64_t)&v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_2446D1A48(a2, (unsigned char *)a1, &v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_244804694@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265195F00;
      uint64_t v9 = 7554;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_2447F1DCC(a2, a1, &v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

void sub_24480476C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4 = *(_DWORD *)(a3 + 8);
  switch(v4)
  {
    case 0:
      sub_2448048C0(a2, (unsigned __int8 *)a1, a4);
      return;
    case 1:
      int v6 = (char *)(a1 + 2);
      goto LABEL_13;
    case 2:
      int v7 = (void *)(a1 + 8);
      goto LABEL_15;
    case 3:
      int v7 = (void *)(a1 + 16);
      goto LABEL_15;
    case 4:
      int v7 = (void *)(a1 + 24);
      goto LABEL_15;
    case 5:
      int v7 = (void *)(a1 + 32);
      goto LABEL_15;
    case 6:
      int v7 = (void *)(a1 + 40);
      goto LABEL_15;
    case 7:
      int v6 = (char *)(a1 + 48);
LABEL_13:
      sub_244800BF4(a2, v6, (void *)a4);
      return;
    case 8:
      int v7 = (void *)(a1 + 56);
LABEL_15:
      sub_244CB3EFC(a2, v7, a4);
      break;
    default:
      switch(v4)
      {
        case 65528:
          uint64_t v5 = a1 + 64;
          goto LABEL_5;
        case 65529:
          uint64_t v5 = a1 + 144;
          goto LABEL_5;
        case 65530:
          uint64_t v5 = a1 + 224;
          goto LABEL_5;
        case 65531:
          uint64_t v5 = a1 + 304;
LABEL_5:
          sub_24484B03C(v5, a2, a4);
          break;
        case 65532:
          sub_244CB3FB0(a2, (_DWORD *)(a1 + 384), a4);
          break;
        case 65533:
          sub_244CB3F40(a2, (_WORD *)(a1 + 388), a4);
          break;
        default:
          *(_DWORD *)a4 = 0;
          *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-co"
                                "mmon/app-common/zap-generated/cluster-objects.cpp";
          *(_DWORD *)(a4 + 16) = 7633;
          break;
      }
      break;
  }
}

uint64_t sub_2448048C0@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = sub_244CB3B68(a1);
  if (result == 20)
  {
    if (a2[1]) {
      a2[1] = 0;
    }
    *(_DWORD *)a3 = 0;
    *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
    int v7 = 168;
LABEL_5:
    *(_DWORD *)(a3 + 16) = v7;
    return result;
  }
  *(void *)a3 = 0;
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  *(_WORD *)a2 = 256;
  uint64_t result = sub_244817088(a1, a2, (void *)a3);
  if (!*(_DWORD *)a3)
  {
    if (!a2[1]) {
      sub_24479484C();
    }
    if (*a2 == 255)
    {
      *(_DWORD *)a3 = 1415;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
      int v7 = 175;
    }
    else
    {
      *(_DWORD *)a3 = 0;
      *(void *)(a3 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
      int v7 = 177;
    }
    goto LABEL_5;
  }
  return result;
}

double sub_244804998@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB69F4();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB68CC();
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_2447F5BC4(a1 + 16, (uint64_t)&v11);
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
          long long v8 = v11;
          uint64_t v9 = v12;
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244804AD4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  for (int i = v14; v14 != 1; int i = v14)
  {
    long long v10 = xmmword_265195F18;
    uint64_t v11 = 7665;
    if (i) {
      sub_24484AFEC();
    }
    if (v12 == 2)
    {
      sub_2447F5E48(a2, a1 + 16, (uint64_t)&v8);
    }
    else
    {
      if (v12 != 1)
      {
        if (!(_BYTE)v12) {
          sub_244CB3E0C(a2, (_DWORD *)a1, (uint64_t)&v10);
        }
        goto LABEL_10;
      }
      sub_244CB3EFC(a2, (void *)(a1 + 8), (uint64_t)&v8);
    }
    long long v10 = v8;
    uint64_t v11 = v9;
LABEL_10:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
    if (*(_DWORD *)a3) {
      return result;
    }
    sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  }
  double result = *(double *)&v12;
  *(_OWORD *)a3 = v12;
  *(void *)(a3 + 16) = v13;
  return result;
}

double sub_244804C04@<D0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  sub_244CB7594(a1, a2, 21, &v8, (uint64_t)&v9);
  long long v6 = v9;
  uint64_t v7 = v10;
  if (!v9)
  {
    sub_244CB68CC();
    uint64_t v7 = v10;
    long long v6 = v9;
    if (!v9)
    {
      sub_244CB6904();
      uint64_t v7 = v10;
      long long v6 = v9;
      if (!v9)
      {
        sub_244CB7708((uint64_t)a1, v8, (uint64_t)&v9);
        long long v6 = v9;
        uint64_t v7 = v10;
      }
    }
  }
  double result = *(double *)&v6;
  *(_OWORD *)a3 = v6;
  *(void *)(a3 + 16) = v7;
  return result;
}

double sub_244804D14@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265195F30;
      uint64_t v11 = 7710;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_244CB3F40(a2, (_WORD *)(a1 + 8), (uint64_t)&v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB3EFC(a2, (void *)a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_244804E24@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB69F4();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB68CC();
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_2447F6524(a2, (unsigned char *)(a1 + 16), (uint64_t)&v11);
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
          long long v8 = v11;
          uint64_t v9 = v12;
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244804F60@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  for (int i = v14; v14 != 1; int i = v14)
  {
    long long v10 = xmmword_265195F48;
    uint64_t v11 = 7752;
    if (i) {
      sub_24484AFEC();
    }
    if (v12 == 2)
    {
      *(unsigned char *)(a1 + 16) = 1;
      *(void *)(a1 + 24) = 0;
      *(void *)(a1 + 32) = 0;
      sub_244CB41F0(a2, (_OWORD *)(a1 + 24), &v8);
    }
    else
    {
      if (v12 != 1)
      {
        if (!(_BYTE)v12) {
          sub_244CB3E0C(a2, (_DWORD *)a1, (uint64_t)&v10);
        }
        goto LABEL_10;
      }
      sub_244CB3EFC(a2, (void *)(a1 + 8), (uint64_t)&v8);
    }
    long long v10 = v8;
    uint64_t v11 = v9;
LABEL_10:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
    if (*(_DWORD *)a3) {
      return result;
    }
    sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  }
  double result = *(double *)&v12;
  *(_OWORD *)a3 = v12;
  *(void *)(a3 + 16) = v13;
  return result;
}

double sub_2448050A4@<D0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  sub_244CB7594(a1, a2, 21, &v8, (uint64_t)&v9);
  long long v6 = v9;
  uint64_t v7 = v10;
  if (!v9)
  {
    sub_244CB68B8();
    uint64_t v7 = v10;
    long long v6 = v9;
    if (!v9)
    {
      sub_244CB68CC();
      uint64_t v7 = v10;
      long long v6 = v9;
      if (!v9)
      {
        sub_244CB6904();
        uint64_t v7 = v10;
        long long v6 = v9;
        if (!v9)
        {
          sub_244CB7708((uint64_t)a1, v8, (uint64_t)&v9);
          long long v6 = v9;
          uint64_t v7 = v10;
        }
      }
    }
  }
  double result = *(double *)&v6;
  *(_OWORD *)a3 = v6;
  *(void *)(a3 + 16) = v7;
  return result;
}

double sub_2448051E0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  for (int i = v14; v14 != 1; int i = v14)
  {
    long long v10 = xmmword_265195F60;
    uint64_t v11 = 7798;
    if (i) {
      sub_24484AFEC();
    }
    if (v12 == 2)
    {
      sub_244CB3F40(a2, (_WORD *)(a1 + 16), (uint64_t)&v8);
    }
    else
    {
      if (v12 != 1)
      {
        if (!(_BYTE)v12) {
          sub_244CB3E8C(a2, (unsigned char *)a1, (uint64_t)&v10);
        }
        goto LABEL_10;
      }
      sub_244CB3EFC(a2, (void *)(a1 + 8), (uint64_t)&v8);
    }
    long long v10 = v8;
    uint64_t v11 = v9;
LABEL_10:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
    if (*(_DWORD *)a3) {
      return result;
    }
    sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  }
  double result = *(double *)&v12;
  *(_OWORD *)a3 = v12;
  *(void *)(a3 + 16) = v13;
  return result;
}

double sub_244805310@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB68CC();
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  sub_244800450((uint64_t)&v7, 1, (unsigned char *)(a1 + 8));
  if (!v8)
  {
    sub_24484BBAC((unsigned char *)(a1 + 9), (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
      long long v8 = v11;
      uint64_t v9 = v12;
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244805430@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  for (int i = v14; v14 != 1; int i = v14)
  {
    long long v10 = xmmword_265195F78;
    uint64_t v11 = 7846;
    if (i) {
      sub_24484AFEC();
    }
    if (v12 == 2)
    {
      *(_WORD *)(a1 + 9) = 1;
      sub_2448061FC(a2, (unsigned char *)(a1 + 10), &v8);
    }
    else
    {
      if (v12 != 1)
      {
        if (!(_BYTE)v12) {
          sub_244CB3EFC(a2, (void *)a1, (uint64_t)&v10);
        }
        goto LABEL_10;
      }
      sub_2447FACE4(a2, (unsigned char *)(a1 + 8), &v8);
    }
    long long v10 = v8;
    uint64_t v11 = v9;
LABEL_10:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
    if (*(_DWORD *)a3) {
      return result;
    }
    sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  }
  double result = *(double *)&v12;
  *(_OWORD *)a3 = v12;
  *(void *)(a3 + 16) = v13;
  return result;
}

double sub_244805570@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_24484BC58(a2, 0, a1, (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
      long long v8 = v11;
      uint64_t v9 = v12;
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244805654@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265195F90;
      uint64_t v9 = 7888;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_24480572C(a2, a1, &v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

void sub_24480572C(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if (sub_244CB3B68(a1) == 20)
  {
    if (*(unsigned char *)(a2 + 16)) {
      *(unsigned char *)(a2 + 16) = 0;
    }
    int v6 = 168;
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
    *(void *)a2 = 0;
    *(void *)(a2 + 8) = 0;
    *(unsigned char *)(a2 + 16) = 1;
    sub_244804D14(a2, a1, (uint64_t)a3);
    if (*(_DWORD *)a3) {
      return;
    }
    int v6 = 177;
  }
  *(_DWORD *)a3 = 0;
  a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
  *((_DWORD *)a3 + 4) = v6;
}

double sub_2448057C0@<D0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  sub_244805888((uint64_t)&v7, 0, a1);
  if (!v8)
  {
    sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244805888(uint64_t a1, unsigned int a2, uint64_t *a3)
{
  uint64_t v3 = a1 + 8;
  if (!*(_DWORD *)(a1 + 8))
  {
    int v4 = *(char **)a1;
    uint64_t v5 = *a3;
    uint64_t v6 = a3[1];
    int v11 = 0;
    uint64_t v10 = 0;
    long long v9 = 0uLL;
    sub_244CB7594(v4, a2, 22, &v11, (uint64_t)&v9);
    if (!v9)
    {
      if (v6)
      {
        uint64_t v7 = 40 * v6;
        while (1)
        {
          long long v9 = 0uLL;
          uint64_t v10 = 0;
          sub_244804E24(v5, v4, 256, (uint64_t)&v9);
          if (v9) {
            break;
          }
          v5 += 40;
          v7 -= 40;
          if (!v7) {
            goto LABEL_7;
          }
        }
      }
      else
      {
LABEL_7:
        long long v9 = 0uLL;
        uint64_t v10 = 0;
        sub_244CB7708((uint64_t)v4, v11, (uint64_t)&v9);
        if (!v9)
        {
          LODWORD(v9) = 0;
          *((void *)&v9 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/List.h";
          LODWORD(v10) = 86;
        }
      }
    }
    double result = *(double *)&v9;
    *(_OWORD *)uint64_t v3 = v9;
    *(void *)(v3 + 16) = v10;
  }
  return result;
}

double sub_244805978@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265195FA8;
      uint64_t v9 = 7922;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_24484B03C(a1, a2, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_244805A50@<D0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  sub_244CB7594(a1, a2, 21, &v8, (uint64_t)&v9);
  long long v6 = v9;
  uint64_t v7 = v10;
  if (!v9)
  {
    sub_244CB65C8();
    uint64_t v7 = v10;
    long long v6 = v9;
    if (!v9)
    {
      sub_244CB7708((uint64_t)a1, v8, (uint64_t)&v9);
      long long v6 = v9;
      uint64_t v7 = v10;
    }
  }
  double result = *(double *)&v6;
  *(_OWORD *)a3 = v6;
  *(void *)(a3 + 16) = v7;
  return result;
}

double sub_244805B34@<D0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265195FC0;
      uint64_t v9 = 7956;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3C0C(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_244805C0C@<D0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  sub_244805CD4((uint64_t)&v7, 0, a1);
  if (!v8)
  {
    sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244805CD4(uint64_t a1, unsigned int a2, uint64_t *a3)
{
  uint64_t v3 = a1 + 8;
  if (!*(_DWORD *)(a1 + 8))
  {
    int v4 = *(void **)a1;
    uint64_t v5 = *a3;
    uint64_t v6 = a3[1];
    int v11 = 0;
    uint64_t v10 = 0;
    long long v9 = 0uLL;
    sub_244CB7594(v4, a2, 22, &v11, (uint64_t)&v9);
    if (!v9)
    {
      if (v6)
      {
        uint64_t v7 = 32 * v6;
        while (1)
        {
          long long v9 = 0uLL;
          uint64_t v10 = 0;
          sub_244804998(v5, v4, 256, (uint64_t)&v9);
          if (v9) {
            break;
          }
          v5 += 32;
          v7 -= 32;
          if (!v7) {
            goto LABEL_7;
          }
        }
      }
      else
      {
LABEL_7:
        long long v9 = 0uLL;
        uint64_t v10 = 0;
        sub_244CB7708((uint64_t)v4, v11, (uint64_t)&v9);
        if (!v9)
        {
          LODWORD(v9) = 0;
          *((void *)&v9 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/List.h";
          LODWORD(v10) = 86;
        }
      }
    }
    double result = *(double *)&v9;
    *(_OWORD *)uint64_t v3 = v9;
    *(void *)(v3 + 16) = v10;
  }
  return result;
}

double sub_244805DC0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265195FD8;
      uint64_t v9 = 7990;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_24484B03C(a1, a2, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_244805E98@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_24484BC80(a2, a1, (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
      long long v8 = v11;
      uint64_t v9 = v12;
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244805F7C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265195FF0;
      uint64_t v9 = 8024;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244803C58(a2, a1, &v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

void sub_244806054(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(a3 + 8);
  switch(v5)
  {
    case 0:
      goto LABEL_12;
    case 1:
      sub_2447FACE4(a2, (unsigned char *)(a1 + 16), (void *)a4);
      return;
    case 2:
      sub_2448061FC(a2, (unsigned char *)(a1 + 17), (void *)a4);
      return;
    case 3:
      sub_244806260(a2, a1 + 24, (void *)a4);
      return;
    case 4:
      sub_244803C58(a2, a1 + 56, (void *)a4);
      return;
    case 5:
      uint64_t v6 = a1 + 80;
      goto LABEL_5;
    case 6:
      uint64_t v6 = a1 + 160;
LABEL_5:
      sub_24484B03C(v6, a2, a4);
      return;
    case 7:
      uint64_t v4 = a1 + 240;
LABEL_12:
      sub_2447F5E48(a2, v4, a4);
      return;
    case 8:
      sub_2447F5F24(a2, (unsigned char *)(a1 + 256), (void *)a4);
      return;
    case 9:
      uint64_t v7 = (char *)(a1 + 257);
      goto LABEL_18;
    case 10:
      long long v8 = (unsigned char *)(a1 + 258);
      goto LABEL_16;
    case 11:
      long long v8 = (unsigned char *)(a1 + 259);
LABEL_16:
      sub_244CB3E8C(a2, v8, a4);
      break;
    case 12:
      uint64_t v7 = (char *)(a1 + 260);
LABEL_18:
      sub_244CB3C0C(a2, v7, a4);
      break;
    default:
      switch(v5)
      {
        case 65528:
          uint64_t v6 = a1 + 264;
          goto LABEL_5;
        case 65529:
          uint64_t v6 = a1 + 344;
          goto LABEL_5;
        case 65530:
          uint64_t v6 = a1 + 424;
          goto LABEL_5;
        case 65531:
          uint64_t v6 = a1 + 504;
          goto LABEL_5;
        case 65532:
          sub_244CB3FB0(a2, (_DWORD *)(a1 + 584), a4);
          break;
        case 65533:
          sub_244CB3F40(a2, (_WORD *)(a1 + 588), a4);
          break;
        default:
          *(_DWORD *)a4 = 0;
          *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-co"
                                "mmon/app-common/zap-generated/cluster-objects.cpp";
          *(_DWORD *)(a4 + 16) = 8085;
          break;
      }
      break;
  }
}

uint64_t sub_2448061FC@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  uint64_t result = sub_2446D1AAC(a1, a2, a3);
  if (!*(_DWORD *)a3)
  {
    unsigned int v6 = *a2;
    if (v6 >= 0x11) {
      LOBYTE(v6) = 17;
    }
    *a2 = v6;
    *(_DWORD *)a3 = 0;
    a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
    *((_DWORD *)a3 + 4) = 61;
  }
  return result;
}

void sub_244806260(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if (sub_244CB3B68(a1) == 20)
  {
    if (*(unsigned char *)(a2 + 24)) {
      *(unsigned char *)(a2 + 24) = 0;
    }
    int v6 = 168;
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
    *(void *)(a2 + 8) = 0;
    *(void *)(a2 + 16) = 0;
    *(void *)a2 = 0;
    *(unsigned char *)(a2 + 24) = 1;
    sub_2448051E0(a2, a1, (uint64_t)a3);
    if (*(_DWORD *)a3) {
      return;
    }
    int v6 = 177;
  }
  *(_DWORD *)a3 = 0;
  a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
  *((_DWORD *)a3 + 4) = v6;
}

double sub_2448062F8@<D0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265196008;
      uint64_t v9 = 8132;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3C0C(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

void sub_2448063D0(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  int v7 = 0;
  a4[1] = 0;
  a4[2] = 0;
  *a4 = 0;
  sub_244CB7594(a2, a3, 21, &v7, (uint64_t)a4);
  if (!*(_DWORD *)a4)
  {
    *a4 = 0;
    a4[1] = 0;
    a4[2] = 0;
    sub_244CB69F4();
    if (!*(_DWORD *)a4)
    {
      *a4 = 0;
      a4[1] = 0;
      a4[2] = 0;
      sub_2447F6524(a2, (unsigned char *)(a1 + 8), (uint64_t)a4);
      if (!*(_DWORD *)a4) {
        sub_244CB7708((uint64_t)a2, v7, (uint64_t)a4);
      }
    }
  }
}

double sub_244806488@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265196020;
      uint64_t v11 = 8168;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        *(unsigned char *)(a1 + 8) = 1;
        *(void *)(a1 + 16) = 0;
        *(void *)(a1 + 24) = 0;
        sub_244CB41F0(a2, (_OWORD *)(a1 + 16), &v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB3E0C(a2, (_DWORD *)a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_2448065A4@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265196038;
      uint64_t v11 = 8255;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_2447F89CC(a2, a1 + 1, (uint64_t)&v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_2447F0A54(a2, a1, &v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_2448066B4@<D0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  sub_244CB7594(a1, a2, 21, &v8, (uint64_t)&v9);
  long long v6 = v9;
  uint64_t v7 = v10;
  if (!v9)
  {
    sub_244CB694C();
    uint64_t v7 = v10;
    long long v6 = v9;
    if (!v9)
    {
      sub_244CB694C();
      uint64_t v7 = v10;
      long long v6 = v9;
      if (!v9)
      {
        sub_244CB7708((uint64_t)a1, v8, (uint64_t)&v9);
        long long v6 = v9;
        uint64_t v7 = v10;
      }
    }
  }
  double result = *(double *)&v6;
  *(_OWORD *)a3 = v6;
  *(void *)(a3 + 16) = v7;
  return result;
}

double sub_2448067C4@<D0>(_DWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265196050;
      uint64_t v11 = 8298;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_244CB3FB0(a2, a1 + 1, (uint64_t)&v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB3FB0(a2, a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

void sub_2448068D4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v4 = (_OWORD *)a1;
  int v6 = *(_DWORD *)(a3 + 8);
  switch(v6)
  {
    case 1:
      goto LABEL_25;
    case 2:
      *a4 = 0;
      a4[1] = 0;
      a4[2] = 0;
      sub_24484B11C(a2, (_WORD *)(a1 + 16), a4);
      if (*(_DWORD *)a4) {
        return;
      }
      *(_DWORD *)a4 = 0;
      a4[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
      int v7 = 61;
LABEL_7:
      *((_DWORD *)a4 + 4) = v7;
      return;
    case 3:
      uint64_t v4 = (_OWORD *)(a1 + 24);
      goto LABEL_25;
    case 4:
      uint64_t v9 = (_WORD *)(a1 + 40);
      goto LABEL_42;
    case 5:
      uint64_t v4 = (_OWORD *)(a1 + 48);
      goto LABEL_25;
    case 6:
    case 16:
    case 19:
LABEL_6:
      *(_DWORD *)a4 = 0;
      a4[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-common/app-common/za"
              "p-generated/cluster-objects.cpp";
      int v7 = 8371;
      goto LABEL_7;
    case 7:
      uint64_t v9 = (_WORD *)(a1 + 64);
LABEL_42:
      sub_244CB3F40(a2, v9, (uint64_t)a4);
      return;
    case 8:
      uint64_t v4 = (_OWORD *)(a1 + 72);
      goto LABEL_25;
    case 9:
      long long v10 = (_DWORD *)(a1 + 88);
LABEL_38:
      sub_244CB3FB0(a2, v10, (uint64_t)a4);
      return;
    case 10:
      uint64_t v4 = (_OWORD *)(a1 + 96);
      goto LABEL_25;
    case 11:
      uint64_t v4 = (_OWORD *)(a1 + 112);
      goto LABEL_25;
    case 12:
      uint64_t v4 = (_OWORD *)(a1 + 128);
      goto LABEL_25;
    case 13:
      uint64_t v4 = (_OWORD *)(a1 + 144);
      goto LABEL_25;
    case 14:
      uint64_t v4 = (_OWORD *)(a1 + 160);
      goto LABEL_25;
    case 15:
      uint64_t v4 = (_OWORD *)(a1 + 176);
      goto LABEL_25;
    case 17:
      sub_244CB3C0C(a2, (char *)(a1 + 192), (uint64_t)a4);
      return;
    case 18:
      uint64_t v4 = (_OWORD *)(a1 + 200);
LABEL_25:
      sub_244CB41F0(a2, v4, a4);
      break;
    case 20:
      uint64_t v11 = (unsigned char *)(a1 + 216);
      sub_2448065A4(v11, a2, (uint64_t)a4);
      break;
    default:
      switch(v6)
      {
        case 65528:
          uint64_t v8 = a1 + 224;
          break;
        case 65529:
          uint64_t v8 = a1 + 304;
          break;
        case 65530:
          uint64_t v8 = a1 + 384;
          break;
        case 65531:
          uint64_t v8 = a1 + 464;
          break;
        case 65532:
          long long v10 = (_DWORD *)(a1 + 544);
          goto LABEL_38;
        case 65533:
          uint64_t v9 = (_WORD *)(a1 + 548);
          goto LABEL_42;
        default:
          goto LABEL_6;
      }
      sub_24484B03C(v8, a2, (uint64_t)a4);
      break;
  }
}

double sub_244806B84@<D0>(_DWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265196068;
      uint64_t v9 = 8397;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3FB0(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_244806C5C@<D0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265196080;
      uint64_t v9 = 8474;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3C0C(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_244806D34@<D0>(_DWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265196098;
      uint64_t v9 = 8509;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3FB0(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

void sub_244806E0C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4 = (unsigned char *)a1;
  int v5 = *(_DWORD *)(a3 + 8);
  if (v5 <= 65527)
  {
    if (v5)
    {
      if (v5 == 1)
      {
        uint64_t v4 = (unsigned char *)(a1 + 1);
      }
      else
      {
        if (v5 != 2)
        {
LABEL_16:
          *(_DWORD *)a4 = 0;
          *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-co"
                                "mmon/app-common/zap-generated/cluster-objects.cpp";
          *(_DWORD *)(a4 + 16) = 8555;
          return;
        }
        uint64_t v4 = (unsigned char *)(a1 + 2);
      }
    }
    sub_244CB3E8C(a2, v4, a4);
    return;
  }
  switch(v5)
  {
    case 65528:
      uint64_t v6 = a1 + 8;
      goto LABEL_4;
    case 65529:
      uint64_t v6 = a1 + 88;
      goto LABEL_4;
    case 65530:
      uint64_t v6 = a1 + 168;
      goto LABEL_4;
    case 65531:
      uint64_t v6 = a1 + 248;
LABEL_4:
      sub_24484B03C(v6, a2, a4);
      break;
    case 65532:
      sub_244CB3FB0(a2, (_DWORD *)(a1 + 328), a4);
      break;
    case 65533:
      sub_244CB3F40(a2, (_WORD *)(a1 + 332), a4);
      break;
    default:
      goto LABEL_16;
  }
}

double sub_244806EF0@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_2651960B0;
      uint64_t v9 = 8581;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3E8C(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_244806FC8@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_2651960C8;
      uint64_t v9 = 8616;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3E8C(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_2448070A0@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_2651960E0;
      uint64_t v9 = 8651;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3E8C(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_244807178@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_2651960F8;
      uint64_t v9 = 8686;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3E8C(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_244807250@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265196110;
      uint64_t v9 = 8721;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3E8C(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

void sub_244807328(void *a1@<X1>, uint64_t a2@<X2>, void *a3@<X8>)
{
  int v5 = 0;
  a3[1] = 0;
  a3[2] = 0;
  *a3 = 0;
  sub_244CB7594(a1, a2, 21, &v5, (uint64_t)a3);
  if (!*(_DWORD *)a3)
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
    sub_244CB68B8();
    if (!*(_DWORD *)a3)
    {
      *a3 = 0;
      a3[1] = 0;
      a3[2] = 0;
      sub_244CB68B8();
      if (!*(_DWORD *)a3) {
        sub_244CB7708((uint64_t)a1, v5, (uint64_t)a3);
      }
    }
  }
}

double sub_2448073E0@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265196128;
      uint64_t v11 = 8758;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_244CB3E8C(a2, a1 + 1, (uint64_t)&v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB3E8C(a2, a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_2448074F0@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_9:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265196140;
      uint64_t v11 = 8799;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_244CB3E8C(a2, a1 + 1, (uint64_t)&v8);
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      else if (!(_BYTE)v12)
      {
        sub_244CB3E8C(a2, a1, (uint64_t)&v10);
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_9;
      }
    }
  }
  return result;
}

double sub_244807600@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB6904();
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB6ADC(a2, *(char **)(a1 + 8), *(void *)(a1 + 16), (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB6904();
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_244CB694C();
          uint64_t v9 = v12;
          long long v8 = v11;
          if (!v11)
          {
            sub_244CB6ADC(a2, *(char **)(a1 + 32), *(void *)(a1 + 40), (uint64_t)&v11);
            uint64_t v9 = v12;
            long long v8 = v11;
            if (!v11)
            {
              sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
              long long v8 = v11;
              uint64_t v9 = v12;
            }
          }
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244807794@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  int v6 = v16;
  if (v16 == 1)
  {
LABEL_16:
    double result = *(double *)&v14;
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 16) = v15;
  }
  else
  {
    while (1)
    {
      long long v12 = xmmword_265196158;
      uint64_t v13 = 8847;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v14)
      {
        case 0:
          sub_244CB3F40(a2, (_WORD *)a1, (uint64_t)&v12);
          break;
        case 1:
          if (sub_244CB3B68(a2) != 16) {
            goto LABEL_12;
          }
          uint64_t v7 = a2;
          long long v8 = (_OWORD *)(a1 + 8);
          goto LABEL_11;
        case 2:
          sub_244CB3F40(a2, (_WORD *)(a1 + 24), (uint64_t)&v10);
          goto LABEL_13;
        case 3:
          sub_244CB3FB0(a2, (_DWORD *)(a1 + 28), (uint64_t)&v10);
          goto LABEL_13;
        case 4:
          if (sub_244CB3B68(a2) == 16)
          {
            uint64_t v7 = a2;
            long long v8 = (_OWORD *)(a1 + 32);
LABEL_11:
            sub_244CB40C8(v7, v8, &v10);
          }
          else
          {
LABEL_12:
            LODWORD(v10) = 43;
            *((void *)&v10 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
            LODWORD(v11) = 80;
          }
LABEL_13:
          long long v12 = v10;
          uint64_t v13 = v11;
          break;
        default:
          break;
      }
      double result = *(double *)&v12;
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
      int v6 = v16;
      if (v16 == 1) {
        goto LABEL_16;
      }
    }
  }
  return result;
}

double sub_244807968@<D0>(_WORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265196170;
      uint64_t v9 = 8897;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3F40(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

void sub_244807A40(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v4 = *(_DWORD *)(a3 + 8);
  if (v4 <= 65527)
  {
    if (v4)
    {
      if (v4 == 1)
      {
        sub_2447F15BC(a2, (unsigned __int8 *)(a1 + 1), a4);
      }
      else if (v4 == 2)
      {
        sub_2447F38E4(a2, (__int16 *)(a1 + 4), a4);
      }
      else
      {
LABEL_16:
        *(_DWORD *)a4 = 0;
        *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-comm"
                              "on/app-common/zap-generated/cluster-objects.cpp";
        *(_DWORD *)(a4 + 16) = 8958;
      }
    }
    else
    {
      sub_2447F5F24(a2, (unsigned char *)a1, (void *)a4);
    }
  }
  else
  {
    switch(v4)
    {
      case 65528:
        uint64_t v5 = a1 + 8;
        goto LABEL_4;
      case 65529:
        uint64_t v5 = a1 + 88;
        goto LABEL_4;
      case 65530:
        uint64_t v5 = a1 + 168;
        goto LABEL_4;
      case 65531:
        uint64_t v5 = a1 + 248;
LABEL_4:
        sub_24484B03C(v5, a2, a4);
        break;
      case 65532:
        sub_244CB3FB0(a2, (_DWORD *)(a1 + 328), a4);
        break;
      case 65533:
        sub_244CB3F40(a2, (_WORD *)(a1 + 332), a4);
        break;
      default:
        goto LABEL_16;
    }
  }
}

double sub_244807B38@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v5[0] = 0;
  return sub_244807B60(a1, a2, a3, v5, a4);
}

double sub_244807B60@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, unsigned char *a4@<X3>, uint64_t a5@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v13, (uint64_t)&v14);
  long long v11 = v14;
  uint64_t v12 = v15;
  int v8 = v14;
  if (!v14)
  {
    sub_244CB6ADC(a2, *(char **)a1, *(void *)(a1 + 8), (uint64_t)&v14);
    uint64_t v12 = v15;
    long long v11 = v14;
    int v8 = v14;
    if (!v14)
    {
      sub_244CB6904();
      uint64_t v12 = v15;
      long long v11 = v14;
      int v8 = v14;
      if (!v14)
      {
        sub_244CB68CC();
        uint64_t v12 = v15;
        long long v11 = v14;
        int v8 = v14;
        if (!v14)
        {
          sub_244CB68CC();
          uint64_t v12 = v15;
          long long v11 = v14;
          int v8 = v14;
          if (!v14)
          {
            sub_244CB6D80(a2, *(char **)(a1 + 40), *(void *)(a1 + 48), (uint64_t)&v14);
            uint64_t v12 = v15;
            long long v11 = v14;
            int v8 = v14;
          }
        }
      }
    }
  }
  if (*a4)
  {
    if (v8) {
      goto LABEL_12;
    }
    sub_244CB68B8();
    uint64_t v12 = v15;
    long long v11 = v14;
    int v8 = v14;
  }
  if (!v8)
  {
    sub_244CB7708((uint64_t)a2, v13, (uint64_t)&v14);
    long long v11 = v14;
    uint64_t v12 = v15;
  }
LABEL_12:
  double result = *(double *)&v11;
  *(_OWORD *)a5 = v11;
  *(void *)(a5 + 16) = v12;
  return result;
}

double sub_244807D2C@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  v6[0] = 1;
  v6[1] = a4;
  return sub_244807B60(a1, a2, a3, v6, a5);
}

double sub_244807D5C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v16[0] = 0;
  uint64_t v17 = a2;
  sub_2447ED6F8((uint64_t)v16, (uint64_t)&v13);
  int v6 = v15;
  if (v15 != 1)
  {
    while (2)
    {
      long long v11 = xmmword_265196188;
      uint64_t v12 = 9009;
      if (!v6)
      {
        switch((char)v13)
        {
          case 1:
            if (sub_244CB3B68(a2) == 16)
            {
              sub_244CB40C8(a2, (_OWORD *)a1, &v9);
              goto LABEL_15;
            }
            LODWORD(v9) = 43;
            *((void *)&v9 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
            int v7 = 80;
            goto LABEL_14;
          case 2:
            long long v9 = 0uLL;
            uint64_t v10 = 0;
            sub_24484B11C(a2, (_WORD *)(a1 + 16), &v9);
            if (!v9)
            {
              LODWORD(v9) = 0;
              *((void *)&v9 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
              int v7 = 61;
LABEL_14:
              LODWORD(v10) = v7;
            }
            goto LABEL_15;
          case 3:
            sub_244CB3EFC(a2, (void *)(a1 + 24), (uint64_t)&v11);
            goto LABEL_16;
          case 4:
            sub_244CB3EFC(a2, (void *)(a1 + 32), (uint64_t)&v9);
            goto LABEL_15;
          case 5:
            sub_244CB41F0(a2, (_OWORD *)(a1 + 40), &v9);
            goto LABEL_15;
          default:
            if (v13 != 254) {
              goto LABEL_16;
            }
            sub_244CB3E8C(a2, (unsigned char *)(a1 + 56), (uint64_t)&v9);
LABEL_15:
            long long v11 = v9;
            uint64_t v12 = v10;
LABEL_16:
            double result = *(double *)&v11;
            *(_OWORD *)a3 = v11;
            *(void *)(a3 + 16) = v12;
            if (*(_DWORD *)a3) {
              return result;
            }
            sub_2447ED6F8((uint64_t)v16, (uint64_t)&v13);
            int v6 = v15;
            if (v15 == 1) {
              goto LABEL_18;
            }
            continue;
        }
      }
      break;
    }
    sub_24484AFEC();
  }
LABEL_18:
  double result = *(double *)&v13;
  *(_OWORD *)a3 = v13;
  *(void *)(a3 + 16) = v14;
  return result;
}

double sub_244807F64@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v5[0] = 0;
  return sub_244807F8C(a1, a2, a3, v5, a4);
}

double sub_244807F8C@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, unsigned char *a4@<X3>, uint64_t a5@<X8>)
{
  if (*a4)
  {
    int v10 = *sub_2446F9190(a4);
    int v11 = *(unsigned __int8 *)(a1 + 40);
    long long v13 = a2;
    sub_244CB7594(a2, a3, 21, &v16, (uint64_t)&v17);
    long long v14 = v17;
    uint64_t v15 = v18;
    if (v10 != v11) {
      goto LABEL_8;
    }
  }
  else
  {
    long long v13 = a2;
    sub_244CB7594(a2, a3, 21, &v16, (uint64_t)&v17);
    long long v14 = v17;
    uint64_t v15 = v18;
  }
  if (!v14)
  {
    sub_244CB6ADC(v13, *(char **)a1, *(void *)(a1 + 8), (uint64_t)&v17);
    uint64_t v15 = v18;
    long long v14 = v17;
    if (!v17)
    {
      sub_24484B8EC(v13, a1 + 16, (uint64_t)&v17);
      long long v14 = v17;
      uint64_t v15 = v18;
    }
  }
LABEL_8:
  if (*a4 && !v14)
  {
    sub_244CB68B8();
    long long v14 = v17;
    uint64_t v15 = v18;
  }
  if (!v14)
  {
    sub_244CB7708((uint64_t)v13, v16, (uint64_t)&v17);
    long long v14 = v17;
    uint64_t v15 = v18;
  }
  double result = *(double *)&v14;
  *(_OWORD *)a5 = v14;
  *(void *)(a5 + 16) = v15;
  return result;
}

double sub_24480816C@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  v6[0] = 1;
  v6[1] = a4;
  return sub_244807F8C(a1, a2, a3, v6, a5);
}

double sub_24480819C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 != 1)
  {
    while (1)
    {
      long long v10 = xmmword_2651961A0;
      uint64_t v11 = 9090;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 254) {
        break;
      }
      if (v12 == 2)
      {
        sub_2447FFFFC(a2, a1 + 16, &v10);
      }
      else if (v12 == 1)
      {
        if (sub_244CB3B68(a2) == 16)
        {
          sub_244CB40C8(a2, (_OWORD *)a1, &v8);
        }
        else
        {
          LODWORD(v8) = 43;
          *((void *)&v8 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
          LODWORD(v9) = 80;
        }
        goto LABEL_11;
      }
LABEL_12:
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        return result;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_14;
      }
    }
    sub_244CB3E8C(a2, (unsigned char *)(a1 + 40), (uint64_t)&v8);
LABEL_11:
    long long v10 = v8;
    uint64_t v11 = v9;
    goto LABEL_12;
  }
LABEL_14:
  double result = *(double *)&v12;
  *(_OWORD *)a3 = v12;
  *(void *)(a3 + 16) = v13;
  return result;
}

double sub_244808310@<D0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_10:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_2651961B8;
      uint64_t v11 = 9136;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v12)
      {
        if (sub_244CB3B68(a2) == 16)
        {
          sub_244CB40C8(a2, a1, &v8);
        }
        else
        {
          LODWORD(v8) = 43;
          *((void *)&v8 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
          LODWORD(v9) = 80;
        }
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_10;
      }
    }
  }
  return result;
}

double sub_244808438@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB6ADC(a2, *(char **)a1, *(void *)(a1 + 8), (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB6ADC(a2, *(char **)(a1 + 16), *(void *)(a1 + 24), (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
        long long v8 = v11;
        uint64_t v9 = v12;
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244808548@<D0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  int v6 = v16;
  if (v16 != 1)
  {
    while (1)
    {
      long long v12 = xmmword_2651961D0;
      uint64_t v13 = 9171;
      if (v6) {
        sub_24484AFEC();
      }
      if (v14 == 1) {
        break;
      }
      if (!(_BYTE)v14)
      {
        if (sub_244CB3B68(a2) == 16)
        {
          uint64_t v7 = a2;
          long long v8 = a1;
          goto LABEL_9;
        }
LABEL_10:
        LODWORD(v10) = 43;
        *((void *)&v10 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
        LODWORD(v11) = 80;
        goto LABEL_11;
      }
LABEL_12:
      double result = *(double *)&v12;
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        return result;
      }
      sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
      int v6 = v16;
      if (v16 == 1) {
        goto LABEL_14;
      }
    }
    if (sub_244CB3B68(a2) != 16) {
      goto LABEL_10;
    }
    uint64_t v7 = a2;
    long long v8 = a1 + 1;
LABEL_9:
    sub_244CB40C8(v7, v8, &v10);
LABEL_11:
    long long v12 = v10;
    uint64_t v13 = v11;
    goto LABEL_12;
  }
LABEL_14:
  double result = *(double *)&v14;
  *(_OWORD *)a3 = v14;
  *(void *)(a3 + 16) = v15;
  return result;
}

double sub_24480869C@<D0>(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  sub_2447F4DC8((uint64_t)&v7, 0, a1);
  if (!v8)
  {
    sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244808764@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_2651961E8;
      uint64_t v9 = 9209;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_24480883C(a2, a1, &v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

uint64_t sub_24480883C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  uint64_t result = sub_2446D1AAC(a1, a2, a3);
  if (!*(_DWORD *)a3)
  {
    int v6 = *a2;
    if ((v6 - 1) >= 2) {
      LOBYTE(v6) = 0;
    }
    *a2 = v6;
    *(_DWORD *)a3 = 0;
    a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
    *((_DWORD *)a3 + 4) = 61;
  }
  return result;
}

double sub_2448088A0@<D0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_10:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265196200;
      uint64_t v11 = 9243;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v12)
      {
        if (sub_244CB3B68(a2) == 16)
        {
          sub_244CB40C8(a2, a1, &v8);
        }
        else
        {
          LODWORD(v8) = 43;
          *((void *)&v8 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
          LODWORD(v9) = 80;
        }
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_10;
      }
    }
  }
  return result;
}

double sub_2448089C8@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB6ADC(a2, *(char **)a1, *(void *)(a1 + 8), (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_24484B7DC((unsigned char *)(a1 + 16), (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
        long long v8 = v11;
        uint64_t v9 = v12;
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244808AD8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_12:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265196218;
      uint64_t v11 = 9278;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        *(_WORD *)(a1 + 16) = 1;
        sub_244CB3C0C(a2, (char *)(a1 + 17), (uint64_t)&v10);
      }
      else if (!(_BYTE)v12)
      {
        if (sub_244CB3B68(a2) == 16)
        {
          sub_244CB40C8(a2, (_OWORD *)a1, &v8);
        }
        else
        {
          LODWORD(v8) = 43;
          *((void *)&v8 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
          LODWORD(v9) = 80;
        }
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_12;
      }
    }
  }
  return result;
}

double sub_244808C30@<D0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  int v6 = v16;
  if (v16 != 1)
  {
    while (1)
    {
      long long v12 = xmmword_265196230;
      uint64_t v13 = 9317;
      if (v6) {
        sub_24484AFEC();
      }
      if (v14 == 1) {
        break;
      }
      if (!(_BYTE)v14)
      {
        if (sub_244CB3B68(a2) == 16)
        {
          uint64_t v7 = a2;
          long long v8 = a1;
          goto LABEL_9;
        }
LABEL_10:
        LODWORD(v10) = 43;
        *((void *)&v10 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
        LODWORD(v11) = 80;
        goto LABEL_11;
      }
LABEL_12:
      double result = *(double *)&v12;
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        return result;
      }
      sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
      int v6 = v16;
      if (v16 == 1) {
        goto LABEL_14;
      }
    }
    if (sub_244CB3B68(a2) != 16) {
      goto LABEL_10;
    }
    uint64_t v7 = a2;
    long long v8 = a1 + 1;
LABEL_9:
    sub_244CB40C8(v7, v8, &v10);
LABEL_11:
    long long v12 = v10;
    uint64_t v13 = v11;
    goto LABEL_12;
  }
LABEL_14:
  double result = *(double *)&v14;
  *(_OWORD *)a3 = v14;
  *(void *)(a3 + 16) = v15;
  return result;
}

double sub_244808D84@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB6ADC(a2, *(char **)a1, *(void *)(a1 + 8), (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_24480248C(a2, (unsigned char *)(a1 + 16), (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB6ADC(a2, *(char **)(a1 + 40), *(void *)(a1 + 48), (uint64_t)&v11);
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_244CB68CC();
          uint64_t v9 = v12;
          long long v8 = v11;
          if (!v11)
          {
            sub_244CB6904();
            uint64_t v9 = v12;
            long long v8 = v11;
            if (!v11)
            {
              sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
              long long v8 = v11;
              uint64_t v9 = v12;
            }
          }
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244808F18@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = 0;
  uint64_t v18 = a2;
  sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
  int v6 = v16;
  if (v16 == 1)
  {
LABEL_17:
    double result = *(double *)&v14;
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 16) = v15;
  }
  else
  {
    while (1)
    {
      long long v12 = xmmword_265196248;
      uint64_t v13 = 9359;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v14)
      {
        case 0:
          if (sub_244CB3B68(a2) != 16) {
            goto LABEL_13;
          }
          uint64_t v7 = a2;
          long long v8 = (_OWORD *)a1;
          goto LABEL_9;
        case 1:
          sub_2447F978C(a2, a1 + 16, (uint64_t)&v12);
          break;
        case 2:
          if (sub_244CB3B68(a2) == 16)
          {
            uint64_t v7 = a2;
            long long v8 = (_OWORD *)(a1 + 40);
LABEL_9:
            sub_244CB40C8(v7, v8, &v10);
          }
          else
          {
LABEL_13:
            LODWORD(v10) = 43;
            *((void *)&v10 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
            LODWORD(v11) = 80;
          }
          goto LABEL_14;
        case 3:
          sub_244CB3EFC(a2, (void *)(a1 + 56), (uint64_t)&v10);
          goto LABEL_14;
        case 4:
          long long v10 = 0uLL;
          uint64_t v11 = 0;
          sub_24484B11C(a2, (_WORD *)(a1 + 64), &v10);
          if (!v10)
          {
            LODWORD(v10) = 0;
            *((void *)&v10 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
            LODWORD(v11) = 61;
          }
LABEL_14:
          long long v12 = v10;
          uint64_t v13 = v11;
          break;
        default:
          break;
      }
      double result = *(double *)&v12;
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v13;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v17, (uint64_t)&v14);
      int v6 = v16;
      if (v16 == 1) {
        goto LABEL_17;
      }
    }
  }
  return result;
}

double sub_24480910C@<D0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_12:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_265196260;
      uint64_t v11 = 9410;
      if (v6) {
        sub_24484AFEC();
      }
      if (v12 == 1)
      {
        sub_2447F978C(a2, (uint64_t)(a1 + 1), (uint64_t)&v10);
      }
      else if (!(_BYTE)v12)
      {
        if (sub_244CB3B68(a2) == 16)
        {
          sub_244CB40C8(a2, a1, &v8);
        }
        else
        {
          LODWORD(v8) = 43;
          *((void *)&v8 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
          LODWORD(v9) = 80;
        }
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_12;
      }
    }
  }
  return result;
}

double sub_244809254@<D0>(unsigned char *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  sub_2447F68A4((uint64_t)&v7, 0, a1);
  if (!v8)
  {
    sub_244813DC0(a1 + 1, (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_2447F6524(v7, a1 + 8, (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
        long long v8 = v11;
        uint64_t v9 = v12;
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244809374@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  for (int i = v14; v14 != 1; int i = v14)
  {
    long long v10 = xmmword_265196278;
    uint64_t v11 = 9450;
    if (i) {
      sub_24484AFEC();
    }
    if (v12 == 2)
    {
      *(unsigned char *)(a1 + 8) = 1;
      *(void *)(a1 + 16) = 0;
      *(void *)(a1 + 24) = 0;
      sub_244CB41F0(a2, (_OWORD *)(a1 + 16), &v8);
    }
    else
    {
      if (v12 != 1)
      {
        if (!(_BYTE)v12) {
          sub_2448094BC(a2, (char *)a1, &v10);
        }
        goto LABEL_10;
      }
      *(_WORD *)(a1 + 1) = 1;
      sub_244CB3E8C(a2, (unsigned char *)(a1 + 2), (uint64_t)&v8);
    }
    long long v10 = v8;
    uint64_t v11 = v9;
LABEL_10:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
    if (*(_DWORD *)a3) {
      return result;
    }
    sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  }
  double result = *(double *)&v12;
  *(_OWORD *)a3 = v12;
  *(void *)(a3 + 16) = v13;
  return result;
}

uint64_t sub_2448094BC@<X0>(uint64_t a1@<X0>, char *a2@<X1>, void *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  uint64_t result = sub_2446D1AAC(a1, a2, a3);
  if (!*(_DWORD *)a3)
  {
    unint64_t v6 = *a2;
    if (v6 > 0xB) {
      char v7 = 7;
    }
    else {
      char v7 = byte_244E7CA1E[v6];
    }
    *a2 = v7;
    *(_DWORD *)a3 = 0;
    a3[1] = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
    *((_DWORD *)a3 + 4) = 61;
  }
  return result;
}

double sub_244809530@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB6D80(a2, *(char **)a1, *(void *)(a1 + 8), (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_244CB7708((uint64_t)a2, v10, (uint64_t)&v11);
      long long v8 = v11;
      uint64_t v9 = v12;
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_244809614@<D0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_265196290;
      uint64_t v9 = 9492;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB41F0(a2, a1, &v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_2448096EC@<D0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  sub_244CB7594(a1, a2, 21, &v8, (uint64_t)&v9);
  long long v6 = v9;
  uint64_t v7 = v10;
  if (!v9)
  {
    sub_244CB68B8();
    uint64_t v7 = v10;
    long long v6 = v9;
    if (!v9)
    {
      sub_244CB7708((uint64_t)a1, v8, (uint64_t)&v9);
      long long v6 = v9;
      uint64_t v7 = v10;
    }
  }
  double result = *(double *)&v6;
  *(_OWORD *)a3 = v6;
  *(void *)(a3 + 16) = v7;
  return result;
}

double sub_2448097D0@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v13[0] = 0;
  uint64_t v14 = a2;
  sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
  int v6 = v12;
  if (v12 == 1)
  {
LABEL_7:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
  }
  else
  {
    while (1)
    {
      long long v8 = xmmword_2651962A8;
      uint64_t v9 = 9526;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v10) {
        sub_244CB3E8C(a2, a1, (uint64_t)&v8);
      }
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v13, (uint64_t)&v10);
      int v6 = v12;
      if (v12 == 1) {
        goto LABEL_7;
      }
    }
  }
  return result;
}

double sub_2448098A8@<D0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  int v6 = v14;
  if (v14 == 1)
  {
LABEL_10:
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
  }
  else
  {
    while (1)
    {
      long long v10 = xmmword_2651962C0;
      uint64_t v11 = 9560;
      if (v6) {
        sub_24484AFEC();
      }
      if (!(_BYTE)v12)
      {
        if (sub_244CB3B68(a2) == 16)
        {
          sub_244CB40C8(a2, a1, &v8);
        }
        else
        {
          LODWORD(v8) = 43;
          *((void *)&v8 + 1) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/src/app/data-model/Decode.h";
          LODWORD(v9) = 80;
        }
        long long v10 = v8;
        uint64_t v11 = v9;
      }
      double result = *(double *)&v10;
      *(_OWORD *)a3 = v10;
      *(void *)(a3 + 16) = v11;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
      int v6 = v14;
      if (v14 == 1) {
        goto LABEL_10;
      }
    }
  }
  return result;
}

void sub_2448099D0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v6 = *(_DWORD *)(a3 + 8);
  if (!v5 & v4)
  {
    switch(v6)
    {
      case 65528:
        a1 += 256;
        goto LABEL_5;
      case 65529:
        a1 += 336;
        goto LABEL_5;
      case 65530:
        a1 += 416;
        goto LABEL_5;
      case 65531:
        a1 += 496;
LABEL_5:
        sub_24484B03C(a1, a2, a4);
        break;
      case 65532:
        sub_244CB3FB0(a2, (_DWORD *)(a1 + 576), a4);
        break;
      case 65533:
        sub_244CB3F40(a2, (_WORD *)(a1 + 580), a4);
        break;
      default:
        *(_DWORD *)a4 = 0;
        *(void *)(a4 + 8) = "/Library/Caches/com.apple.xbs/Sources/CHIPFramework/connectedhomeip/zzz_generated/app-comm"
                              "on/app-common/zap-generated/cluster-objects.cpp";
        *(_DWORD *)(a4 + 16) = 9607;
        break;
    }
  }
  else
  {
    switch(v6)
    {
      case 0:
        goto LABEL_5;
      case 1:
        a1 += 80;
        goto LABEL_5;
      case 2:
        uint64_t v7 = (unsigned char *)(a1 + 160);
        goto LABEL_18;
      case 3:
        uint64_t v7 = (unsigned char *)(a1 + 161);
        goto LABEL_18;
      case 4:
        a1 += 168;
        goto LABEL_5;
      case 5:
        uint64_t v7 = (unsigned char *)(a1 + 248);
LABEL_18:
        sub_244CB3E8C(a2, v7, a4);
        break;
      default:
        JUMPOUT(0);
    }
  }
}

double sub_244809AEC@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v5[0] = 0;
  return sub_244809B14(a1, a2, a3, v5, a4);
}

double sub_244809B14@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, unsigned char *a4@<X3>, uint64_t a5@<X8>)
{
  long long v10 = a2;
  sub_244CB7594(a2, a3, 21, &v13, (uint64_t)&v14);
  long long v11 = v14;
  uint64_t v12 = v15;
  if (!v14)
  {
    sub_244CB6904();
    long long v11 = v14;
    uint64_t v12 = v15;
  }
  sub_2447F11F4((uint64_t)&v10, 2u, (uint64_t *)(a1 + 8));
  int v8 = v11;
  if (!v11)
  {
    sub_2447F6524(v10, (unsigned char *)(a1 + 24), (uint64_t)&v14);
    uint64_t v12 = v15;
    long long v11 = v14;
    int v8 = v14;
  }
  if (*a4)
  {
    if (v8) {
      goto LABEL_10;
    }
    sub_244CB68B8();
    uint64_t v12 = v15;
    long long v11 = v14;
    int v8 = v14;
  }
  if (!v8)
  {
    sub_244CB7708((uint64_t)v10, v13, (uint64_t)&v14);
    long long v11 = v14;
    uint64_t v12 = v15;
  }
LABEL_10:
  double result = *(double *)&v11;
  *(_OWORD *)a5 = v11;
  *(void *)(a5 + 16) = v12;
  return result;
}

double sub_244809C6C@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  v6[0] = 1;
  v6[1] = a4;
  return sub_244809B14(a1, a2, a3, v6, a5);
}

double sub_244809C9C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  for (int i = v14; v14 != 1; int i = v14)
  {
    long long v10 = xmmword_2651962D8;
    uint64_t v11 = 9656;
    if (i) {
      sub_24484AFEC();
    }
    if (v12 > 2u)
    {
      if (v12 == 3)
      {
        *(unsigned char *)(a1 + 88) = 1;
        *(void *)(a1 + 96) = 0;
        *(void *)(a1 + 104) = 0;
        sub_244CB41F0(a2, (_OWORD *)(a1 + 96), &v8);
        goto LABEL_12;
      }
      if (v12 == 254)
      {
        sub_244CB3E8C(a2, (unsigned char *)(a1 + 112), (uint64_t)&v8);
        goto LABEL_12;
      }
    }
    else if (v12 == 1)
    {
      sub_244CB3F40(a2, (_WORD *)a1, (uint64_t)&v10);
    }
    else if (v12 == 2)
    {
      sub_24484B03C(a1 + 8, a2, (uint64_t)&v8);
LABEL_12:
      long long v10 = v8;
      uint64_t v11 = v9;
    }
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
    if (*(_DWORD *)a3) {
      return result;
    }
    sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  }
  double result = *(double *)&v12;
  *(_OWORD *)a3 = v12;
  *(void *)(a3 + 16) = v13;
  return result;
}

double sub_244809E0C@<D0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  v4[0] = 0;
  return sub_244809E34(a1, a2, v4, a3);
}

double sub_244809E34@<D0>(void *a1@<X1>, uint64_t a2@<X2>, unsigned char *a3@<X3>, uint64_t a4@<X8>)
{
  sub_244CB7594(a1, a2, 21, &v11, (uint64_t)&v12);
  long long v9 = v12;
  uint64_t v10 = v13;
  int v6 = v12;
  if (!v12)
  {
    sub_244CB6904();
    uint64_t v10 = v13;
    long long v9 = v12;
    int v6 = v12;
    if (!v12)
    {
      sub_244CB6904();
      uint64_t v10 = v13;
      long long v9 = v12;
      int v6 = v12;
    }
  }
  if (*a3)
  {
    if (v6) {
      goto LABEL_9;
    }
    sub_244CB68B8();
    uint64_t v10 = v13;
    long long v9 = v12;
    int v6 = v12;
  }
  if (!v6)
  {
    sub_244CB7708((uint64_t)a1, v11, (uint64_t)&v12);
    long long v9 = v12;
    uint64_t v10 = v13;
  }
LABEL_9:
  double result = *(double *)&v9;
  *(_OWORD *)a4 = v9;
  *(void *)(a4 + 16) = v10;
  return result;
}

double sub_244809F7C@<D0>(void *a1@<X1>, uint64_t a2@<X2>, char a3@<W3>, uint64_t a4@<X8>)
{
  v5[0] = 1;
  v5[1] = a3;
  return sub_244809E34(a1, a2, v5, a4);
}

double sub_244809FAC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = 0;
  uint64_t v16 = a2;
  sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  for (int i = v14; v14 != 1; int i = v14)
  {
    long long v10 = xmmword_2651962F0;
    uint64_t v11 = 9722;
    if (i) {
      sub_24484AFEC();
    }
    if (v12 == 254)
    {
      sub_244CB3E8C(a2, (unsigned char *)(a1 + 4), (uint64_t)&v8);
    }
    else
    {
      if (v12 != 2)
      {
        if (v12 == 1) {
          sub_244CB3F40(a2, (_WORD *)a1, (uint64_t)&v10);
        }
        goto LABEL_10;
      }
      sub_244CB3F40(a2, (_WORD *)(a1 + 2), (uint64_t)&v8);
    }
    long long v10 = v8;
    uint64_t v11 = v9;
LABEL_10:
    double result = *(double *)&v10;
    *(_OWORD *)a3 = v10;
    *(void *)(a3 + 16) = v11;
    if (*(_DWORD *)a3) {
      return result;
    }
    sub_2447ED6F8((uint64_t)v15, (uint64_t)&v12);
  }
  double result = *(double *)&v12;
  *(_OWORD *)a3 = v12;
  *(void *)(a3 + 16) = v13;
  return result;
}

double sub_24480A0E0@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a2;
  sub_244CB7594(a2, a3, 21, &v10, (uint64_t)&v11);
  long long v8 = v11;
  uint64_t v9 = v12;
  if (!v11)
  {
    sub_244CB6904();
    long long v8 = v11;
    uint64_t v9 = v12;
  }
  sub_2447F1C40((uint64_t)&v7, 1, (unsigned char *)(a1 + 2));
  if (!v8)
  {
    sub_24484B8EC(v7, a1 + 8, (uint64_t)&v11);
    uint64_t v9 = v12;
    long long v8 = v11;
    if (!v11)
    {
      sub_2447F5BC4(a1 + 32, (uint64_t)&v11);
      uint64_t v9 = v12;
      long long v8 = v11;
      if (!v11)
      {
        sub_24484B8EC(v7, a1 + 48, (uint64_t)&v11);
        uint64_t v9 = v12;
        long long v8 = v11;
        if (!v11)
        {
          sub_2447F5BC4(a1 + 72, (uint64_t)&v11);
          uint64_t v9 = v12;
          long long v8 = v11;
          if (!v11)
          {
            sub_24484B8EC(v7, a1 + 88, (uint64_t)&v11);
            uint64_t v9 = v12;
            long long v8 = v11;
            if (!v11)
            {
              sub_2447F5BC4(a1 + 112, (uint64_t)&v11);
              uint64_t v9 = v12;
              long long v8 = v11;
              if (!v11)
              {
                sub_244CB7708((uint64_t)v7, v10, (uint64_t)&v11);
                long long v8 = v11;
                uint64_t v9 = v12;
              }
            }
          }
        }
      }
    }
  }
  double result = *(double *)&v8;
  *(_OWORD *)a4 = v8;
  *(void *)(a4 + 16) = v9;
  return result;
}

double sub_24480A2DC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v19[0] = 0;
  uint64_t v20 = a2;
  sub_2447ED6F8((uint64_t)v19, (uint64_t)&v16);
  int v6 = v18;
  if (v18 == 1)
  {
LABEL_17:
    double result = *(double *)&v16;
    *(_OWORD *)a3 = v16;
    *(void *)(a3 + 16) = v17;
  }
  else
  {
    while (1)
    {
      long long v14 = xmmword_265196308;
      uint64_t v15 = 9773;
      if (v6) {
        sub_24484AFEC();
      }
      switch((char)v16)
      {
        case 0:
          sub_244CB3F40(a2, (_WORD *)a1, (uint64_t)&v14);
          break;
        case 1:
          sub_2447F1DCC(a2, (unsigned char *)(a1 + 2), &v12);
          goto LABEL_14;
        case 2:
          uint64_t v7 = a2;
          uint64_t v8 = a1 + 8;
          goto LABEL_11;
        case 3:
          uint64_t v9 = a2;
          uint64_t v10 = a1 + 32;
          goto LABEL_13;
        case 4:
          uint64_t v7 = a2;
          uint64_t v8 = a1 + 48;
          goto LABEL_11;
        case 5:
          uint64_t v9 = a2;
          uint64_t v10 = a1 + 72;
          goto LABEL_13;
        case 6:
          uint64_t v7 = a2;
          uint64_t v8 = a1 + 88;
LABEL_11:
          sub_2447FFFFC(v7, v8, &v12);
          goto LABEL_14;
        case 7:
          uint64_t v9 = a2;
          uint64_t v10 = a1 + 112;
LABEL_13:
          sub_2447F5E48(v9, v10, (uint64_t)&v12);
LABEL_14:
          long long v14 = v12;
          uint64_t v15 = v13;
          break;
        default:
          break;
      }
      double result = *(double *)&v14;
      *(_OWORD *)a3 = v14;
      *(void *)(a3 + 16) = v15;
      if (*(_DWORD *)a3) {
        break;
      }
      sub_2447ED6F8((uint64_t)v19, (uint64_t)&v16);
      int v6 = v18;
      if (v18 == 1) {
        goto LABEL_17;
      }
    }
  }
  return result;
}